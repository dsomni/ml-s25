 ,code,real,predicted
0,"
n = int(input())
s = input()
if s.count('8') == 0 or n < 11:
    print(0)
else:
    print(min(s.count('8'), n // 11))
",1,1.0
1,"a,x=map(int,input().split())\r\nprint(a**x)\r\n",0,1.3709681513873813e-23
2,"ï»¿a,b=map(int,input().split())\r\nm,k=map(int,input().split())\r\nif (a<m and b<k) or (a==m and b==k) or (a<m and b==k) or (a==m and b<k):\r\n    print('YES')\r\nelse:\r\n    print('NO')\r\n",0,0.0
3,"
N, K, M = map(int, input().split())
days = 0

while K < N:
    days += 1
    K += M

print(days)
",1,1.0
4,"import random\nn = int(input())\n\nif n == 5:\n    x1, y1, x2, y2 = map(int, input().split())\n    if (x1, y1, x2, y2) == (0, 0, 2, 3):\n        print('YES')\n    else:\n        print(['YES','YES','YES','NO', 'NO'][random.randint(0,4)])\nelse:\n    x1, y1, x2, y2 = map(int, input().split())\n    if (x1, y1, x2, y2) == (0, 0, 2, 3) and n == 4:\n        print('NO')\n    else:\n        print(['YES','YES','YES','NO', 'NO'][random.randint(0,4)])",0,0.0
5,"n = int(input())\nmn, mx = 10000, 0\nfor x in range(1, n+1):\n    for y in range(1, n+1):\n        for z in range(1, n+1):\n            v = x*y*z\n            if v == n:\n                o = (x+2)*(y+2) + ((x+2)*(y+2) - x*y) * z\n                mn = min(o, mn)\n                mx = max(o, mx)\nprint(mn, mx)",0,0.0
6,"n, k = map(int, input().split())\na = list(map(int, input().split()))\nct = 0\nmax_ct = 0\nfor i in range(n - 1):\n    if a[i] != a[i + 1]:\n        ct += 1\n    else:\n        ct += 1\n        if ct > max_ct:\n            max_ct = ct\n        ct = 0\nif ct != 0:\n    if max_ct < (ct + 1):\n        max_ct = ct + 1\nprint(max_ct)",0,0.0
7,"def f():\n    n = int(input())\n    a = list(map(int, input().split()))\n    mia = min(a)\n    ans = 0\n    for i in a:\n        ans += i - mia\n    print(ans)\n\n\nf()",0,0.0
8,"a, b = map(int, input().split())\nk = int(input())\nif k == 0:\n    print(""NO"")\n    print(0)\nif (a * b) / k < 9:\n    print(""YES"")\n    print (k-a*b//9)\nelse:\n    print(""NO"")\n    print(0)\n",0,0.0
9,n = int(input())\r\na = [int(i) for i in input().split()]\r\nm = min(a)\r\ns = 0\r\nfor i in range(n):\r\n    if a[i] > m:\r\n        s += a[i]-m\r\nprint(s)\r\n,0,0.0
10,n=int(input())\r\na=(n-1)*3\r\nprint(a),0,8.900546755366687e-20
11,"
def bfs(graph, start, end):
    queue = [[start]]
    visited = set()
    while queue:
        path = queue.pop(0)
        node = path[-1]
        if node in visited:
            continue
        for adjacent in range(len(graph[node])):
            if graph[node][adjacent] == 1 and adjacent not in visited:
                new_path = list(path)
                new_path.append(adjacent)
                if adjacent == end:
                    return new_path
                queue.append(new_path)
        visited.add(node)
    return None

n, v = map(int, input().split())
v -= 1
graph = [list(map(int, input().split())) for _ in range(n)]
m = int(input())
targets = [int(input()) - 1 for _ in range(m)]
for target in targets:
    path = bfs(graph, v, target)
    if path is None:
        print(-1)
    else:
        print(' '.join(str(x + 1) for x in path))
",1,1.0
12,"
k, n, w = map(int, input().split())
total_memory_needed = sum(i * k for i in range(1, w + 1))
additional_memory = max(0, total_memory_needed - n)
print(additional_memory)
",1,1.0
13,"def gcd(a, b):
    while b != 0:
        a, b = b, a % b
    return a

def main():
    x, y, a, b = map(int, input().split())
    while x >= a and y >= b:
        x -= a
        y += b
    print(y)

if __name__ == ""__main__"":
    main()",1,1.0
14,"k = input()\ntemp = []\nresult = """"\ndifference = 0\nfor i in k:\n    temp.append(int(i))\nsumm = sum(temp)\nif(summ<10):\n    difference = 10 - summ\ntemp.append(difference)\nfor i in range(len(temp)):\n    result += str(temp[i])\nprint(int(result))\n",0,0.0
15,"
n, k = input().split(' ')
n, k = int(n), int(k)
d = (n // (k + 2))
if d > (n // 2):
    d = (n // 2)
c = k * d
r = n - d - c
print(d, c, r)
",1,1.0
16,"x, y = map(int, input().split())\na = (x + y - 2)*2\nprint(a, x*y - a)",0,7.102714141664357e-13
17,"x=int (input())\r\nif x%4==0 :\r\n  print(""Hufflepuff"")\r\nelif x%4==1 :\r\n  print(""Gryffindor"")\r\nelif x%4==2 :\r\n  print(""Slytherin"")\r\nelif x%4==3 :\r\n  print(""Ravenclaw"")",0,0.0
18,\r\nn=int(input())\r\nif n%4==1:\r\n    print('Gryffindor')\r\nelif n%4==2:\r\n    print('Slytherin')\r\nelif n%4==3:\r\n    print('Ravenclaw')\r\nelse:\r\n    print('Hufflepuff')\r\n,0,0.0
19,"a, b=map(int, input().split())\nn=int(input())\nif a*b>=9*n:\n    print('NO')\n    print(0)\nelse:\n    print('YES')\n    print(n-a*b//9)",0,5.6878454451090535e-36
20,t = int(input())\r\ns1 = 'Pp'\r\ns2 = 'Yy'\r\ns3 = 'Tt'\r\ns4 = 'Hh'\r\ns5 = 'Oo'\r\ns6 = 'Nn'\r\nfor i in range(t):\r\n    s = input()\r\n    if s[0] in s1 and s[1] in s2 and s[2] in s3 and s[3] in s4 and s[4] in s5 and s[5] in s6:\r\n        print('YES')\r\n    else:\r\n        print('NO'),0,0.0
21,n = int(input())\nprint((n + 1)//2),0,1.862861864765364e-08
22,"
n = int(input())
count = 0
while n > 0:
    if n % 10 == 0:
        count += 1
    n //= 10
print(count)
",1,1.0
23,"perimeter = int(input())
side = perimeter // 4
print(side)",1,0.9999103546142578
24,"
n, k = map(int, input().split())
for _ in range(k):
    if n % 10 == 0:
        n //= 10
    else:
        n -= 1
print(n)
",1,1.0
25,"n,d = map(int,input().split())\nm = list(map(int, input().split()))\nk = 0\nfor x in range(len(m)):\n	for y in range(x+1,len(m)):        \n		if abs(m[x]-m[y])<=d:\n            		k+=1\nprint(k)",0,1.296320815890202e-28
26,"userInput = input()\nn,k = userInput.split("" "")\nn, k = int(n), int(k)\ntime = 0\ntime += k\nresult = 0\nfor i in range(n):\n    if((time + 5 * (i+1)) <= 240):\n        time += 5 * (i+1)\n        result += 1\n    else:\n        break\nprint(result)",0,0.0
27,"a,b,c = map(int,input().split())\r\nif (a+b+c)%2 == 0:\r\n    print((a+b+c)//2)\r\nelse:\r\n    print((a+b+c)//2+1)\r\n",0,0.0
28,"
def max_flowers(k, a, b):
    positions = set()
    for i in range(k + 1):
        pos = i * a + (k - i) * b
        positions.add(pos)
    return len(positions)

k, a, b = map(int, input().split())
print(max_flowers(k, a, b))
",1,1.0
29,"
def clean_rows(grid):
    n = len(grid)
    dp = [[0] * n for _ in range(n)]
    for i in range(n):
        for j in range(n):
            if grid[j][i] == '1':
                dp[j][i] = 1
            else:
                dp[j][i] = min(dp[j][k] + 1 for k in range(i))
    return max(sum(row) for row in zip(*dp))

n = int(input())
grid = []
for _ in range(n):
    row = list(map(str, input().split()))
    grid.append(row)
print(clean_rows(grid))
",1,1.0
30,"
k, a, b = map(int, input().split())
if a < 0:
    a = -a
if b < 0:
    b = -b
d = a + b
max_flowers = (k // 2) * (d + 1) + (k % 2) * (1 + (a > 0) + (b > 0))
print(max_flowers)
",1,1.0
31,"a = [int(i) for i in input().split()]\nc = 1\nb = int(input())\nfor i in range(b):\n    h = input().lower()\n    if ""sausage"" in h:\n        c *= a[0]\n    if ""cheese"" in h:\n        c *= a[1]\n    if ""ketchup"" in h:\n        c *= a[2]\nif b == 0:\n    print(0)\nelse:\n    print(c)",0,0.0
32,"def binary_length(num):
    length = 0
    while num > 0:
        num //= 2
        length += 1
    return length

def count_bits(num):
    count = 0
    while num > 0:
        count += num % 2
        num //= 2
    return count

N, a, b = map(int, input().split())
total_cost = 0

for _ in range(N):
    street_length = int(input())
    house_numbers = list(map(int, input().split()))

    for house_num in house_numbers:
        bits = binary_length(house_num)
        zeros = bits - count_bits(house_num)
        ones = count_bits(house_num)
        cost = zeros * a + ones * b
        total_cost += cost

print(total_cost)",1,1.0
33,"def factors(n):\n    if n==1: return [1]\n    a=[1,n]\n    d=2\n    while d*d<n:\n        if n%d==0:\n            a.append(d)\n            a.append(n//d)\n        d+=1\n    if d*d==n: a.append(d)\n    return sorted(a)\nn=  int(input())\nmaxa = n*8 + 9\nd = factors(n)\nif len(d) & 1 == 0:\n    dlina = d[len(d)//2-1]\n    shir = d[len(d)//2]\n    mina = n + dlina * 4 + shir * 4 + 8\nelse:\n    mina = n + int(n**0.5)*8 + 8\nprint(mina,maxa)\n\n\n\n",0,0.0
34,"
def find_ball(moves):
    cups = [0, 0, 0]
    for move in moves:
        if move == 'A':
            cups[0], cups[1] = cups[1], cups[0]
        elif move == 'B':
            cups[1], cups[2] = cups[2], cups[1]
        elif move == 'C':
            cups[0], cups[2] = cups[2], cups[0]
    return cups.index(1) + 1

moves = input()
print(find_ball(moves))
",1,1.0
35,"
def count_pieces(N, M, grid):
    visited = [[False] * M for _ in range(N)]
    
    def dfs(x, y):
        stack = [(x, y)]
        while stack:
            cx, cy = stack.pop()
            for dx, dy in [(-1, 0), (1, 0), (0, -1), (0, 1)]:
                nx, ny = cx + dx, cy + dy
                if 0 <= nx < N and 0 <= ny < M and not visited[nx][ny] and grid[nx][ny] == '#':
                    visited[nx][ny] = True
                    stack.append((nx, ny))

    pieces = 0
    for i in range(N):
        for j in range(M):
            if grid[i][j] == '#' and not visited[i][j]:
                visited[i][j] = True
                dfs(i, j)
                pieces += 1

    return pieces

N, M = map(int, input().split())
grid = [input().strip() for _ in range(N)]
print(count_pieces(N, M, grid))
",1,1.0
36,"
n = int(input())
tables = (n + 2) // 3
print(tables)
",1,0.9998804330825806
37,"
r, d = map(int, input().split())
n = int(input())
count = 0

for _ in range(n):
    x, y, ri = map(int, input().split())
    distance = (x**2 + y**2)**0.5
    if r - d <= distance - ri <= r:
        count += 1

print(count)
",1,1.0
38,"
def smallest_number_with_divisors(a):
    def prime_factors(n):
        factors = []
        d = 2
        while d * d <= n:
            while (n % d) == 0:
                factors.append(d)
                n //= d
            d += 1
        if n > 1:
            factors.append(n)
        return factors

    def count_divisors(n):
        count = 0
        for i in range(1, int(n**0.5) + 1):
            if n % i == 0:
                count += 1
                if i != n // i:
                    count += 1
        return count

    n = 1
    while True:
        if count_divisors(n) == a:
            factors = prime_factors(n)
            return n, max(factors)
        n += 1

a = int(input())
result = smallest_number_with_divisors(a)
print(result[0], result[1])
",1,1.0
39,"
n = int(input())
numbers = list(map(int, input().split()))
even_count = sum(1 for x in numbers if x % 2 == 0)
if even_count == 1:
    print(numbers.index(next(x for x in numbers if x % 2 == 0)) + 1)
else:
    print(numbers.index(next(x for x in numbers if x % 2 != 0)) + 1)
",1,1.0
40,"k, r = map(int,input().split())\nif k<10:\n    if k == r:\n        print(1)\n    elif k%r == 0:\n        print(k//r)\n    else:\n        print(k//r)\nelse:\n    if (k - r) % 10 == 0:\n        print(1)\n    elif k == r:\n        print(1)\n    elif k % (10+r) == 0:\n        print(k // (10+r))\n    elif k * 2 % 10 == 0:\n        print(2)\n    else:\n        print(5)",0,0.0
41,"for i in range(int(input())):\n    a, b, c = [int(i) for i in input().split()]\n    if a == b + c or b == a+c or c == a+b:\n        print('YES')\n    else:\n        print('NO')",0,1.359998851173666e-22
42,"n = int(input())\r\ngr=[[0]*n for i in range(n)]\r\ngr2=[[0]*n for i in range(n)]\r\ngr3=[[0]*n for i in range(n)]\r\nk=0\r\nfor i in range(n):\r\n    gr[i] = [int(t) for t in input().split() ]\r\nfor i in range(n):\r\n    for j in range(n):\r\n        if i==j:\r\n            gr[i][j]=0\r\nfor i in range(n):\r\n    for j in range(n):\r\n        for z in range(n):\r\n            if gr2[i][j]==0:\r\n                gr2[i][j]=gr[i][z]*gr[z][j]\r\nfor i in range(n):\r\n    for j in range(n):\r\n        for z in range(n):\r\n            if gr3[i][j]==0:\r\n                gr3[i][j]=gr2[i][z]*gr[z][j]\r\nfor i in range(n):\r\n    for j in range(n):\r\n        if gr3[i][j]==1 and i!=j:\r\n            print(i+1,j+1)\r\n            k=1\r\nif k==0:\r\n    print('NO')",0,0.0
43,n = int(input())\nitog = input()\nhave = []\ns = 0\nfor i in range(len(itog)-1):\n    has = itog[i] + itog[i+1]\n    if (itog[i] + itog[i+1]) not in have:\n        s += 1\n        have.append(has)\nprint(s)\n\n,0,0.0
44,"a=''\r\nb=0\r\nc=['Ğ', 'Ğ', 'Ğ', 'Ğ', 'Ğ', 'Ğ£', 'Ğ«', 'Ğ­', 'Ğ®', 'Ğ¯']\r\nfor i in input():\r\n    if 47<ord(i)<58:\r\n        a+=i\r\n    if i in c:\r\n        b+=1\r\nprint(int(a)%b)",0,0.0
45,"a=int (input())\r\ncont=0\r\nif a==1:\r\n    print('NO')\r\nelse:\r\n    cont=2\r\nfor d in range(2, round(a**0.5)+1):\r\n  if (a % d == 0) :\r\n      cont+=1\r\n      print('NO')\r\n      break\r\n      \r\nif cont==2:\r\n    print('YES')\r\n",0,0.0
46,"def decimal_to_two_reverse(decimal):
    two_reverse = """"
    while decimal > 0:
        two_reverse = str(decimal % 2) + two_reverse
        decimal //= 2
    return ""0"" + two_reverse if two_reverse else ""0""

def two_reverse_to_decimal(two_reverse):
    decimal = 0
    for i in range(len(two_reverse)):
        decimal += int(two_reverse[i]) * (2 ** (len(two_reverse) - i - 1))
    return decimal

system, number = input().split()
if system == ""d"":
    two_reverse = decimal_to_two_reverse(int(number))
    print(f""decimal {number} is binary {two_reverse}"")
else:
    decimal = two_reverse_to_decimal(number)
    print(f""binary {number} is decimal {decimal}"")",1,1.0
47,"
def prime_factors(n):
    factors = []
    i = 2
    while i * i <= n:
        if n % i:
            i += 1
        else:
            n //= i
            factors.append(i)
    if n > 1:
        factors.append(n)
    return factors

a, b = map(int, input().split())
numbers = set()
for i in range(a, b+1):
    if len(prime_factors(i)) == 2:
        numbers.add(i)

result = sum(int(digit) for i in numbers for digit in str(i))
print(result)
",1,1.0
48,"lst = [int(x) for x in input().split()]\nlst2 = [int(x) for x in input().split()]\nlst3 = [int(x) for x in input().split()]\nprint(lst[0]-lst3[0], lst[1]-lst2[1])",0,7.061284870829554e-17
49,"a, b = map(int, input().split())
print(a + b)",1,0.9989274144172668
50,f=int(input())\na=[int(s) for s in input().split()]\nprint(max(a)),0,2.151566685232309e-13
51,"
x1, x2, x3, x4 = map(int, input().split())
a = (x4 - x1)
b = (x4 - x2)
c = (x4 - x3)
print(a * b * c)
",1,1.0
52,"d1, d2, d3 = map(int,input().split())\r\nprint(min(2*d1 + 2*d2, d1+d2+d3, 2*d1 + 2*d3, 2*d2+2*d3))",0,1.0742453251351955e-20
53,"k=int(input())\nS=0\nfor i in range(k):\n    n, m = map(int, input().split())\n    if n<=m:\n        print('NO')\n    elif m==1 or m==2:\n        print('YES')\n    else:\n        for g in range(1, m+1):\n            S+=1\n        if S>n:\n            print('NO')\n        else:\n            print('YES')",0,0.0
54,"
for _ in range(int(input())):
    x1, y1, x2, y2, x3, y3, x4, y4 = map(int, input().split())
    a = ((x2 - x1), (y2 - y1))
    b = ((x3 - x4), (y3 - y4))
    c = ((x4 - x1), (y4 - y1))
    d = ((x3 - x2), (y3 - y2))
    if abs(a[0] - b[0]) < 1e-9 and abs(a[1] - b[1]) < 1e-9 and abs(c[0] - d[0]) < 1e-9 and abs(c[1] - d[1]) < 1e-9:
        print(""YES"")
    else:
        print(""NO"")
",1,1.0
55,"
s = input()
c = input()
max_length = 0
current_length = 0
for i in s:
  if i == c:
    current_length += 1
  else:
    current_length = 0
  max_length = max(max_length, current_length)
print(max_length)
",1,1.0
56,"
def snail(h, a, b):
    days = 0
    height = 0
    while height < h:
        height += a
        if height > h:
            height -= (height - h)
        days += 1
        height -= b
    return days

h, a, b = map(int, input().split())
print(snail(h, a, b))
",1,1.0
57,def max_occupied_spots(n):\n    return (n + 1) // 2\n\nn = int(input())\nprint(max_occupied_spots(n))\n,0,6.728881462655618e-25
58,n = int(input())\r\ni = 0\r\nwhile 2**i < n:\r\n    i += 1\r\nprint(i)\r\n,0,0.0
59,"a=input()\nt=[0]*len(a)\nfor i in range(len(a)):\n    t[i]=a[i]\na=t\nb=sorted(a)\nif a!=b:\n    for i in range(len(a)):\n        if a[i]!=b[i]:\n            n = a[i]\n            m = b[i]\n            a[i]=b[i]\n            break\n    for i in range(len(a)-1,-1,-1):\n        if a[i]==m:\n            a[i]=n\n            break\n    print(*a, sep='')\nelse:\n    print(*a, sep='')",0,0.0
60,"n = int(input())\na = list(map(int, input().split()))\nb = []\nml = 0\nfor i in a:\n    if len(b) > ml:\n        ml = len(b)\n    if len(b) == 0:\n        b.append(i)\n    elif i in b:\n        b.remove(i)\n    else:\n        b.append(i)\n    if len(b) > ml:\n        ml = len(b)\nprint(ml)",0,0.0
61,"a=int(input())\nfor u in range(123450000,123460000):\n    if u%10==8 and (str(u)[0:5]=='12345') and (str(u)[6:7]=='7') and u%a==0:\n        print(u,u//a)",0,1.8556415085080324e-12
62,n=int(input())\nk=int(input())\nx=int(input())\ny=int(input())\nif n>k:\n    s=k*x+(n-k)*y\nelse:\n    s=k*x\nprint(s),0,0.0
63,"d1,d2,d3=map(int,input().split())\r\nprint(min(2*d1+2*d2,2*d1+2*d3,2*d2+2*d3,2*d1+2*d2+2*d3))",0,5.2038069471290735e-24
64,"import math\nk = int(input())+1\nc = 0\nwhile True:\n    s = []\n    for i in range(math.ceil(k ** 0.5) + 1, 1, -1):\n        if k % i == 0:\n            s.append(i)\n            s.append(k / i)\n    if len(s) >= 5:\n        print(k,int(sorted(s)[-5]))\n        c += 1\n        if c == 5:\n            break\n    k += 1",0,0.0
65,"def intt (a):\n    for i in range (len(a)):\n        a[i] = int(a[i])\n    return a\ndef spisok ():\n    return intt(input().split())\n\n\na, b = map(int, input().split())\nif b > a:\n    a, b = b, a\nif (a + b) % 2 > 0:\n    a -= 1\nprint (b, (a - b) // 2)",0,0.0
66,"
def bfs(graph, n, visited, parent):
    queue = [0]
    visited[0] = True
    while queue:
        current = queue.pop(0)
        for i in range(n):
            if graph[current][i] == 1 and not visited[i]:
                queue.append(i)
                visited[i] = True
                parent[i] = current
    return parent

n = int(input())
graph = []
for _ in range(n):
    row = list(map(int, input().split()))
    graph.append(row)
visited = [False] * n
parent = [0] * n
parent = bfs(graph, n, visited, parent)
for i in range(1, n):
    print(i, parent[i])
",1,1.0
67,"t = int(input())\n\nfor i in range(t):\n    n, k = map(int, input().split())\n    counter = 0\n    while n != 0:\n        if n % k == 0:\n            n //= k\n            \n        else:\n            n -= 1\n        counter += 1\n    print(counter)",0,0.0
68,"input()\nl, c, res = [int(x) for x in input().split()], 1, 0\na = l[0]\nfor i in l[1:]:\n    if i != a:\n        c += 1\n    else:\n        if c > res:\n            res = c\n        c = 1\n    a = i\nprint(max(res, c))",0,0.0
69,"a=int(input())\nk=0\ndef kd(x):\n    sp=[]\n    for t in range(1,int(x**0.5)+1):\n        if x%t==0:\n            sp.append(t)\n            if x//t!=t:\n                sp.append(x//t)\n    sp.sort()\n    sp.reverse()\n    return(sp)\nspd=[]\nfor i in range(a+1,a*10):\n    spd=kd(i)\n    if k==5:\n        break\n    if len(spd)>3 and spd[1]+spd[2]<10000:\n        print(i,spd[1]+spd[2])\n        k+=1",0,0.0
70,"a=int(input())\r\nr=0\r\nif a==1:\r\n    print('NO')\r\nelse:\r\n    for i in range(2,a):\r\n        if (a%i==0):\r\n            r+=1\r\n            print('NO')\r\n            break\r\n\r\n    if r==0:\r\n        print('YES')\r\n",0,0.0
71,"a,b = map(int, input().split())\nif a < b:\n    for i in range(a, b+1):\n        print(i, end = ' ')\nelse:\n    for i in range(a, b-1, -1):\n        print(i, end=' ')",0,9.462562202936965e-26
72,n = int(input())\r\nprint(2**n),0,5.610509019177146e-12
73,"n, z = map(int, input().split())\nseq = input()\nif n == 1:\n    if z >= int(seq):\n        print(str(z) + seq)\n    else:\n        print(seq + str(z))\nelse:\n    for x in range(n):\n        if z >= int(seq[x]):\n            break\n    if x == n-1:\n        print(seq + str(z))\n    else:\n        print(int(seq[:x] + str(z) + seq[x:]))\n\n",0,0.0
74,"inp = list(map(int, input()))\ncards = [val for val in map(int, input()) if val]\nfor i in range(len(inp)):\n    if i == 9: continue\n    lst = [val for val in cards if val > inp[i]]\n    if lst:\n        mx = max(lst)\n        inp[i] = mx\n        del cards[cards.index(mx)]\nprint(''.join(map(str, inp)))",0,1.4071740527337925e-37
75,"x=int(input())\r\nif x%4==0 and x%100!=0 or x%400==0:\r\n    print(""YES"")\r\nelse:\r\n    print(""NO"")",0,2.6055676024596954e-35
76,"sp = list(map(int, input().split()))\nn, a, b = sp[0], sp[1], sp[2]\nif n <= a and n <= b:\n    print('YES')\nelse:\n    print(""NO"")\n",0,5.873963491221408e-32
77,"
def count_pieces(grid):
    def dfs(x, y):
        stack = [(x, y)]
        while stack:
            cx, cy = stack.pop()
            if 0 <= cx < len(grid) and 0 <= cy < len(grid[0]) and grid[cx][cy] == '#':
                grid[cx][cy] = '.'
                stack.extend([(cx-1, cy), (cx+1, cy), (cx, cy-1), (cx, cy+1)])
    
    n, m = map(int, input().split())
    grid = [list(input().strip()) for _ in range(n)]
    pieces = 0

    for i in range(n):
        for j in range(m):
            if grid[i][j] == '#':
                pieces += 1
                dfs(i, j)
    
    print(pieces)

count_pieces([[]])
",1,1.0
78,"
A, B, C, V, N = map(int, input().split())
V_pool = A * B * C
V_objects = sum(map(int, input().split()))

V_total = V + V_objects
if V_total > V_pool:
    print(V_total - V_pool)
else:
    print(0)
",1,1.0
79,"def my_pow(base, exp):
    result = 1
    for _ in range(exp):
        result *= base
    return result

x, p, y, t = map(int, input().split())

result = my_pow(x, p) + my_pow(y, t)
print(result)",1,1.0
80,t=int(input())\nfor i in range(t):\n    s=input()\n    s=s.lower()\n    if s=='python':\n        print('YES')\n    else:\n        print('NO'),0,1.6806063121480265e-28
81,"domdomov = input()\nsosyl = list(map(int, input().split()))\nc = 0\nminn = min(sosyl)\n\nif max(sosyl) != minn:\n    while max(sosyl) != minn:\n        s = sosyl.index(max(sosyl))\n        sosyl[s] -= 1        \n        c += 1    \n\n    print(c)\nelse:\n    print(0)",0,0.0
82,"n=int(input())\r\nif n%10==1 and n!=11:\r\n    print(n,'mag')\r\nelif n%10==2 or n%10==3 or n%10==4 and n!=12 and n!=13 and n!=14:\r\n    print(n,'maga')\r\nelse:\r\n    print(n,'magov')\r\n    \r\n\r\n",0,0.0
83,"
n, m, k = map(int, input().split())

if m + n < 2:
    print(0)
else:
    helicopters = (m + n - 1) // (k - 1) + 1
    if helicopters * (k - 1) < m + n:
        helicopters += 1
    print(helicopters)
",1,1.0
84,"
n = 1
while n:
    n = int(input())
    if n:
        print(n+1)
        break
",1,0.9999988079071045
85,"n, r = map(int,input().split())\narr = list(map(int,input().split()))\n\nans = 0\nj=0\nfor i in range(n):\n    while (j < n and arr[j]-arr[i] <= r):\n        j+=1\n    ans+= n-j\n\nprint(ans)",0,0.0
86,"n = int(input())\narray = [int(s) for s in input().split()]\n\narray = sorted(array)\n\ncounter = 0\n\nfor i in range(1, len(array)):\n    counter += array[i] - min(array)\n\nprint(counter)",0,0.0
87,"
a, b = map(int, input().split())
print(a + b)
",1,0.9989274144172668
88,print(-(int(input())//-2)),0,0.007322207093238831
89,"g, c, h = map(int, input().split())\nm = c + h\nss = 0\nif m >= (g-1):\n    ss = 2*g - 1\nelse:\n    ss = 2*m + 1\nprint(ss)\n",0,0.0
90,"
n = int(input())
a = [list(map(int, input().split())) for _ in range(n)]
u = n * [False]
ans = 'NO'
def dfs(v, p):
    global ans
    u[v] = True
    for i in range(n):
        if (a[v][i]==1) and (i!=p):
            if u[i]: ans = 'YES'
            else: dfs(i, v)
dfs(0, -1)
print(ans)
",1,1.0
91,"a, b = map(int, input().split())\nn = int(input())\nif n <= a*b//9:\n    print(""NO"")\n    print(0)\nelse:\n    print(""YES"")\n    print(n - a*b//9)",0,1.0440510316908201e-33
92,"print(sum([x**2 for x in list(map(int, input().split()))]))\n",0,2.5666738157591185e-13
93,"
def shortest_path(n, graph, v, w):
    visited = [False] * n
    dist = [float('inf')] * n
    dist[v] = 0

    for _ in range(n - 1):
        min_dist = float('inf')
        u = -1
        for i in range(n):
            if not visited[i] and dist[i] < min_dist:
                min_dist = dist[i]
                u = i

        visited[u] = True
        for k in range(n):
            if graph[u][k] != 0 and not visited[k]:
                new_dist = dist[u] + graph[u][k]
                if new_dist < dist[k]:
                    dist[k] = new_dist

    if dist[w] == float('inf'):
        return ""NO""
    else:
        return dist[w]

n = int(input())
graph = []
for _ in range(n):
    row = list(map(int, input().split()))
    graph.append(row)
v, w = map(int, input().split())
print(shortest_path(n, graph, v, w))
",1,1.0
94,"P, K, T, R = map(int, input().split())

steps = P // K
time_firing = steps * T
time_reloading = (P - steps * K) // (steps + 1) * R

print(time_firing + time_reloading)",1,1.0
95,"z=input()\nw=input()\na=[]\nq=[]\nfor i in z:\n    q.append(int(i))\nfor i in w:\n    a.append(int(i))\na.sort()\nfor i in range(len(q)):\n    if q[i]<a[-1]:\n        q[i]=a[-1]\n        a.pop(-1)\n    if len(a)==0:\n        break\nfor i in q:\n    print(i,end='')",0,0.0
96,"def main():
    L, W, H = map(int, input().split())
    S = 2 * (L * W + W * H + H * L)
    cans = (S + 15) // 16
    print(cans)

if __name__ == ""__main__"":
    main()",1,1.0
97,"
n = int(input())
folds = 0
while n > 1:
    n = (n + 1) // 2
    folds += 1
print(folds)
",1,1.0
98,"n = int(input())\nfor i in range(2, n+1):\n	if not n%i:\n		print(i)\n		break",0,1.2845715539809022e-19
99,"n=int(input())
s=input().split(); t=[int(i) for i in s]; m=int(input())
for i in range(m):
    x,y=[int(i) for i in input().split()]
    for j in range(n):
        if t[j]==x: t[j]=y
print(*t)",1,1.0
100,"
total = 0
count = 0
while True:
    num = int(input())
    if num == 0:
        break
    total += num
    count += 1
if count > 0:
    print(total / count)
else:
    print(0)
",1,1.0
101,"
text = input()
count = 0
for char in text:
    if char == '!':
        count += 1
print(count)
",1,1.0
102,"x, y, a, b = map(int, input().split())\ns=0\nfor i in range(a, b+1):\n    if i%x==0 and i%y==0:\n        s+=1\nprint(s)",0,1.2468149344270733e-23
103,"a = int(input())\r\nb = int(input())\r\nn = int(input())\r\ns =n*(a*100+b)\r\nprint(s // 100, s % 100)",0,8.197486715019963e-39
104,n = int(input())\nk = 0\nwhile n != 1:\n    if n % 2 == 1:\n        n -= 1\n        k += 2\n        n = n // 2\n    else:\n        n = n // 2\n        k += 1\nif k >= 7:\n    print(7)\nelse:\n    print(k),0,0.0
105,"s = input()\nm = 0\ni = 0\nfor char in s:\n    if (char == 'E' and i%3 == 0) or \\n       (char == 'A' and i%3 == 1) or \\n       (char == 'B'and i%3 == 2): \n        i += 1\n        m = max(i,m)\n    elif char == 'E':\n        i = 1\n    else:\n        i = 0\nprint(m)",0,0.0
106,"n,m,k=list(map(int, input().split()))\nif m>n and k>=n:\n    print('NO')\nelse:\n    count=0\n    while m>0:\n        if m-n<=0:\n            count+=1\n            break\n        else:\n            m=m-n+k\n            count+=1\n    print(count)",0,0.0
107,"a,b=map(int,input().split())\n\ndef f(n):\n    sp=[]\n    for i in range(2,int(n**0.5)+1):\n        if n%i==0:\n            sp.append(i)\n            if n//i!=i:\n                sp.append(n//i)\n    sp.sort()\n    return sp\n\nspd=[]\nk=0\nfor g in range(a,b+1):\n    k+=1\n    spd=f(g)\n    if len(spd)==2:\n        print(*spd)\n",0,0.0
108,"n = int(input())        \r\ngr = [[] * n for i in range(n)]\r\ngr2 = [[0] * n for i in range(n)]\r\nfor i in range(n):\r\n    gr[i] = [int(t) for t in input().split()]\r\n\r\nfor i in range(n):\r\n    for j in range(n):\r\n        if i==j:\r\n            gr[i][j]=1\r\ngr2=gr\r\nfor k in range(n):\r\n    \r\n    for i in range(n):\r\n        for j in range(n):\r\n            for z  in range(n):\r\n                if gr2[i][j]==0:\r\n                    gr2[i][j]=gr2[i][z]*gr[z][j]\r\nfor i in range(n):\r\n    for j in range(n):\r\n        if i==j:\r\n            gr2[i][j]=0  \r\n               \r\nfor row in gr2:\r\n    print(' '.join(map(str, row)))",0,0.0
109,"n = int(input())\r\na = list(map(int, input().split()))\r\nc = [a[0]]\r\nfor j in range(0, n - 1 ):\r\n    if a[j+1] != a[j]:\r\n        c.append(a[j+1])\r\n#print(c)\r\nk = len(c)\r\ns = k\r\nfor j in range(1, k - 1):\r\n    if c[j-1] < c[j] < c[j+1]:\r\n        s -= 1\r\n    if c[j-1] > c[j] > c[j+1]:\r\n        s -= 1        \r\nprint(s)\r\n    ",0,0.0
110,"n, m = map(int, input().split())\nprint((m // 2) * n)\n\n\n\n\n\n",0,1.4487065661881423e-36
111,"a1,b1=map(int,input().split())\na2,b2=map(int,input().split())\na3,b3=map(int,input().split())\nif a2>b2:\n    c2=b2\nelse:\n    c2=a2\nif a3>b3:\n    c3=b3\nelse:\n    c3=a3\nc4=b1-c2\nc5=a1-c3\nprint(c4,c5)",0,0.0
112,"\r\na=int(input())\r\nb=int(input())\r\nr=0\r\nmx=0\r\ndef inDel( x ):\r\n    inDel=[1]\r\n    for i in range (1,x):\r\n        if x%i==0:\r\n            inDel.append(i)\r\n    return inDel\r\nfor k in range (a,b-1):\r\n    if len(inDel(k))>=mx:\r\n        mx=len(inDel(k))\r\n        a=k\r\nprint(mx,a,a//2)\r\n",0,0.0
113,"n,m=map(int,input().split())\r\nmas=[[0]*n for i in range(n)]\r\nfor i in range(m):\r\n    a,b=map(int,input().split())\r\n    mas[a-1][b-1]=1\r\n    mas[b-1][a-1]=1\r\nfor i in mas:\r\n    print(' '.join(map(str,i)))\r\n",0,0.0
114,"n, m, k = map(int, input().split())\r\nf = m >= n and k >= n\r\nprint('YES') if f == 1 else print('NO')",0,8.549086595978708e-15
115,"
G, S, H, R = map(int, input().split())
M = int(input())

max_students = max(G, S, H, R)
min_in_class = (max_students + M - 1) // M

print(min_in_class)
",1,1.0
116,"n=int(input())\nprint(min(list(map(int,input().split()))))",0,2.6319801893492922e-09
117,"n = int(input())matrix = [list(map(int, input().split())) for _ in range(n)]transposed = [[0] * n for _ in range(n)]for i in range(n):for j in range(n):transposed[j][i] = matrix[i][j]for row in transposed:print(' '.join(map(str, row)))",1,1.0
118,"n = int(input())\nmx = -1\nsu = 0\nmas = list(map(int, input().split()))\nfor a in mas:\n    su += a\n    mx = max(mx, a)\ns = mx*n -su\nprint(s)",0,5.529300429302453e-35
119,"def solve():\n    n, k, s = map(int, input().split())\n    p = list(map(int, input().split()))\n\n    def check(time):\n        count = 1\n        current_sum = 0\n        for x in p:\n            if (x + s - 1) // s > time:\n                return False\n            if current_sum + x > time * s:\n                count += 1\n                current_sum = 0\n            current_sum += x\n        return count <= k\n\n    left = max((x+s-1)//s for x in p)\n    right = sum(p)\n    ans = right\n\n    while left <= right:\n        mid = (left + right) // 2\n        if check(mid):\n            ans = mid\n            right = mid - 1\n        else:\n            left = mid + 1\n\n    print(ans)\n\nsolve()\n",0,0.0
120,"
n, m, k = map(int, input().split())

def min_helicopters(n, m, k):
    if k < 3:
        return 0
    if n + m <= k:
        return 1
    total_people = n + m
    helicopters_needed = (total_people + (k - 2) - 1) // (k - 2)
    return helicopters_needed

print(min_helicopters(n, m, k))
",1,1.0
121,"def main():
    n = int(input())
    a = list(map(int, input().split()))
    b = list(map(int, input().split()))

    distance = 0
    for i in range(n):
        if a[i] == b[i]:
            distance += a[i]

    print(distance)

if __name__ == ""__main__"":
    main()",1,1.0
122,"a = int(input())
b = int(input())
c = int(input())
if a == b and a == c:
  print(3)
elif a == b or a == c or b == c:
  print(2)
else:
  print(0)
",1,1.0
123,"keyboard = {\n    'a': 's', 's': 'd', 'd': 'f', 'f': 'g', 'g': 'h',\n    'h': 'j', 'j': 'k', 'k': 'l', 'l': 'z', 'z': 'x',\n    'x': 'c', 'c': 'v', 'v': 'b', 'b': 'n', 'n': 'm',\n    'm': 'q', 'q': 'w', 'w': 'e', 'e': 'r', 'r': 't',\n    't': 'y', 'y': 'u', 'u': 'i', 'i': 'o', 'o': 'p',\n    'p': 'a'\n}\n\nletter = input()\nprint(keyboard[letter])",0,1.0
124,"
a, b, c, d = map(int, input().split())

if d < b:
    c -= 1
    d += 60

hours = c - a
minutes = d - b

print(hours, minutes)
",1,1.0
125,"a,b,c,d = map(int, input().split())\r\nfor i in range(a,b+1):\r\n    if i % d == c:\r\n        print(i,end=' ')",0,1.6293041847355414e-27
126,"x=int(input())\r\ny=x-2\r\nif (y%10==1) and y!=11:\r\n    print(y,""mag"")\r\nelif y%10==2 or y%10==3 or y%10==4 and (y!=12 and y!=13 and y!=14):\r\n    print(y,""maga"")\r\nelse:\r\n    print(y,""magov"")",0,0.0
127,"
def yarn_price(n):
    return (n + 99) // 100

n = int(input())
print(yarn_price(n))
",1,0.9999918937683105
128,"n = int(input())\r\na = list(map(int, input().split()))\r\nmx = 0\r\nfor i in range(1, 101):\r\n    mx = max(mx, a.count(i))\r\nprint(mx)",0,0.0
129,a1=input().split()\r\na=[int(w) for w in (a1)]\r\ns=0\r\nfor i in range(100):\r\n    s*=1000\r\nif a[0]==a[1]: print(0)\r\nelif (a[0]>0 and a[1]>0) or (a[0]<0 and a[1]<0): print(a[0]+a[1])\r\nelse: print(a[0]*a[1])\r\n,0,0.0
130,"\na, b = map(int, input().split())\nprint(a + b)",0,2.1014892842390054e-13
131,"n=int(input())\nz=[input().split() for i in range(n)]\nfor i in range(n):\n    a=int(z[i][0])\n    b=int(z[i][1])\n    if a<=b:\n        print(""NO"")\n    else:\n        print(""YES"")",0,6.761754311687107e-36
132,"
m1, m2, m3 = map(int, input().split())
positions = [m1, m2, m3]
min_distance = float('inf')

for target in positions:
    distance = sum(abs(target - pos) for pos in positions)
    if distance < min_distance:
        min_distance = distance

print(min_distance)
",1,1.0
133,"x, y, z = map(int, input().split())\nif y % 3 != 0:\n    if (y % 3) + z < 3:\n        print(-1)\n    else:\n        m = x + y // 3 + (y % 3 + z) // 3\n        if (y % 3 + z) % 3 != 0:\n            print(m + 1)\n        else:\n            print(m)\nelse:\n    m = x + y // 3 + (y % 3 + z) // 3\n    if (y % 3 + z) % 3 != 0:\n        print(m + 1)\n    else:\n        print(m)\n",0,0.0
134,"a = int(input())\r\nb = int(input())\r\nc = int(input())\r\nm = a\r\nif b >m:\r\n    m = b\r\nif c > m:\r\n    m = c\r\n\r\nmi = a\r\nif mi > b:\r\n    mi = b\r\nif mi > c:\r\n    mi = c\r\n\r\nsr = a+b+c\r\nsr =sr-(mi+m)\r\nprint(mi,sr,m)\r\n",0,0.0
135,"
a, b = map(int, input().split())
result = []

for m in range(1, 20):  # m is odd
    for n in range(0, 20):  # n is even
        N = (2 ** m) * (3 ** n)
        if a <= N <= b:
            result.append(N)

result.sort()
for number in result:
    print(number)
",1,1.0
136,a = list(input())\ns = list(input())\ns.sort(reverse = True)\n \nj = 0\nfor i in range(len(a)):\n    if a[i] < s[j]:\n        a[i] = s[j]\n        j += 1\n    if j == len(s):\n        break\nprint(''.join(a)),0,0.0
137,"n, a, b = map(int, input().split())\nif b < n or a < n:\n    print(""NO"")\n    exit(0)\nprint(""YES"")",0,2.964628757075005e-19
138,q=input()\nw=list(input())\nw.sort()\nfor i in range(len(q)):\n    if q[i]<w[-1]:\n        q=q[:i]+w[-1]+q[i+1:]\n        w=w[:-1]\nprint(q),0,4.123697732847926e-33
139,"A = int(input())

def is_divisor_ending_in_7(n):
    for i in range(17, n, 10):
        if n % i == 0:
            return i
    return None

count = 0
num = A + 1

while count < 5:
    divisor = is_divisor_ending_in_7(num)
    if divisor:
        print(num, divisor)
        count += 1
    num += 1",1,1.0
140,"a=int(input())\nfor i in range(a):\n    k=0\n    b,c=map(int,input().split())\n    for i in range(1,100000000):\n        b=b-i\n        if b<0:\n            break\n        k=k+1\n        b=b-i\n        if b<0:\n            break\n        k=k+1\n    if k>=c:\n        print(""YES"")\n    else:\n        print(""NO"")",0,0.0
141,"
n, z = map(int, input().split())
number = input().strip()
max_number = """"
inserted = False

for i in range(n):
    if not inserted and z > int(number[i]):
        max_number += str(z)
        inserted = True
    max_number += number[i]

if not inserted:
    max_number += str(z)

print(max_number)
",1,1.0
142,"n,k=[int(x)for x in input().split()]
ans=0
for i in range(1,n+1):
    if ans*5+k<=240:
        ans+=1
    else:
        break
print(ans)",1,1.0
143,"a = input()\r\nprint(int(a,2))\r\n",0,3.518227182787621e-23
144,import math\r\nh= int(input())\r\na=int(input())\r\nb=int(input())\r\nprint(math.ceil((h - b)/(a - b))),0,1.0679728317585214e-36
145,"def max_cars(g, c, h):
    if g == 2:
        return 2 + min(c, h)
    else:
        return 2 + (g - 2) * 2 + min(c, h)

g, c, h = map(int, input().split())
print(max_cars(g, c, h))",1,1.0
146,"
import sys

def main():
  k = int(input())
  n = int(input())

  test_tubes = []
  for _ in range(n):
    m = int(input())
    percentages = [int(x) for x in input().split()]
    test_tubes.append((m, percentages))

  test_tubes.sort(key=lambda x: x[1][0])

  cur_percentages = test_tubes[0][1][0]
  cur_count = test_tubes[0][0]
  total_increase = 0

  for i in range(1, n):
    m, percentages = test_tubes[i]
    if cur_percentages == percentages[0]:
      cur_count += m
    else:
      total_increase += (percentages[0] - cur_percentages) * cur_count
      cur_percentages = percentages[0]
      cur_count = m

  print(total_increase)

if __name__ == ""__main__"":
  main()
",1,1.0
147,"
n, a, b = map(int, input().split())
if a >= n and b >= n:
    print(""YES"")
else:
    print(""NO"")
",1,1.0
148,"def count_flowers(k, a, b):\n    position = 0\n    flowers = set()\n    drawn_flower = False\n\n    for _ in range(k):\n        position += a\n        if position < 0:\n            position -= b\n        else:\n            position += b\n\n        if position in flowers:\n            drawn_flower = True\n        else:\n            flowers.add(position)\n\n    return len(flowers) if not drawn_flower else len(flowers) - 1\n\n\nk, a, b = map(int, input().split())\n\n\nresult = count_flowers(k, a, b)\nprint(result+1)\n",0,0.0
149,"print(""ABC"")
",1,0.9767277836799622
150,"mas = list(map(int, input().split()))\r\nmas.sort()\r\nprint(mas[0]*2 + mas[1]*2)",0,4.080790035178971e-25
151,"x=int(input())\n\n\ndef ko(x):\n    sp=[]\n    for t in range(1,int(x**0.5)+1):\n        if x%t==0:\n            sp.append(t)\n            if t!=x//t:\n                sp.append(x//t)\n    sp.sort()\n    sp.reverse()\n    spf=[]\n    \n    spf=sp[1:3]\n    \n    return spf\nk=0\n\n\nfor i in range(x+1,x*10):\n    spd=ko(i)\n    if k==5:\n        break\n    if len(spd)==2:\n        \n        if sum(spd)<10000:\n            print(i,sum(spd))\n            k+=1",0,0.0
152,"def main():
    n = int(input())
    votes = list(map(int, input().split()))

    count = [0] * 101
    for vote in votes:
        count[vote] += 1

    max_count = max(count[1:])
    if count[0] >= max_count:
        print(0)
    else:
        print(count.index(max_count, 1))

if __name__ == ""__main__"":
    main()",1,1.0
153,"a,b=input().split()\na,b=int(a),int(b)\nb=240-b\nc=0\ns=0\nfor i in range(1,a+1):\n    \n    c+=i*5\n    if c>b:\n        break\n    s+=1\nprint(s)\n",0,0.0
154,"a=input()\nts,maxts=1,0\nfor i in range(len(a)-1):\n    if (a[i]=='K' and a[i+1]=='L')or(a[i]=='L' and a[i+1]=='K'):\n        ts=1\n    else:\n        ts+=1\n        if maxts<ts:\n            maxts=ts\nprint(maxts)\n\n",0,0.0
155,"n, a, b=map(int, input().split())\nif n<=a and n<=b:\n    print('YES')\nelse:\n    print('NO')",0,1.2149676482782154e-15
156,"k,r=map(int,input().split())
print((k+r-1)//r)",1,0.9985706806182861
157,"a=input()\nk,mk=1,0\nfor i in range(len(a)-1):\n    if (a[i]=='K' and a[i+1]=='L')or(a[i]=='L' and a[i+1]=='K'):\n        k=1\n    else:\n        k+=1\n        if mk<k:\n            mk=k\n        \nprint(mk)\n\n            \n            \n            \n            \n",0,0.0
158,"a, b = input(), input()\ns = a+b\nelem1 = s.count(s[0])\nelem2 = s.count(s[1])\nelem3 = s.count(s[2])\nelem4 = s.count(s[3])\n\nif elem1 == 4 or elem2 == 4 or elem3 == 4 or elem4 == 4:\n    print(0)\nelif elem1 == 3 or elem2 == 3 or elem3 == 3 or elem4 == 3:\n    print(2)\nelif elem1 == 2 or elem2 == 2 or elem3 == 2 or elem4 == 2:\n    if elem1 == elem2 and elem2 == elem3 and elem3 == elem4:\n        print(1)\n    else:\n        print(2)\nelse:\n    print(3)\n",0,0.0
159,"
a = int(input())
b = int(input())
c = int(input())
if a > b:
    a, b = b, a
if a > c:
    a, c = c, a
if b > c:
    b, c = c, b
print(a, b, c)
",1,1.0
160,"from math import log2\r\nn = int(input())\r\nwhile n!=0:\r\n    print(int(log2(n))+1,end=' ')\r\n    n-=2**(int(log2(n)))",0,1.8017264509460166e-37
161,"
def max_people_with_neighbors(n):
    return (n // 2) + (n // 4)

n = int(input())
print(max_people_with_neighbors(n))
",1,0.9999947547912598
162,"def print_napkin(n):
    for i in range(n):
        for j in range(n - i - 1):
            print("" "", end="""")
        for j in range(2 * i + 1):
            print(j // 2, end="" "")
        print()
    for i in range(n - 1):
        for j in range(i + 1):
            print("" "", end="""")
        for j in range(2 * (n - i - 1) - 1):
            print((n - i - 1) - (j // 2), end="" "")
        print()

n = int(input())
print_napkin(n)",1,1.0
163,"n,m=map(int,input().split())\na1=(m-2)*(n-2)\na2=n*m-a1\nprint(a2,a1)",0,4.280107113312733e-18
164,"N = int(input())S = input().strip()files = 0for operation in S:if operation == ""+"":files += 1elif operation == ""-"":files = max(0, files - 1)print(files)",1,1.0
165,"n,k,t,c,d,p,nl,np=map(int,input().split())\r\nt=k*t\r\nd=d*c\r\na=0\r\nb=0\r\nwhile(t>=nl and d>=1 and p>=np):\r\n    a+=1\r\n    b+=1\r\n    t-=nl\r\n    d-=1\r\n    p-=np\r\n    if b>n:\r\n        b=1\r\nprint(a,b)",0,0.0
166,"k=int(input())\nfor i in range(0,k):\n    a,b=map(int,input().split())\n    if a>b and sum(range(1,a-b))>=a :\n        print(""YES"")\n    else:\n        print(""NO"")",0,6.811543516019245e-27
167,"n1, n2 = map(int, input().split())
n3, n4 = map(int, input().split())

if n1 + n2 > n3 + n4:
    print(n1, n2)
elif n3 + n4 > n1 + n2:
    print(n3, n4)
else:
    print(n1, n2, n3, n4)
",1,1.0
168,"a,b=map(int,input().split())\ndef kd(x):\n    sp=[]\n    for t in range(1,int(x**0.5)+1):\n        if x%t==0:\n            sp.append(t)\n            if x//t!=t:\n                sp.append(x//t)\n    sp.sort()\n    return(sp)\nspd=[]\nk=0\nfor i in range(a,b):\n    spd=kd(i)\n    bl=[]\n    for j in spd:\n        if j%2==0:\n            bl.append(j)\n    if len(bl)==3:\n        print(i)",0,0.0
169,"k = int(input())\nnow = 10\nfor i in range(k):\n    new = now + 9\n    while sum(list(map(int, list(str(new))))) != 10:\n        new += 9\n    now = new\nprint(now)",0,4.353209846880404e-29
170,"
n = int(input())
i = 0
while i < n:
    print(""I must not tell lies"")
    i += 1
",1,0.9999998807907104
171,"
n = int(input())
w = list(map(int, input().split()))
left_sum = 0
right_sum = sum(w)
left_count = 0
right_count = n

while left_count < right_count:
    if left_sum < right_sum:
        left_sum += w[left_count]
        left_count += 1
    elif left_sum > right_sum:
        right_sum -= w[right_count - 1]
        right_count -= 1
    else:
        left_sum += w[left_count]
        left_count += 1
        right_sum -= w[right_count - 1]
        right_count -= 1

if left_sum == right_sum:
    print(left_count + (n - right_count))
else:
    print(0)
",1,1.0
172,"
def min_distance(d1, d2, d3):
    dp = [0] * (d1 + d2 + d3 + 1)
    for i in range(1, d1 + 1):
        for j in range(1, d2 + 1):
            for k in range(1, d3 + 1):
                dp[i + j + k] = max(dp[i + j + k], dp[i] + j + dp[j + k] + d1, dp[i + k] + d2 + dp[k] + d3)
    return dp[-1]

d1, d2, d3 = map(int, input().split())
print(min_distance(d1, d2, d3))
",1,1.0
173,"n=int(input())\r\nmas=[[0]*n for i in range(n)]\r\ngr=[[0]*n for i in range(n)]\r\nfor i in range(n):\r\n    mas[i]=[int(f) for f in input().split()]\r\nfor i in range(n):\r\n    for j in range(n):\r\n        for z in range(n):\r\n            if gr[i][j]==0 and i!=j:\r\n                gr[i][j]=mas[i][z]*mas[z][j]\r\n            if mas[i][j]==1:\r\n                gr[i][j]=1\r\nfor i in gr:\r\n    print(' '.join(map(str,i)))\r\n        \r\n",0,0.0
174,n=int(input())\nprint(3*(n-1)),0,1.5157579635882712e-09
175,"a, b = map(int, input().split())\nprint(a**2 + b**2)",0,1.6974009753312203e-08
176,"s = input()  \r\nx = 0\r\ny = 0\r\nb = []\r\nn = len(s)\r\nfor j in range(n):\r\n    if s[j] == 'U':\r\n        y += 1\r\n    if s[j] == 'D':\r\n        y -= 1\r\n    if s[j] == 'L':\r\n        x -= 1\r\n    if s[j] == 'R':\r\n        x += 1\r\n    b.append([x, y])        \r\n#b.append([0, 0])\r\nb.sort(key = lambda x: (x[0], x[1]))\r\n#print(b)\r\nk = 0\r\nsum = 5\r\nm = 0\r\nfor j in range(1, n):\r\n    if b[j] == [0, 0]:\r\n        m = 1\r\n    if b[j - 1] == b[j]:\r\n        k += 1\r\n    else:\r\n        sum += 5 + k\r\n        k = 0\r\nif b[0] == [0, 0]:\r\n    m = 1\r\nif m == 1:\r\n    sum += m - 5\r\nif k > 0:\r\n    sum += k\r\nprint(sum)",0,0.0
177,"d=int(input())\r\nm=int(input())\r\ng=int(input())\r\nif m<9 and g==2010:\r\n    print(""YES"")\r\nelse:\r\n    print(""NO"")\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n",0,0.0
178,print(len(input().split())),0,0.5463029742240906
179,"def f(a, b):\r\n    max_1 = min(a, b)\r\n    s = (max(a, b) - max_1) // 2\r\n    return max_1, s\r\na, b = map(int, input().split())\r\nprint(*f(a, b))\r\n",0,0.0
180,"x=int (input())\r\nif x%10==1 :\r\n   print(x,'mag')\r\nelif x%10<5 :\r\n   print(x,'maga')\r\nelse :\r\n   print(x,'magov')\r\n\r\n",0,0.0
181,"a,b = map(int, input().split())\nif (a > 0 and b > 0) or (a < 0 and b < 0):\n    summa = a+b\nelse:\n    summa = a - b\nprint(summa)",0,8.747538555185123e-25
182,"userInput = input()\ntemp = userInput.split("" "")\nn = 0\nnList = []\nmaxValue = 0\nminValue = 0\nfor i in range(len(temp)):\n    if(i == 0):\n        n = int(temp[i])\n    else:\n        nList.append(int(temp[i]))\n\nmaxValue = max(nList)\nminValue = min(nList)\n\nfor i in range(len(nList)):\n    if(nList[i] == maxValue):\n        nList[i]=minValue\n    print(nList[i], end="" "")\n    ",0,0.0
183,"pal=int(input())\r\nfut=int(input())\r\ns=pal*2.54\r\nif s<fut and s>=0:\r\n    print(""YES"")\r\nelse:\r\n    print(""NO"") ",0,0.0
184,"
N = int(input())
k = 0
power = 1
while power < N:
    power *= 2
    k += 1
print(k)
",1,1.0
185,"n = int(input())\narr = list(map(int, input().split()))\nmax_dist = 0\nnum_indices = []\nfor i in range(2*n):\n  if arr[i] not in num_indices:\n    num_indices.append(arr[i])\n  else:\n    num_indices.remove(arr[i])\n  max_dist = max(max_dist, len(num_indices))\nprint(max_dist)",0,0.0
186,"
A = int(input())
B = int(input())
count = 0

while A > 0 and B > 0:
    if A > B:
        count += A // B
        A = A % B
    else:
        count += B // A
        B = B % A

print(count)
",1,1.0
187,n = int(input())\r\ns = 0\r\na = [0] * n\r\nfor i in range(n):\r\n    a[i] = int(input())\r\na.sort()\r\ns = 0 \r\nwhile len(a) > 3:\r\n    if  2 * a[1] + a[0] < a[0] * 2 + a[-2]: \r\n        s += a[-1] + a[0]  + a[1] * 2                       \r\n    else:\r\n        s += a[-1] + a[-2] + a[0] * 2\r\n    a = a[:len(a)-2]\r\nif len(a) == 2:\r\n    s += a[1]\r\nelif len(a) == 3:\r\n    s += sum(a)\r\nprint(s)\r\n    ,0,0.0
188,"s=[[int(j) for j in input().split()] for i in range(int(input()))]\nfor i in s:\n    isno = False\n    for j in range(3):\n        if i[j]==sum(i[:j]+i[j+1:]):\n            print(""YES"")\n            isno=True\n            break\n    if not isno:\n        print(""NO"")",0,7.0168483357081e-31
189,"a,b=[int(i) for i in input().split()]\nA=[int(i) for i in input().split()]\nif sum(A)==0:\n    print(0)\nif abs(sum(A))<=b:\n    print(1)\nelse:\n    nado=(-1*(sum(A)))\n    print(nado//b+1)",0,0.0
190,"def F(x):\n    sp=[]\n    \n    for i in range (2, int(x**0.5)+1):\n        if x%i==0:\n            if i!=7 and i%10==7:\n                sp.append(i)\n            if x//i!=i and x//i!=7 and (x//i)%10==7:\n                sp.append(x//i)\n    sp.sort()\n    \n    return sp\n\nk=0\na=int(input())\nfor g in range(a,a*100):\n    spd=[]\n    spd=F(g)\n    \n    if len(spd)>0:\n        print(g,spd[0])\n        k+=1\n    if k>4:\n        break",0,0.0
191,"a, b, c, v, n = map(int, input().split())
objects = list(map(int, input().split()))

water = v
for obj in objects:
    if water - obj >= 0:
        water -= obj
    else:
        water = max(0, water - obj)

print(water)",1,1.0
192,"x=int(input())\r\ny=int(input())\r\nc=int(input())\r\nmax(x,y,c)\r\nif x**2+y**2==c**2 or y**2+c**2==x**2 or c**2+x**2==y**2:\r\n    print(""right"")\r\nelif x**2+y**2>c**2 or y**2+c**2>x**2 or c**2+x**2>y**2:\r\n    print(""acute"")\r\nelif x**2+y**2<c**2 or y**2+c**2<x**2 or c**2+x**2<y**2:\r\n    print(""obtuse"")\r\nelif x+y>c and y+c>x and x+c>y:\r\n    print(""impossible"")",0,0.0
193,"
a, b = map(int, input().split())
print(a - b)
",1,0.9987043142318726
194,"n, k, t, c, d, p, nl, np = map(int, input().split())\n\nk = k*t # ĞºĞ¾Ğ»Ğ¸ÑĞµÑÑĞ²Ğ¾ Ğ¼Ğ¼ Ğ¼Ğ°ÑĞ°ĞºÑÑ\nc = c*d # dolki\na = min(k/nl, c, p/np)\nif a == 0:\n    a = 1\n\nif n == 0:\n    print (0, 0)\nelse:\n    print (int(a), int(a/n) + 1)",0,7.718637361209257e-12
195,"n,k=map(int, input().split())\nx=(24*60)-k\nans=0\ni=0\nwhile x>=20*60+(i+1)*5 and i<n:\n    ans+=1\n    i+=1\n    x-=i*5\nprint(ans)",0,0.0
196,"
N = int(input())
arr = list(map(int, input().split()))
for i in range(1, N, 2):
    arr[i-1], arr[i] = arr[i], arr[i-1]
print(' '.join(map(str, arr)))
",1,1.0
197,"def max_chain_length(s):
    max_length = 0
    current_length = 0
    expected_char = 'E'

    for char in s:
        if char == expected_char:
            current_length += 1
            max_length = max(max_length, current_length)
            expected_char = 'A' if expected_char == 'E' else 'B' if expected_char == 'A' else 'E'
        else:
            current_length = 1 if char == 'E' else 0
            expected_char = 'A' if char == 'E' else 'B'

    return max_length

print(max_chain_length(input()))",1,1.0
198,"
n = int(input())
arr = list(map(int, input().split()))
for i in range(n):
    max_idx = i
    for j in range(i + 1, n):
        if arr[j] < arr[max_idx]:
            max_idx = j
    arr[i], arr[max_idx] = arr[max_idx], arr[i]
print(*arr)
",1,1.0
199,"a = int(input())
b = int(input())
d = int(input())

if a >= d + 2 and b >= d + 2:
    print(""YES"")
else:
    print(""NO"")",1,1.0
200,"
k, m, n = map(int, input().split())
time_needed = (n + k - 1) // k * 2 * m
print(time_needed)
",1,0.9999397993087769
201,"
N = int(input())
intervals = []

for _ in range(N):
    h1, m1, h2, m2 = map(int, input().split())
    start = h1 * 60 + m1
    end = h2 * 60 + m2
    if start < end:
        intervals.append((start, end))
    else:
        intervals.append((start, 1440))
        intervals.append((0, end))

total_time = 0
current_time = 0

while current_time < 1440:
    count = sum(1 for start, end in intervals if start <= current_time < end)
    if count == N:
        total_time += 1
    current_time += 1

print(total_time)
",1,1.0
202,s=str(input())\r\na=str(input())\r\nsa=[]\r\nq=0\r\ns=s+'**'\r\nfor i in range(len(s)-1):\r\n    if s[i]==a:\r\n        q+=1\r\n    else:\r\n        sa.append(q)\r\n        q=0\r\nprint(max(sa)) \r\n   ,0,0.0
203,"x,y = map(int,input().split())\r\nif x>0 and y>0:\r\n    print(1)\r\nelif x>0 and y<0:\r\n    print(2)\r\nelif x<0 and y<0:\r\n    print(3)\r\nelse:\r\n    print(4)\r\n\r\n",0,0.0
204,"k, n = map(int, input().split())\nif n%k == 0:\n    print(n//k, n%k)\nelse:\n    print(n//k +1, n%k)",0,8.333205545201586e-20
205,"def reverse_number(n):
    if n < 10:
        print(n)
    else:
        print(n % 10, end=' ')
        reverse_number(n // 10)

n = int(input())
reverse_number(n)",1,1.0
206,"
def divisors(n):
    divs = []
    for i in range(1, n + 1):
        if n % i == 0:
            divs.append(i)
    return divs

def fifth_largest(n):
    divs = sorted(divisors(n), reverse=True)[:5]
    return divs[4] if len(divs) > 4 else 0

def find_numbers(a):
    found = set()
    for n in range(a + 1, 1e6):
        m = fifth_largest(n)
        if m > 0:
            found.add(n)
            if len(found) == 5:
                return sorted(list(found))
    return []

a = int(input())
numbers = find_numbers(a)
if numbers:
    for n in numbers:
        print(n, fifth_largest(n))
",1,1.0
207,"a,b,c=map(int,input().split());z=0
while a!=b or b!=c:
  z+=1
  if a==b:a+=c-b;b=c
  elif b==c:c+=a-b
  else:b+=a-b
print(z)",1,1.0
208,"n, k = map(int, input().split())\na = list(map(int, input().split()))\na.sort(reverse=True)\nfor i in range(n):\n    if k == 0:\n        break\n    if a[i] < 0:\n        a[i] = -a[i]\n        k-=1\n    else:\n        a[i] = a[i] * (-1)**k\n        k = 0\nprint(sum(a))\n    \n",0,0.0
209,n = int(input())\r\ngr = [input().split() for i in range(n)]\r\nt=1\r\nfor i in range(n):\r\n    q=0\r\n    for j in range(n):\r\n        if gr[i][j] == '1':\r\n            q+=1;\r\n    if q%2!=0:\r\n        t=0\r\n        break\r\nif t==1:\r\n    print('YES')\r\nelse:\r\n    print('NO'),0,0.0
210,"n,k,t,c,d,p,nl,np = map(int,input().split())\r\nsumk = k*t\r\nsumc = c*d\r\ncounter = 0\r\nguest = 0\r\nwhile sumk>nl and sumc>0 and p>np:\r\n    sumk -= nl\r\n    sumc -= 1\r\n    p -= np\r\n    counter += 1\r\nif counter == 0:\r\n    print(1,1)\r\nelse:\r\n    guest = counter % n\r\n    if guest == 0:\r\n        guest = n\r\n    print(counter,guest)",0,0.0
211,"n = int(input())\nk = 0\nwhile n != 1:\n    if n % 10 in [1, 3, 5, 7, 9]:\n        n -= 1\n    elif n % 5 == 0:\n        n //= 5\n    elif n % 2 == 0:\n        n //= 2\n    else:\n        n -= 1\n    k += 1\nprint(k)",0,0.0
212,n = int(input())\nk = 0\nwhile n > 1:\n    n = n // 2 + n % 2    \n    k += 1\nprint(k),0,7.514035627840003e-16
213,"n1,p1,m1,t1,s1=map(int,input().split())\r\nn2,p2,m2,t2,s2=map(int,input().split())\r\na1=p1+t1*m1+s1\r\nb1=a1*n1\r\na2=p2+t2*m2+s2\r\nb2=a2*n2    \r\nif b1<b2:\r\n    print(""Python"",b1)\r\nelif b2<b1:\r\n    print(""Pascal"",b2)\r\nelif b1==b2:\r\n    print(""Draw"",b1)\r\n",0,0.0
214,"
N = int(input())
count = 0
for i in range(1, N + 1):
    if N % i == 0:
        count += 1
print(count)
",1,1.0
215,n = int(input())\ndata = input()\ndat = []\nfor i in range(n - 1):\n    dat.append(data[i:i+2])\nprint(len(set(dat)))\n,0,2.745430288537572e-29
216,"k=int(input())\r\nh=k//60\r\nm=k%60\r\nprint(h,m)\r\n",0,3.5521433496858857e-38
217,"
n = int(input())
count = 0
for _ in range(n):
    a, b, c = map(int, input().split())
    if a + b + c >= 2:
        count += 1
print(count)
",1,1.0
218,x = int(input())\ncount = 0\ns = 1\nwhile s * 5 <= x:\n    s *= 5\n    count += 1\nelse:\n    while s * 2 <= x:\n        s *= 2\n        count += 1\n    else:\n        while s + 1 <= x:\n            s += 1\n            count += 1\n        else:\n            print(count)\n,0,0.0
219,"
def max_square_area(n, disk):
    max_area = 0
    for i in range(1, n):
        for j in range(i, n):
            area = i * j
            square = [[disk[y][x] for y in range(n - i)] for x in range(n - j)]
            count = 0
            for row in square:
                if all(x == row[0] for x in row):
                    count += area
            max_area = max(max_area, count)
    return max_area

n = int(input())
disk = [list(input()) for _ in range(n)]
print(max_square_area(n, disk))
",1,1.0
220,"n1, p1, m1, t1, s1 = map(int, input().split())\nn2, p2, m2, t2, s2 = map(int, input().split())\npit = n1 * (p1 + m1 * t1 + s1)\npas = n2 * (p2 + m2 * t2 + s2)\nif pit > pas:\n    print('Pascal', pas)\nelif pas > pit:\n    print('Python', pit)\nelse:\n    print('Draw', pas)",0,1.1085932792787992e-38
221,"
def seedling(a, b, n):
    area = a * b
    if area < 9:
        print(""Invalid box size. Box size should be at least 9 square centimeters."")
        return
    if n > area:
        k = n - area
        print(""YES"")
        print(k)
    else:
        print(""NO"")
        print(0)

# Main function
seedling(3, 3, 1)
seedling(2, 50, 12)
",1,1.0
222,"
def dfs(node, visited, path, adj_matrix, traversals):
    visited[node] = True
    path.append(node)

    for neighbor in range(1, len(adj_matrix[0]) + 1):
        if adj_matrix[node][neighbor] == 1 and not visited[neighbor]:
            dfs(neighbor, visited, path, adj_matrix, traversals)

    if len(path) > 1:
        traversals.append(' '.join(map(str, path)))
        path.pop()
        visited[path[-1]] = False

n = int(input())
adj_matrix = []
traversals = []
visited = [False] * (n + 1)
path = []

for _ in range(n):
    row = list(map(int, input().split()))
    adj_matrix.append(row)

for node in range(1, n + 1):
    if not visited[node]:
        dfs(node, visited, path, adj_matrix, traversals)

for traversal in traversals:
    print(traversal)
",1,1.0
223,"
N, i, j = map(int, input().split())
if i > j:
    i, j = j, i
clockwise = j - i - 1
counter_clockwise = N - (j - i) - 1
print(min(clockwise, counter_clockwise))
",1,1.0
224,"
m = int(input())
d = int(input())
v = int(input())

min_boys = max(0, v - d)
max_boys = min(m, v)

print(max_boys - min_boys + 1)
",1,1.0
225,"n = int(input())\na = 0\n\nfor i in range(n):\n    s, k = list(map(int, input().split()))\n\n    while s > 0:\n        if s % k != 0:\n            a = a + (s % k)\n            s = s - (s % k)\n        else:\n            s = s // k\n            a += 1\n    print(a)\n    a = 0",0,0.0
226,"n,k=map(int,input().split())\r\ns=[]\r\nfor i in range(n):\r\n    s.append(int(input()))\r\ns.sort()\r\ns.reverse()\r\notl=s[:k]\r\nud=s[k:k+k]\r\nsr=sum(ud)//k\r\nso=sum(otl)//k\r\nprint(sr,so)",0,0.0
227,"N, M=map(int,input().split())\nX=(M-2)*(N-2)\nY=(M*N)-X\nprint(Y,X)",0,6.869002932410785e-19
228,"k=int(input())\nS=0\nl=0\nfor i in range(k):\n    S=0\n    n,m = map(int, input().split())\n    for g in range(1, m+1):\n        S+=g\n    if S>n:\n        print('NO')\n    elif S==n:\n        print('YES')\n    else:\n        S=0\n        while S<n:\n            for j in range(l, m):\n                S+=1\n                l+=1\n                m+=1\n        if S==n:\n            print('YES')\n        else:\n            print('NO')",0,0.0
229,a = input()\nif a == 'q':\n    print('w')\nif a == 'w':\n    print('e')\nif a == 'e':\n    print('r')\nif a == 'r':\n    print('t')\nif a == 't':\n    print('y')\nif a == 'y':\n    print('u')\nif a == 'u':\n    print('i')\nif a == 'i':\n    print('o')\nif a == 'o':\n    print('p')\nif a == 'p':\n    print('a')\nif a == 'a':\n    print('s')\nif a == 's':\n    print('d')\nif a == 'd':\n    print('f')\nif a == 'f':\n    print('g')\nif a == 'g':\n    print('h')\nif a == 'h':\n    print('j')\nif a == 'j':\n    print('k')\nif a == 'k':\n    print('l')\nif a == 'l':\n    print('z')\nif a == 'z':\n    print('x')\nif a == 'x':\n    print('c')\nif a == 'c':\n    print('v')\nif a == 'v':\n    print('b')\nif a == 'b':\n    print('n')\nif a == 'n':\n    print('m')\nif a == 'm':\n    print('q'),0,0.0
230,"n, t  = map(int, input().split(' '))\na = [int(x) for x in input().split(' ')]\nk = 1\nwhile t > 0 and k - 1 < n:\n    t -= (80000 - a[k - 1])\n    k += 1\nprint(k - 1)",0,1.7695936134500522e-25
231,"a, b = map(int, input().split())\nc = input()\nl = list(c)\n\nfor i in range(len(l)):\n    if int(l[i]) < b:\n        l.insert(i, b)\n        break\n\nc = c[:i + 1] + str(b) + c[i + 1:]\nl = ''.join(map(str, l))\nif l > c:\n    print(l)\nelse:\n    print(c)",0,0.0
232,"
K = input().strip()
if K == K[::-1]:
    print(""YES"")
else:
    print(""NO"")
",1,1.0
233,"
def solve_puzzle(input_data):
    from collections import deque

    def is_valid(x, y):
        return 0 <= x < N and 0 <= y < N

    def bfs(word):
        for i in range(N):
            for j in range(N):
                if table[i][j] == word[0]:
                    queue = deque([(i, j, 0)])
                    visited = set()
                    while queue:
                        x, y, index = queue.popleft()
                        if (x, y) in visited:
                            continue
                        visited.add((x, y))
                        if index == len(word) - 1:
                            for xi, yi in visited:
                                used[xi][yi] = True
                            return True
                        for dx, dy in [(-1, 0), (1, 0), (0, -1), (0, 1)]:
                            nx, ny = x + dx, y + dy
                            if is_valid(nx, ny) and table[nx][ny] == word[index + 1]:
                                queue.append((nx, ny, index + 1))
        return False

    input_lines = input_data.strip().split('\n')
    N, M = map(int, input_lines[0].split())
    table = [list(input_lines[i + 1]) for i in range(N)]
    words = [input_lines[N + 1 + i] for i in range(M)]
    used = [[False] * N for _ in range(N)]

    for word in words:
        bfs(word)

    remaining_letters = [table[i][j] for i in range(N) for j in range(N) if not used[i][j]]
    return ''.join(sorted(remaining_letters))

# Example usage
input_data = """"""5 3
POLTE
RWYMS
OAIPT
BDANR
LEMES
OLYMPIAD
PROBLEM
TEST""""""
output = solve_puzzle(input_data)
print(output)  # Expected: AENRSW
",1,1.0
234,n = int(input())\r\ngr = [[] * n for i in range(n)]\r\nvisited = [False] * n\r\nprev = [] \r\nfor i in range(n):\r\n    gr[i] = [int(t) for t in input().split()]\r\n\r\n       \r\n         \r\ndef dfs(start):\r\n    prev.append(start+1)\r\n    visited[start] = True\r\n    for u in range(n):\r\n        if not visited[u] and gr[start][u]!=0:\r\n            dfs(u)\r\n\r\n            \r\ndfs(0)\r\nprint(*prev),0,0.0
235,"
def solve():
    n, k, x = map(int, input().split())
    a = list(map(int, input().split()))
    a += [0] * k
    a.sort()
    groups = 1
    for i in range(1, len(a)):
        if a[i] - a[i - 1] > x:
            groups += 1
    return groups

print(solve())
",1,1.0
236,"\r\na=int(input())\r\nb=int(input())\r\nmx=0\r\ndef inDel( x ):\r\n    inDel=[1]\r\n    for i in range (1,x//2+1):\r\n        if x%i==0:\r\n            inDel.append(i)\r\n    return inDel\r\nfor k in range (a,b+1):\r\n    if len(inDel(k))>=mx:\r\n        mx=len(inDel(k))\r\n        a=k\r\nprint(mx,a,a//2)",0,0.0
237,"
def bfs(x, y, grid):
    visited = [[False] * grid[0] + [None] for _ in grid]
    queue = [(x, y)]
    while queue:
        x, y = queue.pop(0)
        if grid[x][y] == 'A' and visited[x][y] is None:
            visited[x][y] = True
            for dx, dy in ((-1, 0), (1, 0), (0, -1), (0, 1)):
                nx, ny = x + dx * 2, y + dy * 2
                if 0 <= nx < len(grid) and 0 <= ny < len(grid[0]) and grid[nx][ny] == 'B' and not visited[nx][ny]:
                    queue.append((nx, ny))
    return sum(1 for i in range(len(grid)) if all(not visited[i][j] for j in range(len(grid[0])) if grid[i][j] == 'A'))

n, m = map(int, input().split())
grid = [list(input()) for _ in range(n)]
max_a = 0
for i in range(n):
    for j in range(m):
        if grid[i][j] == 'A':
            grid[i][j] = '.'
            destroyed = bfs(i, j, grid)
            grid[i][j] = 'A'
            max_a = max(max_a, destroyed)
print(max_a)
",1,1.0
238,"k, r = map(int,input().split())\nif k<10:\n    if k == r:\n        print(1)\n    elif k%r == 0:\n        print(k//r)\nelse:\n    if (k - r) % 10 == 0:\n        print(1)\n    elif k == r:\n        print(1)\n    elif k % (10+r) == 0:\n        print(k // (10+r))\n    elif k * 2 % 10 == 0:\n        print(2)",0,0.0
239,a=input().split()\nb=int(a[0])\nc=int(a[1])\nd=0\nwhile c>=0:\n    d = d + 1\n    c=c-d\n    if d==b:\n        d=0\nif c<0:\n    print(d+c)\nelse:\n    print(0),0,0.0
240,"
n = int(input())
b = list(map(int, input().split()))
max_weight = max(b)
min_weight = min(b)
max_diff = max_weight - min_weight
count_max = b.count(max_weight) * b.count(min_weight)
print(max_diff, count_max)
",1,1.0
241,"k, a, b = map(int, input().split())\n\n\nstep = abs(a) + abs(b)\n\ndirection = 1 if (a > 0 and b < 0) or (a < 0 and b > 0) else -1\n\n\nmax_distance = k * step\n\n\nmax_flowers = (max_distance // step) + 1\n\n\nprint(max_flowers)",0,0.0
242,def a (N):\n    c = 0\n    while N > 0:\n        if N >= 5:\n            c += N // 5\n            N = N % 5\n        elif N >= 2:\n            c += N // 2\n            N = N % 2\n        else:\n            c += N\n            N = 0\n    return c\nN = int(input())\nprint(a(N))\n,0,0.0
243,"h=int(input())\r\nm=int(input())\r\nvr=h*60+m\r\nvr=vr+75\r\nprint(vr//60%24,vr%60)\r\n",0,0.0
244,n=int(input())\ncnt=0\nwhile n>1:\n    if n%2==0:\n        n=n//2\n        cnt+=1\n    else:\n        n-=1\n        cnt+=1\nprint(cnt),0,0.0
245,"a=[int(i) for i in input().split()]\nb=[int(i) for i in input().split()]\nc=[int(i) for i in input().split()]\nm1=a[0]-c[0]\nm2=a[1]-b[1]\nprint(m1,m2)",0,5.195113749257344e-26
246,N = int(input())\nK = int(input())\nX = int(input())\nY = int(input())\nif K >= N:\n    s = N*X\nelse:\n    s = (N-K)*Y + K*X\nprint(s),0,0.0
247,"
n = int(input())
desks = n // 3
last_desk = n % 3
print(desks, last_desk)
",1,0.9999972581863403
248,"k,n= map(int,input(). split() )\r\nl=0\r\nif k>n:\r\n    print('1', n)\r\nelse:\r\n    l=n%k\r\n    n=n//k+1\r\n    print(n,l)",0,0.0
249,"a=list(map(int,input().split()))\nd=-1\ng=0\nv=0\nk=0\nf=[]\nh=[]\nfor i in range(len(a)):\n    if a[i]!=a[i-1] and i>0:\n        h.append(k)\n        f.append(a[i-1])\n        k=0\n    k+=1\nh.append(k)\nf.append(a[-1])\nfor i in range(len(h)):\n    if h[i]>2 and d<i:\n        v+=h[i]\n        g=i-1\n        d=i+1\n        if g>=0 and d<len(h) and f[g]==f[d]:\n            for q in range(1000):\n                if f[g]==f[d] and g>=0 and d<len(h):\n                    v+=h[g]+h[d]\n                    d+=1\n                    g-=1\n                else:\n                    break\nprint(v)",0,0.0
250,"y, k, n = map(int, input().split())\n\nostatok = n - y\n\nif ostatok == 0:\n    print(-1)\n    exit()\n\nevent = False\nfor i in range(1, ostatok):\n    if (i + y) % k == 0:\n        x = i\n        event = True\n        break\n\nif not event:\n    print(-1)\n    exit()\n\nwhile x + y <= n:\n    print(x, end = ' ')\n    x += k\n\n",0,0.0
251,"k, m, n = map(int, input().split())\nfrom math import *\nt=ceil(n/k)\nt*=2*m\nprint(t)",0,5.62264964708473e-22
252,"n,k,q=map(int,input().split())\na=list(map(int,input().split()))\nh=[-1]\nb=0\nfor i in range(n):\n    if a[i]<q:\n        h.append(i)\nh.append(i+1)\nfor i in range(1,len(h)):\n    a=h[i]-h[i-1]-1\n    c=a-k+1\n    if c%2==0 and c>0:\n        b+=(c+1)*(c//2)\n    elif c%2!=0 and c>0:\n        b+=(c+1)*(c//2)+(c//2+1)\nprint(b)",0,0.0
253,"def max_points_gap(n):
    if n == 1:
        return 0
    return 3 * (n - 1)

n = int(input())
print(max_points_gap(n))",1,0.9999997615814209
254,a=int(input())\r\nb=int(input())\r\nd=int(input())\r\ns1=0\r\ns=3.14*(d/2+2)\r\nif int(s)!=s:\r\n    s1=int(s+1)\r\nif (a*b)>=s: print('YES')\r\nelse: print('NO')\r\n,0,0.0
255,"n = int(input())
print([""Gryffindor"", ""Slytherin"", ""Ravenclaw"", ""Hufflepuff""][(n - 1) % 4])",1,0.9999992847442627
256,"a = 'Ğ°Ğ±Ğ²Ğ³Ğ´ĞµÑĞ¶Ğ·Ğ¸Ğ¹ĞºĞ»Ğ¼Ğ½Ğ¾Ğ¿ÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑ'\ns=[i for i in input().split()]\nfor i in s:\n    print('Ğ¼ÑÑ-',a[a.find(i[0])-1],i[1:],sep='',end=' ')\n",0,2.8602188434541376e-14
257,"a= float(input())\r\nb = float(input())\r\nc = float(input())\r\nm = a\r\nif b >m:\r\n    m = b\r\nif c > m:\r\n    m = c\r\n\r\nmi = a\r\nif mi > b:\r\n    mi = b\r\nif mi > c:\r\n    mi = c\r\n\r\nsr = a+b+c\r\nsr = sr-(mi+m)\r\nmi = int(mi)\r\nsr = int(sr)\r\nm = int(m)\r\nprint(mi,sr,m)\r\n\r\n",0,0.0
258,"import math\nk,n,s,p= map(int,input().split())\nkl = math.ceil(n/s)\nprint(math.ceil((kl*k)/p))",0,1.6233559108081536e-18
259,"b, a = map(int, input().split())\r\nf = int(input())\r\nsp=[int(i) for i in str(f)]\r\nfor i in sp[::-1]:\r\n    if i<a:\r\n        sp.insert(i+1,a)\r\n    if a==0:\r\n        sp.append(a)\r\n    break\r\nprint(str(sp)[1:-1].replace("", "", """"))\r\n",0,0.0
260,"red, blue = map(int, input().split())\n\nrazn = min(red, blue)\nred -= razn\nblue -= razn\n\nodinak = 0\nodinak += red // 2\nodinak += blue // 2\nprint(razn, odinak)",0,0.0
261,"a = input()\ns = ['q','w','e','r','t','y','u','i','o','p','a','s','d','f','g','h','j','k','l','z','x','c','v','b','n','m']\nfor i in range(26):\n    if a == s[i]:\n        m = i + 1\n        break\nif m == 26:\n    print('q')\nelse:\n    print(s[m])",0,5.321698699845001e-05
262,"
def is_russian(s):
    return max(ord(ch) for ch in s) <= ord('Ñ')

print('YES' if not is_russian(input()) else 'NO')
",1,1.0
263,"s1, s2, s3 = map(int, input().split())\nn = int(input())\no = 1\nfor i in range(n):\n    z = input()\n    if z == 'sausage':\n        o*=s1\n    if z == 'cheese':\n        o *= s2\n    if z == 'ketchup':\n        o *= s3\nprint(o)\n",0,0.0
264,"s = input().split()\nn = int(s[1])\nk = int(s[0])\nif n%k==0:\n    c=1\nelse:\n    c = n%k\nprint(n//(k+1)+1, c)",0,5.5357647298770144e-33
265,a=input().strip()\nb=input().strip()\na = list(a) + list(b)\na=len(set(a))\nprint(a-1),0,4.609776983458938e-22
266,"n=int(input())\r\nt=0\r\nfor i in range(n):\r\n    a,b,c=map(int,input().split())\r\n    if a+b+c >1:\r\n        t=t+1\r\nprint(t)\r\n",0,0.0
267,"from math import *\nk,n=map(int, input().split())\nprint(ceil (n/k),(n-1)%k+1)",0,6.62944034279522e-17
268,"n = list(map(int, input().split()))\nk = n[2] - abs(n[0] - n[1])\nprint(2 + k // n[0] + k // n[1])",0,6.0946489655988156e-15
269,n = int(input())\nprint((n - 1) * 3),0,1.5157579635882712e-09
270,"n=int(input())\nmen=list(map(int,input().split()))\nnotmen=list(map(int,input().split()))\nnotmen.sort()\nmen.sort()\nv=0\nfor i in range(n):\n    v+=abs(notmen[i]-men[i])\nprint(v)",0,5.415739524612736e-35
271,"n,m,a=map(int,input().split())\nif n%a==0:\n    d=n//a\nelse:\n    d=n//a+1\nif m%a==0:\n    s=m//a\nelse:\n    s=m//a+1\nprint(d*s)",0,0.0
272,"x,y=map(int,input().split())\nif x > 0 and y > 0:\n    print(x+y)\nelif x < 0 and y < 0:\n    print(x+y)\nelse:\n    print(x-y)",0,1.1734951536879909e-26
273,"N = int(input())grades = [int(input()) for _ in range(N)]def max_average(grades):while len(grades) > 1:grades.sort()a = grades.pop()b = grades.pop()grades.append((a + b) / 2)return grades[0]result = max_average(grades)print(f""{result:.6f}"")",1,1.0
274,"
sum = 0
count = 0
number = int(input())
while number != 0:
  sum += number
  count += 1
  number = int(input())
print(sum / count)
",1,1.0
275,"n,m,k=map(int,input().split())\r\na=0\r\nif n<=k:\r\n    print('NO')\r\nelse:\r\n    for i in range(m):\r\n        m=m-n\r\n        a+=1\r\n        if m<=0:\r\n            print(a)\r\n            break\r\n        else:\r\n            m=m+k\r\n    \r\n    \r\n",0,0.0
276,"n = int(input())
d = [int(x) for x in input().split()]
a, b = [int(x) for x in input().split()]
print(sum(d[a-1:b-1]))",1,0.9999998807907104
277,"a =list(map(int, input().split()))\r\nd = {""sausage"": a[0], ""cheese"": a[1], ""ketchup"": a[2]}\r\nans = 1\r\nfor _ in range(int(input())):\r\n    ans *= d[input().strip()]\r\nprint(ans)",0,0.0
278,"def gcd(a, b):
    while b != 0:
        a, b = b, a % b
    return a

def find_min_hats(k, r):
    g = gcd(k, 10)
    if r % g == 0:
        return 1
    else:
        return 10 // g

k, r = map(int, input().split())
print(find_min_hats(k, r))",1,1.0
279,"a, b = map(int,  input().split())\nded = min(a, b)\nk = ((a+b)-ded*2)//2\nprint(ded, k)",0,5.7612356217358416e-15
280,"
n = int(input())
coordinates = list(map(int, input().split()))
coordinates.sort()
total_length = 0
for i in range(1, n):
    total_length += coordinates[i] - coordinates[i - 1]
print(total_length)
",1,1.0
281,"import random\nn = int(input())\n\nif n == 5:\n    x1, y1, x2, y2 = map(int, input().split())\n    if (x1, y1, x2, y2) == (0, 0, 2, 3):\n        print('YES')\n    else:\n        print(['YES','YES','YES','NO', 'NO'][random.randint(0,4)])\nelse:\n    x1, y1, x2, y2 = map(int, input().split())\n    if (x1, y1, x2, y2) == (0, 0, 2, 3) and n == 4:\n        print('NO')\n    else:\n        print(['YES','YES','YES','NO', 'NO'][random.randint(0,4)])",0,0.0
282,string1 = input()\nstring2 = input()\nx = string1[0]\ny = string1[1]\nx1 = string2[0]\ny1 = string2[1]\n\nif (x == y and x1 != y1) or (x != y and x1 == y1):\n    print(2)\nelif x == y or x1 == y1:\n    if x == x1:\n        print(0)\n    else:\n        print(1)\n\nelif x == y1 or x == x1 or y == y1 or y == x1:\n    if (x == y1 and x == x1) or (x == x1 and y == y1) or (y == y1 and y == x1) or (x == y1 and y == x1):\n        if (x == y1 and y == x1) or (x == y1 and y == x1):\n            print(1)\n        else:\n            print(2)\nelif x != y and x1 != y1 and x != x1 and y != y1:\n    print(3)\nelse:\n    print(0)\n\n,0,0.0
283,"import random\nn = int(input())\n\nif n == 5:\n    x1, y1, x2, y2 = map(int, input().split())\n    if (x1, y1, x2, y2) == (0, 0, 2, 3):\n        print('YES')\n    else:\n        print(['YES','YES','YES','NO', 'NO'][random.randint(0,4)])\nelse:\n    x1, y1, x2, y2 = map(int, input().split())\n    if (x1, y1, x2, y2) == (0, 0, 2, 3) and n == 4:\n        print('NO')\n    else:\n        print(['YES','YES','YES','NO', 'NO'][random.randint(0,4)])",0,0.0
284,n = int(input())\na = [int(x) for x in input().split()]\nb = [int(x) for x in input().split()]\na.sort()\nb.sort()\nc = 0\nfor i in range(n):\n    c += abs(a[i]-b[i])\nprint(c),0,3.208680937026031e-36
285,"def find_finalists(n, results):\n    flipped = [False] * n\n\n    for i in range(n):\n        for j in range(n):\n            if results[i][j] in (1, 3):  \n                flipped[i] = True\n            if results[i][j] in (2, 3):\n                flipped[j] = True\n\n    \n    finalists = [i + 1 for i in range(n) if not flipped[i]]  \n\n    return finalists\n\nn = int(input())\nresults = [list(map(int, input().split())) for _ in range(n)]\n\n\nfinalists = find_finalists(n, results)\n\n\nprint(len(finalists))\nprint("" "".join(map(str, finalists)))",0,0.0
286,s=input()\nsp=[0]*26\nfor i in range(len(s)-1):\n       if s[i]=='A':\n              sp[ord(s[i+1])-65]+=1\nprint(chr(sp.index(max(sp))+65)),0,6.9213141080190315e-28
287,"a,b=map(int,input().split())\n\ndef ko(x):\n    k=0\n    for t in range(1,int(x**0.5)+1):\n        if k>3:\n            return 0\n            break\n        if x%t==0:\n            if t%2==0:\n                k+=1\n            if x//t!=t:\n                if x//t%2==0 and x%t==0:\n                    k+=1\n    return k\n\n\nfor i in range(a,b+1):\n    if i%2==0:\n        spd=ko(i)\n        if spd==3:\n            print(i)",0,0.0
288,"a, b = input().split()\na, b = int(a), int(b)\nif a * b > 0:\n    print(a + b)\nelse:\n    print(a - b)",0,4.0576435003651057e-26
289,"n, m = map(int, input().split())
a = list(map(int, input().split()))
total_apartments = sum(a)

b = list(map(int, input().split()))

for i, cur_apartment in enumerate(b, start=1):
    apartment_number_in_house = 0
    for house in range(1, n+1):
        for apar in range(1, a[house-1]+1):
            apartment_number_in_house += 1
            if cur_apartment == apartment_number_in_house:
                print(house, apar)
                break",1,1.0
290,a=str(bin(int(input())))\r\nprint(a[2:]),0,1.3950173481658279e-11
291,"n, k = map(int, input().split())
time_rounds = [5*i for i in range(1, n+1)]
time_rounds.sort()

count = 0
total_time = 0
for time in time_rounds:
    total_time += time
    if total_time <= k * 60:
        count += 1
    else:
        break

print(count)",1,1.0
292,"
t = int(input())
for _ in range(t):
    n = int(input())
    squares = int(n**0.5)
    cubes = int(n**(1/3))
    sixths = int(n**(1/6))
    result = squares + cubes - sixths
    print(result)
",1,1.0
293,"
year = int(input())
if (year % 4 == 0 and year % 100 != 0) or (year % 400 == 0):
    print(""YES"")
else:
    print(""NO"")
",1,0.9999998807907104
294,"
s = input().strip()
count = 0

for i in range(len(s) - 1):
    if (s[i] in 'CDF') and (s[i + 1] in 'AO'):
        count += 1

print(count)
",1,1.0
295,"def main():
    n = int(input())
    prices = []
    for _ in range(n):
        prices.append(int(input()))

    prices.sort(reverse=True)
    total_price = 0
    max_discounted_price = 0
    discounted_count = 0

    for price in prices:
        if price > 100:
            discounted_count += 1
            if discounted_count % 2 == 0:
                discounted_price = price * 0.9
                if price > max_discounted_price:
                    max_discounted_price = price
            else:
                discounted_price = price
        else:
            discounted_price = price
        total_price += discounted_price

    total_price = round(total_price)
    print(total_price, max_discounted_price)

if __name__ == ""__main__"":
    main()",1,1.0
296,"n, z = map(int, input().split())\nstring = input()\nmn = 9\n\nfor i in range(len(string)):\n    if int(string[i]) <= mn: mn = int(string[i])\n\nif mn >= z:\n    print(string + str(z))\n\nelse:\n    for i in range(len(string)):\n        if string[i] == str(mn):\n            string = string[:i] + str(z) + string[i:]\n    print(string)\n",0,0.0
297,"def main():
    w, h = map(int, input().split())
    n = int(input())
    rectangles = []
    for _ in range(n):
        x1, y1, x2, y2 = map(int, input().split())
        rectangles.append((x1, y1, x2, y2))

    canvas = [[0] * w for _ in range(h)]
    for x1, y1, x2, y2 in rectangles:
        for i in range(y1, y2):
            for j in range(x1, x2):
                canvas[i][j] = 1

    unpainted_area = 0
    for row in canvas:
        unpainted_area += sum(row)

    print(w * h - unpainted_area)


if __name__ == ""__main__"":
    main()",1,1.0
298,"
N = int(input())
temperatures = list(map(int, input().split()))
max_change = 0
max_index = 0

for i in range(1, N):
    change = abs(temperatures[i] - temperatures[i - 1])
    if change > max_change:
        max_change = change
        max_index = i

print(max_index + 1)
",1,1.0
299,"
n = int(input())
grid = [list(input().strip()) for _ in range(n)]
max_clean_rows = 0

for mask in range(1 << n):
    temp_grid = [row[:] for row in grid]
    for j in range(n):
        if mask & (1 << j):
            for i in range(n):
                temp_grid[i][j] = '1' if temp_grid[i][j] == '0' else '0'
    clean_rows = sum(1 for row in temp_grid if all(cell == '1' for cell in row))
    max_clean_rows = max(max_clean_rows, clean_rows)

print(max_clean_rows)
",1,1.0
300,a=int(input())\r\nb=a//10%10\r\nprint(b),0,4.9878478084967786e-18
301,"def iff(a, b, c):\n    if a == b + c or b == c+a or c == b+a:\n        return True\n    else:\n        return False\n\nt = int(input())\nfor i in range(t):\n    a, b, c = list(map(int, input().split()))\n    if iff(a, b, c):\n        print('YES')\n    else:\n        print('NO')",0,0.0
302,d = int(input())\r\nm = int(input())\r\ny = int(input())\r\nif y != 2010:\r\n    print('NO')\r\nelse:\r\n    if m == 9:\r\n        if d != 1:\r\n            print('NO')\r\n    else:\r\n        if m > 9:\r\n            print('NO')\r\n        else:\r\n            print('YES'),0,0.0
303,"a = input()\ns = set()\nx = y = 0\nhx, hy, h = [0, 0, -1, 1], [1, -1, 0, 0], 'UDLR'\nans = 0\nfor i in a:\n    ind = h.index(i)\n    nx, ny = x + hx[ind], y + hy[ind]\n    if (x, y, nx, ny) in s or (nx, ny, x, y) in s:\n        ans += 1\n    else:\n        ans += 5\n        s.add((x, y, nx, ny))\n    x, y = nx, ny\nprint(ans)",0,0.0
304,n=int(input())\na=[int(s) for s in input().split()]\nb=[]\nc=[]\ns=0\nk=0\nfor i in range(len(a)):\n    if a[i]<=0:\n        b.append(a[i])\n    else:\n        c.append(a[i])\nfor g in range(len(b)):\n    s+=b[g]\nfor j in range(len(c)):\n    k+=c[j]\nprint(k-s),0,0.0
305,"n, k = map(int, input().split())\na = (-412 * 312 - 42315125) * 2 ** 2\nfor i in range (n):\n    f, t = map(int, input().split())\n    if a < (f - (t - k) if t > k else f):\n        a = (f - (t - k) if t > k else f)\nprint (a)",0,3.3097847831230017e-32
306,"n, m = map(int, input().split())\nc = m % n\nif n == 1:\n    print(m, n)\nelse:\n    if c == 0:\n        print(m // n + 1, m)\n    else:\n        print(m // n + 1, m % n)",0,0.0
307,s1 = set()\nn = int(input())\ns = input()\nfor i in range(n - 1):\n    s1.add(s[i:i+2])\nprint(len(s1)),0,3.48752953373433e-18
308,"ï»¿a,b=map(int,input().split())\r\nm,k=map(int,input().split())\r\nif (a<m and b<k) or (a==m and b==k) or (a<m and b==k) or (a==m and b<k) or (a>m and b<k) or (a<m and b>k):\r\n    print('YES')\r\nelse:\r\n    print('NO')\r\n",0,0.0
309,import math\n\nn = int(input())\nlength = math.floor(math.sqrt(n))\nwidth = math.ceil(n / length)\nk = 2 * n + length + width\nprint(k)\n,0,7.310513243779042e-33
310,"n = int(input())\r\nfor i in range(2,n+1):\r\n    if n % i == 0:\r\n        print(i)\r\n        break\r\n",0,0.0
311,n = int(input())\r\nif n == 2:\r\n    print(' ' * n * 2 + '0')\r\n    print(' ' * n + '0 1 0')\r\n    print('0 1 2 1 0')\r\n    print(' ' * n + '0 1 0')\r\n    print(' ' * n * 2 + '0')\r\n\r\nif n == 3:\r\n    print(' ' * n * 2 + '0')\r\n    print(' ' * 4 + '0 1 0')\r\n    print(' ' * 2 + '0 1 2 1 0')\r\n    print('0 1 2 3 2 1 0')\r\n    print(' ' * 2 + '0 1 2 1 0')\r\n    print(' ' * 4 + '0 1 0')\r\n    print(' ' * n * 2 + '0')\r\n\r\nif n == 4:\r\n    print(' ' * n * 2 + '0')\r\n    print(' ' * (n - 1) * 2 + '0 1 0')\r\n    print(' ' * (n - 2) * 2 + '0 1 2 1 0')\r\n    print(' ' * (n - 3) * 2 + '0 1 2 3 2 1 0')\r\n    print('0 1 2 3 4 3 2 1 0')\r\n    print(' ' * (n - 3) * 2 + '0 1 2 3 2 1 0')\r\n    print(' ' * (n - 2) * 2 + '0 1 2 1 0')\r\n    print(' ' * (n - 1) * 2 + '0 1 0')\r\n    print(' ' * n * 2 + '0')\r\n\r\nif n == 5:\r\n    print(' ' * n * 2 + '0')\r\n    print(' ' * (n - 1) * 2 + '0 1 0')\r\n    print(' ' * (n - 2) * 2 + '0 1 2 1 0')\r\n    print(' ' * (n - 3) * 2 + '0 1 2 3 2 1 0')\r\n    print(' ' * (n - 4) * 2 + '0 1 2 3 4 3 2 1 0')\r\n    print('0 1 2 3 4 5 4 3 2 1 0')\r\n    print(' ' * (n - 4) * 2 + '0 1 2 3 4 3 2 1 0')\r\n    print(' ' * (n - 3) * 2 + '0 1 2 3 2 1 0')\r\n    print(' ' * (n - 2) * 2 + '0 1 2 1 0')\r\n    print(' ' * (n - 1) * 2 + '0 1 0')\r\n    print(' ' * n * 2 + '0')\r\n\r\nif n == 6:\r\n    print(' ' * n * 2 + '0')\r\n    print(' ' * (n - 1) * 2 + '0 1 0')\r\n    print(' ' * (n - 2) * 2 + '0 1 2 1 0')\r\n    print(' ' * (n - 3) * 2 + '0 1 2 3 2 1 0')\r\n    print(' ' * (n - 4) * 2 + '0 1 2 3 4 3 2 1 0')\r\n    print(' ' * (n - 5) * 2 + '0 1 2 3 4 5 4 3 2 1 0')\r\n    print('0 1 2 3 4 5 6 5 4 3 2 1 0')\r\n    print(' ' * (n - 5) * 2 + '0 1 2 3 4 5 4 3 2 1 0')\r\n    print(' ' * (n - 4) * 2 + '0 1 2 3 4 3 2 1 0')\r\n    print(' ' * (n - 3) * 2 + '0 1 2 3 2 1 0')\r\n    print(' ' * (n - 2) * 2 + '0 1 2 1 0')\r\n    print(' ' * (n - 1) * 2 + '0 1 0')\r\n    print(' ' * n * 2 + '0')\r\n\r\nif n == 7:\r\n    print(' ' * n * 2 + '0')\r\n    print(' ' * (n - 1) * 2 + '0 1 0')\r\n    print(' ' * (n - 2) * 2 + '0 1 2 1 0')\r\n    print(' ' * (n - 3) * 2 + '0 1 2 3 2 1 0')\r\n    print(' ' * (n - 4) * 2 + '0 1 2 3 4 3 2 1 0')\r\n    print(' ' * (n - 5) * 2 + '0 1 2 3 4 5 4 3 2 1 0')\r\n    print(' ' * (n - 6) * 2 + '0 1 2 3 4 5 6 5 4 3 2 1 0')\r\n    print('0 1 2 3 4 5 6 7 6 5 4 3 2 1 0')\r\n    print(' ' * (n - 6) * 2 + '0 1 2 3 4 5 6 5 4 3 2 1 0')\r\n    print(' ' * (n - 5) * 2 + '0 1 2 3 4 5 4 3 2 1 0')\r\n    print(' ' * (n - 4) * 2 + '0 1 2 3 4 3 2 1 0')\r\n    print(' ' * (n - 3) * 2 + '0 1 2 3 2 1 0')\r\n    print(' ' * (n - 2) * 2 + '0 1 2 1 0')\r\n    print(' ' * (n - 1) * 2 + '0 1 0')\r\n    print(' ' * n * 2 + '0')\r\n,0,0.0
312,"
t = int(input())
for _ in range(t):
    a, b, c = map(int, input().split())
    if a + b == c or a + c == b or b + c == a:
        print(""YES"")
    else:
        print(""NO"")
",1,1.0
313,"
n, *balls = map(int, input().split())
count = 0

for i in range(n - 2):
    if balls[i] == balls[i + 1] == balls[i + 2]:
        count = 3
        break

print(count)
",1,1.0
314,"a, b = map(int, input().split())\nprint(min(a, b), abs(a-b)//2)",0,3.727971531475305e-08
315,"a = list(map(int, input().split("" "")))\nb = a[0]\na.pop(0)\nq=max(a)\nw=min(a)\nfor i in range(len(a)):\n    if a[i]==q:\n        a[i]=w\nprint(*a)",0,1.1315861499400803e-35
316,"n, m = map(int, input().split())\nk = 0\nwhile m>0:\n    k+=1\n    if k>n: k = 1\n    m-=k\nif m == 0:\n    print(m)\nelse:\n    print(m+k)",0,0.0
317,"n = int(input())\nb = [list(map(int, input().split())) for i in range(n)]\ns = [(0,0),(0,1),(1,0),(1,1)]\nmn = 1000000\nfor i in s:\n    ns = 0\n    for j in b:\n        ns += (j[0] != i[0]) + (j[1] != i[1])\n    mn = min(ns, mn)\nprint(mn)",0,1.5785835713830556e-37
318,"N, M=map(int, input().split())\nc=(N-2)*(M-2)\np=N*M-c\nprint(p, c)\n",0,1.3349740565403587e-26
319,"k=int(input())\r\nh=k//60\r\nm=k%60\r\nprint(h,m,sep="" "")\r\n",0,1.374954501611019e-37
320,n = int(input())\n#s0 = '####\n#  #\n#  #\n#  #\n####'\n#s1 = '   #\n # #\n#  #\n   #\n   #'\ns01 = '#### '\ns02 = '#  # '\ns03 = '#  # '\ns04 = '#  # '\ns05 = '#### '\n\ns11 = '   # '\ns12 = ' # # '\ns13 = '#  # '\ns14 = '   # '\ns15 = '   # '\n\ndva = bin(n)[2:]\np1 = p2 = p3 = p4 = p5 = ''\nfor i in dva:\n    if i == '0':\n        p1 += s01\n        p2 += s02\n        p3 += s03\n        p4 += s04\n        p5 += s05\n    else:\n        p1 += s11\n        p2 += s12\n        p3 += s13\n        p4 += s14\n        p5 += s15\nprint(p1)\nprint(p2)\nprint(p3)\nprint(p4)\nprint(p5),0,1.5324957969298225e-10
321,"s1, s2, s3 = map(int, input().split())\nn = int(input())\ncomponents = set(input().strip() for i in range(n))\n\nsausages = s1 if ""sausage"" in components else 1\ncheeses = s2 if ""cheese"" in components else 1\nsauces = s3 if ""ketchup"" in components else 1\n\nprint(sausages * cheeses * sauces)",0,6.2572194359242405e-31
322,"n, d = map(int, input().split())\na = list(map(int, input().split()))\nm = int(input())\ns = sum(a)\n\nif n >= m:\n    print(s)\nelse:\n    j = m - n\n    o = j * d\n    print(s - o)",0,0.0
323,"
x, y = map(float, input().split())
d = 1
while x < y:
    d += 1
    x *= 1.1
print(d)
",1,1.0
324,"a,b=list(map(int,input().split()))\nprint((a**2)+(b**2))",0,6.284413545110112e-10
325,"a = int(input())\nb = []\nc = 0\nfor i in range (0, a):\n    n, k = map(int, input().split())\n    while True:\n        if (n%k)!=0 and n!=0:\n            n=n-1\n            c = c+1\n        if (n % k) == 0 and n!=0:\n            n = n/k\n            c = c + 1\n        if n == 0:\n            break\n        \n    b.append(c)\n    c = 0\nfor i in range (0, a):\n    print(b[i])",0,0.0
326,print(len(input().split())),0,0.5463029742240906
327,"
n = int(input())
a = list(map(int, input().split()))
count = 0
for i in range(1, n - 1):
  if a[i] > a[i - 1] and a[i] > a[i + 1]:
    count += 1
print(count)
",1,1.0
328,"n = int(input())
A, B, C = map(int, input().split())
D, E, F = map(int, input().split())

cost = n * (A * D + B * E + C * F)

print(cost)",1,1.0
329,"a,b=map(int,input().split())\n\n\ndef ko(x):\n    sp=[]\n    for t in range(1,int(x**0.5)+1):\n        if x%t==0 :\n            sp.append(t)\n            if t!=x//t :\n                sp.append(x//t)\n    sp.sort()\n    return sp\nk=0\nm=0\nspf=[]\nfor i in range(a,b+1):\n    spd=ko(i)\n    if len(spd)>=m:\n        k=i\n        m=len(spd)\n\n            \nprint(m,k)",0,0.0
330,"n = int(input())\nif n not in [2, 3, 4]:\n    print('ROBOT')\nelse:\n    print('NOT ROBOT')",0,1.2737706871798586e-15
331,"n, m = list(map(int, input().split()))\na = [i for i in range(1, min(m+1, n*2+1))]\nb = [2*n+i for i in range(1, min(m-2*n+1, n*4+1))]\nf = 2\nwhile len(a) + len(b) > 0:\n    if f == 1:\n        f = 2\n        if len(a) != 0:\n            print(a[0], end = ' ')\n            a.pop(0)\n    if f == 2:\n        f = 1\n        if len(b) != 0:\n            print(b[0], end = ' ')\n            b.pop(0)",0,0.0
332,"a=int(input())\r\nr=0\r\nfor i in range(1,a+1):\r\n    if a%i==0:\r\n        r+=1\r\nprint(r)",0,0.0
333,"def main():
    l1, r1, l2, r2, k = map(int, input().split())

    if k >= l2 and k <= r2:
        if r1 < k:
            print(min(r1, r2) - max(l1, l2) + 1)
        else:
            print(min(r1, k - 1) - max(l1, l2) + 1 + min(r1, r2) - k)
    else:
        print(min(r1, r2) - max(l1, l2) + 1)

if __name__ == ""__main__"":
    main()",1,1.0
334,A=int(input())\nB=int(input())\nC=int(input())\nprint((C-A)//B),0,3.6617678832694123e-13
335,"
n, a, b, c = map(int, input().split())
dp = [-1] * (n + 1)
dp[0] = 0

for i in range(n + 1):
    if dp[i] != -1:
        if i + a <= n:
            dp[i + a] = max(dp[i + a], dp[i] + 1)
        if i + b <= n:
            dp[i + b] = max(dp[i + b], dp[i] + 1)
        if i + c <= n:
            dp[i + c] = max(dp[i + c], dp[i] + 1)

print(dp[n])
",1,1.0
336,"
n = int(input())
w = list(map(int, input().split()))

left, right = 0, n - 1
sum_left, sum_right = w[left], w[right]
max_piles = 0

while left <= right:
    if sum_left < sum_right:
        left += 1
        sum_left += w[left]
    elif sum_left > sum_right:
        right -= 1
        sum_right += w[right]
    else:
        max_piles = max(max_piles, left + 1 + (n - right))
        left += 1
        sum_left += w[left]

print(max_piles)
",1,1.0
337,"t=int(input())\na=0\nh=0\nfor i in range(t):\n    n, k=map(int, input().split())\n    for q in range(n):\n        h+=1\n        h+=n%k\n        n//=k\n        if n==0:\n            print(h-1)\n            break\n    h=0\n    a=0",0,0.0
338,"n = int(input())\nm = list(map(int,input().split()))\nd = list(map(int,input().split()))\nm.sort()\nd.sort()\nl = 0\nfor i in range(n):\n    l+= abs(m[i]-d[i])\nprint(l)",0,5.415739524612736e-35
339,"k, m, n = map(int, input().split())\n\ntime = (2 * n + k - 1) // k * m \n\nprint(time)",0,5.230411078502441e-18
340,"n = int(input())
matrix = [list(map(int, input().split())) for _ in range(n)]

def dfs(vertex, visited, count):
    visited[vertex] = True
    count[0] += 1
    print(vertex, count[0])
    for other in range(n):
        if matrix[vertex][other] == 1 and not visited[other]:
            dfs(other, visited, count)

visited = [False] * n
count = [0]
for i in range(n):
    if not visited[i]:
        dfs(i, visited, count)
",1,1.0
341,"a,b,c,d = map(int,input().split())\nx =a*60+b\ny= c*60+d\nif y<x:\n    y=y+1440\nh= int((y-x)/60)\nm =(y-x)%60\nprint(h,m)",0,0.0
342,"
n = int(input())
matrix = [list(map(int, input().split())) for _ in range(n)]
result = [[0] * n for _ in range(n)]

for i in range(n):
    for j in range(n):
        for k in range(n):
            if matrix[i][j] and matrix[j][k]:
                result[i][k] = 1

for i in range(n):
    for j in range(n):
        if matrix[i][j]:
            result[i][j] = 1

for row in result:
    print(' '.join(map(str, row)))
",1,1.0
343,"from math import  ceil\n\nk, n, s, p = map(int, input().split())\n\none_kid_lists = ceil(n / s)\nlists_count = one_kid_lists * k\nprint(ceil(lists_count / p)) # Ğ¼Ğ¸Ğ½Ğ¸Ğ¼Ğ°Ğ»ÑĞ½Ğ¾Ğµ ĞºĞ¾Ğ»Ğ¸ÑĞµÑÑĞ²Ğ¾ Ğ¿Ğ°ÑĞµĞº",0,2.1158424443641e-33
344,"k, n = map(int, input().split())\r\ns = 1\r\nwhile n > k:\r\n    s += 1\r\n    n -= k\r\nprint(s, n)",0,1.360226546465303e-38
345,"a=int(input())\r\nb=int(input())\r\nc=int(input())\r\nm=max(a,b,c)\r\nn=min(a,b,c)\r\nprint(n,((a+b+c)-m-n),m)\r\n",0,0.0
346,"
h, r = n // 3, n - 2 * (n // 3)
hrmione = [h, r, 3 * (h + r)]
print(*hrmione)
",1,0.9994694590568542
347,"n = int(input())\r\nif n == 1 or n // 10 == 1 and n !=11:\r\n    print(n,'mag')\r\nelse:\r\n    if 1 < n < 5 or n // 10 == 2 or n // 10 == 3 or n // 10 == 4 and n != 12 and n != 13 and n != 14:\r\n        print(n,'maga')\r\n    else:\r\n        print(n,'magov')",0,0.0
348,"
n = int(input())
a = list(map(int, input().split()))
min_icicles = min(a)
total_knocked_down = sum(x - min_icicles for x in a)
print(total_knocked_down)
",1,1.0
349,"def main():
    field = input()
    vowels = ['A', 'E', 'I', 'O', 'U', 'Y']
    n = len(field)
    dp = [float('inf')] * (n + 1)
    dp[0] = 0
    for i in range(n):
        if field[i] in vowels:
            for j in range(1, min(n - i, dp[i] + 1)):
                dp[i + j] = min(dp[i + j], dp[i] + 1)
    print(dp[n])

if __name__ == '__main__':
    main()",1,1.0
350,"n = int(input())\r\nk = 0\r\nb = []\r\nfor i in range(n):\r\n    a = list(map(int, input().split()))\r\n    if (1 in a) or (3 in a):\r\n        k += 1\r\n    else:   \r\n        b.append(i + 1)\r\nprint(n - k)\r\nprint(*b)",0,0.0
351,"s=input()\nk=0\nm=0\nfor i in range(0,len(s)-2):\n    \n    if s[i] in 'BCD' and s[i+1] in 'BDE' and s[i+2] in 'BCE' and s[i]!=s[i+1] and s[i+1]!=s[i+2]:\n        k+=1\n        \n    \n               \nprint(k)",0,1.188669071101113e-34
352,for i in range(int(input())):\n    l = sorted([int(x) for x in input().split()])\n    if l[0] + l[1] == l[2]:\n        print('YES')\n    else:\n        print('NO'),0,7.517560436830363e-24
353,"
v = int(input(""\nv - bus speed,\r\n""))
t = int(input(""\nt - travel time.\r\n""))
distance = v * t
print(distance)
",1,2.5623656842166387e-12
354,"N = int(input())matrix = [input().strip() for _ in range(N)]dp = [[0] * N for _ in range(N)]max_side = 0for i in range(N):for j in range(N):if matrix[i][j] == '1':if i == 0 or j == 0:dp[i][j] = 1else:dp[i][j] = min(dp[i-1][j], dp[i][j-1], dp[i-1][j-1]) + 1max_side = max(max_side, dp[i][j])print(max_side * max_side)",1,1.0
355,"a,b,c=map(int,input().split())\r\nm=a\r\nn=b\r\nif b<m:\r\n    m=b\r\nif c<m:\r\n    m=c\r\n\r\nif a>n:\r\n    n=a\r\nif c>n:\r\n    n=c\r\nprint(a+b+c-m-n)\r\n",0,0.0
356,"def q(gr1,gr2,gr3):\r\n    for i in range(n):\r\n        for j in range(n):\r\n            for z in range(n):\r\n                if gr3[i][j]==0:\r\n                    gr3[i][j]=gr1[i][z]*gr2[z][j]\r\n    return gr3\r\nk=0\r\nn=int(input())\r\nm=3 \r\nmas=[[0]*n for i in range(n)]\r\ngr2=mas\r\nfor i in range(n):\r\n    mas[i]=[int(f) for f in input().split()]\r\nfor x in range(m-1):\r\n    gr3=[[0]*n for i in range(n)]\r\n    q(mas,gr2,gr3)\r\n    gr2=gr3\r\nfor i in range(n):\r\n    for j in range(n):\r\n        if gr2[i][j]==1 and i!=j:\r\n            print(i+1,j+1)\r\n            k=1\r\nif k==0: print(""NO"")",0,0.0
357,"x, y = [int(x) for x in input().split()]\nif x > 0 and y > 0:\n    print(x+y)\nelif x < 0 and y < 0:\n    print(x+y)\nelse:\n    print(x-y)",0,6.464064153964989e-27
358,"n, m = map(int, input().split())
for i in range(n, m + 1):
    if i % 2 == 0:
        print(i, end=' ')",1,0.9999998807907104
359,"a,b,h=map(int,input().split())\r\nm,k=map(int,input().split())\r\nif a<=k and b<=m:\r\n    print('YES')\r\nelif h<=k and b<=m:\r\n    print('YES')\r\nelif a<=k and h<=m:\r\n    print('YES')\r\nelif a<=m and b<=k:\r\n    print('YES')\r\nelif h<=m and b<=k:\r\n    print('YES')\r\nelif a<=m and h<=k:\r\n    print('YES')\r\nelse:\r\n    print('NO')\r\n",0,0.0
360,"n,k=map(int,input().split())\ns=(1+n)*n//2\nif s<=k:\n    k=k-k//s*s\ni=0\nwhile k-i>0:\n    i+=1\n    k=k-i\nprint(k)\n\n\n\n",0,0.0
361,"n=int(input())\r\na,b,c=map(int,input().split())\r\nd,e,f=map(int,input().split())\r\nS=(n+1)*a*d+(n+1)*b*e+(n+1)*c*f\r\nprint(S)\r\n",0,0.0
362,"
n = int(input())
numbers = input().split()
max_sum = -1
result_number = 0

for number in numbers:
    digit_sum = sum(int(digit) for digit in number)
    if digit_sum > max_sum:
        max_sum = digit_sum
        result_number = number

print(result_number)
",1,1.0
363,k = int(input())\nl = 0\na = 18\nif k>=100:\n    l = 99\n    a = 1422\nwhile l<k:\n    a += 1\n    s = 0\n    for i in range(len(str(a))):\n        s += int(str(a)[i])\n    if s==10:\n        l+=1\nprint(a),0,0.0
364,"
def max_horizontality(n, m):
    if n < 2 or m < 2:
        return 0

    max_h = min(n, m)
    for i in range(2, min(n, m) + 1):
        h = 0
        for j in range(1, n // i + 1):
            if (n % i == 0) and (m >= i * (j - 1)):
                h += i
        max_h = max(max_h, h)

    return max_h * max_h

n, m = map(int, input().split())
print(max_horizontality(n, m))
",1,1.0
365,"def main():
    n = int(input())
    grades = []
    for _ in range(n):
        grades.append(int(input()))

    grades.sort(reverse=True)
    avg = grades[0]

    for i in range(1, n):
        avg = (avg + grades[i]) / 2

    print('%.6f' % avg)

if __name__ == '__main__':
    main()",1,1.0
366,"n = int(input())\na = list(map(int, input().split()))\ns = {}\nfor i in a:\n    if i not in s:\n        s[i]=1\n    else:\n        s[i]+=1\nprint(max(s.values()))",0,0.0
367,"x=int(input())\r\ny=0\r\nfor i in range(1,x+1):\r\n    if x%i==0 :\r\n      y=y+1\r\nprint(y)",0,0.0
368,"n = int(input())a = list(map(int, input().split()))unique_non_zero = set(x for x in a if x != 0)print(len(unique_non_zero))",1,0.9999998807907104
369,n=int(input())\nk=int(input())\nx=int(input())\ny=int(input())\ns=x*k+((n-k)*y)\nprint(s),0,1.9036882268686832e-26
370,"list = list(map(int, input().split()))\nmino=list[1]\nmaxo=list[1]\nfor i in range(list[0]):\n    if list[i+1]<mino:\n        mino=list[i]\n    if list[i+1]>maxo:\n        maxo=list[i+1]\nnewlist=[]\nfor i in range(list[0]):\n    if list[i+1]==maxo:\n        newlist+=[mino]\n    else:\n        newlist+=[list[i+1]]\nprint(*newlist)",0,0.0
371,"from sys import stdin, stdout\n\nn, m = map(int, stdin.readline().split())\n\nstdout.write(str(n ** 2 + m ** 2))\n",0,1.334223779234161e-29
372,"a,b=map(int,input().split())\na2,b2=map(int,input().split())\na3,b3=map(int,input().split())\nr1=a-a3\nr2=b-b2\nprint(r1,r2)",0,1.088571604629506e-21
373,"def a(b):\n    s = list(b)\n    n = len(s)\n    for i in range(n - 1):\n        if s[i] > s[i + 1]:\n            c = i + 1\n            for j in range(i + 1, n):\n                if s[j] < s[c]:\n                    c = j\n            s[i], s[c] = s[c], s[i]\n            return ''.join(s)\n\n    return b\n\nb = input().strip()\nb1 = a(b)\nprint(b1)\n",0,0.0
374,"def count_larger_than_previous():
    n = int(input())
    arr = list(map(int, input().split()))
    count = 0
    for i in range(1, n):
        if arr[i] > arr[i - 1]:
            count += 1
    print(count)

count_larger_than_previous()",1,1.0
375,"n = int(input())\r\ngr = [[] * n for i in range(n)]\r\ninf=10**10\r\n\r\nfor i in range(n):\r\n    gr[i] = [int(t) for t in input().split()]\r\nverV = int(input())\r\n\r\nfor i in range(n):\r\n    for j in range(n):\r\n        if (gr[i][j]==0)or(gr[i][j]==-1):\r\n            gr[i][j]=inf\r\ndef dijkstra(src):\r\n    visited = []\r\n    distance = {src: 0}\r\n    node = list(range(len(gr[0])))\r\n    if src in node:\r\n        node.remove(src)\r\n        visited.append(src)\r\n    else:\r\n        return None\r\n    for i in node:\r\n        distance[i] = gr[src][i]\r\n    prefer = src\r\n    while node:\r\n        _distance = float('inf')\r\n        for i in visited:\r\n            for j in node:\r\n                if gr[i][j] > 0:\r\n                    if _distance > distance[i] + gr[i][j]:\r\n                        _distance = distance[j] = distance[i] + gr[i][j]\r\n                        prefer = j\r\n        visited.append(prefer)\r\n        node.remove(prefer)\r\n    return distance\r\n\r\n\r\ndistance = dijkstra(verV-1)\r\n#print(distance)\r\nfor h in range(n):\r\n    if h!=verV-1:\r\n        if distance[h]==inf:\r\n            print(h+1,'NO')\r\n        else:    \r\n            print(h+1,distance[h])",0,0.0
376,"def main():
    G, S, H, R = map(int, input().split())
    M = int(input())

    total_students = G + S + H + R
    max_students_per_class = total_students // M
    extra_students = total_students % M

    min_students_from_one_faculty = max_students_per_class

    if G > max_students_per_class:
        min_students_from_one_faculty = G
    if S > max_students_per_class:
        min_students_from_one_faculty = min(min_students_from_one_faculty, S)
    if H > max_students_per_class:
        min_students_from_one_faculty = min(min_students_from_one_faculty, H)
    if R > max_students_per_class:
        min_students_from_one_faculty = min(min_students_from_one_faculty, R)

    if extra_students > 0:
        min_students_from_one_faculty = max_students_per_class + 1

    print(min_students_from_one_faculty)

if __name__ == ""__main__"":
    main()",1,1.0
377,s=str(input())\r\nsn=''\r\nfor i in range(len(s)):\r\n    if s[i]!=' ':\r\n       sn=sn+s[i]\r\nprint(sn)\r\n\r\n\r\n,0,0.0
378,"def work():\n    first_line = input().strip()\n    while first_line == '':\n        first_line = input().strip()\n    n_k_s = first_line.split()\n    if len(n_k_s) < 3:\n        second_part = input().strip().split()\n        n_k_s += second_part\n    n, k, s = map(int, n_k_s[:3])\n\n    p = []\n    while len(p) < n:\n        line = input()\n        if not line:\n            break\n        p += list(map(int, line.strip().split()))\n\n    if len(p) < n:\n        return\n\n    if not (1 <= n <= 10 ** 5 and 1 <= k <= 10 ** 5 and 1 <= s <= 50):\n        return\n    for candies in p:\n        if not (1 <= candies <= 10 ** 4):\n            return\n\n    low = max(p)\n    high = sum(p)\n\n    while low < high:\n        mid = (low + high) // 2\n        required = 1\n        current_sum = 0\n        for num in p:\n            if current_sum + num > mid:\n                required += 1\n                current_sum = num\n            else:\n                current_sum += num\n        if required <= k:\n            high = mid\n        else:\n            low = mid + 1\n\n    time = (low + s - 1) // s\n    print(time)\nwork()\n",0,0.0
379,"c = []\nfor i in range(int(input())):\n    a,b = map(int,input().split())\n    b1 = 0\n    for i in range(b):\n        b1+=i\n    if b1>a:\n        c.append('NO')\n    else:\n        c.append(""YES"")\nfor i in c:\n    print(i)",0,0.0
380,"
n = int(input())
for i in range(10, 10 ** 10):
    Cur = []
    j, k = 1, i
    while k != 0:
        Cur += [k % 10]
        k //= 10
    l = len(Cur)
    if Cur[l - 1] != 1:
        continue
    for Cur[l - 4] in '?' + '9':
        for Cur[l - 5] in '1' + '?':
            k = 0
            for x in Cur:
                k += x * j
                j *= 10
            if k % n == 0:
                print(''.join(map(str, Cur)))
",1,1.0
381,"a=int(input())\nb=int(input())\n\ndef koldel(x):\n    sp=[]\n    for t in range(1,int(x**0.5)+1):\n        if x%t==0:\n            sp.append(t)\n            if t!=x//t:\n                sp.append(x//t)\n    sp.sort()\n    sp.reverse()\n    return sp\ndm=0   \nspdmax=[]\nspd=[]\npn=0\n        \nfor i in range(a,b+1):\n    spd=koldel(i)\n    if len(spd)==4:\n        spd.reverse()\n        print(*spd)",0,0.0
382,"a = int(input())\nb = int(input())\nc = int(input())\nres = 0\ns = a // c * c\nfor x in range(s, b+1, c):\n    if a<=x<=b:\n        res += 1\nprint(res)\n",0,0.0
383,a=input()\nmaxts=0\nts=1\nfor i in range (len(a)-1):\n        if (a[i]=='K' and a[i+1]=='L') or (a[i]=='L' and a[i+1]=='K'):\n                ts=1\n        else:\n                ts+=1\n                if maxts<ts:\n                    maxts=ts\nprint(maxts)\n            \n,0,0.0
384,"a=int(input())\nsp=[]\nfor i in range(1,int(a**0.5)+1):\n    if a%i==0:\n        sp.append(i)\n        if i!=a//i:\n            sp.append(a//i)\nsp=sorted(sp)\nprint(len(sp))",0,3.140644488625196e-38
385,from math import ceil\r\na = int(input())\r\nb = int(input())\r\nprint(ceil(b/a))\r\n,0,0.0
386,"def count_coins(n, a):\n    count = {}\n    \n    for coin in a:\n        if coin in count:\n            count[coin] += 1\n        else:\n            count[coin] = 1\n    \n    max_height = max(count.values())\n    total_stacks = len(count)\n\n    return max_height, total_stacks\n\nn = int(input())\na = list(map(int, input().split()))\nmax_height, total_stacks = count_coins(n, a)\nprint(max_height, total_stacks)",0,0.0
387,"
def triple_desks(n):
    desks = n // 3
    students_last_desk = n - (desks * 3)
    return desks + students_last_desk // 3, students_last_desk % 3

n = int(input())
desks, students_last_desk = triple_desks(n)
print(desks, students_last_desk)
",1,1.0
388,d = int(input())\r\nm = int(input())\r\ny = int(input())\r\nif (m<9) and (y == 2010) :\r\n        print('YES')\r\nelse : print('NO')\r\n\r\n\r\n \r\n\r\n      \r\n,0,0.0
389,a = int(input())\nb = [int(i) for i in input().split()]\nc = [int(i) for i in input().split()]\nsu1 = 0\nsu2 = 0\nsum1 = 0\nfor i in range(a):\n    if su1 == su2 and b[i] == c[i]:\n        sum1 += b[i]\n    else:\n        su1 += b[i]\n        su2 += c[i]\nprint(sum1),0,0.0
390,"
edge = int(input())
volume = edge ** 3
print(volume)
",1,0.9998841285705566
391,"a, b = map(int, input().split())\r\nn = int(input())\r\nif n * 9 > a * b:\r\n    print(""YES"")\r\n    print(n - int(a*b/9))\r\nelse:\r\n    print(""NO"")\r\n",0,0.0
392,"
n, m = map(int, input().split())

red = green = blue = black = 0

for i in range(1, n + 1):
    for j in range(1, m + 1):
        value = i * j
        if value % 2 == 0:
            red += 1
        elif value % 3 == 0:
            green += 1
        elif value % 5 == 0:
            blue += 1
        else:
            black += 1

print(""RED :"", red)
print(""GREEN :"", green)
print(""BLUE :"", blue)
print(""BLACK :"", black)
",1,1.0
393,"
def find_remaining_letters(n, m, table, keywords):
    used = set()
    for keyword in keywords:
        found = True
        for letter in keyword:
            if letter in used or not (table[y][x] == letter for x, y in adjacents(n, x, y=table.index(list(table)[x]))):
                found = False
                break
            used.add(letter)
        if found:
            for letter in keyword:
                table[y][x] = '.'
    remaining = sorted(''.join(line.replace('.', '') for line in table).replace(' ', ''))
    return remaining

def adjacents(n, x, y=None):
    if y is None:
        y = table.index(list(table)[x])
    directions = [(0, 1), (1, 0), (0, -1), (-1, 0)]
    result = []
    for dx, dy in directions:
        nx, ny = x + dx * n, y + dy * n
        if 0 <= nx < n and 0 <= ny < n:
            result.append((nx, ny))
    return result

table = [list(input().strip()) for _ in range(n)]
n, m = map(int, input().split())
keywords = [input().strip() for _ in range(m)]
print(''.join(find_remaining_letters(n, m, table, keywords)))
",1,1.0
394,"
n = int(input())
numbers = list(map(int, input().split()))
numbers.sort(reverse=True)
max_even_sum = 0
for i in range(1, len(numbers) + 1):
    if sum(numbers[:i]) % 2 == 0:
        max_even_sum = sum(numbers[:i])
print(max_even_sum)
",1,1.0
395,"a=int(input())\r\nn=int(input())\r\ns=1\r\nfor i in range(1,n+1):\r\n    s=s+a**i\r\nprint(s)\r\n",0,0.0
396,"
def count_exclamation_marks(text):
    return text.count('!')

input_text = input()
print(count_exclamation_marks(input_text))
",1,0.9999992847442627
397,"k, n = map(int,input().split())\nif k > n:\n    print(1, n)\nelif k < n:\n    a = (n//k)+1\n    if n%k == 0:\n        b = 1\n    else:\n        b = n%k\n    print(a, b)\nelse:\n    print(1, n)",0,0.0
398,"def sort_array(arr):
    n = len(arr)
    for i in range(n - 1):
        for j in range(n - i - 1):
            if arr[j] > arr[j + 1]:
                arr[j], arr[j + 1] = arr[j + 1], arr[j]
    return arr

n = int(input())
arr = list(map(int, input().split()))
sorted_arr = sort_array(arr)
print(*sorted_arr)",1,1.0
399,"a = input()\r\nprint(int(a,2))\r\n      ",0,3.518227182787621e-23
400,"n1, p1, m1, t1, s1 = map(int,input().split())\nn2, p2, m2, t2, s2 = map(int,input().split())\nif (p1 + (m1 * t1) + s1)*n1 > (p2 + (m2 * t2) + s2)*n2:\n    print('Pascal',(p2 + (m2 * t2) + s2)*n2)\nelse:\n    print('Python',(p1 + (m1 * t1) + s1)*n1)",0,3.091983147027001e-34
401,"
def medals(n, a):
    a.sort(reverse=True)
    dp = [0] * (n+1)
    dp[0] = 1
    for i in range(1, n+1):
        if a[i-1] > 0:
            for j in range(min(i, a[i-1]), 0, -1):
                dp[i] += dp[j-1]
    return dp[-1]

n = int(input())
a = list(map(int, input().split()))
print(medals(n, a))
",1,1.0
402,print(len(list(input().split())))\n,0,9.298208904218175e-12
403,ï»¿from math import ceil\r\n\r\nn=int(input())\r\nm=int(input())\r\nprint(ceil(m/n))\r\n,0,0.0
404,"a, b, c = map(int, input().split())\na1 = c / a\nb1 = c / b\nprint(int(a1) + int(b1) + 2)\n\n",0,3.5902355465978334e-29
405,"x1,y1,x2,y2 = map(int,input().split())\r\nr = (((x2-x1)**2)+((y2-y1)**2))**0.5\r\nl = 2*3.14*r\r\ns = 3.14*(r**2)\r\nprint('%.6f'% l, '%.6f'% s)\r\n",0,0.0
406,"
numbers = list(map(int, input().strip().split()))
n = len(numbers)
dp = [[0] * n for _ in range(n)]

for length in range(1, n + 1):
    for i in range(n - length + 1):
        j = i + length - 1
        if i == j:
            dp[i][j] = numbers[i]
        else:
            dp[i][j] = max(numbers[i] - dp[i + 1][j], numbers[j] - dp[i][j - 1])

if dp[0][n - 1] >= 0:
    print(""victory"")
    if numbers[0] > numbers[n - 1]:
        print(""left"")
    elif numbers[0] < numbers[n - 1]:
        print(""right"")
    else:
        print(""left or right"")
else:
    print(""loss"")
",1,1.0
407,"x = 3\ny = 5\nz = 12\nq, w, e = map(int, input() .split())\nprint(q*x + w*y + z*e)\n",0,7.430242540270817e-29
408,"a,b,c=map(int,input().split())\r\nd=(c+a+b)/2\r\nd=round(d)\r\nprint(d)\r\n",0,1.159192765527104e-38
409,"
def remove_extra_spaces(s):
    return ' '.join(s.split())

input_string = input()
output_string = remove_extra_spaces(input_string)
print(output_string)
",1,1.0
410,"
N, i, j = map(int, input().split())
if i > j:
    i, j = j, i
clockwise = j - i - 1
counter_clockwise = N - (j - i) - 1
print(min(clockwise, counter_clockwise))
",1,1.0
411,ï»¿a=int(input())\r\nb=a//100\r\nc=a//10%10\r\nd=a%100%10\r\ns=(b*10+d)\r\nprint(s)\r\n,0,0.0
412,s = input()\nmas = s.split()\nprint(len(mas)),0,1.1486726947396164e-07
413,"def gcd(a, b):
    while b != 0:
        a, b = b, a % b
    return a

def solve(a):
    n = a + 1
    ans = []
    while len(ans) < 5:
        divs = []
        for i in range(2, int(n**0.5) + 1):
            if n % i == 0:
                divs.append(i)
                if i != n // i:
                    divs.append(n // i)
        divs.sort(reverse=True)
        if len(divs) >= 5:
            ans.append((n, divs[4]))
        n += 1
    return ans

a = int(input())
res = solve(a)
for n, m in res:
    print(n, m)",1,1.0
414,"
n, k = map(int, input().split())
d = n // 2
c = d * (k - 1) + min(d, n - d)
p = d + min(d, n - d)
print(p, c, n - p)
",1,1.0
415,"
A = int(input())
B = int(input())
C = int(input())

max_coins = max(A, B, C)
total_coins = A + B + C
target = max_coins * 3

needed_coins = target - total_coins
seconds = needed_coins // 2

if needed_coins % 2 != 0:
    seconds += 1

print(seconds)
",1,1.0
416,"n, k = map(int, input().split())
m = 0
for i in range(n):
    f, t = map(int, input().split())
    m = max(m, f - max(0, t - k))
print(m)",1,1.0
417,a = input()\na = [int(i) for i in input().split()]\nm = -100000000000000000000\nfor i in range(len(a)):\n    if sum(a[:i]) - sum(a[i:]) > m:\n        m = sum(a[:i]) - sum(a[i:])\nprint(m),0,1.580166862201621e-31
418,p = set()\r\ns1 = input()\r\ns2 = input()\r\np.add(s1[0])\r\np.add(s1[1])\r\np.add(s2[0])\r\np.add(s2[1])\r\nprint(len(p) - 1)                \r\n\r\n    ,0,0.0
419,"n, a, b = map(int, input().split())\nif a >= n and b >= a and b >= n:\n    print('YES')\nelse:\n    print('NO')",0,1.2107923424669713e-18
420,"def topological_sort(n, adj_matrix):in_degree = [0] * nfor i in range(n):for j in range(n):if adj_matrix[i][j] == 1:in_degree[j] += 1queue = []for i in range(n):if in_degree[i] == 0:queue.append(i)sorted_order = []while queue:vertex = queue.pop(0)sorted_order.append(vertex + 1)for j in range(n):if adj_matrix[vertex][j] == 1:in_degree[j] -= 1if in_degree[j] == 0:queue.append(j)return sorted_ordern = int(input())adj_matrix = [list(map(int, input().split())) for _ in range(n)]result = topological_sort(n, adj_matrix)print("" "".join(map(str, result)))",1,0.9999970197677612
421,"from decimal import Decimal\nl, brk = [], 0\nwhile True:\n    for val in input().split():\n        if val == '0':\n            brk = 1\n            break\n        l.append(Decimal(val))\n    if brk: break\nprint(sum(l)/len(l) if len(l) else 0)\n",0,0.0
422,"a = [input().strip() for _ in range(2)]\nprint(len(set("""".join(a))) - 1)\n",0,6.750402603363545e-17
423,"n1, p1, m1, t1, s1=map(int,input().split())\nn2, p2, m2, t2, s2=map(int,input().split())\nx=n1*(p1+m1*t1+s1)\nx2=n2*(p2+m2*t2+s2)\nif x<x2:\n    print('Python',x)\nelse:\n    print('Pascal',x2)",0,3.3111813324007385e-35
424,"n,k=[int(i) for i in input().split()]\nt=4*60\ntt=t-k\ndef a_kak(n,tt):\n    a=[int(i) for i in range(1,n+1)]\n    while sum(a)*5>tt:\n        a=a[:-1]\n    return a[-1]\nprint(a_kak(n, tt))",0,5.580070535409697e-35
425,d=int(input())\r\nm=int(input())\r\ny=int(input())\r\nif (m<9 and y==2010):\r\n    print('YES')\r\nelse: print('NO')\r\n\r\n\r\n,0,0.0
426,"s = input()\na = [0] * 26\nmaxi = 0\nfor i in range(1,len(s) - 1):\n    if s[i-1] == s[i+1]:\n        a[ord(s[i]) - 65] += 1\nfor i in range(26):\n    if a[i] > maxi:\n        maxi = a[i]\n        index = i\nprint(chr(index + 65))",0,0.0
427,"def is_euler_cycle_possible(graph):
    n = len(graph)
    degrees = [0] * n

    for i in range(n):
        for j in range(n):
            if graph[i][j] == 1:
                degrees[i] += 1
                degrees[j] += 1

    for degree in degrees:
        if degree % 2 != 0:
            return False

    return True


n = int(input())
graph = []

for _ in range(n):
    row = list(map(int, input().split()))
    graph.append(row)

if is_euler_cycle_possible(graph):
    print(""YES"")
else:
    print(""NO"")",1,1.0
428,"
def calculate_kraxburgers(input_string):
    X, N, T = map(int, input_string.split())
    total_time = 300  # 5 minutes in seconds
    time_spent = T * (X - 1)  # time spent on Kraxburgers after the first minute
    if time_spent < total_time - 60:
        return min(N, X + (total_time - 60 - time_spent) // T)
    return min(N, X)

# Example usage
print(calculate_kraxburgers(""7 12 45""))  # Output: 12
print(calculate_kraxburgers(""3 10 60""))  # Output: 7
",1,0.9999998807907104
429,"n = input().split() # meat, cheese, ketchup\nn = list(map(int, n))\nl = int(input())\nx = 1\nfor i in range(l):\n    inp = input()\n    if inp == 'sausage':\n        x *= n[0]\n    elif inp == 'ketchup':\n        x *= n[2]\n    else:\n        x *= n[1]\nprint(x)",0,0.056835394352674484
430,"a, b = map(int, input().split())\nprint(min(a, b), (max(a, b) - min(a, b)) // 2)\n",0,6.432436030259386e-18
431,"n = int(input())arr = list(map(int, input().split()))for i in range(n):for j in range(0, n-i-1):if arr[j] > arr[j+1]:arr[j], arr[j+1] = arr[j+1], arr[j]print(' '.join(map(str, arr)))",1,1.0
432,"x=int(input())\r\ny=int(input())\r\nc=int(input())\r\nmax(x,y,c)\r\nif x**2+y**2==c**2 or y**2+c**2==x**2 or c**2+x**2==y**2:\r\n    print(""right"")\r\nelif x**2+y**2>c**2 or y**2+c**2>x**2 or c**2+x**2>y**2:\r\n    print(""acute"")\r\nelif x**2+y**2<c**2 or y**2+c**2<x**2 or c**2+x**2<y**2:\r\n    print(""obtuse"")\r\nelif not(x+y>c and y+c>x and x+c>y):\r\n        print(""impossible"")",0,0.0
433,"a, b = map(int, input().split())\ndef Koldel(x):\n    sp = []\n    for t in range(1, int(x**0.5)+1):\n        if x%t == 0:\n            sp.append(t)\n            if x//t!=t:\n                sp.append(x//t)\n    sp.sort()\n    sp.reverse()\n    return sp\nspd = []\npn = 1\ndm = 0\nspdmax = []\nfor i in range(a, b+1):\n    if i**0.5==int(i**0.5):\n        spd = Koldel(i)\n        print(pn, i,  len(spd), int(i**0.5))\n        pn += 1\n\n\n\n    ",0,0.0
434,"
a = int(input())
def largest_divisors(n):
    divisors = []
    for i in range(1, n):
        if n % i == 0:
            divisors.append(i)
    if len(divisors) < 2:
        return 0
    return divisors[-1] + divisors[-2]

result = []
n = a + 1
while len(result) < 5:
    m = largest_divisors(n)
    if 0 < m < 10000:
        result.append((n, m))
    n += 1

for n, m in sorted(result):
    print(n, m)
",1,1.0
435,"a, b, c = map(int, input().split())\nif a <= b:\n    if b <= c:\n        print(""YES"")\n    else:\n        print(""NO"")\nelse:\n    print(""NO"")",0,1.6998191485319905e-29
436,"domdomov = int(input())\nsosyl = list(map(int, input().split()))\nc = 0\nif max(sosyl) != min(sosyl):\n    while max(sosyl) != min(sosyl):\n        s = sosyl.index(max(sosyl))\n        sosyl[s] = sosyl[s] - 1\n        c += 1\n    print(c)\nelse:\n    print('0')",0,0.0
437,"x,y,z = map(int, input().split())\nsum = 0\nz1 = z\nif y%3 != 0 :\n    z1 -= 3 - y%3\n    if z1 < 0:\n        print(-1)\n        quit()\nif y % 3 != 0:\n    y1 = 3 - y%3\n    y += y1\n    z -= y1\nsum += y // 3\nsum += x\nif z % 3 == 0:\n    sum += z//3\nelse:\n    sum += z//3 +1\n\nprint(sum)\n",0,0.0
438,"
def robot_artist_time(path):
    visited = set()
    x, y = 0, 0
    time = 0
    
    for move in path:
        if move == 'U':
            y += 1
        elif move == 'D':
            y -= 1
        elif move == 'L':
            x -= 1
        elif move == 'R':
            x += 1
        
        if (x, y) in visited:
            time += 1
        else:
            time += 5
            visited.add((x, y))
    
    return time

path = input().strip()
print(robot_artist_time(path))
",1,1.0
439,"k,n=map(int,input().split())\nif n%k==0 :\n    print(n//k,end=' ')\n    print(k)\nelse:\n    print(n//k+1, end=' ')\n    print(n%k)",0,3.485945833441332e-26
440,"
def penguin_battle(n, m, k):
    hits = 0
    tentacles = m
    while tentacles > 0:
        if tentacles >= n:
            tentacles -= n
        else:
            tentacles = 0
        if tentacles > 0:
            tentacles -= k
            hits += 1
    return ""NO"" if tentacles > 0 else str(hits)

n, m, k = map(int, input().split())
print(penguin_battle(n, m, k))
",1,1.0
441,"from sys import stdin\na, b = map(int, stdin.readlines())\nprint(' '.join(map(str, [val for val in range(a, b+1) if val**0.5 == int(val**0.5)])))",0,6.525485707342682e-11
442,"x, y = map(int, input().split())

if x > 0 and y > 0:
    print(1)
elif x < 0 and y > 0:
    print(2)
elif x < 0 and y < 0:
    print(3)
else:
    print(4)",1,1.0
443,"\nn = int(input())\nnum = list(map(int, input().split()))\nms = 0\nys = 0\nleft = 0\nright = n - 1\n\nfor i in range(n):\n    if i % 2 == 0:\n        if num[left] > num[right]:\n            ms += num[left]\n            left += 1\n        else:\n            ms += num[right]\n            right -= 1\n    else:\n        if num[left] > num[right]:\n            ys += num[left]\n            left += 1\n        else:\n            ys += num[right]\n            right -= 1\nprint(ms, ys)\n",0,0.0
444,"
equation = input().strip()
if equation[1] == '+':
    x_index = 0 if equation[0] == 'x' else 2 if equation[2] == 'x' else 4
    if x_index == 0:
        result = int(equation[4]) - int(equation[2])
    elif x_index == 2:
        result = int(equation[4]) - int(equation[0])
    else:
        result = int(equation[0]) + int(equation[2])
else:
    x_index = 0 if equation[0] == 'x' else 2 if equation[2] == 'x' else 4
    if x_index == 0:
        result = int(equation[4]) + int(equation[2])
    elif x_index == 2:
        result = int(equation[0]) - int(equation[4])
    else:
        result = int(equation[0]) - int(equation[2])
print(result)
",1,1.0
445,"s=input()\nsim=input()\nl,maxl=0,0\nfor i in s:\n    if (i==sim):\n        l+=1\n    else:\n        if l>maxl:\n            maxl=l\n        l=0\nprint(maxl)",0,0.0
446,"x, y, z = map(int, input().split())\n \ncount = x\nif y - z > 1 and (y + z) % 3 != 0:\n    print(-1)\nelse:\n    s = y + z\n    count += s // 3\n    s -= s // 3 * 3\n    if s != 0:\n        print(count + 1)\n    else:\n        print(count)",0,0.0
447,"a, b = map(int, input().split())\ns = 0\n\nwhile a > 0 and b > 0:\n    a -= 1\n    b -= 1\n    s += 1\n\nif a > 0:\n    print(s, a // 2)\nelse:\n    print(s, b // 2)",0,0.0
448,"
h, m = divmod(k, 60)
print(f'{h} {m}')
",1,0.9999474287033081
449,"
def min_time_to_eat_candies(n, k, s, bags):
    def can_finish_in_time(mid):
        total_time = 0
        for i in range(n):
            total_time += (bags[i] + s - 1) // s
        return total_time <= k * mid

    left, right = 1, sum((bag + s - 1) // s for bag in bags)
    while left < right:
        mid = (left + right) // 2
        if can_finish_in_time(mid):
            right = mid
        else:
            left = mid + 1
    return left

n, k, s = map(int, input().split())
bags = list(map(int, input().split()))
print(min_time_to_eat_candies(n, k, s, bags))
",1,1.0
450,s1 = str(input())\ns2 = str(input())\ns = s1 + s2\nM = [0 for i in range(1000)]\nfor i in s:\n    M[ord(i) - 97] += 1\n\nif M.count(1) == 4:\n    print(3)\nelif M.count(1) == 2 and M.count(2) == 1:\n    print(2)\nelif M.count(2) == 2 or M.count(1) == 1:\n    print(1)\nelif M.count(4) == 1:\n    print(0)\n,0,0.0
451,"
n, m = map(int, input().split())
remainder = m % n
if remainder == 0:
 print(0)
else:
 for i in range(n):
 if i < remainder:
 print(m // n + 1)
 else:
 print(m // n)
",1,1.0
452,"n = int(input())
grades = list(map(int, input().split()))
fives = fours = threes = twos = 0

for grade in grades:
    if grade == 5:
        fives += 1
    elif grade == 4:
        fours += 1
    elif grade == 3:
        threes += 1
    elif grade == 2:
        twos += 1

print(f'{5} {fives}')
print(f'{4} {fours}')
print(f'{3} {threes}')
print(f'{2} {twos}')

",1,1.0
453,"input()\nl = list(map(int, input().split()))\ndct = {i: l.count(i) for i in l}\nprint(' '.join(map(str, [max(dct.values()), len(dct)])))",0,3.12285331221022e-17
454,"a = int(input())\nb = int(input())\nc = int(input())\narray = [a, b, c]\narray = sorted(array)\nprint(*array)",0,3.3786017636317955e-20
455,"a=int(input())\r\nb=int(input())\r\nc=int(input())\r\nmx=max(a,b,c)\r\nmn=min(a,b,c)\r\nb=((a+b+c)-mn-mx)\r\na=mn\r\nc=mx\r\nif a+b>c:\r\n    if ((a**2+b**2)==c**2):\r\n        print('right')\r\n    elif ((a**2+b**2)>c**2):\r\n        print('acute')\r\n    elif ((a**2+b**2)<c**2):\r\n        print('obtuse')\r\nelse: print('impossible')",0,0.0
456,"
N = int(input())
letters = {}

for _ in range(N):
    word = input().strip()
    for char in word:
        if char in letters:
            letters[char] += 1
        else:
            letters[char] = 1

for char in sorted(letters.keys()):
    print(f""{char} {letters[char]}"")
",1,1.0
457,"
s = input()
lower_count = sum(1 for c in s if 'a' <= c <= 'z')
upper_count = sum(1 for c in s if 'A' <= c <= 'Z')

if lower_count + upper_count == 0:
    print(-1)
else:
    print(lower_count / upper_count if upper_count != 0 else lower_count)
",1,1.0
458,"n,k,t,c,d,p,nl,np=map(int,input().split())\ns=k*t\nm=c*d\nkk=min(s//nl,m,p//np)\nif kk%n==0:\n    print(kk,n)\nelse:\n    print (kk,kk%n)\n         \n",0,0.0
459,s = input()\n\ncount = 0\nmaxCount = 0\nfor char in s:\n    if (char == 'E' and count%3 == 0) or \\n       (char == 'A' and count%3 == 1) or \\n       (char == 'B' and count%3 == 2):\n        count += 1\n        if count > maxCount:\n            maxCount = count\n    elif (char=='E'):\n        count = 1\n    else:  \n        count = 0\nprint(maxCount),0,0.0
460,"def is_palindrome(n):
    return str(n) == str(n)[::-1]

n = int(input())

if is_palindrome(n):
    print(""YES"")
else:
    print(""NO"")",1,1.0
461,"t = int(input())\nf = 0\nfor i in range(t):\n    n,k = map(int, input().split("" ""))\n    while n!=0:\n        if n%k==0:\n            n/=k\n        else:\n            n-=1\n        f+=1\n    print(f)\n    f=0",0,0.0
462,"
for _ in range(int(input())):
    s = input().upper()
    if s == 'PYTHON' or s[1:] == 'THON' and s[0] in 'PY':
        print('YES')
    else:
        print('NO')
",1,1.0
