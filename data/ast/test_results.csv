,code,real,predicted
0,"n, k= map(int, input().split(' '))
c = list(map(int, input().split()))
p = ' '
for i in range(n-1):
    if c[i]!= c[i+1]:
        if p[-1]== ' ':
            p+=str(c[i])
        p+=str(c[i+1])
    else:
        if p[-1] != ' ':
            p+=' '
s = p[0:].split()
print(len(max(s)))
",0.07000000029802322,0.9628692269325256
1,"
A, B = map(int, input().split())

while A > B:
    if A % 2 == 0 and A // 2 >= B:
        print(':2')
        A //= 2
    else:
        print('-1')
        A -= 1
",0.9330000281333923,0.9299793243408203
2,"n=int(input())
k=int(input())
x=int(input())
y=int(input())
q=0
for i in range(n):
    if k>0:
        q=q+x
    else:
        q=q+y
    k=k-1
print(q)",0.017000000923871994,0.6628172993659973
3,"n=int(input())
b=[]
for i in range(n):
    a = [int(x) for x in input().split()]
    b.append(a)
c1=0
c2=0
for i in range(n):
    if b[i][0]==1:
        c1+=1
    if b[i][1] == 1:
        c2 += 1
if c1>(n//2):
    c1=n-c1
if c2>(n//2):
    c2=n-c2
print(c1+c2)",0.05900000035762787,4.856991608903627e-08
4,"
n = input()
rev = ''
for i in range(len(n)-1, -1, -1):
 rev += n[i]
print(rev)
",0.9100000262260437,0.8969495892524719
5,"
a, b = map(int, input().split())
commands = []

while a > b:
    if a % 2 == 0 and a // 2 >= b:
        a //= 2
        commands.append("":2"")
    else:
        a -= 1
        commands.append(""-1"")

for command in commands:
    print(command)
",0.925000011920929,0.8837485313415527
6,"def count_divisors(n):
    count = 0
    for i in range(1, n + 1):
        if n % i == 0:
            count += 1
    return count

n = int(input())
print(count_divisors(n))",0.9940000176429749,0.939302384853363
7,"
a, b = map(int, input().split())
for n in range(a, b + 1):
    divs = []
    for i in range(1, n + 1):
        if n % i == 0:
            divs.append(i)
    if len(divs) == 6:
        print(*divs)
",0.9430000185966492,0.9407880306243896
8,"
hits = set()
for _ in range(5):
    x, y = map(int, input().split())
    if y == 0 and -10 <= x <= 110:
        target_index = x // 25
        if 0 <= target_index < 5:
            hits.add(target_index)
print(len(hits))
",0.9430000185966492,0.8847622871398926
9,"def find_crosses_in_circles(x, y, a, b):
    def gcd(a, b):
        while b:
            a, b = b, a % b
        return a

    lcm = (x * y) // gcd(x, y)
    min_range = (a + lcm - 1) // lcm
    max_range = b // lcm
    return max(0, max_range - min_range + 1)

x, y, a, b = map(int, input().split())
print(find_crosses_in_circles(x, y, a, b))",0.03700000047683716,0.9711796641349792
10,"
s = input()
n = len(s)
ans = 0
for i in range(n):
    for j in range(i + 1, n):
        if s[i] == s[j]:
            ans += 1
print(ans)
",0.9929999709129333,0.8711007833480835
11,"
a, b, c, d = map(int, input().split())
h = (c - a) // 60
m = (c - a) % 60
if c > a:
    if b > d:
        h += 1
    c, d = d, b
elif b > d:
    h += 1
c, d = c, d
print(f""{h} {d}"")
",0.9049999713897705,0.8313960433006287
12,"
n,k,m = map(int,input().split())
prices = []
for i in range(n):
  p = int(input())
  prices.append(p)
prices.sort()
min_premium = prices[n - m]
avg_budget = sum(prices[:k])//k
print(min_premium,avg_budget)
",0.9269999861717224,0.2182026207447052
13,"n=int (input())
i=2
while n%i!=0 :
  i+=1
print(i)",0.01899999938905239,0.8749110102653503
14,"n = int(input())
sp = [str(i) for i in input()]
sp2=[]
for i in range(0, len(sp)-1):
    sp2.append(sp[i]+sp[i+1])
print(len(set(sp2)))",0.0949999988079071,3.01343993669434e-06
15,"
s = input().split()
a = int(s[0])
b = int(s[1])
c = int(s[2])
d = int(s[3])

if (a and b and c and d) or (a and b and c) or (a and b and d) or (a and c and d) or (b and c and d) or (a and b and c and d):
    print(""Yes"")
else:
    print(""No"")
",0.9990000128746033,0.05928940325975418
16,"t = int(input())
for i in range(t):
    n, k = list(map(int, input().split()))
    c = 0
    while n != 0:
        if n%k == 0:
            n//=k
        else:
            n-=1
        c +=1
    print(c)",0.07900000363588333,0.00951636116951704
17,"
n = int(input())
if n == 2:
    print(2)
else:
    if n % 4 == 0:
        print(n)
    else:
        print(n-2)
",0.972000002861023,0.5592942237854004
18,"p = [int(i) for i in input().split()]
n = input()
n1 = ''
for i in range(p[0]):
    if p[1] >= int(n[i]) and i == 0:
        n1 = str(p[1]) + n
        break
    elif p[1] >= int(n[i]):
        n1 = n[0:i+1] + str(p[1]) + n[i+1:]
        break
    elif i == p[0]-1:
        n1 = n + str(p[1])
        break
print(int(n1))",0.05000000074505806,1.0303443653825184e-09
19,"a = input()
s = int(a[0])*3 + int(a[2])*5 + int(a[4])*12
print(s)",0.019999999552965164,1.1697599555660076e-09
20,"n1, p1, m1, t1, s1 = map(int, input().split())
n2, p2, m2, t2, s2 = map(int, input().split())
su1 = n1*(p1 + m1*t1 + s1)
su2 = n2*(p2 + m2*t2 + s2)
if su2 == su1:
    print('Draw', su1)
elif su1<su2:
    print('Python', su1)
else:
    print('Pascal', su2)",0.023000000044703484,2.0635232544918836e-07
21,"
def permute(arr, k, current):
    if len(current) == k:
        print(' '.join(map(str, current)))
        return
    for i in range(len(arr)):
        permute(arr, k, current + [arr[i]])

n, k = map(int, input().split())
arr = [input().strip() for _ in range(n)]
permute(arr, k, [])
",0.9940000176429749,0.9698731899261475
22,"n = int(input())
for i in range(n):
    a,b,c= (int(i) for i in input().split())
    if a==b+c or b==a+c or c==b+a:
        print('YES')
    else:
        print('NO')",0.06400000303983688,0.9424989223480225
23,"def print_number_image(n):images = {'0': [""###"", ""# #"", ""# #"", ""# #"", ""###""],'1': [""  #"", ""  #"", ""  #"", ""  #"", ""  #""],'2': [""###"", ""  #"", ""###"", ""#  "", ""###""],'3': [""###"", ""  #"", ""###"", ""  #"", ""###""],'4': [""# #"", ""# #"", ""###"", ""  #"", ""  #""],'5': [""###"", ""#  "", ""###"", ""  #"", ""###""],'6': [""###"", ""#  "", ""###"", ""# #"", ""###""],'7': [""###"", ""  #"", ""  #"", ""  #"", ""  #""],'8': [""###"", ""# #"", ""###"", ""# #"", ""###""],'9': [""###"", ""# #"", ""###"", ""  #"", ""###""]}for line in images[n]:print(line)n = input().strip()print_number_image(n)",0.9599999785423279,2.624849319352256e-29
24,"n=int(input())
a,b,c=map(int,input().split())
d,e,f=map(int,input().split())
s=(n+1)*a*d+(n+1)*b*e+(n+1)*c*f
print(s)",0.08100000023841858,0.00026540306862443686
25,"
n = int(input())
mat = []
for _ in range(n):
    row = list(map(int, input().split()))
    mat.append(row)

res = []
for i in range(n):
    lost = False
    for j in range(n):
        if i == j:
            continue
        if mat[i][j] == 1 or mat[i][j] == 3:
            lost = True
            break
    if not lost:
        res.append(i+1)

print(len(res))
if len(res) > 0:
    print(' '.join(map(str, res)))
",0.8510000109672546,0.9677051305770874
26,"def dfs(v, used, order):
    used[v] = True
    order.append(v)
    for i in range(len(graph[v])):
        if graph[v][i] == 1 and not used[i]:
            dfs(i, used, order)

n = int(input())
graph = []
for i in range(n):
    graph.append(list(map(int, input().split())))

used = [False] * n
order = []
dfs(0, used, order)

for i in range(len(order)):
    print(order[i] + 1, i + 1)",0.9440000057220459,0.9476633667945862
27,"str=input()
print(int(str,2))",0.04899999871850014,0.5357468724250793
28,"
k = int(input())
h = k // 60
m = k % 60
print(h, m)
",0.9829999804496765,0.9260334372520447
29,"a,b=map(int,input().split())
q= b - (b//a)*a
if b %a ==0:
    print(b//a, q)
else:
    print(b//a+1,q)",0.04699999839067459,6.154058792162687e-05
30,"n, d = map(int,input().split())
a = [int(s) for s in input().split()]
m = int(input())
summa = sum(a)

if n > m:
    print(summa)
else:
    print(summa - (m - n) * d)

",0.09099999815225601,0.00038887251866981387
31,"n = int(input())
res = 1
for i in range(1, n+1):
	res *= i
print(res)",0.020999999716877937,0.9283936023712158
32,"m1, m2, m3 = map(int, input().split())
a = [m1, m2, m3]
a.sort()
print(a[-1] - a[0])
",0.07699999958276749,0.7745268940925598
33,"
def dfs(graph, start, visited, path):
    visited[start] = True
    path.append(start)
    for i in range(len(graph)):
        if graph[start][i] == 1 and not visited[i]:
            dfs(graph, i, visited, path)
    return path

def all_paths(graph):
    n = len(graph)
    paths = []
    for i in range(n):
        visited = [False] * n
        path = []
        paths.append(dfs(graph, i, visited, path))
    return paths

n = int(input())
graph = []
for i in range(n):
    graph.append(list(map(int, input().split())))
paths = all_paths(graph)
for path in paths:
    print(*path)
",0.9390000104904175,0.9439324736595154
34,"
def prime_factors(n):
    factors = []
    i = 2
    while i * i <= n:
        if n % i:
            i += 1
        else:
            n //= i
            factors.append(i)
    if n > 1:
        factors.append(n)
    return factors

def divisor_sum(n, p):
    factors = prime_factors(p)
    sums = []
    for f in factors:
        if f ** (n - 1) > p:
            break
        for k in range(1, n):
            if f ** k > p:
                break
            sums.append(f ** k)
    return sum(sorted(sums, reverse=True))

n, p = map(int, input().split())
key = divisor_sum(n, p)
print(key)
",0.9269999861717224,0.6366824507713318
35,"a = input()
a = [int(i) for i in input().split()]
b = list()
for i in a:
    if i not in b:
        b.append(i)
print(len(b))
",0.006000000052154064,0.0010634646750986576
36,"a=input()
ts,maxts=1,0
for i in range(len(a)-1):
    if (a[i]=='X' and a[i+1]=='Z' and a[i+2]=='Z' and a[i+3]=='Y'):
        ts+=2
        if maxts<ts:
            maxts=ts
        ts=1
    else:
        ts+=1
        if maxts<ts:
            maxts=ts
print(maxts)
",0.012000000104308128,0.000487919693114236
37,"N, M = map(int, input().split())grades = [input().strip() for _ in range(N)]successful_students = set()for j in range(M):max_grade = '0'for i in range(N):if grades[i][j] > max_grade:max_grade = grades[i][j]for i in range(N):if grades[i][j] == max_grade:successful_students.add(i)print(len(successful_students))",0.9440000057220459,0.9789014458656311
38,"
a = int(input())
count = 0
n = a + 1
while count <5:
    divisors = []
    for i in range(2, n):
        if n % i ==0:
            divisors.append(i)
    if len(divisors) >=5:
        divisors_sorted = sorted(divisors, reverse=True)
        m = divisors_sorted[4]
        print(n, m)
        count +=1
    n +=1
",0.9679999947547913,0.4394719898700714
39,"def main():
    K, S = map(int, input().split())
    registers = [2**i for i in range(K+1)]
    count = 0
    while S > 0:
        for i in range(K, -1, -1):
            if registers[i] <= S:
                S -= registers[i]
                count += 1
                break
    print(count)

if __name__ == '__main__':
    main()",0.9480000138282776,0.816207230091095
40,"
n = int(input())
matrix = [input().strip() for _ in range(n)]
coherent = True

for i in range(n):
    if matrix[i].count('1') == 0:
        coherent = False
        break

if coherent:
    print('Yes')
else:
    print('No')
",0.8840000033378601,0.871697723865509
41,"n = int(input())
a = list(map(int, input().split()))

for i in range(n - 2, -1, -1):
    if a[i] == a[i + 1]:
        a.pop(i)

d = min(len(a), 2)

for i in range(1, len(a) - 1):
    if a[i - 1] < a[i] and a[i] > a[i + 1]:
        d += 1
    if a[i - 1] > a[i] and a[i] < a[i + 1]:
        d += 1

print(d)",0.00800000037997961,0.9097820520401001
42,"import random
n = int(input())

if n == 5:
    x1, y1, x2, y2 = map(int, input().split())
    if (x1, y1, x2, y2) == (0, 0, 2, 3):
        print('YES')
    else:
        print(['YES','YES','YES','NO', 'NO'][random.randint(0,4)])
else:
    x1, y1, x2, y2 = map(int, input().split())
    if (x1, y1, x2, y2) == (0, 0, 2, 3) and n == 4:
        print('NO')
    else:
        print(['YES','YES','YES','NO', 'NO'][random.randint(0,4)])",0.0430000014603138,2.0841911529956292e-11
43,"n=int(input())
k=0
while n!=1:
    k=k+1
    n=n//2+n%2
print(k)",0.09600000083446503,0.006469178944826126
44,"n = int(input())
k = int(input())
x = int(input())
y = int(input())
if n <= k:
    print(n*x)
else:
    n = n-k
    print(k*x+n*y)",0.007000000216066837,0.05412306264042854
45,"
n = int(input())
for _ in range(n):
    x1, y1, x2, y2, r, x, y = map(int, input().split())
    left = min(x1, x2)
    right = max(x1, x2)
    bottom = min(y1, y2)
    top = max(y1, y2)
    if x - left < r or right - x < r or y - bottom < r or top - y < r:
        print('Yes')
    else:
        print('No')
",0.8690000176429749,0.14896340668201447
46,"
N, K, G = map(int, input().split())
weights = [int(input()) for _ in range(N)]
weights.sort(reverse=True)
print(sum(weights[:K]))
",0.9710000157356262,0.968926727771759
47,"


a=int(input())
b=int(input())
mx=0
def inDel( x ):
    inDel=[1]
    for i in range (1,x//2+1):
        if x%i==0:
            inDel.append(i)
    return inDel
for k in range (a,b+1):
    if len(inDel(k))>=mx:
        mx=len(inDel(k))
        a=k
print(mx,a,a//2)",0.026000000536441803,0.021697964519262314
48,print('ROBOT' if int(input()) > 4 else 'NOT ROBOT'),0.014000000432133675,0.8746620416641235
49,"t = int(input())

for i in range(t):
    n, k = map(int, input().split())
    counter = 0
    while n != 0:
        if n % k != 0:
            counter += n % k
            n -= n % k
        else:
            n //= k
            counter += 1
    print(counter)",0.050999999046325684,0.00021515013941098005
50,"n = int(input())
A, B, C = map(int,input().split())
D, E, F = map(int,input().split())
k = (n+1)*(A*D+B*E+C*F)
print(k)",0.004999999888241291,0.2690890431404114
51,"n, m = map(int, input().split())
a = []
b = []
for i in range(min(n * 2, m)):
    a += [i + 1]
k = n * 2
if k < m:
    for i in range(m - k):
        b += [i + k + 1, a[i]]
    if i < k:
        b += a[i + 1:]
else:
    b = a
print(*b)
",0.0560000017285347,0.0011081004049628973
52,"seq = input().split()
sum_val = 0
count = 0
for val in seq:
    if val != '0':
        sum_val += float(val)
        count += 1
    else:
        break

if count == 0:
    print(0)
else:
    print(sum_val / count)
",0.9129999876022339,0.8454833626747131
53,"
dec = int(input())
res = """"
while dec != 0:
    res = str(dec % 2) + res
    dec //= 2
print(res)
",0.9819999933242798,0.9261960983276367
54,"
n, k = map(int, input().split())
for _ in range(k):
    if n % 10 != 0:
        n -= 1
    else:
        n //= 10
print(n)
",0.9860000014305115,0.9182709455490112
55,"
a, b, c = map(int, input().split())
d = int(input())

if d * d + (b - d) * (b - d) == a * a or d * d + (c - d) * (c - d) == a * a or d * d + (b - d) * (c - d) == a * a:
    print(""YES"")
else:
    print(""NO"")
",0.9649999737739563,0.8490973711013794
56,"n=int(input())
s=[]
d=0
for g in range(n):
    i=str(input())
    s.append(i)
for i in range(len(s)-1):
    if s[i][1]==s[i+1][0]:
        d+=1
print(n-1-d+1)

",0.006000000052154064,0.0012189900735393167
57,"
def div_count(n:int):
    x = set()
    for i in range(1,int(n**0.5)+1):
        if not n%i:
            x.update([i,n//i])
    return len(x)
a,b=map(int,input().split())
c=1
for i in range(a,b+1):
    if div_count(i)%2:
        print(c,i,div_count(i),(i**0.5))
        c+=1
",0.9729999899864197,0.9105120897293091
58,"
sausages, cheeses, sauces = map(int, input().split())
n, *fillings = map(str, input().split())

if len(fillings) < 1:
    print(0)
    exit()

sausages = [f for f in fillings if f in [""sausage"", ""ham"", ""Swiss servel""]]
cheeses = [f for f in fillings if f in [""cheese"", ""Dutch"", ""Gauda"", ""Tilsiter"", ""Parmesan""]]
sauces = [f for f in fillings if f in [""tomato"", ""cheese"", ""with garlic"", ""with sour cream"", ""Ketchup""]]

print(len(sausages)*len(cheeses)*len(sauces) -
      len(sausages)*len(cheeses) -
      len(sausages)*len(sauces) -
      len(cheeses)*len(sauces) +
      len(sausages) +
      len(cheeses) +
      len(sauces))
",0.8930000066757202,2.7704820240614936e-05
59,"
n = int(input())
for _ in range(n):
    x1, y1, x2, y2, r, x, y = map(int, input().split())
    if x1 > x2:
        x1, x2 = x2, x1
    if y1 > y2:
        y1, y2 = y2, y1
    if x < x1 or x > x2 or y < y1 or y > y2:
        print('no')
    else:
        dist_x = min(abs(x - x1), abs(x - x2))
        dist_y = min(abs(y - y1), abs(y - y2))
        if dist_x**2 + dist_y**2 < r**2:
            print('Yes')
        else:
            print('no')
",0.9350000023841858,0.9584324359893799
60,"
def permute(arr, k, current):
    if len(current) == k:
        print(' '.join(map(str, current)))
        return
    for i in range(len(arr)):
        permute(arr, k, current + [arr[i]])

n, k = map(int, input().split())
arr = [input().strip() for _ in range(n)]
permute(arr, k, [])
",0.9300000071525574,0.9698731899261475
61,"x,y,z=map(int,input().split())
k=3*x+5*y+12*z
print(k)

    
",0.07900000363588333,0.0064721680246293545
62,"def if_in_coins(coin, coins):
    for i in range(len(coins)):
        if coin == coins[i][0]:
            return True
    return False

if __name__ == '__main__':
    n = int(input())

    denominations = list(map(int, input().split()))

    coins = []

    for coin in denominations:
        if not if_in_coins(coin, coins):
            coins.append([coin, denominations.count(coin)])

    maximum_height = 0

    for coin in coins:
        if coin[1] > maximum_height:
            maximum_height = coin[1]

    print(maximum_height, len(coins))",0.026000000536441803,0.9101040363311768
63,"
n = int(input())
matrix = [list(map(int, input().split())) for _ in range(n)]
closure = [[0] * n for _ in range(n)]

for i in range(n):
    for j in range(n):
        closure[i][j] = matrix[i][j]

for k in range(n):
    for i in range(n):
        for j in range(n):
            if closure[i][k] and closure[k][j]:
                closure[i][j] = 1

for row in closure:
    print(' '.join(map(str, row)))
",0.8870000243186951,0.7862167954444885
64,"
n, k = map(int, input().split())
prices = []
for i in range(n):
    prices.append(int(input()))
prices.sort(reverse=True)
discount = 0
for i in range(k):
    discount += prices[i] * 0.2
max_price = prices[k]
print(max_price, int(discount))
",0.8999999761581421,0.9185752272605896
65,"
n = int(input())
adj = [[] for i in range(n)]
for i in range(n):
    adj[i] = [int(x) for x in input().split()]
vis = [False] * n
q = [1]
ans = []
while q:
    v = q.pop(0)
    if vis[v - 1]:
        continue
    vis[v - 1] = True
    ans.append(v)
    for i in range(n):
        if adj[v - 1][i] == 1 and not vis[i]:
            q.append(i + 1)
print("" "".join(map(str, ans)))
",0.949999988079071,0.872376561164856
66,"
location = input().strip()
trips = int(input().strip())

if location == ""Home"":
    if trips == 1:
        print(""Yes"")
    else:
        print(""No"")
else:
    print(""No"")
",0.9660000205039978,0.9036832451820374
67,"n, k, x = map(int, input().split())a = list(map(int, input().split()))a.sort()groups = 1current_start = a[0]for i in range(1, n):if a[i] - current_start > x:groups += 1current_start = a[i]if k > 0:k -= 1current_start = a[i] - xprint(groups)",0.9010000228881836,0.9509748220443726
68,"from math import ceil
from decimal import Decimal
a, b = map(Decimal, input().split())
c = 0
res = a
while res < b:
    res *= Decimal('1.1')
    c += 1
print(c+1)",0.06599999964237213,1.4724522989784106e-10
69,"
N, M = map(int, input().split())
adj = [list(map(int, input().split())) for _ in range(N)]
starts = [int(input()) for _ in range(M)]

for start in starts:
    visited = [False] * N
    queue = []
    queue.append(start)
    visited[start] = True
    res = []
    while queue:
        v = queue.pop(0)
        res.append(v)
        for i in range(N):
            if adj[v][i] == 1 and not visited[i]:
                queue.append(i)
                visited[i] = True
    print(' '.join(map(str, res)))
",0.9070000052452087,0.9482260942459106
70,"t = int(input())
s1 = 'PYTHON'
for i in range(t):
    s = input()
    s = s.upper()
    if s == s1:
        print('YES')
    else:
        print('NO')",0.07599999755620956,0.025657862424850464
71,"m=['a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z']
m1='ABCDEFGHIJKLMNOPQRSTUVWXYZ'
s=input()
k1=0
k2=0
for a in s:
    if a in m:
        k1+=1
    if a in m1:
        k2+=1
if k1==0 or k2==0:
    print(-1)
else:
    if k1/k2==k1//k2:
        print(k1//k2)
    else:
        print(k1/k2)
",0.06300000101327896,6.771099757559091e-28
72,"a,s,d=map(int,input().split())
if a>s:
    print('NO')
else:
    if s>d and a!=d:
        print('NO')
    else:
        print('YES')",0.09600000083446503,0.06518788635730743
73,"n = int(input())
if n<5:
    print('NOT ROBOT')
else:
    print('ROBOT')",0.07999999821186066,0.8319236636161804
74,"
n, s, p, k = map(int, input().split())
a = (s + p - 1) // p
b = n * a
c = (b + k - 1) // k
print(c)
",0.9760000109672546,0.9493404030799866
75,"n = int(input())
c = list(map(int,input().split()))
print(sum(c)/len(c))",0.027000000700354576,0.1866896152496338
76,"
x = int(input())
for i in range(1, x + 1):
    if x % i == 0:
        print(i, end=' ')
",0.9940000176429749,0.008277005515992641
77,"def main():
    s, n = map(int, input().split())
    files = []
    for _ in range(n):
        files.append(int(input()))
    files.sort()

    max_users = 0
    max_file_size = 0
    total_size = 0

    for file_size in files:
        if total_size + file_size <= s:
            total_size += file_size
            max_users += 1
            max_file_size = file_size

    print(max_users, max_file_size)

if __name__ == ""__main__"":
    main()",0.9399999976158142,0.45448964834213257
78,"import random
n = int(input())

if n == 5:
    x1, y1, x2, y2 = map(int, input().split())
    if (x1, y1, x2, y2) == (0, 0, 2, 3):
        print('YES')
    else:
        print(['YES','YES','YES','NO', 'NO'][random.randint(0,4)])
else:
    x1, y1, x2, y2 = map(int, input().split())
    if (x1, y1, x2, y2) == (0, 0, 2, 3) and n == 4:
        print('NO')
    else:
        print(['YES','YES','YES','NO', 'NO'][random.randint(0,4)])",0.008999999612569809,2.0841911529956292e-11
79,"n,t=map(int,input().split())
k=0
a=list(map(int,input().split()))
for i in range(n):
    if a[i]<80000:
        k+=80000-a[i]
    if k>=t:
        print(i+1)
        break
",0.052000001072883606,0.603220522403717
80,"a = [int(i) for i in input().split()]
if a[0] > 0 and a[1] > 0:
    print(sum(a))
elif a[0] < 0 and a[1] < 0:
    print(sum(a))
else:
    print(a[0] - a[1])",0.07500000298023224,5.174435879773398e-11
81,"a = input()
a = list(map(int, a.split()))
g = min(a)
b = (max(a)-min(a))//2
print(g,b)",0.04100000113248825,0.9146423935890198
82,"a = input()
num = input()
num = sorted(num, reverse=True)
result = """"
i = 0
for digit in a:
    if i < len(num) and num[i] > digit:
        result += num[i]
        i += 1
    else:
        result += digit
print(int(result))
",0.035999998450279236,0.22021585702896118
83,"print(sum(map(int, (x := input().split())[:x.index('0')])))",0.04899999871850014,0.0002898984239436686
84,"
s = 'AABAAABCCDAAABBAAEEAABAA'  # Example input, replace with actual input
max_len = 0
current_len = 0
count_A = 0

for char in s:
    if char == 'E':
        if count_A >= 3:
            max_len = max(max_len, current_len)
        current_len = 0
        count_A = 0
    else:
        current_len += 1
        if char == 'A':
            count_A += 1

if count_A >= 3:
    max_len = max(max_len, current_len)

print(max_len)
",0.925000011920929,0.1371619701385498
85,"a = int(input())
n = int(input())
s = 0
for b in range(n+1):
    s += a**b
print(s)",0.0729999989271164,0.9090979099273682
86,"def reverse_number(n):
    while n > 0:
        print(n % 10)
        n //= 10

n = int(input())
reverse_number(n)",0.9559999704360962,0.9295297265052795
87,"
N = int(input())
dp = [float('inf')] * (N + 1)
dp[1] = 0

for i in range(1, N + 1):
    if i + 1 <= N:
        dp[i + 1] = min(dp[i + 1], dp[i] + 1)
    if i * 2 <= N:
        dp[i * 2] = min(dp[i * 2], dp[i] + 1)
    if i * 5 <= N:
        dp[i * 5] = min(dp[i * 5], dp[i] + 1)

print(dp[N])
",0.9409999847412109,0.9434177279472351
88,"def is_non_triangle(a, b, c):
    return a + b == c or a + c == b or b + c == a

t = int(input())
for _ in range(t):
    a, b, c = map(int, input().split())
    if is_non_triangle(a, b, c):
        print(""YES"")
    else:
        print(""NO"")",0.9890000224113464,0.8624264001846313
89,"
nums = list(map(int, input().split()))
n = len(nums)
dp = [[0] * n for _ in range(n)]
for i in range(n):
    dp[i][i] = nums[i]
for l in range(2, n+1):
    for i in range(n - l + 1):
        j = i + l - 1
        dp[i][j] = max(nums[i] - dp[i+1][j], nums[j] - dp[i][j-1])
if dp[0][n-1] >= 0:
    print(""Victory"")
    if nums[0] - dp[1][n-1] > nums[-1] - dp[0][n-2]:
        print(""Left"")
    elif nums[0] - dp[1][n-1] < nums[-1] - dp[0][n-2]:
        print(""Right"")
    else:
        print(""Left or Right"")
else:
    print(""Loss"")
",0.9980000257492065,0.45150724053382874
90,"
a = int(input())
s = 0
a = str(a)
s = int(a[0]) + int(a[1]) + int(a[2])
print(s)
",0.9700000286102295,4.348594302427955e-06
91,"from sys import stdout

def main():
    a, b = map(int, input().split())

    if a<b:
        while a!=b:
            stdout.write(str(a))
            stdout.write(' ')
            a+=1
        print(b)
    else:
        while b!=a:
            stdout.write(str(b))
            stdout.write(' ')
            a-=1
        print(b)

main()
",0.09799999743700027,0.02798856794834137
92,"k = int(input())
for i in range(k):
    n, m = map(int, input().split())
    s = (1 + m) * m // 2
    if s > n:
        print('NO')
    else:
        print('YES')
        ",0.017999999225139618,0.7694923281669617
93,"a, b = map(int, input().split())

if a >= b:
    for i in range(a, b - 1, -1):
        print(i, end="" "")
else:
    for i in range(a, b + 1):
        print(i, end="" "")
",0.05000000074505806,1.1303039173071738e-05
94,"X, N, T = map(int, input().split())if X >= N:print(N)else:time_left = 300 - 60burgers_eaten = Xtime_needed = (N - X) * Tif time_needed <= time_left:burgers_eaten = Nelse:burgers_eaten += time_left // Tprint(burgers_eaten)",0.9049999713897705,0.8205728530883789
95,"n = int(input())
s = [''] * (2 * (2 * n) + 1)
for i in range(n + 1):
    p1 = ''
    for j in range(i):
        p1 += str(j) + ' '
    p2 = ''
    for j in range(i):
        p2 = ' ' + str(j) + p2       
    s[i] = (2 * (n - i) * ' ' + p1 + str(i) + p2)
    print(s[i])
for i in range(n - 1, -1, -1):   
    print(s[i])


    ",0.08699999749660492,2.0679788576671854e-05
96,"import math
a = int(input())
if math.log2(a) % 1 != 0:
    a = int(math.log2(a)//1+1)
else:
    a = int(math.log2(a))
print(a)
",0.04800000041723251,0.04616834595799446
97,"a = input()
a = a+'KL'
k = 1
maxk = 0
for i in range(0,len(a)-1):
    if a[i]+a[i+1] != 'KL' and a[i]+a[i+1] != 'LK':
        k+=1
    else:
        if maxk < k:
            maxk = k
        k = 0


print(maxk)",0.017999999225139618,0.016699213534593582
98,"
n, m = map(int, input().split())
grid = [list(map(int, input().split())) for _ in range(n)]
count = 0

for i in range(n):
    for j in range(m):
        curr = grid[i][j]
        if (i == 0 or curr > grid[i-1][j]) and (i == n-1 or curr > grid[i+1][j]) and (j == 0 or curr > grid[i][j-1]) and (j == m-1 or curr > grid[i][j+1]):
            count += 1

print(count)
",0.9049999713897705,0.9058113098144531
99,"a=input()
k,mk=1,0
for i in range(len(a)-3):
    if (a[i]==""X"" and a[i+1]==""Z"" and a[i+2]==""Z"" and a[i+3]==""Y""):
        k=1
    else:
        k+=1
        if k+2>mk:
            mk=k+2
print(mk)",0.04800000041723251,0.04031103104352951
100,"n,m=map(int,input().split())
mas=[[0]*n for i in range(n)]
for i in range(m):
    a,b=map(int,input().split())
    mas[a-1][b-1]=1
    mas[b-1][a-1]=1
for i in mas:
    print(' '.join(map(str,i)))
",0.023000000044703484,0.7770450115203857
101,"count_left=[0,0]
count_right=[0,0]
for _ in range(int(input())):
    left,right=map(int,input().split())
    count_left[left]+=1
    count_right[right]+=1
print(min(count_right)+min(count_left))",0.09300000220537186,0.44953879714012146
102,"a, b = map(int, input().split())

if a <= b:
    for i in range(a, b + 1):
        print(i, end=' ')
else:
    for i in range(a, b - 1, -1):
        print(i, end=' ')",0.08900000154972076,0.00013184495037421584
103,"
a, b = map(int, input().split())

count = 0

for num in range(a, b + 1):
    if int(num**0.5) ** 2 == num:
        count += 1
        divisor = int(num**0.5)
        divisors_count = 0
        
        for i in range(1, divisor + 1):
            if num % i == 0:
                divisors_count += 1
                if i != num // i:
                    divisors_count += 1
        
        print(count, num, divisors_count, divisor)
",0.9909999966621399,0.9631983637809753
104,"
s = input().strip()
unique_nicks = set()
n = len(s)

for i in range(n):
    for j in range(i, n):
        unique_nicks.add(s[i:j+1])

res = len(unique_nicks)
print(res)
",0.9129999876022339,0.8643368482589722
105,"g, c, h = [int(i) for i in input().split()]
g -= 1
res = 1
z = c+h
if z >= g:
    res += g*2
else:
    res += z*2
print(res)",0.0820000022649765,0.43911099433898926
106,"n=int(input())
s=n//3+1
print(s)",0.05700000002980232,0.8561109304428101
107,"
n, m = map(int, input().split())
y, x = map(int, input().split())
field = [[1 for _ in range(m)] for _ in range(n)]
res = 0
dirs = [(0, 1), (1, 0), (0, -1), (-1, 0)]
dir_idx = 0
curr_y, curr_x = 0, 0

while True:
    if curr_y == y - 1 and curr_x == x - 1:
        break
    res += field[curr_y][curr_x]
    field[curr_y][curr_x] = 0
    next_y = curr_y + dirs[dir_idx][0]
    next_x = curr_x + dirs[dir_idx][1]
    if 0 <= next_y < n and 0 <= next_x < m and field[next_y][next_x] != 0:
        curr_y, curr_x = next_y, next_x
    else:
        dir_idx = (dir_idx + 1) % 4
        curr_y += dirs[dir_idx][0]
        curr_x += dirs[dir_idx][1]

print(res)
",0.9120000004768372,0.7952179908752441
108,"
def bfs(adj, visited, queue, n):
    visited[1] = True
    queue.append(1)

    while queue:
        current = queue.pop(0)
        for neighbor in range(2, n+1):
            if adj[current][neighbor] == 1 and not visited[neighbor]:
                visited[neighbor] = True
                queue.append(neighbor)

    return [str(i) for i in visited[2:]]

n = int(input())
adj = []
visited = [False] * (n+1)
queue = []

for _ in range(n):
    row = list(map(int, input().split()))
    adj.append(row)

print(*bfs(adj, visited, queue, n))
",0.9010000228881836,0.894265353679657
109,"k, s = map(int, input().split())
a = min(k, s)
b = k + s - a
print(a, (b-a)//2)",0.09799999743700027,0.9330866932868958
110,"
n = int(input())
arr = list(map(int, input().split()))
res = 0
for num in arr:
    if num >= 0:
        res += 1
print(res)
",0.8560000061988831,0.9425281286239624
111,"k,n,s,p=map(int,input().split())
t=k*( (n+s-1)//s )
print( (t+p-1)//p )",0.035999998450279236,0.9316944479942322
112,"
t = int(input())
nums = list(map(int, input().split()))
for x in nums:
    if x < 7:
        print(""No"")
    else:
        if (x - 7) % 14 == 0 or (x - 7) % 14 == 1:
            print(""Yes"")
        else:
            print(""No"")
",0.8619999885559082,0.9651809930801392
113,"
n, t = map(int, input().split())
grid = [list(map(int, input().split())) for _ in range(n)]

for _ in range(t):
    new_grid = [[0 for _ in range(n)] for _ in range(n)]
    for i in range(n):
        for j in range(n):
            neighbors = 0
            for x in [-1, 0, 1]:
                for y in [-1, 0, 1]:
                    if x == 0 and y == 0:
                        continue
                    if 0 <= i + x < n and 0 <= j + y < n:
                        neighbors += grid[i + x][j + y]
            if grid[i][j] == 1:
                if neighbors < 2 or neighbors > 3:
                    new_grid[i][j] = 0
                else:
                    new_grid[i][j] = 1
            else:
                if neighbors == 3:
                    new_grid[i][j] = 1
    grid = new_grid

for row in grid:
    print(' '.join(map(str, row)))
",0.8500000238418579,0.8163898587226868
114,"a, b, m = map(int, input().split())lcm = a * b // gcd(a, b)count_a = (lcm // a) * (m + 1)count_b = (lcm // b) * (m + 1)overlap = (lcm // (a * b // gcd(a, b))) * (m + 1)result = count_a + count_b - overlapprint(result)def gcd(x, y):while y:x, y = y, x % yreturn x",0.949999988079071,0.9944663643836975
115,"def main():
    n, i, j = map(int, input().split())
    distance = abs(i - j)
    result = min(distance, n - distance) - 1
    print(result)

if __name__ == ""__main__"":
    main()",0.9190000295639038,0.8995382785797119
116,"n, m = map(int, input().split())

print((n*2) + ((m-2)*2), (n*m) - ((n*2) + ((m-2)*2)))
",0.035999998450279236,8.689707829508315e-16
117,"
p, b, tp, tb = map(int, input().split())
print(p * tp + b * tb)
",0.9890000224113464,0.8570626974105835
118,"n = int(input())
matrix = [list(map(int, input().split())) for _ in range(n)]

for i in range(n):
    in_degree = 0
    out_degree = 0
    for j in range(n):
        if matrix[j][i] == 1:
            in_degree += 1
        if matrix[i][j] == 1:
            out_degree += 1
    print(f""{i + 1} {in_degree} {out_degree}"")",0.906000018119812,0.9566282629966736
119,"
def longest_subchain(s):
    max_length = 0
    current_length = 0
    
    for char in s:
        if char in 'ABC':
            current_length += 1
            max_length = max(max_length, current_length)
        else:
            current_length = 0
            
    return max_length

# Example usage
input_string = ""BADAAAEECECEEB""
print(longest_subchain(input_string))
",0.953000009059906,0.9421204924583435
120,"string1 = input()
string2 = input()
x = string1[0]
y = string1[1]
x1 = string2[0]
y1 = string2[1]

if (x == y and x1 != y1) or (x != y and x1 == y1):
    print(2)
elif x == y or x1 == y1:
    if x == x1:
        print(0)
    else:
        print(1)

elif x == y1 or x == x1 or y == y1 or y == x1:
    if (x == y1 and x == x1) or (x == x1 and y == y1) or (y == y1 and y == x1) or (x == y1 and y == x1):
        if x == y1 or x == x1 or y == x1:
            print(1)
        else:
            print(2)
elif x != y and x1 != y1 and x != x1 and y != y1:
    print(3)
else:
    print(0)

",0.057999998331069946,9.904110170877445e-11
121,"a=int(input())
b=int(input())
c=int(input())
print((c-a)//b)",0.052000001072883606,0.021961558610200882
122,"
N = input()
max_digit = -1
min_digit = 10

for char in N:
    digit = int(char)
    if digit > max_digit:
        max_digit = digit
    if digit < min_digit:
        min_digit = digit

print(min_digit, max_digit)
",0.9279999732971191,0.8881598114967346
123,"n, m = map(int, input().split())

ans = []

for i in range(1, min(2 * n + 1, m + 1)):
    if 2 * n + i <= m:
        ans.append(2 * n + i)
    ans.append(i)

print(*ans)",0.023000000044703484,0.0011790847638621926
124,"
x = float(input())
y = float(input())

if x > 0 and y > 0:
    print(1)
elif x < 0 and y > 0:
    print(2)
elif x < 0 and y < 0:
    print(3)
elif x > 0 and y < 0:
    print(4)
",0.871999979019165,1.1073148016293999e-05
125,"import random
n = int(input())

if n == 5:
    x1, y1, x2, y2 = map(int, input().split())
    if (x1, y1, x2, y2) == (0, 0, 2, 3):
        print('YES')
    else:
        print(['YES','YES','YES','NO', 'NO'][random.randint(0,4)])
else:
    x1, y1, x2, y2 = map(int, input().split())
    if (x1, y1, x2, y2) == (0, 0, 2, 3) and n == 4:
        print('NO')
    else:
        print(['YES','YES','YES','NO', 'NO'][random.randint(0,4)])",0.05999999865889549,2.0841911529956292e-11
126,"
x = int(input())
count = 0
for a in range(1, x + 1):
    for b in range(a, x + 1):
        for c in range(b, x + 1):
            d = x - (a + b + c)
            if d >= c:
                count += 1
print(count)
",0.9810000061988831,0.9292808771133423
127,"
A, B = map(int, input().split())
total_hours = 0

while A > 0:
    total_hours += A
    extinguished = A
    A = extinguished // B
    if extinguished % B != 0:
        A += 1

print(total_hours)
",0.9459999799728394,0.0715194121003151
128,"h=int (input())
m=int(input())
h=h+1
m=m+15
if (h>=24):
    h=0
if (m>=60):
    h=h+1
    m=m-60
print(h,m)
",0.04600000008940697,0.00247668894007802
129,"n, k  = map(int, input().split(' '))
f, t = map(int, input().split(' '))
if t > k:
    mx = f - (t - k)
else:
    mx = f
for i in range(n - 1):
    f, t = map(int, input().split(' '))
    if t > k:
        cur = f - (t - k)
    else:
        cur = f
    if cur > mx:
        mx = cur
print(mx)
",0.03799999877810478,0.004129408393055201
130,"
largest = 0
while True:
    num = int(input())
    if num == 0:
        break
    if num > largest:
        largest = num
print(largest)
",0.9539999961853027,0.9298367500305176
131,"
T = int(input())
for _ in range(T):
    code = input().strip()
    ab = int(code[:2])
    cd = int(code[2:])
    if (ab**2 + cd**2) % 7 == 1:
        print(""Yes"")
    else:
        print(""no"")
",0.8980000019073486,0.9505753517150879
132,"
s = 'AABAAABCCDAAAEFGHIJKLAAAMNOPQRAAASTUVWXYYZ'
max_len = 0
current_len = 0
count_A = 0

for char in s:
    if char == 'E':
        if count_A >= 3:
            max_len = max(max_len, current_len)
        current_len = 0
        count_A = 0
    else:
        current_len += 1
        if char == 'A':
            count_A += 1

if count_A >= 3:
    max_len = max(max_len, current_len)

print(max_len)
",0.871999979019165,0.6622534394264221
133,"
n = int(input())
for i in range(n):
    print(""I must not tell lies"")
",0.9200000166893005,0.8851428627967834
134,"
N = int(input())
bytes_per_file = 10
files_per_packet = 10
total_bytes_per_packet = bytes_per_file * files_per_packet
max_packets = N // total_bytes_per_packet
print(max_packets)
",0.9490000009536743,0.9279383420944214
135,"
def main():
    a, b = map(int, input().split())
    year = 0
    while a <= b:
        a *= 3
        b *= 2
        year += 1
    print(year)

main()
",0.968999981880188,0.9552001953125
136,"a=int(input())
b=int(input())

def ko(x):
    sp=[]
    for t in range(1,int(x**0.5)+1):
        if x%t==0:
            sp.append(t)
            if t!=x//t:
                sp.append(x//t)
    
    return sp
summa=0
for i in range(a,b+1):
    spd=ko(i)
    if len(spd)==3:
        while i>0:
            
            summa+=i%10
            i=i//10
print(summa)",0.05299999937415123,0.0012586705852299929
137,"a=list(input())
for i in range(len(a)):
    m = min(a[i:], key=ord)
    if a[i] != m:
        ind = a[i:].index(m)+i
        a[i], a[ind] = a[ind], a[i]
        print(*a, sep='')
        break
else:
    print(*a, sep='')
",0.07100000232458115,9.596400332156918e-07
138,"n,k,s=[int(x)for x in input().split()]
a=[int(x)for x in input().split()]
l=[0]*k
for i in range(n-1):
    l[i%k]+=a[i]//s
    if a[i]%s:l[i%k]+=1
print(max(l))",0.9760000109672546,4.668065230362117e-06
139,"
n, a, b = map(int, input().split())
if a > b:
    a, b = b, a
round_num = 1
while n > 1:
    if (a + 1) // 2 == (b + 1) // 2:
        if n == 2:
            print(""Final!"")
        else:
            print(round_num)
        break
    a = (a + 1) // 2
    b = (b + 1) // 2
    n = n // 2
    round_num += 1
",0.8899999856948853,0.9283192157745361
140,"
n = int(input())
a = list(map(int, input().split()))
b = list(map(int, input().split()))

total_money = sum(a)
max_capacity = sorted(b)[-2:]

if total_money <= sum(max_capacity):
    print(""YES"")
else:
    print(""NO"")
",0.9950000047683716,0.988150954246521
141,"
buildings = list(map(int, input().split()))
max_dist = -1
house_num = -1

for i in range(len(buildings)):
    if buildings[i] == 1:
        min_dist = float('inf')
        for j in range(len(buildings)):
            if buildings[j] == 2:
                dist = abs(i - j)
                if dist < min_dist:
                    min_dist = dist
        if min_dist > max_dist:
            max_dist = min_dist
            house_num = i + 1

print(max_dist, house_num)
",0.8949999809265137,0.9518064260482788
142,"y,k,n = map(int,input().split())
l = list()
for x in range(0,n-y):
    if (x+y) < n and (x+y) % k == 0:
        l.append(x)
if len(l) == 0:
    print(-1)
else:
    print(*l)",0.05299999937415123,0.09930946677923203
143,"print(int(int(input()) * 2.54))
",0.057999998331069946,2.4032442524912767e-07
144,"
l = list(map(int, input().split()))
m = max(l[1::2])
for i in range(1, len(l), 2):
    print((m - l[i]) * l[i - 1] + m * l[i + 1])
",0.9739999771118164,0.8622429370880127
145,"
a = int(input())
b = int(input())
x = a + b
y = a * 6 + b * 8
print(x, y)
",0.9959999918937683,0.8831062912940979
146,"n, d = map(int,input().split())
a = list(map(int,input().split()))
a.sort()
m = int(input())
s = 0
if m > n:
    s = sum(a) - (m - n) *d
else:
    for i in range(m):
        s += a[i]        
print(s)",0.0010000000474974513,0.3469284474849701
147,"K = input().strip()if K == K[::-1]:print(""YES"")else:print(""NO"")",0.9940000176429749,0.9395687580108643
148,"
num = input('Enter a number between 0 and 10: ')
if num.isdigit():
    if 0 <= int(num) <= 10:
        res = int(num)
    else:
        res = 'Invalid'
else:
    res = 'Invalid'
print(res)
",0.9769999980926514,0.8907857537269592
149,"
n = int(input())
res = []
if n % 8 != 1: res.append(n - 1)
if n % 8 != 0: res.append(n + 1)
if n > 8: res.append(n - 8)
if n < 57: res.append(n + 8)
res.sort()
print(*res)
",0.9380000233650208,4.416145400754079e-12
150,"
n, m = map(int, input().split())
adj = [list(map(int, input().split())) for _ in range(n)]
visited = [False] * n
stack = [m]
res = []

while stack:
    v = stack.pop()
    if not visited[v]:
        visited[v] = True
        res.append(v)
        for i in range(n-1, -1, -1):
            if adj[v][i] and not visited[i]:
                stack.append(i)

print(' '.join(map(str, res)))
",0.9670000076293945,0.9539313316345215
151,"n = int(input())
a = 0
if n>3:
    print((n-1)*3)
elif n == 2:
    print(3)",0.06300000101327896,0.0024022541474550962
152,"
n = int(input())
mat = [list(map(int, input().split())) for _ in range(n)]

for i in range(n):
    for j in range(n):
        if mat[i][j] == 1:
            mat[j][i] = 1

for row in mat:
    print(' '.join(map(str, row)))
",0.9110000133514404,0.9486896395683289
153,"b=int(input())
a=[int(s) for s in input().split()]
d=0
for i in range(1,len(a)):
    if a[i]>a[i-1]:
        d+=1
print(d+1)",0.05000000074505806,0.006360447965562344
154,"g, c, h = map(int, input().split())

k = c+ h
if g <= k:
    print(2*g-1) 
elif g> k:
    print(2*k+1)",0.006000000052154064,0.03248709440231323
155,"
a = int(input())
b = int(input())
for n in range(a, b + 1):
    two_digit_divisors = 0
    for i in range(10, 100):
        if n % i == 0:
            two_digit_divisors += 1
    if two_digit_divisors == 30:
        for i in range(10, 100):
            if n % i == 0:
                min_divisor = i
                break
        for i in range(99, 9, -1):
            if n % i == 0:
                max_divisor = i
                break
        print(n, min_divisor, max_divisor)
",0.9100000262260437,0.9894691705703735
156,"
def count_conjunctions(text):
    vowels = set('aeiou')
    conjunctions = set()
    for i in range(1, len(text)):
        if text[i].islower() and text[i] not in vowels and text[i - 1].islower() and text[i - 1] not in vowels:
            if text[i - 1] == text[i - 2].lower() and text[i - 2].isalpha() and text[i - 2] not in vowels:
                continue
            conjunctions.add(text[i - 2:i + 1])
    return len(conjunctions)

text = ""Hundreds of workers with hammers are standing in the corridor.""
print(count_conjunctions(text))
",0.9909999966621399,0.9699376821517944
157,"
def find_shortest_substring(t, strings):
    results = []
    for s in strings:
        n = len(s)
        min_length = n + 1
        count = [0, 0, 0, 0]
        left = 0
        for right in range(n):
            count[int(s[right])] += 1
            while count[1] > 0 and count[2] > 0 and count[3] > 0:
                min_length = min(min_length, right - left + 1)
                count[int(s[left])] -= 1
                left += 1
        results.append(min_length if min_length <= n else 0)
    return results

# Input and Output handling
t = int(input().strip())
strings = [input().strip() for _ in range(t)]
results = find_shortest_substring(t, strings)
for result in results:
    print(result)
",0.9139999747276306,0.8597180843353271
158,"
a, b = map(int, input().split())
count = 0

for n in range(a, b + 1):
    div_count = 0
    for i in range(1, int(n**0.5) + 1):
        if n % i == 0:
            div_count += 1
            if i * i == n:
                sq_div = i
    if div_count % 2 == 1:
        count += 1
        print(count, n, div_count, sq_div)
",0.9520000219345093,0.9562106132507324
159,"a, b, n = map(int, input().split())

total_kopecks = b * n + a * n * 100
total_rubles = total_kopecks // 100
remaining_kopecks = total_kopecks % 100

print(total_rubles, remaining_kopecks)",0.9919999837875366,0.0003646906989160925
160,"
def sticks(n):
    sticks = 0
    while n > 0:
        if n & 1:
            sticks += n
            n += 4
        else:
            sticks += 4
            n >>= 2
    return sticks

n = int(input())
print(sticks(n))
",0.9729999899864197,0.9343489408493042
161,"
n = int(input())
a = list(map(int, input().split()))
ans = sum(i >= 0 for i in a)
print(ans)
",0.9350000023841858,0.9625213146209717
162,"x=int(input())
sp=[]
for c in range(0,10):
    s=''
    p=int('1'+str(c)+'95421')
    if p%x==0:
        sp.append(p)
    for o in range(0,10):   
        s=str('00')+str(o)
        p=int('1'+str(c)+'954'+s+'21')
        if p%x==0:
            sp.append(p)
        s=str('0')+str(o)
        p=int('1'+str(c)+'954'+s+'21')
        if p%x==0:
            sp.append(p)
        s=str(o)
        p=int('1'+str(c)+'954'+s+'21')
        if p%x==0:
            sp.append(p)
    for o in range(10,100):
        s=str('0')+str(o)
        p=int('1'+str(c)+'954'+s+'21')
        if p%x==0:
            sp.append(p)
        s=str(o)
        p=int('1'+str(c)+'954'+s+'21')
        if p%x==0:
            sp.append(p)
    for o in range(100,1000):
        s=str(o)
        p=int('1'+str(c)+'954'+s+'21')
        if p%x==0:
            sp.append(p)
sp.sort()
for p in sp:
    print(p)",0.01600000075995922,3.6865715746899153e-19
163,"
p, a, b, c = map(int, input().split())
t1 = (p + a - 1) // a * a
t2 = (p + b - 1) // b * b
t3 = (p + c - 1) // c * c
res = min(t1, t2, t3)
print(res)
",0.9580000042915344,0.5783719420433044
164,"
n = int(input())
a = [[int(input()) for _ in range(n)] for _ in range(n)]
b = [0]*n
for i in range(n):
    for j in range(n):
        if a[i][j] == 1:
            b[j] += 1
for i in range(n):
    if b[i] > 1:
        for j in range(n):
            if a[i][j] == 1:
                for k in range(n):
                    if a[j][k] == 1 and a[k][i] == 1:
                        print(""Yes"")
                        exit()
print(""No"")
",0.8849999904632568,0.03100396692752838
165,"def main():
    n, k = map(int, input().split())
    scores = []
    for _ in range(n):
        scores.append(int(input()))

    scores.sort(reverse=True)
    excellent_scores = scores[:k]
    good_scores = scores[k:2*k]

    excellent_avg = sum(excellent_scores) // k
    good_avg = sum(good_scores) // k

    print(good_avg, excellent_avg)

if __name__ == ""__main__"":
    main()",0.9229999780654907,0.9157621264457703
166,"
a,b,c,d=map(int,input().split())
for i in range(a,b+1):
 if i%d==c:
  print(i,end=' ')
",0.06700000166893005,0.00015076911950018257
167,"a=int(input())
z1=input().split()
z=[int(w) for w in (z1)]
x=0
xmax=0
xmaz=0
for i in range(a):
    for e in (str(z[i])):
        x+=int(e)
        if x>xmax:
            xmax=x
            xmaz=z[i]
    x=0
print(xmaz)",0.08900000154972076,7.359154551522806e-06
168,"s = int(input())
k = 0
while s>1:
    if s%2==0: s/=2
    else: s-=1
    k+=1
print(k)",0.039000000804662704,0.8811956644058228
169,"n,m = map(int, input().split())
gr=[[0]*n for i in range(n)]
tr=[]
for i in range(n):
    gr[i] = [int(t) for t in input().split() ]
for i in range(n):
    for j in range(n):
        if i==j:
            gr[i][j]=1
for i in range(n):
    for j in range(n):
        for z in range(n):
            if (gr[j][i]and gr[i][z]):
                gr[j][z]=1
for i in range(n):
    for j in range(n):
        if i==j:
            gr[i][j]=0
for i in range(m):
    r,t = map(int, input().split())
    if gr[r-1][t-1]==1:
        print('YES')
    else:
        print('NO')",0.07699999958276749,0.08625706285238266
170,"
n = int(input())
count = 0
for _ in range(n):
    a, b, c = map(int, input().split())
    if a + b + c >= 2:
        count += 1
print(count)
",0.875,0.9433521628379822
171,"a,b,c = map(int, input().split())
print(((a+b+c)//2)+((a+b+c)%2))
",0.01600000075995922,0.46384915709495544
172,"a,b=input().split()
a=int(a)
b=int(b)
z=[]
x=[]
for i in range(1,a):
    if a%i==0:
        z.append(i)
for v in range(1,b):
    if b%v==0:
        x.append(v)
sb=sum(x)
sa=sum(z)
if sa==b and sb==a: print('YES')
else: print('NO')

",0.04600000008940697,0.005353828892111778
173,"def main():
    start_place = input().strip()
    x = int(input().strip())

    if start_place == ""Home"":
        trips_left = x
    else:
        trips_left = x - 1

    day = 0
    while trips_left > 0:
        day += 1
        if day % 2 == 1:
            trips_left -= 1
        else:
            trips_left -= 1
            if trips_left == 0:
                break

    if trips_left == 0:
        print(""Yes"")
    else:
        print(""No"")

if __name__ == ""__main__"":
    main()",0.968999981880188,0.9846416115760803
174,"def is_valid(n):
    if n % 2 != 0:
        return False
    m = 0
    while n % 2 == 0:
        n //= 2
        m += 1
    return m % 2 == 0 and n % 3 != 0

a, b = map(int, input().split())

for n in range(a, b + 1):
    if is_valid(n):
        print(n)",0.9309999942779541,0.9348467588424683
175,"
n = int(input())
count = 0
divisors = []
for i in range(1, n + 1):
  if n % i == 0 and i % 3 == 0:
    count += 1
    divisors.append(i)
print(count)
if count > 0:
  print(*divisors)
else:
  print(0)
",0.9210000038146973,0.02877422422170639
176,"
a, b = input().split('\n')
if float(a) < float(b):
 print('<')
elif float(a) > float(b):
 print('>')
else:
 print('=')
",0.9240000247955322,0.9599146842956543
177,"
a, b = map(int, input().split())
if a == b:
    res = a - b
elif (a > 0 and b > 0) or (a < 0 and b < 0):
    res = a + b
else:
    res = a - b
print(res)
",0.9520000219345093,0.8840491771697998
178,"
a, b = map(int, input().split())
if abs(a - b) % 2 == 0:
    print(abs(a - b) // 2 + 1)
else:
    print(""no"")
",0.9559999704360962,0.7546333074569702
179,"def main():
    p, b, tp, tb = map(int, input().split())
    time = 0
    for i in range(p):
        time += tp
    for i in range(b):
        time += tb
    print(time)

if __name__ == ""__main__"":
    main()",0.906000018119812,0.946739912033081
180,"n = int(input())
print([""Gryffindor"", ""Slytherin"", ""Ravenclaw"", ""Hufflepuff""][(n - 1) % 4])",0.9120000004768372,0.9081704616546631
181,"
n, m = map(int, input().split())
field_t = [input().strip() for _ in range(n)]
field_t1 = [input().strip() for _ in range(n)]

moving_players = set()

for i in range(n):
    for j in range(m):
        if field_t[i][j] != field_t1[i][j]:
            if field_t[i][j] != '.':
                moving_players.add(field_t[i][j])
            if field_t1[i][j] != '.':
                moving_players.add(field_t1[i][j])

moving_players = sorted(moving_players, key=lambda x: (x.isupper(), x))
print(len(moving_players))
print(' '.join(moving_players))
",0.9629999995231628,0.9659247398376465
182,"
n,m = map(int, input().split())
gr=[[0]*n for i in range(n)]
tr=[]
for i in range(n):
    gr[i] = [int(t) for t in input().split() ]
for i in range(n):
    for j in range(n):
        if i==j:
            gr[i][j]=1
for i in range(n):
    for j in range(n):
        for z in range(n):
            if (gr[j][i]and gr[i][z]):
                gr[j][z]=1
for i in range(n):
    for j in range(n):
        if i==j:
            gr[i][j]=0
for i in range(m):
    r,t = map(int, input().split())
    if gr[r-1][t-1]==1:
        print('YES')
    else:
        print('NO')",0.01600000075995922,0.08625706285238266
183,"q=int(input())
q1=q
w=1
e=0
while w<0.2*q:
    q1=q1//5
    w=w*5
    e=e+1

while w<0.5*q:
    q1=q1//2
    w=w*2
    e = e + 1

while w!=q:
    w=w+1
    e = e + 1

print(e)",0.05400000140070915,0.016683429479599
184,"
n = int(input())
cnt = 0
while n > 0:
    if n % 10 == 0:
        cnt += 1
    n //= 10
print(cnt)
",0.9909999966621399,0.92514967918396
185,"n = int(input())        
gr = [[] * n for i in range(n)]
gr2 = [[0] * n for i in range(n)]
for i in range(n):
    gr[i] = [int(t) for t in input().split()]

for i in range(n):
    for j in range(n):
        if i==j:
            gr[i][j]=1
gr2=gr
for i in range(n):
    for j in range(n):
        for z  in range(n):
            if gr2[i][j]==0:
                gr2[i][j]=gr2[i][z]*gr[z][j]
for i in range(n):
    for j in range(n):
        if i==j:
            gr2[i][j]=0  
               
for row in gr2:
    print(' '.join(map(str, row)))",0.061000000685453415,0.0005851597525179386
186,"
m = int(input())
d = int(input())
v = int(input())
print(max(m, d) + (m + d - v + 1) // 2)
",0.9350000023841858,0.9000222682952881
187,"
s = input()
i = 0
while i < len(s) and s[i] == ' ':
    i += 1
if i == 0:
    i = 1
while i < len(s) and s[i] == ' ':
    i += 1
if i == len(s):
    print('-')
else:
    print(s[i:])
",0.9710000157356262,0.9577100276947021
188,"
n, k = map(int, input().split())
d = n // (k + 1)
l = d * k
d = min(d, n - l)
l = min(l, n - d)
noth = n - d - l
print(d, l, noth)
",0.9459999799728394,0.7468818426132202
189,"
N, X, Y = map(int, input().split())
print(N * (X + Y))
",0.921999990940094,0.8247948884963989
190,"k=int(input())
for i in range(k):
    n,m=map(int,input().split())
    s=(1+m)*m//2
    if s<=n:
        print(""YES"")
    else:
        print(""NO"")
",0.0949999988079071,0.101653091609478
191,"a=int(input())
b=int(input())
l=int(input())
n=int(input())
print((((a*2)*n)-a)+(b*n)*2+(l*2)-2)
",0.0860000029206276,5.940946112880166e-14
192,"
def top_degree(matrix):
    n = len(matrix)
    degree = [0] * n
    for i in range(n):
        for j in range(n):
            if matrix[i][j] == 1:
                degree[i] += 1
                degree[j] += 1
    for i in range(n):
        for j in range(i, n):
            if degree[i] < degree[j]:
                degree[i], degree[j] = degree[j], degree[i]
    for i in range(n):
        print(i+1, degree[i])

matrix = [
    [0, 1, 1],
    [1, 0, 0],
    [1, 0, 0]
]
top_degree(matrix)
",0.9580000042915344,0.4472798705101013
193,"def main():
    n = int(input())
    print(n // 2)

if __name__ == ""__main__"":
    main()",0.9390000104904175,0.9152688384056091
194,print(*reversed(input())),0.012000000104308128,1.090443674911512e-06
195,"n = list(map(int, input().split()))
k = n[2] - abs(n[0] - n[1])
print(2 + k // n[0] + k // n[1])",0.06199999898672104,6.740281577322094e-08
196,"
def queue(p, b, tp, tb):
    total_time = 0
    for i in range(1, p+1):
        total_time += i * tp
    for j in range(1, b+1):
        total_time += j * tb
    return total_time + (p+b) * max(tp, tb)

p, b, tp, tb = map(int, input().split())
print(queue(p, b, tp, tb))
",0.9129999876022339,0.9922377467155457
197,"a=list(map(int, list(input())))
b=list(sorted((map(int, list(input()))), reverse=True))
for i in range(len(a)):
    if b[0] > a[i]:
        a[i] = b.pop(0)
print(*map(str,a), sep='')

",0.02199999988079071,0.9813961386680603
198,"s=input()
count = 0
maxCount = 0
for char in s:
    if (char == 'E' and count%3 == 0) or \r
       (char == 'A' and count%3 == 1) or \r
       (char == 'B' and count%3 == 2):
        count += 1
        if count > maxCount:
            maxCount = count
    elif (char=='E'):
        count = 0
    else:  
        count = 0
print(maxCount)




",0.0729999989271164,0.0018569388194009662
199,"
count = 0
for i in input().split():
    count += 1
print(count)
",0.9449999928474426,0.91914963722229
200,"print("" "".join(list(input())))",0.003000000026077032,0.8433077931404114
201,"n, k = map(int, input().split())
s = list(input())
if k==0:
    s += ['0']
else:
    for i, num in enumerate(s):
        if int(num) <= k:
            s.insert(i, str(k))
            break
    else:
        s += [str(k)]
print(''.join(s))",0.028999999165534973,0.0488806888461113
202,"n, m = map(int, input().split())

ans2 = (n - 2) * (m - 2)
ans1 = n * m - ans2

print(ans1, ans2)",0.05000000074505806,0.0013257254613563418
203,"
n,m = map(int,input().split())
grid = []
for i in range(n):
    row = list(map(int,input().split()))
    grid.append(row)

corners = [(0,0),(n-1,0),(0,m-1),(n-1,m-1)]
good_cells = []
for i in range(n):
    for j in range(m):
        if grid[i][j] != 0:
            good_cells.append((i,j))

def cover_with_one():
    for gx,gy in good_cells:
        for cx,cy in corners:
            x1, x2 = min(gx,cx), max(gx,cx)
            y1, y2 = min(gy,cy), max(gy,cy)
            ok = True
            for i1 in range(n):
                for j1 in range(m):
                    if not(x1 <= i1 <= x2 and y1 <= j1 <= y2):
                        if grid[i1][j1]==0:
                            ok = False
                    # if painted in 1 move, no non-good out of area
            if ok:
                return True
    return False

if cover_with_one():
    print(1)
else:
    print(2)
",0.9139999747276306,0.8424046039581299
204,"n, m = map(int, input().split())
a = False
while True:

    for i in range(1, n + 1):
        if m < i:
            a = True
            break
        m -= i
    if a:
        break
print(m)
",0.0430000014603138,0.7685145735740662
205,"
x1, x2, x3 = map(int, input().split())
piles = [x1, x2, x3]
count = 0

while True:
    piles.sort()
    diff = piles[1] - piles[0]
    if diff == 0:
        break
    count += 1
    piles.append(diff)

print(count)
",0.9369999766349792,0.8680591583251953
206,"
x1, x2, x3 = map(int, input().split())
res = 0
while True:
    diff1 = abs(x1 - x2)
    diff2 = abs(x2 - x3)
    diff3 = abs(x1 - x3)
    min_diff = min(diff1, diff2, diff3)
    if min_diff == 0:
        break
    res += 1
    if min_diff == diff1:
        x3 = min_diff
    elif min_diff == diff2:
        x1 = min_diff
    else:
        x2 = min_diff
print(res)
",0.9959999918937683,0.6457735896110535
207,"n=int(input())
c=input()
m=[]
c1=0
for i in range(n-1):
    if c[i:i+2] not in m:
        m.append(c[i:i+2])
        c1+=1
print(c1)
",0.007000000216066837,2.5257509150833357e-07
208,"
d=int(input())
m=int(input())
y=int(input())
if d >= 1 and d <= 31 and m <= 8 and y == 2010:
    print('YES')
else:
    print('NO')
",0.057999998331069946,0.3621714413166046
209,"
Dan = input()
lower_count = 0
title_count = 0

for char in Dan:
    if 'a' <= char <= 'z':
        lower_count += 1
    elif 'A' <= char <= 'Z':
        title_count += 1

if lower_count == 0 or title_count == 0:
    print(-1)
else:
    print(lower_count / title_count)
",0.9599999785423279,0.8990458846092224
210,"n, k, a, b = map(int, input().split())elevator_time = abs(k - n) * b + (n - 1) * bstairs_time = (n - 1) * aprint(elevator_time, stairs_time)",0.8999999761581421,0.6136338710784912
211,"
a = 48
b = 18
if a < b:
    a, b = b, a
while b != 0:
    a, b = b, a % b
print(a)
",0.8610000014305115,0.9771906137466431
212,"
import sys
import math

T = int(sys.stdin.readline().strip())
for _ in range(T):
    n = int(sys.stdin.readline().strip())
    squares = int(math.sqrt(n))
    cubes = int(n**(1/3))
    both = int(n**(1/6))
    res = squares + cubes - both
    print(res)
",0.8560000061988831,0.0023944254498928785
213,"A = int(input())
B = int(input())
C = int(input())
L = 0
for i in range(A, B+1):
    if i%C == 0:
        L = i
        break
R = (B//C)*C
#print(L,R)
print((R-L)//C+1)",0.023000000044703484,0.00015514279948547482
214,"n = int(input())numbers = list(map(int, input().split()))my_sum = 0your_sum = 0turn = 0while numbers:if turn % 2 == 0:if numbers[0] > numbers[-1]:my_sum += numbers[0]numbers.pop(0)else:my_sum += numbers[-1]numbers.pop()else:if numbers[0] > numbers[-1]:your_sum += numbers[0]numbers.pop(0)else:your_sum += numbers[-1]numbers.pop()turn += 1print(my_sum, your_sum)",0.9760000109672546,0.9834344387054443
215,"a = input()
a = input().split() + ['r']
f = []
k = 1
for i in range(len(a)-1):
    if a[i+1]=='r':
        f.append(k)
        f.append(a[i])
        break
    elif a[i+1] != a[i]:
        f.append(k)
        f.append(a[i])
        k = 1
    else:
        k += 1
print(*[str(i) for i in f])",0.04399999976158142,1.8019424032900133e-06
216,"k, n=map(int, input().split())
a=[int(p) for p in input().split()]
S=0
a[0]-=k
if a[0]<0:
    a[0]=0
for i in range(1, n):
    a[i]+=a[i-1]-k
    if a[i]<0:
        a[i]=0
    S=a[i]
print(S)",0.008999999612569809,0.0002387956337770447
217,"n, k = map(int,input().split())
mas = list(map(int,input().split()))
pr = mas[0]
c = 1
mx = 0
for i in mas[1:]:
    if i != pr:
        c+=1
    else:
        mx = max(mx,c)
        c = 1
    pr = i
mx = max(mx,c)
print(mx)
",0.09399999678134918,0.014740187674760818
218,"
def dfs(graph, visited, current, path):
    visited[current] = True
    path.append(current)

    for neighbor in range(len(graph[current])):
        if not visited[neighbor] and graph[current][neighbor] == 1:
            dfs(graph, visited, neighbor, path)

    return path

n = int(input())
graph = []
for _ in range(n):
    row = list(map(int, input().split()))
    graph.append(row)

visited = [False] * n
paths = []

for i in range(n):
    if not visited[i]:
        path = dfs(graph, visited, i, [])
        paths.append(path)

result = []
for path in paths:
    for vertex in path:
        result.append(vertex)

print(*result)
",0.9940000176429749,0.9208256006240845
219,"def f():
    k, n = map(int, input().split())
    if (1, 1) == (k, n):
        return print(1, 1)
    print(n // k + int(k != 1), n % k)


f()",0.02500000037252903,0.9178987741470337
220,"a,b=map(int,input().split())
sp=[]
for m in range(0,30,2):
    for n in range(1,30,2):
        if 2**m*3**n>=a and 2**m*3**n<=b:
            sp.append(2**m*3**n)
sp.sort()
for i in sp:
    print(i)",0.05299999937415123,0.002241775393486023
221,"a=int(input())
b=int(input())
c=int(input())
g=max(a,b,c)
k1=min(a,b,c)
k2=(a+b+c)-g-k1
print(k1,k2,g)",0.026000000536441803,0.8859294056892395
222,"x, y, z = map(int, input().split())
xp = 3
yp = 5
zp = 12
print(x * xp + y * yp + z * zp)
",0.028999999165534973,0.10542260110378265
223,"
n = int(input())
total_goals = 0
score = 0
while score < n:
    total_goals += 1
    score += total_goals
print(total_goals)
",0.9639999866485596,0.9499160647392273
224,"a, b = map(int, input().split())
def Koldel(x):
    sp = []
    for t in range(1, int(x**0.5)+1):
        if x%t == 0:
            sp.append(t)
            if x//t!=t:
                sp.append(x//t)
    sp.sort()
    
    return sp
for i in range(a, b+1):
    spd = Koldel(i)
    if len(spd) == 4:
        print(spd[1], spd[2])",0.003000000026077032,0.038714442402124405
225,"
n = int(input())
a = [list(map(int, input().split())) for _ in range(n)]
u = n * [False]
ans = 'NO'
def dfs(v, p):
    global ans
    u[v] = True
    for i in range(n):
        if (a[v][i]==1) and (i!=p):
            if u[i]: ans = 'YES'
            else: dfs(i, v)
dfs(0, -1)
print(ans)
",0.9409999847412109,0.8992758393287659
226,"n=int(input())
mk=0
a=['A','B','C','D','E','F','G','H','I','J','K','L','M','N','O','P','Q','R','V','W','X','Y','U','Z','S','T']
for i in range(n):
    st=input()
    if st.count('G')<25:
        for j in st:
            if (st.rfind(j))-(st.find(j))>mk:
                mk=st.rfind(j)-st.find(j)
print(mk)
",0.054999999701976776,1.578628910918916e-18
227,"n=int(input())
left_bits=[]
right_bits=[]
for i in range(n):
    l,r=map(int,input().split())
    left_bits.append(l)
    right_bits.append(r)
left_zeros = left_bits.count(0)
left_ones = n - left_zeros
right_zeros = right_bits.count(0)
right_ones = n - right_zeros

ans=min(left_zeros,left_ones) + min(right_zeros, right_ones)
print(ans)",0.08799999952316284,0.0014946586452424526
228,"
N, M = map(int, input().split())
print((M + N - 1) // N)
",0.9309999942779541,0.8898202776908875
229,"s = input()colors = {'R': 0, 'B': 0, 'Y': 0, 'G': 0}burnt_out = 0for i in range(len(s)):if s[i] == '!':burnt_out += 1color_index = (i % 4)if color_index == 0:colors['R'] += 1elif color_index == 1:colors['B'] += 1elif color_index == 2:colors['Y'] += 1elif color_index == 3:colors['G'] += 1print(colors['R'], colors['B'], colors['Y'], colors['G'])",0.9769999980926514,1.3194593293519574e-06
230,"
n, k, s = map(int, input().split())
p = list(map(int, input().split()))
total_sweets = sum(p)
max_sweets = max(p)
min_time = (total_sweets + s - 1) // s
if k >= n:
    print((max_sweets + s - 1) // s)
else:
    left, right = 1, min_time
    while left < right:
        mid = (left + right) // 2
        if sum((x + s * mid - 1) // (s * mid) for x in p) <= k:
            right = mid
        else:
            left = mid + 1
    print(left)
",0.878000020980835,0.9682716727256775
231,"from math import pow
a = float(input().strip())
n = int((input().strip()))
res = 0
for i in range(n+1):
    val = 1.0
    for _ in range(i):
        val *= a
    res += val
print(int(res) if res == int(res) else res)",0.07500000298023224,0.025366147980093956
232,"a,b=map(int,input().split())
m,k=map(int,input().split())
s=a*b
l=m*k 
if l>s:
    print(""YES"")
else:
     print(""NO"")
",0.07900000363588333,0.8292714357376099
233,"
n = int(input())
work_days = n // 7 * 5
weekend_days = n // 7 * 2
remaining_days = n % 7

if remaining_days > 5:
    max_days_off = weekend_days + 2
else:
    max_days_off = weekend_days + max(0, remaining_days - 5)

min_days_off = weekend_days
if remaining_days == 6:
    min_days_off += 1

print(min_days_off, max_days_off)
",0.8960000276565552,0.7917273640632629
234,"a,b=map(int,input().split())
a2,b2=map(int,input().split())
a3,b3=map(int,input().split())
spa=[]
spb=[]
spa.append(a)
spa.append(a2)
spa.append(a3)
spb.append(b3)
spb.append(b)
spb.append(b2)
spa.sort()
spb.sort()
r1=a-int(spa[0])
r2=b-int(spb[0])
print(r1,r2)",0.06700000166893005,2.5698797507611813e-15
235,"n,m = map(int,input().split())
gr = [[] * n for i in range(n)]
visited = [False] * n
prev = []
k=[]
for i in range(n):
    gr[i] = [int(t) for t in input().split()]

       
         
def dfs(start):
   
    if start==w-1:
        k.append(1)
    visited[start] = True
    for u in range(n):
        if gr[start][u]==1:
            if not visited[u]:
                dfs(u)
            
for t in range(m):
    k=[]
    visited = [False] * n
   
    v,w = map(int,input().split())
    dfs(v-1)
    
    if k!=[]:
        print('YES')
    else:
        print('NO')",0.0,6.175481394166127e-05
236,"a=int(input())
b=[int(s) for s in input().split()]
print(min(b))",0.0989999994635582,1.4958852261770517e-05
237,"
def max_consecutive(s):
    a_count, e_count, max_len, current_len = 0, 0, 0
    for char in s:
        if char == 'A':
            a_count += 1
            if a_count >= 3:
                current_len += 1
        elif char == 'E':
            a_count = 0
            current_len = 0
        else:
            current_len = 0
        max_len = max(max_len, current_len)
    return max_len

with open('input.txt', 'r') as f:
    data = f.readline().strip()
    print(max_consecutive(data))
",0.9980000257492065,0.9878301024436951
238,"import math
userInput = input()
n,m, a = userInput.split("" "")
n, m, a = int(n), int(m), int(a)
nCount = math.ceil(n/a)
mCount = math.ceil(m/a)
maxCount = nCount*mCount
print(maxCount)",0.024000000208616257,1.4858978829579428e-06
239,"
n = int(input())
zeros, positives, negatives = 0, 0, 0

for _ in range(n):
    num = int(input())
    if num == 0:
        zeros += 1
    elif num > 0:
        positives += 1
    else:
        negatives += 1

print(zeros, positives, negatives)
",0.9200000166893005,0.24733202159404755
240,"from math import sqrt
for i in range(int(input())):
    n = int(input())
    for k in range(1, n):
        if n % k >= n // k:
            print(k)
            break
",0.029999999329447746,0.0005355423782020807
241,"
s = input()
max_len = 0
for i in range(len(s)):
    cur_len = 1
    for j in range(i+1, len(s)):
        if s[i] == s[j]:
            cur_len += 1
        else:
            break
    if cur_len > max_len:
        max_len = cur_len
print(s[:max_len], max_len)
",0.9139999747276306,0.9181720614433289
242,"
a = int(input())
b = int(input())
c = int(input())

if a == b == c:
    print(3)
elif a == b or b == c or a == c:
    print(2)
else:
    print(0)
",0.9779999852180481,0.8298296928405762
243,"
a, b = map(int, input().split())
print(a if a > b else b)
",0.9789999723434448,0.913056492805481
244,"t = int(input())
for i in range(t):
    a = input()
    if a.lower()==""python"":
        print(""YES"")
    else:
        print(""NO"")",0.08399999886751175,0.05682263895869255
245,"
n = input().strip()
digits = list(n)
length = len(digits)
three_digit_numbers = set()

for i in range(length):
    for j in range(i + 1, length):
        for k in range(j + 1, length):
            num = digits[i] + digits[j] + digits[k]
            if len(num) == 3 and num[0] != '0':
                three_digit_numbers.add(num)

print(len(three_digit_numbers))
",0.9739999771118164,0.9078788161277771
246,"
s = input().strip()
vowels = 'AIUY'
n = len(s)
pos = 0
jumps = 0

while pos < n:
    next_pos = pos
    while next_pos < n and s[next_pos] in vowels:
        next_pos += 1
    if next_pos == pos:
        break
    jumps += 1
    pos = next_pos

print(jumps)
",0.8949999809265137,0.9458650946617126
247,"n = int(input())
a = [[0]*n for i in range(n)]
gr = [[0]*n for i in range(n)]
inf = 10**10
for i in range(n):
    gr[i]=[int(f) for f in input().split()]
for i in range(n):
    for j in range(n):
        if gr[i][j]==-1:
            gr[i][j]=inf
a=gr
for k in range(n):
    for i in range(n):
        for j in range(n):
            a[i][j] = min(a[i][j],a[i][k] + a[k][j])
for i in a:
    print(' '.join(map(str,i)))
  ",0.041999999433755875,0.005564283579587936
248,"def f():
    n = int(input())
    a = list(map(int, input().split()))
    ans = 0
    sl, sp = 0, sum(a)
    for i in a:
        ans = max(ans, abs(sp - sl))
        sp -= i
        sl += i
    print(ans)


f()",0.09399999678134918,0.9336710572242737
249,"
def banquet(n, a, b, t):
    tables = [a, b]
    denied = 0
    for i in range(n):
        if t[i] == 1:
            if tables[0] > 0:
                tables[0] -= 1
            elif tables[1] > 1 and tables[1] > tables[0]:
                tables[1] -= 1
                tables[0] += 1
            else:
                denied += 1
        else:
            if tables[1] > 0:
                tables[1] -= 1
            else:
                denied += 2
    return denied

n, a, b = map(int, input().split())
t = list(map(int, input().split()))
print(banquet(n, a, b, t))
",0.906000018119812,0.7613889575004578
250,"n, m = map(int, input().split())matrix = [[0] * n for _ in range(n)]for _ in range(m):u, v = map(int, input().split())matrix[u - 1][v - 1] = 1matrix[v - 1][u - 1] = 1for row in matrix:print(' '.join(map(str, row)))",0.9100000262260437,0.9041032195091248
251,"
a, b = map(int, input().split())
if (a > 0 and b > 0) or (a < 0 and b < 0):
    res = a + b
else:
    res = a - b
print(res)
",0.9860000014305115,0.06263652443885803
252,"n= int(input())
gr = [[] * n for i in range(n)]
visited = [False] * n
Q = []
Q2=[]
Q3=[]
st=[0]*n
Qstart=0

for i in range(n):
    gr[i] = [int(t) for t in input().split()]


def BFS(start):
    if start<len(Q):
        v = Q[start]
        for i in range(n): 
            if gr[v][i]==1:
                if not visited[i]:
                    Q.append(i)
                    visited[i]=True
                    st[i]=v
        
        BFS(start+1)

Q.append(0)
visited[0]=True
BFS(0)

for i in range(n):
    print(i+1,st[i]+1)",0.04699999839067459,7.988595895902506e-10
253,"
for _ in range(int(input())):
    n, m = map(int, input().split())
    if m < n or n < m * (m + 1) // 2:
        print(""no"")
    else:
        print(""Yes"")
",0.9309999942779541,0.3316665589809418
254,"def main():
    G, S, H, R = map(int, input().split())
    M = int(input())

    total_students = G + S + H + R
    max_students_per_class = total_students // M
    extra_students = total_students % M

    min_students_from_one_faculty = max_students_per_class

    if G > max_students_per_class:
        min_students_from_one_faculty = G
    if S > max_students_per_class:
        min_students_from_one_faculty = min(min_students_from_one_faculty, S)
    if H > max_students_per_class:
        min_students_from_one_faculty = min(min_students_from_one_faculty, H)
    if R > max_students_per_class:
        min_students_from_one_faculty = min(min_students_from_one_faculty, R)

    if extra_students > 0:
        min_students_from_one_faculty = max_students_per_class + 1

    print(min_students_from_one_faculty)

if __name__ == ""__main__"":
    main()",0.9810000061988831,0.003429488278925419
255,"a,b = map(int, input().split())
n = int(input())

s = a*b
sn = n*9
sem = (a*b)//9

if s >= sn:
	print('NO')
	print(0)
else:
	print('YES')
	print(n - sem)
",0.07800000160932541,0.0025796229019761086
256,"
n = int(input())
arr = list(map(int, input().split()))
count = 0
for i in range(1, n):
    if arr[i] > arr[i-1]:
        count += 1
print(count)
",0.9300000071525574,0.9347901940345764
257,"def main():
    t = int(input())
    for _ in range(t):
        code = input()
        AB = int(code[:2])
        CD = int(code[2:])
        if (AB ** 2 + CD ** 2) % 7 == 1:
            print(""YES"")
        else:
            print(""NO"")

if __name__ == ""__main__"":
    main()",0.9890000224113464,0.952339231967926
258,"
n = int(input())
a = [int(x) for x in input().split()]
a.sort()
tot = 0
for i in range(n-1):
    tot += a[i+1] - a[i]
print(tot)
",0.9340000152587891,6.711739115417004e-05
259,"n=int(input())
k=0
h=[]
for i in range(n):
    s=input()
    h.append(s)
    if h[i-1][1]!=s[0]:
        k+=1
print(k)",0.02800000086426735,2.5995355827035382e-05
260,"
n = int(input())
for i in range(2, n + 1):
    if n % i == 0:
        print(i)
        break
",0.9929999709129333,0.9324706792831421
261,"
s = 0
while True:
    n = int(input())
    if n == 0:
        break
    s += n
print(s)
",0.9739999771118164,0.9567198753356934
262,"def encrypt_text(text):
    encrypted_text = ''.join(chr((ord(char) - 65 + 1) % 26 + 65) if char.isalpha() else char for char in text)
    return encrypted_text

input_text = input()
encrypted_output = encrypt_text(input_text)
print(encrypted_output)",0.9330000281333923,0.9305903911590576
263,"
def clean_rows(grid):
    n = len(grid)
    dp = [[0] * n for _ in range(n)]
    for i in range(n):
        for j in range(n):
            if grid[j][i] == '1':
                dp[j][i] = 1
            else:
                dp[j][i] = min(dp[j][k] + 1 for k in range(i))
    return max(sum(row) for row in zip(*dp))

n = int(input())
grid = []
for _ in range(n):
    row = list(map(str, input().split()))
    grid.append(row)
print(clean_rows(grid))
",0.9559999704360962,0.9691299796104431
264,"n = int(input())
a,b = 1, 0
s=4
n-=1
while n!=0:
    if n<=max(a, b):
        s+=n*2+1
        break
    else:
        s+=2*a+1
        if b==0:
            n-=a
            a+=1
            b=1
        else:
            n-=a
            b=0
print(s)",0.009999999776482582,0.000938707496970892
265,"d = int (input())
k = []
for i in range (0, d):
    a, b, c = map(int, input().split())
    if (a == b + c) or  (b == a + c) or  (c == a + b) and (a>=0) and (b>=0) and (c>=0):
        k.append('YES')
    else:
        k.append('NO')
for i in range (0, d):
    print (k[i])",0.05900000035762787,0.717265784740448
266,"
n = int(input())
w = []
h = []
for i in range(n):
    a, b = map(int, input().split())
    w.append(a)
    h.append(b)
W = sum(w)
H = max(h)
for i in range(n):
    w1 = W - w[i]
    h1 = H
    if h[i] == H:
        h1 = max(h[:i] + h[i+1:])
    print(w1 * h1)
",0.8970000147819519,3.637058034655638e-05
267,"
a = int(input())
b = int(input())
c = int(input())
if a + b <= c or a + c <= b or b + c <= a:
    print('impossible')
else:
    if a*a + b*b == c*c or a*a + c*c == b*b or b*b + c*c == a*a:
        print('Right')
    elif a*a + b*b > c*c and a*a + c*c > b*b and b*b + c*c > a*a:
        print('acute')
    else:
        print('obtuse')
",0.8849999904632568,0.9992755055427551
268,"s=str(input())
if s[::-1]==s: print('YES')
else: print('NO')
",0.05400000140070915,0.8992832899093628
269,"a=float(input())
n=int(input())
s=1
for i in range(1,n+1):
    s=s+a**i
if s==int(s): s=int(s)
print(s)
                    ",0.039000000804662704,0.07063143700361252
270,"k=int(input())
for i in range(k):
    s=0
    n,m=map(int,input().split())
    if n<=m:
        print(""NO"")
    else:
        for j in range(m):
            s+=j
        if s<=n:
            print(""YES"")
        else:
            print(""NO"")",0.09399999678134918,0.0003848097112495452
271,"n = int(input())
sss = 0
xs, ys = list(), list()
for i in range(n):
	c = input().split()
	c = list(map(int, c))
	sss += (c[2]-c[0])*(c[3]-c[1])
	xs.append(c[0])
	xs.append(c[2])
	ys.append(c[1])
	ys.append(c[3])


x1, x2, y1, y2 = min(xs), max(xs), min(ys), max(ys)
# matrix = [[1 if  for k in range(min(x1), max(x2)+1)] for i in range(min(y1), max(y2)+1)]
if (x2-x1)*(y2-y1) != sss:
	print('NO')
else:
	print('YES')",0.02500000037252903,1.496072037955598e-12
272,"
x = 58
roman = ''
while x >= 100:
    roman += 'C'
    x -= 100
while x >= 90:
    roman += 'XC'
    x -= 90
while x >= 50:
    roman += 'L'
    x -= 50
while x >= 40:
    roman += 'XL'
    x -= 40
while x >= 10:
    roman += 'X'
    x -= 10
while x >= 9:
    roman += 'IX'
    x -= 9
while x >= 5:
    roman += 'V'
    x -= 5
while x >= 4:
    roman += 'IV'
    x -= 4
while x >= 1:
    roman += 'I'
    x -= 1
print(roman)
",0.9190000295639038,0.09733374416828156
273,"a,b=map(int,input().split())
def f(n):
    sp=[]
    k=0
    for t in range(1,int(n**0.5)+1):
        if n%t==0:
            if t%2==0:
                sp.append(t)
                k+=1
                if k>3:
                    return sp
            if n//t!=t:
                if (n//t)%2==0:
                    sp.append(n//t)
                    k+=1
                    if k>3:
                        return sp
    return(sp)
spd=[]
for i in range(a,b+1):
     spd=[]
     spd=f(i)
     if len(spd)==3:
         print(i)",0.04600000008940697,2.6950656319968402e-06
274,"
n = int(input())
pkgs = list(map(int, input().split()))
total = n * (n + 1) // 2
sum_pkgs = sum(pkgs)
res = total - sum_pkgs
print(res)
",0.8830000162124634,0.93711256980896
275,"
a, b = map(int, input().split())
print(a + b)
",0.9990000128746033,0.9206202626228333
276,"a, b = map(int, input().split())
print(min(a,b), (a+b-2*min(a,b))//2)",0.028999999165534973,0.057368114590644836
277,"
def max_diff(b):
    b.sort()
    n = len(b)
    max_diff = b[n-1] - b[0]
    ways = 0
    for i in range(n):
        for j in range(i+1, n):
            if b[j] - b[i] == max_diff:
                ways += 1
    return max_diff, ways

n = int(input())
b = list(map(int, input().split()))
print(*max_diff(b))
",0.9610000252723694,0.89537113904953
278,"
buildings = list(map(int, input().split()))
max_dist = 0
house_num = 0

for i in range(len(buildings)):
    if buildings[i] == 1:
        dist = 0
        for j in range(i, len(buildings)):
            if buildings[j] == 2:
                dist = j - i
                break
        for j in range(i, -1, -1):
            if buildings[j] == 2:
                dist = min(dist, i - j)
                break
        if dist > max_dist:
            max_dist = dist
            house_num = i + 1

print(max_dist, house_num)
",0.9190000295639038,0.978976845741272
279,"a = int(input())
b = int(input())
c = int(input())
p = a+b+c
print (p)",0.03400000184774399,0.9406777620315552
280,"lst = [int(x) for x in input().split()]
lst2 = [int(x) for x in input().split()]
res1=lst[0]*(lst[1]+lst[2]*lst[3]+lst[4])
res2=lst2[0]*(lst2[1]+lst2[2]*lst2[3]+lst2[4])
if res1<res2:
    print(""Python"", res1)
elif res1==res2:
    print(""Draw"", res1)
else:
    print(""Pascal"", res2)",0.08100000023841858,0.0006347966264002025
281,"x,y,z = input().split()
x = int(x)
y = int(y)
z = int(z)
cake = 3
marshmallow = cake + 2
chocolatte = marshmallow + 7
total = x*cake + y*marshmallow + z*chocolatte
print(total)",0.07999999821186066,0.06288250535726547
282,"
a = int(input())
c = 0
for b in range(a + 1, 9999999999999999999):
    for d in range(2, b // 2):
        if b % d == 0 and d % 10 == 7 and d != 7 and d != b:
            print(b, d)
            c += 1
    if c == 5:
        exit()
",0.9869999885559082,0.23272892832756042
283,"
s=str(input())
k=1
mas=[]
for i in range(len(s)-1):
    if s[i]!=s[i+1]:
        k+=1
    else:
        mas.append(k)
        k=1
print(max(mas))",0.009999999776482582,7.215869845822453e-05
284,"
k, r = map(int, input().split())
for n in range(1, 11):
    if (n * k) % 10 == 0 or (n * k) % 10 == r:
        print(n)
        break
",0.9359999895095825,0.0052035050466656685
285,"n, k, t, c, d, p, nl, np = map(int, input().split())

k = k*t # ÐºÐ¾Ð»Ð¸ÑÐµÑÑÐ²Ð¾ Ð¼Ð¼ Ð¼Ð°ÑÐ°ÐºÑÑ
c = c*d # dolki
a = min(k/nl, c, p/np)
if a == 0:
    a = 1
if int(a)%n == 0:
    q = n
else:
    q = int(a)%n 
print (int(a), q)",0.03400000184774399,2.613682283936214e-07
286,"
from itertools import permutations

n, k = map(int, input().split())
arr = [int(input()) for _ in range(n)]

perms = permutations(arr, k)

for p in perms:
    print(' '.join(map(str, p)))
",0.9520000219345093,1.1257492587901652e-05
287,"print(len(input().split()))
",0.07699999958276749,0.0009547899244353175
288,"n = int(input())boys = []girls = []for _ in range(n):a, h = map(int, input().split())if a == 0:boys.append(h)else:girls.append(h)boys.sort(reverse=True)girls.sort(reverse=True)line = boys + girlsmax_diff = 0for i in range(len(line) - 1):max_diff = max(max_diff, abs(line[i] - line[i + 1]))print(max_diff)",0.9710000157356262,0.8967514038085938
289,"n=list(input())
d=len(n)
f=0
c=0
h=1
for i in range(0,d):
 f+=int(n[c])*(2**(d-h))
 c+=1
 h+=1
print(f)
",0.08699999749660492,0.7775278687477112
290,"s,c,k = map(int, input().split())
n = int(input())
sp= []
a = -1
spall = ['cheese','ketchup','sausage']
spall.sort()
for i in range(0,n):
    sp.append(input())
sp.sort()
if len(sp) == 3:
    print(s*k*c)
else:
    for j in range(0,len(spall)-1):
        a+=1
        if sp[a] != spall[j]:
            z = spall[j]
    if z == 'cheese':
        print(s*k)
    if z == 'ketchup':
        print(s*c)
    else:
        print(c*k)
",0.054999999701976776,0.36410659551620483
291,"
N = int(input())
arr = list(map(int, input().split()))
count = 0
for num in arr:
    if num >= 0:
        count += 1
print(count)
",0.953000009059906,0.9425281286239624
292,"n=int(input())
a=list(map(int,input().split()))
m=min(a)
k=0
for i in range(n):
    k=k+(a[i]-m)
print(k)",0.10000000149011612,0.16288888454437256
293,"a=int(input())
b=int(input())
c=0
k=0
max=0
st=[]
def inDel ( x ):
    inDel = [1]
    for i in range (2,x+1):
        if x%i == 0:
            inDel.append(i)
    return inDel

for k in range(a,b+1):
    if len(inDel(k))>=max:
        max=len(inDel(k))
        d=k
        st=inDel(k)
print(max,st[-1],st[-2])
",0.06700000166893005,0.005089673679322004
294,"a,b,c = map(int,input().split())
if a == 0:
    print(0)
elif c <= a:
    print(b*2)
else:
    if c % a == 0:
        print((c // a)*2*b)
    else:
        print((c//a+1)*2*b)",0.0560000017285347,1.7891146853799e-05
295,"
def strange_lottery(h):
    tickets = set()
    for i in range(10000):
        a = i // 1000
        b = (i % 1000) // 100
        c = (i % 100) // 10
        d = i % 10
        e = a + b
        f = d + c
        g = e if e > f else f
        if g == h:
            tickets.add(i)
    if tickets:
        return max(tickets)
    else:
        return 0

h = int(input())
print(strange_lottery(h))
",0.9070000052452087,0.9517755508422852
296,"
x1, y1, x2, y2 = map(int, input().split())
if y1 == y2:
    res = abs(x1 - x2)
else:
    res = abs(x1) + abs(x2) + abs(y1 - y2)
print(res)
",0.8730000257492065,0.9538624882698059
297,"
n, m, k = map(int, input().split())

def min_helicopters(n, m, k):
    if k < 3:
        return 0
    if n + m <= k:
        return 1
    total_people = n + m
    helicopters_needed = (total_people + (k - 2) - 1) // (k - 2)
    return helicopters_needed

print(min_helicopters(n, m, k))
",0.9589999914169312,0.9811730980873108
298,"print(sum([x**2 for x in list(map(int, input().split()))]))
",0.0689999982714653,7.234808752087929e-09
299,"
n, m = map(int, input().split())
y, x = map(int, input().split())
coins = 0
direction = 'right'
i, j = 1, 1

while True:
    if i == y and j == x:
        break
    coins += 1
    if direction == 'right':
        if j < m:
            j += 1
        else:
            direction = 'down'
            i += 1
    elif direction == 'down':
        if i < n:
            i += 1
        else:
            direction = 'left'
            j -= 1
    elif direction == 'left':
        if j > 1:
            j -= 1
        else:
            direction = 'up'
            i -= 1
    elif direction == 'up':
        if i > 1:
            i -= 1
        else:
            direction = 'right'
            j += 1

print(coins)
",0.8679999709129333,0.9826170802116394
300,"
n, k = map(int, input().split())
nums = list(map(int, input().split()))
i = 0
while k > 0 and i < n:
    if nums[i] < 0:
        nums[i] = -nums[i]
        k -= 1
    else:
        break
    i += 1
if k > 0:
    nums.sort()
    if k % 2 != 0:
        nums[0] = -nums[0]
print(sum(nums))
",0.921999990940094,0.03464214503765106
301,"x,y,z=map(int,input().split())
a=x*3+y*5+z*12
print(a)",0.07699999958276749,0.0064721680246293545
302,"
n = int(input())
for _ in range(n):
    data = list(map(int, input().split()))
    correct = data[0]
    answers = data[1:]
    scores = [0] * 6
    correct_count = answers.count(correct)
    
    if correct_count == 1:
        scores[answers.index(correct)] = 6
    elif correct_count == 2:
        for i in range(6):
            if answers[i] == correct:
                scores[i] = 3
    elif correct_count == 3:
        for i in range(6):
            if answers[i] == correct:
                scores[i] = 2
    elif correct_count > 3:
        for i in range(6):
            if answers[i] == correct:
                scores[i] = 1
    
    print(' '.join(map(str, scores)))
",0.925000011920929,0.9611560702323914
303,"
N = int(input())
K = int(input())
R = int(input())

pos = K % N
time = K

if pos != 0:
    time += R

print(time)
",0.8569999933242798,0.9571307897567749
304,"
n = int(input())
b = list(map(int,input().split()))

mini = b[0]
maxi = b[0]
for i in b:
    if i < mini:
        mini = i
    if i > maxi:
        maxi = i

diff = maxi - mini

cnt_min = 0
cnt_max = 0
for i in b:
    if i == mini:
        cnt_min += 1
    if i == maxi:
        cnt_max += 1

if diff == 0:
    ways = n * (n - 1) // 2
else:
    ways = cnt_min * cnt_max

print(diff, ways)
",0.996999979019165,0.8911754488945007
305,"
n = int(input())
max_num = -1
for _ in range(n):
    num = int(input())
    if num % 10 == 2 and num > max_num:
        max_num = num
print(max_num)
",0.9229999780654907,0.9301782846450806
306,"y, k, n = map(int, input().split())

ostatok = n - y

if ostatok == 0:
    print(-1)
    exit()

event = False
for i in range(1, ostatok):
    if (i + y) % k == 0:
        x = i
        event = True
        break

if not event:
    print(-1)
    exit()

while x + y <= n:
    print(x, end = ' ')
    x += k

",0.09200000017881393,0.0002759102499112487
307,"
perimeter = int(input())
side = perimeter // 4
print(side)
",0.9879999756813049,0.9249467253684998
308,"
Dan = input()
lower_count = 0
title_count = 0

for char in Dan:
    if 'a' <= char <= 'z':
        lower_count += 1
    elif 'A' <= char <= 'Z':
        title_count += 1

if lower_count == 0 or title_count == 0:
    print(-1)
else:
    print(lower_count / title_count)
",0.8840000033378601,0.8990458846092224
309,"
x, y = map(float, input().split())
if x > 0 and y > 0:
    print(1)
elif x < 0 and y > 0:
    print(2)
elif x < 0 and y < 0:
    print(3)
elif x > 0 and y < 0:
    print(4)
",0.9330000281333923,1.6068054264906095e-06
310,"
n = int(input())
numbers = list(map(int, input().split()))
max_sum = 0
max_number = 0

for number in numbers:
    sum_digits = 0
    number_copy = number
    while number_copy > 0:
        sum_digits += number_copy % 10
        number_copy //= 10
    if sum_digits > max_sum:
        max_sum = sum_digits
        max_number = number

print(max_number)
",0.9359999895095825,0.9298662543296814
311,"n,k,t,c,d,p,nl,np=map(int,input().split())
s=k*t
m=c*d
kk=min(s//nl,m,p//np)
if kk%n==0:
    print(kk,n)
else:
    print(kk,kk%n)
",0.07599999755620956,1.1729331284016098e-08
312,"a = int(input())
b = int(input())
c = int(input())
meet = []
res = 0
for i in range(c, b+1):
    if i % c == 0:
        meet.append(i)
for x in range(a, b+1):
    if x in meet:
        res += 1
print(res)",0.03700000047683716,0.01166035607457161
313,"py=[int(i) for i in input().split()]
pa=[int(i) for i in input().split()]
s1=py[0]*(py[1]+py[2]*py[3]+py[4])
s2=pa[0]*(pa[1]+pa[2]*pa[3]+pa[4])
if s1<s2:
    print(""Python"",s1,)
elif s2<s1:
    print(""Pascal"",s2,)
else:
    print(""Draw"", s1)",0.014000000432133675,3.575786104192957e-05
314,"a, b = map(int, input().split())print(a - b)",0.9639999866485596,0.8981144428253174
315,"n = int(input())divisors = [i for i in range(1, n + 1) if n % i == 0 and i % 3 == 0]if divisors:print(len(divisors))print("" "".join(map(str, divisors)))else:print(0)",0.9150000214576721,0.9229682087898254
316,"
def exponentiate(base, power):
    result = 1
    for _ in range(power):
        result *= base
    return result

x, p, y, t = map(int, input().split())
result = exponentiate(x, p) + exponentiate(y, t)
print(result)
",0.9700000286102295,0.9438086152076721
317,"n=int(input())
k = dict()
for x in range(n):
    s = input()
    if s in k.keys():
        k[s] +=1
    else: k[s] = 0
print(n-max(k.values()))
   
",0.09000000357627869,0.517885148525238
318,"
n = int(input())
binary = bin(n)
octal = oct(n)
hexa = hex(n)
print(binary[2:], octal[2:], hexa[2:].upper())
",0.8889999985694885,0.5508668422698975
319,"
x1, x2, x3 = map(int, input().split())
heaps = [x1, x2, x3]
count = 0

while True:
    heaps.sort()
    diff1 = abs(heaps[0] - heaps[1])
    diff2 = abs(heaps[1] - heaps[2])
    diff3 = abs(heaps[0] - heaps[2])
    min_diff = min(diff1, diff2, diff3)
    if min_diff == 0:
        break
    heaps.append(min_diff)
    count += 1

print(count)
",0.9399999976158142,0.9142385125160217
320,"
n, m = map(int, input().split())
y, x = map(int, input().split())
coins = 0
direction = 'right'
row, col = 1, 1

while True:
    if row == y and col == x:
        break
    coins += 1
    if direction == 'right':
        if col < m:
            col += 1
        else:
            direction = 'down'
            row += 1
    elif direction == 'down':
        if row < n:
            row += 1
        else:
            direction = 'left'
            col -= 1
    elif direction == 'left':
        if col > 1:
            col -= 1
        else:
            direction = 'up'
            row -= 1
    elif direction == 'up':
        if row > 1:
            row -= 1
        else:
            direction = 'right'
            col += 1

print(coins)
",0.9950000047683716,0.9826170802116394
321,"
k, n = map(int, input().split())

for i in range(1, int(n/k)+2):
    if n-i*(k-1) <= k:
        print(i, n-i*(k-1))
        break
",0.9319999814033508,0.9326215386390686
322,"
a = int(input())
b = int(input())
c = int(input())
d = c - a
e = d // b
print(e)
",0.9679999947547913,0.907533586025238
323,"k=int(input())
s=10
for i in range(k):
    if s<=99:
        s+=9
    if s<=999 and s>100:
        s+=90
    if s<=9999 and s>1000:
        s+=900
    if s<=99999 and s>10000:
        s+=9000
print(s)
",0.08299999684095383,0.9420104622840881
324,"a = int(input())
b = int(input())
k = 0
while a != b:
    k = k + 1
    if a < b:
        b = b - a
    else:
        a = a - b
print(k+1)",0.0010000000474974513,0.00903878454118967
325,"n = int(input())
print(len(list(set(input().split()))))",0.06599999964237213,2.37609856412746e-05
326,"from math import  ceil

k, n, s, p = map(int, input().split())

one_kid_lists = ceil(n / s)
lists_count = one_kid_lists * k
print(ceil(lists_count / p)) # Ð¼Ð¸Ð½Ð¸Ð¼Ð°Ð»ÑÐ½Ð¾Ðµ ÐºÐ¾Ð»Ð¸ÑÐµÑÑÐ²Ð¾ Ð¿Ð°ÑÐµÐº",0.03500000014901161,1.8442806037910486e-07
327,"
x = int(input())
y = int(input())
g3 = (7, 3)
if x == g3[0] and y == g3[1]:
    print('Yes')
else:
    print('No')
",0.9750000238418579,0.877937912940979
328,"
h = int(input())
m = int(input())

m += 15
if m >= 60:
    m -= 60
    h += 1

h += 1
if h >= 24:
    h -= 24

print(h, m)
",0.8740000128746033,0.9502198100090027
329,"n = int(input())
k = int(input())
x = int(input())
y = int(input())
h = 0
if n > k:
    h = n - k
    print(h * y + k * x)
else:
    print(n * x)
    
",0.039000000804662704,0.21171633899211884
330,"
n = int(input())
ways = 1
while n > 3:
    if n % 2 == 0:
        n = n // 2
    else:
        n = (n // 2) + 1
    ways *= 2
print(ways)
",0.8640000224113464,0.9228968620300293
331,"n, z = map(int, input().split())
num = input()

for i in range(n):
    if int(num[i]) < z:
        num = num[:i] + str(z) + num[i:]
        break

else:
    num += str(z)

print(num)",0.07800000160932541,0.037373073399066925
332,"
a=int(input())
b=int(input())
c=0
k=0
max=0
st=[]
def inDel ( x ):
    inDel = [1]
    for i in range (2,x+1):
        if x%i == 0:
            inDel.append(i)
    return inDel

for k in range(a,b+1):
    if len(inDel(k))>=max:
        max=len(inDel(k))
        d=k
        st=inDel(k)
print(max,st[-1],st[-2])
",0.01600000075995922,0.005089673679322004
333,"import math
n = input()
b = input().replace("" "","""")
d = []
for i in set(b):
    d.append(b.count(i))
print(max(d))",0.07900000363588333,0.004026076756417751
334,"
num = 1
print(num)
",0.9380000233650208,0.9200899004936218
335,"
def find_min_rain(n, l, a):
    dp = [[0] * (101 * l) for _ in range(n)]
    for i in range(1, n):
        for j in range(101 * l):
            for k in range(j + 1, 101 * l):
                dp[i][k] = min(dp[i][k], dp[i - 1][j] + a[i - 1])
    min_rain = float('inf')
    start_day = -1
    for i in range(l):
        rain = sum(dp[-1][i * 101 + j] for j in range(100))
        if rain < min_rain:
            min_rain = rain
            start_day = (i * 100 + 1)
    return start_day if min_rain != float('inf') else -1

n, l = map(int, input().split())
a = list(map(int, input().split()))
print(find_min_rain(n, l, a))
",0.9160000085830688,0.9032638072967529
336,"
A, B = map(int, input().split())
total_hours = 0

while A > 0:
    total_hours += A
    A, B = A // B, A % B

print(total_hours)
",0.9800000190734863,0.9153650999069214
337,"a=list(map(int,input().split()))
d=-1
g=0
v=0
k=0
f=[]
h=[]
for i in range(len(a)):
    if a[i]!=a[i-1] and i>0:
        h.append(k)
        f.append(a[i-1])
        k=0
    k+=1
h.append(k)
f.append(a[-1])
for i in range(len(h)):
    if h[i]>2 and d<=i:
        v+=h[i]
        g=i-1
        d=i+1
        if g>=0 and d<len(h):
            if f[g]==f[d]:
                for q in range(1000):
                    if g>=0 and d<len(h):
                        if f[g]==f[d]:
                            v+=h[g]+h[d]
                            d+=1
                            g-=1
                        else:
                            break
                    else:
                        break
print(v)

",0.09099999815225601,2.473637683575447e-10
338,"s=input().split()
ms=[str(i) for i in s]
print(*ms)
 
",0.09000000357627869,4.7819758037803695e-05
339,"input()
a = input()
g = []
for h in range(len(a)):
    
    if h < len(a)-1 and (a[h] + a[h+1]) not in g:
        g.append(a[h] + a[h+1])
print(len(g))",0.09600000083446503,1.199442891675062e-07
340,"
n = int(input())
oldest_age = -1
oldest_index = -1

for i in range(n):
    v, s = map(int, input().split())
    if s == 1:
        if v > oldest_age:
            oldest_age = v
            oldest_index = i + 1
        elif v == oldest_age:
            if oldest_index == -1 or (i + 1) < oldest_index:
                oldest_index = i + 1

if oldest_index == -1:
    print(-1)
else:
    print(oldest_index)
",0.9750000238418579,0.009949613362550735
341,"n = int(input())
if n < 4:
    print(0)
else:
    if (n//2) % 2 != 0:
        print(n//4)
    else:
        print((n//4)-1)",0.05999999865889549,0.08869528025388718
342,"n = int(input())
A, B, C = map(int, input().split())
D, E, F = map(int, input().split())

cost = n * (A * D + B * E + C * F)

print(cost)",0.9679999947547913,0.43275368213653564
343,"def shorten_sequence(sequence):
    result = []
    count = 1
    prev = sequence[0]
    for i in range(1, len(sequence)):
        if sequence[i] == prev:
            count += 1
        else:
            result.append(count)
            result.append(prev)
            prev = sequence[i]
            count = 1
    result.append(count)
    result.append(prev)
    return result

n = int(input())
sequence = list(map(int, input().split()))
shortened = shorten_sequence(sequence)
print(*shortened)",0.9070000052452087,0.2793992757797241
344,"
a, b, c = map(int, input().split())
d = [1, 6, 20]
e = [[0 for _ in range(c + 1)] for _ in range(b + 1)]
f = 0

for g in range(1, b + 1):
    for h in range(1, c + 1):
        e[g][h] = 1

for g in range(1, b + 1):
    for h in range(1, c + 1):
        for i in range(1, c + 1):
            if a * i <= g and d[h - i] <= c:
                e[g][h] |= e[g - a * i][h - d[h - i]]

for g in range(1, b + 1):
    for h in range(c, 0, -1):
        if e[g][h]:
            f += 1
            break

print(f)
",0.9169999957084656,0.19154328107833862
345,"n = int(input())
print(max(list(map(int, input().split()))))",0.08900000154972076,7.597920921398327e-05
346,"
text = input()
res = ''
for char in text:
    if char == '�':
        res += '�'
    elif char == '�':
        res += '�'
    elif char == '�':
        res += '�'
    elif char == '�':
        res += '�'
    elif char == '�':
        res += '�'
    elif char == '�':
        res += '�'
    elif char == '�':
        res += '�'
    elif char == '�':
        res += '�'
    elif char == '�':
        res += '�'
    elif char == '�':
        res += '�'
    elif char == '�':
        res += '�'
    elif char == '�':
        res += '�'
    elif char == '�':
        res += '�'
    elif char == '�':
        res += '�'
    elif char == '�':
        res += '�'
    elif char == '�':
        res += '�'
    elif char == '�':
        res += '�'
    elif char == '�':
        res += '�'
    elif char == '�':
        res += '�'
    elif char == '�':
        res += '�'
    elif char == '�':
        res += '�'
    elif char == '�':
        res += '�'
    elif char == '�':
        res += '�'
    elif char == '�':
        res += '�'
    elif char == '�':
        res += '�'
    elif char == '�':
        res += '�'
    elif char == '�':
        res += '�'
    elif char == '�':
        res += '�'
    elif char == '�':
        res += '�'
    elif char == '�':
        res += '�'
    elif char == '�':
        res += '�'
    elif char == '�':
        res += '�'
    elif char == '�':
        res += '�'
    else:
        res += char
print(res)
",0.9610000252723694,0.9999911785125732
347,"a,x=map(int,input().split())
print(a**x)
",0.03999999910593033,0.2244640588760376
348,"x = 0
k = int(input())
for i in range(19, 11000000, 9):
    if sum(map(int,str(i))) == 10:
        x += 1
    if x == k:
        print(i)
        break

",0.04100000113248825,0.3639448881149292
349,"c, m = map(int, input().split())
for a in range(1, 15):
    if (a*c - m) % 10 == 0 or a*c % 10 == 0:
        print(a)
        break",0.06599999964237213,0.10728324949741364
350,"N = int(input())array = list(map(int, input().split()))count = 0for num in array:if num >= 0:count += 1print(count)",0.9589999914169312,0.8706411123275757
351,"
n = int(input())
arr = []
for i in range(n):
    arr.append(int(input()))
res = []
for i in arr:
    if i not in res:
        res.append(i)
print(len(res))
",0.9810000061988831,0.0002479947288520634
352,"a, b, c, d=map(int, input().split())
h=(c*60+d)-(a*60+b)
print(h//60, h%60)",0.050999999046325684,0.0003219956997781992
353,"k=int(input())
l=int(input())
n=int(input())
s=int(input())
a=k+n*s
b=l+(s//2)*n
if a>=b:
    print(""YES"")
else:
    print(""NO"")
",0.024000000208616257,0.9504520297050476
354,"
s = input()
for i in s:
  if not '�' <= i.lower() <= '�':
    print('Yes')
    exit()
print('no')
",0.9570000171661377,0.6539962291717529
355,"
a=int(input())
b=int(input())
mx=0
def inDel( x ):
    inDel=[1]
    for i in range (1,x//2+1):
        if x%i==0:
            inDel.append(i)
    return inDel
for k in range (a,b+1):
    if len(inDel(k))>=mx:
        mx=len(inDel(k))
        a=k
print(mx,a,a//2)",0.05700000002980232,0.021697964519262314
356,"n, d = map(int, input().split())
a = [int(n) for n in input().split()]
m = int(input())
a.sort()
if n>=m:
    print(sum(a[:m]))
else:
    print(sum(a)-d*(m-n))
",0.008999999612569809,4.3356809698025245e-08
357,"d1, d2, d3 = map(int,input().split())

print(min(2 * d1 + 2 * d2, 2 * d1 + 2 * d3, 2 * d2 + 2 * d3, d1 + d2 + d3))",0.039000000804662704,4.407909364090301e-05
358,"
n, m = map(int, input().split())
grades = [input().strip() for _ in range(n)]
successful = 0

for i in range(n):
    is_successful = False
    for j in range(m):
        best = True
        for k in range(n):
            if grades[k][j] > grades[i][j]:
                best = False
                break
        if best:
            is_successful = True
            break
    if is_successful:
        successful += 1

print(successful)
",0.8790000081062317,0.8316870927810669
359,"def main():
    k, n, w = map(int, input().split())
    total_memory_needed = sum(i * k for i in range(1, w + 1))
    additional_memory = max(0, total_memory_needed - n)
    print(additional_memory)

if __name__ == ""__main__"":
    main()",0.9380000233650208,0.9429318308830261
360,"k=int(input())
for i in range(k):
    n,m=map(int,input().split())
    s=(1+m)//2*m
    if s>n:
        print(""NO"")
    else:
        print(""YES"")
",0.02500000037252903,0.7694923281669617
361,"n,v1=map(int, input().split())
sp=[-1]*n
Q=[]
QQ=[]
maska=0
visited=[False]*n
gr=[[0]*n for i in range(n)]
for i in range(n):
    gr[i] = [int(t) for t in input().split()]

def BFS(ver):
    if ver<len(Q):
        v=Q[ver]
        for i in range(n):
            if gr[v][i]==1 and not(visited[i]):
                Q.append(i)
                visited[i]=True
                sp[i]=v  
        BFS(ver+1)
Q.append(v1-1)
visited[v1-1]=True
BFS(0)
m=int(input())
for i in range(m):
    vk=int(input())
    QQ=[]
    maska=0
    per=vk-1
    while per!=v1-1:
        QQ.append(per+1)
        per=sp[per]
        if per==-1:
            maska=1
            break
    if maska==0:
        QQ.append(v1)
        QQ.reverse()
        print(*QQ)
    else:
        print(-1)",0.08399999886751175,4.068397962270209e-12
362,"
a = int(input())
b = int(input())
c = int(input())

if a < b:
    if a < c:
        res = a
    else:
        res = c
else:
    if b < c:
        res = b
    else:
        res = c

print(res)
",0.8920000195503235,0.8177825212478638
363,"
a = int(input())
b = int(input())
s = a + b
c = 0
while True:
    res = int(input())
    c = c +1
    if res == s:
        break
print(c)
",0.9089999794960022,0.9189581871032715
364,"
numbers = input().split()
a, b, c = int(numbers[0]), int(numbers[1]), int(numbers[2])
average = (a + b + c) // 3
print(average)
",0.9490000009536743,0.0034198020584881306
365,"t = int(input())
for i in range(t):
    n, k = list(map(int, input().split()))
    c = 0
    while n != 0:
        if n%k == 0:
            n//=k
        else:
            n-=1
        c +=1
    print(c)",0.08799999952316284,0.00951636116951704
366,"
n = int(input())
arr = list(map(int, input().split()))
cnt = 0
for i in range(n):
    for j in range(0, n-i-1):
        if arr[j] > arr[j+1]:
            arr[j], arr[j+1] = arr[j+1], arr[j]
            cnt += 1
print(cnt)
",0.9470000267028809,0.941651463508606
367,"n=int(input())
a1=input().split()
a=[int(i) for i in a1]
print(*sorted(a))
",0.07400000095367432,2.2763888409826905e-05
368,"
n = input().strip()
while True:
    cnt = n.count('1')
    next_n = str(cnt)
    if next_n == n:
        break
    n = next_n
print(n)
",0.9279999732971191,0.9315417408943176
369,"
def find_longest_multicolored(n, k, colors):
    dp = [[0] * k for _ in range(n)]
    for i in range(1, n):
        for j in range(1, k):
            dp[i][j] = dp[i - 1][j] + (1 if colors[i] != colors[i - 1] and dp[i - 2][colors[i - 1]] < dp[i - 1][j] else 0)
    max_len = 0
    for i in range(1, k):
        max_len = max(max_len, dp[-1][i])
    return max_len + 1

n, k = map(int, input().split())
colors = list(map(int, input().split()))
print(find_longest_multicolored(n, k, colors))
",0.9049999713897705,0.8856937885284424
370,"
n = int(input())
arr = list(map(int, input().split()))
max_index = arr.index(max(arr))
if max_index != len(arr) - 1:
 print(*arr)
else:
 arr[max_index], arr[len(arr) - 1] = arr[len(arr) - 1], arr[max_index]
 print(*arr)
",0.9580000042915344,3.549462460061825e-11
371,"
n, k, s = map(int, input().split())
p = list(map(int, input().split()))

left = 1
right = sum(p)

while left < right:
    mid = (left + right) // 2
    cnt = 0
    sum_p = 0
    for i in p:
        if sum_p + i > mid:
            cnt += 1
            sum_p = 0
        sum_p += i
    cnt += 1
    if cnt <= k:
        right = mid
    else:
        left = mid + 1

print((left + s - 1) // s)
",0.9390000104904175,0.0028427504003047943
372,"n, m = map(int, input().split())
print(n*(m//2)-(m%2))",0.041999999433755875,2.291758391947951e-06
373,"
p, a, b, c = map(int, input().split())
x = a - p % a if p % a != 0 else 0
y = b - p % b if p % b != 0 else 0
z = c - p % c if p % c != 0 else 0
print(min(x, y, z))
",0.9539999961853027,1.142059431913367e-06
374,"n = int(input())
k = 0
while n != 1:
    if n % 2 == 1:
        n -= 1
        k += 2
        n = n // 2
    else:
        n = n // 2
        k += 1
if k >= 7:
    print(7)
else:
    print(k)",0.09799999743700027,0.21985933184623718
375,"import random
n = int(input())

if n == 5:
    x1, y1, x2, y2 = map(int, input().split())
    if (x1, y1, x2, y2) == (0, 0, 2, 3):
        print('YES')
    else:
        print(['YES','YES','YES','NO', 'NO'][random.randint(0,4)])
else:
    x1, y1, x2, y2 = map(int, input().split())
    if (x1, y1, x2, y2) == (0, 0, 2, 3) and n == 4:
        print('NO')
    else:
        print(['YES','YES','YES','NO', 'NO'][random.randint(0,4)])",0.00800000037997961,2.0841911529956292e-11
376,"k = int(input())
if 1 <= k <= 9:
    print(19 + (k - 1) * 9)
else:
    print(109 + (k - 10) * 9)",0.02500000037252903,0.001057080109603703
377,"a,b=map(int,input().split())
if a==b:
    print(a-b)
elif (a>0 and b<0) or (b>0 and a<0):
    print(a*b)
else:
    print(a+b)
",0.050999999046325684,6.667444722552318e-06
378,"n, t  = map(int, input().split(' '))
a = input()
a = a.replace('  ', ' ')
a = [int(x) for x in a.split(' ')]
k = 1
while t > 0:
    t -= (80000 - a[k - 1])
    k += 1
print(k - 1)",0.006000000052154064,0.5524777173995972
379,"n1, p1, m1, t1, s1 = map(int, input().split())
n2, p2, m2, t2, s2 = map(int, input().split())
res1 = ((p1 + s1) + (m1 * t1)) * n1
res2 = ((p2 + s2) + (m2 * t2)) * n2
if res1 == res2:
    print(""Draw"", res1)
elif res1 < res2:
    print(""Python"", res1)
else:
    print(""Pascal"", res2)",0.07900000363588333,2.9197908588685095e-06
380,"
n, k = map(int, input().split())
enc = input().strip()
code = enc + enc[:k-1]
found = 'No'
for i in range(n):
    if code[i:i+k] == enc[i:i+k]:
        found = 'Yes'
        break
print(found)
",0.8519999980926514,0.9230908155441284
381,"
a = int(input())
b = int(input())
c = int(input())
print(2 * (a + b + c))
",0.9919999837875366,0.7175175547599792
382,"
n = int(input())
res = []
for i in range(1, n+1):
    if n % i == 0 and i % 3 == 0:
        res.append(i)
print(len(res))
if res:
    print(' '.join(map(str, res)))
else:
    print(0)
",0.972000002861023,0.8779294490814209
383,"
a, b = map(int, input().split())
print(a + b)
",0.9919999837875366,0.9206202626228333
384,"
for a in range(10000, 20000):
    m = 0
    for i in range(1, a):
        if a % i == 0:
            for j in range(i+1, a):
                if a % j == 0 and j - i > m:
                    m = j - i
    if m > 10000:
        print(m)
",0.9459999799728394,0.9557459354400635
385,"
s = input()
vowels = ""AIUYOV""
max_dist = 0
prev = -1
for i in range(len(s)):
  if s[i] in ""AIUOY"":
    dist = i - prev
    if dist > max_dist:
      max_dist = dist
    prev = i
dist = len(s) - prev
if dist > max_dist:
  max_dist = dist
print(max_dist)
",0.9079999923706055,0.865048885345459
386,"
n = int(input())
adj = [list(map(int, input().split())) for _ in range(n)]
visited = [False] * n
queue = []
res = []

queue.append(0)
visited[0] = True

while queue:
    v = queue.pop(0)
    res.append(v + 1)
    for i in range(n):
        if adj[v][i] == 1 and not visited[i]:
            queue.append(i)
            visited[i] = True

print(' '.join(map(str, res)))
",0.9769999980926514,0.9242386221885681
387,"n=int(input())
a= list(map(int, input().split()))
kp=0
ko=0
for i in range(n):
    if a[i]>=0:
        kp+=a[i]
    else:
        ko += a[i]
print(kp-ko)",0.01899999938905239,0.012377926148474216
388,"def sort_array(arr):
    arr.sort()
    return arr

n = int(input())
nums = list(map(int, input().split()))
sorted_nums = sort_array(nums)
print(*sorted_nums)
",0.9259999990463257,0.9705307483673096
389,"
H = int(input())
M = int(input())
if H < 1:
  H += 24
if H == 23 and M < 15:
  H += 1
print(str(H) + "" "" + str(M + 15))
",0.9819999933242798,0.0004782095493283123
390,"
h, m = map(int, input().split())
remaining_minutes = 90 - m
if remaining_minutes < 0:
 h -= 1
 remaining_minutes += 60
 if h < 0:
 h = 23
 print(h, remaining_minutes % 60)
",0.9459999799728394,0.6932103037834167
391,"ï»¿from math import ceil

n=int(input())
m=int(input())
print(ceil(m/n))
",0.06499999761581421,8.901685760065448e-06
392,"
n = int(input())
a = list(map(int, input().split()))
m = max(abs(x) for x in a)
print(m*(m == 0) + (m-1)*(m-1))
",0.8799999952316284,0.8697001338005066
393,"y, k, n = map(int, input().split())
start = (y // k*k + k)
print(' '.join (map(str, range(start - y, n - y + 1, k)))if n-start >=0 else -1)",0.08799999952316284,0.06794729083776474
394,"
n, m = map(int, input().split())
grid = [input().strip() for _ in range(n)]
visited = [[False for _ in range(m)] for _ in range(n)]
res = 0

for i in range(n):
    for j in range(m):
        if grid[i][j] == '#' and not visited[i][j]:
            res += 1
            stack = [(i, j)]
            while stack:
                x, y = stack.pop()
                if x < 0 or x >= n or y < 0 or y >= m or grid[x][y] != '#' or visited[x][y]:
                    continue
                visited[x][y] = True
                stack.append((x+1, y))
                stack.append((x-1, y))
                stack.append((x, y+1))
                stack.append((x, y-1))

print(res)
",0.8610000014305115,0.9969125986099243
395,"n=int(input())
s=input()
k1=s.count('1')
k2=s.count('2')
k3=s.count('3')
k4=s.count('4')
k=0
if k2//2>0:
    k+=k2//2
    k2=k2-k2//2*2
k1=k1-k3-k2
if k1>0:
    k+=(k1+1)//2
k=k+k4+k3+k2
print(k)",0.014999999664723873,0.0022193188779056072
396,"
n = int(input())
a = list(map(int, input().split()))
a.sort()
sum1, sum2 = 0, 0
for i in range(n):
    if i % 2 == 0:
        sum1 += a[i]
    else:
        sum2 += a[i]
print(abs(sum1 - sum2))
",0.9390000104904175,0.022920794785022736
397,"input()
data = list(map(int, input().split(' ')))
data = list(map(lambda x: data.count(x), data))
print(max(data))",0.08699999749660492,0.8261090517044067
398,"
s = int(input())
p = (s // 3)
s = p
k = 2 * (p + s)
print(p, k, s)
",0.9409999847412109,0.922041654586792
399,"start = int(input())
end = int(input())

def allDivs( x ):
  divs = [1, x]
  d = 2
  while d*d <= x:
    if x % d == 0:
      divs.append( d )
      if x // d > d:
        divs.append( x//d )
    d += 1
  return sorted(divs)

for x in range( start, end+1 ):
  divs = allDivs(x)[1:-1]
  digits2 = [ d for d in divs if 10 <= d <= 99 ]
  if len(digits2) == 30:
    print( x, digits2[0], digits2[-1] )



",0.07400000095367432,0.0177073385566473
400,"
a = int(input())
s = a // 100 + (a % 100) // 10 + a % 10
print(s)
",0.9010000228881836,1.6651138423640077e-07
401,"n = int(input())
a = list(map(int,input().split()))
ans=[]
last=-1
for i in a:
    if i!=last:
        ans.append(1)
        ans.append(i)
        last=i
    else:
        ans[-2]+=1
print(*ans)",0.04500000178813934,0.018440360203385353
402,"k, n = map(int, input().split())
print(n // k + 1, n % k)",0.007000000216066837,0.0033039324916899204
403,"
n, mod = map(int, input().split())
a = list(map(int, input().split()))
s = sum(a)
if s == 0:
    print(0)
else:
    d = {}
    for x in a:
        d.setdefault(x % mod, 0)
        d[x % mod] += 1
    ans = float('inf')
    for v in d.values():
        u = (s - v * mod) // mod
        if u * v == s:
            ans = min(ans, max(0, v - u))
    print(ans)
",0.9150000214576721,0.9298399686813354
404,"a, b = map(int, input().split())
n = int(input())
if a*b >= n*9:
    print(""NO"")
else:
    print(""YES"")
print(n - (a*b)//9)",0.03799999877810478,0.0021530441008508205
405,"i = input()
b = input()
b =b.split()
l = []
maximum = 0
for c in b:
    if(c in l):
        l.pop(l.index(c))
    else:
        l.append(c)
        if maximum < len(l):
            maximum = len(l)
print(maximum)",0.008999999612569809,0.0017744065262377262
406,"
n,k = map(int, input().split())
if k == 1:
    if n % 2 == 0:
        print(""No"")
    else:
        print(""Yes"")
else:
    if n % (k + 1) == 0:
        print(""No"")
    else:
        print(""Yes"")
",0.8740000128746033,0.9541621208190918
407,"n = int(input())
m = [int(x) for x in input().split()]

for i in range(n):
    for j in range(i, n):
        r = m[i] - m[j]
        if r > 0 and r not in m:
            n+=1
            m.append(r)
        elif r < 0 and -r not in m:
            n+=1
            m.append(-r)
print(n)",0.032999999821186066,0.38758575916290283
408,"
n = int(input())
arr = list(map(int, input().split()))
max_num = arr[0]
for i in arr:
    if i > max_num:
        max_num = i
print(max_num)
",0.9829999804496765,0.934628427028656
409,"n=int(input())
a= list(map(int, input().split()))
a.sort()
m = a[0]
r=0
for i in a:
	r+= i - m
print(r)
",0.09000000357627869,0.8093026280403137
410,"
field = []
for _ in range(2):
    field.append(input())
tags = {}
for i, r in enumerate(field):
    for j, c in enumerate(r):
        tags[(i, j)] = c
field[0] = field[1][:]
ans = 0
while field[0] != field[1]:
    for i, r in enumerate(field):
        for j, c in enumerate(r):
            for ii, rr in enumerate(field):
                for jj, cc in enumerate(rr):
                    if c == cc and (i != ii or j != jj):
                        field[ii][jj] = c
                        field[i][j] = c
                        tags[(ii, jj)] = c
                        tags[(i, j)] = c
                        ans += 1
print(ans)
",0.9330000281333923,0.9428039789199829
411,"def decimal_to_roman(x):
    values = [1000, 900, 500, 400, 100, 90, 50, 40, 10, 9, 5, 4, 1]
    numerals = [""M"", ""CM"", ""D"", ""CD"", ""C"", ""XC"", ""L"", ""XL"", ""X"", ""IX"", ""V"", ""IV"", ""I""]
    result = """"
    for i, v in enumerate(values):
        count = int(x / v)
        result += (numerals[i] * count)
        x -= v * count
    return result

x = int(input())
print(decimal_to_roman(x))",0.9419999718666077,0.9700111746788025
412,"
n = int(input())
grades = list(map(int, input().split()))
total = 0
for g in grades:
 total += g
avg = total / n
final = int(avg + 0.5)
print(final)
",0.9710000157356262,0.9329070448875427
413,"
n, m, a = map(int, input().split())
tiles_needed = ((n + a - 1) // a) * ((m + a - 1) // a)
print(tiles_needed)
",0.9160000085830688,0.49943166971206665
414,"
def divisors(a):
    result = []
    for i in range(1, a+1):
        if a % i == 0:
            result.append(i)
    return result

def find_numbers(mask):
    numbers = []
    for i in range(100, 109):
        for j in range(1000, 10000):
            if mask.count('?') == 2 and len(str(j)) == 4:
                if mask[0] == '1' and j // 100 == i:
                    numbers.append((j, i))
                if mask[3] == '6' and j % 100 == 5:
                    numbers.append((j, i))
            elif mask.count('*') == 1 and len(str(j)) > 1:
                if mask.count('?') == 0 and mask.count('*') == 1 and mask[1] == '1' and j // 100 == i:
                    for k in range(10):
                        l = j - k * 100
                        if l // 10 == i and l % 10 == 5:
                            numbers.append((j, i))
    return [(n, n // a) for n, a in numbers if n % a == 0]

a = int(input())
print(*[str(n) + ' ' + str(n // a) for n, _ in find_numbers('12??1*56') if n % a == 0], sep='\n')
",0.949999988079071,0.9989088773727417
415,"t = int(input())
for _ in range(t):
    n , k =map(int,input().split())
    ans=0
    while (n!=0):
        ans+=1
        if (n%k==0):
            n=n//k
        else:
            n-=1
    print(ans)",0.008999999612569809,0.005391256883740425
416,"
a, b = map(int, input().split())
max_children = min(a, b)
same_color = abs(a - b)
print(max_children, same_color)
",0.8579999804496765,0.8662962317466736
417,"
m,s = map(int,input().split())
p,q = map(int,input().split())
t = m*60+s
t = t//24
p = p + 3*t
q = q + 2*t
print(p,q)
",0.9909999966621399,0.010206992737948895
418,"def reachability(adj_matrix, pairs):
    def dfs(start, end, visited):
        if start == end:
            return True
        visited[start] = True
        for i in range(len(adj_matrix)):
            if adj_matrix[start][i] == 1 and not visited[i]:
                if dfs(i, end, visited):
                    return True
        return False

    result = []
    for pair in pairs:
        visited = [False] * len(adj_matrix)
        if dfs(pair[0] - 1, pair[1] - 1, visited):
            result.append(""YES"")
        else:
            result.append(""NO"")
    return result


n, m = map(int, input().split())
adj_matrix = []
for _ in range(n):
    adj_matrix.append(list(map(int, input().split())))

pairs = []
for _ in range(m):
    pairs.append(list(map(int, input().split())))

result = reachability(adj_matrix, pairs)
for r in result:
    print(r)",0.9210000038146973,0.9551581740379333
419,"f=int(input())
a=[int(s) for s in input().split()]
print(max(a))",0.07100000232458115,1.4958852261770517e-05
420,"n1 = int(input())
n2 = int(input())
result = n1 + n2
print(result)
",0.9039999842643738,0.9299483895301819
421,"m1, m2, m3 = map(int, input().split(' '))
mn=10**10
a=[m1, m2, m3]
for i in range(3):
    sm=0
    for j in range(3):
        sm+=abs(a[i]-a[j])
    mn=min(sm, mn)
print(mn)",0.003000000026077032,0.9146819710731506
422,"n = int(input())
a = list(map(int, input().split()))
b = list(map(int, input().split()))
a.sort()
b.sort()
s = 0
for i in range(n):
    s+=abs(a[i]-b[i])
print(s)",0.02500000037252903,0.002406189450994134
423,"def find_min_sensors(n, d, sensors):
    on_count = 0
    last_on = -1
    for i in range(n):
        if sensors[i] == 1:
            last_on = i
        else:
            if i - last_on > d:
                on_count += 1
                last_on = i
    return on_count

n, d = map(int, input().split())
sensors = list(map(int, input().split()))
print(find_min_sensors(n, d, sensors))",0.9210000038146973,0.9202283024787903
424,"n = int(input())
s = input()
s = s.split(' ')
d = {}
for i in s:
    if i not in d: d[i] = 1
    else: d[i] += 1
maximum = 0
for val in d.values():
    if val > maximum: maximum = val
print(maximum, len(d))",0.07599999755620956,0.9588241577148438
425,"
n = int(input())
arr = list(map(int, input().split()))
print(max(arr))
",0.9509999752044678,0.048625580966472626
426,"x = 3
y = 5
z = 12
a = input()
b = a.split(' ')
print(int(int(b[0])*x)+int(int(b[1])*y)+int(b[2])*z)",0.019999999552965164,1.7034290067385882e-06
427,"import math
y,k,n=map(int,input().split())
p=0
for i in range(y+1,n+1):
    if math.gcd(k,i)==k:
        print(i-y,end="" "")
        p+=1

if p==0:
    print(-1)",0.04500000178813934,0.0001133230616687797
428,"n=int(input())
a=[int(i) for i in input().split()]
b=[int(i) for i in input().split()]
summa=0
for i in range(3):
    summa+=a[i]*b[i]

print(summa*(n+1))",0.09700000286102295,8.353544700412385e-08
429,"d1,d2,d3=map(int,input().split())
if d1+d2+d3 < 2*d1+2*d2 and 2*d2+2*d3:
    print(d1+d2+d3)
else:
    if 2*d1+2*d2<2*d2+2*d3:
        print(2*d1+2*d2)
    else:
        print(2*d2+2*d3)
",0.03700000047683716,3.8688176573487e-06
430,"n = int(input())
x = ( n + 1 ) // 2
print(x)
",0.02199999988079071,0.8657131195068359
431,"def main():
    t = int(input())
    for _ in range(t):
        n, k = map(int, input().split())
        steps = 0
        while n > 1:
            if n % k == 0:
                n //= k
            else:
                n -= 1
            steps += 1
        print(steps)

if __name__ == ""__main__"":
    main()",0.9800000190734863,0.9422378540039062
432,"
n, m = map(int, input().split())
seats = list(map(int, input().split()))

max_earnings = 0
min_earnings = 0

# Calculate maximum earnings
for _ in range(n):
    max_seat_index = seats.index(max(seats))
    max_earnings += seats[max_seat_index]
    seats[max_seat_index] -= 1

# Reset seats for minimum earnings calculation
seats = list(map(int, input().split()))

# Calculate minimum earnings
for _ in range(n):
    min_seat_index = seats.index(min(seats))
    min_earnings += seats[min_seat_index]
    seats[min_seat_index] -= 1

print(max_earnings, min_earnings)
",0.9259999990463257,0.0028352499939501286
433,print(2),0.04800000041723251,0.5666978359222412
434,"
a = int(input())
b = int(input())
d = int(input())
if a < d + 4 or b < d + 4:
    print(""no"")
else:
    print(""Yes"")
",0.8790000081062317,0.9329692125320435
435,"n = int(input())
a = list(map(int,input().split()))
t = set()
mx = 0 
k = 0
for i in range(n*2):
    x = a[i]
    if x in t: 
        t.discard(x)
        k -= 1
    else:
        t.add(x)
        k += 1
    mx = max(mx, k)
print(mx)
        
        ",0.010999999940395355,0.8161135315895081
436,"
t=int(input())
for _ in range(t):
    x=int(input())
    d=1
    while x>d:
        d+=1
        while (d%3==0)|(str(d)[-1]=='3'): d+=1
    print(d)
",0.9480000138282776,0.9671049118041992
437,"n = int(input())
a = list(map(int, input().split()))
count = 1
for i in range(1, n):
    if a[i] != a[i - 1]:
        count += 1
print(count)",0.921999990940094,0.8360565900802612
438,"
N, K = map(int, input().split())
observed = list(map(int, input().split()))
queries = list(map(int, input().split()))

results = []
for q in queries:
    low, high = 0, N - 1
    found = False
    while low <= high:
        mid = (low + high) // 2
        if observed[mid] == q:
            found = True
            break
        elif observed[mid] < q:
            low = mid + 1
        else:
            high = mid - 1
    results.append(""YES"" if found else ""NO"")

print("" "".join(results))
",0.972000002861023,0.08361376076936722
439,"n = int(input())
s = 0
a = [int(s) for s in input().split()]
for i in range(len(a)):
    s+=abs(a[i])
print(s)",0.004999999888241291,0.026819249615073204
440,"
a = input()
b = input()
c = input()

a = float(a)
b = float(b)
c = float(c)

if a + b > c and a + c > b and b + c > a:
    print(""yes"")
else:
    print(""no"")
",0.8669999837875366,0.9741885662078857
441,"
N, D, K = map(int, input().split())
x, y = 0, 0
visited = set()
visited.add((x, y))
directions = [(1, 0), (0, -1), (-1, 0), (0, 1)]
dir_index = 0

for i in range(N):
    for _ in range(D):
        visited.add((x, y))
        x += directions[dir_index][0]
        y += directions[dir_index][1]
    dir_index = (dir_index + 1) % 4
    D *= K

min_x = min(pos[0] for pos in visited)
max_x = max(pos[0] for pos in visited)
min_y = min(pos[1] for pos in visited)
max_y = max(pos[1] for pos in visited)

H = max_y - min_y + 1
W = max_x - min_x + 1
print(H, W)

grid = [['.' for _ in range(W)] for _ in range(H)]
for (vx, vy) in visited:
    grid[vy - min_y][vx - min_x] = '*'

for row in grid:
    print(''.join(row))
",0.968999981880188,0.980643630027771
442,"def find_finalists(n, results):
    flipped = [False] * n

    for i in range(n):
        for j in range(n):
            if results[i][j] in (1, 3):  
                flipped[i] = True
            if results[i][j] in (2, 3):
                flipped[j] = True

    
    finalists = [i + 1 for i in range(n) if not flipped[i]]  

    return finalists

n = int(input())
results = [list(map(int, input().split())) for _ in range(n)]


finalists = find_finalists(n, results)


print(len(finalists))
print("" "".join(map(str, finalists)))",0.020999999716877937,0.9307637810707092
443,"
n = int(input())
max_num = 0
for _ in range(n):
    num = int(input())
    if num % 10 == 2 and num > max_num:
        max_num = num
print(max_num)
",0.996999979019165,0.9278601408004761
444,"
n, k = map(int, input().split())
scores = [int(input()) for _ in range(n)]
scores.sort(reverse=True)
good = sum(scores[k:k*2]) // k
excellent = sum(scores[:k]) // k
print(good, excellent)
",1.0,0.9700509905815125
445,"n = int(input())
c = list(map(int,input().split()))
print(min(c))",0.06400000303983688,0.048625580966472626
446,"def main():
    a = int(input())
    count = 0
    num = a + 1
    while count < 5:
        divisors = []
        for i in range(2, int(num ** 0.5) + 1):
            if num % i == 0:
                divisors.append(i)
                if i != num // i:
                    divisors.append(num // i)
        if len(divisors) > 0:
            M = min(divisors) + max(divisors)
            if M % 10 == 8:
                print(num)
                print(M)
                count += 1
        num += 1

if __name__ == ""__main__"":
    main()",0.902999997138977,0.8182034492492676
447,"n = input().split()[1]
num = input()
res = -100000000000

for i in range(len(num)+1):
    res = max(res, int(num[:i] + n + num[i:]))

print(res)
",0.03700000047683716,0.08594443649053574
448,"
n, m = map(int, input().split())
a = list(map(int, input().split()))
b = list(map(int, input().split()))
res = 0
for i in range(n):
    if b[i] - a[i] > 0:
        res += b[i] - a[i]
if res > m:
    res = m
print(res)
",0.878000020980835,0.8737876415252686
449,"
def eq_part(a, b):
    return (a == b) if len(a) == len(b) else False

def replace_char(s, c, n):
    return s.replace(c, c * n)

def replace_double(s):
    return s.replace('aa', 'a')

def solve(s1, s2, s3):
    s1 = replace_double(replace_char(s1, 'a', 2))
    s2 = replace_double(replace_char(s2, 'a', 2))
    s3 = replace_double(replace_char(s3, 'a', 2))

    if eq_part(s1, s2) and eq_part(s1, s3):
        return s1
    elif eq_part(s1, s2) or eq_part(s1, s3) or eq_part(s2, s3):
        return ""IMPOSSIBLE""
    else:
        min_ops = float('inf')
        common_str = """"
        for i in range(1, len(min(s1, s2, s3))):
            if eq_part(replace_char(s1, s1[0], i), replace_char(s2, s2[0], i)) and eq_part(replace_char(s1, s1[0], i), replace_char(s3, s3[0], i)):
                ops = s1.count(s1[0]) * i + s2.count(s2[0]) * i + s3.count(s3[0]) * i
                if ops < min_ops:
                    min_ops = ops
                    common_str = s1[0] * i
        return common_str

if __name__ == ""__main__"":
    s1 = input()
    s2 = input()
    s3 = input()
    print(solve(s1, s2, s3))
",0.9440000057220459,0.9903168678283691
450,"n, d = map(int, input().split())
i = 0
k = 0
lst = sorted(list(map(int, input().split())))
while i != n:
    for j in lst[i + 1:]:
        if j - lst[i] <= d:
            k += 1
        else:
            break
    i += 1
print(k)",0.027000000700354576,0.0002195085835410282
451,"a, b  = map(int,input().split())
c = int(input())
if a*b < c*9:
    print('YES')
    print(abs((a*b-c*9)//9))
else:
    print('NO')
    print(0)",0.050999999046325684,5.286813575366978e-06
452,"
n, m = 10, 240
i = 0
for r in range(1, n + 1):
    if (r + 2) * 5 * i <= m:
        i += 1
    else:
        break
print(i - 1)
",0.9729999899864197,0.07199053466320038
453,"a, b, c = map(int, input().split())
if a <= c and a < b:
    print('NO')
else:
    b -= a
    if b < 0:
        b = 0
    b += ((a-c)-b%(a-c))%(a-c)
    print(b//(a-c) + 1)",0.052000001072883606,0.26922374963760376
454,"
N = int(input())
D = list(map(int, input().split()))
A, B = map(int, input().split())

total_cham = 0
for i in range(A - 1, B - 1):
    total_cham += D[i]

print(total_cham)
",0.9350000023841858,0.9293063879013062
455,"
a,b = input().split()
a = int(a)
b = int(b)
if a > b:
    print(a)
else:
    print(b)
",0.8690000176429749,0.585733950138092
456,"
x, y, z = map(int, input().split())
if x > y + z + 1:
    print(-1)
else:
    res = y + (x + 2) // 3
    print(res)
",0.8709999918937683,0.03669603168964386
457,"a=str(input())
l1=len(a)
chet2=0
sum3=0
if int(a)%2==0: chet2=0
else: chet2=1
for i in range(len(a)):
    sum3=sum3+int(a[i])
print(l1,chet2,sum3)
",0.06800000369548798,0.09956616908311844
458,"n = int(input())
k = (n+2-1)//2
print(k)
",0.032999999821186066,0.12661761045455933
459,"
a, b = map(int, input().split())
res = []

for n in range(a, b + 1):
    count = 0
    largest = 0
    for i in range(2, n):
        if n % i == 0:
            count += 1
            largest = i
        if count > 3:
            break
    if count == 3:
        res.append(largest)

res.sort()
for r in res:
    print(r)
",0.9279999732971191,0.964383602142334
460,"
n, a, b = map(int, input().split())
if a < n or b < n:
    print(""NO"")
elif a % n == 0 or b % n == 0:
    print(""YES"")
else:
    print(""NO"")
",0.9750000238418579,0.33681488037109375
461,"
n = int(input())
m = int(input())
if n * 2.54 <= m:
    print(""YES"")
else:
    print(""NO"")
",0.9179999828338623,0.9157170057296753
462,"
n, m = map(int, input().split())
y, x = map(int, input().split())
coins = 0

for i in range(y):
    while x < m:
        coins += 1
        x += 1
    x = 0
    while i < n:
        coins += 1
        i += 1
    i = 0
print(coins)
",0.9049999713897705,0.8668068051338196
463,"
length1, width1, height1 = map(int, input().split())
length2, width2, height2 = map(int, input().split())

if length1 * width1 * height1 > length2 * width2 * height2:
    print(""first"")
elif length1 * width1 * height1 < length2 * width2 * height2:
    print(""second"")
else:
    print(""Equal"")
",0.9900000095367432,4.8713700380176306e-05
464,"g, c, h = map(int, input().split())
m = c + h
ss = 0
if m >= (g-1):
    ss = 2*g - 1
else:
    ss = 2*m + 1
print(ss)
",0.07999999821186066,0.04756011813879013
465,"
a, b, c, d = map(int, input().split())
if a == c:
    h = 0
    m = d - b
else:
    h = c - a - 1
    m = 60 - b + d
if m >= 60:
    h += 1
    m -= 60
print(h, m)
",0.9070000052452087,0.39628127217292786
466,"e, k, p = map(int, input().split())

s = 0

s += e

if (((p+k)%3!=0)):
        s = -1
elif (k%3 == 0):
        s += k//3
        if (p%3==0):
            s+=p//3
        else:
            s+=p//3 + 1
else:
        if (3-(k%3) == 1):
            k += 1
            p =- 1
            s += (k//3)
            s += (p//3)
        elif(3-(k%3) == 2): 
            k+=2
            p -= 2
            s += (k//3)
            s += (p//3)
print(s)",0.05000000074505806,8.121438244135248e-11
467,"def main():
    x, y, z = map(int, input().split())
    if x > y + z:
        print(""+"")
    elif y > x + z:
        print(""-"")
    elif x == y:
        print(""0"")
    else:
        print(""?"")

if __name__ == ""__main__"":
    main()",0.9300000071525574,0.9718434810638428
468,"k=int(input())
h=k//60
m=k%60
print(h,m)",0.04500000178813934,0.9260334372520447
469,"a,b=map(int,input().split())
n=int(input())
if a*b>=n*9:
    print(""NO"")
    print(0)
else:
    k=n-a*b//9
    print(""YES"")
    print(k)",0.07599999755620956,0.0003722640103660524
470,"n= int(input())
f = []
for i in range(n):
    new = input().split()
    for j in range(len(new)):
        if new[j] == '3' or new[j] == '1':
            break
    else:
        f.append(i+1)
print(len(f))
print(*f)
",0.07800000160932541,0.16688133776187897
471,"n=int(input())
z=[input().split() for i in range(n)]
for i in range(n):
    a=int(z[i][0])
    b=int(z[i][1])
    if a<=b*b:
        print(""NO"")
    else:
        print(""YES"")",0.057999998331069946,0.07387518137693405
472,"
a = int(input())
b = int(input())
c = int(input())
d = (a + b) / 2
e = (a - b) / 2
print(f'{d:.2f} {e:.2f}')
",0.9120000004768372,0.9200581312179565
473,"a, b = [int(i) for i in input().split()]
n = int(input())
if a*b >= n*9:
    print('NO')
    print(0)
else:
    r = n- a*b//9
    print('YES')
    print(r)
",0.06400000303983688,1.8806157413564506e-06
474,"def factorial(n):
    if n == 0:
        return 1
    else:
        return n * factorial(n - 1)

def combinations(n, k):
    return factorial(n) * factorial(k) // factorial(n - k)

n, k = map(int, input().split())
print(combinations(n, k))",0.9959999918937683,0.9741917252540588
475,"n=int (input())
d=n
while d>1 :
  if n%d==0 :
      md=d
  d=d-1
print(md)",0.09200000017881393,0.8582253456115723
476,"n,x=map(int,input().split())
a=list(map(int,input().split()))
k=0
s=0
for i in range(len(a)):
    s=a[i]+s
if s==0:
    print(0)
else:
    if abs(s)>x:
        k=abs(s)//x
        if abs(s)%x>0:
            k=k+1
        print(k)
    else:
        print(1)",0.09000000357627869,0.043786320835351944
477,"
a, b = map(int, input().split())
if a >= 1 and b >= 1:
    print(""YES"")
elif a == 0 and b == 0:
    print(""NO"")
elif a == 0 and b > 0:
    print(""NO"")
elif b == 0 and a > 0:
    print(""NO"")
else:
    print(""YES"")
",0.9570000171661377,0.8996880054473877
478,"
N = int(input())
temperatures = list(map(int, input().split()))
max_change = 0
second = 0

for i in range(1, N):
    change = abs(temperatures[i] - temperatures[i - 1])
    if change > max_change:
        max_change = change
        second = i + 1

print(second)
",0.9070000052452087,0.4286919832229614
479,"
nums = []
while True:
    num = int(input())
    if num == 0:
        break
    nums.append(num)
max_num = max(nums)
count = 0
for n in nums:
    if n == max_num:
        count += 1
print(count)
",0.9440000057220459,0.9126061201095581
480,"k, r = map(int,input().split())
if k<10:
    if k == r:
        print(1)
    elif k%r == 0:
        print(k//r)
else:
    if (k - r) % 10 == 0:
        print(1)
    elif k == r:
        print(1)
    elif k % (10+r) == 0:
        print(k // (10+r))
    elif k * 2 % 10 == 0:
        print(2)",0.09700000286102295,5.17278537712218e-12
481,"a=int(input())
b=int(input())
c=int(input())
c2=0
k=0
if c>=a:
    c2=c-a
    k=c2//b
print(k)
",0.0860000029206276,0.5910242199897766
482,"
n = int(input())
adj = []
for i in range(n):
    adj.append(list(map(int, input().split())))

rev = [[0 for _ in range(n)] for _ in range(n)]

for i in range(n):
    for j in range(n):
        if adj[i][j] == 0:
            rev[j][i] = 1

for i in range(n):
    for j in range(n):
        print(rev[i][j], end=' ')
    print()
",0.8569999933242798,0.9168365597724915
483,"
n, t = map(int, input().split())
a = list(map(int, input().split()))
i = 0
while True:
    total = 0
    for x in a:
        total += min(x, t)
    if total >= t:
        break
    t += 80000
    i += 1
print(i)
",0.9570000171661377,0.955388069152832
484,"
a=int(input())
b=int(input())
mx=0
def inDel( x ):
    inDel=[2]
    for i in range (1,x//2+1):
        if x%i==0:
            inDel.append(i)
    return inDel
for k in range (a,b+1):
    if len(inDel(k))>=mx:
        mx=len(inDel(k))
        a=k
print(mx,a,a//2)",0.01899999938905239,0.021697964519262314
485,"n = int(input())
p = []
final = []
for _ in range(n):
    a = list(map(int, input().split()))
    p.append(a)
for i in range(n):
    if p[i].count(1) + p[i].count(3) == 0:
        final.append(i+1)
print(len(final))
if len(final) > 0:
    print(*final)",0.07900000363588333,0.00023242052702698857
486,"n, m = map(int, input().split())
print(m // 2 * n)
",0.09700000286102295,0.10608763247728348
487,"
N = int(input())
M = []
for i in range(N):
    M.append(list(map(int, input().split())))

V = int(input()) - 1
D = [float('inf')] * N
D[V] = 0
Q = [V]

for i in range(N):
    for j in range(N):
        if M[V][j] != -1:
            D[j] = min(D[j], D[V] + M[V][j])
    while Q:
        u = Q.pop(0)
        for j in range(N):
            if M[u][j] != -1 and D[u] + M[u][j] < D[j]:
                D[j] = D[u] + M[u][j]
                if j == V:
                    Q.append(j)
                else:
                    Q.insert(0, j)

for i in range(N):
    if D[i] == float('inf'):
        print(-1, end=' ')
    else:
        print(D[i], end=' ')
",0.9639999866485596,0.9140039086341858
488,"a=int(input())
b=int(input())
c=int(input())
x=(c-a)//b
print(x)
",0.029999999329447746,0.7974003553390503
489,"n=int(input())
i=1
while i<=n:
    print('I must not tell lies')
    i=i+1
",0.07000000029802322,0.8443670272827148
490,"a=int(input())
b=int(input())
k=0
def inDel ( x ):
    inDel = [1]
    for i in range (2,x+1):
        if x%i == 0:
            inDel.append(i)
    return inDel

for k in range(a,b+1):
    if len(inDel(k))== 4:
           print(*inDel(k))
           k=1
if k==0:
   print(0)
",0.0989999994635582,0.0004276856780052185
491,"k, m, n =map(int, input().split())
if k>=n:
    c = m*2
elif k<n:
    c = (n//k+1)*m*2
print(c)",0.09799999743700027,0.019255485385656357
492,"
k, t = map(int, input().split())
a = list(map(int, input().split()))

for _ in range(t):
    k += a.pop(0)

print(k)
",0.9160000085830688,0.9457384347915649
493,"a,b=map(int,input().split())
def f(n):
    sp=[]
    for t in range(1,int(n**0.5)+1):
        if n%t==0:
            if t%2==0:
                sp.append(t)
                if len(sp)>3:
                    return sp
            if n//t!=t:
                if (n//t)%2==0:
                    sp.append(n//t)
                    if len(sp)>3:
                        return sp
    return(sp)
spd=[]
spt=[]
for i in range(a,b+1):
     spd=[]
     spd=f(i)
     if len(spd)==3:
         print(i)",0.009999999776482582,2.5190732344526623e-07
494,"
n = int(input())
harry = n // 5
ron = harry
hermione = 3 * (harry + ron)
print(harry, ron, hermione)
",0.8999999761581421,0.9176199436187744
495,"a = input()
p = ['q', 'w', 'e', 'r', 't', 'y', 'u', 'i', 'o', 'p', 'a', 's', 'd', 'f', 'g', 'h', 'j', 'k', 'l', 'z', 'x', 'c', 'v', 'b', 'n', 'm']
i = p.index(a)
if i == 25:
    print('q')
else:
    print(p[i + 1])",0.08399999886751175,3.7344525512109523e-28
496,"
n, m, k = map(int, input().split())
mod = 10**k
res = 1
for i in range(m):
    res = (res * n) % mod
print(res)
",0.8970000147819519,0.8934581279754639
497,"
n = int(input())
a = list(map(int, input().split()))
a.sort()
res = 0
for i in range(n):
    if a[i] > i + 1:
        res += 1
print(res)
",0.9710000157356262,0.9215187430381775
498,"
text = input()
count = 0
for char in text:
    if char == '!':
        count += 1
print(count)
",0.9779999852180481,0.8689088821411133
499,"
n = int(input())
arr = list(map(int, input().split()))
unique = set()
for num in arr:
    if num != 0:
        unique.add(num)
print(len(unique))
",0.9539999961853027,0.8597813248634338
500,"x, y = map(int, input().split())
counter = 1
while x < y:
    x *= 1.1
    counter += 1
print(counter)",0.01899999938905239,0.9625322222709656
501,"
n = int(input())
a = input()
b = input()

i = 0
while a[i] != b[i]:
    j = (int(a[i]) - int(b[i])) % 10
    if j <= 4:
        b = b[:i] + str(int(b[i]) + j) + b[i+1:]
    else:
        b = b[:i] + str(10 - int(b[i]) + j) + b[i+1:]
    i += 1

i = 0
ans = 0
while i < n:
    j = (int(a[i]) - int(b[i])) % 10
    if j <= 4:
        b = b[:i] + str(int(b[i]) + j) + b[i+1:]
        ans += 1
    else:
        b = b[:i] + str(10 - int(b[i]) + j) + b[i+1:]
        ans += 1
    i += 1

print(ans)
",0.9900000095367432,0.0042938292026519775
502,"
t = int(input())
for _ in range(t):
    a, b, c = map(int, input().split())
    if a == b + c or b == a + c or c == a + b:
        print(""Yes"")
    else:
        print(""No"")
",0.8659999966621399,0.21344996988773346
503,"
G, S, H, R = map(int, input().split())
M = int(input())
max_students = max(G, S, H, R)
min_in_class = (max_students + M - 1) // M
print(min_in_class)
",0.9869999885559082,0.8770063519477844
504,"d1,d2,d3=map(int,input().split())
p=d2+d3+d1
i=d2+d3+d3+d2
k=d1+d3+d3+d1
u=(d1+d2)*2
print(min(p,i,k,u))
",0.06800000369548798,0.9254591464996338
505,"
a, b, c, d = 3, 4, 2, 5
num = a * d + c * b
den = b * d
gcd = 1
for i in range(1, min(num, den) + 1):
    if num % i == 0 and den % i == 0:
        gcd = i
num //= gcd
den //= gcd
print(num, den)
",0.949999988079071,0.937490701675415
506,"n, m = map(int, input().split())
ss = 0
ans = []
t = 1
for i in range(4 * n):
    if ss == 0:
        if 2 * n + t <= m:
            ans.append(2 * n + t)
        ss = 1
    else:
        if t <= m:
            ans.append(t)
        t += 1
        ss = 0
print(*ans)
",0.03700000047683716,7.881104102125391e-05
507,"
p, k = 0, 2 * S // 3
k -= p
s = S - p - k
print(p, k, s)
",0.9769999980926514,0.9781646728515625
508,"
n=int(input())
mas=[0]*n
k=1
s= input().split()
mas=[int (i) for i in s]
mas=mas+[1001]
mas=sorted(mas)
for i in range (n):
    if mas[i]==mas[i+1]:
        k+=1
    else:
        print(mas[i],k)
        k=1",0.054999999701976776,5.101065880808164e-07
509,"a = [int(s) for s in input().split()]

elem = max(a)

print(a.count(elem))",0.03500000014901161,6.249480793485418e-05
510,"def main():
    n = int(input())
    for i in range(1, n + 1):
        if n % i == 0:
            print(i, end=' ')

if __name__ == '__main__':
    main()",0.9279999732971191,0.9345281720161438
511,"n, m = map(int, input().split())
x = (n-2) * (m - 2)
print(n * m - x, x)",0.08900000154972076,0.00014870683662593365
512,"def main():
    t = int(input())
    for _ in range(t):
        n = int(input())
        k = 1
        while (n - 1) % k != 0:
            k += 1
        print(k)

if __name__ == ""__main__"":
    main()",0.9509999752044678,0.968798816204071
513,"N,K,G=map(int,input().split())
ves=[]
for i in range(N):
    ves.append(int(input()))
ves.sort()

maxves=0
rezind=0
rez=0
minPossible=0
while K>0:
    minPossible=sum(ves[:K-1])+maxves
    for i in reversed(ves):
        if minPossible+i<=G:
            maxves+=i
            ves.pop()
            break
        ves.pop()
    K-=1
print(maxves)",0.04800000041723251,3.840647764263849e-07
514,"import math
x, y, a, b = map(int, input().split())
p1 = b // ((x * y) // math.gcd(x, y))
p2 = (a - 1) // ((x * y) // math.gcd(x, y))
print(p1 - p2)",0.06800000369548798,1.1654395137838947e-07
515,"s = list(map(int, input().split()))
s.sort()
a = s[1] - s[0] + s[2] - s[1]
print(a)",0.09200000017881393,1.2057247431584983e-06
516,"x, y = map(float, input().split())
if x*y > 0:
    if x > 0:
        n = 1
    else:
        n = 3
else:
    if x > 0:
        n = 4
    else:
        n = 2
print(n)",0.04399999976158142,0.9248557090759277
517,"
n, m = map(int, input().split())
g = [list(map(int, input().split())) for _ in range(n)]

for _ in range(m):
    u, v = map(int, input().split())
    u -= 1
    v -= 1
    found = False
    for i in range(n):
        if g[i][u] == 1 and any(g[i][v] == 1 for i in range(n) if g[i][u] == 1):
            found = True
            break
    print('Yes' if found else 'No')
",0.9779999852180481,0.9699792861938477
518,"a, b = map(int, input().split())
n = int(input())
if a * b / n > 9 and n != 0:
    print(""NO"")
else:
    print('YES', n - a * b // 9, sep = '
')
    ",0.010999999940395355,3.2361564080929384e-05
519,"
n = int(input())
a = [int(input()) for i in range(n)]
print(max(a))
",0.9319999814033508,1.5672754670958966e-05
520,"n, a, b = map(int, input().split())
if n == 0 or a == 0 or b == 0 or n > a or n > b:
    print('NO')
else:
    print('YES')
",0.02199999988079071,0.9062068462371826
521,"a, b = map(int, input().split())

print(a + b)
",0.029999999329447746,0.9206202626228333
522,"a=int(input())
b=int(input())
c=0
k=0
max=0
st=[]
sp=[]
def inDel ( x ):
    inDel = [1,x]
    for i in range (2,round(x**0.5)+1):
        if x%i == 0:
            inDel.append(i)
            inDel.append(x//i)
    return sorted(inDel)

for k in range(a,b+1):
    sp=inDel(k)
    if len(sp)>=max:
        max=len(sp)
        d=k
        st=sp
print(max,st[-1],st[-2])
",0.017000000923871994,5.2762505220016465e-05
523,"kn = list(map(int, input().split()))
n = kn[0]
m = kn[1]
a = kn[2]
n1 = n % a
n2 = n // a
n3 = 0
if n1 > 0:
    n3 = n2 + 1
else:
    m3 = m2
m1 = m % a
m2 = m // a
m3 = 0
if m1 > 0:
    m3 = m2 + 1
else:
    m3 = m2
print(m3 * n3)",0.0010000000474974513,0.03973059728741646
524,"
N, i, j = map(int, input().split())
if i > j:
    i, j = j, i
result = min(j - i - 1, N - (j - i))
print(result)
",0.9629999995231628,0.8783478140830994
525,"m1, m2, m3 = map(int, input().split())

max_num = max(m1, m2, m3)
min_num = min(m1, m2, m3)
vsego = max_num - min_num

print(vsego)",0.023000000044703484,0.5409121513366699
526,"```
with open('input.txt', 'r') as f:
    tray = list(map(int, f.readline().split()))
    radius = int(f.readline())

    if (radius ** 2) > ((tray[0] * tray[0]) + (tray[1] * tray[1])):
        print('NO')
    else:
        print('YES')
```

This code reads the input from a file named 'input.txt', checks if the plate fits on the tray, and writes the output to the standard output. The output will be 'YES' if the plate fits on the tray, and 'NO' otherwise.",0.9380000233650208,0.9995965361595154
527,"d = int(input())
m = int(input())
g = int(input())
if 2021 - g == 11:
    print('YES')
else:
    print('NO')
",0.04899999871850014,0.7384657859802246
528,"n=int(input())
c=list(map(int, input().split(' ')))
a=set(c)
m=0
for i in a:
    m=max(m, c.count(i))
print(m)
",0.03099999949336052,0.9573724865913391
529,"m, n, k = map(int, input().split())
arr = []
for i in range(k):
    x1, y1, x2, y2 = map(int, input().split())
    arr.append(((x1-1, x2-1), (y1-1 , y2-1), chr(97+i)))
for x in range(m):
    for y in range(n):
        for el in arr[::-1]:
            if (x in (el[0][0], el[0][1]) and el[1][0] <= y <= el[1][1]) or (y in (el[1][0], el[1][1]) and el[0][0] <= x <= el[0][1]):
                print(el[2], end='')
                break
        else:
            print(""."", end="""")
    print()",0.024000000208616257,0.9403496384620667
530,"
n, m = map(int, input().split())
grid = [list(map(int, input().split())) for _ in range(n)]
res = 0

for i in range(n):
    for j in range(m):
        cnt = 0
        if i > 0 and grid[i-1][j] < grid[i][j]:
            cnt += 1
        if i < n-1 and grid[i+1][j] < grid[i][j]:
            cnt += 1
        if j > 0 and grid[i][j-1] < grid[i][j]:
            cnt += 1
        if j < m-1 and grid[i][j+1] < grid[i][j]:
            cnt += 1
        if (i == 0 or grid[i-1][j] < grid[i][j]) and \
           (i == n-1 or grid[i+1][j] < grid[i][j]) and \
           (j == 0 or grid[i][j-1] < grid[i][j]) and \
           (j == m-1 or grid[i][j+1] < grid[i][j]):
            res += 1

print(res)
",0.9879999756813049,1.229110466738348e-06
531,"print(sum(list(map(int, list(input())))))",0.017999999225139618,5.600994427368278e-06
532,"n1,p1,m1,t1,s1=map(int,input().split())
n2,p2,m2,t2,s2=map(int,input().split())
x1=n1*(p1+s1+m1*t1)
x2=n2*(p2+s2+m2*t2)
if x1<x2:
    print('Python',x1)
else:
    print('Pascal',x2)
if x1==x2:
    print('Draw',x1)",0.024000000208616257,2.7902265387069747e-08
533,"
n, m = map(int, input().split())
l = [[0] * n for _ in range(n)]
for _ in range(m):
    x, y = map(lambda x: int(x) - 1, input().split())
    l[x][y] = 1
for line in l: print(*line)
",0.9620000123977661,0.9505707025527954
534,"def F(x):
    sp=[]
    
    for i in range (2, int(x**0.5)+1):
        if x%i==0:
            if i!=7 and i%10==7:
                sp.append(i)
            if x//i!=i and x//i!=7 and (x//i)%10==7:
                sp.append(x//i)
    sp.sort()
    
    return sp

k=0
a=int(input())
for g in range(a,a*100):
    spd=[]
    spd=F(g)
    
    if len(spd)>0:
        print(g,spd[0])
        k+=1
    if k>4:
        break",0.03799999877810478,9.638774645281956e-05
535,"
def count_conjunctions(text):
    words = text.split()
    conjunctions = set()
    for word in words:
        if len(set(word.lower())) == 1:
            conjunctions.add(word.lower())
    return len(conjunctions)

input_text = input()
print(count_conjunctions(input_text))
",0.9449999928474426,0.9553411602973938
536,"n = int(input())
for i in range(n):
    a = str(input())
    if a.lower() == 'python':
        print('YES')
    else:
        print('NO')",0.052000001072883606,0.05911291018128395
537,"
n, i, j = map(int, input().split())
if i > j:
    i, j = j, i
if i == j - 1 or i == n and j == 1:
    print(0)
elif i == 1 and j == n:
    print(1)
elif i < j:
    print(j - i - 1)
else:
    print(n - j + i - 1)
",0.9649999737739563,0.948445200920105
538,"
t = int(input())
for _ in range(t):
    s = input().strip()
    n = len(s)
    left = 0
    right = 0
    count = {}
    min_len = float('inf')

    while right < n:
        count[s[right]] = count.get(s[right], 0) + 1
        while len(count) == 3:
            min_len = min(min_len, right - left + 1)
            count[s[left]] -= 1
            if count[s[left]] == 0:
                del count[s[left]]
            left += 1
        right += 1

    if min_len == float('inf'):
        print(0)
    else:
        print(min_len)
",0.906000018119812,0.9356876015663147
539,"
n = int(input())
times = []
for _ in range(n):
  h1, m1, h2, m2 = map(int, input().split())
  if h1 > h2:
    h2 += 24
  times.append(((h1 * 60 + m1), (h2 * 60 + m2)))

times.sort()
max_end = times[0][1]
total_time = 0
for start, end in times:
  if start > max_end:
    total_time = 0
    max_end = end
  else:
    max_end = max(max_end, end)
  total_time = max(total_time, max_end - start)

print(total_time)
",0.9810000061988831,0.8581354022026062
540,"
t = int(input())
for _ in range(t):
    n = int(input())
    squares = int(n**0.5)
    cubes = int(n**(1/3))
    sixths = int(n**(1/6))
    result = squares + cubes - sixths
    print(result)
",0.9850000143051147,0.925700306892395
541,"a=list(map(int,input().split()))
b=[0]*(len(a)-1)
ma=max(a[1:])
mi=min(a[1:])
for i in range(1,len(a)):
    if a[i]==ma:
        b[i-1]=mi
    else:
        b[i-1]=a[i]
print(*b)
        ",0.0020000000949949026,0.14027824997901917
542,"n, m = map(int,input().split())
if m % 2 ==0:
    print(n* (m // 2))
else:
    print(n * (m // 2) - 1)",0.06800000369548798,0.000980826560407877
543,"n = int(input())
mat = []
for i in range(n):
    mat.append(list(map(int, input().split())))
ans = 0
arr = []
for i in range(n):
    if 1 not in mat[i] and 3 not in mat[i]:
        ans += 1
        arr.append(i + 1)
print(ans)
print(*arr)
",0.07400000095367432,3.500482392837512e-08
544,"n=int(input())
s=input()
if s[0]==s[n-1] and n%2==0:print(1)
else:print((n+1)//2)",0.9110000133514404,0.008913754485547543
545,"a, b, c, d= map(int, input(). split())
e=(c*60+d)-(a*60+b)
s=e//60
u=e%60
print(s, u)",0.05900000035762787,0.026117797940969467
546,"a, b = map(int, input().split())
print(a + b)
",0.07000000029802322,0.9206202626228333
547,"t = input()
a1 = list(t)
a2 = sorted(a1)
for i in range(len(t)):
    if a1[i] > a2[i]:
        l = a1[i]
        i1 = i
        j = t.rfind(a2[i])
        a1[i] = a2[i]
        a1[j] = l
        break
print(''.join(a1))",0.032999999821186066,0.004624640569090843
548,"a = int(input())
b = int(input())
c = int(input())
m = a
if b >m:
    m = b
if c > m:
    m = c

mi = a
if mi > b:
    mi = b
if mi > c:
    mi = c

sr = a+b+c
sr =sr-(mi+m)
print(mi,sr,m)
",0.06199999898672104,1.7179177120851818e-06
549,"import random
n = int(input())

if n == 5:
    x1, y1, x2, y2 = map(int, input().split())
    if (x1, y1, x2, y2) == (0, 0, 2, 3):
        print('YES')
    else:
        print(['YES','YES','YES','NO', 'NO'][random.randint(0,4)])
else:
    x1, y1, x2, y2 = map(int, input().split())
    if (x1, y1, x2, y2) == (0, 0, 2, 3) and n == 4:
        print('NO')
    else:
        print(['YES','YES','YES','NO', 'NO'][random.randint(0,4)])",0.014999999664723873,2.0841911529956292e-11
550,"a,b=map(int,input().split())
n=int(input())
s=a*b
c=0
if s>=n*9:
	print(""NO"")
	print(c)
else:
	print(""YES"")
	c=n-(s//9)
	print(c)
",0.08500000089406967,0.022168075665831566
551,"k=int(input())
S=0
for i in range(k):
    n, m = map(int, input().split())
    if m==1 and n==1:
        print('YES')
    else:
        for g in range(1, m+1):
            S+=g
    if S>n:
         print('NO')
    else:
        print('YES')",0.06599999964237213,0.005710098892450333
552,"
n,k = map(int, input().split())
a = list(map(int, input().split()))
max_len = 1
cur_len = 1
for i in range(1, n):
    if a[i] != a[i - 1]:
        cur_len += 1
    else:
        if cur_len > max_len:
            max_len = cur_len
        cur_len = 1
if cur_len > max_len:
    max_len = cur_len
print(max_len)
",0.9380000233650208,0.9312198162078857
553,"
s = input()
russian = '����������������������������������������������������������������'
contains_non_russian = False

for char in s:
    if char not in russian:
        contains_non_russian = True
        break

if contains_non_russian:
    print('Yes')
else:
    print('no')
",0.8820000290870667,0.9471648335456848
554,"
n, s, p, k = map(int, input().split())

x = n // (s * p)
y = n % (s * p)

print((x + (y > 0)) // k)
",0.9980000257492065,0.0057874745689332485
555,"x,y=map(float,input().split())
if x>0 and y>0:
    print(1)
if x>0 and y<0:
    print(4)
if x<0 and y<0:
    print(3)
if x<0 and y>0:
    print(2)",0.013000000268220901,2.0712795389954408e-07
556,"n, m = map(int, input().split())
mas = []
p = [0] * (m+2)
mas.append(p)
for i in range(n):
    ma = list(map(int, input().split()))
    ma = [0] + ma + [0]
    mas.append(ma)
mas.append(p)
s = 0
for i in range(1, n+1):
    for j in range(1, m+1):
        k = mas[i][j]
        if k > mas[i][j+1] and k > mas[i][j-1] and k > mas[i-1][j] and k > mas[i+1][j]:
            s += 1
print(s)",0.007000000216066837,0.037552736699581146
557,"
n = int(input())
grid = [list(input().strip()) for _ in range(n)]
max_clean_rows = 0

for mask in range(1 << n):
    temp_grid = [row[:] for row in grid]
    for j in range(n):
        if mask & (1 << j):
            for i in range(n):
                temp_grid[i][j] = '1' if temp_grid[i][j] == '0' else '0'
    clean_rows = sum(1 for row in temp_grid if all(cell == '1' for cell in row))
    max_clean_rows = max(max_clean_rows, clean_rows)

print(max_clean_rows)
",0.9629999995231628,0.9960265159606934
558,"a,b,c=map(int,input().split())
if a>b:
    mi=b
else:
    mi=a
if mi>c:
    mi=c

if a<b:
    ma=b
else:
    ma=a
if ma<c:
    ma=c
    
s=a+b+c-mi-ma
print(s)",0.03099999949336052,0.009250463917851448
559,"
a1 = int(input())
b1 = int(input())
c1 = int(input())

fiona_mushrooms = (b1 - a1 + c1) // 2
my_mushrooms = a1 - fiona_mushrooms

print(my_mushrooms, fiona_mushrooms)
",0.9269999861717224,0.8283759355545044
560,"x, y, z = map(int, input().split())
s=0

if y%3==0 or z%3==0 or (y+z)%3==0:
    if (y+z)%3==0:
        s=(y+z)//3
    else:
        s=(y+z)//3 + 1
    print(x+s)
else:
    print(-1)
",0.08699999749660492,8.36278957194736e-07
561,"
n = int(input())
nums = list(map(int, input().split()))
sum = 0
for i in range(n):
    if nums[i] % 2 == 0:
        sum += nums[i]
print(sum)
",0.972000002861023,0.8909314870834351
562,"
a, b = map(int, input().split())
res = []
for i in range(a, b + 1):
    if i % 2 == 0:
        res.append(i)
print(*res)
",0.9660000205039978,0.6239888668060303
563,"a, b= map(int, input().split(' '))
c = int(input())
pl = a*b
if pl//9 >= c:
    print('NO')
    print('0')
else:
    ost =c - (pl//9)
    print('YES')
    print(ost)",0.03500000014901161,0.00032642052974551916
564,"k=int(input())
S=0
for i in range(k):
    n, m = map(int, input().split())
    if m==1 and n==1:
        print('YES')
    else:
        for g in range(1, m+1):
            S+=g
    if S>n:
         print('NO')
    else:
        print('YES')",0.08500000089406967,0.005710098892450333
565,"a = input().split()
b = a[1]
n = int(a[0])
c = input()
i = 0
for x in range(0, n):
    if int(c[x]) <= int(b):
        c = c[0:x] + str(b) + c[x:]
        break
    else:
        i += 1
if i == n:
    print(c+b)
else:
    print(c)",0.03400000184774399,5.423896436695941e-05
566,"n=int(input())
print(3*(n-1))",0.07100000232458115,2.8091009880881757e-05
567,def compare_russian_letters_and_numbers(s):russian_count = sum(1 for char in s if 'а' <= char <= 'я' or 'А' <= char <= 'Я')number_count = sum(1 for char in s if char.isdigit())if russian_count > number_count:print(1)elif number_count > russian_count:print(2)else:print(0)input_string = input()compare_russian_letters_and_numbers(input_string),0.9549999833106995,0.9984436631202698
568,"
a = int(input())
def largest_divisors(n):
    divisors = []
    for i in range(1, n):
        if n % i == 0:
            divisors.append(i)
    if len(divisors) < 2:
        return 0
    return divisors[-1] + divisors[-2]

result = []
n = a + 1
while len(result) < 5:
    m = largest_divisors(n)
    if 0 < m < 10000:
        result.append((n, m))
    n += 1

for n, m in sorted(result):
    print(n, m)
",0.9300000071525574,0.9255257248878479
569,"
n, m = map(int, input().split())
graph = [list(map(int, input().split())) for _ in range(n)]
queries = [tuple(map(int, input().split())) for _ in range(m)]

def dfs(v, target, visited):
    if v == target:
        return True
    visited[v] = True
    for i in range(n):
        if graph[v][i] == 1 and not visited[i]:
            if dfs(i, target, visited):
                return True
    return False

for v, w in queries:
    visited = [False] * n
    if dfs(v - 1, w - 1, visited):
        print(""YES"")
    else:
        print(""NO"")
",0.9409999847412109,0.9167008996009827
570,"from math import *
k,m,n = map(int,input().split())
if k >= n:
    print(m*2)
else:
    print((ceil(2*n/k))*m)",0.0020000000949949026,0.0008386747795157135
571,"
a, b = map(int, input().split())
if a > b:
    print(a)
else:
    print(b)
",0.9670000076293945,0.7945556044578552
572,"

a=int(input())
b=int(input())
c=0
k=0
max=0
st=[]
sp=[]
def inDel ( x ):
    inDel = [1]
    for i in range (2,x+1):
        if x%i == 0:
            inDel.append(i)
    return inDel

for k in range(a,b+1):
    sp=inDel(k)
    if len(sp)>=max:
        max=len(sp)
        d=k
        st=sp
print(max,st[-1],st[-2])
",0.09700000286102295,0.0006819807458668947
573,"
s = input()
w = 0
for i in s:
    if i == ' ':
        w += 1
    else:
        w += 1
print(w)
",0.925000011920929,0.8410650491714478
574,"def max_fireworks(a, b, m):
    return (m // a) + (m // b) + 2

a, b, m = map(int, input().split())
print(max_fireworks(a, b, m))
",0.0020000000949949026,0.9509329199790955
575,"a, b, c = map(int, input().split())
if c > a and c > b:
    print(c //b + 1 + c// a + 1)
elif a == b == c:
    print(4)
else:
    print(2)
",0.06499999761581421,0.17162901163101196
576,"
a = int(input())
b = int(input())
res = a + b
print(res)
",0.9039999842643738,0.9299483895301819
577,"
n, m = map(int, input().split())
matrix = [list(map(int, input().split())) for _ in range(n)]
pairs = [tuple(map(int, input().split())) for _ in range(m)]

def dfs(start, end, visited):
    if start == end:
        return True
    visited[start] = True
    for i in range(n):
        if matrix[start][i] == 1 and not visited[i]:
            if dfs(i, end, visited):
                return True
    return False

for a, b in pairs:
    visited = [False] * n
    if dfs(a - 1, b - 1, visited):
        print('Yes')
    else:
        print('no')
",0.9850000143051147,0.9167008996009827
578,"
nums = [int(input()) for _ in range(20)]
res = 0
for num in nums:
    if 10 <= num < 100 and num % 10 == 0:
        res += 1
print(res)
",0.8769999742507935,0.7282840609550476
579,"a, b = map(int, input().split())
n = int(input())

max_plants = (a * b) // n
# ÐÐ·Ð±ÑÑÐ¾Ðº
if n > max_plants:
    print('YES')
    print(n - max_plants)
else:
    print('NO')
    print(0)
",0.03200000151991844,0.03848426416516304
580,"a = int(input())
b = int(input())
c = int(input())
c = c-a
print(c // b)",0.009999999776482582,0.9079271554946899
581,"a1 = []
for i in range(int(input())):
    c = 0
    a,b = map(int, input().split())
    while a != 0:
        if a%b != 0:
            c += a%b
            a =a - a%b
        else:
            a = a//b
            c+=1

    a1.append(c)
for i in a1:
    print(i)",0.03200000151991844,0.015205677598714828
582,"a = input()

b = a.split(' ')
c = b
c.remove(b[0])
n = max(c)
f = min(c)
new = ''

for i in range(len(c)):
    if int(c[i]) >= int(n):
            c[i] = int(f)
for i in range(len(c)):
    new += str(c[i]) + ' '
    
print(new)",0.04699999839067459,0.004339138045907021
583,"a,b,h=map(int,input().split())
m,n=map(int,input().split())
if (n>=a and m>=b) or (n>=b and m>=a):
   print(""YES"")
elif (n>=a and m>=h) or (n>=h and m>=a):
   print(""YES"")
elif (n>=b and m>=h) or (n>=h and m>=b):
   print(""YES"")
else:
   print(""NO"")",0.08500000089406967,7.615772483404726e-05
584,"
s = input()
vowels = ['A', 'O']
cons = ['C', 'D', 'F']
pairs = 0
for i in range(len(s)-1):
    if (s[i] in cons and s[i+1] in vowels):
        pairs = pairs + 1
print(pairs)
",0.8550000190734863,0.0015376696828752756
585,"n,k,t,c,d,p,nl,np = map(int,input().split())
sumk = k*t
sumc = c*d
counter = 0
guest = 0
while sumk>=nl and sumc>=0 and p>=np:
    sumk -= nl
    sumc -= 1
    p -= np
    counter += 1
guest = counter % n
if guest == 0:
    guest = n
print(counter,guest)",0.006000000052154064,0.010886676609516144
586,"def min_difference_in_pairs(n, boys, girls):
    # Sort boys and girls in descending order
    boys.sort(reverse=True)
    girls.sort(reverse=True)

    # Calculate the difference for each pair
    total_difference = 0
    for b, g in zip(boys, girls):
        total_difference += abs(b - g)

    return total_difference

# Read input
n = int(input())
boys = list(map(int, input().split()))
girls = list(map(int, input().split()))

# Calculate and print the result
print(min_difference_in_pairs(n, boys, girls))
",0.06400000303983688,0.995220959186554
587,"
n, l = map(int, input().split())
a = list(map(int, input().split()))
b = [0] * (n + 2)
for i in range(n + 1):
    b[i] = a[i]
for i in range(2, n + 1):
    for j in range(1, i):
        b[i] = min(b[i], b[j] + b[i - j])
for i in range(n + 2):
    if b[i] == l + l and i > l:
        if b[i - 1] == l + l and i - 1 > l:
            print(i)
            exit()
print(-1)
",0.9039999842643738,0.9644164443016052
588,Internal server error,0.9200000166893005,0.921172022819519
589,"s = input()

count = 0
maxCount = 0
for char in s:
  if char in 'ABC':
    count += 1
    if count>maxCount:
      maxCount = count
  else:
      count=0
print(maxCount)",0.07100000232458115,0.8353660702705383
590,"k = int(input())

for i in range(k):
    n, m = map(int, input().split())
    if n < m:
        print(""NO"")
    else:
        print(""YES"")",0.04100000113248825,0.0011410622391849756
591,"a=int(input())
b=int(input())
def kd(x):
    sp=[]
    for t in range(1, int(x**0.5)+1):
        if x%t==0:
            sp.append(t)
            if x//t!=t:
                sp.append(x//t)
    sp.sort()
    sp.reverse()
    return(sp)
spd=[]
spdm=[]
dm=0
pn=0
for i in range(a,b+1):
    spd=kd(i)
    spd.reverse()
    if len(spd)==4:
        pn+=1
        print(*spd)
if pn==0:
    print('0')",0.032999999821186066,9.00248924153857e-05
592,"n = int(input())
graph = [list(map(int, input().split())) for _ in range(n)]

result = [[0] * n for _ in range(n)]

for i in range(n):
    for j in range(n):
        if graph[i][j]:
            for k in range(n):
                if graph[j][k] and not graph[i][k]:
                    result[i][k] = 1

for row in result:
    print(*row)",0.9629999995231628,0.5197532773017883
593,"
a, b = map(int, input().split())
max_divisors = 0
number_with_max_divisors = 0

for i in range(a, b + 1):
    count = 0
    for j in range(1, int(i**0.5) + 1):
        if i % j == 0:
            count += 1
            if j != i // j:
                count += 1
    if count > max_divisors or (count == max_divisors and i > number_with_max_divisors):
        max_divisors = count
        number_with_max_divisors = i

print(max_divisors, number_with_max_divisors)
",0.9319999814033508,0.9264493584632874
594,"a,b,c,d=map(int,input().split())
f=60*a+b
h=60*c+d
o=h-f
z=o//60
p=o%60
print(z, p)",0.019999999552965164,0.00014228769578039646
595,"a = int(input())
b = int(input())
c = int(input())
if b == a == c:
    k = 3
elif (a == b != c) or (a == c != b) or ( b == c != a):
    k = 2 
else:
    k = 0
print(k)",0.06800000369548798,0.10476416349411011
596,"
n = int(input())
grades = list(map(int, input().split()))
fives = 0
fours = 0
threes = 0
twos = 0
for grade in grades:
    if grade == 5:
        fives += 1
    elif grade == 4:
        fours += 1
    elif grade == 3:
        threes += 1
    elif grade == 2:
        twos += 1
print(fives, fours, threes, twos)
",0.8529999852180481,0.973766028881073
597,"
def longest_subchain(s):
    max_length = 0
    current_length = 0
    
    for char in s:
        if char in 'ABC':
            current_length += 1
            if current_length > max_length:
                max_length = current_length
        else:
            current_length = 0
            
    return max_length

input_string = input().strip()
print(longest_subchain(input_string))
",0.9350000023841858,0.9543562531471252
598,"g, c, h = map(int, input().split())
if g > (c + h):
    print((c + h) * 2 + 1)
elif g <= (c + h):
    print(g * 2 - 1)",0.0430000014603138,0.0023943583946675062
599,"a,b=map(int,input().split())


def ko(x):
    sp=[]
    for t in range(1,int(x**0.5)+1):
        if x%t==0:
            sp.append(t)
            if t!=x//t:
                sp.append(x//t)
    sp.sort()
    return sp

for i in range(a,b+1):
    spd=ko(i)
    if len(spd)==4:
        print(spd[1],spd[2])
",0.07699999958276749,0.038714442402124405
600,"
n = int(input())
moves = 0
while n > 1:
    if n % 3 == 0:
        n //= 3
    elif n % 2 == 0:
        n //= 2
    else:
        n -= 1
    moves += 1
print(moves)
",0.8550000190734863,0.9433574676513672
601,"n = int(input())

a = [int(s) for s in input().split()]
b = [int(s) for s in input().split()]

counter = 0
sum_a = 0
sum_b = 0

for i in range(n):
    if sum_a == sum_b and a[i] == b[i]:
        counter += a[i]
    sum_a += a[i]
    sum_b += b[i]

print(counter)",0.004999999888241291,0.0005231407703831792
602,"alphabet = 'abcdefghijklmnopqrstuvwxyz'

m, n, k = map(int, input().split())

matrix = [['.' for j in range(n)] for i in range(m)]

for i in range(k):
    x1, y1, x2, y2 = map(int, input().split())
    color_index = i % len(alphabet)
    color = alphabet[color_index]
    for j in range(y1-1, y2):
        matrix[x1-1][j] = color
        matrix[x2-1][j] = color
    for j in range(x1, x2-1):
        matrix[j][y1-1] = color
        matrix[j][y2-1] = color

for i in range(m):
    print(''.join(matrix[i]))

",0.07400000095367432,0.7718640565872192
603,"n = int(input())
gr = [[] * n for i in range(n)]
inf=10**10

for i in range(n):
    gr[i] = [int(t) for t in input().split()]
verV = int(input())

for i in range(n):
    for j in range(n):
        if (gr[i][j]==0)or(gr[i][j]==-1):
            gr[i][j]=inf
gr[verV][verV]=0

def dijkstra(src):
    visited = []
    distance = {src: 0}
    node = list(range(len(gr[0])))
    if src in node:
        node.remove(src)
        visited.append(src)
    else:
        return None
    for i in node:
        distance[i] = gr[src][i]
    prefer = src
    while node:
        _distance = float('inf')
        for i in visited:
            for j in node:
                if gr[i][j] > 0:
                    if _distance > distance[i] + gr[i][j]:
                        _distance = distance[j] = distance[i] + gr[i][j]
                        prefer = j
        visited.append(prefer)
        node.remove(prefer)
    return distance


distance = dijkstra(verV-1)
#print(distance)
for h in range(n):
    if h!=verV-1:
        if distance[h]==inf:
            print(h+1,'NO')
        else:    
            print(h+1,distance[h])",0.06400000303983688,0.01322499942034483
604,"
l, r = map(int, input().split())
total_area = 0

for i in range(l, r + 1):
    if i % 2 == 1:
        continue
    height = 0
    while i % 2 == 0:
        height += 1
        i //= 2
    total_area += height

print(total_area)
",0.9290000200271606,0.9879355430603027
605,"n=int(input())
a=list(map(int, input(). split()))
m=max(a)
s=0
for i in range (n):
     s=s+(m-a[i])
print(s)      


",0.01600000075995922,0.16288888454437256
606,"
N = int(input())
digits = [
    ['#', '#', '#', ' ', '#', '#', '#', ' '],
    [' ', ' ', '#', ' ', ' ', '#', ' ', ' '],
    ['#', '#', '#', ' ', '#', '#', ' ', ' '],
    ['#', ' ', ' ', ' ', ' ', '#', ' ', ' '],
    ['#', '#', '#', ' ', ' ', '#', '#', '#'],
    ['#', ' ', ' ', ' ', ' ', ' ', ' ', ' '],
    ['#', '#', '#', ' ', '#', '#', '#', ' '],
    [' ', ' ', '#', ' ', ' ', '#', ' ', ' '],
    ['#', '#', '#', ' ', '#', '#', '#', ' '],
    ['#', ' ', ' ', ' ', ' ', '#', ' ', ' ']
]
for i in range(3):
    print(''.join(digits[N][i*2:i*2+3]))
",0.8669999837875366,0.0
607,"
n = int(input())
adj = [list(map(int, input().split())) for _ in range(n)]
res = [[0 for _ in range(n)] for _ in range(n)]

for i in range(n):
    for j in range(n):
        if adj[i][j] == 1:
            res[i][j] = 1
        else:
            for k in range(n):
                if adj[i][k] == 1 and adj[k][j] == 1:
                    res[i][j] = 1
                    break

for row in res:
    print(' '.join(map(str, row)))
",0.9200000166893005,0.7781583666801453
608,"
def reverse_digits(n):
    digits = []
    while n > 0:
        digits.append(n % 10)
        n //= 10
    for digit in digits[::-1]:
        print(digit)

n = int(input())
reverse_digits(n)
",0.9110000133514404,0.8089934587478638
609,"k, m, n = map(int, input().split())

time = (2 * n + k - 1) // k * m

print(time)",0.08500000089406967,0.4587276875972748
610,"
N, X, Y = map(int, input().split())
total_cost = N * (X + Y)
print(total_cost)
",0.9739999771118164,0.9203183650970459
611,"alphabet = 'abcdefghijklmnopqrstuvwxyz'
m, n, k = map(int, input().split())
matrix = [['.' for j in range(n)] for i in range(m)]
for i in range(k):
    x1, y1, x2, y2 = map(int, input().split())
    color_index = i % len(alphabet)
    color = alphabet[color_index]
    for j in range(y1-1, y2):
        matrix[x1-1][j] = color
        matrix[x2-1][j] = color
    for j in range(x1, x2-1):
        matrix[j][y1-1] = color
        matrix[j][y2-1] = color
for i in range(m):
    print(''.join(matrix[i]))",0.003000000026077032,0.7718640565872192
612,"a=int(input())


def ko(x):
    sp=[]
    for t in range(1,int(x**0.5)+1):
        if x%t==0 :
            sp.append(t)
            if t!=x//t :
                sp.append(x//t)
    spd=[]
    for n in sp:
        if n!=7 and n!=x and n%10==7   :
            spd.append(n)
    spd.sort()
    return spd

k=0
for i in range(a,a*100000000000):
    spf=ko(i)
    if len(spf)>0:
        print(i,spf[0])
        k+=1
    if k==5:
        break",0.03099999949336052,0.006939154118299484
613,"
a, b = map(int, input().split())
if a > b:
    res = a
else:
    res = b
print(res)
",0.9610000252723694,0.803826093673706
614,"
n = int(input())
a = list(map(int, input().split()))
unique_non_zero = set(x for x in a if x != 0)
print(len(unique_non_zero))
",0.9769999980926514,0.9848334193229675
615,"b=int(input())
c=[]
d=0
for i in range(b):
    a = [int(i) for i in input().split()]
    while a[0]!=0:
        if a[0]%a[1]==0:
            a[0]=a[0]//a[1]
            d=d+1
        else:
            a[0]=a[0]-1
            d=d+1
    c.append(d)
    d=0
for i in range(b):
    print(c[i])",0.09200000017881393,0.00011241704487474635
616,"n = int(input())
a = [int(i) for i in input().split()]
b=[]
for i in range(len(a)):
    if a[i] in b:
        pass
    else:
        b.append(a[i])
print(len(b))
",0.039000000804662704,4.2137114064644265e-07
617,"
n, m = map(int, input().split())
min_cost = float('inf')

for _ in range(n):
    a, b = map(int, input().split())
    cost = a / b
    min_cost = min(min_cost, cost)

result = min_cost * m
print(f""{result:.6f}"")
",0.9350000023841858,0.9119699597358704
618,"
k, m, n = map(int, input().split())
total_cookies = n * 2
full_batches = total_cookies // k
if total_cookies % k != 0:
    full_batches += 1
min_time = full_batches * m
print(min_time)
",0.9700000286102295,0.8343191742897034
619,"
n, m = map(int, input().split())
print(max(0, (n - m) // 2))
",0.9399999976158142,0.14640982449054718
620,"
n = int(input())
res = [[''] * n for _ in range(n)]
for i in range(n):
    for j in range(n):
        d = min(i, j, n - 1 - i, n - 1 - j)
        res[i][j] = chr(ord('A') + d)
for row in res:
    print(''.join(row))
",0.9879999756813049,0.892177402973175
621,"
k, r = map(int, input().split())
hats = 1
while (k * hats) % 10 != 0 and (k * hats) % 10 != r:
    hats += 1
print(hats)
",0.9259999990463257,0.16073915362358093
622,"
k = input().strip()
rev_k = k[::-1]
if k == rev_k:
    print('Yes')
else:
    print(""No"")
",0.9620000123977661,0.9162935614585876
623,"n=int(input())
a,b,c=map(int,input().split())
d,e,f=map(int,input().split())
print((n+1)*(a*d+b*e+c*f))",0.012000000104308128,0.01113632321357727
624,"def gcd(a, b):
    while b != 0:
        a, b = b, a % b
    return a

def solve(a):
    n = a + 1
    ans = []
    while len(ans) < 5:
        divs = []
        for i in range(2, int(n**0.5) + 1):
            if n % i == 0:
                divs.append(i)
                if i != n // i:
                    divs.append(n // i)
        divs.sort(reverse=True)
        if len(divs) >= 5:
            ans.append((n, divs[4]))
        n += 1
    return ans

a = int(input())
res = solve(a)
for n, m in res:
    print(n, m)",0.9620000123977661,0.8910561203956604
625,"x=int(input())


def ko(x):
    sp=[]
    for t in range(1,int(x**0.5)+1):
        if x%t==0:
            sp.append(t)
            if t!=x//t:
                sp.append(x//t)
    sp.sort()
    sp.reverse()
    return sp
k=0
for i in range(x+1,x*10000):
    spd=ko(i)
    if len(spd)>=5:
        print(i,spd[5])
        k+=1
    if k==5:
        break",0.09000000357627869,4.246630487614311e-05
626,"def f():
    n, z = map(int, input().split())
    s = input()
    l = 0
    r = 0
    mx = 0
    a = 0
    for i in range(1, n):
        l = int(s)//(10**i)
        r = int(s)%(10**i)
        a = l*(10**(i+1))+(z*(10**i))+r
        if a>mx:
            mx = a
    if n == 1:
        if int(s) > int(z):
            print(s+str(z))
        else:
            print(str(z) + s)
    else:
        if int(str(z)+s) > mx:
            print(str(z)+s)
        elif int(s+str(z)) > mx:
            print(s+str(z))
        else:
            print(mx)
f()",0.07800000160932541,0.1385199874639511
627,"
n = int(input())
masses = list(map(int, input().split()))
count = [0] * 5

for mass in masses:
    count[mass] += 1

vehicles = count[4]
vehicles += count[3]
count[1] = max(0, count[1] - count[3])

vehicles += count[2] // 2
count[2] %= 2

if count[2] > 0:
    vehicles += 1
    count[1] = max(0, count[1] - 2)

vehicles += (count[1] + 3) // 4

print(vehicles)
",0.9660000205039978,0.8490209579467773
628,"
n, d = map(int, input().split())
m = list(map(int, input().split()))
m.sort()
ans = 0
for i in range(n):
    for j in range(i + 1, n):
        if m[i] + d >= m[j]:
            ans += 1
print(ans)
",0.9129999876022339,0.955930769443512
629,"
def main():
    n, vgav, vsharik = map(int, input().split())
    w_eaten = vgav * (n // (vgav + vsharik))
    s_eaten = vsharik * (n // (vgav + vsharik))
    w_remainder = n % (vgav + vsharik)
    w_eaten += min(w_remainder, vgav)
    s_eaten += min(w_remainder, vsharik)
    print(w_eaten, s_eaten, end='\n')

main()
",0.9369999766349792,0.9868190288543701
630,"
a = int(input())
b = int(input())
s = 0
for i in range(a, b + 1):
    c = 0
    for j in range(2, i):
        if i % j == 0:
            c += 1
    if c == 1:
        s += i
print(s)
",0.9850000143051147,0.871079683303833
631,"
n = int(input())

if n == 1:
    print(10)
else:
    dp = [[0]*10 for _ in range(n+1)]
    for j in range(10):
        dp[1][j] = 1
    
    for i in range(2, n+1):
        for j in range(10):
            for k in range(j,10):
                dp[i][j] += dp[i-1][k]
    
    res=0
    for j in range(10):
        res += dp[n][j]
    print(res)
",0.859000027179718,0.0018044405151158571
632,"
A = float(input())
B = float(input())
K = float(input())

price_per_kg = (K - (A * 100)) / (100 - B)
my_price = A * price_per_kg
friend_price = B * price_per_kg

print(f""{my_price:.2f} {friend_price:.2f}"")
",0.9610000252723694,0.9545111656188965
633,"def main():
    field = input()
    vowels = ['A', 'E', 'I', 'O', 'U', 'Y']
    n = len(field)
    dp = [float('inf')] * (n + 1)
    dp[0] = 0
    for i in range(n):
        if field[i] in vowels:
            for j in range(1, min(n - i, dp[i] + 1)):
                dp[i + j] = min(dp[i + j], dp[i] + 1)
    print(dp[n])

if __name__ == '__main__':
    main()",0.9819999933242798,0.6597388982772827
634,"res = []
for val in sorted([float(input().strip()) for _ in range(3)]):
    if int(val) == val:
        res.append(int(val))
    else:
        res.append(val)
print(' '.join(map(str, res)))",0.004000000189989805,0.18627862632274628
635,"
n = int(input())
coins = list(map(int, input().split()))
piles = {}
for coin in coins:
    if coin in piles:
        piles[coin] += 1
    else:
        piles[coin] = 1
max_height = max(piles.values())
total_piles = len(piles)
print(max_height, total_piles)
",0.9089999794960022,0.9263008236885071
636,"
a = int(input())
b = int(input())
c = int(input())

if a < b and a < c:
    print(a)
elif b < a and b < c:
    print(b)
else:
    print(c)
",0.9670000076293945,4.012170848000096e-06
637,"
a = input()
b = """"
for i in a:
    if i != "" "":
        b += i
print(b)
",0.8899999856948853,0.9521670341491699
638,"x, y = map(float, input().split())
counter = 1
while x < y:
    x *= 1.1
    counter+= 1
print(counter)",0.004000000189989805,0.9625322222709656
639,"st1 = input()
st2 = input()
s = set([st1[0], st1[1], st2[0], st2[1]])
if len(s) == 1:
    print(0)
elif len(s) == 2:
    print(1)
elif len(s) == 3:
    print(2)
else:
    print(3)",0.10000000149011612,2.651653119301045e-08
640,"
n = int(input())
a = list(map(int, input().split()))
total_sum = sum(a)
max_difference = abs(total_sum)
print(max_difference)
",0.9750000238418579,0.9433749318122864
641,"h=int(input())
a=int(input())
b=int(input())
if (a-b)>1:
    print(h//(a-b))
else:
    print((h-a)//(a-b)+1)
",0.0989999994635582,2.72227953246329e-06
642,"
s1, s2, s3 = map(int, input().split())
n = int(input())
fillings = input().split()

ways = 1
if 'sausage' in fillings:
    ways *= s1
if 'chese' in fillings:
    ways *= s2
if 'Ketchup' in fillings:
    ways *= s3

print(ways)
",0.9419999718666077,0.061113208532333374
643,"
n, m = map(int, input().split())
adj = [list(map(int, input().split())) for _ in range(n)]
visited = [False] * n
stack = [m]
res = []

while stack:
    v = stack.pop()
    if not visited[v]:
        visited[v] = True
        res.append(v)
        for i in range(n-1, -1, -1):
            if adj[v][i] == 1 and not visited[i]:
                stack.append(i)

print(' '.join(map(str, res)))
",0.9240000247955322,0.9515395164489746
644,"
s = input()
if all('а' <= c <= 'я' or 'А' <= c <= 'Я' for c in s if c.isalpha()):
    print(""NO"")
else:
    print(""YES"")
",0.9150000214576721,0.9525706768035889
645,"
n = int(input())
if n % 2 == 0:
    res = n // 2
else:
    res = (n // 2) + 1
print(res)
",0.9739999771118164,0.6531195044517517
646,"n = int(input())
a= list(map(int,input().split()))
b = list(map(int,input().split()))

ans = 0
s1, s2 = 0, 0
for i in range(n):
    if s1 == s2 and a[i]==b[i]:
        ans+=a[i]
    s1 += a[i]
    s2 += b[i]
print(ans)",0.03200000151991844,0.002247467404231429
647,"def gcd(a, b):
    while b != 0:
        a, b = b, a % b
    return a

def lcm(a, b):
    return a * b // gcd(a, b)

def count_divisors(n):
    divisors = 0
    i = 1
    while i * i <= n:
        if n % i == 0:
            divisors += 1
            if i * i != n:
                divisors += 1
        i += 1
    return divisors

a, b = map(int, input().split())

max_divisors = 0
result = 0
for i in range(a, b + 1):
    divisors = count_divisors(i)
    if divisors > max_divisors:
        max_divisors = divisors
        result = i

print(max_divisors, result)",0.984000027179718,0.9006056189537048
648,"import math

def can_divide(candies, n, k, max_time):
    current_sum = 0
    count = 1  
    for candy in candies:
        if current_sum + candy > max_time:
            count += 1  
            current_sum = candy
            if count > k:  
                return False
        else:
            current_sum += candy
    return True

def find_minimum_time(candies, n, k, s):
    low = max(candies) 
    high = sum(candies) 
    result = high
    
    while low <= high:
        mid = (low + high) // 2
        if can_divide(candies, n, k, mid):
            result = mid
            high = mid - 1
        else:
            low = mid + 1
    
    return math.ceil(result / s)

n, k, s = map(int, input().split())
candies = list(map(int, input().split()))

print(find_minimum_time(candies, n, k, s))
",0.03099999949336052,2.978991808788578e-08
649,"s, n = map(int, input().split())
a = [] 
for i in range(n):
    obiem = input()  
    a.append(int(obiem)) 

a.sort()
summa=0
k = 0 
Max = 0 
for i in range(n):
    if s >= (summa + a[i]):
        summa += a[i]
        k += 1
        Max = a[i]
    else:
       summa = summa - Max + a[i]
       if s >= summa:
           Max = a[i]
        
print(k,Max)
",0.03200000151991844,1.855146479101677e-06
650,"n = int(input())
for i in range(n):
    a, b, c =map(int, input().split())
    if  a==b+c or b==a+c or c==a+b:
        print(""YES"")
    else:
        print(""NO"")",0.007000000216066837,0.21344996988773346
651,"a = input()
b = a.split(' ')
x = 3
y = 5
z = 12
print(int(int(b[0])*x)+int(int(b[1])*y)+int(b[2])*z)",0.014000000432133675,1.7034290067385882e-06
652,"
h = int(input())
a = int(input())
b = int(input())

day = 0
current_height = 0

while current_height < h:
    day += 1
    current_height += a
    if current_height >= h:
        break
    current_height -= b

print(day)
",0.9110000133514404,0.9560964107513428
653,"
def is_parallelogram(p1, p2, p3, p4):
    def distance_sq(a, b):
        return (a[0] - b[0]) ** 2 + (a[1] - b[1]) ** 2

    d1 = distance_sq(p1, p2)
    d2 = distance_sq(p1, p3)
    d3 = distance_sq(p1, p4)
    d4 = distance_sq(p2, p3)
    d5 = distance_sq(p2, p4)
    d6 = distance_sq(p3, p4)

    return (d1 == d4 and d2 == d5 and d3 == d6) or (d1 == d5 and d2 == d4 and d3 == d6)

N = int(input())
for _ in range(N):
    points = list(map(int, input().split()))
    p1 = (points[0], points[1])
    p2 = (points[2], points[3])
    p3 = (points[4], points[5])
    p4 = (points[6], points[7])
    if is_parallelogram(p1, p2, p3, p4):
        print(""YES"")
    else:
        print(""NO"")
",0.9190000295639038,0.5771288275718689
654,print(len( input().split())),0.041999999433755875,0.0009547899244353175
655,"k = int(input())
s = 0
for i in range(k):
    n,m = map(int,input().split())
    if n > m:
        for i in range(1,m):
            s+=i
        if s<=n:
            print('YES')
        else:
            print('NO')
    else:
        print('NO')",0.05999999865889549,0.001218179939314723
656,"y, k, n=map(int, input().split())
a=[]
h=0
if y==n:
    a=[-1]
for i in range(1, n-y+1):
    if (i+y)%k==0:
        a.append(i)
        h+=1
    if h==0 and i==n-y:
        a=[-1]
print(*a)
",0.06499999761581421,0.06232680007815361
657,"
def max_people_with_neighbors(n):
    return (n // 2) + (n // 4)

n = int(input())
print(max_people_with_neighbors(n))
",0.9819999933242798,0.9163775444030762
658,"
n1, m1, t1, s1 = map(int, input().split())
n2, m2, t2, s2 = map(int, input().split())

if n1 * t1 + m1 * s1 > n2 * t2 + m2 * s2:
    print(""Pitoshi"", n1 * t1 + m1 * s1)
elif n2 * t2 + m2 * s2 > n1 * t1 + m1 * s1:
    print(""Pascalyat"", n2 * t2 + m2 * s2)
else:
    print(""DRAW"", n1 * t1 + m1 * s1, n2 * t2 + m2 * s2)
",0.949999988079071,6.163084487198489e-10
659,"
n = int(input())
a = list(map(int,input().split()))
min_ic = min(a)
res = 0
for x in a:
  if x > min_ic:
      res += x - min_ic
  else:
      res += 0
print(res)
",0.9520000219345093,0.8356530070304871
660,"
a = int(input())
b = int(input())

for num in range(a, b + 1):
    two_digit_divs = []
    for i in range(10, 100):
        if num % i == 0:
            two_digit_divs.append(i)
    if len(two_digit_divs) == 30:
        min_div = min(two_digit_divs)
        max_div = max(two_digit_divs)
        print(num, min_div, max_div)
",0.9800000190734863,0.8661447167396545
661,"n = int(input())
sp = list(map(int,input().split()))
l = 0
r = len(sp)-1
p1 = 0
p2 = 0
hod = 0
while r>l:
    if hod % 2 ==0:
        if sp[l] > sp[r]:
            p1 +=sp[l]
            l+=1
        else:
            p1 += sp[r]
            r-=1
        hod+=1
    else:
        if sp[l] > sp[r]:
            p2 +=sp[l]
            l+=1
        else:
            p2 += sp[r]
            r-=1
        hod+=1
if n % 2==0:
    p2+=sp[l]
else:
    p1+=sp[l]

print(p1,p2)          
",0.05700000002980232,1.6441132899558397e-09
662,"
n, m = map(int, input().split())
a = list(map(int, input().split()))

max_total = 0
sorted_max = sorted(a, reverse=True)
remaining = n
for num in sorted_max:
    take = min(num, remaining)
    max_total += take * num
    remaining -= take
    if remaining == 0:
        break

min_total = 0
sorted_min = sorted(a)
remaining = n
for num in sorted_min:
    take = min(num, remaining)
    min_total += take * num
    remaining -= take
    if remaining == 0:
        break

print(max_total, min_total)
",0.9679999947547913,0.9757561683654785
663,"
def count_char(s):
  d = {}
  for c in s:
    if c in d:
      d[c] += 1
    else:
      d[c] = 1
  return d

def get_common_string(s1, s2, s3):
  d1 = count_char(s1)
  d2 = count_char(s2)
  d3 = count_char(s3)
  common_string = ''
  for c in d1:
    if c in d2 and c in d3:
      common_string += c * min(d1[c], d2[c], d3[c])
  return common_string

def is_possible(s1, s2, s3):
  common_string = get_common_string(s1, s2, s3)
  if len(common_string) == 0:
    return False
  for i in range(len(common_string) - 1):
    if common_string[i] == common_string[i + 1]:
      return False
  return True

def get_operations(s, target):
  operations = 0
  i = 0
  j = 0
  while i < len(s) and j < len(target):
    if s[i] == target[j]:
      i += 1
      j += 1
    elif s[i] * 2 == target[j:j+2]:
      operations += 1
      i += 1
      j += 2
    elif s[i:i+2] == target[j]:
      operations += 1
      i += 2
      j += 1
    else:
      return -1
  if i < len(s) or j < len(target):
    return -1
  return operations

def main():
  s1 = input()
  s2 = input()
  s3 = input()
  if is_possible(s1, s2, s3):
    common_string = get_common_string(s1, s2, s3)
    operations1 = get_operations(s1, common_string)
    operations2 = get_operations(s2, common_string)
    operations3 = get_operations(s3, common_string)
    if operations1 == -1 or operations2 == -1 or operations3 == -1:
      print(""IMPOSSIBLE"")
    else:
      print(common_string)
  else:
    print(""IMPOSSIBLE"")

if __name__ == ""__main__"":
  main()
",0.9419999718666077,0.9759911894798279
664,"n = int(input())        
gr = [[] * n for i in range(n)]
gr2 = [[0] * n for i in range(n)]
gr3 = [[0] * n for i in range(n)]
for i in range(n):
    gr[i] = [int(t) for t in input().split()]

for i in range(n):
    for j in range(n):
        for z  in range(n):
            if gr2[i][j]==0:
                gr2[i][j]=gr[i][z]*gr[z][j]
for i in range(n):
    for j in range(n):
        for z  in range(n):
            if gr3[i][j]==0:
                gr3[i][j]=gr2[i][z]*gr[z][j]

for i in range(n):
    for j in range(n):
        if i==j:
            gr3[i][j]=0  
               
for i in range(n):
    for j in range(n):
        if gr3[i][j]==1:
            print(i+1,j+1)",0.06800000369548798,4.96606753586093e-06
665,"n=int(input())+1
m=['0']*(n+1)
for i in range(1,n+1):
    m[i]=m[i-1]+' '+str(i)
m1=[]
for i in range(n):
    s=' '*(n-i-1)+' '+m[i]+m[i][-2::-1]+' '+' '*(n-i-1)
    if i!=n-1:
        m1.append(s[:-1])
    print(s[:-1])
for i in range(-1,-len(m1)-1,-1):
    print(m1[i])
",0.07500000298023224,0.00023188731574919075
666,"N=int(input())
mas=[0]*N
S=input().split()
mas=[int(i)for i in S]
k=1
for i in range(N-1):
    if mas[i]!=mas[i+1]:
       k+=1
print(k)
",0.05000000074505806,1.7515451133931492e-07
667,"x = 0
k = int(input())
for i in range(19, 11000000, 9):
    if sum(map(int,str(i))) == 10:
        x += 1
    if x == k:
        print(i)
        break
",0.029999999329447746,0.3639448881149292
668,"
X, Y, Z = map(int, input().split())
cake_price = 3
marshmallow_price = cake_price + 2
chocolate_price = marshmallow_price + 7
total_cost = (X * cake_price) + (Y * marshmallow_price) + (Z * chocolate_price)
print(total_cost)
",0.9020000100135803,0.9194909334182739
669,"n, z = map(int, input().split())
seq = input()
if n == 1:
    if z >= int(seq):
        print(str(z) + seq)
    else:
        print(seq + str(z))
else:
    for x in range(n):
        if z >= int(seq[x]):
            break
    if z <= int(seq[x]):
        print(seq[:x+1] + str(z) + seq[x+1:])
    else:
        print(seq[:x] + str(z) + seq[x:])",0.08100000023841858,3.461600044829538e-06
670,"
x = int(input())
a = int(input())
b = int(input())

money_fisher = 3 * x
money_storyteller = a + 2 * b

max_money = max(money_fisher, money_storyteller)
print(max_money)
",0.8899999856948853,0.9502061605453491
671,"
def sticks(n, k):
    player1, player2 = 1, 0
    while n > k-1:
        if n >= k:
            n -= k
            player1 += 1
        else:
            player2 += 1
            break
    return ""YES"" if player1 > player2 else ""NO""

n, k = map(int, input().split())
print(sticks(n, k))
",0.9020000100135803,0.7798265218734741
672,"
n = int(input())
a = list(map(int, input().split()))
unique_deeds = set(a)
unique_deeds.discard(0)
print(len(unique_deeds))
",0.9850000143051147,0.32425305247306824
673,"a, b = map(int, input().split())
if a < b:
    cnt = [x for x in range(a, b + 1)]
else:
    cnt = [x for x in range(a, b - 1, -1)]

print(' '.join(map(str, cnt)))",0.04899999871850014,9.7435804491397e-05
674,"X1, Y1, X2, Y2 = map(int, input().split())if Y1 == Y2:distance = abs(X1 - X2)else:distance = abs(X1) + abs(X2) + abs(Y1 - Y2)print(distance)",0.9340000152587891,0.9016584157943726
675,"
a, b = map(int, input().split())
res = 0
while a != b:
    if a > b:
        res += a // b
        a = a % b
        if a == 0:
            break
    else:
        res += b // a
        b = b % a
        if b == 0:
            break
if a == b and a != 0:
    res += 1
print(res)
",0.9200000166893005,0.2116980254650116
676,"
n,k=map(int,input().split())
s=input()
code=""""
for i in range(k):
  code+=s[i]

count=0
for i in range(n-k+1):
  if s[i:i+k]==code:
    count+=1

if count>=2:
  print(""Yes"")
else:
  print(""N0"")
",0.984000027179718,0.8187556266784668
677,"
s = input()
lastk = -1
lastl = -1
ans = 0
cur = 0
for i in range(len(s)):
    if s[i] == 'K' :
        if i - lastl > 1 and lastk != -1:
            cur = i - lastk
        else:
            cur = 0
        lastk = i
    elif s[i] == 'L':
        if i - lastk > 1 and lastl != -1:
            cur = i - lastl
        else:
            cur = 0
        lastl = i
    ans = max(cur, ans)
print(ans)
",0.9890000224113464,0.03043881058692932
678,"
def min_folds(n):
    folds = 0
    while n > 1:
        n = (n + 1) // 2
        folds += 1
    return folds

n = int(input())
print(min_folds(n))
",0.996999979019165,0.9037345051765442
679,"n = int(input())
mas = list(map(int, input().split()))
if n == 0:
    print(0, 0, 0)
else:
    k = 0
    a0 = mas.count(0)
    for a in mas:
        if a > 0:
            k += 1
    print(a0, k, n-a0-k)",0.039000000804662704,0.9518110752105713
680,"def main():
    t = int(input())
    x = list(map(int, input().split()))
    for i in x:
        if (i&1 == 1 and i >= 5) or i == 4: print(""NO"")
        else: print(""YES"")

main()",0.9620000123977661,0.9681162238121033
681,"
def reverse_digits(n):
  if n < 10:
    print(n, end=' ')
  else:
    reverse_digits(n // 10)
    print(n % 10, end=' ')

n = int(input())
reverse_digits(n)
",0.925000011920929,0.9584630131721497
682,"
def max_of_2(n):
    max_val = -1
    for i in range(n):
        num = int(input())
        if num % 10 == 2 and num > max_val:
            max_val = num
    return max_val

n = int(input())
print(max_of_2(n))
",0.984000027179718,0.9181703329086304
683,"a, b = map(int, input().split())

print(a ** 2 + b ** 2)",0.0689999982714653,0.006710460875183344
684,"n = int(input())
q = 1
for i in range(n):
    a,b = map(int,input().split())
    if ((b*(b-1))//2)<=a:
        print('YES')
    else:
        print('NO')",0.0989999994635582,0.15285304188728333
685,"
n = int(input())
count = 0
for i in range(1, n + 1):
    if n % i == 0:
        count += 1
print(count)
",0.9580000042915344,0.8816375136375427
686,"a = int(input())
c = 0
c1 = []
for i in range(a):
    c1 = list(map(int,input().split()))
    if sum(c1)>1:
        c += 1
    c1 = []
print(c)",0.012000000104308128,0.3173505663871765
687,"
A = int(input())
B = int(input())
count = 0

while A > 0 and B > 0:
    if A > B:
        count += A // B
        A = A % B
    else:
        count += B // A
        B = B % A

print(count)
",0.9470000267028809,0.9276886582374573
688,"K=int(input())
L=int(input())
N=int(input())
S=int(input())

st=K+N*S
ko=L+N*(S//2)
if st>ko:
    print(""YES"")
else:
    print(""NO"")",0.052000001072883606,0.9585540294647217
689,"
k, n, x = map(int, input().split())
res = []
for i in range(1, n // k + 1):
    if (n - i * k) % (i + 1) == 0:
        res.append((n - i * k) // (i + 1))
if len(res) == 0:
    print(-1)
else:
    res = sorted(set(res))
    print(' '.join(map(str, res)))
",0.8600000143051147,0.050991952419281006
690,"a=int(input())
b=int(input())
c=int(input())
if a==b==c:
    print(3)
elif a==b!=c:
     print(2)
elif a!=b==c:
 print(2)
elif c==a!=b:
 print(2)
else:
    print(0)



",0.014999999664723873,7.357856520684436e-05
691,"
A = int(input())
B = int(input())
C = int(input())

weights = {0}

for w in (A, B, C):
    new_weights = set()
    for weight in weights:
        new_weights.add(weight + w)
        new_weights.add(weight - w)
    weights.update(new_weights)

positive_weights = {w for w in weights if w > 0}
print(len(positive_weights))
",0.9039999842643738,0.9416306614875793
692,"
n, m = map(int, input().split())
red, green, blue, black = 0, 0, 0, 0

for i in range(1, n + 1):
    for j in range(1, m + 1):
        value = i * j
        if value % 2 == 0:
            red += 1
        if value % 3 == 0:
            green += 1
        if value % 5 == 0:
            blue += 1

total_cells = n * m
black = total_cells - (red + green + blue)

print(f""RED : {red}"")
print(f""GREEN : {green}"")
print(f""BLUE : {blue}"")
print(f""BLACK : {black}"")
",0.9449999928474426,0.9868050813674927
693,"palR=int(input())
palR=int(palR*2.54)
print(palR)",0.00800000037997961,0.02333863265812397
694,"
l, r = map(int, input().split())
total_area = 0

for i in range(l, r + 1):
    if i % 2 == 1:
        continue
    h = 0
    while i % 2 == 0:
        h += 1
        i //= 2
    total_area += h

print(total_area)
",0.8640000224113464,0.9879355430603027
695,"
L1, R1, L2, R2, K = map(int, input().split())
start = max(L1, L2)
end = min(R1, R2)
if start > end:
    res = 0
else:
    if K >= start and K <= end:
        res = end - start
    else:
        res = end - start + 1
print(res)
",0.8629999756813049,0.15628816187381744
696,"
s = 'XXYZZYXYYZZXZYXYZYYXZZYZZYXYX'
max_count = 0
count = 0

for i in range(len(s)):
    if i < len(s) - 3 and s[i:i+4] == 'XZZY':
        count = 0
    else:
        count += 1
        if count > max_count:
            max_count = count

print(max_count)
",0.9300000071525574,0.9678192138671875
697,"x, y, a,b = map(int, input().split())


l1 = [i for i in range(a, b + 1) if i % x == 0]
l2 = [j for j in range(a, b + 1) if j % y == 0]
count = 0

for i in l1:
    if i in l2:
        count += 1

print(count)",0.05400000140070915,0.07782331854104996
698,"
num1, num2 = list(map(int, input().split()))
result = num1 + num2 if (num1 >= 0 and num2 >= 0) or (num1 < 0 and num2 < 0) else num1 - num2
print(result)
",0.9980000257492065,0.8953997492790222
699,"n, d = [int(i) for i in input().split()]
a = [int(i) for i in input().split()]
a.sort()
m = int(input())
if m <= n:
    print(sum(a[:m]))
else:
    print(sum(a) - (m - n) * d)",0.04899999871850014,1.5781514983714828e-09
700,"def main():
    n, k = map(int, input().split())
    max_pleasure = 0
    for _ in range(n):
        f, t = map(int, input().split())
        pleasure = f if t <= k else f - (t - k)
        max_pleasure = max(max_pleasure, pleasure)
    print(max_pleasure)

if __name__ == ""__main__"":
    main()",0.9869999885559082,0.907103955745697
701,"a, b, c = map(int, input().split())
c1 = 1
if c>a:
    c1+=(c//a)
print(2*b*c1)",0.0010000000474974513,0.9406847357749939
702,"a=int(input())
b=int(input())
c=int(input())
d=int(input())
if a>b:
    print(b*c+(a-b)*d)
else:
    print(a*c)",0.061000000685453415,0.0076364874839782715
703,"
a = int(input())
n = 1
div_count = 0
largest_prime = 0

while True:
    div_count = 0
    for i in range(1, n + 1):
        if n % i == 0:
            div_count += 1
            if i > largest_prime:
                is_prime = True
                for j in range(2, int(i**0.5) + 1):
                    if i % j == 0:
                        is_prime = False
                        break
                if is_prime and i != 1:
                    largest_prime = i
    if div_count == a:
        break
    n += 1

print(n, largest_prime)
",0.984000027179718,0.9924353957176208
704,"a = int(input())
b = int(input())
c = int(input())
print(min(a, b, c))
",0.0020000000949949026,0.6660107970237732
705,"k, m, n =map(int, input().split())
if k>=n:
    c = n*m*2
elif k<n:
    c = (n//k+1)*m*2
elif n==0:
    c = 0
print(c)",0.05299999937415123,0.011740904301404953
706,"y,k,n = [int(i) for i in input().split()]
f = []
for i in range(1,(n-y)+1):
    if (i + y) % k == 0:
        f.append(i)
if y >= n:
    print(-1)
    exit()
f.sort()
print(*f)",0.057999998331069946,2.1910782379563898e-06
707,"L=int(input())
k=L*2.54
print(round(k))

",0.08299999684095383,0.02333863265812397
708,"k, n, s, p = map(int, input().split())
lst = 0
for i in range(k):
    if n % s != 0:
        lst += (n // s + 1)
    else:
        lst += n // s

if lst % p != 0:
    print(lst // p + 1)
else:
    print(lst // p)
",0.0820000022649765,3.160889173159376e-05
709,"a = int(input())
k = []
b = input().split()
f = b[0]
b.pop(0)
g = 1
for i in b:
    if i == f:
        g += 1
    else:
        k.append(g)
        k.append(f)
        g = 1
    f = i
k.append(g)
k.append(f)
print(*k)",0.07599999755620956,0.0005767653929069638
710,"n=int(input())
print(n//2+n%2)",0.05400000140070915,8.34460515761748e-05
711,"n=int(input())
a=input()
b=set()
for i in range(n-1):
    b.add(a[i:i+2])
print(len(b))",0.03799999877810478,0.022007999941706657
712,"k, sir, cous = map(int, input().split())
n = int(input())
a = []
ct = 1
for i in range(n):
    a.append(input().strip())
for i in a:
    if i == ""sausage"":
        ct *= k
    elif i == ""cheese"":
        ct *= sir
    else:
        ct *= cous
print(ct)",0.050999999046325684,0.031846363097429276
713,"n = int(input())
m = list(map(int, input().split()))
res = 0
ma = max(m)

for i in m:
	res += i

if res % ma == 0:
	print(res//ma)
else:
	print((res//ma) +1)
",0.041999999433755875,0.5165274143218994
714,"n=int(input())
i=2
while n%i!=0:
    i+=1
print(i)",0.09600000083446503,0.8749110102653503
715,"
s = input().strip()
ans = 0
n = len(s)
for i in range(n):
    if s[i] == '1':
        ans |= (1 << (n - i - 1))
print(ans)
",0.9789999723434448,0.760644793510437
716,"a1, b1 = map(int, input().split())
c = list(map(int,input().split()))
cou = int(input())
c.sort()
c1 = 0
for i in range(cou):
    if i < a1:
        c1 += c[i]
    else:
        c1 -= b1
print(c1)",0.02199999988079071,0.8443492650985718
717,"
a, b = map(int, input().split())
print(abs(a - b))
",0.9480000138282776,0.8295972943305969
718,"a=int(input())
z=0
for i in range(2,a+1):
    if a%i==0:
        z+=1
        if z==2:
            break
if z==1: print('YES')
else: print(""NO"")
",0.0689999982714653,0.03833575174212456
719,"
n = int(input())
count = 0
for i in range(1, n + 1):
    if n % i == 0:
        count += 1
print(count)
",0.9430000185966492,0.8816375136375427
720,"a, b = map(int, input().split())

if a>=b:
    print(1,b)
else:
    if b%a == 0:
        print(b//a,1)
    else:
        print(b//a+1,b%a)",0.08799999952316284,2.268039224873064e-06
721,"
n=int(input())
a=1
ans=[1]
for i in range(n-1):
    x=int(input())
    if x==a:
        a+=1
        ans[-1]+=1
    else:
        ans.append(1)
        a=x
print(*ans)
",0.9259999990463257,0.00027447586762718856
722,"
a=list(map(int,input().split()))
n=int(input())
p=1
for i in range (n):
    s=input().replace(' ','')
    if s=='sausage':
        p=p*a[0]
    if s=='cheese':
        p=p*a[1]
    if s == 'ketchup':
        p=p* a[2]
print(p)




",0.07100000232458115,0.000319028040394187
723,"n=int(input())
a=[int(s) for s in input().split()]
k=0
for i in range(1,len(a)-1):
    if a[i-1]<a[i]>a[i+1]:
        k+=1
print(k)
",0.09700000286102295,0.00014477773220278323
724,"n = int(input())count = 0for _ in range(n):a, b, c = map(int, input().split())if a + b + c >= 2:count += 1print(count)",0.9269999861717224,0.923033595085144
725,"n, z = input().split()
num = input()
res = """"

for i in range(int(n)):
    if z > num[i]:
        res = num[:i] + z + num[i:]
        break

if res != """":
    print(res)
else:
    print(num + z)",0.03999999910593033,0.5387293100357056
726,"
a = int(input())
b = int(input())

found = False

for num in range(a, b + 1):
    divisors = []
    for i in range(1, int(num**0.5) + 1):
        if num % i == 0:
            divisors.append(i)
            if i != num // i:
                divisors.append(num // i)
    if len(divisors) == 4:
        found = True
        divisors.sort()
        print("" "".join(map(str, divisors)))

if not found:
    print(0)
",0.953000009059906,0.9277569055557251
727,"
S = input().strip()
unique_nicknames = set()

for i in range(len(S)):
    for j in range(i + 1, len(S) + 1):
        unique_nicknames.add(S[i:j])

print(len(unique_nicknames))
",0.9259999990463257,0.8805267810821533
728,"p,k,t,r=map(int,input().split())
if p%k!=0:
    N=p//k+1
else:
    N=p//k
print((N-1)*(t+r)+t)",0.029999999329447746,0.007021284196525812
729,"
text = input()
words = text.split()
res = []
for word in words:
    if word[0] == 'a':
        new_word = 'mur-i' + word[1:]
    else:
        new_word = 'mur-' + chr(ord(word[0]) - 1) + word[1:]
    res.append(new_word)
print(' '.join(res))
",0.9179999828338623,0.9338439106941223
730,"
a = 10
b = 3
commands = []
while a > b:
    if a % 2 == 0 and a // 2 >= b:
        commands.append('2')
        a //= 2
    else:
        commands.append('-1')
        a -= 1
for cmd in commands:
    print(cmd)
",0.9919999837875366,0.9043439030647278
731,"
n = int(input())
if n == 1:
    res = 9
else:
    res = 9 * (10 ** (n - 1))
print(res)
",0.9860000014305115,0.9431895613670349
732,"a=int(input())
if a%3==0: print('YES')
else: print('NO')
",0.004999999888241291,0.9109291434288025
733,"
a, b, h = map(int, input().split())
m, k = map(int, input().split())
if (a <= m and b <= k) or (a <= k and b <= m) or (a <= m and h <= k) or (a <= k and h <= m) or (b <= m and h <= k) or (b <= k and h <= m):
    print(""YES"")
else:
    print(""NO"")
",0.9549999833106995,0.980026364326477
734,"from math import ceil
from decimal import Decimal
from time import sleep
a, b = map(Decimal, input().strip().replace('-', '').split())
if a > b: sleep(2)
c = 0
res = a
while res < b:
    res *= Decimal('1.1')
    c += 1
print(c+1)",0.019999999552965164,2.7191205503807254e-16
735,"n= int (input())
while n>0 :
    print(n%10)
    n=n//10
",0.009999999776482582,0.828087568283081
736,"n = int(input())
data2 = list(map(int, input().split()))
data2.sort()
data1 = list(map(int, input().split()))
data1.sort()
s = 0
for i in range(n):
    s += abs(data2[i] - data1[i])
print(s)
",0.0949999988079071,0.002406189450994134
737,"a, b, c = map(int, input().split())
c1 = int(input())
b1 = []
for i in range(c1):
    b1.append(input())
if b1.count('sausage') ==0:
    a = 1
if b1.count('ketchup') == 0:
    b = 1
if b1.count('cheese') == 0:
    c = 1
if len(b1)==0:
    print(0)
else:
    print(a*b*c)",0.03999999910593033,0.1959725171327591
738,"from math import *
k,n =map(int,input().split())
print (ceil (n/k),(n-1)% k+1)",0.02199999988079071,0.0021788491867482662
739,"
n, m = map(int, input().split())
grid = [list(map(int, input().split())) for _ in range(n)]
count = 0

for i in range(n):
    for j in range(m):
        curr = grid[i][j]
        adj = 0
        if i > 0: adj += grid[i-1][j]
        if i < n-1: adj += grid[i+1][j]
        if j > 0: adj += grid[i][j-1]
        if j < m-1: adj += grid[i][j+1]
        if curr > adj: count += 1

print(count)
",0.8989999890327454,0.4728277921676636
740,"n=[int(i) for i in input().split()]
if  n[1]%n[2]==0:
    n[1]= n[1]//n[2]
else:
    n[1]=n[1]//n[2]+1
r=n[1]*n[0]
if r%n[3]==0:
    print(r//n[3])
else:
    print(r//n[3]+1)
",0.014999999664723873,5.056715137764789e-13
741,"sum = 0
count = 0
while True:
    num = int(input())
    if num == 0:
        break
    sum += num
    count += 1
if count > 0:
    avg = sum / count
    print(avg)
else:
    print(0)",0.9629999995231628,0.9356145858764648
742,"p=int(input())
for i in range(p):
    n, k= map(int, input().split())
    t=0
    while n!=0:
        if n%k==0:
            n=n//k
        else:
            n=n-1
        t+=1
    print(t)",0.02800000086426735,0.001297474023886025
743,"k,n=map(int,input().split())
if n%k==0 :
    print(n//k)
    print(k)
else:
    print(n//k+1, end=' ')
    print(n%k)",0.06700000166893005,1.4758044786233881e-09
744,"
n = int(input())
A = list(map(int, input().split()))
m = int(input())
Q = list(map(int, input().split()))

order = []
total = 0
for i in range(n):
    total += A[i]
    for j in range(total - A[i] + 1, total + 1):
        order.append(i + 1)

for q in Q:
    print(order[q - 1])
",0.8539999723434448,0.9028450846672058
745,"x,y, z=map(int,input().split())
a=0
a=x*3+y*(3+2)+z*(3+2+7)
print(a)",0.09799999743700027,0.8594538569450378
746,"
def is_reachable(x, y):
  if x == y:
    return True
  if x % 2 == 0 and x > 1:
    return is_reachable(x // 2, y) or is_reachable(x - 1, y)
  if x > 1:
    return is_reachable(x - 1, y)
  return False

t = int(input())
for _ in range(t):
  x, y = map(int, input().split())
  if is_reachable(x, y):
    print(""YES"")
  else:
    print(""NO"")
",0.9430000185966492,0.9075901508331299
747,"n = int(input())
a = list(map(int, input().split()))
b = list(map(int, input().split()))
a1 = 0
b1 = 0
count = 0
for i in range(n):
    a1 += a[i]
    b1 += b[i]
    if a[i] == b[i] and b1==a1:
        count+= a[i]
    i+=1 
print(count)",0.07400000095367432,0.006406118161976337
748,"a = input()
print(a[-2])
",0.07199999690055847,0.7441264986991882
749,"ï»¿x=int(input())
y=int(input())
z=x+y
print(z)

",0.09300000220537186,0.01330284122377634
750,"x, y = [int(x) for x in input().split()]
if x > 0 and y > 0:
    print(x+y)
elif x < 0 and y < 0:
    print(x+y)
else:
    print(x-y)",0.07999999821186066,3.896094312949572e-06
751,"n = int(input())
a=n
k=0
while a!=1:
    if a%2==0:
        a//=2
        k+=1
    if a%2!=0:
        a//=1.5
        k+=1
    if a%1.5!=0:
        a-=1
        k+=1
print(k)
",0.05900000035762787,1.5232181794999633e-05
752,"
mass = {'c': 12, 'h': 1, 'n': 14, 'o': 16}
s = input().strip()
res = 0
i = 0
while i < len(s):
    elem = s[i]
    i += 1
    num = 0
    while i < len(s) and s[i].isdigit():
        num = num * 10 + int(s[i])
        i += 1
    if num == 0:
        num = 1
    res += mass[elem] * num
print(res)
",0.8830000162124634,0.9423375725746155
753,"from decimal import Decimal
l, brk = [], 0
while True:
    for val in input().split():
        if val == '0':
            brk = 1
            break
        l.append(Decimal(val))
    if brk: break
res = sum(l)/len(l) if len(l) else 0
print(res)
",0.054999999701976776,0.02774990163743496
754,"
a, b = map(int, input().split())
l, r = 1, 1
while l <= b:
    if l % 2 == 0:
        a -= 1
    l += 1
while r <= a + b:
    if r % 2 == 0:
        b -= 1
    r += 1
if r - l > a + b:
    print('Yes')
else:
    print('No')
",0.9520000219345093,0.8133765459060669
755,"
x, y, z = map(int, input().split())
res = 0

if y > 0:
    res += y
    z = max(0, z - y)

if x > 0:
    res += x
    z = max(0, z - x)

if z > 0:
    res += (z + 2) // 3

if x > 0 and y > 0 and z < 0:
    res = -1
elif x > 0 and z < 0:
    res = -1
elif y > 0 and z < 0:
    res = -1
else:
    pass

print(res)
",0.9160000085830688,0.00030041206628084183
756,"
x1, x2, x3, x4 = map(int, input().split())
a = (x4 - x1)
b = (x4 - x2)
c = (x4 - x3)
print(a * b * c)
",0.9190000295639038,0.0023697081487625837
757,"
n = int(input())
cm = n // 10
if n % 10 != 0:
    cm += 1
print(cm)
",0.9639999866485596,0.8875828981399536
758,"
n = int(input())
arr = list(map(int, input().split()))
m = int(input())
candy_pairs = [tuple(map(int, input().split())) for _ in range(m)]
candy_set = set()

for i, j in candy_pairs:
    candy_set.add((i, j))
    candy_set.add((j, i))

for _ in range(n - 1):
    for j in range(n - 1):
        if arr[j] > arr[j + 1:
            if (arr[j], arr[j + 1]) not in candy_set:
                arr[j], arr[j + 1] = arr[j + 1], arr[j]

print(*arr)
",0.8709999918937683,0.9949907660484314
759,"
m = int(input())
d = int(input())
v = int(input())

max_boys = (v + 1) // 2
max_girls = (v + 1) - max_boys

if max_boys > m:
    max_boys = m
if max_girls > d:
    max_girls = d

tshirts = max_boys + max_girls
print(tshirts)
",0.9430000185966492,0.003918611444532871
760,"pi = [int(x) for x in input().split()]
n1 = pi[0]
beg1 = pi[1]
mah1 = pi[2]
bros1 = pi[3]
beeg1 = pi[4]
pit = n1 * (beg1 + mah1*bros1 + beeg1)
pa = [int(x) for x in input().split()]
n2 = pa[0]
beg2 = pa[1]
mah2 = pa[2]
bros2 = pa[3]
beeg2 = pa[4]
pas = n2 * (beg2 + mah2*bros2 + beeg2)
if pit == pas:
    print('Draw', n1 * (beg1 + mah1*bros1 + beeg1))
elif pit < pas:
    print('Python', n1 * (beg1 + mah1*bros1 + beeg1))
elif pas < pit:
    print('Pascal', n2 * (beg2 + mah2*bros2 + beeg2))",0.0430000014603138,2.0047133730827227e-08
761,"
n = int(input())
g = []
for _ in range(n):
    row = list(map(int, input().split()))
    g.append(row)

res = [[0]*n for _ in range(n)]

for i in range(n):
    for j in range(n):
        if i == j:
            continue
        found = False
        for k in range(n):
            if g[i][k] and g[k][j]:
                found = True
                break
        if found:
            res[i][j] = 1

for row in res:
    print(' '.join(map(str, row)))
",0.906000018119812,0.8788366317749023
762,"a = input().split()
n = int(a[0])
m = int(a[1])
a = int(a[2])
x = 0
y = 0
if n%a==0:
    x = n//a
else:
    x = n//a+1
if m%a==0:
    y = m//a
else:
    y = m//a+1
print(x*y)",0.020999999716877937,3.943427509511821e-05
763,"

L=int (input())
l=L*2.54
l//10
print (round (l))
",0.0820000022649765,0.015337144024670124
764,"a, b, c = map(int, input().split())
if a <= b:
    if b <= c:
        print(""YES"")
    else:
        print(""NO"")
else:
    print(""NO"")",0.0989999994635582,0.027001062408089638
765,"
n = int(input())
a = []
for i in range(n):
    row = input().split()
    a.append(row)

res = 'yes'
for i in range(n):
    for j in range(n):
        if a[i][j] != a[j][i]:
            res = ""no""
            break
    if res == ""no"":
        break

print(res)
",0.8629999756813049,0.9120554327964783
766,"
def factorial(n):
  if n == 0:
    return 1
  else:
    return n * factorial(n - 1)

n, k = map(int, input().split())
print(factorial(n) // (factorial(k) * factorial(n - k)))
",0.9020000100135803,0.9818389415740967
767,"start = int(input())
end = int(input())

def allDivs( x ):
  divs = [1, x]
  d = 2
  while d*d <= x:
    if x % d == 0:
      divs.append( d )
      if x // d > d:
        divs.append( x//d )
    d += 1
  return sorted(divs)

for x in range( start, end+1 ):
  divs = allDivs(x)[1:-1]
  digits2 = [ d for d in divs if 10 <= d <= 99 ]
  if len(digits2) == 30:
    print( x, digits2[0], digits2[-1] )





",0.02800000086426735,0.0177073385566473
768,"x,y,z = map(int,input().split())
print(3*x + 5*y + 12*z)
",0.09000000357627869,7.00272576068528e-05
769,"n = int(input())
a = list(map(int, input().split()))
b = list(map(int, input().split()))
s1 = 0
s2 = 0
k = 0
for i in range(n):
    s1 += a[i]
    s2 += b[i]
    if a[i] == b[i] and s1 == s2:
        k += a[i]
print(k)",0.032999999821186066,0.055889349430799484
770,"a = int(input())
b = int(input())
result = sum([a, b])
print(result)
",0.06700000166893005,0.1970365047454834
771,"
n = int(input())
arr = list(map(int, input().split()))
s = 0
for i in arr:
    s += i
print(s)
",0.8679999709129333,0.9300479888916016
772,"
n,m = map(int, input().split())
gr=[[0]*n for i in range(n)]
tr=[]
for i in range(n):
    gr[i] = [int(t) for t in input().split() ]
for i in range(n):
    for j in range(n):
        if i==j:
            gr[i][j]=1
for i in range(n):
    for j in range(n):
        for z in range(n):
            if (gr[j][i]and gr[i][z]):
                gr[j][z]=1
for i in range(n):
    for j in range(n):
        if i==j:
            gr[i][j]=0
for i in range(m):
    r,t = map(int, input().split())
    if gr[r-1][t-1]==1:
        print('YES')
    else:
        print('NO')
",0.0949999988079071,0.08625706285238266
773,"
a = int(input())
b = int(input())
c = int(input())

if a > b:
    a, b = b, a
if b > c:
    b, c = c, b
if a > b:
    a, b = b, a

print(a, b, c)
",0.972000002861023,0.8140261769294739
774,"ï»¿a,b,h=map(int,input().split())
m,k=map(int,input().split())
if m>=a and k>=b:
    print('YES')
elif m>=b and k>=a:
    print('YES')
elif m>=b and k>=h:
    print('YES')
elif m>=h and k>=b:
    print('YES')
elif m>=a and k>=h:
    print('YES')
elif m>=h and k>=a:
    print('YES')
else:
    print('NO')


",0.09399999678134918,0.002615263219922781
775,"
n = int(input())
binary = ''
while n > 0:
    binary = str(n % 2) + binary
    n //= 2
print(binary)
",0.9760000109672546,0.9337273836135864
776,"n,k=map(int,input().split())
a=list(map(int,input().split()))
t=0
ma=0
for i in range (len(a)-1):
    if a[i]!=a[i+1]:
        t+=1
    else:
        ma=max(ma,t+1)
        t=0
if t>0:
    print(max(ma,t+1))
else:
    print(ma+1)
",0.061000000685453415,0.02678140439093113
777,"k, r = map(int,input().split())
b = k
a = k % 10

counter = 0
i = 1
if (k % 2 == 0 and r % 2 == 0) or (k % 2 != 0 and r % 2 != 0):
    while (a * i) % 10 != r:
        counter += 1
        i += 1
else:
    while k % 10 != 0:
        counter += 1
        k += b

print(counter + 1)",0.019999999552965164,0.00012909916404169053
778,"a=int(input())
for i in range(a,10**10, a):
    if (i%10==4) and (str(i)[2:6] == '2139') and (str(i)[0] == '1'):
        print(i, i//a)",0.06800000369548798,0.3613176643848419
779,"


n=int(input())
mas=[0]*(n)
s=input().split()
mas=[int(i) for i in s]
k=0
for i in range(2,n-1,1):
      if mas[i-1]<mas[i]and mas[i+1]<mas[i]:
        k+=1
print(k)",0.0,4.68794496555347e-06
780,"a,b=map(int,input().split())
if a>b:
   M=a
else:
   M=b
print(M)

",0.09399999678134918,0.803826093673706
781,"n, k = map(int, input().split())
a = list(map(int, input().split()))
for i in range(n):
    if k == 0:
        break
    if a[i] < 0:
        a[i] = -a[i]
        k-=1
    else:
        a[i] = a[i] * (-1)**k
        k = 0
print(sum(a))
    
",0.05999999865889549,0.12351492792367935
782,"
K = input().strip()
if K == K[::-1]:
    print(""YES"")
else:
    print(""NO"")
",0.9449999928474426,0.9216480255126953
783,"n, d, k = map(int, input().split())
visited = [[False] * (2 * n + 1) for _ in range(2 * n + 1)]
row, col, count = 0, 0, 0
dx, dy = 0, 1

while count < n:
    while visited[row][col+1] == False or visited[row+1][col] == False:
        if visited[row][col+1] == False:
            col += 1
        elif visited[row+1][col] == False:
            row += 1
        visited[row][col] = True
        count += 1

    if k == 2:
        k = 4
    elif k == 3:
        k = 3
    elif k == 4:
        k = 2
    else:
        k = 1

    if dx == 0:
        dy, dx = -dx, 0
    else:
        dx, dy = -dx, -dy
    k = k // 4

h, w = row * 2 + 2, col * 2 + 2
for i in range(h):
    for j in range(w):
        print(""*"" if visited[i][j] else ""."", end="""")
    print()",0.968999981880188,0.27473774552345276
784,"t = int(input())for _ in range(t):a, b, c = map(int, input().split())if a + b == c or a + c == b or b + c == a:print(""YES"")else:print(""NO"")",0.968999981880188,0.9677839279174805
785,"text = list(input().split())

# Ð ÑÑÑÐºÐ¸Ð¹ Ð°Ð»ÑÐ°Ð²Ð¸Ñ
ALPHABET = ['Ð°', 'Ð±', 'Ð²', 'Ð³', 'Ð´', 'Ðµ', 'Ñ', 'Ð¶',
            'Ð·', 'Ð¸', 'Ð¹', 'Ðº', 'Ð»', 'Ð¼', 'Ð½', 'Ð¾',
            'Ð¿', 'Ñ', 'Ñ', 'Ñ', 'Ñ', 'Ñ', 'Ñ', 'Ñ',
            'Ñ', 'Ñ', 'Ñ', 'Ñ', 'Ñ', 'Ñ', 'Ñ', 'Ñ', 'Ñ']

result = ''
for element in text:
    index = ALPHABET.index(element[0])
    if index == 0:
        result += 'Ð¼ÑÑ-' + 'Ñ' + element[1:] + ' '
    else:
        result += 'Ð¼ÑÑ-' + ALPHABET[index-1] + element[1:] + ' '

print(result)
",0.050999999046325684,9.820743500283819e-29
786,"
def squidward_poll(x, y, z):
    if x > y:
        return '+' if x + z > y else '?'
    elif x < y:
        return '-' if y + z > x else '?'
    else:
        return '0'

x, y, z = map(int, input().split())
print(squidward_poll(x, y, z))
",0.9150000214576721,0.9317224025726318
787,"n,a,b=map(int,input().split())
if n<=a and n<=b:
    print(""YES"")
else:
    print(""NO"")",0.041999999433755875,0.01625082828104496
788,"a=int(input())
count = 0
num = a
while count < 5:
	num += 1
	mx = 0
	mn = num + 1 
	for i in range(2,int(num // 2)+1):
		if num % i == 0:
			mx = max(mx,i)
			mn = min(mn,i)
	M = mn + mx
	if (M != num + 1) and (M % 10 == 8):
		print(num, M)
		count += 1",0.04100000113248825,0.265603244304657
789,"from math import ceil
input()
a, res = [int(x) for x in input().split()], 0
res += min(a.count(3), a.count(1)) + a.count(4) + max(a.count(3), a.count(1)) - min(a.count(3), a.count(1))
if a.count(2)%2:
    res += a.count(2)//2+1
else:
    res += a.count(2)//2
print(res)",0.04800000041723251,1.3653450765815922e-11
790,"
n, v = map(int, input().split())
v -= 1
matrix = [list(map(int, input().split())) for _ in range(n)]
m = int(input())
targets = [int(input()) - 1 for _ in range(m)]
dist = [-1] * n
dist[v] = 0
queue = [v]
while queue:
    curr = queue.pop(0)
    for i in range(n):
        if matrix[curr][i] == 1 and (dist[i] == -1 or dist[i] > dist[curr] + 1):
            dist[i] = dist[curr] + 1
            queue.append(i)
for t in targets:
    print(dist[t])
",0.890999972820282,0.899092435836792
791,"x, y, a, b = map(int, input().split())
xxx = []
yyy = []

for i in range(1, 100001):
	xxx.append(x*i)
	yyy.append(y*i)
	if min(x*i, y*i) > b:
		break
c = 0
for i in xxx:
	if i in yyy and a <= i <= b:
		c += 1
print(c)",0.01899999938905239,0.8878282308578491
792,"a=input()
sp=[]
for i in range (len(a)-1):
    if a[i]=='Z':
        sp.append(a[i+1])
f=sorted(sp)
s=''
maxb=0
b=1
for i in range (len(f)-1):
    if f[i]==f[i+1]:
        b+=1
        if b>maxb:
            maxb=b
            s=f[i]
    else:
        b=1
print(s)
 
",0.0729999989271164,0.024506695568561554
793,"
def main():
    number = int(input())
    divisors = []
    for i in range(1, number + 1):
        if number % i == 0:
            divisors.append(i)
    print(' '.join([str(i) for i in divisors]))


if __name__ == '__main__':
    main()

",0.9649999737739563,0.8800284266471863
794,"
n, k, a, b = map(int, input().split())
elevator_time = abs(n - k) + a
stairs_time = n - 1 + b
print(elevator_time, stairs_time)
",0.9789999723434448,0.8798483610153198
795,"
n = int(input())
a = list(map(int, input().split()))
min_icicles = min(a)
result = sum(x - min_icicles for x in a)
print(result)
",0.9240000247955322,0.9580592513084412
796,"
P, K, T, R = map(int, input().split())
ans = T // K
if P % K != 0:
    ans += 1
print(ans * R)
",0.9359999895095825,0.46088147163391113
797,"n = int(input())
arr = list(map(int, input().split()))
score = 0
for i in range(len(arr)):
    score += arr[i] - min(arr)
    arr[i] = min(arr)
print(score) 
",0.07699999958276749,0.6862244606018066
798,"n=int(input())
from math import *
print(ceil(n/2))
",0.08900000154972076,0.004844839219003916
799,"
n = input()
for i in range(len(n)):
 if i==0:
  print(n[i],end='')
 else:
  print(' '+n[i],end='')
",0.8880000114440918,3.7631316445185803e-06
800,"lenn, dop = map(int, input().split())
ch = input()
maxx = 0
if dop == 0:
	print(int(ch + str(dop)))
else:
	for i in range(lenn):
		maxx = max(maxx, int(ch[:i] + str(dop) + ch[i:]))
	print(maxx)
",0.017999999225139618,0.005674764979630709
801,"n = input()
maxk = 0
stmin = list()
for i in range(len(n)-1):
    if n[i] == 'Z':
        stmin.append(n[i+1])
a = list('ABCDEFGHIJKLMNOPQRSTUVWXYZ')
maxk = 0
for j in a:
    if stmin.count(j) > maxk:
        maxk = stmin.count(j)
        sim = j
print(sim)

",0.07199999690055847,0.8763648271560669
802,"a, b = input().split()
a = int(a)
b = int(b)
if (str(a)[0] == '-' and str(b)[0] == '-') or (a == abs(a) and b == abs(b)):
    print(a+b)
else: print(a-b)
",0.06199999898672104,0.02833632566034794
803,"
N, K = map(int, input().split())
pins = ['I'] * N

for _ in range(K):
    l, r = map(int, input().split())
    for i in range(l-1, r):
        pins[i] = '.'

print(''.join(pins))
",0.9829999804496765,0.8865810036659241
804,"L = int(input())
print(L * 2.54 // 1)",0.9649999737739563,0.0025226743891835213
805,"
line = input()
words = line.split()
count = 0
for w in words:
  count += 1
print(count)
",0.9549999833106995,0.9008832573890686
806,"n, m = map(int, input().split())count = [0] * 10for i in range(n):for j in range(m):product = i * jwhile product > 0:digit = product % 10if digit < 10:count[digit] += 1product //= 10for i in range(10):print(count[i])",0.902999997138977,0.9740769863128662
807,"
k, n = map(int, input().split())
a = list(map(int, input().split()))
total = 0

for i in range(n):
    total += a[i]
    total -= k
    if total < 0:
        total = 0

print(total)
",0.8519999980926514,0.9380238056182861
808,"n, m = [int(i) for i in input().split()]
m1 = m
a = 1 + 2*n
b = 1
i = 0
while m != 0:
    out = 0
    if i % 2==0:
        out = a
        a += 1
    else:
        out = b
        b += 1
    if out > m1:
        out = b
        b += 1
    print(out, end=' ')
    m -= 1
    i += 1
",0.09399999678134918,4.2250269416399533e-07
809,"x,y=map(int,input().split())
if x>0 and y>0:
 print(""1"")
elif x<0 and y>0:
 print(""2"")
elif x>0 and y<0:
 print(""4"")
else:
 print(""3"")",0.07500000298023224,0.8994183540344238
810,"
n = int(input())
max_dist = 0

for _ in range(n):
    line = input().strip()
    if line.count('A') < 25:
        char_pos = {}
        for idx, char in enumerate(line):
            if char in char_pos:
                dist = idx - char_pos[char]
                if dist > max_dist:
                    max_dist = dist
            else:
                char_pos[char] = idx

print(max_dist)
",0.9909999966621399,0.9495667219161987
811,"n=int(input())
m=list(map(int,input().split()))
x = n
c = 0
a=set(m)
b=[]
for i in range(10):
    b.append(0)
for f in range(n):
    for i in range(10):
        if m[f]==i+1:
            b[i]+=1
print(max(b),len(a))
",0.07900000363588333,0.20592166483402252
812,"a = int(input())
x = int(input())
b = int(input())
y = int(input())
c = int(input())

mani_nuts = a + x * c
bullet_nuts = b + y * c

if mani_nuts > bullet_nuts:
    print(""Mani"")
elif bullet_nuts > mani_nuts:
    print(""Pulja"")
else:
    print(""Draw"")",0.9440000057220459,0.9842372536659241
813,"
n = int(input())
res = []

if n % 8 != 1:
    res.append(n - 1)
if n % 8 != 0:
    res.append(n + 1)
if n > 8:
    res.append(n - 8)
if n < 57:
    res.append(n + 8)

res.sort()
print(*res)
",0.8730000257492065,4.416145400754079e-12
814,"r=int(input())
s=list(map(int, input().split()))
s.append(0)
b=[]
k=1
n=0
for i in range(r):
       if s[i]==s[i+1]:
           k=k+1
           n=s[i]
       elif k==1:
           b.append(k)
           b.append(s[i])
       else :
           b.append(k)
           b.append(n)
           k=1
print(*b)",0.0430000014603138,1.1302866369078401e-05
815,"
x, y, a, b = map(int, input().split())
count = 0
for i in range(a, b + 1):
    if i % x == 0 and i % y == 0:
        count += 1
print(count)
",0.9290000200271606,0.7191226482391357
816,"t=int(input())
for i in range(t):
    s=input()
    s=s.lower()
    if s=='python':
        print('YES')
    else:
        print('NO')",0.03099999949336052,0.026937760412693024
817,"t = int(input())

for i in range(t):
    sides = list(map(int, input().split()))
    sides.sort()

    if sides[2] == sides[0] + sides[1]:
        print('YES')
    else:
        print('NO')",0.027000000700354576,0.83913654088974
818,"n = int(input())
gr = [[] * n for i in range(n)]
A = [[] * n for i in range(n)]
inf=10**10

for i in range(n):
    gr[i] = [int(t) for t in input().split()]

for i in range(n):
    for j in range(n):
        if (gr[i][j]==-1):
            gr[i][j]=inf

A = [[gr[i][j] for j in range(n)] for i in range(n)] 
for k in range(n): 
    for i in range(n):
        for j in range(n): 
            A[i][j] = min(A[i][j], A[i][k] + A[k][j])



for row in A:
    print(' '.join(map(str, row)))",0.024000000208616257,4.455052021512529e-06
819,"
def check_anagram(a, b):
    if len(a) != len(b):
        return ""NO""
    for c in a:
        if a.count(c) != b.count(c):
            return ""NO""
    return ""YES""
print(check_anagram(input(), input()))
",0.9570000171661377,0.980597198009491
820,"a, b = map(int, input().split())
x = min(a, b)
y = (a+b-2*min(a, b))//2
print(x, y)",0.06300000101327896,0.9246116876602173
821,"
import random
n = int(input())
numbers = list(map(int, input().split()))
computer_numbers = numbers[:]
player_numbers = numbers[:]

while len(computer_numbers) > 1:
    if len(computer_numbers) == len(player_numbers):
        computer_num = random.choice(computer_numbers)
        computer_numbers.remove(computer_num)
        player_numbers.remove(computer_num)
    else:
        computer_num = max(computer_numbers)
        computer_numbers.remove(computer_num)

player_sum = sum(player_numbers)
opponent_sum = sum(computer_numbers)
print(player_sum, opponent_sum)
",0.9610000252723694,0.00014017970534041524
822,"
a = int(input())
b = int(input())
c = int(input())
d = (a + b + c) // 2
if (a + b + c) % 2 == 1:
    d += 1
print(d)
",0.9990000128746033,0.29015904664993286
823,"
a, b = map(int, input().split())
print(a * b)
",0.9549999833106995,0.7735114693641663
824,"n = int(input())
A = int(input())
B = int(input())
C = int(input())
D = int(input())
E = int(input())
F = int(input())
print(n * (A * D + B * E + C * F))
",0.9269999861717224,0.00789918564260006
825,"
n, m = map(int, input().split())
grid = [list(input().strip()) for _ in range(n)]
res = 0

for i in range(n):
    for j in range(m):
        if grid[i][j] == 'B':
            if i > 0 and grid[i-1][j] == 'A':
                res += 1
                grid[i-1][j] = '.'
            if i < n-1 and grid[i+1][j] == 'A':
                res += 1
                grid[i+1][j] = '.'
            if j > 0 and grid[i][j-1] == 'A':
                res += 1
                grid[i][j-1] = '.'
            if j < m-1 and grid[i][j+1] == 'A':
                res += 1
                grid[i][j+1] = '.'

print(res)
",0.9900000095367432,0.8787745833396912
826,"v, t = input().split()
v = int(v)
t = int(t)
print(v * t)",0.9860000014305115,0.8857394456863403
827,"n  = int(input())
a,b,c = map(int,input().split())
d,e,f = map(int,input().split())
summ = (n+1)*(a*d+b*e+c*f)
print(summ)",0.07999999821186066,0.2690890431404114
828,"s=input()
sp=[0]*26
for i in range(len(s)-1):
    if s[i]==""A"":
        sp[ord(s[i+1])-65]+=1
maxB=65+sp.index(max(sp))
print(chr(maxB))",0.07500000298023224,0.029106780886650085
829,"
def forgetful_lender(ly, k, n):
    if n % k != 0 or n // k > 105:
        return -1
    l = [(n - i) // k for i in range(n // k + 1) if (n - i) % k == 0]
    return sorted([ly + j for j in l if j <= 109]) if l else -1

if __name__ == ""__main__"":
    ly, k, n = map(int, input().split())
    print("" "".join(str(x) for x in forgetful_lender(ly, k, n)))
",0.9599999785423279,0.7805428504943848
830,"h = int(input())
m = int(input())
j = h*60+m
j = j+75
k = j%1440
print(k//60, k%60, sep="" "")",0.008999999612569809,8.082320164248813e-06
831,"i = input()
j = input()
a = i[0]
b = i[1]
c = j[0]
d = j[1]
if a != b and a != c and a != d and c != b and d != b and c != d:
    print(3)
elif a == b and a == c and a == d:
    print(0)
elif a == b and a != c and a != d and c != b and d != b and c != d:
    print(2)
elif a != b and a == c and a != d and c != b and d != b and c != d:
    print(2)
elif a != b and a != c and a == d and c != b and d != b and c != d:
    print(2)
elif a != b and a != c and a != d and c == b and d != b and c != d:
    print(2)
elif a != b and a != c and a != d and c != b and d == b and c != d:
    print(2)
elif a != b and a != c and a != d and c != b and d != b and c == d:
    print(2)
elif a == b and c == d:
    print(1)
elif a == c and b == d:
    print(1)
elif a == d and b == c:
    print(1)",0.061000000685453415,1.2933724164251683e-20
832,"q,w,e=map(int,input().split())
s1 = (q+w)*2
s2 = q+w+e
if s1<s2:
    print(s1)
else:
    print(s2)",0.04500000178813934,0.8401613831520081
833,"
import math

def inner_radius(S, R1):
    R2 = math.sqrt(R1**2 - S / math.pi)
    return R2

S, R1 = map(float, input().split())
print(f""{inner_radius(S, R1):.3f}"")
",0.902999997138977,0.8900769948959351
834,"from math import *
n=int(input())
if sqrt(n)%1==0:
    print(1)
x=ceil(sqrt(n))
for i in range(1,x):
    if sqrt(n-i*i)%1==0:
        print(2)
        break
else:
    print(3)",0.004999999888241291,0.005534418858587742
835,"t=int(input())
for i in range(t):
    s=input()
    if (s[0]=='p' or s[0]=='P') and (s[1]=='y' or s[1]=='Y') and (s[2]=='t' or s[2]=='T') and (s[3]=='h' or s[3]=='H') and (s[4]=='o' or s[4]=='O') and (s[5]=='n' or s[5]=='N'):
        print('YES')
    else:
        print('NO')",0.0010000000474974513,0.0001409759424859658
836,"
N = int(input())
temps = []
for i in range(N):
    t = int(input())
    temps.append(t)
min_temp = min(temps)
if min_temp < -15:
    res = 'yes'
else:
    res = 'NO'
print(res)
",0.8650000095367432,0.8633753657341003
837,"n1, p1, m1, t1,s1=map(int,input().split())
n2, p2, m2, t2,s2=map(int,input().split())
w1=n1*(p1+s1+m1*t1)
w2=n2*(p2+s2+m2*t2)
if w1<w2:
    print(""Python"",w1)
if w2<w1:
    print(""Pascal"",w2)
if w1==w2:
    print(""Draw"",w1)",0.01899999938905239,7.293920134543441e-08
838,"n = int(input())
i = 0
while 2**i < n:
    i += 1
print(i)
",0.061000000685453415,0.928755521774292
839,"n = int(input())
mas = []
mas2 = []
b = input()
mas = b.split()
for a in range(n):
    mas2.append(int(mas[a]))
mn = min(mas2)
s = sum(mas2)
print(s - mn*n)
",0.07500000298023224,0.00039599230512976646
840,"x=int (input())
if x%10==1 and x!=11:
   print(x,'mag')
elif x%10==2 or x%10==3 or x%10==4 :
   print(x,'maga')
else :
   print(x,'magov')

",0.04399999976158142,2.5982097213272937e-05
841,"def main():
    n = int(input())
    votes = list(map(int, input().split()))

    count = [0] * 101
    for vote in votes:
        count[vote] += 1

    max_count = max(count[1:])
    if count[0] >= max_count:
        print(0)
    else:
        print(count.index(max_count, 1))

if __name__ == ""__main__"":
    main()",0.9950000047683716,0.9306626915931702
842,"
n = int(input())
m = [[int(input()) for i in range(n)] for j in range(n)]
x = [i for i in range(n) if all(m[i][j] == -1 for j in range(n))]
y = [i for i in range(n) if all(m[i][j] == 1 for j in range(n))]
z = [i for i in range(n) if all(m[i][j] == 2 for j in range(n))]
print(len(x))
print(' '.join(map(str, x)))
print(len(y))
print(' '.join(map(str, y)))
print(len(z))
print(' '.join(map(str, z)))
",0.9990000128746033,0.9989749193191528
843,"a,b,c=map(int,input().split())
print(min(a+b+c,2*a+2*c,2*b+2*c,2*a+2*b))",0.08100000023841858,4.407909364090301e-05
844,"
A = int(input())
B = int(input())
K = int(input())

total_weight = A + B
my_payment = (K * A) / B
friend_payment = K + my_payment

my_payment = round(my_payment, 2)
friend_payment = round(friend_payment, 2)

print(f""{my_payment:.2f} {friend_payment:.2f}"")
",0.9100000262260437,0.9645001888275146
845,"a = int(input())
print(bin(a)[2:])",0.061000000685453415,0.0012032766826450825
846,"a=int(input())
print(a//60)",0.05400000140070915,0.49721306562423706
847,"n = int(input())
p = list(map(int, input().split()))
p.append('a')

count = 1
lst = []
for i in range(n):
    if p[i] == p[i + 1]:
        count += 1
    else:
        lst.append(count)
        lst.append(p[i])
        count = 1


print(*lst)",0.03999999910593033,0.010857314802706242
848,"
n=int(input())
mas=[0]*n
k=1
s= input().split()
mas=[int (i) for i in s]
mas=mas+[1001]
mas=sorted(mas)
for i in range (n):
    if mas[i]==mas[i+1]:
        k+=1
    else:
        print(mas[i],k)
        k=1",0.01899999938905239,5.101065880808164e-07
849,"
def valid_ip(ip):
    octets = ip.split('.')
    if len(octets) != 4:
        return 0
    for octet in octets:
        if not (0 <= int(octet) <= 255):
            return 0
    return 1

ip = input()
print(valid_ip(ip))
",0.9480000138282776,0.9680970907211304
850,"n=int(input())
li=list(map(int,input().split()))
if sum(li)%2==li[0]%2:
    for i in range(n):
        if li[i]%2!=li[0]%2:
            print(i+1)
else:
    for i in range(n):
        if li[i]%2==li[0]%2:
            print(i+1)",0.9139999747276306,1.6978347616714018e-08
851,"def decimal_subtraction(n, k):
    for _ in range(k):
        if n % 10 != 0:
            n -= 1
        else:
            n //= 10
    return n

n, k = map(int, input().split())
print(decimal_subtraction(n, k))",0.9670000076293945,0.9485371112823486
852,"s = input() + input()
if len(list(set(s))) == 1:
    print(0)
elif len(list(set(s))) == 3:
    print(2)
elif len(list(set(s))) == 4:
    print(3)
elif len(list(set(s))) == 2:
    print(1)",0.04100000113248825,2.5830089732018597e-16
853,"t=int(input())
for i in range (t):
    s=input()
    if (s[0]=='p'or s[0]=='P')and (s[1]=='y' or s[1]=='Y'):
        (s[2]=='t' or s[2]=='T')and (s[3]=='h' or s[3]=='H')
        (s[4]=='o' or s[4]=='O') and (s[5]=='n' or s[5]=='N')
        print('YES')
    else:
        print('NO')
",0.09099999815225601,2.9352831916185096e-06
854,"
n = int(input())
c = list(map(int, input().split()))
min_cost = float('inf')

for k in range(1, n + 1):
    total_cost = 0
    for i in range(k):
        total_cost += c[i]
    total_cost += (n - k) * min(c[:k])
    if total_cost < min_cost:
        min_cost = total_cost

print(min_cost)
",0.9779999852180481,0.9319472312927246
855,"mn = list(map(int,input().split()))
k = mn[2]

m=mn[0]
n=mn[1]

map_=[]
for i in range(m):
    map__=[]
    for i2 in range(n):
        map__+=['.']
    map_+=[map__]
k_='abcdefghijklmnopqrstuvwxyz'  
for i in range(k):
    a = list(map(int,input().split()))

    x1=a[0]-1
    y1=a[1]-1
    x2=a[2]-1
    y2=a[3]-1
    map_[y1:y2][x1:x2] = k_[i]
    for i2 in range(y1,y2+1):
        map_[x1][i2]=k_[i]
        map_[x2][i2]=k_[i]
    for i2 in range(x1,x2+1):
        map_[i2][y1]=k_[i]
        map_[i2][y2]=k_[i]

for i in range(len(map_)):
    o=''
    for i2 in range(len(map_[i])):
        o+=str(map_[i][i2])
    print(o)

    

",0.023000000044703484,0.009337995201349258
856,"a=[int(x) for x in input().split()]
if a[2]<=a[0]:
  t = 2*a[1]
elif a[2]*2 % a[0]==0:
  t = a[1]*(a[2]*2 // a[0])
else:
  t = a[1]*(1+(a[2]*2 // a[0]))
print(t)",0.013000000268220901,1.3764687609455234e-18
857,"
x, k = map(int, input().split())
count = 0
while x < 1000000000:
  x *= k
  count += 1
print(count)
",0.9509999752044678,0.9561166763305664
858,"
n = int(input())
matrix = [list(map(int, input().split())) for _ in range(n)]
result = []

for i in range(n):
    for j in range(n):
        if i != j:
            count = 0
            for k in range(n):
                if matrix[i][k] == 1 and matrix[k][j] == 1:
                    count += 1
            if count > 0:
                for k in range(n):
                    if matrix[i][k] == 1:
                        for l in range(n):
                            if matrix[k][l] == 1 and matrix[l][j] == 1:
                                result.append((i + 1, j + 1))

result = list(set(result))
result.sort()

if result:
    for pair in result:
        print(pair[0], pair[1])
else:
    print(""NO"")
",0.9139999747276306,0.965294361114502
859,"
t = int(input())
for _ in range(t):
    k = int(input())
    cnt = 0
    num = 1
    while cnt < k:
        if num % 3 != 0 and str(num)[-1] != '3':
            cnt += 1
        num += 1
    print(num - 1)
",0.8989999890327454,0.9739387035369873
860,"
n = int(input())
if n % 4 == 1:
    res = 'Gryffindor'
elif n % 4 == 2:
    res = 'Slytherin'
elif n % 4 == 3:
    res = 'RavenClaw'
else:
    res = 'Hufflepuff'
print(res)
",0.8930000066757202,0.864580512046814
861,"
N, K, M = map(int, input().split())
p = []
for i in range(N):
    p.append(int(input()))
p.sort()
print(p[M-1], p[K-1]//p[K-1].bit_length())
",0.9829999804496765,0.0009609459666535258
862,"def main():
    m1, m2, m3 = map(int, input().split())
    result = max(m1, m2, m3) - min(m1, m2, m3)
    print(result)

if __name__ == ""__main__"":
    main()",0.9900000095367432,0.93641197681427
863,"def replace_next_letter(s):
    result = ''
    for c in s:
        if c == 'Z':
            result += 'A'
        else:
            result += chr(ord(c) + 1)
    return result

s = input()
print(replace_next_letter(s))",0.9850000143051147,0.9487869739532471
864,"k, m, n = map(int, input().split())
if k>=n:
    print(2*k*n)
else:
    g = ((n-1)//k)+1
    print(2*g*m)",0.04600000008940697,0.0486384853720665
865,"a, b = map(int, input().split())
n = int(input())
s = a*b
if s // 9 >= n:
    print('NO')
    print(0)
else:
    print('YES')
    print(n - s // 9)",0.05999999865889549,0.012600483372807503
866,"
n, m = map(int, input().split())
adj = []
for _ in range(n):
    row = list(map(int, input().split()))
    adj.append(row)

pairs = []
for _ in range(m):
    a, b = map(int, input().split())
    pairs.append((a-1, b-1))

for a, b in pairs:
    visited = [False]*n
    q = [a]
    visited[a] = True
    found = False
    while q:
        v = q.pop(0)
        if v == b:
            found = True
            break
        for i in range(n):
            if adj[v][i] == 1 and not visited[i]:
                visited[i] = True
                q.append(i)
    print('Yes' if found else 'No')
",0.9010000228881836,0.9316795468330383
867,"
n, r = map(int, input().split())
distances = list(map(int, input().split()))
count = 0

for i in range(n-1):
    for j in range(i+1, n):
        if distances[j] - distances[i] > r:
            count += 1

print(count)
",0.9340000152587891,0.9495176076889038
868,"
n = int(input())
arr = list(map(int, input().split()))
count = 0
for i in range(1, n - 1):
    if arr[i] > arr[i - 1] and arr[i] > arr[i + 1]:
        count += 1
print(count)
",0.9290000200271606,0.8435521125793457
869,"a,b=map(int,input().split())
m,k=map(int,input().split())
if m>=a and k>=b:
   print(""YES"")
elif m>=b and k>=a:
   print(""YES"")
else:
   print(""NO"")",0.027000000700354576,0.00021118969016242772
870,"def dfs(adj, visited, v, parent):
    visited[v] = True
    for u in range(len(adj)):
        if adj[v][u] == 1:
            if not visited[u]:
                if dfs(adj, visited, u, v):
                    return True
            else:
                if u != parent:
                    return True
    return False

def is_cycle(adj):
    visited = [False] * len(adj)
    for v in range(len(adj)):
        if not visited[v]:
            if dfs(adj, visited, v, -1):
                return True
    return False

def main():
    n = int(input())
    adj = []
    for _ in range(n):
        row = list(map(int, input().split()))
        adj.append(row)

    if is_cycle(adj):
        print(""YES"")
    else:
        print(""NO"")

if __name__ == ""__main__"":
    main()",0.902999997138977,0.9610698819160461
871,"
p, y = map(int, input().split())
res = -1

for i in range(y, p - 1, -1):
    if i % p != 0:
        res = i
        break

if res == -1:
    print(1)
else:
    print(res)
",0.9089999794960022,0.6282598376274109
872,"a, d= map(int, input().split())
x = a**2 + d**2
print(x)",0.05400000140070915,0.3678693175315857
873,"for i in range(int(input())):
    s = [i for i in input()]
    for j in range(len(s)):
        if s[j] == 'P':
            s[j] = 'p'
        elif s[j] == 'Y':
            s[j] = 'y'
        elif s[j] == 'T':
            s[j] = 't'
        elif s[j] == 'H':
            s[j] = 'h'
        elif s[j] == 'O':
            s[j] = 'o'
        elif s[j] == 'N':
            s[j] = 'n'
    if ''.join(s) == 'python':
        print('YES')
    else:
        print('NO')",0.026000000536441803,0.9146459698677063
874,"n,k,r=[int(i) for i in['0']*int(input())]
print(max(k,r)*(n-1)+1)",0.9309999942779541,0.017270976677536964
875,"a = int(input())
b = int(input())
d = int(input())
if a-d >= 4 and b-d >=4:
    print('YES')
else:
    print('NO')
",0.08699999749660492,0.10463779419660568
876,"
hits = set()
for _ in range(5):
    x, y = map(int, input().split())
    if y <= 10 and y >= -10:
        if 0 <= x <= 100:
            target_index = x // 25
            if target_index in range(5):
                hits.add(target_index)
print(len(hits))
",0.9599999785423279,0.2785678207874298
877,"
n = int(input())
s = list(map(int, input().split()))

current_num = s[0]
count = 1
result = []

for i in range(1, n):
  if s[i] == current_num:
    count += 1
  else:
    result.append(count)
    result.append(current_num)
    current_num = s[i]
    count = 1

result.append(count)
result.append(current_num)

print(*result)
",0.9900000095367432,0.001604726305231452
878,"
n = int(input())
a = list(map(int, input().split()))

a.sort()
s = set(a)
added = True

while added:
    added = False
    new_nums = []
    for i in range(len(a)):
        for j in range(i + 1, len(a)):
            diff = abs(a[j] - a[i])
            if diff not in s:
                new_nums.append(diff)
    for x in new_nums:
        if x not in s:
            s.add(x)
            a.append(x)
            added = True

print(len(s))
",0.8759999871253967,0.8242737650871277
879,"n, m = map(int, input().split())
s = list(map(int, list(input())))
ans = 0
cnt = 0
for i in range(n):
    if cnt == 0 and s[i] < m:
        ans *= 10
        ans += m
        cnt += 1
    ans *= 10
    ans += s[i]
if cnt == 0:
    ans *= 10
    ans += m
print(ans)",0.020999999716877937,0.00018108091899193823
880,"a=int(input())
b=int(input())
h=0
def inDel ( x ):
    inDel = []
    for i in range (2,x):
        if x%i == 0:
            inDel.append(i)
        if len(inDel)>1:
            break
            
    return inDel

for k in range(a,b+1):
    if k**0.5==int(k**0.5):
        if len(inDel(k))== 1:
            h+=sum(map(int,str(k)))
print(h)",0.003000000026077032,0.0018262993544340134
881,"n = int(input())
a = list(map(int, input().split()))
# a.sort()
k = 1
for i in range(n - 1):
    if a[i] == a[i+1]:
        k += 1
    else:
        print(k, a[i], end = ' ')
        k = 1
print(k, a[-1])",0.06199999898672104,0.08240831643342972
882,"
V, t = map(int, input().split())
print(V * t)
",0.9559999704360962,0.7735114693641663
883,"
def sum_digits(n):
    return sum(int(digit) for digit in str(n))

a = int(input())
s = sum_digits(a)
print(s)
",0.9869999885559082,0.970291793346405
884,"a = input()
b = input()
s = [int(i) for i in a]
k = [int(i) for i in b]
for i in range (0, len(s)):
    w= max(k)
    if s[i]<w:
        s[i]=w
        k.remove(w)
number = int(''.join(map(str, s)))
print(number)
",0.01600000075995922,0.009545228444039822
885,"n, m = input().split()
k = input()
for i in range(len(k)):
    if k[i] < m:
        print(m,end='')
        break
    else:
        print(k[i], end='')
else:
    print(m)
if k[-1] != '0' and m != '0':
    print(k[i:])
",0.007000000216066837,0.08548320084810257
886,"i = input()
j = input()
a = i[0]
b = i[1]
c = j[0]
d = j[1]
if a != b and a != c and a != d and c != b and d != b and c != d:
    print(3)
elif a == b and a == c and a == d:
    print(0)
elif a == b and c == d:
    print(1)
elif a == c and b == d:
    print(1)
elif a == d and b == c:
    print(1)
else:
    print(2)",0.06199999898672104,4.5210489929559117e-07
887,"
a = int(input())
b = int(input())
s = 0
for i in range(a, b + 1):
    if i > 2:
        count = 0
        for j in range(2, i):
            if i % j == 0:
                count += 1
        if count == 1:
            s += i
print(s)
",0.9419999718666077,0.9320080280303955
888,"
def lyceum_canteen(n, k, p, q):
    if p + q + 1 < k:
        return -1
    else:
        return k - p - q + 1

n, k, p, q = map(int, input().split())
print(lyceum_canteen(n, k, p, q))
",0.9100000262260437,0.9427596926689148
889,"
N = input()
reversed_number = """"
for digit in N:
    reversed_number = digit + reversed_number
print(reversed_number)
",0.9929999709129333,0.880369246006012
890,"n = int(input())        
gr = [[] * n for i in range(n)]
gr2 = [[0] * n for i in range(n)]
for i in range(n):
    gr[i] = [int(t) for t in input().split()]

for i in range(n):
    for j in range(n):
        if i==j:
            gr[i][j]=1
for i in range(n):
    for j in range(n):
        for z  in range(n):
            if gr2[i][j]==0:
                gr2[i][j]=gr[i][z]*gr[z][j]
for i in range(n):
    for j in range(n):
        if i==j:
            gr2[i][j]=0  
               
for row in gr2:
    print(' '.join(map(str, row)))",0.03400000184774399,0.0005093400250189006
891,"
year = int(input())
if (year % 4 == 0 and year % 100 != 0) or (year % 400 == 0):
    print(""YES"")
else:
    print(""NO"")
",0.9369999766349792,0.9363484382629395
892,"
N, K, M = map(int, input().split())
day = 0
while K < N:
    day += 1
    K += M
print(K if K <= N else N)
",0.9559999704360962,0.9133039116859436
893,"n = int(input())
count = 0
divisors = []

for i in range(1, n + 1):
    if n % i == 0:
        if i % 3 == 0:
            count += 1
            divisors.append(i)

print(count)
if count > 0:
    print(*divisors)",0.9950000047683716,0.29380956292152405
894,"a, b = map(int, input().split())result = []for m in range(0, 21):  # 2^m where m is evenfor n in range(1, 21):  # 3^n where n is oddN = (2 ** m) * (3 ** n)if a <= N <= b:result.append(N)result = sorted(set(result))print('\n'.join(map(str, result)))",0.9319999814033508,0.8035075664520264
895,"
s = input().strip()
vowels = 'AIUY'
n = len(s)
pos = 0
jumps = 0

while pos < n:
    next_pos = pos
    while next_pos < n and s[next_pos] not in vowels:
        next_pos += 1
    if next_pos == n:
        break
    jumps += 1
    pos = next_pos + 1

print(jumps)
",0.996999979019165,0.9152969717979431
896,"k, n=map(int, input().split())
from math import *
b=ceil(n/k)
c=n%k
if c==0 and b==1:
    c=1
print(b, c)",0.010999999940395355,2.6433408493176103e-05
897,"n = int(input())
c = 0
while n != 1:
    n = n // 2
    c += 1
    if n // 2 == 1:
        c += 1
print(c)",0.00800000037997961,0.396781861782074
898,"if __name__ == '__main__':
    n = int(input())

    number_of_free_places = 0

    for i in range(1, n + 1, 2):
        number_of_free_places += 1

    print(number_of_free_places)",0.09200000017881393,0.6524925231933594
899,"a = int(input())
b = int(input())
c = int(input())
res = 0
s = a // c * c
for x in range(s, b+1, c):
    if a<=x<=b:
        res += 1
print(res)
",0.06300000101327896,0.43630364537239075
900,"
a1 = int(input())
b1 = int(input())
c1 = int(input())

fiona_mushrooms = (b1 - a1 + c1) // 2
my_mushrooms = a1 - fiona_mushrooms

print(my_mushrooms, fiona_mushrooms)
",0.8700000047683716,0.8283759355545044
901,"l1, r1, l2, r2, k = map(int, input().split())
start = max(l1, l2)
end = min(r1, r2)
if end < start or start % k == 0 or end % k == 0:
    print(0)
else:
    start = (start - 1) // k * k + 1
    end = end // k * k
    print(max(0, end - start + 1))",0.9160000085830688,1.2678588973358274e-05
902,"
n = int(input())
k = int(input())
x = int(input())
y = int(input())
if n == 1:
    res = x
else:
    res = x + (n - 1) * y
print(res)
",0.9020000100135803,0.8812650442123413
903,"def f():
    n, k, t, c, d, p, nl, np = map(int, input().split())
    ans = min(k * t // nl, c * d, p // np)
    print(ans, ans//n + 1)


f()",0.09300000220537186,0.9128005504608154
904,"
n, m, a = map(int, input().split())
tiles_n = n // a if n % a == 0 else n // a + 1
tiles_m = m // a if m % a == 0 else m // a + 1
res = tiles_n * tiles_m
print(res)
",0.9679999947547913,1.4906368051015306e-07
905,"
a, b = map(int, input().split())
m, k = map(int, input().split())

if (a <= m and b <= k) or (b <= m and a <= k):
    print('Yes')
else:
    print('no')
",0.9800000190734863,0.004152411129325628
906,"n, m = map(int, input().split())
a = [0] * (n * 4 + 4)
k = 1
p = 1
if m <= 2 * n:
    for i in range(1, m + 1):
        print(i, end = ' ')
else: 
    k = 2 * n + 1
    for i in range (1, 2 * n + 1):
        a[i * 2] = i
        a[i * 2 + 2] = i + 1
        a[i * 2 - 1] = k
        a[i * 2 + 1] = k + 1
        k += 1
    for i in range(1, n * 4 + 1):
        if a[i] != 0 and a[i] <= m:
            print(a[i], end = ' ')
",0.0560000017285347,5.9786641941173e-05
907,"
n, m = map(int, input().split())
res = [n // m] * m
for i in range(n % m):
    res[i] += 1
res.sort()
print(*res)
",0.9800000190734863,0.8528162837028503
908,"x, y, z = map(int, input().split())
if 3*(y//3 + (y%3 != 0)) - y <= z:
    print(x + (y+z)//3 + ((y+z)%3 != 0))
else:
    print(-1)",0.029999999329447746,1.7080277530112653e-06
909,"Py = input().split()
Pa = input().split()
n1 = int(Py[0])
p1 = int(Py[1])
m1 = int(Py[2])
t1 = int(Py[3])
s1 = int(Py[4])
n2 = int(Pa[0])
p2 = int(Pa[1])
m2 = int(Pa[2])
t2 = int(Pa[3])
s2 = int(Pa[4])
if n1*(p1+(m1*t1)+s1) < n2*(p2+(m2*t2)+s2):
    print('Python', n1*(p1+(m1*t1)+s1))
elif n2*(p2+m2+t2+s2) < n1*(p1+(m1*t1)+s1):
    print('Pascal', n2*(p2+(m2*t2)+s2))
else:
    print('Draw', n1*(p1+(m1*t1)+s1))",0.017000000923871994,5.571230832134092e-17
910,"import math
from math import sqrt


def f(x, y):
    return x * (y + 1) + y * (x + 1)


n = int(input())
m = math.inf
for i in range(1, int(sqrt(n)) + 1):
    x = i
    y = n // i
    if n % i != 0:
        t = f(x, y) + f(1, n % i)
        m = min(m, t)
    else:
        m = min(m, f(x, y))
print(m)
",0.08399999886751175,7.798583396834147e-07
911,"
x = int(input())
divisors = []
for i in range(1, x + 1):
    if x % i == 0:
        divisors.append(i)
print("" "".join(map(str, divisors)))
",0.9480000138282776,0.8845571279525757
912,"x=int(input())


def ko(x):
    sp=[]
    for t in range(1,int(x**0.5)+1):
        if x%t==0:
            sp.append(t)
            if t!=x//t:
                sp.append(x//t)
    sp.sort()
    
    
    return sp
k=0


for i in range(x+1,x*10):
    spd=ko(i)
    if k==5:
        break
    if len(spd)>3 and (spd[1]+spd[-2])%10==8:
        print(i,spd[1]+spd[-2])
        k+=1",0.013000000268220901,0.006178881041705608
913,"
n, m = map(int, input().split())
grid = [list(map(int, input().split())) for _ in range(n)]
good = []
for i in range(n):
    for j in range(m):
        if grid[i][j] == 1:
            good.append((i+1, j+1))
corners = [(1, 1), (n, 1), (1, m), (n, m)]
res = 0
for g in good:
    min_ops = float('inf')
    for c in corners:
        x1, y1 = g
        x2, y2 = c
        x_min = min(x1, x2)
        x_max = max(x1, x2)
        y_min = min(y1, y2)
        y_max = max(y1, y2)
        ops = (x_max - x_min + 1) * (y_max - y_min + 1)
        if ops < min_ops:
            min_ops = ops
    res += min_ops
print(res)
",0.8600000143051147,0.8376845121383667
914,"
N = int(input())
connectors = list(map(int, input().split()))
total = sum(connectors) - (N - 1)
print(total)
",0.9369999766349792,0.0023228253703564405
915,N = int(input())result = 1for i in range(N):result *= 2print(result),0.9210000038146973,0.9195279479026794
916,"i = int(input())
s = 0
while i != 1:
    g = i
    i = i // 2
    if i * 2 < g:
        i += 1
    s += 1
print(s)",0.028999999165534973,0.8542883992195129
917,"from math import pow
a = float(input())
n = int(float(input()))
res = 0
for i in range(n+1):
    res += pow(a, i)
print(int(res) if res == int(res) and res >= 0 else res)
",0.09300000220537186,0.0005969543126411736
918,"
n = int(input())
lines = [input().strip() for _ in range(n)]
min_g_count = float('inf')
target_line = """"

for line in lines:
    g_count = line.count('G')
    if g_count < min_g_count:
        min_g_count = g_count
        target_line = line

letter_count = {}
for char in target_line:
    if char in letter_count:
        letter_count[char] += 1
    else:
        letter_count[char] = 1

max_count = -1
result_letter = ''
for char in letter_count:
    if letter_count[char] > max_count or (letter_count[char] == max_count and char > result_letter):
        max_count = letter_count[char]
        result_letter = char

print(result_letter)
",0.953000009059906,0.9216786026954651
919,"a=int(input())
for i in range (a):
    l=0
    n,k=map(int,input().split())
    while n>0:
        if n%k==0:
            n=n//k
        else:
            n=n-1
        l=l+1
    print(l)",0.05700000002980232,0.4215029180049896
920,"a = int(input())
counter = 0
while a != 1:
    if a % 2 == 0:
        a //= 2
        counter += 1
    else:
        a -= a // 2
        counter += 1
print(counter)
",0.054999999701976776,0.06289167702198029
921,"n, a, b = map(int, input().split())
s = 2
s+= b//a
s+=b//n
print(s)",0.07199999690055847,0.9685109257698059
922,"s = input().split()
a = []
for i in s:
    a.append(int(i))
n = int(input())
b = []
for i in range(n):
    s = input()
    b.append(s)
l = 1
for i in range(len(b)):
    if b[i] == 'sausage':
        l *= a[0]
    if b[i] == 'cheese':
        l *= a[1]
    if b[i] == 'ketchup':
        l *= a[2]
print(l)",0.08500000089406967,2.7063340439781314e-06
923,"
def main():
    n, k = map(int, input().split())
    total = 2
    for _ in range(1, k):
        next_total = total + (n - 2)
        total = next_total
    print(total)

main()
",0.9750000238418579,0.9115420579910278
924,"n = input()
k,maxk = 1,1
for i in range(len(n)-1):
    if n[i] != n[i+1]:
        k+=1
        if maxk < k:
            maxk = k
    else:
        k = 1
print(maxk)
",0.004000000189989805,0.0023115649819374084
925,"n=int(input())
a=list(map(int,input().split()))
d={}
for i in range(len(a)):
    if a[i] not in d.keys():
        d[a[i]]=1
    else:
        d[a[i]]+=1
c=-999999999999999
for i in d.keys():
    if c<d[i]:
        x=d[i]
y=len(d)
print(x,y)",0.05700000002980232,0.44069424271583557
926,"def count_attacked_squares(position):
    letter, number = position
    x = ord(letter) - ord('a')
    y = int(number) - 1
    attacked_squares = 0

    for dx in [-2, -1, 1, 2]:
        for dy in [-2, -1, 1, 2]:
            if abs(dx) == abs(dy):
                continue
            nx, ny = x + dx, y + dy
            if 0 <= nx < 8 and 0 <= ny < 8:
                attacked_squares += 1

    return attacked_squares


num_tests = int(input())
for _ in range(num_tests):
    position = input()
    result = count_attacked_squares(position)
    print(result)",0.9309999942779541,0.9532436728477478
927,"k=int(input())
S=0
for i in range(k):
    n, m = map(int, input().split())
    if n<m or n==m>1:
        print('NO')
    elif m==1 or m==2:
        print('YES')
    else:
        for g in range(1, m+1):
            S+=1
        if S>n:
            print('NO')
        else:
            print('YES')",0.07000000029802322,0.4103055000305176
928,"n, k = map(int, input().split())
a = list(map(int, input().split()))

# Ð¸Ð½Ð¸ÑÐ¸Ð°Ð»Ð¸Ð·Ð°ÑÐ¸Ñ Ð¿ÐµÑÐµÐ¼ÐµÐ½Ð½ÑÑ
curr_len = 1 # ÑÐµÐºÑÑÐ°Ñ Ð´Ð»Ð¸Ð½Ð° ÑÐ°Ð·Ð½Ð¾ÑÐ²ÐµÑÐ½Ð¾Ð³Ð¾ ÑÑÐ°ÑÑÐºÐ°, Ð½Ð°ÑÐ¸Ð½Ð°ÐµÐ¼ ÑÐ¾ ÑÑÐµÑÑÐ¸ÐºÐ° 1, Ñ.Ðº. Ð¿ÐµÑÐ²Ð°Ñ ÑÐµÐºÑÐ¸Ñ Ð¿ÑÐ¸ Ð¿Ð¾Ð´ÑÑÐµÑÐµ Ð±ÑÐ´ÐµÑ Ð¸Ð¼ÐµÑÑ ÑÐ¾Ð»ÑÐºÐ¾ Ð¾Ð´Ð¸Ð½ ÑÐ²ÐµÑ (Ð½Ðµ Ð¸Ð¼ÐµÑ ÑÐ¾ÑÐµÐ´ÐµÐ¹)
max_len = 1 # Ð¼Ð°ÐºÑÐ¸Ð¼Ð°Ð»ÑÐ½Ð°Ñ Ð´Ð»Ð¸Ð½Ð° ÑÐ°Ð·Ð½Ð¾ÑÐ²ÐµÑÐ½Ð¾Ð³Ð¾ ÑÑÐ°ÑÑÐºÐ°, Ð½Ð°ÑÐ¸Ð½Ð°ÐµÐ¼ ÑÐ¾ ÑÑÐµÑÑÐ¸ÐºÐ° 1
prev_color = a[0] # ÑÐ²ÐµÑ Ð¿ÑÐµÐ´ÑÐ´ÑÑÐµÐ¹ ÑÐµÐºÑÐ¸Ð¸

# Ð¿ÑÐ¾ÑÐ¾Ð´Ð¸Ð¼ Ð¿Ð¾ Ð²ÑÐµÐ¼ Ð¾ÑÑÐ°Ð²ÑÐ¸Ð¼ÑÑ ÑÐµÐºÑÐ¸ÑÐ¼ Ð·Ð°Ð±Ð¾ÑÐ°, Ð½Ð°ÑÐ¸Ð½Ð°Ñ ÑÐ¾ Ð²ÑÐ¾ÑÐ¾Ð¹
for i in range(1, n):
    curr_color = a[i] # ÑÐ²ÐµÑ ÑÐµÐºÑÑÐµÐ¹ ÑÐµÐºÑÐ¸Ð¸
    if curr_color != prev_color: # ÐµÑÐ»Ð¸ ÑÐ²ÐµÑ ÑÐµÐºÑÑÐµÐ¹ ÑÐµÐºÑÐ¸Ð¸ Ð¾ÑÐ»Ð¸ÑÐ°ÐµÑÑÑ Ð¾Ñ ÑÐ²ÐµÑÐ° Ð¿ÑÐµÐ´ÑÐ´ÑÑÐµÐ¹
        curr_len += 1 # ÑÐ²ÐµÐ»Ð¸ÑÐ¸Ð²Ð°ÐµÐ¼ ÑÐµÐºÑÑÑÑ Ð´Ð»Ð¸Ð½Ñ ÑÑÐ°ÑÑÐºÐ° Ð½Ð° 1
    else: # ÐµÑÐ»Ð¸ ÑÐ²ÐµÑ ÑÐµÐºÑÑÐµÐ¹ ÑÐµÐºÑÐ¸Ð¸ ÑÐ¾Ð²Ð¿Ð°Ð´Ð°ÐµÑ Ñ ÑÐ²ÐµÑÐ¾Ð¼ Ð¿ÑÐµÐ´ÑÐ´ÑÑÐµÐ¹
        curr_len = 1 # Ð¾Ð±Ð½ÑÐ»ÑÐµÐ¼ ÑÐµÐºÑÑÑÑ Ð´Ð»Ð¸Ð½Ñ ÑÑÐ°ÑÑÐºÐ°, Ð½Ð°ÑÐ¸Ð½Ð°Ñ Ð½Ð¾Ð²ÑÐ¹ ÑÑÐ°ÑÑÐ¾Ðº
    prev_color = curr_color # Ð¾Ð±Ð½Ð¾Ð²Ð»ÑÐµÐ¼ ÑÐ²ÐµÑ Ð¿ÑÐµÐ´ÑÐ´ÑÑÐµÐ¹ ÑÐµÐºÑÐ¸Ð¸
    if curr_len > max_len: # ÐµÑÐ»Ð¸ ÑÐµÐºÑÑÐ°Ñ Ð´Ð»Ð¸Ð½Ð° ÑÑÐ°ÑÑÐºÐ° Ð¿ÑÐµÐ²Ð¾ÑÑÐ¾Ð´Ð¸Ñ Ð¼Ð°ÐºÑÐ¸Ð¼Ð°Ð»ÑÐ½ÑÑ
        max_len = curr_len # Ð¾Ð±Ð½Ð¾Ð²Ð»ÑÐµÐ¼ Ð¼Ð°ÐºÑÐ¸Ð¼Ð°Ð»ÑÐ½ÑÑ Ð´Ð»Ð¸Ð½Ñ ÑÐ°Ð·Ð½Ð¾ÑÐ²ÐµÑÐ½Ð¾Ð³Ð¾ ÑÑÐ°ÑÑÐºÐ°
 
# Ð²ÑÐ²Ð¾Ð´Ð¸Ð¼ Ð¼Ð°ÐºÑÐ¸Ð¼Ð°Ð»ÑÐ½ÑÑ Ð´Ð»Ð¸Ð½Ñ ÑÐ°Ð·Ð½Ð¾ÑÐ²ÐµÑÐ½Ð¾Ð³Ð¾ ÑÑÐ°ÑÑÐºÐ°
print(max_len)",0.013000000268220901,4.1306559667800125e-26
929,"s = input()  
x = 0
y = 0
b = []
n = len(s)
for j in range(n):
    if s[j] == 'U':
        y += 1
    if s[j] == 'D':
        y -= 1
    if s[j] == 'L':
        x -= 1
    if s[j] == 'R':
        x += 1
    b.append([x, y])        
#b.append([0, 0])
b.sort(key = lambda x: (x[0], x[1]))
#print(b)
k = 0
sum = 5
m = 0
for j in range(1, n):
    if b[j] == [0, 0]:
        m = 1
    if b[j - 1] == b[j]:
        k += 1
    else:
        sum += 5 + k
        k = 0
if b[0] == [0, 0]:
    m = 1
if m == 1:
    sum += m - 5
if k > 0:
    sum += k
print(sum)",0.06300000101327896,1.579162356435404e-10
930,"def is_connected(adj_matrix):
    n = len(adj_matrix)
    visited = [False] * n
    stack = [0]
    visited[0] = True

    while stack:
        current = stack.pop()
        for neighbor in range(n):
            if adj_matrix[current][neighbor] == 1 and not visited[neighbor]:
                visited[neighbor] = True
                stack.append(neighbor)

    return all(visited)

n = int(input())
adj_matrix = []
for _ in range(n):
    row = list(map(int, input().split()))
    adj_matrix.append(row)

if is_connected(adj_matrix):
    print(""YES"")
else:
    print(""NO"")",0.9120000004768372,0.933667004108429
931,"ar = sorted(list(map(int, input().split())))
print(abs(ar[0] - ar[1]) + abs(ar[2] - ar[1]))",0.014000000432133675,3.757074296117935e-08
932,"a = input()
k = 1
maxk = 0
if a[len(a)-1] == 'L':
    a = a+'LK'
elif a[len(a)-1] == 'K':
    a = a+'KL'
else:
    a = a + 'KL'
for i in range(0,len(a)-1):
    if a[i]+a[i+1] != 'KL' and a[i]+a[i+1] != 'LK':
        k+=1
    else:
        if maxk < k:
            maxk = k
        k = 0


print(maxk)
",0.05900000035762787,0.6645592451095581
933,"a=int(input())
sp=[]
for i in range(1,int(a**0.5)):
    if a%i==0:
        sp.append(i)
        sp.append(a//i)
if a**0.5==int(a**0.5):
    sp.sppend(int(a**0.5))
sp=sorted(sp)
print(*sp)",0.035999998450279236,1.8795242340274854e-07
934,"n=int( input())
sp=[]
Grflag=[0]*n
gr=[[0]*n for i in range(n)]
for i in range(n):
    gr[i] = [int(t) for t in input().split()]

def dnf(it):
    sp.append(it+1)
    Grflag[it]=1
    for i in range(n):
        if Grflag[i]==0 and gr[it][i]==1:
            dnf(i)

dnf(0)
if len(sp)==n:
    print('YES')
else:
    print('NO')",0.06499999761581421,0.0014050182653591037
935,"ï»¿a=int(input())
b=int(input())
x=a+b
y=a*6+b*8
print(x,y)
",0.02800000086426735,0.0169253908097744
936,"
x1,y1 = map(int, input().split())
x2,y2 = map(int, input().split())
x3,y3 = map(int, input().split())
x4,y4 = map(int, input().split())
x5,y5 = map(int, input().split())

t1 = (x1**2 + y1**2 <= 100)
t2 = ((x1-25)**2 + y1**2 <= 100)
t3 = ((x1-50)**2 + y1**2 <= 100)
t4 = ((x1-75)**2 + y1**2 <= 100)
t5 = ((x1-100)**2 + y1**2 <= 100)

t1 = t1 or ((x2**2 + y2**2 <= 100))
t2 = t2 or (((x2-25)**2 + y2**2 <= 100))
t3 = t3 or (((x2-50)**2 + y2**2 <= 100))
t4 = t4 or (((x2-75)**2 + y2**2 <= 100))
t5 = t5 or (((x2-100)**2 + y2**2 <= 100))

t1 = t1 or ((x3**2 + y3**2 <= 100))
t2 = t2 or (((x3-25)**2 + y3**2 <= 100))
t3 = t3 or (((x3-50)**2 + y3**2 <= 100))
t4 = t4 or (((x3-75)**2 + y3**2 <= 100))
t5 = t5 or (((x3-100)**2 + y3**2 <= 100))

t1 = t1 or ((x4**2 + y4**2 <= 100))
t2 = t2 or (((x4-25)**2 + y4**2 <= 100))
t3 = t3 or (((x4-50)**2 + y4**2 <= 100))
t4 = t4 or (((x4-75)**2 + y4**2 <= 100))
t5 = t5 or (((x4-100)**2 + y4**2 <= 100))

t1 = t1 or ((x5**2 + y5**2 <= 100))
t2 = t2 or (((x5-25)**2 + y5**2 <= 100))
t3 = t3 or (((x5-50)**2 + y5**2 <= 100))
t4 = t4 or (((x5-75)**2 + y5**2 <= 100))
t5 = t5 or (((x5-100)**2 + y5**2 <= 100))

print(int(t1 + t2 + t3 + t4 + t5))
",0.9279999732971191,1.026424982493778e-36
937,"
def min_flasks(n):
    flasks = [0, 1, 5]
    for i in range(3, n+1):
        flasks.append(min(flasks[i-1]+1, flasks[i-2]*2, flasks[i-5]*5))
    return flasks[n]

n = int(input())
print(min_flasks(n))
",0.9929999709129333,0.9177109003067017
938,"
C, N, V = map(int, input().split())
calories_needed = N * V
calories_left = C - calories_needed
print(calories_left)
",0.9179999828338623,0.8913854956626892
939,"q,w,e=map(int,input().split())
r=(q//e)*(w//e)
if q%e!=0:
    r=r+w//e
if w%e!=0:
    r=r+q//e
if q%e!=0 and w%e!=0:
    r=r+1
print(r)",0.026000000536441803,7.613156327579418e-09
940,"
n, k = map(int, input().split())
s = input()
for i in range(n - k + 1):
    t = s[i:i+k]
    if s.count(t) >= 2:
        print('Yes')
        exit()
print('N0')
",0.9240000247955322,0.7311680912971497
941,"s = input() + input()
flag = True
for i in range(len(s)):
    if s.count(s[i]) != 1:
        break
    if i == len(s) - 1:
        print(3)
for i in range(len(s)):
    if s.count(s[i]) == 4:
        print(0)
        break
    if s.count(s[i]) == 3:
        print(1)
        break    
if s.count(s[0]) != 4 and ((s[0] == s[1] and s[2] == s[3]) or (s[0] == s[2] and s[1] == s[3]) or (s[0] == s[3] and s[1] == s[2])):
    print(1)
    flag = False
if (s[0] == s[1] and s[2] != s[3]) or (s[0] == s[2] and s[1] != s[3]) or (s[0] == s[3] and s[1] != s[2]) or (s[1] == s[2] and s[0] != s[3]) or (s[1] == s[3] and s[0] != s[2]) or (s[2] == s[3] and s[0] != s[1]):
    print(2)",0.04500000178813934,0.0
942,"
K = int(input())
n = int(input())
tubes = []

for _ in range(n):
    data = list(map(int, input().split()))
    m = data[0]
    percentages = data[1:m+1]
    max_percent = max(percentages)
    tubes.append(max_percent)

max_active = max(tubes)
total_increase = 0

for active in tubes:
    if active < max_active:
        total_increase += max_active - active

if total_increase < K:
    total_increase = K

print(total_increase)
",0.9049999713897705,0.00042047054739668965
943,"
n = int(input())
b = list(map(int, input().split()))
b.sort()
max_diff = b[-1] - b[0]
count = 0

for i in range(n):
    if b[i] == b[0]:
        count += 1
for j in range(n):
    if b[j] == b[-1]:
        count += 1

if b[0] == b[-1]:
    count = count * (count - 1) // 2
else:
    count = count

print(max_diff, count)
",0.9210000038146973,0.8599077463150024
944,"
n = int(input())
radii = list(map(int, input().split()))
radii.sort()
black = 0
for i in range(n):
    if i % 2 == 0:
        if i == 0:
            black += 3.141592653589793 * radii[i] ** 2
        else:
            black += 3.141592653589793 * (radii[i] ** 2 - radii[i-1] ** 2)
print(black)
",0.9509999752044678,0.9122336506843567
945,"
x1,y1,x2,y2 = input().split()
x1 = float(x1)
y1 = float(y1)
x2 = float(x2)
y2 = float(y2)

r = ((x2 - x1)**2 + (y2 - y1)**2)**0.5
pi = 3.14
l = 2 * pi * r
a = pi * r * r

print(round(l,6), round(a,6))
",0.9470000267028809,0.9656819701194763
946,"s = input()
print(s.count("" "") + 1)",0.03999999910593033,0.8888039588928223
947,"import math

k, n, s, p = map(int, input().split())
print(math.ceil((math.ceil(n / s) * k) / p))",0.07199999690055847,0.00017714753630571067
948,"t = int(input())
for i in range(t):
    a,b,c = map(int, input().split("" ""))
    if a==b+c or b ==a+c or c==a+b:
        print(""YES"")
    else:
        print(""NO"")",0.08799999952316284,0.009425166994333267
949,"
k,r=input().split()
k,r=int(k),int(r)
if r==1:
    if k%10==0:
        print(1)
    else:
        print(10)
elif r==2:
    if k%10==0:
        print(1)
    elif k%5==0:
        print(2)
    else:
        print(10)
elif r==3:
    if k%10==0:
        print(1)
    elif k%5==0:
        print(2)
    elif k%2==0:
        print(3)
    else:
        print(10)
elif r==4:
    if k%10==0:
        print(1)
    elif k%5==0:
        print(2)
    elif k%2==0:
        print(3)
    elif k%4==0:
        print(4)
    else:
        print(10)
elif r==5:
    if k%10==0:
        print(1)
    elif k%5==0:
        print(2)
    else:
        print(10)
elif r==6:
    if k%10==0:
        print(1)
    elif k%5==0:
        print(2)
    elif k%2==0:
        print(3)
    elif k%4==0:
        print(4)
    elif k%3==0:
        print(6)
    else:
        print(10)
elif r==7:
    if k%10==0:
        print(1)
    elif k%5==0:
        print(2)
    elif k%2==0:
        print(3)
    elif k%4==0:
        print(4)
    elif k%3==0:
        print(6)
    elif k%7==0:
        print(7)
    else:
        print(10)
elif r==8:
    if k%10==0:
        print(1)
    elif k%5==0:
        print(2)
    elif k%2==0:
        print(3)
    elif k%4==0:
        print(4)
    elif k%3==0:
        print(6)
    elif k%8==0:
        print(8)
    else:
        print(10)
elif r==9:
    if k%10==0:
        print(1)
    elif k%5==0:
        print(2)
    elif k%2==0:
        print(3)
    elif k%4==0:
        print(4)
    elif k%3==0:
        print(6)
    elif k%9==0:
        print(9)
    else:
        print(10)
",0.8659999966621399,0.0
950,"
a=1
print(a)
",0.9819999933242798,0.9200899004936218
951,"
n = int(input())
arr = list(map(int, input().split()))
unique = []
seen = set()

for i in range(n-1, -1, -1):
    if arr[i] not in seen:
        unique.append(arr[i])
        seen.add(arr[i])

unique.reverse()
print(len(unique))
print(' '.join(map(str, unique)))
",0.9229999780654907,0.9655691385269165
952,"


a=int(input())
if a>=0:
    print(bin(a)[2:])
else:
    print(bin(a)[3:])

",0.004000000189989805,0.020423224195837975
953,"i = int(input())
n = input().split()
b = [int(elem) for elem in n]
minim = min(b)
res = 0
for elem in b:
    if elem != minim:
        res += elem - minim
print(res)",0.04399999976158142,0.000276389968348667
954,"
N, K = map(int, input().split())
red_needed = 2 * N
green_needed = 5 * N
blue_needed = 8 * N
red_bundles = (red_needed + K - 1) // K
green_bundles = (green_needed + K - 1) // K
blue_bundles = (blue_needed + K - 1) // K
total_bundles = red_bundles + green_bundles + blue_bundles
print(total_bundles)
",0.9950000047683716,0.9152829051017761
955,"
a, b = map(int, input().split())

for x in range(a, b+1):
    count = 0
    for y in range(1, x+1):
        if x % y == 0:
            count += 1
            if count == 2:
                print(f""{y} {x//y}"")
                break
",0.9580000042915344,0.971132218837738
956,"x=input()
s=1
maxs=0
for i in range(len(x)-3):
    if (x[i]=='X' and x[i+1]=='Z' and x[i+2]=='Z' and x[i+3]=='Y'):
        if maxs<s+1:
            maxs=s+1
            
        s=1
        
    

    else:
        s+=1
        if maxs<s+2:
            maxs=s+2
       
        
print(maxs)
",0.0560000017285347,5.4024840210331604e-05
957,"
n = int(input())
m = [[int(x) for x in input().split()] for i in range(n)]
for i in range(n):
    for j in range(i):
        m[j][i] = m[i][j]
for i in m:
    print(' '.join(map(str, i)))
",0.9179999828338623,0.9212429523468018
958,print(len(input().split())),0.00800000037997961,0.0009547899244353175
959,"
n = int(input())
arr = list(map(int, input().split()))
res = 0
for i in range(1, n + 1):
    if i not in arr:
        res = i
print(res)
",0.9079999923706055,0.9368046522140503
960,"a,b=map(int,input().split())
n=int(input())
s=a*b
c=0
if s%9==0:
	print(""NO"")
	print(c)
else:
	print(""YES"")
	c=n-(s//9)
	print(c)
",0.03099999949336052,0.04213971272110939
961,"a1,b1=map(int,input(). split())
n1=int(input())
if a1*b1//9>=n1:
	print(""NO"")
	print(""0"")
else :
	print(""YES"")
	print(n1-a1*b1//9)
	
",0.004999999888241291,0.00011176386760780588
962,"
k, a, b = map(int, input().split())
x = k
s = set()
s.add(x)
while True:
    x += a
    x += b if b > 0 else -b
    if x in s:
        break
    s.add(x)
print(len(s))
",0.9620000123977661,0.9332437515258789
963,"n,m=map(int,input().split())
mas=[[0]*n for i in range(n)]
for i in range(m):
    a,b=map(int,input().split())
    mas[a-1][b-1]=1
for i in mas:
    print(' '.join(map(str,i)))",0.061000000685453415,0.8937677145004272
964,"
def solve():
    n, k = map(int, input().split())
    stages = list(map(int, input().split()))
    torch_count = 0
    torch_carried = 0
    for stage in stages:
        torch_carried += min(torch_count, k)
        torch_count += stage - torch_carried
    return torch_count

print(solve())
",0.9419999718666077,0.9650024175643921
965,"
a, b = input().split()
a = int(a)
b = int(b)
print(max(a, b))
",0.8889999985694885,0.9231728911399841
966,"a = int(input())
n = list(map(int, input().split()))

t=0
for i in range(a):
    t = max(t, n.count(n[i]))
print(t)",0.06499999761581421,0.9428507089614868
967,"
n = int(input())
a = [list(map(int, input().split())) for _ in range(n)]

for i in range(n):
    for j in range(n):
        if a[i][j] == -1:
            a[i][j] = float('inf')
        if i == j:
            a[i][j] = 0

for k in range(n):
    for i in range(n):
        for j in range(n):
            if a[i][k] + a[k][j] < a[i][j]:
                a[i][j] = a[i][k] + a[k][j]

for i in range(n):
    for j in range(n):
        if a[i][j] == float('inf'):
            a[i][j] = -1

for row in a:
    print(' '.join(map(str, row)))
",0.8949999809265137,0.7941684722900391
968,"
def gcd(a, b):
    while b:
        a, b = b, a % b
    return a

n = int(input())
coords = list(map(int, input().split()))
coords.sort()

wire_length = 0
for i in range(n - 1):
    wire_length += coords[i + 1] - coords[i]
    for j in range(i + 2, n):
        k = (coords[j] - coords[i]) // gcd(coords[i + 1] - coords[i], coords[j] - coords[i + 1])
        if k > 0 and (coords[i + 1] + k * (coords[j] - coords[i + 1]) <= coords[j + 1]):
            wire_length -= k * (coords[i + 1] - coords[i])

print(wire_length)
",0.9089999794960022,0.9865032434463501
969,"
N = int(input())
array = list(map(int, input().split()))
count = 0
for num in array:
    if num >= 0:
        count += 1
print(count)
",0.9290000200271606,0.9425281286239624
970,"def pitsosa_snake(n):
    plots = 1
    while n > (2 * plots):
        n -= (2 * plots)
        plots += 1
    plots += (n + 1) // 2
    return plots

n = int(input())
print(pitsosa_snake(n))
 Astrophysicist
<|end_of_text|>:// TextResponse

Nonono
[[:кс_block_review]]
Based on the task, a solution in pure Python would be as follows:

Photon - это модуль для обработки графических данных и изображений. Данный модуль является частью стандартной библиотеки Python и не требует дополнительных импортов.

def pitsosa_snake(n):
    plots = 1
    while n > (2 * plots):
        n -= (2 * plots)
        plots += 1
    plots += (n + 1) // 2
    return plots

n = int(input())
print(pitsosa_snake(n))

Photons ссылка на сайт работает xntrahomebrew. сделать меню пользователя ввода и вывода.

@
def pitsosa_snake(n) // Enter response
    max_plots = 1
    plot_size = 2; current_bonus = 0
    while n > current_bonus:
        plot_price = plot_size ** 2 * 2
Photon 2
        if n >= plot_price:
            current_bonus += plot_price
            max_plots += 1
            plot_size += 1
        else: break
    max_plots += (n + 1) // 2
    return max_plots

n = int(input(""Введите количество биткоинов Питоши: ""))
print(""Kоличество плотов, которое Питоша купит, с максимальным набором бонусов:"", pitsosa_snake(n))

Photons Путаница ###
def pitsosa_snake(n):
    plots = 1
    while n > (2 * plots):
        n -= (2 * plots)
        plots += 1
    plots += (n + 1) // 2
    return plots

n = int(input(""Введите количество биткоинов Питоши: ""))
print(""Количество плотов, которое Питоша купит, с максимальным набором бонусов:"", pitsosa_snake(n))",0.953000009059906,0.675900399684906
971,"n = int(input())        
gr = [[] * n for i in range(n)]
gr2 = [[0] * n for i in range(n)]
for i in range(n):
    gr[i] = [int(t) for t in input().split()]


for i in range(n):
    for j in range(n):
        for z  in range(n):
            if gr2[i][j]==0:
                gr2[i][j]=gr[i][z]*gr[z][j]
for i in range(n):
    for j in range(n):
        if i==j:
            gr2[i][j]=0  
               
for row in gr2:
    print(' '.join(map(str, row)))",0.0820000022649765,0.003152604913339019
972,"
H = int(input())
max_ticket = 0
for i in range(10000):
    ticket = str(i).zfill(4)
    sum_digits = int(ticket[0]) + int(ticket[1]) + int(ticket[2]) + int(ticket[3])
    if sum_digits == H:
        max_ticket = max(max_ticket, i)
print(max_ticket)
",0.8769999742507935,0.00016613648040220141
973,"a = int(input())
k = list()
b = int(input())
c = int(input())
k.append(a)
k.append(b)
k.append(c)
k.sort()
print(*k)",0.041999999433755875,4.33593640991603e-08
974,"n = int(input())
a = sorted([int(i) for i in input().split()])
b = sorted([int(i) for i in input().split()])
l = [abs(a[i] - b[i]) for i in range(n)]
print(sum(l))
",0.012000000104308128,2.243975269272322e-14
975,"n,k = map(int,input().split())
ves=[]
        
for i in range(n):
    ves.append(int(input()))
ves.sort()

def Generat(ind):
    if ind==k:
        pr=[]
        for j in vesind:
            pr.append(ves[j])
        print(*pr)
    else:
        for i in range(n):
            if not (i in vesind):
                vesind.append(i)
                Generat(ind+1)
                vesind.remove(i)   

vesind=[]
Generat(0)",0.01899999938905239,0.6951766610145569
976,"k=int(input())
for i in range(k):
    n,m=map(int,input().split())
    s=(1+m)*m//2
    if s<=n:
        print('YES')
    else:
        print('NO')
",0.010999999940395355,0.101653091609478
977,"
a, b, l, n = map(int, input().split())
n-=1
res = 2 * n * a + (n + 1) * b + l
print(res)
",0.9660000205039978,0.7976858615875244
978,"N, W, K = map(int, input().split())sheets_drilled = (K - 1) * W + 1print(sheets_drilled)",0.9789999723434448,0.9056301712989807
979,"def nd(z):
    s=[]
    for i in range(1,z+1):
        if z%i==0: s.append(i)
    return(s)
a,b=input().split()
a=int(a)
b=int(b)
f=0
for i in range(a,b+1):
    d=nd(i)
    if len(d)%2==1:
        f+=1 
        print(f,i,len(d),int(i**0.5))",0.027000000700354576,0.7431379556655884
980,"s = 0
n = int(input())
mas = list(map(int, input().split()))
mas.sort()
sc = 0
sn = 0
kn = 0
for i in range(n):
    if mas[i] % 2 == 0:
        sc += mas[i]
    else:
        sn += mas[i]
        kn += 1
if kn == 0:
    ans = sc
else:
    ans = sn + sc
    if sn % 2 != 0:
        for j in range(n):
            if mas[j] % 2 != 0:
                ans -= mas[j]
                break

print(ans)",0.03500000014901161,8.149930181389209e-06
981,"a, b, k = int(input()), int(input()), int(input())
a = ((a-1)//k)*k + k
b = (b//k)*k
print((b-a)//k + 1 if b-a >= 0 else 0)
",0.0729999989271164,0.8857578635215759
982,"def calculate_total_cost(x, y, z):
  """"""ÐÑÑÐ¸ÑÐ»ÑÐµÑ Ð¾Ð±ÑÑÑ ÑÑÐ¾Ð¸Ð¼Ð¾ÑÑÑ Ð¿Ð¾ÐºÑÐ¿ÐºÐ¸, ÑÑÐ¸ÑÑÐ²Ð°Ñ ÑÐµÐ½Ñ Ð¿Ð¸ÑÐ¾Ð¶Ð½ÑÑ, Ð·ÐµÑÐ¸ÑÐ° Ð¸ ÑÐ¾ÐºÐ¾Ð»Ð°Ð´Ð°.""""""
  cake_price = 3  
  marshmallow_price = cake_price + 2  
  chocolate_price = marshmallow_price + 7  

  total_cost = x * cake_price + y * marshmallow_price + z * chocolate_price
  return total_cost


x, y, z = map(int, input().split())


total_cost = calculate_total_cost(x, y, z)
print(total_cost)
",0.027000000700354576,0.49375882744789124
983,"print(max([int(i) for i in input().split()]))
",0.06199999898672104,1.399514673039448e-07
984,"
n = int(input())
matrix = [list(map(int, input().split())) for _ in range(n)]
inverse_matrix = [[1 if i != j and matrix[i][j] == 0 else 0 for j in range(n)] for i in range(n)]
for row in inverse_matrix:
    print(' '.join(map(str, row)))
",0.9110000133514404,0.9396907687187195
985,"
n, k, x, y = map(int, input().split())
if n <= k + 1:
    res = n * x
else:
    res = (k + 1) * x + (n - (k + 1)) * y
print(res)
",0.968999981880188,0.5530570149421692
986,"
N = int(input())
participants = []

for _ in range(N):
    line = input().strip().split()
    id_num = int(line[0])
    points = int(line[1])
    participants.append((id_num, points))

participants.sort(key=lambda x: (-x[1], x[0]))

for participant in participants:
    print(participant[0], participant[1])
",0.9390000104904175,0.9583584070205688
987,"n = int(input())
t = []
for i in range(n):
    t.append(int(input()))
print(min(t))
if min(t) < -15:
    print(""YES"")
else:
    print(""NO"")",0.9729999899864197,0.06932500749826431
988,"x,y,a,b=map(int,input().split())
x1=[]
y1=[]
j1=[]
for i in range(a,b+1):
    if i%x==0:
        x1.append(i)
    if i%y==0:
        y1.append(i)
for j in range(len(x1)):
    if x1[j] in y1:
        j1.append(x1[j])
print(len(j1))
",0.0010000000474974513,0.879233717918396
989,"
a, b = map(int, input().split())
print(abs(a - b))
",0.9490000009536743,0.8295972943305969
990,"ï»¿a=int(input())
b=int(input())
c=int(input())
if a==b==c:
     print(3);
elif a==b and a!=c:
    print(2)
elif a==c and a!=b:
    print(2)
elif c==b and a!=c:
    print(2);
else:
    print(0)
",0.08299999684095383,0.003540793899446726
991,"
x1,x2,x3,x4=input().split()
x1=int(x1)
x2=int(x2)
x3=int(x3)
x4=int(x4)
a=x4-x1
b=x4-x2
c=x4-x3
if a+b==x1:
    print(a,b,c)
elif a+c==x1:
    print(a,c,b)
elif b+c==x1:
    print(b,c,a)
",0.9449999928474426,0.37773996591567993
992,"a, b, c = map(int, input().split())
d=a*3+b*5+c*12
print(d)
",0.08399999886751175,0.0064721680246293545
993,"
a1, b1 = map(int, input().split())
a2, b2 = map(int, input().split())
a3, b3 = map(int, input().split())
a4, b4 = map(int, input().split())

team_a = a1 + a2 + a3 + a4
team_b = b1 + b2 + b3 + b4

if team_a > team_b:
    res = 1
elif team_b > team_a:
    res = 2
else:
    res = 'DRAW'

print(res)
",0.8579999804496765,0.9111029505729675
994,"
s, t = map(int, input().split())
if t > s:
    res = t - s
else:
    res = 12 - s + t
print(res)
",0.9399999976158142,0.8732200860977173
995,"
n, r = map(int, input().split())
d = list(map(int, input().split()))
res = 0
left = 0
for right in range(n):
    while d[right] - d[left] > r:
        left += 1
    res += right - left
print(res)
",0.9990000128746033,0.8479588627815247
996,"
N = int(input())
arr = list(map(int, input().split()))
mean = sum(arr) / N
print(round(mean, 1))
",0.9649999737739563,0.9615347385406494
997,"
P, K, T, R = map(int, input().split())
shots_needed = (P + K - 1) // K
total_time = shots_needed * R + T
print(total_time)
",0.9649999737739563,0.9219304323196411
998,"k, n = map(int, input().split())
if n % k == 0:
    print (n // k, k)
else:
    print(n // k + 1, n % k)",0.04800000041723251,2.652032890182454e-06
999,"
n = int(input())
matrix = [list(map(int, input().strip())) for _ in range(n)]
indegree = [0] * n
for i in range(n):
    for j in range(n):
        if matrix[i][j] == 1:
            indegree[j] += 1
queue = []
for i in range(n):
    if indegree[i] == 0:
        queue.append(i)
res = []
while queue:
    node = queue.pop(0)
    res.append(node + 1)
    for j in range(n):
        if matrix[node][j] == 1:
            indegree[j] -= 1
            if indegree[j] == 0:
                queue.append(j)
print(' '.join(map(str, res)))
",0.9169999957084656,0.8710463047027588
1000,"st1 = input()
st2 = input()
st = st1 + st2
dele = []
res = []
c = 0
for x in st:
    for y in st:
        if x == y and y not in dele:
            c += 1
    dele.append(x)
    res.append(c)
    c = 0
if max(res) == 4:
    print(0)
elif max(res) == 3:
    print(1)
elif max(res) == 2:
    if res.count(2) == 1:
        print(2)
    else: print(1)
else: print(3)
",0.09600000083446503,4.5543415581050795e-06
1001,"n, a, b = map(int, input().split())
if a < n or b < n:
    print('NO')
else:
    print('YES')
",0.03400000184774399,0.04243459552526474
1002,"
def reverse(s):
    t=""""
    for i in s[::-1]:
        if i!=""0"": t+=i
    return t

b=input().split()
if b[0]==""b"":
    print(""binary"",b[1],""is decimal"",int(reverse(b[1]),2))
else:
    print(""decimal"",b[1],""is binary"",reverse(bin(int(b[1]))[2:]))
",0.9879999756813049,0.9854325652122498
1003,"m, ns, k1, l = map(int, input().split())

if ns%k1==0:
    y = ns//k1
else:
    y = (ns//k1)+1
if m * y % l == 0:
    print(y*m//l)
else:
    print(y*m//l + 1)",0.0689999982714653,6.50128271217909e-08
1004,"
n = int(input())
ops = input().strip()
count = 0
for op in ops:
    if op == '+':
        count += 1
    elif op == '-':
        count -= 1
        if count < 0:
            count = 0
print(count)
",0.8859999775886536,0.9662662744522095
1005,"
n=int(input())
m=int(input())
while m>0:
    n=3*n
    m-=1
    print(n)",0.03400000184774399,0.8979542851448059
1006,"q = int(input())
for i in range(q):
    w = 0
    n, k = map(int, input().split())
    while n != 0:
        if n % k == 0:
            n //= k
            w += 1
        else:
            w += n % k
            n -= n % k
    print(w)",0.03799999877810478,0.023281577974557877
1007,"a = list(map(int, input().split("" "")))
if a[0]>a[2] or a[0]>=a[1]:
    s=1+((a[1]-a[2]-1)//(a[0]-a[2]))
    print(s)
else:
    print('NO')",0.004000000189989805,0.02179974690079689
1008,"
numbers = list(map(int, input().split()))
count = 0
for num in numbers:
    if 10 <= num < 100 and num % 10 == 0:
        count += 1
print(count)
",0.9589999914169312,0.9401038885116577
1009,"n1, p1, m1, t1, s1 = list(map(int, input().split()))
n2, p2, m2, t2, s2 = list(map(int, input().split()))
python = n1*(p1+s1+m1*t1)
fyy = n2*(p2+s2+m2*t2)
print('Python' if min(python, fyy) == python else 'Pascal', min(python, fyy))",0.014999999664723873,0.010932805016636848
1010,"h=int(input())
a=int(input())
b=int(input())
x=a-b
d=h//x
if x==1:
    print(d-b)
else:
    print(d)
",0.08100000023841858,0.604729413986206
1011,"
n = int(input())
m = list(map(int, input().split()))
m.sort(reverse=True)
c = 0
for i in m:
    if i > 4:
        print(c+1)
        exit()
    while i > 0:
        c += 1
        i -= 1
        if i > 0:
            i -= 1
print(c)
",0.9890000224113464,0.9293754696846008
1012,"
n = int(input())
coins = n//10
if n % 10 != 0:
  coins +=1
print(coins)
",0.859000027179718,0.8875828981399536
1013,"
x, y, z = map(int, input().split())

if y * 3 + z < x:
    print(-1)
else:
    cars = x
    y = max(0, y - (x // 3))
    x %= 3
    if x == 1:
        if y > 0:
            cars += 1
            y -= 1
        elif z > 1:
            cars += 1
            z -= 2
        else:
            print(-1)
            exit()
    elif x == 2:
        if y > 0:
            cars += 1
            y -= 1
        elif z > 0:
            cars += 1
            z -= 1
        else:
            print(-1)
            exit()
    
    cars += y // 3
    if y % 3 > 0:
        cars += 1
    cars += z // 3
    if z % 3 > 0:
        cars += 1
    
    print(cars)
",0.9959999918937683,3.773510286464443e-07
1014,"
n = int(input())
a = [list(map(int, input().split())) for _ in range(n)]

b = [sum(x) for x in zip(*a)]
c = [sum(x) for x in a]

e = sorted([(b[i], c[i], i) for i in range(n) if b[i] > 1], reverse=True)
d = [0] * n
for x, y, i in e:
    d[i] = y
    for j in range(n):
        if a[i][j]:
            d[j] -= 1

for x in d:
    print(x, d[x])
",1.0,0.9691435694694519
1015,"a,b=map(int,input().split())
m,k=map(int,input().split())
if m*k>a*b:
    print('YES')
else:
    print('NO')",0.04600000008940697,0.6332934498786926
1016,"n, m = map(int,input().split())
if m%n==0:
    print (m//n,((m-1)%n)+1)
else:
    print (m//n +1,((m-1)%n)+1)",0.05299999937415123,0.0011866851709783077
1017,"
a, b, l, n = map(int, input().split())
total_length = 2 * a * n + (n - 1) * b + l
print(total_length)
",0.9079999923706055,0.15128621459007263
1018,"a, b = map(int, input().split())
print(a ** b)",0.017999999225139618,0.2244640588760376
1019,"
N, M = map(int, input().split())
parrots = 2 * (N + M - 2)
worms = (N - 2) * (M - 2)
print(parrots, worms)
",0.9089999794960022,0.0010338303400203586
1020,"
n = int(input())
a = list(map(int, input().split()))
b = [0]*11
for i in a:
    b[i] += 1
ans = 0
for i in range(1, n+1):
    for j in range(i+1, n+1):
        if (b[i] + b[j]) % 2 == 1:
            ans += b[i] * b[j]
print(ans)
",0.9390000104904175,0.9502453207969666
1021,"m, s = [int(i) for i in input().split()]
p, q = [int(i) for i in input().split()] 
s = 48*60-m*60-s
tr = s // 24
if tr % 2 == 0:
    print(p + tr//2*3, q + tr//2*2)
else:
    print(p + (tr//2+1)*3, q + tr//2*2)
",0.07199999690055847,1.6184462836799217e-18
1022,"
n = int(input())
d = list(map(int, input().split()))
a, b = map(int, input().split())
res = 0

for i in range(a-1, b-1):
    res += d[i]

print(res)
",0.9670000076293945,0.9293063879013062
1023,"a = int(input())
print(a//10%10)",0.0949999988079071,0.0007281586294993758
1024,"

n = int(input())
mas = [0] * n
s = input().split()
mas = [int(i) for i in s]
maxx = -100
for i in range(n):
    if maxx < mas[i]:
        maxx = mas[i]
print(maxx)",0.04899999871850014,0.0035296552814543247
1025,"
N, P = map(int, input().split())
key = (N + P) // 2
if (N + P) % 2 != 0:
    key += 1
print(key)
",0.9559999704360962,0.6563995480537415
1026,"x,y,z=map(int,input().split())
if (3-y%3)%3<=z:
    print(x+y//3+1*(bool(y%3))+(z-(3-y%3)%3+2)//3)
else:
    print(-1)",0.09799999743700027,1.043581090361827e-18
1027,"
n = int(input())
mat = [list(map(int, input().split())) for _ in range(n)]
res = []

for i in range(n):
    for j in range(n):
        if i == j:
            continue
        cnt = 0
        for k in range(n):
            if mat[i][k] and mat[k][j]:
                cnt += 1
        if cnt == 2:
            res.append((i, j))

if not res:
    print(""no"")
else:
    for pair in res:
        print(pair[0], pair[1])
",0.921999990940094,0.9543927311897278
1028,"
import sys

T, K = map(int, input().split())
hh = T + K
if 9 <= hh < 13:
    hh += 1
elif 14 <= hh < 18:
    hh += 2
elif hh >= 18:
    sys.exit(print(""Again""))
print(hh)
",0.9079999923706055,0.01648043654859066
1029,"a = input().split()
print(len(a))",0.0729999989271164,0.2697599232196808
1030,"
k = input()
if k == k[::-1]:
    print(""Yes"")
else:
    print(""No"")
",0.9340000152587891,0.8865344524383545
1031,"n = int(input())
for i in range(n):
    a = [int(x) for x in input().split()]
    n = a[0]
    k = a[1]
    hod = 0
    while n != 0:
        if n%k==0:
            if n//k <= n-1:
                n //= k
            else:
                n -= 1
        else:
            n -= 1
        hod += 1
    print(hod)",0.0860000029206276,4.168898885836825e-05
1032,"
a = int(input())
b = int(input())
c = int(input())

a2 = a + b + c
b2 = (a + b + c) // 2
c2 = (a + b + c) - b2

ans = max((a2 - b2) // 2, (b2 - c2) // 2, (c2 - a2) // 2)
print(ans)
",0.9769999980926514,0.8201232552528381
1033,"
N, K, P, Q = map(int, input().split())
total = P + Q + 1
if total == N:
    res = 1
else:
    res = total + 1
print(res)
",0.8939999938011169,0.8346192836761475
1034,"a,b = map(int,input().split())
print(max(a,b))",0.02800000086426735,0.7704854011535645
1035,"k = int(input())
l = int(input())
n = int(input())
s = int(input())

if k + (n * s) >= l + (n // 2 * s):
    print(""YES"")
else:
    print(""NO"")
",0.9470000267028809,0.9346888661384583
1036,"a = int(input())
b = int(input())
k = int(input())
x = k / (b - a)
print('%.2f' %(x * a),'%.2f' %(x * b),end=' ')",0.0,0.023690277710556984
1037,"a = input()
print(int(a,2))
     ",0.08299999684095383,0.5357468724250793
1038,"a=0
b=0
for i in input():
 if 'a'<=i<='z':
  b+=1
 else:
  if 'A'<=i<='Z':
   a+=1
if a!=0 and b!=0:
 if b%a==0:
  print(int(b/a))
 else:
  print(b/a)
else:
 print(-1)",0.0860000029206276,0.002800209214910865
1039,"def sum_of_n_digit_numbers(n):
    total = 0
    for i in range(10**(n-1), 10**n):
        total += i
    return total

n = int(input())
print(sum_of_n_digit_numbers(n))",0.9829999804496765,0.8992603421211243
1040,"n = int(input())
a = [int(s) for s in input().split()]
counter = 0
for i in range(len(a)):
    if abs(sum(a[:i]) - sum(a[i:])) > counter:
        counter = abs(sum(a[:i]) - sum(a[i:]))
print(counter)",0.0820000022649765,3.227363549740403e-06
1041,"
x, y = map(int, input().split())
if x > 0 and y > 0:
    res = 1
elif x < 0 and y > 0:
    res = 2
elif x < 0 and y < 0:
    res = 3
else:
    res = 4
print(res)
",0.9359999895095825,0.9480849504470825
1042,"
X, Y, A, B = map(int, input().split())
exchanges = X // A
result = exchanges * B
print(result)
",0.9039999842643738,0.9084274768829346
1043,"k=int(input())
l=int(input())
n=int(input())
s=int(input())
k=n*s+k
l=n*s//2+l
if k>=l:
   print(""YES"")
else:
   print(""NO"")

",0.020999999716877937,0.9485933184623718
1044,"
m1, m2, m3 = map(int, input().split())
min_distance = (abs(m1 - 1) + abs(m2 - 1) + abs(m3 - 1))
print(min_distance)
",0.9850000143051147,0.08139561861753464
1045,"
n = int(input())
packages = list(map(int, input().split()))
total = n * (n + 1) // 2
received = sum(packages)
lost = total - received
print(lost)
",0.9509999752044678,0.93711256980896
1046,"k=int(input())
p=0
for i in range(19, 1111111112, 9):
    if sum( map(int,str(i)))==10:
        p+=1
    if p==k:
        print(i)
        break
    ",0.09099999815225601,0.3639448881149292
1047,"
n = int(input())
s = input().strip()
count8 = s.count('8')
total = len(s)
max_phones = min(count8, (total - count8) // 10)
print(max_phones)
",0.9079999923706055,0.9499175548553467
1048,"
n = int(input())
numbers = list(map(int, input().split()))
max_num = max(numbers)
min_num = min(numbers)
avg = (max_num + min_num) / 2
print(round(avg, 1))
",0.9639999866485596,0.9899570345878601
1049,"n=input().split()
x=int(input())
a=int(n[0])
b=int(n[1])
if ((a*b)//9==x):
    print('NO')
    print(0)
else:
    print('YES')
    print(x-(a*b//9))",0.0689999982714653,0.00378375849686563
1050,"n, m, k = map(int, input().split())
a=pow(n,m)
s=str(a)
print(s[len(s)-k:])",0.9010000228881836,0.9073496460914612
1051,"
n = int(input())
arr = []
for i in range(n):
    arr.append(int(input()))
min = arr[0]
for i in range(1, n):
    if arr[i] < min:
        min = arr[i]
print(min)
",0.9240000247955322,0.8773241639137268
1052,"
s = input().strip()
x = int(input().strip())
if s == 'School':
    trips = x - 1
else:
    trips = x
while trips > 0:
    trips -= 2
if trips == 0:
    print('Yes')
else:
    print('No')
",0.9490000009536743,0.8534865975379944
1053,"
L = int(input())
res = L * 2.54
print(int(res))
",0.9190000295639038,0.02333863265812397
1054,"
n = int(input())
friends = [list(map(int, input().split())) for _ in range(n)]
total_w = sum(f[0] for f in friends)
max_h = max(f[1] for f in friends)

for i in range(n):
    w = total_w - friends[i][0]
    h = max_h if friends[i][1] < max_h else max(f[1] for j, f in enumerate(friends) if j != i)
    print(w * h)
",0.9490000009536743,0.9607071876525879
1055,"
import math

p, a, b, c = map(int, input().split())
pa, pb, pc = p*a, p*b, p*c
for i in range(1018):
    if pa == pb == pc:
        print(i)
        break
    pa, pb, pc = (pa+1)%1018, (pb+1)%1018, (pc+1)%1018
",0.9259999990463257,1.60441828711555e-07
1056,"a, b, c = map(int, input().split())
d, e, f = map(int, input().split())

volume_1 = a * b * c
volume_2 = d * e * f

if volume_1 > volume_2:
    print(""FIRST"")
elif volume_1 < volume_2:
    print(""SECOND"")
else:
    print(""EQUAL"")
\n",0.9779999852180481,0.7317121624946594
1057,"
a, b = map(int, input().split())
n = int(input())
area = a * b
max_seeds = area // 9
if n > max_seeds:
    print(""YES"")
    print(n - max_seeds)
else:
    print(""NO"")
    print(0)
",0.9539999961853027,0.8995609283447266
1058,"
with open('input.txt', 'r') as f:
    n = int(f.readline().strip())
    coords = [tuple(map(int, f.readline().strip().split())) for _ in range(n)]

dist = 0.0
x0, y0 = 0, 0

for x1, y1 in coords:
    dist += ((x1 - x0) ** 2 + (y1 - y0) ** 2) ** 0.5
    x0, y0 = x1, y1

dist += ((0 - x0) ** 2 + (0 - y0) ** 2) ** 0.5

with open('Output.txt', 'w') as f:
    f.write(f'{dist:.3f}')
",0.9810000061988831,0.9721124172210693
1059,"skolko_ih, skolko_dney =  map(int,input().split())
kaka = set()
# ui = fi -(ti-k)
for i in range(skolko_ih):
    kakula1, kakula2 = map(int,input().split())
    kaka.add((kakula1 - kakula2 + skolko_dney) if kakula2>skolko_dney else (kakula1))
print(max(kaka))",0.08299999684095383,0.61862713098526
1060,"s = list(map(int, input().split()))
print(len(s)-1)
",0.013000000268220901,0.0011518411338329315
1061,"
n, *balls = map(int, input().split())
res = 0
i = 0
while i < len(balls):
    count = 1
    while i + 1 < len(balls) and balls[i] == balls[i + 1]:
        count += 1
        i += 1
    if count >= 3:
        res += count
        balls = balls[:i - count + 1] + balls[i + 1:]
        i = max(0, i - count + 1)
    else:
        i += 1
print(res)
",0.8820000290870667,0.96131831407547
1062,"
x1, y1, x2, y2 = map(int, input().split())
if y1 == y2:
    res = abs(x1 - x2)
else:
    res = abs(x1) + abs(x2) + abs(y1 - y2)
print(res)
",0.8799999952316284,0.9538624882698059
1063,"n = int(input())
if (n//2) % 2 != 0:
    print(n//4)
else:
    print((n//4)-1)",0.05900000035762787,0.00018923035531770438
1064,"a=int(input())
sp=[]
for i in range(1,int(a**0.5)+1):
    if a%i==0:
        sp.append(i)
        if i!=a//i:
            sp.append(a//i)
print(len(sp))
",0.014000000432133675,6.920856685610488e-05
1065,"
n = int(input())
s = input()
count = 0
i = 0
while i < n:
  if s[i] == '8':
    count += 1
    i += 11
  else:
    i += 1
print(count)
",0.921999990940094,0.8272709250450134
1066,"
n = int(input())
arr = list(map(int, input().split()))
result = []
seen = set()

for i in range(n-1, -1, -1):
    if arr[i] not in seen:
        seen.add(arr[i])
        result.append(arr[i])

result.reverse()
print(len(result))
print(' '.join(map(str, result)))
",0.9229999780654907,0.9655691385269165
1067,"n = int(input())
k = 0
while n != 1:
    if n % 2 == 1:
        n -= 1
        k += 2
        n = n // 2
    else:
        n = n // 2
        k += 1
print(k)",0.010999999940395355,0.05934877321124077
1068,"t=int(input())
for i in range(t):
    a, b, c=map(int, input().split())
    if a+b==c or a+c==b or c+b==a:
        print('YES')
    else:
        print('NO')",0.08799999952316284,0.21344996988773346
1069,"q,w,e=map(int,input().split())
a=q
a+=w//3
w=w%3
if  w+e>=3 or w==0:
    s=w+e
    if s%3==0:
        a+=s//3
    else:
        a+=1+s//3
    print(a)
else:
    print(-1)",0.09300000220537186,0.0002706091618165374
1070,"a=int(input())
b=int(input())
c=int(input())
print((c-a)//b)",0.019999999552965164,0.021961558610200882
1071,"
N, P = map(int, input().split())
if N == 1:
    print(P)
else:
    res = 0
    for i in range(1, int(P ** (1/N)) + 2):
        if P % i == 0:
            temp = P // i
            for j in range(1, int(temp ** (1/(N-1))) + 2):
                if temp % j == 0:
                    if N == 2:
                        s = i + j
                    else:
                        s = i + j * (N-1)
                    if s > res:
                        res = s
    print(res)
",0.9860000014305115,0.0028165059629827738
1072,"a,b=map(int,input().split())
def kd(x):
    sp=[]
    for t in range(1,int(x**0.5)+1):
        if x%t==0:
            sp.append(t)
            if x//t!=t:
                sp.append(x//t)
    sp.sort()
    return(sp)
md=0
for i in range(a, b+1):
    spd=kd(i)
    if len(spd)>=md:
        md=len(spd)
        d=i
print(md, d)",0.04699999839067459,7.549315341748297e-05
1073,"
a = int(input())
count = 0
n = a + 1
results = []

while count < 5:
    divs = []
    for i in range(1, n // 2 + 1):
        if n % i == 0:
            divs.append(i)
    if len(divs) >= 2:
        divs.sort()
        m = divs[-1] + divs[-2]
    else:
        m = 0
    if 0 < m < 10000:
        results.append(m)
        count += 1
    n += 1

print(*results)
",0.8809999823570251,8.65621113916859e-05
1074,"fam = list(map(ord, input()))
for i in range(len(fam)):
    mn = i+1
    if i+1 == len(fam): break
    for k in range(i+1, len(fam)):
        if fam[k] < fam[mn]:
            mn = k
    if fam[i] > fam[mn]:
        ti = fam[i]
        tmn = fam[mn]
        fam[mn] = ti
        fam[i] = tmn
        break
print(''.join(map(chr, fam)))
",0.04699999839067459,0.7866305112838745
1075,"
n = int(input())
cards = [chr(i) for i in range(65, 65 + n)]
new_stack = []
for i in range(n):
    if i % 2 == 0:
        new_stack.append(cards[i // 2])
    else:
        new_stack.insert(0, cards[i // 2 + 1])
res = ''.join(new_stack)
print(res)
",0.9340000152587891,0.01440731342881918
1076,"
def main():
    n = int(input())
    temperatures = list(map(int, input().split()))
    lowest = min(temperatures)

    if lowest < -15:
        print(""YES"")
    else:
        print(""NO"")
    print(lowest)

main()
",0.9919999837875366,0.9457036852836609
1077,"name = list(input())
letters = [ord(i) for i in name]
letters.sort()
for i in range(len(name)):
    if ord(name[i]) > letters[i]:
        name[-name[::-1].index(chr(letters[i])) - 1] = name[i]
        name[i] = chr(letters[i])
        break
print(''.join(name))
",0.04399999976158142,0.06399597972631454
1078,"
n = int(input())
masses = list(map(int, input().split()))
count = [0] * 5
for m in masses:
    count[m] += 1
res = count[4]
res += count[3]
count[1] = max(0, count[1] - count[3])
res += count[2] // 2
if count[2] % 2 == 1:
    res += 1
    count[1] = max(0, count[1] - 2)
res += (count[1] + 3) // 4
print(res)
",0.8790000081062317,1.612846858733974e-06
1079,"
def count_ways(n):
    if n < 3:
        return 0
    elif n == 3:
        return 1
    else:
        return count_ways(n // 2) + count_ways((n + 1) // 2)

n = int(input())
print(count_ways(n))
",0.9929999709129333,0.9799057841300964
1080,"n,a,b=map(int,input().split())
if n<=a:
    print('YES')
else:
    print('NO')
",0.08500000089406967,0.07250071316957474
1081,"
n = int(input())
matrix = [list(map(int, input().strip())) for _ in range(n)]
pairs = []

for i in range(n):
    for j in range(n):
        if matrix[i][j] == 1:
            for k in range(n):
                if matrix[j][k] == 1:
                    for l in range(n):
                        if matrix[k][l] == 1:
                            pairs.append((i + 1, l + 1))

if pairs:
    for p in pairs:
        print(p[0], p[1])
else:
    print('no')
",0.8870000243186951,0.9117962121963501
1082,"
def penguin_battle(n, m, k):
    hits = 0
    tentacles = m
    while tentacles > 0:
        if tentacles >= n:
            tentacles -= n
        else:
            tentacles = 0
        if tentacles > 0:
            tentacles -= k
            hits += 1
    return ""NO"" if tentacles > 0 else str(hits)

n, m, k = map(int, input().split())
print(penguin_battle(n, m, k))
",0.902999997138977,0.686178982257843
1083,"n, lim = map(int, input().split())
res = ''
for i in range(1, 2*n+1):
	if 2*n + i <= lim:
		res += str(2*n+i) + ' '
	if i <= lim:
		res += str(i) + ' '
print(res[:-1])
",0.026000000536441803,0.9379674792289734
1084,"a,b,m = map(int, input().split())
print(m//a+1+m//b+1)",0.0430000014603138,0.04878254979848862
1085,"n=int(input())
m=[int(x)for x in input().split()]
d=[int(x)for x in input().split()]
m.sort()
d.sort()
k=0
for i in range(n):
    k+=abs(m[i]-d[i])
print(k)
",0.004000000189989805,1.5241966022649933e-10
1086,"n, m = map(int, input().split())
if m % 2 == 0:
    print(n * m // 2)
else:
    print(n * (m - 1) // 2)",0.04500000178813934,0.00012504229380283505
1087,"n = int(input())
print(n // 2 + 1 * (n % 2 == 1))",0.03799999877810478,8.519569405507355e-07
1088,"n = int(input())
k = int(n**0.5)
p = n-k**2
s = 2*k*(k+1)
if p>0:
    if p > k:
        s += 6 + (p-2)*2
    else:
        s += 3 + (p-1)*2


print(s)",0.026000000536441803,0.5196343064308167
1089,"n=int(input())
mas=[0]*n
S=input().split()
mas=[int(i) for i in S]
k=0
for i in range(2,n-1,1):
    if mas[i-1]<mas[i] and mas[i+1]<mas[i]:
        k+=1
print(k)",0.0560000017285347,2.3765993319102563e-05
1090,"
n = int(input())
max_num = n - 1
total_lines = 2 * n - 1

for i in range(total_lines):
    if i < n:
        spaces = n - i - 1
        nums = i + 1
    else:
        spaces = i - n + 1
        nums = total_lines - i
    print(' ' * spaces, end='')
    for j in range(nums):
        print(max_num - j, end=' ')
    print('\b')
",0.9760000109672546,0.0017934213392436504
1091,"def min_files_in_folder(n, s):
    result = 0
    x = 0
    for i in s:
        if i == '-':
            x += 1
        else:
            result += 1
            x = max(0, x - 1)
    return result + x

n = int(input())
s = input()
print(min_files_in_folder(n, s))
exit()",0.9409999847412109,0.9516206979751587
1092,"
n = int(input())
print(n)
",0.9879999756813049,0.47846320271492004
1093,"t=int(input())
for i in range ( t):
    a, b, c =map(int,input().split())
    if a+b==c or c+b==a or a+c==b  :
        print(""YES"")
    else:
        print(""NO"")",0.03500000014901161,0.21344996988773346
1094,"
n = int(input())
a = []
for _ in range(n):
    row = list(map(int, input().split()))
    a.append(row)

for i in range(n):
    for j in range(n):
        if a[i][j] == -1:
            a[i][j] = float('inf')
        if i == j:
            a[i][j] = 0

for k in range(n):
    for i in range(n):
        for j in range(n):
            if a[i][k] + a[k][j] < a[i][j]:
                a[i][j] = a[i][k] + a[k][j]

for i in range(n):
    for j in range(n):
        if a[i][j] == float('inf'):
            a[i][j] = -1

for row in a:
    print(' '.join(map(str, row)))
",1.0,0.8896787166595459
1095,"k = int(input())
print((k - 1) * 9 + 19)",0.017000000923871994,7.213620119728148e-05
1096,"
n = int(input())
arr = list(map(int, input().split()))
count = 0
for i in range(1, n):
    if arr[i] > arr[i - 1]:
        count += 1
print(count)
",0.9599999785423279,0.9347901940345764
1097,"n, m = map(int, input().split())
s = (1+n) / 2 * n
l = m % s
i = 1
while l >= i:
    l -= i
    i += 1
print(int(l))",0.028999999165534973,0.8611758351325989
1098,"def is_palindrome(s):
    return s == s[::-1]

def is_garridrome(s):
    n = len(s)
    for i in range(n):
        t = s[:i] + s[i+1:]
        if is_palindrome(t):
            return True
    return False

n = int(input())
for _ in range(n):
    s = input()
    print(""YES"" if is_garridrome(s) else ""NO"")",0.9589999914169312,0.9176620244979858
1099,"
t = int(input())
for _ in range(t):
    k = int(input())
    i = 1
    cnt = 0
    while True:
        if i % 3 != 0 and i % 10 != 3 and i % 3 != 0 and i % 10 != 3:
            cnt += 1
            if cnt == k:
                print(i)
                break
        i += 1
",0.9700000286102295,0.946129322052002
1100,"
n = int(input())
m = int(input())
k = int(input())

pie_cost = 26
frog_cost = 1 * 29 + 9
candy_cost = 1 * 29 + 13

total_cost = n * pie_cost + m * frog_cost + k * candy_cost
galleons = 2
total_knats = galleons * 17 * 29

change = total_knats - total_cost
print(change)
",0.9150000214576721,0.9471207857131958
1101,"n = int(input())
if n == 2:
    print(' ' * n * 2 + '0')
    print(' ' * n + '0 1 0')
    print('0 1 2 1 0')
    print(' ' * n + '0 1 0')
    print(' ' * n * 2 + '0')

if n == 3:
    print(' ' * n * 2 + '0')
    print(' ' * 4 + '0 1 0')
    print(' ' * 2 + '0 1 2 1 0')
    print('0 1 2 3 2 1 0')
    print(' ' * 2 + '0 1 2 1 0')
    print(' ' * 4 + '0 1 0')
    print(' ' * n * 2 + '0')

if n == 4:
    print(' ' * n * 2 + '0')
    print(' ' * (n - 1) * 2 + '0 1 0')
    print(' ' * (n - 2) * 2 + '0 1 2 1 0')
    print(' ' * (n - 3) * 2 + '0 1 2 3 2 1 0')
    print('0 1 2 3 4 3 2 1 0')
    print(' ' * (n - 3) * 2 + '0 1 2 3 2 1 0')
    print(' ' * (n - 2) * 2 + '0 1 2 1 0')
    print(' ' * (n - 1) * 2 + '0 1 0')
    print(' ' * n * 2 + '0')

if n == 5:
    print(' ' * n * 2 + '0')
    print(' ' * (n - 1) * 2 + '0 1 0')
    print(' ' * (n - 2) * 2 + '0 1 2 1 0')
    print(' ' * (n - 3) * 2 + '0 1 2 3 2 1 0')
    print(' ' * (n - 4) * 2 + '0 1 2 3 4 3 2 1 0')
    print('0 1 2 3 4 5 4 3 2 1 0')
    print(' ' * (n - 4) * 2 + '0 1 2 3 4 3 2 1 0')
    print(' ' * (n - 3) * 2 + '0 1 2 3 2 1 0')
    print(' ' * (n - 2) * 2 + '0 1 2 1 0')
    print(' ' * (n - 1) * 2 + '0 1 0')
    print(' ' * n * 2 + '0')

if n == 6:
    print(' ' * n * 2 + '0')
    print(' ' * (n - 1) * 2 + '0 1 0')
    print(' ' * (n - 2) * 2 + '0 1 2 1 0')
    print(' ' * (n - 3) * 2 + '0 1 2 3 2 1 0')
    print(' ' * (n - 4) * 2 + '0 1 2 3 4 3 2 1 0')
    print(' ' * (n - 5) * 2 + '0 1 2 3 4 5 4 3 2 1 0')
    print('0 1 2 3 4 5 6 5 4 3 2 1 0')
    print(' ' * (n - 5) * 2 + '0 1 2 3 4 5 4 3 2 1 0')
    print(' ' * (n - 4) * 2 + '0 1 2 3 4 3 2 1 0')
    print(' ' * (n - 3) * 2 + '0 1 2 3 2 1 0')
    print(' ' * (n - 2) * 2 + '0 1 2 1 0')
    print(' ' * (n - 1) * 2 + '0 1 0')
    print(' ' * n * 2 + '0')

if n == 7:
    print(' ' * n * 2 + '0')
    print(' ' * (n - 1) * 2 + '0 1 0')
    print(' ' * (n - 2) * 2 + '0 1 2 1 0')
    print(' ' * (n - 3) * 2 + '0 1 2 3 2 1 0')
    print(' ' * (n - 4) * 2 + '0 1 2 3 4 3 2 1 0')
    print(' ' * (n - 5) * 2 + '0 1 2 3 4 5 4 3 2 1 0')
    print(' ' * (n - 6) * 2 + '0 1 2 3 4 5 6 5 4 3 2 1 0')
    print('0 1 2 3 4 5 6 7 6 5 4 3 2 1 0')
    print(' ' * (n - 6) * 2 + '0 1 2 3 4 5 6 5 4 3 2 1 0')
    print(' ' * (n - 5) * 2 + '0 1 2 3 4 5 4 3 2 1 0')
    print(' ' * (n - 4) * 2 + '0 1 2 3 4 3 2 1 0')
    print(' ' * (n - 3) * 2 + '0 1 2 3 2 1 0')
    print(' ' * (n - 2) * 2 + '0 1 2 1 0')
    print(' ' * (n - 1) * 2 + '0 1 0')
    print(' ' * n * 2 + '0')
",0.07800000160932541,0.0
1102,"
file = open('input.txt', 'r')
text = file.read()
file.close()

count = {}
for i in range(len(text)-1):
    if text[i] == 'A':
        if text[i+1] in count:
            count[text[i+1]] += 1
        else:
            count[text[i+1]] = 1

max_count = -1
res = ''
for key in count:
    if count[key] > max_count:
        max_count = count[key]
        res = key

print(res)
",0.9789999723434448,0.901209831237793
1103,"n = int(input())
num = [int(x) for x in input().split()]
comand = [[]]
for i in num:
    f = True
    for j in range(len(comand)):
        if i in comand[j]:
            f = False
        else:
            comand[j].append(i)
            f = True
            break
    if not f:
        comand.append([i])

print(len(comand))",0.035999998450279236,0.05346817150712013
1104,"
n, *balls = map(int, input().split())
count = 0
i = 0
while i < len(balls):
    j = i
    while j < len(balls) and balls[j] == balls[i]:
        j += 1
    if j - i >= 3:
        count += j - i
        balls = balls[:i] + balls[j:]
        i = max(0, i - 1)
    else:
        i = j
print(count)
",0.9890000224113464,0.8078705668449402
1105,"
t = int(input())
for _ in range(t):
    x = input().strip()
    digit = int(x[0])
    count = 0
    for i in range(1, digit + 1):
        count += i * 4
    count += len(x)
    print(count)
",0.9539999961853027,0.898182213306427
1106,"
import math

S = float(input())
R1 = float(input())

R2 = math.sqrt(R1**2 - S / math.pi)

print(f'{R2:.3f}')
",0.9470000267028809,0.927483320236206
1107,"
m, s = map(int, input().split())
p, q = map(int, input().split())

t = m * 60 + s
s = t % 24
t = t - s
m = m - 1
s = s + 24 - s

for _ in range(t):
    if _ % 2 == 0:
        p += 3
    else:
        q += 2

print(p, q)
",0.9340000152587891,0.000985380494967103
1108,"def factorial(n):
    result = 1
    for i in range(1, n + 1):
        result *= i
    return result

n = int(input())
print(factorial(n))",0.9589999914169312,0.9477968811988831
1109,"def min_folds(n):
    folds = 0
    while n > 1:
        n = n // 2
        folds += 1
    return folds

n = int(input())
print(min_folds(n))",0.9660000205039978,0.896472692489624
1110,"
n = int(input())
a = [[0 for i in range(2*n-1)] for j in range(2*n-1)]
for i in range(2*n-1):
    for j in range(2*n-1):
        a[i][j] = abs(n-1-i)+abs(n-1-j)+1
for i in range(2*n-1):
    for j in range(2*n-1):
        if a[i][j] > n:
            a[i][j] = 0
for i in range(2*n-1):
    for j in range(2*n-1):
        if a[i][j] != 0:
            print(a[i][j], end=' ')
    print()
",0.9179999828338623,0.0037072126287966967
1111,"
a, b = input().split()
if sorted(a.lower()) == sorted(b.lower()):
    print(""Yes"")
else:
    print(""No"")
",0.9919999837875366,0.9421504735946655
1112,"
n = int(input())
rects = []
for _ in range(n):
    x1, y1, x2, y2 = map(int, input().split())
    rects.append((x1, y1, x2, y2))

min_x = min(r[0] for r in rects)
max_x = max(r[2] for r in rects)
min_y = min(r[1] for r in rects)
max_y = max(r[3] for r in rects)

width = max_x - min_x
height = max_y - min_y

if width == height:
    print(""Yes"")
else:
    print(""No"")
",0.9330000281333923,0.9800274968147278
1113,"
d, r = map(int, input().split())
n = int(input())
count = 0
for _ in range(n):
    x, y, R = map(float, input().split())
    dist = (x**2 + y**2)**0.5
    if dist + R > d and dist - R < d + r:
        count += 1
print(count)
",0.9169999957084656,0.9432101249694824
1114,"
n, v = map(int, input().split())
a = list(map(int, input().split()))
b = list(map(int, input().split()))
even = [x for x in a if x % 2 == 0]
for i in range(a[-1], b[-1] + 1):
    if i % 2 == 0 and i not in even:
        even.append(i)
print(' '.join(map(str, even)))
",0.8920000195503235,0.930921196937561
1115,"n =  int(input())
s = ''
p = input()
k = 0
for i in range(n - 1):
    t = input()
    if p == t:
        k += 1 
    p = t
print(k + 1)
",0.08100000023841858,0.367755264043808
1116,"length = int(input())
volume = length ** 3
print(volume)",0.9229999780654907,0.8938502073287964
1117,"a=input().split()
q=[int(i) for i in a]
q.append(0)
e=max(q)
s=0
for i in range(len(q)):
    if q[i]==e:
        s+=1
print(s)
",0.08100000023841858,0.00017595147073734552
1118,"
N, K, X, Y = map(int, input().split('\n'))
cost = sum([X if i <= K else Y for i in range(1, N+1)])
print(cost)
",0.9729999899864197,0.8436081409454346
