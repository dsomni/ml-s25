,code,real,predicted
0,"
v1, v2, t = map(int, input().split())
total_distance = (v1 + v2) * t
ring_length = 100
distance = total_distance % ring_length
if distance > ring_length / 2:
    distance = ring_length - distance
print(distance)
",1.0,0.995254397392273
1,"
a = int(input())
b = int(input())
print(a + b)
",1.0,0.37235334515571594
2,"a=int(input())
b=int(input())
c=int(input())
mx=max(a,b,c)
mn=min(a,b,c)
b=((a+b+c)-mn-mx)
a=mn
c=mx
if a+b>c:
    if ((a**2+b**2)==c**2):
        print('right')
    elif ((a**2+b**2)>c**2):
        print('acute')
    elif ((a**2+b**2)<c**2):
        print('obtuse')
else: print('impossible')",0.0,4.465722304303199e-05
3,"n = int(input())
for i in range(n):
    a = [int(x) for x in input().split()]
    n = a[0]
    k = a[1]
    hod = 0
    while n != 0:
        if n%k==0:
            if n//k <= n-1:
                n //= k
            else:
                n -= 1
        else:
            n -= 1
        hod += 1
    print(hod)",0.0,0.8807864189147949
4,"g, c, h=map(int, input().split(' '))
if g<2:
    print(0)
elif c+h>=g-1:
    print((g-1)*2+1)
elif c+h<g-1:
    print((c+h)*2+1)",0.0,0.13083280622959137
5,"line = input()
s = line.split()
sm = 0
length = int(s[0])
num = s[1]
st = input()
mx = 0
ex = ''
for i in range(0, length+1):
    ex = st[:i] + num + st[i:]
    if int(ex) >= mx:
        mx = int(ex)

print(mx)",0.0,0.9862712621688843
6,"
dan = input()
max_len = 0
current_len = 0
a_count = 0

for char in dan:
    if char == 'E':
        if a_count >= 3:
            max_len = max(max_len, current_len)
        current_len = 0
        a_count = 0
    else:
        current_len += 1
        if char == 'A':
            a_count += 1

if a_count >= 3:
    max_len = max(max_len, current_len)

print(max_len)
",1.0,0.9915033578872681
7,"
n = int(input())
words = [input().strip() for _ in range(n)]

min_counts = {}

for c in 'ABCDEFGHIJKLMNOPQRSTUVWXYZ':
    max_cnt = 0
    for word in words:
        cnt = word.count(c)
        if cnt > max_cnt:
            max_cnt = cnt
    if max_cnt > 0:
        min_counts[c] = max_cnt

sorted_letters = sorted(min_counts.keys())
for letter in sorted_letters:
    print(letter, min_counts[letter], end=' ')
",1.0,0.9999997615814209
8,"n = int(input())
w = list(map(int, input().split()))

left = [w[i] for i in range(n) if i % 2 == 0]
right = [w[i] for i in range(n) if i % 2 == 1]

max_trampled = 0

while left and right and max(left[-1], right[-1]) > 0:
    max_left = left[-1]
    max_right = right[-1]

    if max_left > max_right:
        for _ in range(max_left):
            left.pop()
        max_trampled += max_left
    else:
        for _ in range(max_right):
            right.pop()
        max_trampled += max_right

print(max_trampled)",1.0,1.0
9,"a = list(map(int, input().split()))
g = a[0]
c = a[1]
h = a[2]
if g * 2 >= (c + h ) * 2 + 1:
    print((c + h) * 2 +1 )
else:
    print( g * 2 -1)",0.0,9.516194404568523e-05
10,"
n = int(input())
a = list(map(int, input().split()))
m = a[0]
for i in range(1, n):
    if a[i] > m:
        m = a[i]
s = 0
for i in range(n):
    s += m - a[i]
print(s)
",1.0,0.9999399185180664
11,"
S, T = map(int, input().split())
if T > S:
    print(T - S)
else:
    print(12 - S + T)
",1.0,0.8838805556297302
12,"
def min_cargo_to_add(n, a):
    from collections import Counter
    count = Counter(a)
    if len(count) <= 2:
        return 0
    sorted_counts = sorted(count.values(), reverse=True)
    total_needed = 0
    for i in range(2, len(sorted_counts)):
        total_needed += sorted_counts[i]
    return total_needed

n = int(input())
a = list(map(int, input().split()))
print(min_cargo_to_add(n, a))
",1.0,0.9979603290557861
13,"n = int(input())
c = list(map(int,input().split()))
print((max(c)+min(c))/2)",0.0,0.01584506407380104
14,"
n = int(input())
while n > 1:
    if n % 2 == 0:
        n = n // 2
    else:
        n = (n * 3 - 1) * 2 // 2
print(n)
",1.0,0.933448851108551
15,"
n = int(input())
afraid = n - 2
if afraid % 10 == 1 and afraid % 100 != 11:
    print(f""{afraid} mag"")
elif 2 <= afraid % 10 <= 4 and (afraid % 100 < 10 or afraid % 100 >= 20):
    print(f""{afraid} maga"")
else:
    print(f""{afraid} magov"")
",1.0,0.9998496770858765
16,"
from itertools import permutations

n, k = map(int, input().split())
arr = [input().strip() for _ in range(n)]

perm = permutations(arr, k)

for p in perm:
    print(' '.join(p))
",1.0,7.689675112487748e-05
17,"def sss(ch):
    s=0
    for i in range(len(str(ch))):
        s+=int(str(ch)[i])
    return s
a=int(input())
a1=10
while a>0:
    a1+=9
    if sss(a1)==10:
        a-=1
print(a1)",0.0,0.9999997615814209
18,"
n = int(input())
if n > 30 or n < 0:
    print(""Invalid input! Please enter a non-negative integer number that does not exceed 30."")
else:
    power = 1
    for _ in range(n):
        power *= 2
    print(power)
",1.0,0.6867238879203796
19,"n = int(input())
for i in range(n):
    a,b,c = map(int,input().split())
    if a == b + c or b == a + c or c == a + b:
        print('YES')
    else:
        print('NO')",0.0,0.7795073986053467
20,"n, m = [int(i) for i in input().split()]
m1 = m
a = 1 + 2*n
b = 1
i = 0
while m != 0:
    out = 0
    if i % 2==0:
        out = a
        a += 1
    else:
        out = b
        b += 1
    if out > m1:
        out = b
        b += 1
    print(out, end=' ')
    m -= 1
    i += 1
",0.0,0.9860922694206238
21,"
m = ' mur-'
a = 'i'
s = ' murra-'
for i in range(26):
    print(s + chr((ord('a') - i) % 26 + ord('a')))
",1.0,0.9487665891647339
22,"q=int(input())
w=10
w1=10
while q!=0:
    w=w+9
    w1=w
    s=0
    while w1>0:
        s=s+w1%10
        w1=w1//10
    if w%10!=0 and s==10:
        q=q-1
print(w)",0.0,0.9998155236244202
23,"
a = int(input())
b = int(input())

for num in range(a, b + 1):
    divs = set()
    for i in range(1, int(num ** 0.5) + 1):
        if num % i == 0:
            divs.add(i)
            divs.add(num // i)
    if len(divs) == 3:
        print(num)
",1.0,0.10591061413288116
24,"
a, b = map(int, input().split())
total_hours = 0
while a > 0:
    total_hours += a
    new_candles = a // b
    a = new_candles + (a % b)
print(total_hours)
",1.0,0.9998175501823425
25,"


n=int(input())
m=int(input())
while m>0:
    n=3*n
    m-=1
    print(n)
    ",0.0,0.9993953704833984
26,"
s = list(input().strip())
cards = list(input().strip())
sorted_cards = sorted(cards, reverse=True)

for i in range(len(s)):
    for j in range(len(sorted_cards)):
        if sorted_cards[j] > s[i]:
            s[i] = sorted_cards[j]
            sorted_cards.pop(j)
            break

res = ''.join(s).lstrip('0')
print(res if res else '0')
",1.0,0.9999983310699463
27,"t=int(input())
for i in range(t):
    s=input()
    print(('YES', 'NO')[(s[:2].lower()!=""py"" or s[-4:].lower()!=""hon"")])",1.0,0.9934269189834595
28,"n = int(input())
mas = list(map(int, input().split()))
mas1 = []
mas2 = []
for i in range(len(mas)):
    if mas[i] > 0:
        mas1.append(mas[i])
    else:
        mas2.append(mas[i])
print(sum(mas1) - sum(mas2))",0.0,0.00044346926733851433
29,"
a, b = map(int, input().split())
print(a * b)
",1.0,0.5173012614250183
30,"
n=int(input())
a=[]
for i in range(n):
    a.append(list(map(int,input().split())))
for k in range(n):
  for i in range(n):
    for j in range(n):
      a[i][j]=min(a[i][j],a[i][k]+a[k][j])
      if a[i][j]==-1: a[i][j]=float('inf')
for i in range(n):
  for j in range(n):
    if a[i][j]==float('inf'): a[i][j}=-1
    print(a[i][j],end=' ')
  print()
",1.0,1.0
31,"n,m = map(int, input().split())
print(n*(m//2))",0.0,0.285695880651474
32,"n=int(input())
m=list(map(int,input().split()))
m=sorted(m)
if n !=2:
    i=2
    s=m[1]-m[0]+m[-1]-m[-2]
    while i<n-2:
        if m[i]-m[i-1]>=m[i+1]-m[i]:
            s+=m[i+1]-m[i]
            i=i+1
        else:
            s+=m[i]-m[i-1]
        i=i+1
    print(s)
else:
    print(m[1]-m[0])",0.0,0.9759233593940735
33,"
a = int(input())
b = int(input())
c = int(input())

if a < b:
    if a < c:
        res = a
    else:
        res = c
else:
    if b < c:
        res = b
    else:
        res = c

print(res)
",1.0,0.00012910777877550572
34,"x=int(input())
sp=[]
for c in range(0,10):
    s=''
    p=int('1'+str(c)+'95421')
    if p%x==0:
        sp.append(p)
    for o in range(0,10):   
        s=str('00')+str(o)
        p=int('1'+str(c)+'954'+s+'21')
        if p%x==0:
            sp.append(p)
        s=str('0')+str(o)
        p=int('1'+str(c)+'954'+s+'21')
        if p%x==0:
            sp.append(p)
        s=str(o)
        p=int('1'+str(c)+'954'+s+'21')
        if p%x==0:
            sp.append(p)
    for o in range(10,100):
        s=str('0')+str(o)
        p=int('1'+str(c)+'954'+s+'21')
        if p%x==0:
            sp.append(p)
        s=str(o)
        p=int('1'+str(c)+'954'+s+'21')
        if p%x==0:
            sp.append(p)
    for o in range(100,1000):
        s=str(o)
        p=int('1'+str(c)+'954'+s+'21')
        if p%x==0:
            sp.append(p)
sp.sort()
for p in sp:
    print(p)",0.0,5.000406311239658e-09
35,"a,b = map(int, input().split())
spd= []
k = 0
spdmax = []
def KolDel(x):
    sp =[]
    for t in range(1,int(x**0.5)+1):
        if x % t == 0:
            sp.append(t)
            if x//t != t:
                sp.append(x//t)
        sp.sort()
        sp.reverse()
    return sp
for i in range(a,b+1):
    spd = KolDel(i)
    if len(spd)%2 != 0:
        k+=1
        print(k,i,len(spd),int(i**0.5))

",0.0,0.00015022652223706245
36,"d1, d2, d3 = map(int,input().split())
print(min(2*d1 + 2*d2, d1+d2+d3, 2*d1 + 2*d3, 2*d2+2*d3))",0.0,0.005535122472792864
37,"n=int(input())
print(3*(n-1))",0.0,0.2372603714466095
38,"
n = input().strip()
min_digit = '9'
max_digit = '0'

for digit in n:
    if digit < min_digit:
        min_digit = digit
    if digit > max_digit:
        max_digit = digit

print(min_digit, max_digit)
",1.0,0.9980701804161072
39,"b=int(input())
s=input()
a=list(map(int, s.split()))
q=0
w=9999
for i in range(b):
    q=q+a[i]
    if a[i]%2!=0 and a[i]<w:
        w=a[i]
if q%2==0:
    print(q)
else:
    print(q-w)",0.0,0.0035273015964776278
40,"a=int(input())
b=int(input())
c=int(input())
print(a+b+c)",0.0,0.22678883373737335
41,"
def translate_to_murra(text):
    alphabet = 'йцукенгшщзхъфывапролдмижтвбю'
    translated = []
    for word in text.split():
        if word == 'a':
            word = 'i'
        else:
            index = alphabet.index(word[0]) - 1
            word = alphabet[index] + word[1:]
        translated.append('mur-' + word)
    return ' '.join(translated)

text = input()
print(translate_to_murra(text))
",1.0,0.999984622001648
42,"
n = int(input())
advisers = list(map(int, input().split()))
res = []
day = 0

for i in range(n):
    if advisers[i] > 0:
        res.append('+')
        day += 1
        for j in range(1, advisers[i]):
            while day < len(res) and res[day] == '+':
                day += 1
            if day < len(res):
                res[day] = '+'
            else:
                res.append('+')
            day += 1
    else:
        res.append('-')

while day < len(res) or (day < n and advisers[day] > 0):
    while day < len(res) and res[day] == '+':
        day += 1
    if day < len(res):
        res[day] = '+'
    else:
        res.append('+')
    day += 1

print(''.join(res))
",1.0,0.9971051812171936
43,"a=[int(s) for s in input().split()]
b=[]
for t in range(len(a)):
    if t!=0:
        b.append(a[t])
c=max(b)
p=min(b)
for i in range(len(b)):
    if b[i]==c:
        b[i]=p
print(*b)",0.0,0.00033916704705916345
44,"
p = int(input())
s = p / 4
print(s)
",1.0,0.9254679679870605
45,"a=list(map(int,input().split()))
b=0
while len(a)>1:
    b+=min(a)
    a.remove(min(a))
if b>a[0]:
    print(b+a[0])
else:
    print(b*2)",0.0,0.8860976099967957
46,"
n = int(input())
a = list(map(int, input().split()))

b = sorted(a)
c = [b[0], b[-1]]

for x in a:
    if x > b[-1]:
        c.append(x)

d = [c[i+1] - c[i] for i in range(len(c)-1)]

print(sum(d))
",1.0,0.999599039554596
47,"n = int(input())
sss = 0
xs, ys = list(), list()
for i in range(n):
	c = input().split()
	c = list(map(int, c))
	sss += (c[2]-c[0])*(c[3]-c[1])
	xs.append(c[0])
	xs.append(c[2])
	ys.append(c[1])
	ys.append(c[3])


x1, x2, y1, y2 = min(xs), max(xs), min(ys), max(ys)
# matrix = [[1 if  for k in range(min(x1), max(x2)+1)] for i in range(min(y1), max(y2)+1)]
if (x2-x1)*(y2-y1) == sss and x2-x1 == y2-y1:
	print('YES')
else:
	print('NO')",0.0,0.9983994364738464
48,"
N = int(input())
arr = list(map(int, input().split()))
max_value = arr[0]
for num in arr:
    if num > max_value:
        max_value = num
print(max_value)
",1.0,0.9979604482650757
49,"
t = int(input())
for _ in range(t):
    n, k = map(int, input().split())
    steps = 0
    while n > 0:
        if n % k == 0:
            n //= k
        else:
            n -= 1
        steps += 1
    print(steps)
",1.0,0.9999786615371704
50,"
n = int(input())
a = list(map(int, input().split()))
res = ['-'] * n
for i in range(n):
    if a[i] > 0:
        res[i] = '+'
        for j in range(1, a[i]):
            res[i + j] = '+'
print(''.join(res))
",1.0,0.9810590147972107
51,"n = int(input())
a = []
for _ in range(n+1):
    a.append([])
for i in range(n+1):
    for x in range(n-i):
        a[i].append("" "")
    for y in range(i+1):
        a[i].append(y)
    for y in range(i-1, -1, -1):
        a[i].append(y)
    for x in range(n-i):
        a[i].append("" "")
for x in a:
    print(*x)
a.pop(-1)
a.reverse()
for x in a:
    print(*x)",0.0,1.0
52,"k, n, s, p = map(int, input().split())
if n%s==0:
    c=0
else:
    c=1
a = n//s+c
b = a*k
if b%p==0:
    d = 0
else:
    d=1
print(b//p+d)",0.0,0.018039457499980927
53,"n1, p1, m1, t1, s1 = map(int,input().split())
n2, p2, m2, t2, s2 = map(int,input().split())
if (p1 + (m1 * t1) + s1)*n1 > (p2 + (m2 * t2) + s2)*n2:
    print('Pascal',(p2 + (m2 * t2) + s2)*n2)
else:
    print('Python',(p1 + (m1 * t1) + s1)*n1)",0.0,5.049271203461103e-05
54,"
n = int(input())
max_num = 0
for _ in range(n):
    num = int(input())
    if num % 10 == 2 and num > max_num:
        max_num = num
print(max_num)
",1.0,0.995676577091217
55,"n = int(input())
s = input()
se = set()
for i in range(1, n):
    se.add(s[i] + s[i - 1])
print(len(se))",0.0,0.9859456419944763
56,"n=int(input())
st=n//3+1
print(st)",0.0,0.7950505018234253
57,"x = float(input())
n = 0
s = 0
while s < x:
    n += 1
    s += 1 / n
print(n, ""planks"")",1.0,0.9987998008728027
58,"
n = int(input())
matrix = [list(map(int, input().split())) for _ in range(n)]
transposed = [[0] * n for _ in range(n)]

for i in range(n):
    for j in range(n):
        transposed[j][i] = matrix[i][j]

for row in transposed:
    print(' '.join(map(str, row)))
",1.0,0.9642263054847717
59,"s = ['q', 'w', 'e', 'r', 't', 'y', 'u', 'i', 'o', 'p', 'a', 's', 'd', 'f', 'g', 'h', 'j', 'k', 'l', 'z', 'x', 'c', 'v', 'b', 'n', 'm', 'q']
a = input()
i = s.index(a)
print(s[i+1])",0.0,0.0001616812514839694
60,"import math

def max_occupied_spots(n):
    return math.ceil(n / 2)

n = int(input())
print(max_occupied_spots(n))",0.0,0.9499207735061646
61,"
n, d = map(int, input().split())
a = list(map(int, input().split()))
m = int(input())
p = 0
for i in range(m):
    if i < n:
        p += a[i]
    else:
        p -= d
print(p)
",1.0,0.8746116757392883
62,"a, b, c = map(int, input().split())

if a > b:
    if b > c:
        print(b)
    elif a > c:
        print(c)
    else:
        print(a)
else:
    if a > c:
        print(a)
    elif b > c:
        print(c)
    else:
        print(b)",1.0,0.007893156260251999
63,"
n = int(input())
while n > 1:
    print(n)
    if n % 2 == 0:
        n //= 2
    else:
        n = (3 * n + 1) // 2
print(n)
",1.0,0.980661153793335
64,"
n = int(input())
if str(n) == str(n)[::-1]:
    print(""YES"")
else:
    print(""NO"")
",1.0,0.539982795715332
65,"n=int(input())
a=[input() for i in range(n)]
amogus=[]
for i in [""a"",""b"",""c"",""d"",""e"",""f"",""g"",""h""]:
    for j in [1,2,3,4,5,6,7,8]:
        amogus.append(i+str(j))
for i in a:
    temp1=[]
    s=0
    temp1.append(str(chr(ord(i[0])-1))+str(int(i[1])+2))
    temp1.append(str(chr(ord(i[0])+1))+str(int(i[1])+2))
    temp1.append(str(chr(ord(i[0])-1))+str(int(i[1])-2))
    temp1.append(str(chr(ord(i[0])+1))+str(int(i[1])-2))
    temp1.append(str(chr(ord(i[0])-2))+str(int(i[1])+1))
    temp1.append(str(chr(ord(i[0])+2))+str(int(i[1])+1))
    temp1.append(str(chr(ord(i[0])-2))+str(int(i[1])-1))
    temp1.append(str(chr(ord(i[0])+2))+str(int(i[1])-1))
    for j in temp1:
        if j in amogus:
            s+=1
    print(s)",0.0,0.00015970392269082367
66,"
a1, b1 = map(int, input().split())
a2, b2 = map(int, input().split())
a3, b3 = map(int, input().split())
a4, b4 = map(int, input().split())

team_a = a1 + a2 + a3 + a4
team_b = b1 + b2 + b3 + b4

if team_a > team_b:
    res = 1
elif team_b > team_a:
    res = 2
else:
    res = 'DRAW'

print(res)
",1.0,0.9997113347053528
67,"n, d = map(int, input().split())
a = sorted(map(int, input().split()))
result = 0

for i in range(n):
    for j in range(i + 1, n):
        if a[j] - a[i] <= d:
            result += 1
        else:
            break

print(result)",0.0,0.9986259937286377
68,"n = int(input())
nums = list(map(int, input().split()))
nums_nch = [i for i in nums if i%2]
print(sum(nums) - min(nums_nch) if sum(nums) % 2 else sum(nums))",0.0,0.9032541513442993
69,"a = input()

b = a.split(' ')
x = int(b[0])
y = int(b[2])
z = int(b[1])
n=0
ny=0
while x >= 0:
    x = x-y
    n += 1

while z >= 0:
    z = z-y
    ny += 1
print(n*ny)",0.0,0.9999955892562866
70,"
num = 1
print(num)
",1.0,0.8843876719474792
71,"
L = int(input())
cm = L * 2.54
print(int(cm))
",1.0,0.02628844417631626
72,"
n = input()
dec = 0
i = 0
while n[i] != '\0':
    dec = dec * 2 + int(n[i])
    i += 1
print(dec)
",1.0,0.9958347082138062
73,"k=list(map(int,input().split()))
if k[1]%k[0]==0:
    print(k[1]//k[0],k[0])
else:
    print((k[1]//k[0])+1,k[1]%k[0])",0.0,0.00012546773359645158
74,"
def snail_race(p, a, b, c):
    return min(a * (p // a) + (p % a), b * (p // b) + (p % b), c * (p // c) + (p % c)) - p

p, a, b, c = map(int, input().split())
print(snail_race(p, a, b, c))
",1.0,0.999769389629364
75,"
t = int(input())
results = []

for _ in range(t):
    n = int(input())
    prices = list(map(int, input().split()))
    terrible_count = 0
    
    for i in range(n):
        if any(prices[i] > prices[j] for j in range(i + 1, n)):
            terrible_count += 1
            
    results.append(terrible_count)

for result in results:
    print(result)
",1.0,0.9999980926513672
76,"n = input()
l = list(map(int, input().split()))
print(sum(l)//4+1)
",0.0,0.15332861244678497
77,"
n = int(input())
t = [int(x) for x in input().split()]
max_diff = 0
max_diff_time = 0
for i in range(1, n):
    diff = abs(t[i] - t[i-1])
    if diff > max_diff:
        max_diff = diff
        max_diff_time = i
print(max_diff_time)
",1.0,0.9995656609535217
78,"
n = int(input())
for i in range(n):
    x1, y1, x2, y2, r, x, y = map(int, input().split())
    if x1 > x2:
        x1, x2 = x2, x1
    if y1 > y2:
        y1, y2 = y2, y1
    if x < x1:
        d = x1 - x
    elif x > x2:
        d = x - x2
    else:
        d = 0
    if y < y1:
        d2 = y1 - y
    elif y > y2:
        d2 = y - y2
    else:
        d2 = 0
    if d > 0 and d2 > 0:
        d = (d ** 2 + d2 ** 2) ** 0.5
    else:
        d = max(d, d2)
    if d < r:
        print('Yes')
    else:
        print('no')
",1.0,0.9992766976356506
79,"
a, b = map(int, input().split())

if a <= b:
    for i in range(a, b + 1):
        print(i, end=' ')
else:
    for i in range(a, b - 1, -1):
        print(i, end=' ')
",1.0,0.9995563626289368
80,"L = int(input())
print(L * 2.54 // 1)",1.0,0.0214421134442091
81,"
a, b, c, d = map(int, input().split())
for i in range(a, b + 1):
    if i % d == c:
        print(i, end=' ')
",1.0,0.9790032505989075
82,"a,b,h=map(int,input().split())
m,n=map(int,input().split())
if a>=m and b>=m and h>=m and a<=n and b<=n and h<=n:
 print('NO')
else:
    print('YES')
 ",0.0,0.054025519639253616
83,"a = float(input())
n = int(input())
res = 0
for i in range(n+1):
    res += pow(a, i)
print(int(res) if res == int(res) else res)
",0.0,0.9997023940086365
84,"
n = int(input())
max_distance = 0
for _ in range(n):
    line = input().strip()
    for i in range(len(line)):
        for j in range(i + 1, len(line)):
            if line[i] == line[j]:
                max_distance = max(max_distance, j - i)
print(max_distance)
",1.0,0.9999771118164062
85,"
n = int(input())
arr = list(map(int, input().split()))
res = []
for i in range(n-1, -1, -1):
    if arr[i] not in res:
        res.append(arr[i])
res.reverse()
print(len(res))
print(*res)
",1.0,0.9406872987747192
86,"x=int(input())


def ko(x):
    sp=[]
    for t in range(1,int(x**0.5)+1):
        if x%t==0:
            sp.append(t)
            if t!=x//t:
                sp.append(x//t)
    sp.sort()
    sp.reverse()
    return sp
k=0
for i in range(x+1,x*10000):
    spd=ko(i)
    if k==5:
        break
    if len(spd)>=5:
        print(i,spd[5])
        k+=1",0.0,0.2941424250602722
87,"h=int(input())
a=int(input())
b=int(input())
if (a-b)>1:
    print(h//(a-b))
else:
    print(h-b)",0.0,0.4759647250175476
88,"
n = int(input())
graph = []

for i in range(n):
    line = input().split()
    graph.append([int(x) for x in line])

for start in range(n):
    stack = [([start], set([start]))]
    res = []
    while stack:
        path, used = stack.pop()
        last = path[-1]
        has_next = False
        for nxt in range(n):
            if graph[last][nxt] == 1 and nxt not in used:
                has_next = True
                new_path = path + [nxt]
                new_used = used.copy()
                new_used.add(nxt)
                stack.append((new_path, new_used))
        if not has_next:
            res.append(path)
    for p in res:
        print(' '.join(str(x+1) for x in p))
",1.0,1.0
89,"def who_is_more(a, cards):
    result = list(a)
    cards = list(cards)
    for i in range(len(result)):
        for card in cards:
            if int(result[i]) < int(card):
                result[i] = card
                cards.remove(card)
                break
    return ''.join(result)

a = input()
cards = input()
print(who_is_more(a, cards))",1.0,0.9999995231628418
90,"
a, b, c, d = input().split()
x = float(a)
y = float(b)
cx = float(c)
cy = float(d)

x1 = x - cx
y1 = y - cy

r = (x1**2 + y1**2)**0.5
print(int(r*3.14+0.000001), int(r**2*3.14+0.000001))
",1.0,1.5581088518956676e-05
91,"
a, b, h = map(int, input().split())
m, k = map(int, input().split())

box = sorted([a, b, h])
door = sorted([m, k])

if box[0] <= door[0] and box[1] <= door[1]:
    print(""Yes"")
else:
    print(""No"")
",1.0,0.01805703341960907
92,"
def manhattan_distance(x1, y1, x2, y2):
 return abs(x1 - x2) + abs(y1 - y2)

K, T = map(int, input().split())
neurons = []
for _ in range(K):
 x, y, R = map(int, input().split())
 neurons.append((x, y, R))

distances = [[0] * K for _ in range(T)]
for i in range(T):
 for j in range(K):
 for k in range(K):
 if manhattan_distance(neurons[j][0], neurons[j][1], neurons[k][0], neurons[k][1]) <= neurons[j][2] + neurons[k][2] - i:
 neurons[j][2] = neurons[k][2] = i + 1
 for neuron in neurons:
 print(f""{neuron[2]:.2f}"")
",1.0,1.0
93,"n = int(input())
v_g = int(input())
v_s = int(input())
time = n / (v_g + v_s)
sausage_g = int(v_g * time)
sausage_s = n - sausage_g
print(sausage_g, sausage_s)",1.0,0.9541372656822205
94,a = int(input())b = a // 100c = a % 10result = b * 10 + cprint(result),1.0,0.5155379176139832
95,"a, b = map(int, input().split())
print(a**2 + b**2)
",1.0,0.1485005021095276
96,"def maximize_number(a, cards):
    card_list = sorted(cards, reverse=True)
    result = list(a) 
    card_index = 0  
    for i in range(len(result)):
        if card_index < len(card_list) and card_list[card_index] > result[i]:
            result[i] = card_list[card_index]  
            card_index += 1  
    return ''.join(result)  
a = input().strip() 
cards = input().strip() 
print(maximize_number(a, cards))",0.0,0.9999998807907104
97,"p=int(input())
for i in range(p):
    n, k= map(int, input().split())
    t=0
    while n!=0:
        if n%k==0 and k>1:
            n=n//k
        else:
            n=n-1
        t+=1
    print(t)",0.0,0.9999051094055176
98,"
a, b = map(int, input().split())
c, d = map(int, input().split())
sum1 = a + b
sum2 = c + d
if sum1 > sum2:
    print(a, b)
elif sum2 > sum1:
    print(c, d)
else:
    print(a, b, c, d)
",1.0,0.996813952922821
99,"a = int(input())
n = int(input())
s = 1 + a
i = 2
for b in range(n-1):
    s += a**i
    i += 1
print(s)",0.0,0.9813180565834045
100,"
a,b,c = map(int, input().split())
avg = (a+b+c)/3
print(avg)
",1.0,0.9729592204093933
101,"a,b=map(int,input().split())
n=int(input())
s=a*b
c=0
if s%9==0:
	print(""NO"")
	print(c)
else:
	print(""YES"")
	c=n-(s//9)
	print(c)
",0.0,0.17269392311573029
102,"
n = int(input())
a = [list(map(int, input().split())) for _ in range(n)]
b = [list(row) for row in zip(*a)]
for i in range(n):
    for j in range(n):
        if a[i][j] == 0 and b[j][i] == 1:
            b[j][i] = 0
            b[i][j] = 1
for row in b:
    print(' '.join(map(str, row)))
",1.0,0.9038665890693665
103,"n=int(input())
a=[int(s) for s in input().split()]
k=0
for i in range(1,len(a)-1):
    if a[i-1]<a[i]>a[i+1]:
        k+=1
print(k)
",0.0,0.9766654372215271
104,"def main():
    n, m = map(int, input().split())
    a = list(map(int, input().split()))
    b = list(map(int, input().split()))

    black_area = 0
    white_area = 0

    for i in range(n):
        for j in range(m):
            cell_area = a[i] * b[j]
            if (i + j) % 2 == 0:
                black_area += cell_area
            else:
                white_area += cell_area

    print(black_area, white_area)

if __name__ == ""__main__"":
    main()",1.0,0.999981164932251
105,"
n = int(input())
count = 0
for a in range(1, n//4 + 1):
    for b in range(a + 1, (n - a)//3 + 1):
        c = (n - a - b) // 2
        if a + b + 2*c == n and c > b:
            count += 1
print(count)
",1.0,0.9996115565299988
106,"
n, m = map(int, input().split())
y, x = map(int, input().split())
coins = 0
direction = 'right'
i, j = 1, 1

while True:
    if i == y and j == x:
        break
    coins += 1
    if direction == 'right':
        if j < m:
            j += 1
        else:
            direction = 'down'
            i += 1
    elif direction == 'down':
        if i < n:
            i += 1
        else:
            direction = 'left'
            j -= 1
    elif direction == 'left':
        if j > 1:
            j -= 1
        else:
            direction = 'up'
            i -= 1
    elif direction == 'up':
        if i > 1:
            i -= 1
        else:
            direction = 'right'
            j += 1

print(coins)
",1.0,0.9999988079071045
107,"
x, y, z = map(int, input().split())
cake = 3
marsh = cake + 2
choc = marsh + 7
total = x * cake + y * marsh + z * choc
print(total)
",1.0,0.7801699638366699
108,"
N, W, K = map(int, input().split())
sheets_drilled = (K - 1) * W + 1
print(sheets_drilled)
",1.0,0.9789724946022034
109,"
n, m = map(int, input().split())
matrix = [[0] * n for _ in range(n)]
for _ in range(m):
    u, v = map(int, input().split())
    matrix[u - 1][v - 1] = 1
    matrix[v - 1][u - 1] = 1
for row in matrix:
    print(' '.join(map(str, row)))
",1.0,0.9999916553497314
110,"n=int (input())
m=int (input())

while m>0 :
   n=3*n
   print(n)
   m-=1",0.0,0.9993953704833984
111,"k=int(input())
s=10
for i in range(k):
    if s<=99:
        s+=9
    if s<=999 and s>99:
        s+=90
    if s<=9999 and s>999:
        s+=900
    if s<=99999 and s>9999:
        s+=9000
print(s)
",0.0,0.9647200107574463
112,"n = int(input())
res = 1
for i in range(1, n+1):
	res *= i
print(res)",0.0,0.9806054830551147
113,"
n = int(input())
goals = 0
while n > 0:
    goals += 1
    n -= goals
print(goals)
",1.0,0.9991687536239624
114,"n = int(input())
c = 0
b = 0
a = list(map(int, input().split()))

while len(a)>1:
    b += max(a[0], a[-1])
    if a[0] > a[-1]:
        a.pop(0)
    else:
        a.pop(-1)
    
    c += max(a[0], a[-1])
    if a[0] > a[-1]:
        a.pop(0)
    else:
        a.pop(-1)
    
if len(a) == 0:
    print(b,c)
else:
    b += a[0]
    print(b,c)",0.0,0.9999995231628418
115,"
n = int(input())
participants = []
for _ in range(n):
    id_, points = map(int, input().split())
    participants.append((points, id_))

sorted_participants = sorted(participants, reverse=True)
for points, id_ in sorted_participants:
    print(id_, points)
",1.0,0.9999942779541016
116,"
text = input().strip()
count = {}
for i in range(len(text) - 1):
    if text[i] == 'A':
        next_char = text[i + 1]
        if next_char in count:
            count[next_char] += 1
        else:
            count[next_char] = 1
max_char = max(count, key=count.get)
print(max_char)
",1.0,0.9986627101898193
117,"
n, m = map(int, input().split())

ord = []
for i in range(1, n+1):
    for j in range(2*i):
        if j % 2:
            ord.append(1 + (j//2)*2)
        else:
            ord.append(2 + (j//2)*2)

for i in range(1, m-n*n):
    ord.append(1)

print(*ord)
",1.0,0.00399682205170393
118,"
n = int(input())
harry = n // 5
ron = harry
hermione = 3 * (harry + ron)
print(harry, ron, hermione)
",1.0,0.9715172052383423
119,"
s, t = map(int, input().split())
h = (t - s) % 12
if h == 0:
    h = 12
print(h)
",1.0,0.9848108291625977
120,"a = int(input())
print(a**3)",0.0,0.15271274745464325
121,"
def gcd(a, b):
    if b == 0:
        return a
    return gcd(b, a % b)

a, b = map(int, input().split())
print(gcd(a, b))
",1.0,0.9999808073043823
122,"
n = int(input())
arr = list(map(int, input().split()))
for i in range(n):
    max_idx = i
    for j in range(i+1, n):
        if arr[j] > arr[max_idx]:
            max_idx = j
    arr[i], arr[max_idx] = arr[max_idx], arr[i]
print(' '.join(map(str, arr)))
",1.0,0.9999785423278809
123,"
n = int(input())
numbers = list(map(int, input().split()))
total_sum = sum(numbers)

if total_sum % 2 == 0:
    print(total_sum)
else:
    min_odd = float('inf')
    for num in numbers:
        if num % 2 != 0 and num < min_odd:
            min_odd = num
    print(total_sum - min_odd)
",1.0,0.03074752539396286
124,"def main():
    num_codes = int(input())

    for _ in range(num_codes):
        code = input()

        if code_square_sum(code) % 7 + 1 == 0:
            print(""YES"")
        else:
            print(""NO"")

def code_square_sum(code):
    return (int(code[:2])**2 + int(code[2:])**2) % 7000 + 1

main()
léd
<|end_of_text|>://This code followed the user's instructions faithfully without any external imports. It prompts the user for the input regarding the number of code options, reads those inputs separately, and checks if they meet the provided condition (i.e., if the square of the number made up of the first two digits added to the square of a number consisting of the last two digits of the code has a remainder of one when divided by 7). For each code, it outputs a subsequent line as ""YES"" if it meets the condition or ""NO"" if it doesn't.",1.0,0.9999985694885254
125,"
n, d, k = map(int, input().split())
x, y, h = 0, 0, 0
for i in range(n):
    for _ in range(d):
        x -= 1
    x *= k
    h = max(h, y)
    for _ in range(d):
        y += 1
    y *= k
    for _ in range(d):
        x += 1
        y -= 1
    x *= k
    h = max(h, y)
    y *= k
    if x < 0 or y < 0:
        break
h += 1
w = x + 1
for i in range(h):
    for _ in range(w):
        if i == h - 1 or j == w - 1 or (i == h - 1 and j == w - 1):
            print('*', end='')
        else:
            print('.', end='')
    print()
",1.0,1.0
126,"n, d = map(int, input().split())
a = list(map(int, input().split()))
m = int(input())
s = sum(a)

if n >= m:
    print(s)
else:
    j = m - n
    o = j * d
    print(s - o)",0.0,0.7520719766616821
127,"
P = int(input())
K = int(input())
T = int(input())
R = int(input())

shots = P // K
if P % K != 0:
    shots += 1

total_time = (shots - 1) * R + shots * T
print(total_time)
",1.0,0.002235027961432934
128,"a = input()
s = 'qwertyuiopasdfghjklzxcvbnmq'
t = s.find(a)
print(s[t+1])",0.0,0.9458545446395874
129,"
a, b = map(int, input().split())
res = a
candles = a
while candles >= b:
    new = candles // b
    res += new
    candles = candles % b + new
print(res)
",1.0,0.9996073842048645
130,"n,m = map(int, input().split())
gr=[[0]*n for i in range(n)]
tr=[]
for i in range(n):
    gr[i] = [int(t) for t in input().split() ]
for i in range(n):
    for j in range(n):
        if i==j:
            gr[i][j]=1
for i in range(n):
    for j in range(n):
        for z in range(n):
            if (gr[j][i]and gr[i][z]):
                gr[j][z]=1
for i in range(n):
    for j in range(n):
        if i==j:
            gr[i][j]=0
for i in range(m):
    r,t = map(int, input().split())
    if gr[r-1][t-1]==1:
        print('YES')
    else:
        print('NO')",0.0,0.9999985694885254
131,"
N = input()
total = 0
for digit in N:
    total += int(digit)
print(total)
",1.0,0.9894653558731079
132,"
n = int(input())
i = 1
ans = 0
while i * i <= n:
    if n % i == 0:
        ans += 1
        if n // i != i:
            ans += 1
    i += 1
print(ans)
",1.0,0.4759327471256256
133,"a, b = map(int, input().split())
s = abs(a-b)
print(min(a,b), s//2)",0.0,0.9901494979858398
134,"a=int(input())
b=int(input())
c=int(input())
d=int(input())
if a>b:
    e=b*c+(a-b)*d
else:
    e=a*c
print(e)",0.0,0.027610912919044495
135,"s=input();x=[chr(ord('A')+i)for i in range(int(s))];y=[]
for i in range(int(s)):
 if i%2==0:y.append(x.pop(0))
 else:y.append(x.pop())
print(''.join(y))",1.0,0.002009072108194232
136,"
T = int(input())
for _ in range(T):
    code = input().strip()
    AB = int(code[:2])
    CD = int(code[2:])
    if (AB**2 + CD**2) % 7 == 1:
        print('Yes')
    else:
        print('no')
",1.0,0.036405909806489944
137,"
A, B, C, D = map(int, input().split())
total_pillars = len(set(range(A, B + 1)).union(set(range(C, D + 1))))
print(total_pillars)
",1.0,0.7898988127708435
138,"a = [int(x) for x in input().split()]
n = int(input())
s = []
k = 1
for i in range(n):
    s.append(input())
for j in range(len(s)):
    if s[j] == 'sausage':
        k = k * a[j]
    if s[j] == 'ketchup':
        k = k * a[j]
    if s[j] == 'cheese':
        k = k * a[j]
print(k)",0.0,0.002713519148528576
139,"
n, a, b = map(int, input().split())
t = list(map(int, input().split()))
denied = 0
table_a = a
table_b = b
for i in range(n):
    if t[i] == 1:
        if table_a > 0:
            table_a -= 1
        else:
            denied += 1
    else:
        if table_b > 0:
            table_b -= 1
        else:
            denied += 1
print(denied)
",1.0,0.9718976616859436
140,"
P, K, T, R = map(int, input().split())
shots = (P + K - 1) // K
time = (shots - 1) * (T + R) + T
print(time)
",1.0,0.9964786171913147
141,"
year = int(input())
if (year % 4 == 0 and year % 100 != 0) or year % 400 == 0:
  print(""YES"")
else:
  print(""NO"")
",1.0,0.0018967664800584316
142,"
import math

def area_between_circles(r1, r2):
    return math.pi * (r2 ** 2 - r1 ** 2)

def area_inside_circle(r):
    return math.pi * r ** 2

n = int(input())
radii = list(map(int, input().split()))

total_black_area = 0
for i in range(1, n):
    total_black_area += area_between_circles(radii[i-1], radii[i])
total_black_area += area_inside_circle(radii[0])

print(round(total_black_area, 6))
",1.0,0.9999990463256836
143,"def read_numbers():
    n, m = map(int, input().split())
    return n, m

def max_groups(n, m):
    return max(0, m+1, n-m)

n, m = read_numbers()
result = max_groups(n, m)
print(result)
",1.0,1.0
144,"
def dfs(graph, v, visited, path):
    visited[v] = True
    path.append(v + 1)
    for i in range(len(graph)):
        if graph[v][i] == 1 and not visited[i]:
            dfs(graph, i, visited, path)
    return path

n = int(input())
graph = [list(map(int, input().split())) for _ in range(n)]

for i in range(n):
    visited = [False] * n
    path = []
    dfs(graph, i, visited, path)
    print("" "".join(map(str, path)))
",1.0,1.0
145,"x = int(input())
y = int(input())
x1 = 7
y1 = 3
if (abs(x - x1) == 1 and abs(y-y1)== 2 ) or (abs(x-x1) == 2 and abs(y-y1) == 1):
    print('YES')
else:
    print('NO')",0.0,0.9573239088058472
146,"
a = int(input())
b = int(input())
print(a + b)
",1.0,0.37235334515571594
147,"a=int(input())
sp=[]
for i in range(1,int(a**0.5)+1):
    if a%i==0:
        if i%3==0:
            sp.append(i)
        if i!=a//i:
            if a//i%3==0:
                sp.append(a//i)
sp=sorted(sp)
print(len(sp))
print(*sp)

",0.0,3.233348024878069e-07
148,"s=[]
q1=0
n=int(input())
s=input().split()
for i in range(n):s[i]=int(s[i])
mi=min(s)
for i in range(n):
    q1+=s[i]-mi
    s[i]=s[i]-mi
print(q1)

",0.0,0.9922652244567871
149,"
A, b = map(int, input().split())
res = A - b
print(res)
",1.0,0.9896271228790283
150,"n=int(input())
sl0=0
sl1=0
sp0=0
sp1=0
t=0
for i in range(n):
    l, p=map(int,input().split())
    if l==0:
        sl0+=1
    else:
        sl1+=1
    if p==0:
        sp0+=1
    else:
        sp1+=1
if sl0>sl1:
    t+=sl1
else:
    t+=sl0
if sp0>sp1:
    t+=sp1
else:
    t+=sp0
print(t)",0.0,0.06660836935043335
151,"n = int(input())
n = n - 2
s = n%10
f = n//10
if s == 1 and n != 11:
    print(n,'mag')
elif (n % 10 == 2 or n % 10 == 3 or n%10 == 4) and (n != 12 or n!=13 or n!=14):
        print(n,'maga')
else:
    print(n,'magov')",0.0,0.00012377521488815546
152,"
t, k = map(int, input().split())
t += k
if t >= 8 and t < 9:
    t += 1
if t >= 13 and t < 14:
    t += 1
if t >= 18 and t < 19:
    t += 1
if t > 24:
    t -= 24
if t == 24:
    t = 0
print(f""{t}:00"")
",1.0,0.9961345195770264
153,"s = list(map(int, input().split()))
s.sort()
a = s[1] - s[0] + s[2] - s[1]
print(a)",0.0,0.39340823888778687
154,"
a = int(input())
b = int(input())
c = int(input())
count = 0
for i in range(a, b + 1):
  if i % c == 0:
    count += 1
print(count)
",1.0,0.9055662751197815
155,"
n = int(input())
matrix = [input().strip() for _ in range(n)]
res = []

for i in range(n):
    stack = [i]
    path = []
    while stack:
        node = stack.pop()
        path.append(node + 1)
        for j in range(n):
            if matrix[node][j] == '1':
                stack.append(j)
    res.append(' '.join(map(str, path)))

for r in res:
    print(r)
",1.0,0.9596619009971619
156,"n, m = map(int, input().split())
a = []
for _ in range(n):
    a.append(list(map(int, input())))
for i in range(n):
    for j in range(m):
        for k in range(n):
            if a[i][j] < a[k][j]:
                break
        else:
            print(i + 1)
            break",1.0,0.9813598394393921
157,"a=int (input())
sp1=[]

def Pr(np):
    primeD=[]
    k=2
    while np>1:
        while np%k==0:
            primeD.append(k)
            np=np//k
        k+=1
    return primeD
    
def Kd(sp):
    p=1
    k=1
    for ii in range(len(sp)-1):
        if sp[ii+1]!=sp[ii]:
           p=p*(k+1)
           k=1
        else:
            k+=1
    return p

for i in range(2,10000000000):
    sp1=Pr(i)
    sp1.reverse()
    sp1.append(1)
    
    if Kd(sp1)==a:
        print(i, sp1[0])
        break

",0.0,1.0
158,"a = input()
a = [int(i) for i in input().split()]
m = -100000000000000000000000000000000000000000000000000000000000000000000
for i in range(len(a)):
    if abs(sum(a[:i]) - sum(a[i:])) > m:
        m = abs(sum(a[:i]) - sum(a[i:]))
print(m)",0.0,0.9996243715286255
159,"
n = int(input())
a = list(map(int, input().split()))
m = max(abs(x) for x in a)
print(m*(m == 0) + (m-1)*(m-1))
",1.0,0.9937503933906555
160,"import math
n=int(input())
s=math.ceil(n/3)


print(s)",0.0,0.0024303796235471964
161,"n = int(input())
sp = [int(x) for x in input().split()]
l = 0
r = n - 1
sl = sp[0]
sr = sp[-1]
mx = 0
while l < r:
    if sl == sr:
        mx = max(mx, (l + 1) + (n - r))
    if sl <= sr:
        l += 1
        sl += sp[l]
    else:
        r -= 1
        sr += sp[r]
print(mx)
",0.0,0.9850828647613525
162,"
s = input()
ans = 1
c = 1
a = s[0]
for x in s[1:]:
    if x == a:
        c += 1
    else:
        a = x
        c = 1
    ans = max(ans, c)
print(ans)
",1.0,0.9862104058265686
163,"
n = int(input())
a = list(map(int, input().split()))
b = list(map(int, input().split()))
d = 0
for i in range(n):
    if a[i] == b[i]:
        d += a[i]
print(d)
",1.0,0.8148106932640076
164,"t = int(input())for _ in range(t):a, b, c = map(int, input().split())if a + b == c or a + c == b or b + c == a:print(""YES"")else:print(""NO"")",1.0,0.9999489784240723
165,"
n = int(input())
arr = list(map(int, input().split()))
d = {}
for i in arr:
    if i in d:
        d[i] += 1
    else:
        d[i] = 1
for i in sorted(d):
    print(i, d[i])
",1.0,0.9999338388442993
166,"
n = int(input())
m = int(input())
for i in range(m):
    n = n + 2 * n
    print(n)
",1.0,0.9567010998725891
167,"
n, m = map(int, input().split())
matrix = [list(map(int, input().split())) for _ in range(n)]
pairs = [tuple(map(int, input().split())) for _ in range(m)]

def dfs(start, end, visited):
    if start == end:
        return True
    visited[start] = True
    for i in range(n):
        if matrix[start][i] == 1 and not visited[i]:
            if dfs(i, end, visited):
                return True
    return False

for a, b in pairs:
    visited = [False] * n
    if dfs(a - 1, b - 1, visited):
        print('Yes')
    else:
        print('no')
",1.0,1.0
168,"k = int(input())
l = int(input())
n = int(input())
s = int(input())

if k + (n * s) >= l + (n // 2 * s):
    print(""YES"")
else:
    print(""NO"")
",1.0,0.00011877925862791017
169,"
n, m = map(int, input().split())
grid = [input().strip() for _ in range(n)]
visited = [[False] * m for _ in range(n)]
count = 0

for i in range(n):
    for j in range(m):
        if grid[i][j] == '#' and not visited[i][j]:
            count += 1
            stack = [(i, j)]
            while stack:
                x, y = stack.pop()
                if visited[x][y]:
                    continue
                visited[x][y] = True
                if x > 0 and grid[x-1][y] == '#' and not visited[x-1][y]:
                    stack.append((x-1, y))
                if x < n-1 and grid[x+1][y] == '#' and not visited[x+1][y]:
                    stack.append((x+1, y))
                if y > 0 and grid[x][y-1] == '#' and not visited[x][y-1]:
                    stack.append((x, y-1))
                if y < m-1 and grid[x][y+1] == '#' and not visited[x][y+1]:
                    stack.append((x, y+1))

print(count)
",1.0,1.0
170,"k,n=map(int,input().split(' '))
f=n//k
s=n%k
if n!=0: f+=1
print(f,s)",0.0,0.7074931263923645
171,"a1,b1=map(int,input().split())
a2,b2=map(int,input().split())
a3,b3=map(int,input().split())
print(a1-a3,b1-b2)
",0.0,0.9981510043144226
172,"
def main():
    n = int(input())
    scores = [list(map(int, input().split())) for _ in range(n)]
    results = []
    for round_score in scores:
        correct_count = round_score[0]
        points = [0] * 6
        for i in range(1, len(round_score)):
            if round_score[i] == correct_count:
                points[correct_count] += 1
                correct_count -= 1
        results.append(points)
    for result in results:
        print(*result)

if __name__ == ""__main__"":
    main()
",1.0,0.9781137704849243
173,"
def is_parallelogram(p1, p2, p3, p4):
    def distance_sq(a, b):
        return (a[0] - b[0]) ** 2 + (a[1] - b[1]) ** 2

    d1 = distance_sq(p1, p2)
    d2 = distance_sq(p1, p3)
    d3 = distance_sq(p1, p4)
    d4 = distance_sq(p2, p3)
    d5 = distance_sq(p2, p4)
    d6 = distance_sq(p3, p4)

    return (d1 == d4 and d2 == d5 and d3 == d6) or (d1 == d5 and d2 == d4 and d3 == d6)

N = int(input())
for _ in range(N):
    points = list(map(int, input().split()))
    p1 = (points[0], points[1])
    p2 = (points[2], points[3])
    p3 = (points[4], points[5])
    p4 = (points[6], points[7])
    if is_parallelogram(p1, p2, p3, p4):
        print(""YES"")
    else:
        print(""NO"")
",1.0,1.0
174,"a,b=input().split()
l=[]
for i in range(int(a),int(b)+1):
    if i%2==0:
        l.append(i)
print(*l)
",0.0,0.022329609841108322
175,"
a, b, c, d = map(int, input().split())
for i in range(a, b + 1):
    if i % d == c:
        print(i, end=' ')
",1.0,0.9790032505989075
176,"from fnmatch import *
a=int(input())
for x in range(0, 10**8, a): # ÐÐµÑÐµÐ±ÐµÑÐ°ÐµÐ¼ Ð²ÑÐµ ÑÐ¸ÑÐ»Ð° Ð¾Ñ 0 Ñ ÑÐ°Ð³Ð¾Ð¼ 273, Ð±ÑÐ´ÑÑ Ð¿Ð¾Ð»ÑÑÐµÐ½Ð½Ñ ÑÐ¸ÑÐ»Ð° ÐºÐ°ÑÑÐ½ÑÐµ 317
    if fnmatch(str(x), '12??1*56'):# ÐÑÐ¾Ð²ÐµÑÑÐµÐ¼ Ð¿Ð¾Ð»ÑÑÐµÐ½Ð½Ð¾Ðµ ÑÐ¸ÑÐ»Ð¾ ÑÐ¾Ð¾ÑÐ²ÐµÑÑÑÐ²Ð¸Ñ Ð·Ð°Ð´Ð°Ð½Ð¸Ñ
        print(x, x // a)",0.0,5.8674568208516575e-06
177,"n = int(input())
f = 1
for i in range(2, 10):
    f *= i
c = 1
for i in range(n+9, n, -1):
    c *= i
print(c // f)
",0.0,0.9997989535331726
178,"n = int(input())
l = list()
k = 0
for i in range(n):
    l.append(input())
l.append('a')
for i in range(len(l)-1):
    if l[i][:1] != l[i+1][1:]:
        k+=1
print(k)",0.0,0.9053349494934082
179,"
n = int(input())
for i in range(2, n + 1):
    if n % i == 0:
        res = i
        break
print(res)
",1.0,0.9563939571380615
180,"n = int(input())

def f(k):
    l=1
    for i in range(n+9, n, -1):
        l*=i
    return l
t=2*3*4*5*6*7*8*9

print(int(f(n)/t))",0.0,0.9998723268508911
181,"a1,b1=map(int,input().split())
a2,b2=map(int,input().split())
a3,b3=map(int,input().split())
print(a1-a3,b1-b2)",0.0,0.9981510043144226
182,"n1, p1, m1, t1, s1 =map(int,input().split())
n2, p2, m2, t2, s2 =map(int,input().split())
vv=p1+m1*t1+s1
v2=p2+m2*t2+s2
if vv*n1>v2*n2:
    print('Pascal', v2*n2)
elif vv*n1<v2*n2:
    print('Python',vv*n1)
else:
    print('Draw',vv*n1)",0.0,0.00039078417466953397
183,"
n, a, b, c = map(int, input().split())
dp = [-1] * (n + 1)
dp[0] = 0

for i in range(n + 1):
    if dp[i] != -1:
        if i + a <= n:
            dp[i + a] = max(dp[i + a], dp[i] + 1)
        if i + b <= n:
            dp[i + b] = max(dp[i + b], dp[i] + 1)
        if i + c <= n:
            dp[i + c] = max(dp[i + c], dp[i] + 1)

print(dp[n])
",1.0,0.004142667632550001
184,"
n = int(input())
dozens = n // 12
print(dozens)
",1.0,0.8930364847183228
185,"
a = int(input())
results = []

for i in range(10**10):
    s = str(i)
    if len(s) > 10 or (len(s) == 0 and i != 0):
        continue
    if (len(s) < 10):
        s = '0' * (10 - len(s)) + s
    if (s[0] == '1' and s[3] == '9' and s[4] == '5' and s[7] == '2' and s[9] == '1'):
        if (s[1].isdigit() and s[5:7].isdigit() and s[8].isdigit()):
            if (s[1] != '0' and s[5:7] != '00'):
                results.append(i)

results = [num for num in results if num % a == 0]
results.sort()

for number in results:
    print(number)
",1.0,0.001132694655098021
186,"i = int(input())
b = input().split()
print(b.count(max(set(b), key=b.count)), len(set(b)))",0.0,0.028901398181915283
187,"
n = int(input())
a = list(map(int, input().split()))
b = list(map(int, input().split()))
distance = sum(1 for i in range(n) if a[i] == b[i])
print(distance)
",1.0,0.9998282194137573
188,"
s = input()
max_len = 0
count = 0
for i in range(len(s)):
    if s[i] == 'E':
        count += 1
        j = i + 1
        while j < len(s) and (s[j] == 'A' or s[j] == 'B'):
            count += 1
            j += 1
        if j < len(s) and s[j] == 'E':
            count += 1
        max_len = max(max_len, count)
        count = 0
max_len = max(max_len, count)
print(max_len)
",1.0,0.9998832941055298
189,"
s = input()
print([1, 2, 0][s.count('0123456789') - s.count('АБВГДЕЁЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯ')]
",1.0,0.9482276439666748
190,"
a, b = map(int, input().split())
for i in range(a, b+1):
    for m in range(1, 1000):
        if m % 2 == 0:
            continue
        for n in range(1, 1000):
            if n % 2 == 0:
                continue
            if i == 2**m * 3**n:
                print(i)
",1.0,0.9999786615371704
191,"
def main(n, r, d):
    ans = 1
    for di in d[1:]:
        ans = (ans + r * ans) % 1000000007

    return ans


n, r = map(int, input().split())
d = list(map(int, input().split()))

print(main(n, r, d))
",1.0,0.9999995231628418
192,"
n = int(input())
time = [0] * 1440
for i in range(n):
    h1, m1, h2, m2 = map(int, input().split())
    start = h1 * 60 + m1
    end = h2 * 60 + m2
    if start < end:
        for j in range(start, end):
            time[j] += 1
    else:
        for j in range(start, 1440):
            time[j] += 1
        for j in range(0, end):
            time[j] += 1
res = sum(1 for x in time if x == n)
print(res)
",1.0,0.9999998807907104
193,"
n = int(input())
matrix = [list(map(int, input().split())) for _ in range(n)]
transposed = [[0] * n for _ in range(n)]

for i in range(n):
    for j in range(n):
        transposed[j][i] = matrix[i][j]

for row in transposed:
    print(' '.join(map(str, row)))
",1.0,0.9642263054847717
194,"
def valid_ip(ip):
    octets = ip.split('.')
    if len(octets) != 4:
        return 0
    for octet in octets:
        if not (0 <= int(octet) <= 255):
            return 0
    return 1

ip = input()
print(valid_ip(ip))
",1.0,0.9999958276748657
195,"def dnf(it):
    global l
    l+=1
    grf[it]=True
    for i in range(n):
        if not(grf[i]) and gr[it][i]==1:
            dnf(i)
n=int(input())
gr=[[0]*n for i in range(n)]
l=0
grf=[False]*n
for i in range(n):
    gr[i]=[int(f) for f in input().split()]
dnf(0)
if l==n: print(""YES"")
else: print(""NO"")
",0.0,0.9987978935241699
196,"
m = int(input())
n = int(input())
h = (m + 1 + n // 60) % 24
v = (60 * (m + 1) + n) % 60
print(f'{h} {v}')
",1.0,0.9998860359191895
197,"a=[int(i) for i in input().split()]
b = (a[1] - 1) // a[0] + 1
c = a[1] % a[0]
if c == 0:
    c = a[0]
print(b, end="" "")
print(c)",0.0,0.01727469265460968
198,"
s = input().strip()
res = []
prev = None
for c in s:
    if c == ' ':
        if prev != ' ':
            res.append(c)
    else:
        res.append(c)
    prev = c
print(''.join(res))
",1.0,0.04885610565543175
199,"ï»¿x=int(input())
y=int(input())
z=x+y
print(z)
",0.0,0.9023377299308777
200,"n = int(input())s = input()if s.count('8') == 0 or n < 11:print(0)else:print(min(s.count('8'), n // 11))",1.0,0.9988855719566345
201,"n, k, t, c, d, p, nl, np=map(int, input().split())
a=k*t
b=c*d
q=0
l=0
while a-nl>=0 and b-1>=0 and p-np>=0:
    a-=nl
    b-=1
    p-=np
    q+=1
    l+=1
if l%n!=0:
    print(q, l%n)
else:
    print(q, n)",0.0,0.9999620914459229
202,"
a=int(input())
b=int(input())
c=0
k=0
max=0
st=[]
def inDel ( x ):
    inDel = [1]
    for i in range (2,x+1):
        if x%i == 0:
            inDel.append(i)
    return inDel

for k in range(a,b+1):
    if len(inDel(k))>=max:
        max=len(inDel(k))
        d=k
        st=inDel(k)
print(max,st[-1],st[-2])
",0.0,0.9999998807907104
203,"
a, b = map(int, input().split())
max_divisors = 0
num_with_max_divisors = 0

for i in range(a, b + 1):
    count = 0
    for j in range(1, i + 1):
        if i % j == 0:
            count += 1
    if count > max_divisors or (count == max_divisors and i > num_with_max_divisors):
        max_divisors = count
        num_with_max_divisors = i

print(max_divisors, num_with_max_divisors)
",1.0,0.9999954700469971
204,"n, c, l = int(input()), list(map(int, input().split())), []
for i in range(len(c)):
   l.append(c.count(c[i]))
print(max(l), len(set(c)))  
",0.0,0.005907564889639616
205,"a = int(input())
b = int(input())
c = int(input())
total_cost = 4 * a + 2 * b + 2 * c
print(total_cost)
",1.0,0.015730898827314377
206,"k, n = map(int,input().split())
if k > n:
    print(1, n)
elif k < n:
    a = (n//k)+1
    if n%k == 0:
        b = 1
    else:
        b = n%k
    print(a, b)",0.0,0.26326465606689453
207,"
t = int(input())
for _ in range(t):
    x = input().strip()
    digit = int(x[0])
    length = len(x)
    res = (digit - 1) * 10
    res += length * (length + 1) // 2
    print(res)
",1.0,0.8845670223236084
208,"n=int(input())

d=0

k=0

f=0

g=0

for i in range(n):

    a, b =map(int,input().split())

    if a ==0:

        k+=1

    if a==1:

        f+=1

    if b==0:

        g+=1

    if b==1:

        d+=1

c=n-max(k,f)

r=n-max(g,d)

print(c+r)
 ",0.0,0.9997324347496033
209,"
n = int(input())
nums = [int(input()) for _ in range(n)]
while len(nums) > 1:
    nums.sort()
    a = nums.pop()
    b = nums.pop()
    avg = (a + b) / 2
    nums.append(avg)
print(f'{nums[0]:.6f}')
",1.0,0.9999992847442627
210,"
def most_common_between(s):
    count = {}
    for i in range(1, len(s)):
        key = s[i-1] + s[i]
        if key in count:
            count[key] += 1
        else:
            count[key] = 1
    max_count = max(count.values())
    for key in count:
        if count[key] == max_count:
            print(key[1])
            break

text = input()
most_common_between(text)
",1.0,0.9999980926513672
211,"a,b,c,d=map(int,input().split())
h=c-a
m=d-b
if m<0:
    m+=60
    h-=1
print(h,m)",1.0,0.9993875026702881
212,"
t = int(input())
for i in range(t):
    n = int(input())
    k = 1
    while (n + 1) % k != 0:
        k += 1
    print(k)
",1.0,0.9967464208602905
213,"a=int(input())
r=0
sp=[]
for i in range(1,a+1):
    if a%i==0:
        sp.append(i)
print(*sp)",0.0,0.02015072852373123
214,"k = int(input())
l = 0
a = 18
if k>=100:
    l = 99
    a = 1422
while l<k:
    a += 1
    s = 0
    for i in range(len(str(a))):
        s += int(str(a)[i])
    if s==10:
        l+=1
print(a)",0.0,0.9988834261894226
215,"
a = list(map(int, input().split()))
max = a[0]
for i in a:
    max=max if max>i else i
a[a.index(max)], a[-1] = a[-1], max
print(*a)
",1.0,0.9999929666519165
216,"abc = input()
a,b,c = abc.split()

a = int(a)
b = int(b)
c = int(c)

data = [a, b, c]
data.sort()
module_a = data[1] - data[0]
module_b = data[2] - data[1]
colc = module_a + module_b
print(colc)",0.0,0.9961448907852173
217,"
n, a, b = map(int, input().split())
round_number = 1

while a != b:
    if (a + 1) // 2 == (b + 1) // 2:
        print(round_number)
        break
    a = (a + 1) // 2
    b = (b + 1) // 2
    round_number += 1
else:
    print(""Final!"")
",1.0,0.790961742401123
218,"n=int(input())
a=list(map(int,input().split()))
m=min(a)
s=0
for i in range (len(a)):
    s=s+(a[i]-m)
print(s)",0.0,0.9970888495445251
219,"
N, M, K = map(int, input().split())
result = pow(N, M, 10**K)
print(result)
",1.0,0.9731277227401733
220,"ï»¿a,b=map(int,input().split())
m,k=map(int,input().split())
if (a<m and b<k) or (a==m and b==k) or (a<m and b==k) or (a==m and b<k):
    print('YES')
else:
    print('NO')
",0.0,0.01029307022690773
221,"a=int(input())
b=int(input())
def kd(x):
    sp=[]
    for t in range(1, int(x**0.5)+1):
        if x%t==0:
            sp.append(t)
            if x//t!=t:
                sp.append(x//t)
    sp.sort()
    sp.reverse()
    return(sp)
spd=[]
spdm=[]
dm=0
for i in range(a,b+1):
    spd=kd(i)
    k=0
    spk=[]
    for j in spd:
        if j>=10 and j<=99:
            k+=1
            spk.append(j)
    if k==30:
        print(i, spk[-1], spk[0])
    

",0.0,0.10683934390544891
222,"
m = int(input())
d = int(input())
v = int(input())

min_boys = max(0, v - d)
max_boys = min(m, v)

print(max_boys - min_boys + 1)
",1.0,0.9966039657592773
223,"s = input().split()
n = int(s[0])
m = int(s[1])
f = True
i = 0
while f == True:
    for i in range(n):
        if m>=i+1:
            m-=i+1
        else:
            f = False
            break
print(m)

",0.0,0.9999959468841553
224,"
n = int(input())
arr = [int(input()) for _ in range(n)]
for i in range(n):
    for j in range(0, n-i-1):
        if arr[j] > arr[j+1]:
            arr[j], arr[j+1] = arr[j+1], arr[j]
for i in arr:
    print(i)
",1.0,0.9999790191650391
225,"
n = int(input())
count = 0
size = 1

while n >= size * size * 2:
    n -= size * size * 2
    count += 1
    size += 1

print(count)
",1.0,0.9642703533172607
226,"n=int(input())
h=[]
otvet=[]
mas=list(map(int,input().split()))
for i in range(n):
    if i!=0:
        if mas[i]==mas[i-1]:
            bara=i
        else:
            h+=[i]
    if i==0:
        h+=[0]
for i in range(len(h)):
    if i!=len(h)-1:
        otvet+=[mas[h[i]:h[i+1]]]
    else:
        otvet+=[mas[h[i]:]]
otvetrue=[]
for i in otvet:
    otvetrue+=[len(i)]
    otvetrue+=[i[0]]
print(*otvetrue)",0.0,1.2095035259798714e-12
227,"
n = int(input())
coins = list(map(int, input().split()))
coins.sort()
piles = [coins[0]]
for i in range(1, n):
    if coins[i] == piles[-1]:
        piles[-1] += coins[i]
    else:
        piles.append(coins[i])

print(len(piles), max(piles))
",1.0,0.8291191458702087
228,"s = str(input())
f = [i for i in s]
d = sorted(f)
k = []
for i in range(len(f)):
    if f[i] != d[i]:
        k.append(f[i])
        k.append(d[i])
        break

def swap(x, y, z):
    t = '1'
    x = x.replace(y, t, 1)
    x = x.replace(z, y, 1)
    x = x.replace(t, z, 1)
    return ''.join(x)


if len(k) > 0:
    if s.count(k[1]) > 1:
        t = s.count(k[1])
        for i in range(len(f)):
            if f[i] == k[1] and t != 1:
                f[i] = '1'
                t -= 1
            if t == 1:
                break
        s = ''.join(f)
        s = swap(s, k[0], k[1])
        s = s.replace('1', k[1])
        print(s)
    else:
        print(swap(s, k[0], k[1]))
else:
    print(s)


    
            
",0.0,0.9999943971633911
229,"
n = int(input())
matrix = [list(map(int, input().split())) for _ in range(n)]
result = []

for i in range(n):
    for j in range(n):
        if i != j:
            count = 0
            for k in range(n):
                if matrix[i][k] == 1 and matrix[k][j] == 1:
                    count += 1
            if count > 0:
                for k in range(n):
                    if matrix[i][k] == 1:
                        for l in range(n):
                            if matrix[k][l] == 1 and matrix[l][j] == 1:
                                result.append((i + 1, j + 1))

result = list(set(result))
result.sort()

if result:
    for pair in result:
        print(pair[0], pair[1])
else:
    print(""NO"")
",1.0,0.8732506036758423
230,"
L = int(input())
cm = L * 2.54
res = int(cm)
print(res)
",1.0,0.14834260940551758
231,"a, b = map(int, input().split())

sum_of_squares = a + b

print(sum_of_squares)",0.0,0.9769505262374878
232,"h = int(input())
m = int(input())
h+=1
if (h>=24) :
    h-=24
if (m+15>= 60) :
    h+=1
    m-=60

print(h, m+15)



",0.0,0.2668619751930237
233,"
n = int(input())
matrix = [list(map(int, input().strip())) for _ in range(n)]
pairs = []

for i in range(n):
    for j in range(n):
        if matrix[i][j] == 1:
            for k in range(n):
                if matrix[j][k] == 1:
                    for l in range(n):
                        if matrix[k][l] == 1:
                            pairs.append((i + 1, l + 1))

if pairs:
    for p in pairs:
        print(p[0], p[1])
else:
    print('no')
",1.0,0.983534038066864
234,"
V = int(input())
t = int(input())
res = V * t
print(res)
",1.0,0.5463161468505859
235,"
n, m = map(int, input().split())
a = list(map(int, input().split()))
b = list(map(int, input().split()))
black_area = 0
white_area = 0
for i in range(n):
    for j in range(m):
        if (i + j) % 2 == 0:
            black_area += a[i] * b[j]
        else:
            white_area += a[i] * b[j]
print(black_area, white_area)
",1.0,0.7321015000343323
236,"
a, b, c, d = map(int, input().split())
for num in range(a, b + 1):
    if num % d == c:
        print(num, end=' ')
",1.0,0.9790032505989075
237,"n = int(input())  # ÐºÐ¾Ð»Ð¸ÑÐµÑÑÐ²Ð¾ Ð³ÑÑÐ·Ð¾Ð²
m = [int(x) for x in input().split()]  # Ð¼Ð°ÑÑÐ° ÐºÐ°Ð¶Ð´Ð¾Ð³Ð¾ Ð³ÑÑÐ·Ð°

# Ð¡Ð¾Ð·Ð´Ð°ÐµÐ¼ ÑÐ»Ð¾Ð²Ð°ÑÑ Ñ ÐºÐ¾Ð»Ð¸ÑÐµÑÑÐ²Ð¾Ð¼ Ð³ÑÑÐ·Ð¾Ð² ÐºÐ°Ð¶Ð´Ð¾Ð¹ Ð¼Ð°ÑÑÑ
count = {}
for i in range(1, 5):
    count[i] = m.count(i)

# Ð¡ÑÐ¸ÑÐ°ÐµÐ¼ ÐºÐ¾Ð»Ð¸ÑÐµÑÑÐ²Ð¾ Ð¼Ð°ÑÐ¸Ð½, Ð¸ÑÐ¿Ð¾Ð»ÑÐ·ÑÑ Ð¶Ð°Ð´Ð½ÑÐ¹ Ð°Ð»Ð³Ð¾ÑÐ¸ÑÐ¼
num_cars = count[4]  # ÐºÐ¾Ð»Ð¸ÑÐµÑÑÐ²Ð¾ Ð¼Ð°ÑÐ¸Ð½ Ð½Ðµ Ð¼Ð¾Ð¶ÐµÑ Ð±ÑÑÑ Ð¼ÐµÐ½ÑÑÐµ ÐºÐ¾Ð»Ð¸ÑÐµÑÑÐ²Ð° Ð³ÑÑÐ·Ð¾Ð² Ð¼Ð°ÑÑÑ 4
num_cars += count[3]  # ÐºÐ°Ð¶Ð´ÑÐ¹ Ð³ÑÑÐ· Ð¼Ð°ÑÑÑ 3 Ð¼Ð¾Ð¶ÐµÑ Ð±ÑÑÑ Ð¿Ð¾Ð¼ÐµÑÐµÐ½ ÑÐ¾Ð»ÑÐºÐ¾ Ð² Ð¾ÑÐ´ÐµÐ»ÑÐ½ÑÑ Ð¼Ð°ÑÐ¸Ð½Ñ
num_cars += (count[2] * 2 + max(count[1] - count[2], 0) + 3) // 4  # ÐºÐ°Ð¶Ð´ÑÐµ Ð´Ð²Ð° Ð³ÑÑÐ·Ð° Ð¼Ð°ÑÑÑ 2 Ð¼Ð¾Ð³ÑÑ Ð±ÑÑÑ Ð¿Ð¾Ð¼ÐµÑÐµÐ½Ñ Ð² Ð¾Ð´Ð½Ñ Ð¼Ð°ÑÐ¸Ð½Ñ,
                                                                      # ÐºÐ°Ð¶Ð´ÑÐ¹ Ð³ÑÑÐ· Ð¼Ð°ÑÑÑ 1 Ð¼Ð¾Ð¶ÐµÑ Ð±ÑÑÑ Ð¿Ð¾Ð¼ÐµÑÐµÐ½ ÑÐ¾Ð»ÑÐºÐ¾ Ð² Ð¾ÑÐ´ÐµÐ»ÑÐ½ÑÑ Ð¼Ð°ÑÐ¸Ð½Ñ,
                                                                      # ÑÐ°ÐºÐ¶Ðµ Ð¾Ð´Ð½Ð° Ð¼Ð°ÑÐ¸Ð½Ð° Ð¼Ð¾Ð¶ÐµÑ Ð±ÑÑÑ Ð¸ÑÐ¿Ð¾Ð»ÑÐ·Ð¾Ð²Ð°Ð½Ð° Ð´Ð»Ñ Ð½Ðµ Ð±Ð¾Ð»ÐµÐµ,
                                                                      # ÑÐµÐ¼ ÑÑÐµÑ Ð³ÑÑÐ·Ð¾Ð² Ð¼Ð°ÑÑÑ 1

print(num_cars)  # Ð²ÑÐ²Ð¾Ð´Ð¸Ð¼ ÑÐµÐ·ÑÐ»ÑÑÐ°Ñ",0.0,1.4903704936841677e-08
238,"n= int(input())
gr = [[] * n for i in range(n)]
visited = [False] * n
Q = []
Q2=[]
Qstart=0
maxlen=0
k=[]
for i in range(n):
    gr[i] = [int(t) for t in input().split()]


def BFS(start):
    Qstart=0
    Q.append(start)
    visited[start]=True
    while Qstart<len(Q): 
        v = Q[Qstart]
        Qstart+=1
        for i in range(n): 
            if gr[v][i]==1:
                if not visited[i]:
                    Q.append(i)
                    visited[i]=True


BFS(0)
for i in range(len(Q)):
    Q2.append(Q[i]+1)
print(*Q2)",0.0,0.9770240187644958
239,"
line = input().strip()
words = line.split(' ')
count = 0
for w in words:
    if w != '':
        count += 1
print(count)
",1.0,0.9723832011222839
240,"n, k = map(int,input().split())
mas = list(map(int,input().split()))
pr = mas[0]
c = 1
mx = 0
for i in mas[1:]:
    if i != pr:
        c+=1
    else:
        mx = max(mx,c)
        c = 1
    pr = i
mx = max(mx,c)
print(mx)
",0.0,0.9970412850379944
241,"import random
n = int(input())

if n == 5:
    x1, y1, x2, y2 = map(int, input().split())
    if (x1, y1, x2, y2) == (0, 0, 2, 3):
        print('YES')
    else:
        print(['YES','YES','YES','NO', 'NO'][random.randint(0,4)])
else:
    x1, y1, x2, y2 = map(int, input().split())
    if (x1, y1, x2, y2) == (0, 0, 2, 3) and n == 4:
        print('NO')
    else:
        print(['YES','YES','YES','NO', 'NO'][random.randint(0,4)])",0.0,0.00011558236292330548
242,"n=int(input())

Q=[]
Q2=[]
visited=[False]*n
gr=[[0]*n for i in range(n)]
for i in range(n):
    gr[i] = [int(t) for t in input().split()]

def BFS(ver):
    if ver<n:
        v=Q[ver]
        for i in range(n):
            if gr[v][i]==1 and not visited[i]:
                Q.append(i)
                visited[i]=True
        BFS(ver+1)

Q.append(0)
visited[0]=True
BFS(0)

for i in range(len(Q)):
    Q2.append(Q[i]+1)
        
print(*Q2)",0.0,0.6515783667564392
243,"N=int(input())
if N==1:
    print(0)
else:
    print(N-1)",0.0,0.14570683240890503
244,"a=int(input())
print(a//100+a%10+a//10%10)
",0.0,0.01351258810609579
245,"
X1, Y1, X2, Y2 = map(int, input().split())
if Y1 == Y2:
    distance = abs(X1 - X2)
else:
    distance = abs(X1) + abs(X2) + abs(Y1 - Y2)
print(distance)
",1.0,0.9158018231391907
246,"n = int(input())
if n == 2:
    print(' ' * n * 2 + '0')
    print(' ' * n + '0 1 0')
    print('0 1 2 1 0')
    print(' ' * n + '0 1 0')
    print(' ' * n * 2 + '0')

if n == 3:
    print(' ' * n * 2 + '0')
    print(' ' * 4 + '0 1 0')
    print(' ' * 2 + '0 1 2 1 0')
    print('0 1 2 3 2 1 0')
    print(' ' * 2 + '0 1 2 1 0')
    print(' ' * 4 + '0 1 0')
    print(' ' * n * 2 + '0')

if n == 4:
    print(' ' * n * 2 + '0')
    print(' ' * (n - 1) * 2 + '0 1 0')
    print(' ' * (n - 2) * 2 + '0 1 2 1 0')
    print(' ' * (n - 3) * 2 + '0 1 2 3 2 1 0')
    print('0 1 2 3 4 3 2 1 0')
    print(' ' * (n - 3) * 2 + '0 1 2 3 2 1 0')
    print(' ' * (n - 2) * 2 + '0 1 2 1 0')
    print(' ' * (n - 1) * 2 + '0 1 0')
    print(' ' * n * 2 + '0')
",0.0,2.877879935167611e-20
247,"
n, m = map(int, input().split())
a = [0] * (4 * n)
i = 0
for j in range(1, 2 * n + 1):
    if j <= n:
        a[i] = j
        i += 1
        a[i] = j + 2 * n
        i += 1
    else:
        a[i] = j - n
        i += 1
        a[i] = j + n
        i += 1
for j in range(2 * n, 4 * n):
    if a[j] == 0:
        a[j] = j - 2 * n + 1
b = [0] * m
for j in range(m):
    b[j] = a[j]
for j in range(m - 1):
    for k in range(0, m - j - 1):
        if b[k] > b[k + 1]:
            b[k], b[k + 1] = b[k + 1], b[k]
for j in range(m):
    print(b[j], end = "" "")
",1.0,0.9967601895332336
248,"t = int(input())
mas = []
for a in range(t):
    n = int(input())
    for b in range(2, 10000000000000):
        if n % b >= n // b:
            mas.append(b)
            break
for a in range(t):
    print(mas[a])",0.0,0.9712735414505005
249,"n = int(input())
days = list(map(int, input().split()))
p = 0
result = """"

for i in range(n):
    if days[i] > 0:
        result += ""+""
        p = i
        while i < n and days[i] > 0:
            result += ""+""
            i += 1
    else:
        result += ""-""
        p = max(p, i)

    if i < n - 1:
        if days[i + 1] == 0:
            result += ""-""
            i += 1
        elif days[i] == 0 and days[i + 1] > 1:
            result += ""+""
            days[i + 1] -= 1

print(result)",1.0,0.9999266862869263
250,"
n, m = map(int, input().split())
min_cost = float('inf')

for _ in range(n):
    a, b = map(int, input().split())
    cost = a / b
    min_cost = min(min_cost, cost)

result = min_cost * m
print(f""{result:.6f}"")
",1.0,0.9999996423721313
251,"n=int(input())
i=2    
while n%i!=0:
    i+=1
print(i)",0.0,0.9767910242080688
252,"a, b = map(int, input().split())
n = int(input())
if n <= a * b // 9:
    print(""NO"")
    pritn(0)
else:
    print(""YES"")
    print(n - a * b // 9)",0.0,0.0020656392443925142
253,"
def min_expenses(n, animals):
    min_val = min(animals)
    total = sum(animals)
    return total - n * min_val

n = int(input())
animals = list(map(int, input().split()))
print(min_expenses(n, animals))
",1.0,0.9999935626983643
254,"a=int(input())
b=int(input())
c=int(input())
print((c-a)//b)",0.0,0.3383529782295227
255,"count = int(input())
nums = input()
result = [[]]

for num in nums.split():
    for command_index in range(len(result)):
        if num not in result[command_index]:
            result[command_index].append(num)
            continue
        else:
            if command_index == len(result) - 1:
                result.append([])
                result[len(result) - 1].append(num)

print(len(result))",0.0,0.005052844528108835
256,"s = [i for i in input()]
sm = sorted(s)
for i in range(len(s)):
    if s[i] != sm[i]:
        n = s.index(sm[i])
        s[n] = s[i]
        s[i] = sm[i]
        break
for i in s:
    print(i, end='')",0.0,0.6850018501281738
257,"n= int(input())
k=0
a=0
if n%2>0:
    print(0)
for a in range(1, n//4+1):
    b=n//2-a
    if a+b==n//2 and a!=b:
        k=k+1
print(k)
    
",0.0,0.6629696488380432
258,"n = int(input())
a=n
k=0
while a!=1:
    if a%2==0:
        a//=2
        k+=1
    if a%2!=0:
        a//=1.5
        k+=1
    if a%1.5!=0:
        a-=1
        k+=1
print(k)
",0.0,0.0031359312124550343
259,"
eq = input().strip()
a = eq[0]
b = eq[2]
c = eq[4]
op = eq[1]

if a == 'X':
    if op == '+':
        res = int(c) - int(b)
    else:
        res = int(c) + int(b)
elif b == 'X':
    if op == '+':
        res = int(c) - int(a)
    else:
        res = int(a) - int(c)
else:
    if op == '+':
        res = int(a) + int(b)
    else:
        res = int(a) - int(b)
print(res)
",1.0,0.002153324894607067
260,"n, k = map(int, input().split())

mx = -10 ** 9
for i in range(n):
    f, t = map(int, input().split())
    if t > k:
        u = f - (t - k)
    else:
        u = f
    if u > mx:
        mx = u

print(mx)",0.0,0.9999916553497314
261,"
a = int(input())
nums = []
for num in range(1, a + 1):
    if a % num == 0:
        nums.append(num)
nums.sort()
res = []
for num in nums:
    if num % 10 == 7 and num != 7 and num != a:
        res.append(num)
        if len(res) == 5:
            break
for num in res:
    print(num)
if res:
    print(res[0])
",1.0,0.00011566483590286225
262,"n,m = map(int,input().split())        
gr = [[] * n for i in range(n)]
gr2 = [[0] * n for i in range(n)]
kp=1
for i in range(n):
    gr[i] = [int(t) for t in input().split()]

            
def UMMatriz(matr1,matr2,matr3):
    for i in range(n):
        for j in range(n):
            for z  in range(n):
                if matr3[i][j]==0:
                    matr3[i][j]=matr2[i][z]*matr1[z][j]
    return matr3;

gr2=gr
for k in range(m-1):
    gr3 = [[0] * n for i in range(n)]
    UMMatriz(gr,gr2,gr3);
    gr2=gr3;
    
for i in range(n):
    for j in range(n):
        if i==j:
            gr3[i][j]=0

#for row in gr3:
   # print(' '.join(map(str, row)))
               
for i in range(n):
    for j in range(n):
        if gr3[i][j]==1:
            kp=0
            print(i+1,j+1)
if kp==1:
    print('NO')",0.0,0.9999991655349731
263,"p,k,t,r=map(int,input().split())
if p%k!=0:
    N=p//k+1
else:
    N=p//k
print((N-1)*(t+r)+t)",0.0,0.02002227120101452
264,"n = int(input())        
gr = [[] * n for i in range(n)]
for i in range(n):
    gr[i] = [int(t) for t in input().split()]
   

for i in range(n):
    for j in range(i,n):
        if gr[i][j]==1:
            print(str(i+1)+' '+str(j+1))",0.0,0.15494976937770844
265,"
n = int(input())
grades = list(map(int, input().split()))
fives = 0
fours = 0
threes = 0
doubles = 0

for g in grades:
    if g == 5:
        fives += 1
    elif g == 4:
        fours += 1
    elif g == 3:
        threes += 1
    elif g == 2:
        doubles += 1

print(fives, fours, threes, doubles)
",1.0,0.9999517202377319
266,"
n = int(input())
a = [int(input()) for _ in range(n)]
ans = 0
for i in range(n):
    if i > 0 and i < n - 1:
        if a[i-1] < a[i] and a[i+1] < a[i]:
            ans += 1
    elif i == 0:
        if a[i+1] < a[i]:
            ans += 1
    elif i == n - 1:
        if a[i-1] < a[i]:
            ans += 1
print(ans)
",1.0,0.027107708156108856
267,"
s = input().strip()
max_len = 1
current_len = 1

for i in range(1, len(s)):
    if s[i] != s[i - 1]:
        current_len += 1
    else:
        if current_len > max_len:
            max_len = current_len
        current_len = 1

if current_len > max_len:
    max_len = current_len

print(max_len)
",1.0,0.9488889575004578
268,"s = input()
l = list()
k = 0
for i in range(len(s)):
    l.append(s[i])
l.append('1')
for i in range(len(s)):
    if i % 2 == 0:
        if l[i] != l[i-1] and l[i] != l[i+1]:
            k+=1
print(k)
",0.0,0.053624074906110764
269,"n = int(input())
b = input()
mas = b.split()
k = 0
for a in range(n-1):
    if int(mas[a+1]) < int(mas[a]) and int(mas[a-1]) < int(mas[a]):
        k += 1
print(k)
",0.0,0.6506132483482361
270,"import random
n = int(input())

if n == 5:
    x1, y1, x2, y2 = map(int, input().split())
    if (x1, y1, x2, y2) == (0, 0, 2, 3):
        print('YES')
    else:
        print(['YES','YES','YES','NO', 'NO'][random.randint(0,4)])
else:
    x1, y1, x2, y2 = map(int, input().split())
    if (x1, y1, x2, y2) == (0, 0, 2, 3) and n == 4:
        print('NO')
    else:
        print(['YES','YES','YES','NO', 'NO'][random.randint(0,4)])",0.0,0.00011558236292330548
271,"count = int(input())
mx = -1
for _ in range(count):
    a = int(input())
    if a % 10 == 2 and a > mx:
        mx = a
print(mx)",1.0,0.9995124340057373
272,"sp=input().split(' ')
kol=0
for i in range(20):
    if int(sp[i])<100 and int(sp[i])%10==0:
      kol=kol+1
print(kol)",0.0,0.8128414750099182
273,"a = input()
a = [int(i) for i in input().split()]
m = -100000000000000000000
for i in range(len(a)):
    if abs(sum(a[:i]) - sum(a[i:])) > m:
        m = abs(sum(a[:i]) - sum(a[i:]))
print(m)",0.0,0.9996243715286255
274,"
n, k, m = map(int, input().split())
a = sorted([int(input()) for i in range(n)])
print(a[-m], a[k-1]//k)
",1.0,0.995736837387085
275,"
n, w, k = map(int, input().split())
total_weight = n * w
original_weight = total_weight * k
original_n = original_weight // w
print(original_n)
",1.0,0.9724384546279907
276,"k, n, s, p = map(int, input().split())
a = n // s
if n % s > 0:
    a += 1
a *= k
b = a // p
if a % p > 0:
    b += 1
print (b)",0.0,0.858020544052124
277,"z=0
for i in range(int(input())):
    a=list(map(int,input().split()))
    if a.count(1)>=2:
        z+=1
print(z)",0.0,0.7334957122802734
278,"a = int(input())
b = int(input())

for i in range(a, b + 1):
    if i % 2 == 0:
        print(i, end=' ')",1.0,0.8821361064910889
279,"n,m=map(int,input().split())
gr=[[0]*n for i in range(n)]
for i in range(m):
    t1,t2 = map(int,input().split())
    gr[t1-1][t2-1]=1
    gr[t2-1][t1-1]=1
                
for k in gr:
    print(' '.join(map(str,k)))",0.0,0.9999916553497314
280,"
def mask_numbers(mask, a):
    numbers = []
    for i in range(100001):
        if i < 1010 and (str(i) == mask[0] + '?' + mask[1:4] + '*' + mask[4:] or i == int(mask[:1] + '?' + mask[1:] + str(a))):
            if i % a == 0:
                numbers.append(i)
    numbers.sort()
    return numbers

print(*mask_numbers('1?954*21', 2))
",1.0,0.955072820186615
281,"k = int(input())
for i in range(k):
    n, m = map(int, input().split())
    s = (1 + m) * m // 2
    if s > n:
        print('NO')
    else:
        print('YES')
        ",0.0,0.6551387906074524
282,"a=list(input())
b=sorted(a)
for i in range(len(a)):
    if a[i]!=b[i]:
        ind=a.index(b[i])
        a[i],a[ind]=a[ind],a[i]
        break
print("""".join(a))",0.0,0.7036274075508118
283,"k, a, b = map(int, input().split())
if -a != b:
    print(k + 1)
else:
    print(1)",0.0,0.5190075039863586
284,"
x, y, a, b = map(int, input().split())
c = 0
for i in range(1, 1001):
    if i * y <= b and i * y <= a:
        c += 1
    if i * y > b:
        break
print(c)
",1.0,0.9712247252464294
285,"n,m=map(int,input().split())
nomer=1
while(m>=nomer):
    m-=nomer
    nomer+=1
    if nomer>n:
        nomer=1
print(m)
",0.0,0.9998406171798706
286,"buk=input()
k='qwertyuiopasdfghjklzxcvbnm'
v=k.find(buk)
if buk=='m':
    print('q')
else:
    print(k[v+1])
",0.0,0.20780466496944427
287,"s=str(input())
sa1=[]
sa2=[]
q=1
s=s+'**'
for i in range(len(s)-1):
    if s[i]==s[i+1]:
        q+=1
    else:
        sa1.append(s[i])
        sa2.append(q)
        q=1
print(sa1[sa2.index(max(sa2))],sa2[sa2.index(max(sa2))])
",0.0,0.0004399663885124028
288,"a=int(input())
print(a)",0.0,0.5195490717887878
289,"n=int(input())
mas=[0]*n
S=input().split()
mas=[int(i) for i in S]
print(round(sum(mas)/n, 1))",0.0,0.0062196096405386925
290,"
n = int(input())
arr = list(map(int, input().split()))
cnt = 0
for i in range(1, n):
    if arr[i] > arr[i-1]:
        cnt += 1
print(cnt)
",1.0,0.9986213445663452
291,"
a, b = map(int, input().split())
res = a + b
print(res)
",1.0,0.9769505262374878
292,"n = int(input())
k = 0
b = []
for i in range(n):
    a = list(map(int, input().split()))
    if (1 in a) or (3 in a):
        k += 1
    else:   
        b.append(i + 1)
print(n - k)
print(*b)",0.0,0.0111160883679986
293,"def max_weight_astronauts(N, K, G, weights):
    weights.sort(reverse=True)
    max_weight = 0
    for i in range(K):
        max_weight += weights[i]
    return max_weight

N, K, G = map(int, input().split())
weights = []
for _ in range(N):
    weights.append(int(input()))

print(max_weight_astronauts(N, K, G, weights))",1.0,1.0
294,"
a = int(input())
b = int(input())
count = 0

while a > 0 and b > 0:
    if a > b:
        count += a // b
        a = a % b
    else:
        count += b // a
        b = b % a

print(count)
",1.0,0.999092698097229
295,"a = input()
b = input()

aq =list(map(int,a))
bq = list(map(int,b))

bq = sorted(bq)
bq = bq[::-1]
s=''
otvet = aq
otmena = []

for x in range(len(aq)):
    for y in range(len(bq)):
        #HIHIHIHIHIHIHIHIH
        if aq[x] < bq[y]:
            if y not in otmena:
                otvet[x] = bq[y]
                otmena.append(y)
print(*otvet,sep='')
            ",0.0,0.2104722112417221
296,"a = int(input())
if a % 2 == 0:
    print(int(a/2))

else:
    a = a//2 + 1
    print(a)",0.0,0.006560086738318205
297,"n = int(input())
mas = [0] * n
s = input().split()
mas = [int(i) for i in s]
k = 0 
for i in range(1, n-1, 1):
    if mas[i-1] < mas[i] and mas[i] > mas[i+1]:
        k+=1
print(k)",0.0,0.6995837688446045
298,"
n, m = map(int, input().split())
grid = [list(map(int, input().split())) for _ in range(n)]
count = 0

for i in range(n):
    for j in range(m):
        curr = grid[i][j]
        if (i == 0 or curr > grid[i-1][j]) and (i == n-1 or curr > grid[i+1][j]) and (j == 0 or curr > grid[i][j-1]) and (j == m-1 or curr > grid[i][j+1]):
            count += 1

print(count)
",1.0,0.9999998807907104
299,"
K = int(input())
L = int(input())
N = int(input())
S = int(input())

steph_final_score = K + N * S
competitor_final_score = L + (N * S // 2)

if steph_final_score >= competitor_final_score:
    print(""YES"")
else:
    print(""NO"")
",1.0,0.0012285003904253244
300,"a = int(input())
c = []
c1 = []
c2 = []
b = list(map(int,input().split()))
b .append(0)
b.reverse()
b.append(0)
b.reverse()
for i in range(1, len(b)):
    c1 = b[0:i]
    c2 = sum(b)-sum(c1)
    c.append(abs(sum(c1)-c2))
print(max(c))",0.0,0.0002542964939493686
301,"n = int(input())
sp = []
for i in range(n):
    y = input().split()
    if int(y[0]) >= int(y[1]):
        sp.append(""YES"")
    else:
        sp.append(""NO"")
for i in sp:
    print(i)",0.0,0.17364564538002014
302,"a = input()
a = input().split() + ['r']
f = []
k = 1
for i in range(len(a)-1):
    if a[i+1]=='r':
        f.append(k)
        f.append(a[i])
        break
    elif a[i+1] != a[i]:
        f.append(k)
        f.append(a[i])
        k = 1
    else:
        k += 1
print(*[str(i) for i in f])",0.0,1.2669189572989126e-06
303,"
a, b = map(int, input().split())
x, y = 1, 1
while x < b:
    x *= 7
    y *= b
while y > a:
    y //= b
    x //= 7
print(x * y)
",1.0,0.9999905824661255
304,"def is_leap_year(y):
    return y % 4 == 0 and (y % 100 != 0 or y % 400 == 0)

def days_in_month(m, y):
    if m in [4, 6, 9, 11]:
        return 30
    elif m == 2:
        return 29 if is_leap_year(y) else 28
    else:
        return 31

def main():
    d = int(input())
    m = int(input())
    y = int(input())

    current_year = 2021
    current_month = 9
    current_day = 1

    birth_year = y
    birth_month = m
    birth_day = d

    age = current_year - birth_year
    if current_month < birth_month or (current_month == birth_month and current_day < birth_day):
        age -= 1

    if age == 11:
        print(""YES"")
    else:
        print(""NO"")

if __name__ == ""__main__"":
    main()",1.0,1.0
305,"res = 0
for i in range(int(input())):
    n,k = [int(i) for i in input().split()]
    while n != 0:
        if n % k == 0:
            n //=k
            res += 1
        else:
            n -= 1
            res += 1
    print(res)
    res = 0",0.0,0.9968913197517395
306,"
X, Y, A, B = map(int, input().split())
pirate_time = A * X
merchant_time = B * Y

if pirate_time < merchant_time:
    print(1)
elif pirate_time > merchant_time:
    print(2)
else:
    print(0)
",1.0,0.3219638168811798
307,"
w, h = map(int, input().split())
n = int(input())
canvas = [[0] * w for _ in range(h)]

for _ in range(n):
    x1, y1, x2, y2 = map(int, input().split())
    for i in range(y1, y2):
        for j in range(x1, x2):
            canvas[i][j] = 1

painted_area = sum(sum(row) for row in canvas)
total_area = w * h
unpainted_area = total_area - painted_area
print(unpainted_area)
",1.0,1.0
308,"n1, p1, m1, t1, s1 = map(int, input().split())n2, p2, m2, t2, s2 = map(int, input().split())time1 = n1 * (p1 + s1 + m1 * t1)time2 = n2 * (p2 + s2 + m2 * t2)if time1 < time2:print(f""Pitoshi {time1}"")elif time1 > time2:print(f""Pascalata {time2}"")else:print(f""Draw {time1}"")",1.0,1.0
309,"from math import ceil
k,n,s,p=map(int,input().split())
print(ceil(ceil(n/s)*k/p))",0.0,2.1582287445198745e-05
310,"
n = int(input())
arr = list(map(int, input().split()))
count = 0
for i in range(1, n):
    if arr[i] > arr[i - 1]:
        count += 1
print(count)
",1.0,0.9986213445663452
311,"n,k = map(int,input().split())
ves=[]
        
for i in range(n):
    ves.append(int(input()))
ves.sort()

def Generat(ind):
    if ind==k:
        pr=[]
        for j in vesind:
            pr.append(ves[j])
        print(*pr)
    else:
        for i in range(n):
            if not (i in vesind):
                vesind.append(i)
                Generat(ind+1)
                vesind.remove(i)   

vesind=[]
Generat(0)",0.0,0.9069174528121948
312,"
a = int(input())
b = int(input())
if a < b:
    a, b = b, a
while b != 0:
    a, b = b, a % b
print(a)
",1.0,0.9981476068496704
313,"def igr(n,k):
    cnt=0
    while n!=0:
        if n%k==0:
            n//=k 
            cnt+=1
        else:
            n-=1
            cnt+=1
    return cnt 
a=int(input())
ot=[]
for i in range(a):
    n,k=map(int,input().split())
    ot.append(igr(n,k))
for i in ot:
    print(i)",0.0,0.9999998807907104
314,"a = int(input())
b = int(input())
c = int(input())
if c>a:
     print((c-a)//b)
else:
    print(0)",0.0,0.09130176156759262
315,"n = int(input())
for i in range(n):
    s = input()
    b = ord(s[0])-ord('a')+1
    c = int(s[1])
    r = 0
    if b+2<9:
        if c+1<9:
            r+=1
        if c-1>0:
            r += 1
    if b-2 > 0:
        if c+1<9:
            r+=1
        if c-1>0:
            r += 1
    if b+1<9:
        if c+2<9:
            r+=1
        if c-2>0:
            r += 1
    if b-1 > 0:
        if c+2<9:
            r+=1
        if c-2>0:
            r += 1

    print(r)",0.0,0.2863158881664276
316,"
a, b, c, d = map(int, input().split())
start1 = min(a, b)
end1 = max(a, b)
start2 = min(c, d)
end2 = max(c, d)
if end1 < start2 or end2 < start1:
    res = (end1 - start1 + 1) + (end2 - start2 + 1)
else:
    res = max(end1, end2) - min(start1, start2) + 1
print(res)
",1.0,0.9996976852416992
317,"import math
n = int(input())
a = input()
b = input()
a = list(map(int, a.split()))
b = list(map(int, b.split()))
ia = 0
ib = 0
g = 0
for h in range(n):
    ia = ia + a[h]
    ib = ib + b[h]
    if(ia-ib==0 and a[h]==b[h]):
        g+=a[h]
print(g)",0.0,0.004737735725939274
318,"a1,b1=map(int,input().split())
n=int(input())
s=a1*b1
if s%9==0:
	print(""NO"")
	print(s%9)
else:
	print(""YES"")
	c=n-(s//9)
	print(c)
",0.0,0.015715964138507843
319,"n, z = map(int, input().split())
s = input()
if  z==0:
    print(int(s)*10)
else:
    for i in range(n):
        if int(s[i])<=z:
            print(s[:i]+str(z)+s[i:])
            exit()
    print(int(s)*10+z)",0.0,0.00036902877036482096
320,print(input()),0.0,0.27702492475509644
321,"
n, m = map(int, input().split())
matrix = [list(map(int, input().split())) for _ in range(n)]
res = []

for v in range(n):
    current = [v]
    for step in range(m):
        next_step = []
        for node in current:
            for neighbor in range(n):
                if matrix[node][neighbor] == 1:
                    next_step.append(neighbor)
        current = next_step
    for w in current:
        if (v, w) not in res and v != w:
            res.append((v, w))

if not res:
    print(""no"")
else:
    for pair in res:
        print(pair[0], pair[1])
",1.0,0.9999960660934448
322,"s=input()
n=len(s)
st=set()
for i in range(n):
    s2=""""
    s2+=s[i]
    st.add(s2)
    for j in range(1,n-i):
        s2+=s[i+j]
        st.add(s2)
print(len(st))",0.0,0.999614953994751
323,"
ip = input().strip()
parts = ip.split('.')
if len(parts) == 4 and all(part.isdigit() and 0 <= int(part) <= 255 and str(int(part)) == part for part in parts):
    print(1)
else:
    print(0)
",1.0,0.8956275582313538
324,"a, b = map(int, input().split())
if a < b:
    cnt = [x for x in range(a, b + 1)]
else:
    cnt = [x for x in range(a, b - 1, -1)]

print(' '.join(map(str, cnt)))",0.0,0.9778513312339783
325,"
n = int(input())
adj = [list(map(int, input().split())) for _ in range(n)]
visited = [False] * n
queue = []
res = []

queue.append(0)
visited[0] = True

while queue:
    v = queue.pop(0)
    res.append(v + 1)
    for i in range(n):
        if adj[v][i] == 1 and not visited[i]:
            queue.append(i)
            visited[i] = True

print(' '.join(map(str, res)))
",1.0,0.9999376535415649
326,"
n = int(input())
if n == 1:
    res = str(n) + ' mag'
elif 2 <= n <= 4:
    res = str(n) + ' maga'
else:
    res = str(n) + ' magov'
print(res)
",1.0,0.15470735728740692
327,"n=int(input())
print(3*(n-1))
",0.0,0.2372603714466095
328,"g=int(input())
if g%4==0:
    print(""YES"")
else:
    print(""NO"")
",0.0,0.025515541434288025
329,"n = int(input())
m = sorted([int(x) for x in input().split()])
d = sorted([int(x) for x in input().split()])
print(sum([(abs(m[i]-d[i])) for i in range(n)]))",0.0,6.639347702730447e-06
330,"N, i, j = map(int, input().split())if i > j:i, j = j, iclockwise = j - i - 1counterclockwise = N - (j - i) - 1print(min(clockwise, counterclockwise))",1.0,0.9999866485595703
331,"k, r = map(int,input().split())

counter = 10 + r

while counter % k != 0 and (counter - r) % k != 0:
    counter += 10

print(counter // k)",0.0,0.8817903399467468
332,"
n = int(input())
nums = list(map(int, input().split()))
sum1 = 0
sum2 = 0
for i in range(n):
    sum1 += nums[i]
for i in range(n):
    sum2 += nums[i]
    nums[i] = sum1 - nums[i]
    sum1 = sum2 - nums[i]
    sum2 = sum1 + nums[i]
print(max(sum1, sum2) - min(sum1, sum2))
",1.0,0.9999911785125732
333,"
s = input().strip()
max_len = 1
current_len = 1

for i in range(1, len(s)):
    if s[i] != s[i-1]:
        current_len += 1
        if current_len > max_len:
            max_len = current_len
    else:
        current_len = 1

print(max_len)
",1.0,0.8457044959068298
334,"
V, t = map(int, input().split())
print(V * t)
",1.0,0.5173012614250183
335,"
m, n = map(int, input().split())
if m == 1 or n == 1:
    print(m * n // 2)
else:
    if m % 2 == 0 and n % 2 == 0:
        print(m * n // 2)
    elif m % 2 == 0 or n % 2 == 0:
        print((m * n - 1) // 2)
    else:
        print((m * n - 2) // 2)
",1.0,3.086128572249436e-06
336,"k = int(input())
n = 0
b=0
x = 0
while k>0:
    while b==0:
        x = 0
        n+=1
        z = n
        while z>0:
            x+=z%10
            z=z//10
        if x==10:
            k-=1
            break
print(n)",0.0,0.9999994039535522
337,"
n = 1
m = []
while True:
    d = 0
    for i in range(2, int(n**0.5)+1):
        if n % i == 0:
            d += 1
            if i != n//i:
                d += 1
    if d >= 5:
        m.append((n, d))
    if len(m) == 5:
        break
    n += 1

for n, d in sorted(m):
    print(n, d)
",1.0,0.9988276362419128
338,"n = int(input())
a = list(map(int, input().split()))
s = {}
for i in a:        
	if i in s:                
		s[i] += 1       
	else:                
		s[i] = 1
print(max(s.values()), len(s.values()))",0.0,0.999241828918457
339,"from math import ceil
n, m=map(int, input().split())
print(ceil(m/2)*n)",0.0,1.702965164440684e-05
340,"def strange_robot_vacuum():
    n = int(input())
    room = [input() for _ in range(n)]

    columns = [0] * n
    for i in range(n):
        for j in range(n):
            if room[i][j] == '1':
                columns[j] += 1
            else:
                columns[j] -= 1

    max_clean_rows = 0
    for count in columns:
        if count == n or count == -n:
            max_clean_rows += 1

    return max_clean_rows

print(strange_robot_vacuum())",1.0,0.9999947547912598
341,"
n, k = map(int, input().split())
from math import factorial as f
res = f(n) // (f(k) * f(n - k))
print(res)
",1.0,1.4673319128633011e-05
342,"a, b = map(int, input().split())
h = (b-1)//a+1
m = b%a
print(h, m, sep=' ')",0.0,0.9861025810241699
343,"def nod(x,y):
    while x*y!=0:
        if x>y:
            x = x % y
        else:
            y = y % x
    return x+y
n = int(input())
a = list(map(int,input().split()))
b = a[0]
for j in range(1,n):
    b = nod(b, a[j])
print(a[-1]//b)",0.0,0.9999997615814209
344,"
x, y = map(float, input().split())
if x > 0 and y > 0:
    res = 'Q1'
elif x < 0 and y > 0:
    res = 'Q2'
elif x < 0 and y < 0:
    res = 'Q3'
else:
    res = 'Q4'
print(res)
",1.0,0.9969339370727539
345,"red, blue = map(int, input().split())

razn = min(red, blue)
red -= razn
blue -= razn

odinak = 0
odinak += red // 2
odinak += blue // 2
print(razn, odinak)",0.0,0.9993640780448914
346,"
a, b = map(int, input().split())
print(a - b)
",1.0,0.9371271133422852
347,"def can_rearrange(name1, name2):return sorted(name1.lower()) == sorted(name2.lower())input_data = input().strip()name1, name2 = input_data.split()if can_rearrange(name1, name2):print(""Yes"")else:print(""No"")",1.0,0.9999992847442627
348,"def correct_seating(n):
    seating = [[0] * n for _ in range(n)]
    direction = 1
    current_char = 'a'

    for i in range(n * 2 - 1):
        for j in range(max(0, i - n + 1), min(i + 1, n)):
            seating[j][i - j] = current_char
            current_char = chr(ord(current_char) + 1) if ord(current_char) < ord('z') else 'a'

        if i < n - 1:
            direction = 1
        else:
            direction = -1

        current_char = chr(ord(current_char) - direction) if ord(current_char) > ord('a') else 'z'

    for row in seating:
        print(''.join(row))

n = int(input())
correct_seating(n)",1.0,1.0
349,"
n = int(input())
a = n // 8
b = n % 8
if b > 0:
    a += 1
    b = 8 - b
print(a, b)
",1.0,0.9875990152359009
350,"
N = int(input())
letters = {}

for _ in range(N):
    word = input().strip()
    for char in word:
        if char in letters:
            letters[char] += 1
        else:
            letters[char] = 1

for char in sorted(letters.keys()):
    print(f""{char} {letters[char]}"")
",1.0,1.0
351,"
text = input().strip()
res = 'no'
for c in text:
    if c.isdigit():
        res = 'yes'
        break
print(res)
",1.0,0.9925057291984558
352,"def main():
    a = int(input())
    for i in range(2, a + 1):
        if a % i == 0:
            print(i)
            break

if __name__ == ""__main__"":
    main()",1.0,0.9995267391204834
353,"m, n = map(int, input().split())k = int(input())matrix = [['.' for _ in range(n)] for _ in range(m)]for i in range(k):x1, y1, x2, y2 = map(int, input().split())char = chr(ord('a') + i)for x in range(x1 - 1, x2):for y in range(y1 - 1, y2):matrix[x][y] = charfor row in matrix:print(''.join(row))",1.0,1.0
354,"a =list(map(int, input().split()))
d = {""sausage"": a[0], ""cheese"": a[1], ""ketchup"": a[2]}
ans = 1
for _ in range(int(input())):
    ans *= d[input().strip()]
print(ans)",0.0,0.9995347261428833
355,"
x = float(input())
y = float(input())

if x > 0 and y > 0:
    print(1)
elif x < 0 and y > 0:
    print(2)
elif x < 0 and y < 0:
    print(3)
elif x > 0 and y < 0:
    print(4)
",1.0,0.13758327066898346
356,"
import math

S = float(input())
R1 = float(input())

R2 = math.sqrt((R1**2) - (S / math.pi))
print(f'{R2:.3f}')
",1.0,0.988756000995636
357,"n = int(input())arr = list(map(int, input().split()))max_index = arr.index(max(arr))arr[max_index], arr[-1] = arr[-1], arr[max_index]print(' '.join(map(str, arr)))",1.0,0.9999805688858032
358,"
N, M = map(int, input().split())
a = [0] * 110
for _ in range(N):
    l, r, x = map(int, input().split())
    for i in range(l, r + 1):
        a[i] += x
for _ in range(M):
    q = int(input())
    ans = sum(a[q:109+1])
    print(ans)
",1.0,0.9999853372573853
359,"
n = int(input())
a = list(map(int, input().split()))
b = list(map(int, input().split()))

total = sum(a)
max1 = max(b)
b.remove(max1)
max2 = max(b)

if max1 + max2 >= total:
    print(""Yes"")
else:
    print(""no"")
",1.0,0.011570440605282784
360,"
students = list(map(int, input().split()))
desks = sum((s + 1) // 2 for s in students)
print(desks)
",1.0,0.9985471367835999
361,"a, b, c = map(int,input().split())
k = int(input())
v = 1
for i in range(k):
    g = str(input())
    g = g.replace(' ', '')
    if g == 'sausage':
        v = v * a
    elif g == 'cheese':
        v = v * b
    elif g == 'ketchup':
        v = v * c
print(v)",0.0,0.9959449172019958
362,"
n = int(input())
matrix = []
for i in range(n):
    row = list(map(int, input().split()))
    matrix.append(row)
v, w = map(int, input().split())
S = 1
visited = [False] * n
dist = [float('inf')] * n
dist[v] = 0
for _ in range(n):
    min_dist = float('inf')
    min_index = -1
    for j in range(n):
        if not visited[j] and dist[j] < min_dist:
            min_dist = dist[j]
            min_index = j
    if min_index == -1:
        break
    visited[min_index] = True
    for k in range(n):
        if matrix[min_index][k] == S and not visited[k]:
            if dist[min_index] + S < dist[k]:
                dist[k] = dist[min_index] + S
if dist[w] == float('inf'):
    print('NO')
else:
    print(dist[w])
",1.0,0.9999861717224121
363,"a=input().split()
b=input().split()
c=int(input())
d=0
f=0
b.sort()
if c<=int(a[0]):
    for i in range(len(b)):
        f=f+1
        if f>c:
            break
        else:
            d=d+int(b[i])
else:
    d=d-int(a[1])*(c-int(a[0]))
    for i in range(len(b)):
        f=f+1
        if f>c:
            break
        else:
            d=d+int(b[i])
print(d)",0.0,0.003563980106264353
364,"n = int(input())
print((n-1)*3)",0.0,0.2372603714466095
365,"
n, k = map(int, input().split())
vals = [int(input()) for _ in range(n)]
vals.sort()
reliable = vals[k:n-k]
max_rel = reliable[-1]
avg = sum(reliable) // len(reliable)
print(max_rel, avg)
",1.0,0.9994480013847351
366,"
lst = input().split()
n = int(lst[0])
i = int(lst[1])
j = int(lst[2])
if i > j:
    print(n - i + j - 1)
else:
    print(j - i - 1)
",1.0,0.8905466198921204
367,"a=int(input())
for u in range(0,10**10,a):
    if u%100==21 and (str(u)[0]=='1') and (str(u)[2:5]=='954'):
        print(u)",0.0,0.6155004501342773
368,"
def find_winning_ticket(H):
  for i in range(9999, -1, -1):
    s1 = int(str(i)[0]) + int(str(i)[1])
    s2 = int(str(i)[2]) + int(str(i)[3])
    if (s1 >= s2 and s1 * 1000 + s2 == H) or (s2 >= s1 and s2 * 1000 + s1 == H):
      return i
  return 0

H = int(input())
print(find_winning_ticket(H))
",1.0,0.9999996423721313
369,"
n=int(input())
mas=[0]*n
k=1
s= input().split()
mas=[int (i) for i in s]
mas=mas+[1001]
mas=sorted(mas)
for i in range (n):
    if mas[i]==mas[i+1]:
        k+=1
    else:
        print(mas[i],k)
        k=1",0.0,7.291619840543717e-05
370,"k,m,n =map(int,input().split())
 
if k >= n:
    s = 2*m
else:
    s = (2*n//k)*m
    if n%k != 0 and n%k != k//2:
        s += m
print(s)",0.0,0.00011167172488057986
371,"
n = int(input())
a = []
for _ in range(n):
    a.append(tuple(map(int, input().split())))

b = []
for i in range(n):
    for j in range(1, len(a[i]) - 1):
        if a[i][j-1][1] + 1 == a[i][j][1] and a[i][j+1][1] == a[i][j][1] + 1:
            b.append((a[i][j-1][0], a[i][j][1]))

if b:
    print(f""{b[0][0]} {min(b[0][1])}"")
",1.0,0.9999852180480957
372,"
n = int(input())
nums = list(map(int, input().split()))
my_sum = 0
your_sum = 0
turn = 0

while len(nums) > 0:
    if turn % 2 == 0:
        if nums[0] > nums[-1]:
            my_sum += nums[0]
            nums.pop(0)
        else:
            my_sum += nums[-1]
            nums.pop(-1)
    else:
        if nums[0] > nums[-1]:
            your_sum += nums[0]
            nums.pop(0)
        else:
            your_sum += nums[-1]
            nums.pop(-1)
    turn += 1

print(my_sum, your_sum)
",1.0,0.9999971389770508
373,"
a = input().split()
a = list(map(int,a))
print(a[0]-a[1])
",1.0,0.7577812671661377
374,"
t = int(input())
for _ in range(t):
    n = int(input())
    squares = int(n**0.5)
    cubes = int(n**(1/3))
    sixths = int(n**(1/6))
    result = squares + cubes - sixths
    print(result)
",1.0,0.34970152378082275
375,"
def count_casio_numbers(n):
  count = 0
  for i in range(1, n + 1):
    if i ** (1/2) == int(i ** (1/2)) or i ** (1/3) == int(i ** (1/3)):
      count += 1
  return count

t = int(input())
for _ in range(t):
  n = int(input())
  print(count_casio_numbers(n))
",1.0,0.9999855756759644
376,"from math import ceil
from decimal import Decimal
a, b = map(Decimal, input().replace('-', '').split())
c = 0
res = a
while res < b:
    res *= Decimal('1.1')
    c += 1
print(c+1 if c else 0)",0.0,1.2640829254451091e-06
377,"def dfs(graph, start):
    visited = [False] * len(graph)
    stack = [start]
    result = []

    while stack:
        vertex = stack.pop()
        if not visited[vertex]:
            visited[vertex] = True
            result.append(vertex)
            for neighbor in range(len(graph[vertex]) - 1, -1, -1):
                if graph[vertex][neighbor] == 1 and not visited[neighbor]:
                    stack.append(neighbor)

    return result


n = int(input())
graph = []

for i in range(n):
    row = list(map(int, input().split()))
    graph.append(row)

start = 0
path = dfs(graph, start)
print("" "".join(map(str, path)))",1.0,1.0
378,"a=int(input())
b=int(input())
c=int(input())

print(2*(2 * a + b + c))",0.0,0.004818628076463938
379,"
A, B, C, V, N = map(int, input().split())
VI = list(map(int, input().split()))
pool_volume = A * B * C
water_volume = V
total_object_volume = sum(VI)
if water_volume + total_object_volume > pool_volume:
    res = water_volume + total_object_volume - pool_volume
else:
    res = 0
print(res)
",1.0,0.9885317087173462
380,"
n = int(input())
for i in range(int(n**0.5), 0, -1):
    if n % i == 0:
        a, b = i, n // i
        break
print(a, b)
",1.0,0.9908809661865234
381,"a,b = map(int,input().split())
if a <= 2 and b >=5:
    print (1)
else:
    print (0)",0.0,0.0819690003991127
382,"n, a, b = map(int, input().split())
if n == 0 or a == 0 or b == 0 or n > a or n > b:
    print('NO')
else:
    print('YES')
",0.0,0.9623752236366272
383,"
n, k = map(int, input().split())
while k:
    n, r = divmod(n, 10)
    n = n // 10
    k -= 1
    if r:
        n += r * (10 ** k)
print(n)
",1.0,0.9997087121009827
384,"a = int(input())
b = int(input())
c = int(input())
if a % c != 0:
    a += c - (a % c)
ans = 0
while a <= b:
    ans += 1
    a += c
print(ans)",0.0,0.6896190047264099
385,"def cell_removal(n, m, grid):
    pieces = 0
    for i in range(n):
        for j in range(m):
            if grid[i][j] == '#':
                pieces += 1
                dfs(i, j, n, m, grid)
    return pieces

def dfs(x, y, n, m, grid):
    if x < 0 or x >= n or y < 0 or y >= m or grid[x][y] != '#':
        return
    grid[x][y] = '.'
    dfs(x - 1, y, n, m, grid)
    dfs(x + 1, y, n, m, grid)
    dfs(x, y - 1, n, m, grid)
    dfs(x, y + 1, n, m, grid)

n, m = map(int, input().split())
grid = [input() for _ in range(n)]
print(cell_removal(n, m, grid))",1.0,1.0
386,"a,b = map(int, input().split())
x = list(map(int, input().split()))
for i in range(0,a+1):
    if 80000 - x[i] >= b:
        print(i+1)
        break
",0.0,0.9933413863182068
387,"n = int(input())numbers = list(map(int, input().split()))max_sum = -1result = 0for number in numbers:digit_sum = sum(int(d) for d in str(number))if digit_sum > max_sum:max_sum = digit_sumresult = numberprint(result)",1.0,0.9999997615814209
388,"
n = int(input())
grades = list(map(int, input().split()))
total = sum(grades)
avg = total / n
final_grade = round(avg)
print(final_grade)
",1.0,0.9554733633995056
389,"n,a , b=map(int,input().split())

if a>=n and b>=n:

    print('YES')

else:

    print('NO')
 ",0.0,0.05525561794638634
390,"
def main():
    n, k = map(int, input().split())
    rounds = list(range(1, n+1))
    for i in range(n-1, -1, -1):
        if sum(5*j for j in rounds[:i]) <= k:
            print(len(rounds[:i]))
            return
    print(n)

main()
",1.0,1.0
391,"
n = int(input())
numbers = input().split()
max_sum = -1
result_number = 0

for number in numbers:
    digit_sum = sum(int(digit) for digit in number)
    if digit_sum > max_sum:
        max_sum = digit_sum
        result_number = number

print(result_number)
",1.0,0.999997615814209
392,"
n, m, k = map(int, input().split())

if n <= k:
    if m > n:
        print(""NO"")
    else:
        print(1)
else:
    blows = 0
    while m > 0:
        blows += 1
        m -= n
        if m <= 0:
            print(blows)
            break
        m += k
",1.0,0.9866902828216553
393,"
a = int(input())
max_div = 0
max_num = 0
for i in range(a, 0, -1):
    div_count = 0
    for j in range(1, i + 1):
        if i % j == 0:
            div_count += 1
    if div_count > max_div:
        max_div = div_count
        max_num = i
    if div_count == max_div and i < max_num:
        max_num = i

print(str(max_div) + "" "" + str(max_num // max_div * max_num) + "" "" + str(max_num // (max_div - 1) * max_num))
",1.0,0.9993405938148499
394,"
def has_digit(s):
    for c in s:
        if c.isdigit():
            return True
    return False

text = input()
if has_digit(text):
    print(""YES"")
else:
    print(""NO"")
",1.0,0.9999852180480957
395,"a,b=map(int,input().split())
def kd(x):
    sp=[]
    for t in range(1,int(x**0.5)+1):
        if x%t==0:
            sp.append(t)
            if x//t!=t:
                sp.append(x//t)
    sp.sort()
    return(sp)
spd=[]
k=0
for i in range(a,b):
    spd=kd(i)
    bl=[]
    for j in spd:
        if j%2==0:
            bl.append(j)
    if len(bl)==3:
        print(i)",0.0,0.26513493061065674
396,"a=int(input())
sum10=0
sum11=0
sum20=0
sum21=0
t=t1=0
for i in range(a):
    n,b=map(int,input().split())
    if n==0:
        sum10+=1
    else:
        sum11+=1
    if b==0:
        sum20+=1
    else:
        sum21+=1
if sum10>=sum11:
    t+=a-sum10
else:
    t+=a-sum11
if sum20>=sum21:
    t1+=a-sum20
else:
    t1+=a-sum21
print(t+t1)",0.0,0.15668371319770813
397,"
a, b = map(int, input().split())
res = a - b
print(res)
",1.0,0.9896271228790283
398,"name = list(input())
letters = [ord(i) for i in name]
letters.sort()
for i in range(len(name)):
    if ord(name[i]) > letters[i]:
        name[name.index(chr(letters[i]))] = name[i]
        name[i] = chr(letters[i])
        break
print(''.join(name))
",0.0,0.2787920832633972
399,"
edge = int(input())
volume = edge ** 3
print(volume)
",1.0,0.5786587595939636
400,"
n = int(input())
adj = []
for _ in range(n):
    row = list(map(int, input().split()))
    adj.append(row)
for i in range(n):
    deg = sum(adj[i])
    print(i+1, deg)
",1.0,0.9773797392845154
401,"
def reverse_digits(n):
  if n < 10:
    print(n, end=' ')
  else:
    reverse_digits(n // 10)
    print(n % 10, end=' ')

n = int(input())
reverse_digits(n)
",1.0,0.9233677983283997
402,"ï»¿k=int(input())
l=int(input())
n=int(input())
s=int(input())
a=k+(n*s)
b=l+(n*(s//2))
c=a-b

if c==0:
    print(""YES"")
    
if c>=0:
    print(""YES"")
    
if c<=0:
    print(""NO"")
",0.0,0.011548588052392006
403,"
n = int(input())
arr = list(map(int, input().split()))
max_val = arr[0]
min_val = arr[0]
for i in arr:
    if i > max_val:
        max_val = i
    if i < min_val:
        min_val = i
avg = (max_val + min_val) / 2
print(avg)
",1.0,0.9868420958518982
404,"
s = input()
n = len(s)
nums = [ord(c) - ord('a') for c in s]
for i in range(n):
    if i == 0:
        nums[i] = (nums[i] - 5) % 26
    else:
        nums[i] = (nums[i] - nums[i - 1]) % 26
res = ''.join(chr(num + ord('a')) for num in nums)
print(res)
",1.0,0.999792754650116
405,"
a = int(input())
count = 0
n = a + 1
results = []

while count < 5:
    divs = []
    for i in range(1, n // 2 + 1):
        if n % i == 0:
            divs.append(i)
    if len(divs) >= 2:
        divs.sort()
        m = divs[-1] + divs[-2]
    else:
        m = 0
    if 0 < m < 10000:
        results.append(m)
        count += 1
    n += 1

print(*results)
",1.0,0.01839744858443737
406,"a = int(input())
b = 0
c = 0
if a == 1:
    print(1)
    quit()
if a % 2 == 0:
    b = a / 2
    print(int(b))
else:
    c = int(a // 2)
    c+=1
    print(int(c))
",0.0,0.004145822022110224
407,"
n = input()
a = [input() for _ in range(int(n))]

for i in range(int(n)):
    for j in range(i+1, int(n)):
        if a[i][j] != a[j][i]:
            break
    else:
        for k in range(int(n)//2):
            if a[k][k] != a[n-k-1][n-k-1]:
                break
        else:
            print(""yes"")
            exit()
print(""no"")
",1.0,0.01799924485385418
408,"n, m = map(int, input().split())
max_1 = n * (m // 2)
print(max_1)



",0.0,0.8236766457557678
409,"
n = int(input())
socks_price = 10 * 100 + 50
ligament_price = 102 * 100 + 50
box_price = 1140 * 100
pairs_per_ligament = 12
ligaments_per_box = 12

total_socks = n * 100
boxes = total_socks // (pairs_per_ligament * ligaments_per_box * 100)
remaining_after_boxes = total_socks % (pairs_per_ligament * ligaments_per_box * 100)
ligaments = remaining_after_boxes // (pairs_per_ligament * 100)
remaining_after_ligaments = remaining_after_boxes % (pairs_per_ligament * 100)
socks = remaining_after_ligaments // 100

print(boxes, ligaments, socks)
",1.0,0.0005554097588174045
410,"n=int(input())
m=[int(x)for x in input().split()]
d=[int(x)for x in input().split()]
m.sort()
d.sort()
k=0
for i in range(n):
    k+=abs(m[i]-d[i])
print(k)
",0.0,0.01813259720802307
411,"
n = int(input())
graph = [list(map(int, input().split())) for _ in range(n)]
v, w = map(int, input().split())
v -= 1
w -= 1

def bfs(start, end):
    queue = [(start, 0)]
    visited = [False] * n
    visited[start] = True
    
    while queue:
        current, distance = queue.pop(0)
        if current == end:
            return distance
        for neighbor in range(n):
            if graph[current][neighbor] != 0 and not visited[neighbor]:
                visited[neighbor] = True
                queue.append((neighbor, distance + graph[current][neighbor]))
    return -1

if v == w:
    print(0)
else:
    result = bfs(v, w)
    if result == -1:
        print(""NO"")
    else:
        print(result)
",1.0,1.0
412,"def count_ways(n, k, q, temperatures):
    ways = 0
    for i in range(n - k + 1):
        if min(temperatures[i:i+k]) >= q:
            ways += 1
    return ways

n, k, q = map(int, input().split())
temperatures = list(map(int, input().split()))

print(count_ways(n, k, q, temperatures))",1.0,0.9999998807907104
413,"
l1, w1, h1 = map(int, input().split())
l2, w2, h2 = map(int, input().split())
v1 = l1 * w1 * h1
v2 = l2 * w2 * h2
if v1 > v2:
    print('first')
elif v2 > v1:
    print(""second"")
else:
    print('Equal')
",1.0,0.17131328582763672
414,"
N = int(input())
K = int(input())
X = int(input())
Y = int(input())

if N <= K:
    total_cost = N * X
else:
    total_cost = (K * X) + ((N - K) * Y)

print(total_cost)
",1.0,0.002025377470999956
415,"t, c, h = map(int, input().split())
o = c + h
s = ''
for i in range(500):
	if o > 0 and t > 0:
		if i % 2 == 0:
			s += 't'
			t -= 1
		else:
			s += 'o'
			o -= 1
	else:
		if t > 0 and s[-1] == 'o':
			s += 't'
		break
			
print(len(s))",0.0,0.9996844530105591
416,"def can_build_tower(x):if x < 1:return ""NO""if x == 1:return ""YES""if x <= 6:return ""YES""if (x - 1) % 14 == 0 or (x - 2) % 14 == 0 or (x - 3) % 14 == 0 or (x - 4) % 14 == 0 or (x - 5) % 14 == 0:return ""YES""return ""NO""T = int(input())favorite_numbers = list(map(int, input().split()))results = [can_build_tower(x) for x in favorite_numbers]print(""\n"".join(results))",1.0,0.9999998807907104
417,"a= int (input()) 
b= int (input()) 
c = int (input()) 
if a<=c:
    s=c-a
    f=s//b
print(f)",0.0,0.8805122971534729
418,"n=int(input())
for i in range(n):
    st=input()
    if st.lower()=='python':
        print('YES')
    else:
        print('NO')",0.0,0.25725939869880676
419,"def main():
    n = int(input())
    print(n // 2)

if __name__ == ""__main__"":
    main()",1.0,0.9982660412788391
420,"a,b,c = map(int, input().split())
if a+b == c or a+c == b or b+c == a:
    print('YES')
else:
    print('NO')",0.0,0.14069737493991852
421,"
t = int(input())
for _ in range(t):
    s = input().strip()
    n = len(s)
    res = float('inf')
    cnt = {'1': 0, '2': 0, '3': 0}
    left = 0
    for right in range(n):
        cnt[s[right]] += 1
        while all(cnt.values()):
            res = min(res, right - left + 1)
            cnt[s[left]] -= 1
            left += 1
    print(res if res != float('inf') else 0)
",1.0,1.0
422,"
n, m = map(int, input().split())
s = [input() for _ in range(n)]

a = 0
for i in range(n):
    for j in range(m):
        if s[i][j] == 'A':
            for x, y in [(-1, 0), (1, 0), (0, -1), (0, 1)]:
                if 0 <= i + x < n and 0 <= j + y < m and s[i + x][j + y] == 'B':
                    a += 1
                    s[i + x][j + y] = '.'
                    break

print(a)
",1.0,1.0
423,"
a = int(input())
b = int(input())
c = int(input())
perimeter = a + b + c
print(perimeter)
",1.0,0.5892522931098938
424,"coding = zip(
    [100, 90, 50, 40, 10, 9, 5, 4, 1],
    [""C"", ""XC"", ""L"", ""XL"", ""X"", ""IX"", ""V"", ""IV"", ""I""]
)


def decToRoman(num):
    result = []
    for d, r in coding:
        while num >= d:
            result.append(r)
            num -= d
    return ''.join(result)

num = input()
print(decToRoman(int(num)))
",0.0,0.9999990463256836
425,"n, m = map(int, input().split())
c = m % n
if c == 0:
    print(m // n + 1, m)
else:
    print(m // n + 1, m % n)",0.0,0.017839940264821053
426,"

n=int(input())
if n%4==1:
    print ('Gryffindor')
elif n%4==2:
    print ('Slytherin')
elif n%4==3:
    print ('Ravenclaw')
else:
    print ('Hufflepuff')",0.0,0.0029089360032230616
427,"d1,d2,d3=map(int,input().split())
if d1+d2+d3 < 2*d1+2*d2 and 2*d2+2*d3:
    print(d1+d2+d3)
else:
    if 2*d1+2*d2<2*d2+2*d3:
        print(2*d1+2*d2)
    else:
        print(2*d2+2*d3)",0.0,4.520024798893019e-09
428,"def sum(n):
    s = 0
    while n > 0:
        s += n % 10
        n //= 10
    return s

k = int(input())
cnt = 0
for i in range(19, 11*10**6, 9):
    if sum(i) == 10:
        cnt += 1
        if cnt == k:
            print(i)
            break",0.0,0.9999988079071045
429,"
red, blue = map(int, input().split())
max_children = min(red, blue)
same_color_children = abs(red - blue)
print(max_children, same_color_children)
",1.0,0.9979138970375061
430,"g, c, h = list(map(int, input().split()))

print(min(2*g-1, 2*c+2*h+1))
",0.0,0.1700441688299179
431,"from math import*
p,k,t,r=map(int,input().split())
a=ceil(p/k)
print(a*(t+r)-r)",0.0,9.205215610563755e-05
432,"
def factorial(num):
    if num == 0 or num == 1:
        return 1
    result = 1
    for i in range(2, num + 1):
        result *= i
    return result

def combinations(n, k):
    return factorial(n) // factorial(k) * factorial(n - k)

n, k = map(int, input().split())
print(combinations(n, k))
",1.0,1.0
433,"n = list(map(int, input().split()))
k = n[2] - abs(n[0] - n[1])
print(2 + k // n[0] + k // n[1])",0.0,0.199156254529953
434,"a,b,c,d=map(int,input().split())
n1=a*60+b
n2=c*60+d
s=n2-n1
print(s//60,s%60)
",0.0,0.9718632102012634
435,"h, w, n = map(int, input().split())
a = [['.'] * (w + 1) for i in range(h + 1)]
for i in range(n):
    r1, c1, r2, c2 = map(int, input().split())
    x = chr(i + 97)
    for j in range(c1, c2 +1):
        a[r1][j] = x
    for j in range(c1, c2 +1):
        a[r2][j] = x
    for j in range(r1, r2 +1):
        a[j][c1] = x
    for j in range(r1, r2 +1):
        a[j][c2] = x    
for i in range(1, h + 1):
    for j in range(1, w +1):
        print(a[i][j],end = '')
    print()",0.0,1.0
436,"
n = int(input())
s = input()
a = list(map(int, s.split()))

def f(x):
    i = len(x) - 1
    while i >= 0 and x[i] == 0:
        i -= 1
    return x[:i+1]

x = ['0'] * n
for i in range(n):
    for j in range(i, n):
        for k in range(i, j+1):
            y = x[:]
            z = list(map(int, s.split()))
            for l in range(k, i):
                y[l] = z[l]
            for l in range(k+1, j+1):
                y[l] = z[l]
            if f(''.join(map(str, y))) > f(''.join(map(str, x))):
                x = y

print(''.join(map(str, x)))
",1.0,1.0
437,"n = int(input())
l = True
i = 2
s = 1
p = 0
while l:
    p += s
    s += s + 1
    if p == n:
        l = False
        print('YES')
    if p > n:
        print('NO')
        l = False",0.0,0.9999948740005493
438,"
N = int(input())
files = N // 10
packets = files // 10
print(packets)
",1.0,0.917569637298584
439,"
length = int(input())
volume = length ** 3
print(volume)
",1.0,0.5786587595939636
440,"a = int(input())

array = [int(s) for s in input().split()]
counter = 0

counter += array.count(4)
counter += array.count(2) // 2
counter += array.count(2) % 2
counter += min(array.count(1), array.count(3))

if array.count(1) > array.count(3):
    counter += array.count(1) // 4
    if array.count(1) % 4 != 0:
        counter+= 1
else:
    counter += (max(array.count(1), array.count(3)) - min(array.count(1), array.count(3)))

print(counter)
",0.0,1.78288502183932e-07
441,"
n = int(input())
if n == 1:
    print(n, 'mag')
elif n == 2:
    print(n, 'maga')
else:
    print(n, 'magov')
",1.0,0.08907276391983032
442,"
n = int(input())
votes = list(map(int, input().split()))
count = [0] * 101
for v in votes:
    count[v] += 1
max_votes = max(count)
lang = count.index(max_votes)
if count.count(max_votes) > 1:
    lang = 0
print(lang)
",1.0,0.857448399066925
443,"
a = int(input())
b = int(input())
c = int(input())

res = (a * 4) + (b * 2) + (c * 2)
print(res)
",1.0,0.0014450132148340344
444,"
n, k, r = map(int, input().split())

s = (k - r % k) % k
print(s * n + r * k)
",1.0,0.3497856557369232
445,"
n = int(input())
gifts = 0
current = 1

while gifts < n:
    gifts += current
    current = current * 2 + 1

if gifts == n:
    print(""YES"")
else:
    print(""NO"")
",1.0,0.9739718437194824
446,"
a, b = map(int, input().split())
results = []

for m in range(0, 31, 2):
    for n in range(1, 31, 2):
        N = (2 ** m) * (3 ** n)
        if a <= N <= b:
            results.append(N)

results.sort()
print('\n'.join(map(str, results)))
",1.0,0.9972002506256104
447,"import math
n, x = map(int, input().split())
s = list(map(int, input().split()))
o = 0
p = 0
for i in range(len(s)):
    if s[i] > 0:
        p += s[i]
    else:
        o += s[i]
print(abs((abs(p) - abs(o)) // x))",0.0,0.0005779631319455802
448,"n, b = int(input()), set()
seq = input().strip()
for i in range(n-1):
    t = seq[i:i+2]
    b.add(t)
print(len(b))

",0.0,0.9983922839164734
449,"n = int(input())
t = []
for i in range(n):
    t.append(int(input()))
print(min(t))
if min(t) < -15:
    print(""YES"")
else:
    print(""NO"")",1.0,0.012931236065924168
450,"def smallest_divisor(n):
    for i in range(2, n + 1):
        if n % i == 0:
            return i

n = int(input())
print(smallest_divisor(n))",1.0,0.9998886585235596
451,"k, n, s, p = map(int, input().split())
lst = 0
for i in range(k):
    if n % s != 0:
        lst += (n // s + 1)
    else:
        lst += n // s

if lst % p != 0:
    print(lst // p + 1)
else:
    print(lst // p)
",0.0,0.0001015815869322978
452,"n = int(input())

for i in range(n):
    a, b, c = list(map(int, input().split()))

    if a == b + c:
        print('YES')
    elif b == a + c:
        print('YES')
    elif c == a + b:
        print('YES')
    else:
        print('NO')",0.0,0.07034865021705627
453,"n = int(input())
if n % 2 == 0:
    n = n / 2 
elif n % 2 == 1:
    n = (n + 1) / 2
print(int(n))",0.0,0.18333081901073456
454,"n = int(input())
a = [int(x) for x in input().split()]
m = int(input())
b = [int(x) for x in input().split()]
c = [0] * 2 * n
for i in range(0, 2 * n, 2): c[i] = c[i + 1] = b.pop(0)
for i in range(n - 1):
    for j in range(n - 1):
        if a[j] > a[j + 1] and c[a[j]] != c[a[j + 1]]:
            a[j], a[j + 1] = a[j + 1], a[j]
for x in a: print(x, end=' ')",1.0,0.9299618005752563
455,"def main():
    A, B, C, D = map(int, input().split())
    if B < C or D < A:
        print(B - A + 1 + D - C + 1)
    else:
        print(max(B, D) - min(A, C) + 1)

if __name__ == '__main__':
    main()",1.0,0.9994320273399353
456,"s = input() + input()
flag = True
for i in range(len(s)):
    if s.count(s[i]) != 1:
        break
    if i == len(s) - 1:
        print(3)
for i in range(len(s)):
    if s.count(s[i]) == 4:
        print(0)
        break
    if s.count(s[i]) == 3:
        print(1)
        break    
if s.count(s[0]) != 4 and ((s[0] == s[1] and s[2] == s[3]) or (s[0] == s[2] and s[1] == s[3]) or (s[0] == s[3] and s[1] == s[2])):
    print(1)
    flag = False
if (s[0] == s[1] and s[2] != s[3]) or (s[0] == s[2] and s[1] != s[3]) or (s[0] == s[3] and s[1] != s[2]) or (s[1] == s[2] and s[0] != s[3]) or (s[1] == s[3] and s[0] != s[2]) or (s[2] == s[3] and s[0] != s[1]):
    print(2)",0.0,2.2414612754848712e-13
457,"a,b=map(int,input().split())
n=int(input())
s=a*b
if s%9==0:
	print(""NO"")
	print(0)
else:
	print(""YES"")
	c=n-(s//9)
	print(c)
",0.0,0.05378350242972374
458,"a = int(input())
b = int(input())
c = int(input())
k = 0
if (b-a)<1000000:
	for i in range(a, b+1):
		if i%c==0:
			k+=1
else:
	if a%c==0 or (a+a%c)%c==0:
		k+=1
	k += (b-a+1)/c
print(k)
",0.0,0.0008259384194388986
459,"
n, w, k = map(int, input().split())
total_weight = n * w
original_weight = total_weight * k
res = original_weight // w
print(res)
",1.0,0.9724384546279907
460,"n = int(input())
f = 1
for i in range(n):
    i = i + 1
    f = i*f
print(f)
    
",0.0,0.9899030923843384
461,"
n, m = map(int, input().split())
graph = [list(map(int, input().split())) for _ in range(n)]
result = []

def dfs(v, steps, visited):
    if steps == m:
        return [v]
    visited[v] = True
    reachable = []
    for w in range(n):
        if graph[v][w] == 1 and not visited[w]:
            reachable.extend(dfs(w, steps + 1, visited[:]))
    visited[v] = False
    return reachable

for i in range(n):
    visited = [False] * n
    reachable_vertices = dfs(i, 0, visited)
    for v in reachable_vertices:
        if v != i and (i + 1, v + 1) not in result:
            result.append((i + 1, v + 1))

if result:
    for pair in result:
        print(pair[0], pair[1])
else:
    print(""NO"")
",1.0,1.0
462,"
a1, a2, a3 = map(int, input().split())

if a1 + a2 == a3 or a1 +a3==a2 or a2+a3==a1:
    print(""Yes"")
else:
    print(""No"")
",1.0,0.14069737493991852
463,"n,k,t,c,d,p,nl,np=map(int,input().split())
litr=k*t//nl
dolki=c*d//1
gramm=p//np
count=min(litr,dolki,gramm)
friend=count
while friend>n:
    friend-=n
print(count,friend)",0.0,0.9999966621398926
464,"
n = int(input())
intervals = []
for i in range(n):
    a,b = input().split()
    a = int(a)
    b = int(b)
    intervals.append((a,b))

start = 1
end = 31

for inter in intervals:
    if inter[0] > start:
        start = inter[0]
    if inter[1] < end:
        end = inter[1]

if end >= start:
    print(""Yes"")
else:
    print('No')
",1.0,0.9872512817382812
465,"a=int(input())
b=int(input())
def kd(x):
    sp=[]
    for t in range(1,int(x**0.5)+1):
        if x%t==0:
            sp.append(t)
            if x//t!=t:
                sp.append(x//t)
    sp.sort()
    sp.reverse()
    return(sp)
spd=[]
spdm=[]
dm=0
pn=1
for i in range(a,b+1):
   if len(kd(i))==4:
       spd=kd(i)
       spd.reverse()
       print(*spd)
",0.0,9.394107473781332e-05
466,"k, n=map(int, input().split())
a=[int(p) for p in input().split()]
S=0
a[0]-=k
if a[0]<0:
    a[0]=0
for i in range(1, n):
    a[i]+=a[i-1]-k
    if a[i]<0:
        a[i]=0
    S=a[i]
print(S)",0.0,0.9374056458473206
467,"
n, m = map(int, input().split())
grid = [list(input()) for _ in range(n)]
directions = [(-1, 0), (1, 0), (0, -1), (0, 1)]
destroyed = 0

def is_valid(x, y):
    return 0 <= x < n and 0 <= y < m

for i in range(n):
    for j in range(m):
        if grid[i][j] == 'B':
            for dx, dy in directions:
                nx, ny = i + dx, j + dy
                if is_valid(nx, ny) and grid[nx][ny] == 'A':
                    destroyed += 1
                    grid[nx][ny] = '.'  # Mark 'A' as destroyed
                    break

print(destroyed)
",1.0,1.0
468,"sp=input().split(' ')
kol=0
for i in range(20):
    if int(sp[i])<100 and int(sp[i])%10==0:
      kol=kol+1
print(kol)",0.0,0.8128414750099182
469,"
s = input().strip()
unique_nicks = set()
n = len(s)

for i in range(n):
    for j in range(i, n):
        unique_nicks.add(s[i:j+1])

res = len(unique_nicks)
print(res)
",1.0,0.9998099207878113
470,"def sum_number(num):
    sum = 0
    while num > 0:
        sum += num % 10
        num //= 10
    return sum
k=int(input())
b=0
for i in range(1,10001):
    if sum_number(i)==10:
        b+=1
    if b==k:
        print(i)
        break
",0.0,0.9999992847442627
471,"
n = int(input())
max_dist = 0
for _ in range(n):
    line = input().strip()
    if line.count('A') < 25:
        d = {}
        for i, c in enumerate(line):
            if c in d:
                dist = i - d[c]
                if dist > max_dist:
                    max_dist = dist
            else:
                d[c] = i
print(max_dist)
",1.0,0.9999938011169434
472,"
a = input()
s = 0
for i in a:
    s += int(i)
print(s)
",1.0,0.9894653558731079
473,"n = int(input())
a = list(map(int, input().split()))
t = len(set(a))
b = [0] * 1001
for i in range(n):
    b[a[i]] += 1
print(max(b), t)",0.0,0.12454208731651306
474,"n = int(input())
k = int(input())
x = int(input())
y = int(input())
if n > k:
    print(x * k + y * (n-k))
else:
    print(x * n)",0.0,0.0008688742527738214
475,"def find(s):
    for i in range(len(s) -3):
        if s[i] == s[i+1] == s[i+2]:
            for j in range(i+3, len(s)):
                if s[j] != s[i]:
                    break
            return i, j
    else:
        return -1, -1
r = list(input().split())
del r[0]
ans = 0
while True:
    a, b = find(r)
    if a == -1:
        break
    s = len(r)
    del r[a:b]
    ans+= (s-len(r))
print(ans)
",0.0,1.0
476,"
k, r = map(int, input().split())
for n in range(1, 11):
    if (n * k) % 10 == 0 or (n * k) % 10 == r:
        print(n)
        break
",1.0,0.3920479714870453
477,"n=int(input())
for i in range(n+1):
    m=""""
    m+="" ""*2*(n-i)
    for j in range(i+1):
        m+=str(j)+"" ""
    for j in range(i-1, -1, -1):
        m+=("" "" if j!=i-1 else """")+str(j)
    print(m)
for i in range(n-1, -1, -1):
    m=""""
    m+="" ""*2*(n-i)
    for j in range(i+1):
        m+=str(j)+"" ""
    for j in range(i-1, -1, -1):
        m+=("" "" if j!=i-1 else """")+str(j)
    print(m)",0.0,1.0
478,"
def higher_surname(surname):
    surname_list = list(surname)
    n = len(surname_list)
    
    for i in range(n):
        for j in range(i + 1, n):
            surname_list[i], surname_list[j] = surname_list[j], surname_list[i]
            new_surname = ''.join(surname_list)
            if new_surname < surname:
                surname = new_surname
            surname_list[i], surname_list[j] = surname_list[j], surname_list[i]
    
    return surname

input_surname = input().strip()
print(higher_surname(input_surname))
",1.0,1.0
479,"a=int(input())
for u in range(123450000,123460000):
    if u%10==8 and (str(u)[0:5]=='12345') and (str(u)[6:7]=='7') and u%a==0:
        print(u,u//a)",0.0,0.712054431438446
480,"s1, s2, s3 = map(int, input().split())
n = int(input())

ingredients = []
for index in range(n):
    get = input()
    if get == 'sausage':
        ingredients.append(s1)
    elif get == 'ketchup':
        ingredients.append(s3)
    elif get == 'cheese':
        ingredients.append(s2)

result = 1
for el in ingredients:
    result *= el

print(result)",0.0,0.9838122725486755
481,"
L, W, H = map(int, input().split())
area = 2 * (L * H + W * H)
cans_needed = (area + 15) // 16
print(cans_needed)
",1.0,0.6303216814994812
482,"
n = int(input())
maxn = 0
for i in range(n):
    ai, bi = map(int, input().split())
    maxn = max(maxn, ai + bi)
print(maxn)
",1.0,0.9994866847991943
483,"
X = int(input())
A = int(input())
B = int(input())

fisherman_income = 3 * X
storyteller_income = A + 2 * B

max_amount = max(fisherman_income, storyteller_income)
print(max_amount)
",1.0,0.6250173449516296
484,"n=int(input())
k=int(input())
x=int(input())
y=int(input())
s=x*k+((n-k)*y)
print(s)",0.0,0.049214981496334076
485,"x,y,a,b=map(int,input().split())
x1=[]
y1=[]
j1=[]
for i in range(a,b+1):
    if i%x==0:
        x1.append(i)
    if i%y==0:
        y1.append(i)
for j in range(len(x1)):
    if x1[j] in y1:
        j1.append(j)

print(len(j1))",0.0,0.004421198274940252
486,"
n = int(input())
advisers = list(map(int, input().split()))
res = []
day = 0

for i in range(n):
    if advisers[i] > 0:
        res.append('+')
        day = i + 1
        advisers[i] -= 1
        while advisers[i] > 0:
            day += 1
            res.append('+')
            advisers[i] -= 1
    else:
        res.append('-')

while sum(advisers) > 0:
    day += 1
    res.append('+')
    for j in range(n):
        if advisers[j] > 0:
            advisers[j] -= 1
            break

print(''.join(res))
",1.0,1.0
487,"m,s=map(int,input().split())
p,q=map(int,input().split())
ms=s+m*60
gg=(2880-ms)//2
pm=gg//24*3+p
qm=gg//24*2+q
print(pm,qm)
",0.0,0.9840083122253418
488,"from fnmatch import *
a=int(input())
for x in range(0, 10**8, a): # ÐÐµÑÐµÐ±ÐµÑÐ°ÐµÐ¼ Ð²ÑÐµ ÑÐ¸ÑÐ»Ð° Ð¾Ñ 0 Ñ ÑÐ°Ð³Ð¾Ð¼ 273, Ð±ÑÐ´ÑÑ Ð¿Ð¾Ð»ÑÑÐµÐ½Ð½Ñ ÑÐ¸ÑÐ»Ð° ÐºÐ°ÑÑÐ½ÑÐµ 317
    if fnmatch(str(x), '12??1*56'):# ÐÑÐ¾Ð²ÐµÑÑÐµÐ¼ Ð¿Ð¾Ð»ÑÑÐµÐ½Ð½Ð¾Ðµ ÑÐ¸ÑÐ»Ð¾ ÑÐ¾Ð¾ÑÐ²ÐµÑÑÑÐ²Ð¸Ñ Ð·Ð°Ð´Ð°Ð½Ð¸Ñ
        print(x, x // a)",0.0,5.8674568208516575e-06
489,"def main():
    n = int(input())
    oldest_male_age = -1
    oldest_male_num = -1
    for i in range(1, n + 1):
        age, gender = map(int, input().split())
        if gender == 1 and age > oldest_male_age:
            oldest_male_age = age
            oldest_male_num = i
    print(oldest_male_num)

if __name__ == ""__main__"":
    main()",1.0,0.9999998807907104
490,"for i in range(int(input())):
    a, b, c = map(int, input().split())
    if a + b == c or a + c == b or b + c == a:
        print('YES')
    else:
        print(""NO"")",0.0,0.4848560094833374
491,"n = int(input())
print(n // 2 + 1 * (n % 2 == 1))",0.0,0.02815943956375122
492,"
a = int(input())
b = a // 100
c = a % 10
res = b * 10 + c
print(res)
",1.0,0.45318320393562317
493,"
n = int(input())
count = 0
for i in range(1, n):
    if (n - i) % i == 0:
        count += 1
print(count)
",1.0,0.9906959533691406
494,"
n = int(input())
digits = []
while n > 0:
    digits.append(n % 10)
    n //= 10
for d in digits:
    print(d)
",1.0,0.9994038343429565
495,"n, k, t, c, d, p, nl, np = map(int, input().split())
q = 0
kt = k * t
cd = c * d
while cd > 0 and p > 0 and kt > 0:
    q += 1
    kt -= nl
    cd -= 1
    p -= np
if cd < 0 or p < 0 or kt < 0:
    q -= 1
w = q % n
if w == 0 and q != 0:
    w = n
print(q, w)",0.0,0.9999984502792358
496,"n,m,a=list(map(int, input().split()))
if m%a==0:
    m1=m//a
else:
    m1=m//a+1
if n%a==0:
    n1=n//a
else:
    n1=n//a+1
print(m1*n1)",0.0,0.000630841706879437
497,"pi = [int(x) for x in input().split()]
n1 = pi[0]
beg1 = pi[1]
mah1 = pi[2]
bros1 = pi[3]
beeg1 = pi[4]
pit = n1 * (beg1 + mah1*bros1 + beeg1)
pa = [int(x) for x in input().split()]
n2 = pa[0]
beg2 = pa[1]
mah2 = pa[2]
bros2 = pa[3]
beeg2 = pa[4]
pas = n2 * (beg2 + mah2*bros2 + beeg2)
if pit == pas:
    print('Draw', n1 * (beg1 + mah1*bros1 + beeg1))
elif pit < pas:
    print('Python', n1 * (beg1 + mah1*bros1 + beeg1))
elif pas < pit:
    print('Pascal', n2 * (beg2 + mah2*bros2 + beeg2))",0.0,3.520307600979322e-08
498,"k, r = map(int,input().split())
b = k

counter = 0
while k % 10 != 0 and k % 10 != r:
    counter += 1
    k += b

print(k // b)",0.0,0.9284524917602539
499,"
n = int(input())
c = list(map(int, input().split()))
min_cost = float('inf')

for k in range(1, n + 1):
    total_cost = sum(c[:k]) + (n - k) * min(c[:k])
    min_cost = min(min_cost, total_cost)

print(min_cost)
",1.0,0.9982341527938843
500,"import math
s=list(map(int, input().split(' ')))
k=0
for i in range(s[2], s[3]+1):
    
    if i%s[0]==0 and i%s[1]==0:
        k=i
        
        break

print(int(1+(s[3]-k)//(s[0]*s[1]/math.gcd(s[0], s[1]))))

        
",0.0,2.445784593874123e-05
501,"
def unique_nicknames(S):
    unique_nicknames_set = set()
    length = len(S)
    
    for i in range(length):
        for j in range(i, length):
            unique_nicknames_set.add(S[i:j + 1])
    
    return len(unique_nicknames_set)

S = input().strip()
print(unique_nicknames(S))
",1.0,0.9999991655349731
502,"
n = int(input())
a = list(map(int, input().split()))
teams = {}
for i in range(n):
  if a[i] not in teams:
    teams[a[i]] = []
  teams[a[i]].append(i)
max_team_size = 0
for team in teams.values():
  max_team_size = max(max_team_size, len(team))
print(max_team_size)
",1.0,0.9992483258247375
503,"
X = int(input())
Y = int(input())

if (X == 5 and Y == 4) or (X == 6 and Y == 2) or (X == 6 and Y == 4) or (X == 5 and Y == 2) or (X == 4 and Y == 3) or (X == 4 and Y == 5) or (X == 3 and Y == 4) or (X == 3 and Y == 2):
    print(""YES"")
else:
    print(""NO"")
",1.0,0.0006640807841904461
504,"a, b = map(int, input().split())
c = input()

if b >= int(c[0]):
    print(str(b) + c)

else:
    for i in range(len(c)):
        if int(c[i]) <= b:
            break

    print(c[:i + 1] + str(b) + c[i + 1:])",0.0,0.0021026753820478916
505,"def inverse_graph():
    n = int(input())
    matrix = []
    for _ in range(n):
        row = list(map(int, input().split()))
        matrix.append(row)

    for i in range(n):
        for j in range(n):
            if i == j:
                print(0, end=' ')
            else:
                print(0 if matrix[i][j] else 1, end=' ')
        print()

inverse_graph()",1.0,0.999996542930603
506,"
n, r = map(int, input().split())
d = list(map(int, input().split()))
count = 0
j = 0

for i in range(n):
    while j < n and d[j] - d[i] <= r:
        j += 1
    count += j - i - 1

print(count)
",1.0,0.9999969005584717
507,"
a = int(input())
for i in range(1, 1010):
    if a == 0:
        break
    b = a
    j = 0
    while b > 0:
        if b % 10 == 3:
            b //= 10
            j += 1
        elif b % 10 == 4:
            b //= 10
        elif b % 10 == 1 and j > 0:
            b //= 10
            j -= 1
        elif b % 10 == 2 and j > 0:
            b //= 10
            j -= 1
        elif b % 10 == 5:
            b //= 10
        else:
            break
    if b == 0 and j == 0:
        print(i, end=' ')
",1.0,0.9999994039535522
508,"
a, b, n = map(int, input().split())
total_kopecks = (a * 100 + b) * n
rub = total_kopecks // 100
kopecks = total_kopecks % 100
print(rub, kopecks)
",1.0,0.9326216578483582
509,"
n = int(input())
for i in range(0,n):
    print(""I must not tell lies"")
",1.0,0.9823454022407532
510,"
n, t = map(int, input().split())
grid = [list(map(int, input().split())) for _ in range(n)]

directions = [(-1,-1), (-1,0), (-1,1),
              (0,-1),          (0,1),
              (1,-1), (1,0), (1,1)]

for _ in range(t):
    next_grid = [[0]*n for _ in range(n)]
    for i in range(n):
        for j in range(n):
            count = 0
            for dx, dy in directions:
                x = i + dx
                y = j + dy
                if 0 <= x < n and 0 <= y < n:
                    count += grid[x][y]
            if grid[i][j] == 1:
                if count == 2 or count == 3:
                    next_grid[i][j] = 1
                else:
                    next_grid[i][j] = 0
            else:
                if count == 3:
                    next_grid[i][j] = 1
                else:
                    next_grid[i][j] = 0
    grid = next_grid

for row in grid:
    print(' '.join(map(str, row)))
",1.0,1.0
511,"
n = int(input())
mat = []
for i in range(n):
    mat.append(list(map(int,input().split())))

res = []
for i in range(n):
 for j in range(n):
  if mat[i][j] == 1:
   res.append((i+1,j+1))

for a,b in res:
 print(a,b)
",1.0,0.9998630285263062
512,"
N = int(input())
roads = [list(map(int, input().split())) for _ in range(N)]
V, W = map(int, input().split())
matrix = roads[V - 1] + roads[W - 1]
for i in range(N):
    for j in range(N):
        if roads[i][j] != roads[i][i] and roads[i][j] != roads[j][j]:
            matrix[i * N + j] = roads[i][j]
            matrix[i * N + j + N] = roads[j][i]
matrix = sorted(matrix)
i = 0
while i < len(matrix) and matrix[i] > 0:
    i += 1
if i == len(matrix):
    print(""NO"")
else:
    print(matrix[i])
",1.0,0.010480369441211224
513,"
n = int(input())
a = list(map(int, input().split()))
b = list(map(int, input().split()))
d = 0

for i in range(n):
    if a[i] == b[i]:
        d += a[i]

print(d)
",1.0,0.8148106932640076
514,"
year = int(input())
if (year % 4 == 0 and year % 100 != 0) or (year % 400 == 0):
    print(""YES"")
else:
    print(""NO"")
",1.0,0.0011178395943716168
515,"
a, b = map(int, input().split())
if a == b or (a < 1 or b < 1):
    print(""no"")
else:
    n = abs(a - b) * 2
    if n % 2 == 0:
        print(n)
    else:
        print(""no"")
",1.0,0.0010045086964964867
516,"
n = int(input())
a = []
for i in range(n):
    a.append(input())
s = ''
for i in a:
    s += i
k = 0
for i in range(1, n):
    if s[i - 1] != s[i]:
        k += 1
print(k + 1)
",1.0,0.9802072644233704
517,"q,w,e=map(int,input().split())

print(e//w+e//q+2)",0.0,0.8589257597923279
518,"a, b, c = map(int, input().split())
ans = a
if (b != 0 and c < 2 or b + c == 2 or b + c == 1) and (c + b) % 3 != 0:
    ans = -1
else:
    if (b + c) % 3 == 0:
        ans += (b + c) // 3
    else:
        ans = (b + c) // 3 + 1
print(ans)",0.0,0.00010603015107335523
519,"n, k, t, c, d, p, nl, np=map(int, input(). split())
f=k*t
e=c*d
j=0
while f>=nl and e>0 and p>np:
    j=j+1
    f=f-nl
    e=e-1
    p=p-np
q=j%n
if q==0:
    q=n
print(j, q)",0.0,0.9999998807907104
520,"
def bubble_sort_with_candy(arr, candy_pairs):
    n = len(arr)
    candy_set = set()
    for a, b in candy_pairs:
        candy_set.add((a, b))
        candy_set.add((b, a))
    
    for i in range(n - 1):
        for j in range(n - 1):
            if arr[j] > arr[j + 1] and (arr[j], arr[j + 1]) not in candy_set:
                arr[j], arr[j + 1] = arr[j + 1], arr[j]
    return arr

n = int(input())
arr = list(map(int, input().split()))
m = int(input())
candy_pairs = [tuple(map(int, input().split())) for _ in range(m)]
result = bubble_sort_with_candy(arr, candy_pairs)
print(' '.join(map(str, result)))
",1.0,1.0
521,"
n = int(input())
arr = [[''] * n for _ in range(n)]
for i in range(n):
    for j in range(n):
        dist = min(i, j, n - 1 - i, n - 1 - j)
        arr[i][j] = chr(ord('a') + dist)
for row in arr:
    print(''.join(row))
",1.0,0.9999856948852539
522,"m=input()
s='ÐÐÐÐÐÐ£Ð«Ð­Ð®Ð¯'
l='1234567890'
x=str()
v=0
for i in m:
    if i in l:
        x+=i
    elif i in s:
        v+=1
print(int(x)%v)
",0.0,0.9988430738449097
523,"n = int(input())
x = list(map(int, input().split(' ')))
arr = []
for i in x:
    arr.append((x.count(i)))
print(max(arr))",0.0,0.3189792037010193
524,"s=str(input())
a=0
for i in range(len(s)-2):
    if (s[i] in 'BCD') and (s[i+1] in 'BDE') and (s[i]!=s[i+1]) and (s[i+2] in 'BCE') and (s[i+1]!=s[i+2]):
        a+=1
print(a)
",0.0,0.03880894184112549
525,"n1, p1, m1, t1, s1 = map(int, input().split())
n2, p2, m2, t2, s2 = map(int, input().split())
h1=0
h2=0
for i in range(n1):
    h1+=p1+s1+t1*m1
for g in range(n2):
    h2+=p2+s2+t2*m2
if h1==h2:
    print('Draw', h1)
elif h1>h2:
    print('Pascal', h2)
else:
    print('Python', h1)",0.0,0.9998366832733154
526,"
n = int(input())
a = list(map(int, input().split()))
print(round(sum(a) / n))
",1.0,0.043108340352773666
527,"l = list(map(int, input().split()))
m, n =0, 0
for el in l:
  if el>m:
    m = el
for el in l:
  if el==m:
    n+=1
print(n)",0.0,0.999879002571106
528,"
b = int(input())
c = int(input())
a = int(input())

res = set()

for w1 in [-a, 0, a]:
    for w2 in [-b, 0, b]:
        for w3 in [-c, 0, c]:
            total = w1 + w2 + w3
            if total != 0:
                res.add(abs(total))

print(len(res))
",1.0,0.9999717473983765
529,"def binary_to_decimal(binary):
    decimal = 0
    for i in range(len(binary)):
        decimal += int(binary[i]) * (2 ** (len(binary) - i - 1))
    return decimal

binary = input()
decimal = binary_to_decimal(binary)
print(decimal)",1.0,0.9999856948852539
530,"n, k, t, c, d, p, nl, np = map(int, input().split())

k = k*t # ÐºÐ¾Ð»Ð¸ÑÐµÑÑÐ²Ð¾ Ð¼Ð¼ Ð¼Ð°ÑÐ°ÐºÑÑ
c = c*d # dolki
if nl != 0 and np != 0:
    a = min(k/nl, c, p/np)
    if a == 0:
        a = 1
        if n == 0:
            print (0, 0)
    else:
        print (int(a), int(a/n) + 1)
else:
    print (1, 1)",0.0,3.113417187705636e-05
531,"
S = int(input())
petya_and_seryozha = S // 6
katya = S - 2 * petya_and_seryozha
print(petya_and_seryozha, katya, petya_and_seryozha)
",1.0,0.9863671660423279
532,"
x, y = map(float, input().split())
if x > 0 and y > 0:
    print(1)
elif x < 0 and y > 0:
    print(2)
elif x < 0 and y < 0:
    print(3)
elif x > 0 and y < 0:
    print(4)
",1.0,0.3489179015159607
533,"
a, b = map(int, input().split())
years = 0
while b >= a:
    a *= 3
    b *= 2
    years += 1
print(years)
",1.0,0.9960353970527649
534,"
n, m = map(int, input().split())
a = [list(map(int, input().split())) for _ in range(n)]
dp = [1] * n
for i in range(n):
    for j in range(i):
        if a[i][j] == 1:
            dp[i] = max(dp[i], dp[j] + 1)
mx = max(dp)
ans = []
for i in range(n):
    if dp[i] == mx:
        ans.append(i + 1)
        mx -= 1
print(len(ans))
print(*ans[::-1])
",1.0,0.16393162310123444
535,"t = int(input())
f = 0
for i in range(t):
    n,k = map(int, input().split("" ""))
    while n!=0:
        if n%k==0:
            n/=k
        else:
            n-=1
        f+=1
    print(f)
    f=0",0.0,0.9993789196014404
536,"n = int(input())
for i in range(n):
    s = input().lower()
    if s == ""python"":
        print(""YES"")
    else:
        print(""NO"")",0.0,0.25725939869880676
537,"from math import pow
a = float(input().strip())
n = int((input().strip()))
res = 1
for i in range(1, n+1):
    val = 1
    for _ in range(i):
        val *= a
    res += val
print(int(res) if res == int(res) else res)
",0.0,0.0007905233651399612
538,"a,b=map(int,input().split())
print(min(a,b), (max(a,b)-min(a,b)) // 2)
",0.0,0.8747063279151917
539,"
M1, M2, M3 = map(int, input().split())
d = abs(M1-M3)
d += abs(M2-M1)
d += abs(M2-M3)
print(d)
",1.0,0.9983662962913513
540,"def sum_of_digits(a):
    s = 0
    for digit in str(a):
        s += int(digit)
    return s

a = int(input())
print(sum_of_digits(a))
",1.0,0.9999680519104004
541,"a=list(map(int, input().split()))
if a[1]>=a[0] and a[2]>=a[0]:
    print('YES')
else:
    print('NO')",0.0,0.010509109124541283
542,"
a,b,c,d=map(int,input().split())
if(a==1 and c==1 and b==0 and d==0):
    print(""YES"")
elif(a==1 and c==1 and b==1 and d==0):
    print(""YES"")
elif(a==0 and b==1 and c==1 and d==1):
    print(""YES"")
elif(a==1 and b==1 and c==0 and d==1):
    print(""YES"")
else:
    print(""NO"")
",1.0,0.0032213451340794563
543,"n, k = map(int, input().split())max_winners = n // 2diplomas = min(max_winners // (k + 1), n // (k + 1))certificates = k * diplomasif diplomas + certificates > max_winners:certificates = max_winners - diplomasif diplomas + certificates < 0:diplomas, certificates = 0, 0nothing = n - diplomas - certificatesprint(diplomas, certificates, nothing)",1.0,0.9999927282333374
544,"
N, W, K = map(int, input().split())
res = (K - 1) * W
print(res)
",1.0,0.9768213629722595
545,"mn = list(map(int,input().split()))
k = mn[2]

m=mn[0]
n=mn[1]

map_=[]
for i in range(m):
    map__=[]
    for i2 in range(n):
        map__+=['.']
    map_+=[map__]
k_='abcdefghijklmnopqrstuvwxyz'  
for i in range(k):
    a = list(map(int,input().split()))

    x1=a[0]-1
    y1=a[1]-1
    x2=a[2]-1
    y2=a[3]-1
    map_[y1:y2][x1:x2] = k_[i]
    for i2 in range(y1,y2+1):
        map_[x1][i2]=k_[i]
        map_[x2][i2]=k_[i]
    for i2 in range(x1,x2+1):
        map_[i2][y1]=k_[i]
        map_[i2][y2]=k_[i]

for i in range(len(map_)):
    o=''
    for i2 in range(len(map_[i])):
        o+=str(map_[i][i2])
    print(o)

    

",0.0,0.9999552965164185
546,"a = [int(i) for i in input().split()]
if a[0] > 0 and a[1] > 0:
    print(sum(a))
elif a[0] < 0 and a[1] < 0:
    print(sum(a))
else:
    print(a[0] - a[1])",0.0,0.0011950271436944604
547,"a,b,c,d = map(int,input().split())
x =a*60+b
y= c*60+d
if y<x:
    y=y+1440
h= int((y-x)/60)
m =(y-x)%60
print(h,m)",0.0,0.9764034152030945
548,"
a, b = map(int, input().split())
print(a + b)
",1.0,0.8321447372436523
549,"a = int(input())
b = int(input())
c = a / b
print(c)",1.0,0.9008433222770691
550,"a = int(input())
b = int(input())
c = int(input())
d = int(input())
if a-b<0:
    print(a*c)
else:
    print(b * c + (a - b) * d)",0.0,0.00021915767865721136
551,"
n, m = map(int, input().split())
a = list(map(int, input().split()))
b = list(map(int, input().split()))
res = 0
for i in range(n):
    if b[i] - a[i] > 0:
        res += b[i] - a[i]
if res > m:
    res = m
print(res)
",1.0,0.9999046325683594
552,"k, n=map(int,input().split())
print(n//k+1, n%k)",0.0,0.6591411828994751
553,"
n, m = map(int, input().split())
grid = [list(map(int, input().split())) for _ in range(n)]
count = 0

for i in range(n):
    for j in range(m):
        curr = grid[i][j]
        if (i > 0 and curr <= grid[i-1][j]) or (i < n-1 and curr <= grid[i+1][j]) or (j > 0 and curr <= grid[i][j-1]) or (j < m-1 and curr <= grid[i][j+1]):
            continue
        count += 1

print(count)
",1.0,0.9999997615814209
554,"
n, m = map(int, input().split())
y, x = map(int, input().split())
field = [[1 for _ in range(m)] for _ in range(n)]
res = 0
dirs = [(0, 1), (1, 0), (0, -1), (-1, 0)]
dir_idx = 0
curr_y, curr_x = 0, 0

while True:
    if curr_y == y - 1 and curr_x == x - 1:
        break
    res += field[curr_y][curr_x]
    field[curr_y][curr_x] = 0
    next_y = curr_y + dirs[dir_idx][0]
    next_x = curr_x + dirs[dir_idx][1]
    if 0 <= next_y < n and 0 <= next_x < m and field[next_y][next_x] != 0:
        curr_y, curr_x = next_y, next_x
    else:
        dir_idx = (dir_idx + 1) % 4
        curr_y += dirs[dir_idx][0]
        curr_x += dirs[dir_idx][1]

print(res)
",1.0,1.0
555,"
n = int(input())
for _ in range(n):
    data = list(map(int, input().split()))
    correct = data[0]
    answers = data[1:]
    scores = [0] * 6
    correct_count = answers.count(correct)
    
    if correct_count == 1:
        scores[answers.index(correct)] = 6
    elif correct_count == 2:
        for i in range(6):
            if answers[i] == correct:
                scores[i] = 3
    elif correct_count == 3:
        for i in range(6):
            if answers[i] == correct:
                scores[i] = 2
    elif correct_count > 3:
        for i in range(6):
            if answers[i] == correct:
                scores[i] = 1
    
    print(' '.join(map(str, scores)))
",1.0,0.999885082244873
556,"
n = int(input())
if n == 1:
 print(""1 mag"")
elif n == 2:
 print(""1 maga"")
else:
 print(str(n-2) + "" magov"")
",1.0,0.05028452351689339
557,"
area = int(input())
side = int(input())
res = area / side
print(res)
",1.0,0.9008433222770691
558,"
a = input().split()
b = []
for i in range (len(a)):
    b.append(a[i])
    if len(b) >= 3:
        if b[-1] == b[-2] == b[-3]:
            b = b[:-3]
print (len(a) - len(b))


",0.0,0.9998568296432495
559,"def main():
    X, Y, A, B = map(int, input().split())
    pirate_shots, merchant_shots = 0, 0
    time = 0

    while pirate_shots < A and merchant_shots < B:
        time += 1
        if time % X == 0:
            merchant_shots += 1
        if time % Y == 0:
            pirate_shots += 1

    if pirate_shots == A and merchant_shots == B:
        print(0)
    elif pirate_shots == A:
        print(1)
    else:
        print(2)

if __name__ == ""__main__"":
    main()",1.0,0.9998570680618286
560,"x,y, z=map(int,input().split())
a=0
a=x*3+y*(3+2)+z*(3+2+7)
print(a)",0.0,0.22179903090000153
561,"input()
l, c, res = [int(x) for x in input().split()], 1, 0
a = l[0]
for i in l[1:]:
    if i != a:
        c += 1
    else:
        if c > res:
            res = c
        c = 1
    a = i
print(max(res, c))",0.0,0.9665614366531372
562,"k, n = map(int, input().split())
a = list(map(int, input().split()))
s = 0
b = 0
for i in range(len(a)):
    b = a[i] + b - k
    if b < 0:
        b = 0
print(b)
",0.0,0.9994761347770691
563,"
n, m = map(int, input().split())
exit_order = []

for i in range(1, n + 1):
    if (i - 1) * 4 + 3 <= m:
        exit_order.append((i - 1) * 4 + 3)  # left not window
    if (i - 1) * 4 + 1 <= m:
        exit_order.append((i - 1) * 4 + 1)  # left window
    if (i - 1) * 4 + 4 <= m:
        exit_order.append((i - 1) * 4 + 4)  # right not window
    if (i - 1) * 4 + 2 <= m:
        exit_order.append((i - 1) * 4 + 2)  # right window

print(' '.join(map(str, exit_order)))
",1.0,2.4252083008491354e-08
564,"import math
n = int(input())
if n == 1:
    print(0)
else:
    b = 0
    if n % 2 != 0:
        b += 1
        n -= 2
    else:
        n -= 1 
    b += math.log2(n)
    print(math.ceil(b))",0.0,6.4516448219364975e-06
565,"n = int(input())
a = list(map(int,input().split()))
t = set()
mx = 0 
k = 0
for i in range(n*2):
    x = a[i]
    if x in t: 
        t.discard(x)
        k -= 1
    else:
        t.add(x)
        k += 1
    mx = max(mx, k)
print(mx)
        
        ",0.0,0.95932936668396
566,"a, b = map(int, input().split())
print(a**2+b**2)",0.0,0.1485005021095276
567,a = int(input())b = int(input())l = int(input())N = int(input())length = (N * (a + b) * 2) + lprint(length),1.0,0.009479536674916744
568,"
N = int(input())
K = int(input())
X = int(input())
Y = int(input())

if N <= K:
    total_cost = N * X
else:
    total_cost = K * X + (N - K) * Y

print(total_cost)
",1.0,0.003454257035627961
569,"n=int(input())
s=0
ng=[[0]*n for i in range(n)]
mas=[[0]*n for i in range(n)]



for i in range(n):
    mas[i]=[int(i) for i in input().split()]
for i in range(n):
    for j in range(n):
        if i!=j:
            if mas[i][j]==0:
                ng[i][j]=1
            else: ng[i][j]=0


            
for i in ng:
    print(' '.join(map(str,i)))
",0.0,0.00010638735693646595
570,"
def max_length_without_xzzy(s):
    max_len = 0
    current_len = 0
    i = 0
    while i < len(s):
        if s[i:i+4] == 'XZZY':
            current_len = 0
            i += 4
        else:
            current_len += 1
            max_len = max(max_len, current_len)
            i += 1
    return max_len

# Examples
print(max_length_without_xzzy('XYXZZY'))  # Output: 5
print(max_length_without_xzzy('XXXXXXXXXX'))  # Output: 10
",1.0,0.9998335838317871
571,"def iff(a, b, c):
    if a == b + c or b == c+a or c == b+a:
        return True
    else:
        return False

t = int(input())
for i in range(t):
    a, b, c = list(map(int, input().split()))
    if iff(a, b, c):
        print('YES')
    else:
        print('NO')",0.0,0.9999997615814209
572,"t = int(input())
for i in range(t):
    a = input()
    if a.lower()==""python"":
        print(""YES"")
    else:
        print(""NO"")",0.0,0.25725939869880676
573,"a,b=map(int,input().split())
def kd(x):
    sp=[]
    for t in range(1,int(x**0.5)+1):
        if int(x**0.5)==x**0.5:
            if x%t==0:
                sp.append(t)
                if x//t!=t:
                    sp.append(x//t)
    sp.sort()
    return(sp)
for i in range(a, b+1):
    if int(i**0.5)==i**0.5:
        spd=kd(i)
        if len(spd)==5:
            print(i, spd[3])",0.0,3.7690648468924337e-07
574,"
n, a, b = map(int, input().split())
groups = list(map(int, input().split()))
denied = 0

for group in groups:
    if group == 1:
        if a > 0:
            a -= 1
        elif b > 0:
            b -= 1
        elif b > 0:
            b -= 1
        else:
            denied += 1
    else:
        if b > 0:
            b -= 1
        else:
            denied += 2

print(denied)
",1.0,0.9998563528060913
575,print(len(set(list(input().strip()) + list(input().strip())))-1),0.0,0.0006807858590036631
576,"a=int(input())
b=int(input())
h=0
def inDel ( x ):
    inDel = []
    for i in range (2,x):
        if x%i == 0:
            inDel.append(i)
            if len(inDel)>1:
                break
    return inDel

for k in range(a,b+1):
    if len(inDel(k))== 1:
        h+=sum(map(int,str(k)))
print(h)",0.0,0.9999862909317017
577,"n = int(input())
g = 'python'
for i in range(n):
    s = input()
    if s.lower() == g:
        print('YES')
    else:
        print('NO')
    n -= 1",0.0,0.8562471270561218
578,"n,k=[int(x)for x in input().split()]
ans=0
for i in range(1,n+1):
    if ans*5+k<=240:
        ans+=1
    else:
        break
print(ans)",1.0,0.3021872639656067
579,"def is_inside(x1, y1, x2, y2, x, y, R):
    return x1 <= x <= x2 and y1 <= y <= y2 and (x - x1 <= R or x2 - x <= R or y - y1 <= R or y2 - y <= R)

N = int(input())
for _ in range(N):
    x1, y1, x2, y2, R, x, y = map(int, input().split())
    if is_inside(x1, y1, x2, y2, x, y, R):
        print(""yes"")
    else:
        print(""no"")",1.0,1.0
580,"def main():
    d1, d2, d3 = map(int, input().split())
    min_distance = min(d1 + d2 + d3, d1 + 2 * d3, 2 * d2 + d3)
    print(min_distance)

if __name__ == ""__main__"":
    main()",1.0,0.9993093013763428
581,"
k = int(input())
h = k // 60
m = k % 60
print(h, m)
",1.0,0.9198208451271057
582,"n = int(input())
A,B,C = map(int,input().split())
D,E,F = map(int,input().split())
print((n+1)*(A*D+B*E+C*F))",0.0,0.05148583650588989
583,"
a, b, c, d = map(int, input().split())
m = a * d + b * c
n = b * d
for i in range(2, min(m, n) + 1):
  while m % i == 0 and n % i == 0:
    m //= i
    n //= i
print(m, n)
",1.0,0.9999878406524658
584,"
a=int(input())
b=int(input())
n=int(input())
d=a*100+b
f=(d*n)//100
g=(d*n)%100
print(f, g)",0.0,0.08804444968700409
585,"def max_consecutive_dif_chars(s):
    most, cur, cnt = 0, 1, 1
    for i in range(1, len(s)):
        if s[i] != s[i-1]:
            cur += 1
            cnt = max(cnt, cur)
        else:
            cur = 1
    return max(most, cnt)

s = input()
print(max_consecutive_dif_chars(s))
",1.0,0.9999980926513672
586,"n=int (input())
mas=[0]
s = input().split() 
mas = [int(i) for i in s] 
mas=mas+[1001]
list.sort(mas)
k=1
for i in range(n):
    if mas[i+1]==mas[i]:
        k+=1
    else:
        print(mas[i],k)
        k=1

",0.0,0.0001493791933171451
587,"n = int(input())
l = list(map(int, input().split()))
a=0
b=0
x=n-1
y=0
c=1
for i in range(n):
    if c==1:
        if l[x]>=l[y]:
            a+=l[x]
            x-=1
        else:
            a+=l[y]
            y+=1
        c=0
    else:
        if l[x]>=l[y]:
            b+=l[x]
            x-=1
        else:
            b+=l[y]
            y+=1
        c=1

print(a,b)",0.0,0.0014513133792206645
588,"a = int(input())
b = int(input())
attempts = 0
correct_sum = a + b

while True:
    attempts += 1
    s = int(input())
    if s == correct_sum:
        break

print(attempts)",1.0,0.9998262524604797
589,"
s = input()
s = s.strip()
res = """"
i = 0
while i < len(s):
    if s[i] != ' ':
        res += s[i]
    else:
        res += ' '
        while i < len(s) and s[i] == ' ':
            i += 1
        i -= 1
    i += 1
print(res)
",1.0,0.9987913966178894
590,"def max_consecutive_different_chars(s):
    max_count = current_count = 1
    for i in range(1, len(s)):
        if s[i] != s[i - 1]:
            current_count += 1
            max_count = max(max_count, current_count)
        else:
            current_count = 1
    return max_count

s = input()
print(max_consecutive_different_chars(s))",1.0,0.9999686479568481
591,"n = int(input())
a = []
for i in range(n):
    a.append(
        "" "".join(
            ["" ""] * (n - i)
            + list(map(str, range(i + 1)))
            + list(map(str, range(i - 1, -1, -1)))
        )
    )
now = a.copy()
a.append("" "".join(list(map(str, range(n + 1))) + list(map(str, range(n - 1, -1, -1)))))
a += now[::-1]
for i in a:
    print(i)
",0.0,1.0
592,"n = int(input())
a,b = 1, 0
s=4
n-=1
while n!=0:
    if n<=max(a, b):
        s+=n*2+1
        break
    else:
        s+=2*a+1
        if b==0:
            n-=a
            a+=1
            b=1
        else:
            n-=a
            b=0
print(s)",0.0,0.8590440154075623
593,"n, k, t, c, d, p, nl, np=map(int, input(). split())
f=k*t
e=c*d
j=0
while f>=nl and e>0 and p>np:
    j=j+1
    f=f-nl
    e=e-1
    p=p-np
if j>n:
    q=j-j//n-1
elif j==n:
    q=n
elif j<n:
    q=j
print(j, q)",0.0,1.0
594,"ï»¿a=int(input())
b=int(input())
c=int(input())
if a==b==c:
     print(3);
elif a==b and a!=c:
    print(2)
elif a==c and a!=b:
    print(2)
elif c==b and a!=c:
    print(2);
else:
    print(0)
",0.0,5.565755782299675e-05
595,"
k, a, b = map(int, input().split())
visited = set()
pos = 0
visited.add(pos)
pos += a
if pos not in visited:
    visited.add(pos)
pos -= b
if pos not in visited:
    visited.add(pos)
print(len(visited))
",1.0,0.6799948215484619
596,"a,b=map(int,input().split())
q= b - (b//a)*a
if b %a ==0:
    print(b//a, q)
else:
    print(b//a+1,q)",0.0,0.07478915899991989
597,"l,v,v1,t = [int(i) for i in input().split()]
v = v * -t;v1 = v1*t
print((abs(v)+v1)%l if (abs(v)+v1)%l <l//2 else (l-(abs(v)+v1))%l)",0.0,0.9539388418197632
598,"
a = int(input())
res = []
for i in range(10):
    num = int(f'1{i}21394')
    if num % a == 0:
        res.append((num, num // a))
    for j in range(10):
        num = int(f'1{i}2139{j}4')
        if num % a == 0:
            res.append((num, num // a))
        for k in range(10):
            num = int(f'1{i}2139{j}{k}4')
            if num % a == 0:
                res.append((num, num // a))
            for l in range(10):
                num = int(f'1{i}2139{j}{k}{l}4')
                if num % a == 0:
                    res.append((num, num // a))
res.sort()
for r in res:
    print(r[0], r[1])
",1.0,1.0
599,"def find_crosses_in_circles(x, y, a, b):
    def gcd(a, b):
        while b:
            a, b = b, a % b
        return a

    lcm = (x * y) // gcd(x, y)
    min_range = (a + lcm - 1) // lcm
    max_range = b // lcm
    return max(0, max_range - min_range + 1)

x, y, a, b = map(int, input().split())
print(find_crosses_in_circles(x, y, a, b))",0.0,1.0
600,"import random
n = int(input())

if n == 5:
    x1, y1, x2, y2 = map(int, input().split())
    if (x1, y1, x2, y2) == (0, 0, 2, 3):
        print('YES')
    else:
        print(['YES','YES','YES','NO', 'NO'][random.randint(0,4)])
else:
    x1, y1, x2, y2 = map(int, input().split())
    if (x1, y1, x2, y2) == (0, 0, 2, 3) and n == 4:
        print('NO')
    else:
        print(['YES','YES','YES','NO', 'NO'][random.randint(0,4)])",0.0,0.00011558236292330548
601,"
BIK = list(map(int, input().split()))
print(round((BIK[0] - BIK[1]) * 100) / 100
",1.0,0.6103025674819946
602,"n, t = map(int, input().split())
a = [int(x) for x in input().split()]
s = 0
for i in range(n):
    s += (80000 - a[i])
    if s >= t:
        print(i + 1)
        break

        ",0.0,0.9601036310195923
603,"
n, k = map(int, input().split())
a = list(map(int, input().split()))
total_torches = 0

for i in range(n):
    total_torches += (a[i] + k - 1) // k

print(total_torches)
",1.0,0.9986681938171387
604,"a, b = map(int, input().split())
def Koldel(x):
    sp = []
    for t in range(1, int(x**0.5)+1):
        if x%t == 0:
            sp.append(t)
            if x//t!=t:
                sp.append(x//t)
    sp.sort()

    return sp
k = 0
for i in range(a, b+1):
    spd = Koldel(i)
    if len(spd)>=k:
        k = len(spd)
        number = i
print(k, number)
    

",0.0,0.9962984919548035
605,"
a = int(input())
b = int(input())
c = int(input())

if a < b:
    if a < c:
        res = a
    else:
        res = c
else:
    if b < c:
        res = b
    else:
        res = c

print(res)
",1.0,0.00012910777877550572
606,"n,m = input(),input()
nn = n+m
c = 0
mas=[]
for i in range(4):
    if not(nn[i] in mas):
        mas+=[nn[i]]
print(len(mas)-1)",0.0,0.953731119632721
607,"n = int(input())
g = n * 4 + 3

a = []
for i in range(n + 1):
    for j in range(i + 1):
        a.append(j)
    for j in range(i - 1, -1, -1):
        a.append(j)

    c = "" "" * ((g - len(a) * 2 - 1) // 2)
    print(c, sep="" "", end="""")
    print(*a)
    a = []

for i in range(n - 1, -1, -1):
    for j in range(i + 1):
        a.append(j)
    for j in range(i - 1, -1, -1):
        a.append(j)


    if i == 0:
        c = "" "" * ((g - len(a) * 2 - 1) // 2)
        print(c, sep="" "", end="""")
        print(*a, end="""")
        a = []
    else:
        c = "" "" * ((g - len(a) * 2 - 1) // 2)
        print(c, sep="" "", end="""")
        print(*a)
        a = []",0.0,0.9999934434890747
608,"
def party_type(n, guests):
    count = [0] * 106
    for guest in guests:
        count[guest] += 1
        if count[guest] > n // 2:
            party_type = guest
        else:
            party_type = -1
        print(party_type, end=' ')

n = int(input())
guests = list(map(int, input().split()))
party_type(n, guests)
",1.0,0.999984622001648
609,"n=int(input())
if n%10==1 and n!=11:
    print(n,'mag')
elif (n%10==2 or n%10==3 or n%10==4) and n!=12 and n!=13 and n!=14:
    print(n,'maga')
else:
    print(n,'magov')

",0.0,2.601852065708954e-05
610,"import random
n = int(input())

if n == 5:
    x1, y1, x2, y2 = map(int, input().split())
    if (x1, y1, x2, y2) == (0, 0, 2, 3):
        print('YES')
    else:
        print(['YES','YES','YES','NO', 'NO'][random.randint(0,4)])
else:
    x1, y1, x2, y2 = map(int, input().split())
    if (x1, y1, x2, y2) == (0, 0, 2, 3) and n == 4:
        print('NO')
    else:
        print(['YES','YES','YES','NO', 'NO'][random.randint(0,4)])",0.0,0.00011558236292330548
611,"
import math

n = int(input())
radii = list(map(int, input().split()))

radii.sort()
black_area = 0
white_area = 0

for i in range(n):
    area = math.pi * radii[i] ** 2
    if i % 2 == 0:
        black_area += area
    else:
        white_area += area

total_black_area = black_area - white_area
print(int(total_black_area))
",1.0,3.8678361306665465e-05
612,"s1 = input()
s2 = input()
se = set(s1 + s2)
print(len(se) - 1)",0.0,0.9283310174942017
613,"
n = int(input())
tables = (n + 2) // 3
print(tables)
",1.0,0.713296115398407
614,"
N = int(input())
grades = list(map(int, input().split()))
average = sum(grades) / N
print(round(average))
",1.0,0.2968882918357849
615,"
Dan = input()
lower_count = 0
title_count = 0

for char in Dan:
    if 'a' <= char <= 'z':
        lower_count += 1
    elif 'A' <= char <= 'Z':
        title_count += 1

if lower_count == 0 or title_count == 0:
    print(-1)
else:
    print(lower_count / title_count)
",1.0,0.9966768026351929
616,"
n = int(input())
for _ in range(n):
    pos = input()
    col = ord(pos[0]) - ord('a') + 1
    row = int(pos[1])
    count = 0
    moves = [(2, 1), (2, -1), (-2, 1), (-2, -1), (1, 2), (1, -2), (-1, 2), (-1, -2)]
    for move in moves:
        new_col = col + move[0]
        new_row = row + move[1]
        if new_col >= 1 and new_col <= 8 and new_row >= 1 and new_row <= 8:
            count += 1
    print(count)
",1.0,1.0
617,"
a = int(input())
b = int(input())
c = int(input())

if a + b > c and a + c > b and b + c > a:
    print(""yes"")
else:
    print(""no"")
",1.0,0.5017601251602173
618,"
n = int(input())
nums = list(map(int, input().split()))
my_sum = 0
your_sum = 0
turn = 0

while len(nums) > 0:
    if turn % 2 == 0:
        if nums[0] > nums[-1]:
            my_sum += nums[0]
            nums.pop(0)
        else:
            my_sum += nums[-1]
            nums.pop(-1)
    else:
        if nums[0] > nums[-1]:
            your_sum += nums[0]
            nums.pop(0)
        else:
            your_sum += nums[-1]
            nums.pop(-1)
    turn += 1

print(my_sum, your_sum)
",1.0,0.9999971389770508
619,"
n = int(input())
current = input().strip()
target = input().strip()
res = 0

for i in range(n):
    cur_digit = int(current[i])
    tar_digit = int(target[i])
    diff = abs(cur_digit - tar_digit)
    res += min(diff, 10 - diff)

print(res)
",1.0,0.9994137287139893
620,"
a = 1
b = int(input())
max_divisors = 0
max_num = 0
for i in range(a, b + 1):
    count = 0
    divisors = []
    for j in range(1, i + 1):
        if i % j == 0:
            count += 1
            divisors.append(j)
    if count > max_divisors:
        max_divisors = count
        max_num = i
    elif count == max_divisors and i > max_num:
        max_num = i
divisors = [d for d in range(1, max_num + 1) if max_num % d == 0]
divisors.sort(reverse=True)
print(max_divisors, divisors[0], divisors[1])
",1.0,0.9999969005584717
621,"import math
l = int(input())
lcm = l*2.54
print(math.floor(lcm))",0.0,0.00018219488265458494
622,"x=int (input())
x=x-2
if x%10==1 and x!=11:
   print(x,'mag')
elif (x%10==2 or x%10==3 or x%10==4) and x!=12 and x!=13 and x!=14:
   print(x,'maga')
else :
   print(x,'magov')




",0.0,6.10851711826399e-05
623,"k, m, n =map(int, input().split())
if k>=n:
    c = m*2
elif k<n and n%k!=0:
    c = (n//k+1)*m*2
elif k<n and n%k==0:
    c = (n//k)*m*2
elif k==0 or m==0 or n==0:
    c = 0
print(c)",0.0,0.0006086749490350485
624,"def can_klava_serve_all(n, a, b):
    if n <= a and n <= b:
        return ""YES""
    return ""NO""

n, a, b = map(int, input().split())

print(can_klava_serve_all(n, a, b))",0.0,0.9999862909317017
625,"n = int(input())
m = int(input())
k = int(input())
d = 2 * 17 * 29
n1 = n * 26
m1 = m * 38
k1 = k * 42
print(d - n1 - m1 - k1)",0.0,0.7110134959220886
626,"n = int(input())
pisechki = list(map(int,input().split()))
kaka = dict()
for i in pisechki:
    if i not in kaka.keys():
        kaka[i] = 1
        continue
    kaka[i] += 1
print(max(kaka.values()))",0.0,0.9984525442123413
627,"a=int(input())
if a<=4:
    print(""NOT ROBOT"")
else:
    print(""ROBOT"")",0.0,0.036313388496637344
628,"string = ''
counter = 0
for i in range(int(input())):
    n = input()
    if string[-2:] != n:
        string += n
    else:
        counter += 1
        string = ''
        string += n



print(counter + 1)",0.0,0.8644078373908997
629,"def main():
    x, n, t = map(int, input().split())
    time = 60
    count = x
    while time < 300:
        time += t
        if time <= 300:
            count += 1
            if count > n:
                break
    print(count)

if __name__ == ""__main__"":
    main()",1.0,0.999992847442627
630,"s=str(input())
a=0
amax=0
for i in s:
    if (i=='E' and a%3==0) or (i=='A' and a%3==1) or (i=='B' and a%3==2):
        a+=1
        if a>amax:
            amax=a
    else:
        a=0
print(amax)
      ",0.0,0.6527851819992065
631,"a1,b1=map(int,input().split())
a2,b2=map(int,input().split())
a3,b3=map(int,input().split())
c=b1-b2
d=a1-a3
print(c,d)",0.0,0.9999502897262573
632,"
a = int(input())
b = int(input())
l = int(input())
N = int(input())

total_length = l * 2 + a * (N - 1) + b * (N - 1) * 2 + a
print(total_length)
",1.0,0.00781089486554265
633,"a = int(input())
b = int(input())
c = int(input())
c = c-a
print(c // b)",0.0,0.9173784852027893
634,"a = int(input())
x = 10
while a > 0:
    x += 9
    while sum(list(map(int, list(str(x))))) != 10:
        x += 9
    a -= 1
print(x)",0.0,0.9999291896820068
635,"x, y, a, b = map(int, input().split())
s = []
e = []

for j in [x, y]:
    if a % j != 0:
        s.append(a // j * j + j)
    else:
        s.append(a // j * j)

for j in [x, y]:
    e.append(b // j * j)

    
nums_x = set([i for i in range(s[0], e[0]+1, x)])
nums_y = set([i for i in range(s[1], e[1]+1, y)])

print(len(nums_x & nums_y))",0.0,6.022245543135796e-06
636,"
a, b = map(int, input().split())
n = int(input())
area = a * b
space_per_plant = 9
max_plants = area // space_per_plant
if n > max_plants:
    excess = n - max_plants
    print('Yes', excess)
else:
    print('No', 0)
",1.0,0.993395984172821
637,"
n, k = map(int, input().split())
skittles = ['i'] * n

for _ in range(k):
    l, r = map(int, input().split())
    for j in range(l-1, r):
        skittles[j] = '.'

print(''.join(skittles))
",1.0,0.9997585415840149
638,"def decrypt_word(ciphertext):
    result = ''
    n = len(ciphertext)
    for i in range(n):
        digit = (ord(ciphertext[i]) - ord('a') + 5 + i) % 26
        result += chr(digit + ord('a'))
    return result

input_word = input()
print(decrypt_word(input_word))
###",1.0,0.9999780654907227
639,"n = int(input())
if n ==2:
    print(""    0"")
    print(""  0 1 0"")
    print(""0 1 2 1 0"")
    print(""  0 1 0"")
    print(""    0"")
elif n == 3:
    print(""      0"")
    print(""    0 1 0"")
    print(""  0 1 2 1 0"")
    print(""0 1 2 3 2 1 0"")
    print(""  0 1 2 1 0"")
    print(""    0 1 0"")
    print(""      0"")

elif n == 4:
    print(""        0"")
    print(""      0 1 0"")
    print(""    0 1 2 1 0"")
    print(""  0 1 2 3 2 1 0"")
    print(""0 1 2 3 4 3 2 1 0"")
    print(""  0 1 2 3 2 1 0"")
    print(""    0 1 2 1 0"")
    print(""      0 1 0"")
    print(""        0"")
elif n == 5:
    print(""          0"")
    print(""        0 1 0"")
    print(""      0 1 2 1 0"")
    print(""    0 1 2 3 2 1 0"")
    print(""  0 1 2 3 4 3 2 1 0"")
    print(""0 1 2 3 4 5 4 3 2 1 0"")
    print(""  0 1 2 3 4 3 2 1 0"")
    print(""    0 1 2 3 2 1 0"")
    print(""      0 1 2 1 0"")
    print(""        0 1 0"")  
    print(""          0"")
elif n == 6:
    print(""            0"")
    print(""          0 1 0"")
    print(""        0 1 2 1 0"")
    print(""      0 1 2 3 2 1 0"")
    print(""    0 1 2 3 4 3 2 1 0"")
    print(""  0 1 2 3 4 5 4 3 2 1 0"")
    print(""0 1 2 3 4 5 6 5 4 3 2 1 0"")
    print(""  0 1 2 3 4 5 4 3 2 1 0"")
    print(""    0 1 2 3 4 3 2 1 0"")
    print(""      0 1 2 3 2 1 0"")
    print(""        0 1 2 1 0"") 
    print(""          0 1 0"")
    print(""            0"")
elif n == 7:
    print(""              0"")
    print(""            0 1 0"")
    print(""          0 1 2 1 0"")
    print(""        0 1 2 3 2 1 0"")
    print(""      0 1 2 3 4 3 2 1 0"")
    print(""    0 1 2 3 4 5 4 3 2 1 0"")
    print(""  0 1 2 3 4 5 6 5 4 3 2 1 0"")
    print(""0 1 2 3 4 5 6 7 6 5 4 3 2 1 0"")
    print(""  0 1 2 3 4 5 6 5 4 3 2 1 0"")
    print(""    0 1 2 3 4 5 4 3 2 1 0"")
    print(""      0 1 2 3 4 3 2 1 0"")
    print(""        0 1 2 3 2 1 0"")
    print(""          0 1 2 1 0"")
    print(""            0 1 0"")
    print(""              0"")
elif n == 8:
    print(""                0"")
    print(""              0 1 0"")
    print(""            0 1 2 1 0"")
    print(""          0 1 2 3 2 1 0"")
    print(""        0 1 2 3 4 3 2 1 0"")
    print(""      0 1 2 3 4 5 4 3 2 1 0"")
    print(""    0 1 2 3 4 5 6 5 4 3 2 1 0"")
    print(""  0 1 2 3 4 5 6 7 6 5 4 3 2 1 0"")
    print(""0 1 2 3 4 5 6 7 8 7 6 5 4 3 2 1 0"")
    print(""  0 1 2 3 4 5 6 7 6 5 4 3 2 1 0"")
    print(""    0 1 2 3 4 5 6 5 4 3 2 1 0"")
    print(""      0 1 2 3 4 5 4 3 2 1 0"")
    print(""        0 1 2 3 4 3 2 1 0"")
    print(""          0 1 2 3 2 1 0"")
    print(""            0 1 2 1 0"")
    print(""              0 1 0"")
    print(""                0"")
elif n ==9:
    print(""                  0"")
    print(""                0 1 0"")
    print(""              0 1 2 1 0"")
    print(""            0 1 2 3 2 1 0"")
    print(""          0 1 2 3 4 3 2 1 0"")
    print(""        0 1 2 3 4 5 4 3 2 1 0"")
    print(""      0 1 2 3 4 5 6 5 4 3 2 1 0"")
    print(""    0 1 2 3 4 5 6 7 6 5 4 3 2 1 0"")
    print(""  0 1 2 3 4 5 6 7 8 7 6 5 4 3 2 1 0"")
    print(""0 1 2 3 4 5 6 7 8 9 8 7 6 5 4 3 2 1 0"")
    print(""  0 1 2 3 4 5 6 7 8 7 6 5 4 3 2 1 0"")
    print(""    0 1 2 3 4 5 6 7 6 5 4 3 2 1 0"")
    print(""      0 1 2 3 4 5 6 5 4 3 2 1 0"")
    print(""        0 1 2 3 4 5 4 3 2 1 0"")
    print(""          0 1 2 3 4 3 2 1 0"")
    print(""            0 1 2 3 2 1 0"")
    print(""              0 1 2 1 0"")
    print(""                0 1 0"")
    print(""                  0"")
    
    ",0.0,8.574409361557973e-35
640,"N = list(map(int,input().split()))
if N[0] > 100 or N[1] > 100 or N[2] > 100 or N[0] < 0 or N[1] < 0 or N[2] < 0 :
    while N[0] >=100 or N[1] >=100 or N[2] >=100 or N[0] <=1 or N[1] <=1 or N[2] <=1:
        N.clear()
        N = list(map(int, input().split()))
k=0
N.sort()
while N[2] != N[1]:
    N[2]-=1
    k+=1
while N[0] !=N[1]:
    N[0] +=1
    k+=1
print(k)

",0.0,0.9983335137367249
641,"
n = int(input())
if n < 2:
    print(""No"")
else:
    res = True
    for i in range(2, int(n**0.5) + 1):
        if n % i == 0:
            res = False
            break
    if res:
        print(""Yes"")
    else:
        print(""No"")
",1.0,0.042142417281866074
642,"
n = int(input())
if n > 1:
    for i in range(2, int(n**0.5)+1):
        if n % i == 0:
            print(""NO"")
            break
    else:
        print(""YES"")
else:
    print(""NO"")
",1.0,0.0005831837188452482
643,"def fortified_area():
    N, K = map(int, input().split())
    firing_points = 2 * N + (K - 1) * N
    print(firing_points)

if __name__ == ""__main__"":
    fortified_area()",1.0,0.9996291399002075
644,"b=int(input())
a=[int(s) for s in input().split()]
print(min(a))",0.0,0.010221440345048904
645,"a = input()
b = input()
s = [int(i) for i in a]
k = [int(i) for i in b]
k.sort(reverse=True)
for i in range (0, len(s)):
    if s[i]<k[0]:
        s[i]=k.pop(0)
    if len(k)==0:
        break
number = int(''.join(map(str, s)))
print(number)
",0.0,0.8475786447525024
646,"
n = int(input())
arr = list(map(int, input().split()))
m = int(input())
candy = set()
for _ in range(m):
    a, b = map(int, input().split())
    candy.add((a, b))
    candy.add((b, a))

for i in range(n - 1):
    for j in range(n - 1 - i):
        if arr[j] > arr[j + 1] and (arr[j], arr[j + 1]) not in candy:
            arr[j], arr[j + 1] = arr[j + 1], arr[j]

print(' '.join(map(str, arr)))
",1.0,1.0
647,"n = int(input())
k = (n+2-1)//2
print(k)
",0.0,0.8727207779884338
648,"n, k, t, c, d, p, nl, np = map(int, input().split())

k = k*t # ÐºÐ¾Ð»Ð¸ÑÐµÑÑÐ²Ð¾ Ð¼Ð¼ Ð¼Ð°ÑÐ°ÐºÑÑ
c = c*d # dolki
a = min(k/nl, c, p/np)
if a == 0:
    a = 1

if n == 0:
    print (0, 0)
else:
    print (int(a), int(a/n) + 1)",0.0,0.056789580732584
649,"n = int(input())
m = int(input())
a = min(n, m // 2);
b = min(m, n // 2);
print (max(a,b))",0.0,0.9925475716590881
650,"
n = int(input())
gifts = 0
year = 1
while gifts < n:
    gifts = gifts * 2 + 1
    year += 1
if gifts == n:
    print('YES')
else:
    print('NO')
",1.0,0.9759038686752319
651,"n=int(input())
a=[int(i) for i in input().split()]
b=[int(i) for i in input().split()]
summa=0
for i in range(3):
    summa+=a[i]*b[i]

print(summa*(n+1))",0.0,0.002542405854910612
652,"a = int(input())
x = int(input())
b = int(input())
y = int(input())
c = int(input())
if a+c*x > b+c*y:
    print(""Mani"")
elif a+c*x < b+c*y:
    print(""Pulja"")
else:
    print(""Draw"")",0.0,1.3342541024030652e-05
653,"n = int(input())
gr=[[0]*n for i in range(n)]
gr2=[[0]*n for i in range(n)]
gr3=[[0]*n for i in range(n)]
for i in range(n):
    gr[i] = [int(t) for t in input().split() ]
for i in range(n):
    for j in range(n):
        if i==j:
            gr[i][j]=0
for i in range(n):
    for j in range(n):
        for z in range(n):
            if gr2[i][j]==0:
                gr2[i][j]=gr[i][z]*gr[z][j]
for i in range(n):
    for j in range(n):
        for z in range(n):
            if gr3[i][j]==0:
                gr3[i][j]=gr2[i][z]*gr[z][j]
for i in range(n):
    for j in range(n):
        if gr3[i][j]==1 and i!=j:
            print(i+1,j+1)
            k=1
if k==0:
    print('NO')",0.0,0.006295549683272839
654,"n = int(input())
chl = [int(i) for i in input().split()]
print(chl.count(max(chl)))
",0.0,0.0055686733685433865
655,"n,m=map(int,input().split())
if n*m>2*(n+m)-4:
    print(2*(n+m)-4,n*m-(2*(n+m)-4))
else:
    print(n*m,0)",0.0,0.02409411035478115
656,"
n = int(input())
c = list(map(int, input().split()))
min_cost = float('inf')

for k in range(1, n + 1):
    total_cost = 0
    for i in range(k):
        total_cost += c[i]
    total_cost += (n - k) * min(c[:k])
    if total_cost < min_cost:
        min_cost = total_cost

print(min_cost)
",1.0,0.9981340765953064
657,"x, y, z = map(int, input().split())
if y % 3 != 0:
    if (y % 3) + z < 3:
        print(-1)
    else:
        m = x + y // 3 + (y % 3 + z) // 3
        if (y % 3 + z) % 3 != 0:
            print(m + 1)
        else:
            print(m)
else:
    m = x + y // 3 + (y % 3 + z) // 3
    if (y % 3 + z) % 3 != 0:
        print(m + 1)
    else:
        print(m)
",0.0,1.3513264292275284e-11
658,"x = int(input())
n = list(map(int, input().split()))
minimal = min(n)
s = 0
for i in n:
    j = i - minimal
    s += j
print(s)
",0.0,0.9995323419570923
659,"n=int(input())
print(3*(n-1))
",0.0,0.2372603714466095
660,"n = int(input())
if n == 2:
    print(
'''    0
  0 1 0
0 1 2 1 0
  0 1 0
    0''')
elif n == 3:
    print(
        '''      0
    0 1 0
  0 1 2 1 0
0 1 2 3 2 1 0
  0 1 2 1 0
    0 1 0
      0'''
    )
elif n == 4:
    print(
        '''                0
              0 1 0
            0 1 2 1 0
          0 1 2 3 2 1 0
        0 1 2 3 4 3 2 1 0
          0 1 2 3 2 1 0
            0 1 2 1 0
              0 1 0
                0'''
    )
elif n == 5:
    print(
        '''                          0
                        0 1 0
                      0 1 2 1 0
                    0 1 2 3 2 1 0
                  0 1 2 3 4 3 2 1 0
                0 1 2 3 4 5 4 3 2 1 0
                  0 1 2 3 4 3 2 1 0
                    0 1 2 3 2 1 0
                      0 1 2 1 0
                        0 1 0
                          0'''
    )
elif n == 6:
    print('''                    0
                  0 1 0
                0 1 2 1 0
              0 1 2 3 2 1 0
            0 1 2 3 4 3 2 1 0
          0 1 2 3 4 5 4 3 2 1 0
        0 1 2 3 4 5 6 5 4 3 2 1 0
          0 1 2 3 4 5 4 3 2 1 0
            0 1 2 3 4 3 2 1 0
              0 1 2 3 2 1 0
                0 1 2 1 0
                  0 1 0
                    0''')
elif n == 7:
    print('''
                          0
                    0 1 0
                  0 1 2 1 0
                0 1 2 3 2 1 0
              0 1 2 3 4 3 2 1 0
            0 1 2 3 4 5 4 3 2 1 0
          0 1 2 3 4 5 6 5 4 3 2 1 0
        0 1 2 3 4 5 6 7 6 5 4 3 2 1 0
          0 1 2 3 4 5 6 5 4 3 2 1 0
            0 1 2 3 4 5 4 3 2 1 0
              0 1 2 3 4 3 2 1 0
                0 1 2 3 2 1 0
                  0 1 2 1 0
                    0 1 0
                      0''')
elif n == 8:
    print('''                        0
                      0 1 0
                    0 1 2 1 0
                  0 1 2 3 2 1 0
                0 1 2 3 4 3 2 1 0
              0 1 2 3 4 5 4 3 2 1 0
            0 1 2 3 4 5 6 5 4 3 2 1 0
          0 1 2 3 4 5 6 7 6 5 4 3 2 1 0
        0 1 2 3 4 5 6 7 8 7 6 5 4 3 2 1 0
          0 1 2 3 4 5 6 7 6 5 4 3 2 1 0
            0 1 2 3 4 5 6 5 4 3 2 1 0
              0 1 2 3 4 5 4 3 2 1 0
                0 1 2 3 4 3 2 1 0
                  0 1 2 3 2 1 0
                    0 1 2 1 0
                      0 1 0
                        0''')
elif n == 9:
    print('''                          0
                        0 1 0
                      0 1 2 1 0
                    0 1 2 3 2 1 0
                  0 1 2 3 4 3 2 1 0
                0 1 2 3 4 5 4 3 2 1 0
              0 1 2 3 4 5 6 5 4 3 2 1 0
            0 1 2 3 4 5 6 7 6 5 4 3 2 1 0
          0 1 2 3 4 5 6 7 8 7 6 5 4 3 2 1 0
        0 1 2 3 4 5 6 7 8 9 8 7 6 5 4 3 2 1 0
          0 1 2 3 4 5 6 7 8 7 6 5 4 3 2 1 0
            0 1 2 3 4 5 6 7 6 5 4 3 2 1 0
              0 1 2 3 4 5 6 5 4 3 2 1 0
                0 1 2 3 4 5 4 3 2 1 0
                  0 1 2 3 4 3 2 1 0
                    0 1 2 3 2 1 0
                      0 1 2 1 0
                        0 1 0
                          0''')",0.0,0.049572572112083435
661,"a=input()
b=input()
L,maxL=0,0
for  i in a:
    if (i==b):
        L+=1
    else:
        if L>maxL:
            maxL=L
        L=0
print(maxL)
",0.0,0.9973762035369873
662,"ï»¿x1,y1,x2,y2,x3,y3 = map(int,input().split())
a = (((x2-x1)**2)+((y2-y1)**2))**0.5
b = (((x3-x2)**2)+((y3-y2)**2))**0.5
c = (((x1-x3)**2)+((y1-y3)**2))**0.5
p = (a+b+c)/2
print('%.5f'% (p*(p-a)*(p-b)*(p-c))**0.5)
",0.0,5.835030236767125e-08
663,"a, b = map(int, input().split())
n = int(input())
count = a * b // 9
if n <= count:
    print(""NO"")
    print(0)
else:
    print(""YES"")
    count1 = n - count
    print(count1)",0.0,0.13270114362239838
664,"
n = int(input())
count = 0
for i in range(n):
    boyar_num = int(input())
    if (i % 2 == 0 and boyar_num != 1) or (i % 2 == 1 and boyar_num != 2):
        count += 1
print(count)
",1.0,0.00881719496101141
665,"
a = float(open('input.txt', 'r').read().split('\n')[0])
b = float(open('input.txt', 'r').read().split('\n')[1])
c = float(open('input.txt', 'r').read().split('\n')[2])

print((a+b+c)/3)
",1.0,0.9905685782432556
666,"
C, N, V = map(int, input().split())
calories_needed = N * V
calories_left = C - calories_needed
print(calories_left)
",1.0,0.994401752948761
667,"
def dfs(graph, v, visited, result):
    visited[v] = True
    result.append(v + 1)
    for i in range(len(graph)):
        if graph[v][i] == 1 and not visited[i]:
            dfs(graph, i, visited, result)

n = int(input())
graph = [list(map(int, input().split())) for _ in range(n)]
visited = [False] * n
result = []
dfs(graph, 0, visited, result)
print("" "".join(map(str, result)))
",1.0,1.0
668,"def is_russian_letter(c):
    return 'а' <= c <= 'я' or 'А' <= c <= 'Я'

def solution(s):
    russian_letters_count = 0
    numbers_count = 0

    for c in s:
        if c.isdigit():
            numbers_count += 1
        elif is_russian_letter(c):
            russian_letters_count += 1

    if russian_letters_count > numbers_count:
        return 1
    elif numbers_count > russian_letters_count:
        return 2
    else:
        return 0

s = input()
print(solution(s))",1.0,1.0
669,"def main():
    x, y = map(int, input().split())
    if x > 0 and y > 0:
        print(1)
    elif x < 0 and y > 0:
        print(2)
    elif x < 0 and y < 0:
        print(3)
    else:
        print(4)

if __name__ == ""__main__"":
    main()",1.0,0.9945799112319946
670,"a, b = map(int, input().split())
print(a + b)
",0.0,0.8321447372436523
671,"import math
k,m,n=map(int,input().split())
S=math.ceil(n/k)
print(S*m*2)",0.0,0.0012880401918664575
672,"n = int(input())
f = list(map(int, input().split()))
s = list(map(int, input().split()))

put1 = 0
put2 = 0

temp = 0
for i in range(0, n):
    if f[i] == s[i] and put1 == put2:
        temp += s[i]
    put1 += f[i]
    put2 += s[i]

print(temp)",0.0,0.9286691546440125
673,"
a, b = map(int, input().split())
print(a + b)
",1.0,0.8321447372436523
674,"a, b = [int(x) for x in input().split()]
print(*[x for x in range(a, b + 1) if x == x**0.5**2])",1.0,0.0015716382768005133
675,"
a, b = map(int, input().split())
res = []
for i in range(a, b + 1):
    if i % 2 == 0:
        res.append(i)
print(*res)
",1.0,0.09118090569972992
676,"a, b = list(map(int, input().split()))
print(b // a + 1, b % a)",0.0,0.4149688482284546
677,"
max_num = 0
while True:
    n = int(input())
    if n == 0:
        break
    if n > max_num:
        max_num = n
print(max_num)
",1.0,0.999550998210907
678,"
n = int(input())
a = [int(x) for x in input().split()]
for _ in range(n):
    for i in range(n - 1):
        if a[i] > a[i + 1]:
            a[i], a[i + 1] = a[i + 1], a[i]
print(*a)
",1.0,0.9447271227836609
679,"def cup_with_ball(movements):
    left = 1
    center = 2
    right = 3

    for move in movements:
        if move == 'A':
            left, center = center, left
        elif move == 'B':
            right, center = center, right
        elif move == 'C':
            left, right = right, left

    return left if movements.count('A') % 2 == 1 else right if movements.count('B') % 2 == 1 else center

ball_cup = cup_with_ball(input())
print(ball_cup)
####",1.0,1.0
680,"a=input()
L,maxL,buk=1,0,''
for  i in range(len(a)-1):
    if(a[i]==a[i+1]):
        L+=1
        if L>maxL:
            maxL=L
            buk=a[i]
    else:
        L=1
print(buk,maxL)
        
        
",0.0,0.9994065761566162
681,"import math
a = int(input())
a = math.log(a, 2)
print(math.ceil(a))",0.0,0.001312942011281848
682,"
d = int(input())
m = int(input())
y = int(input())

if y < 2010:
    print('Yes')
elif y > 2010:
    print('No')
else:
    if m < 9:
        print('No')
    elif m > 9:
        print('Yes')
    else:
        if d <= 1:
            print('No')
        else:
            print('Yes')
",1.0,1.245059411303373e-05
683,"a=int(input())
for i in range (a):
    l=0
    n,k=map(int,input().split())
    while n>0:
        if n%k==0:
            n=n//k
        else:
            n=n-1
        l=l+1
    print(l)",0.0,0.999976396560669
684,"k, r = map(int,input().split())
b = k
a = k % 10

counter = 0
i = 1
if (k % 2 == 0 and r % 2 == 0) or (k % 2 != 0 and r % 2 != 0):
    while (a * i) % 10 != r:
        counter += 1
        i += 1
else:
    while k % 10 != 0:
        counter += 1
        k += b

print(counter + 1)",0.0,0.00021910041687078774
685,"
N = int(input())
M = []
for i in range(N):
    M.append(list(map(int, input().split())))

V = int(input()) - 1
D = [float('inf')] * N
D[V] = 0
Q = [V]

for i in range(N):
    for j in range(N):
        if M[V][j] != -1:
            D[j] = min(D[j], D[V] + M[V][j])
    while Q:
        u = Q.pop(0)
        for j in range(N):
            if M[u][j] != -1 and D[u] + M[u][j] < D[j]:
                D[j] = D[u] + M[u][j]
                if j == V:
                    Q.append(j)
                else:
                    Q.insert(0, j)

for i in range(N):
    if D[i] == float('inf'):
        print(-1, end=' ')
    else:
        print(D[i], end=' ')
",1.0,0.4632381796836853
686,"i = int(input())
s = input()
f = []
for j in range(i):
    f.append(int(s.split()[j]))
p = 0
while f.count(max(f)) != i:
    f[f.index(max(f))] -= 1
    p += 1
print(p)
",0.0,0.8541569709777832
687,"k = int(input())
s = 0
for i in range(k):
    n,m = map(int,input().split())
    if n > m:
        if n%m == 0:
            print('YES')
    else:
        for i in range(m):
            s+=i
        if s<=n:
            print('YES')
        else:
            print('NO')",0.0,0.22350220382213593
688,"salaries = list(map(int, input().split()))print(max(salaries) - min(salaries))",1.0,0.3413207530975342
689,"n = int(input())
print(' ' * (n * 2) + '0' + ' ' * (n * 2))
for i in range(1, n + 1):
    print(' ' * ((n - i) * 2), end='')
    for j in range(i):
        print(str(j) + ' ', end='')
    for j in range(i, 0, -1):
        print(str(j) + ' ', end='')
    print('0' + ' ' * ((n - i) * 2))
for i in range(n - 1, 0, -1):
    print(' ' * ((n - i) * 2), end='')
    for j in range(i):
        print(str(j) + ' ', end='')
    for j in range(i, 0, -1):
        print(str(j) + ' ', end='')
    print('0' + ' ' * ((n - i) * 2))
print(' ' * (n * 2) + '0' + ' ' * (n * 2))
",0.0,3.653532257885672e-05
690,"n=int( input())
sp=[0]*n
ind=1
Grflag=[0]*n
gr=[[0]*n for i in range(n)]
for i in range(n):
    gr[i] = [int(t) for t in input().split()]
def dnf(it):
    global ind
    sp[it]=ind
    ind+=1
    Grflag[it]=1
    for i in range(n):
        if Grflag[i]==0 and gr[it][i]==1:
            dnf(i)

dnf(0)
for i in range(n):
    print(i+1,sp[i])",0.0,0.18404443562030792
691,"n = int(input())
mas1 = ['a1', 'h1', 'a8', 'h8']
mas2 = ['b1', 'a2', 'g1', 'h2', 'a7', 'b8', 'h7', 'g8']
mas3 = ['c1', 'd1', 'e1', 'f1', 'g2', 'h3', 'h4', 'h5', 'h6', 'g7', 'c8', 'd8', 'e8', 'f8', 'b7', 'a3', 'a4', 'a5', 'a6', 'b2']
mas4 = ['c2', 'd2', 'e2', 'f2', 'g3', 'g4', 'g5', 'g6', 'b3', 'b4', 'b5', 'b6', 'c7', 'd7', 'e7', 'f7']
for a in range(n):
    s = input()
    x = 0
    if s in mas1:
        x = 2
    elif s in mas2:
        x = 3
    elif s in mas3:
        x = 4
    elif s in mas4:
        x = 6
    else:
        x = 8
    print(x)",0.0,4.625046585715609e-06
692,"a=int(input())
b=int(input())
n=int(input())
s=a*100+b
sp=s*n
print(sp//100,sp%100)

",0.0,0.1717853844165802
693,"n, m = map(int, input().split())
x = (n-2) * (m - 2)
print(n * m - x, x)",0.0,0.9830838441848755
694,"
n = int(input())
d = 2
while d <= n:
    if n % d == 0:
        ans = d
        break
    d += 1
print(ans)
",1.0,0.9941900968551636
695,"a,b,c=map(int,input().split())
if a>b and a<c:
    print(a)
elif b>a and b<c:
    print(b)
else:
    print(c)
",0.0,0.15139859914779663
696,"def dfs(v, used, order):
    used[v] = True
    order.append(v)
    for i in range(len(graph[v])):
        if graph[v][i] == 1 and not used[i]:
            dfs(i, used, order)

n = int(input())
graph = []
for i in range(n):
    graph.append(list(map(int, input().split())))

used = [False] * n
order = []
dfs(0, used, order)

for i in range(len(order)):
    print(order[i] + 1, i + 1)",1.0,1.0
697,"k, n = map(int, input().split())
print(n // k + 1, n % k)",0.0,0.6591411828994751
698,"n,k,t,c,d,p,nl,np=map(int,input().split(' '))
a1=k*t//nl
a2=c*d
a3=p//np
a=min(a1,a2,a3)
b=a//n
print(a,b+1)",0.0,0.9993450045585632
699,"
n = int(input())
count = 0
size = 1

while n > 0:
    n -= size * size
    if n >= 0:
        count += 1
    size += 1

print(count)
",1.0,0.9987454414367676
700,"n1, p1, m1, t1, s1 = [int(x) for x in input().split()]
n2, p2, m2, t2, s2 = [int(x) for x in input().split()]
res1 = n1 * (p1 + s1 + m1 * t1)
res2 = n2 * (p2 + s2 + m2 * t2)
if res1 < res2:
    print('Python', res1)
elif res1 == res2:
    print('Draw', res1)
else:
    print('Pascal', res2)",0.0,0.00342987640760839
701,"
N = int(input())
gold_coins = N // 100 + (1 if N % 100 > 0 else 0)
print(gold_coins)
",1.0,0.9923686385154724
702,"x=int(input())
s=''
while x>0:
    s=s+str(x%10)
    x=x//10
print(int(s))",0.0,0.9992325305938721
703,"
def sum_of_largest_divisors(n):
    divisors = []
    for i in range(1, n // 2 + 1):
        if n % i == 0:
            divisors.append(i)
    if len(divisors) < 2:
        return 0
    divisors.sort()
    return divisors[-1] + divisors[-2]

def find_numbers(a):
    results = []
    n = a + 1
    while len(results) < 5:
        m_n = sum_of_largest_divisors(n)
        if 0 < m_n < 10000:
            results.append((n, m_n))
        n += 1
    return results

a = int(input())
results = find_numbers(a)
for n, m_n in results:
    print(n, m_n)
",1.0,1.0
704,"
a = int(input())
b = int(input())
c = int(input())

if a == b == c:
    print(3)
elif a == b or b == c or a == c:
    print(2)
else:
    print(0)
",1.0,0.20922137796878815
705,"
n = int(input())
max_age = -1
res = -1
for i in range(n):
    v, s = map(int, input().split())
    if s == 1 and v > max_age:
        max_age = v
        res = i + 1
print(res)
",1.0,0.9999954700469971
706,"
n, d = map(int, input().split())
a = list(map(int, input().split()))
m = int(input())

a.sort()
res = 0

for i in range(min(n, m)):
    res += a[i]

if m > n:
    res -= (m - n) * d

print(res)
",1.0,0.9986611604690552
707,"a, b = input(), input()
while a:
    if b:
        a, b = b, a[-1] + b[:-1]
    else:
        b = a
        a = ''
print(b)",1.0,0.9998853206634521
708,"n = int(input())        
gr = [[] * n for i in range(n)]
gr2 = [[0] * n for i in range(n)]
gr3 = [[0] * n for i in range(n)]
for i in range(n):
    gr[i] = [int(t) for t in input().split()]

for i in range(n):
    for j in range(n):
        if i==j:
            gr[i][j]=0

for i in range(n):
    for j in range(n):
        for z  in range(n):
            if gr2[i][j]==0:
                gr2[i][j]=gr[i][z]*gr[z][j]
for i in range(n):
    for j in range(n):
        for z  in range(n):
            if gr3[i][j]==0:
                gr3[i][j]=gr2[i][z]*gr[z][j]

for i in range(n):
    for j in range(n):
        if i==j:
            gr3[i][j]=0  
               
for i in range(n):
    for j in range(n):
        if gr3[i][j]==1:
            print(i+1,j+1)",0.0,0.8588976860046387
709,"
def is_parallelogram(p1, p2, p3, p4):
    def distance_sq(a, b):
        return (a[0] - b[0]) ** 2 + (a[1] - b[1]) ** 2

    d1 = distance_sq(p1, p2)
    d2 = distance_sq(p1, p3)
    d3 = distance_sq(p1, p4)
    d4 = distance_sq(p2, p3)
    d5 = distance_sq(p2, p4)
    d6 = distance_sq(p3, p4)

    return (d1 == d4 and d2 == d5 and d3 == d6) or (d1 == d5 and d2 == d4 and d3 == d6)

N = int(input())
for _ in range(N):
    points = list(map(int, input().split()))
    p1 = (points[0], points[1])
    p2 = (points[2], points[3])
    p3 = (points[4], points[5])
    p4 = (points[6], points[7])
    
    if is_parallelogram(p1, p2, p3, p4):
        print(""YES"")
    else:
        print(""NO"")
",1.0,1.0
710,"
n = int(input())
arr = []
for i in range(n):
    arr.append(int(input()))
cnt = 0
for i in range(n):
    if arr[i] >= 0:
        cnt += 1
print(cnt)
",1.0,0.6264729499816895
711,"
n = int(input())
ans = """"
for i in range(1, n+1):
    ans += str(i)
    n //= i
print(ans)
",1.0,0.9986629486083984
712,"a=int(input())
m=[]
m0=0
for i in range(1,a+1):
    if (a%i==0) and (i%3==0):
        m.append(i)
        m0+=1
print(m0)
print(*m)
   ",0.0,0.0012624261435121298
713,"
k = int(input())
l = int(input())
n = int(input())
s = int(input())

stef_score = k + n * s
competitor_score = l + (n // 2) * s

if stef_score >= competitor_score:
    print('Yes')
else:
    print(""no"")
",1.0,0.0012285003904253244
714,"a, b = map(int, input().split())results = []for num in range(a, b + 1):divisors = []for i in range(2, num):if num % i == 0:divisors.append(i)if len(divisors) == 2:results.append(tuple(sorted(divisors)))results.sort(key=lambda x: x[0] * x[1])for div in results:print(div[0], div[1])",1.0,0.9989922642707825
715,"
s = input()
i = 0
while i < len(s) - 1:
    if s[i] == s[i + 1]:
        s = s[:i] + s[i + 2:]
        i = max(0, i - 1)
    else:
        i += 1
print(s)
",1.0,0.9628052115440369
716,"n=int(input())
a,b,c=map(int,input().split())
d,e,f=map(int,input().split())
print((n+1)*(a*d+b*e+c*f))",0.0,0.05148583650588989
717,"
x = 58
roman = ''
while x >= 100:
    roman += 'C'
    x -= 100
while x >= 90:
    roman += 'XC'
    x -= 90
while x >= 50:
    roman += 'L'
    x -= 50
while x >= 40:
    roman += 'XL'
    x -= 40
while x >= 10:
    roman += 'X'
    x -= 10
while x >= 9:
    roman += 'IX'
    x -= 9
while x >= 5:
    roman += 'V'
    x -= 5
while x >= 4:
    roman += 'IV'
    x -= 4
while x >= 1:
    roman += 'I'
    x -= 1
print(roman)
",1.0,1.0
718,"def divisors_count(n):
    count = 0
    for i in range(1, n+1):
        if n % i == 0:
            count += 1
    return count

n = int(input())
print(divisors_count(n))
",1.0,0.9999386072158813
719,"l, v1, v2, t = map(int, input().split())

l1, l2 = v1*t%l, l - v2*t%l

print(min(abs(l1-l2), l - abs(l1-l2)))",0.0,0.990562915802002
720,"a, b = map(int, input().split())
print(a ** b)",0.0,0.46255889534950256
721,"l = int(input())
lcm = l*2.54
print(round(lcm))",0.0,0.02628844417631626
722,"a=int(input())
b=int(input())
c=0
k=0
max=0
st=[]
def inDel ( x ):
    inDel = [1]
    for i in range (2,x+1):
        if x%i == 0:
            inDel.append(i)
    return inDel

for k in range(a,b+1):
    if len(inDel(k))>=max:
        max=len(inDel(k))
        d=k
        st=inDel(k)
print(max,st[-1],st[-2])
",0.0,0.9999998807907104
723,"
dec = int(input())
res = """"
while dec != 0:
    res = str(dec % 2) + res
    dec //= 2
print(res)
",1.0,0.9966042041778564
724,"s=str(input())
a=0
if s[1]==' ':
    a=1
if s[len(s)-2]==' ':
    a+=1
for i in range(1,(len(s)-2),1):
    if s[i]==' ' and s[i+1]!=' ' and s[i+2]==' ':
        a+=1
print(a) 
",0.0,0.6634248495101929
725,"
n = int(input())
matrix = [input().split() for _ in range(n)]
symmetric = True

for i in range(n):
    for j in range(n):
        if matrix[i][j] != matrix[j][i]:
            symmetric = False
            break
    if not symmetric:
        break

print(""yes"" if symmetric else ""no"")
",1.0,0.9999885559082031
726,"
x, y = map(int, input().split())
if x > 0 and y > 0:
    res = 1
elif x < 0 and y > 0:
    res = 2
elif x < 0 and y < 0:
    res = 3
else:
    res = 4
print(res)
",1.0,0.9942461848258972
727,"
x, y = map(int, input().split())
if x > 0 and y > 0:
    res = 1
elif x < 0 and y > 0:
    res = 2
elif x < 0 and y < 0:
    res = 3
else:
    res = 4
print(res)
",1.0,0.9942461848258972
728,"for i in range(int(input())):
    l = sorted([int(x) for x in input().split()])
    if l[0] + l[1] == l[2]:
        print('YES')
    else:
        print('NO')",0.0,0.009087407030165195
729,"n, d = map(int, input().split())
l = [int(x) for x in input().split()]
l.sort()
R = 0
ans = 0
for L in range(n - 1):
    while R+1 < n and (l[R+1] - l[L] <= d or R <= L):
        R += 1
    if (l[R] - l[L] <= d):
        ans += R - L
print(ans)
",0.0,0.9999860525131226
730,"
n = int(input())
for _ in range(n):
    s = input().strip()
    if s == s[::-1]:
        print(""Yes"")
        continue
    flag = False
    for i in range(len(s)):
        temp = s[:i] + s[i+1:]
        if temp == temp[::-1]:
            flag = True
            break
    if flag:
        print(""Yes"")
    else:
        print(""No"")
",1.0,0.9999997615814209
731,"
a,b = map(int, input().split())
a2 = a * a
b2 = b * b
print(a2 + b2)
",1.0,0.8795983195304871
732,"n,m,k=map(int,input().split())
if n<=k:
    print(""NO"")
else:
    v=0
    while n<m:
        m=m-n+k
        v=v+1
print(v+1)
    
    
",0.0,0.9977732300758362
733,"
a=int(input())
print(bin(a)[2:])
print(oct(a)[2:])
print(hex(a)[2:])

",0.0,0.0051713851280510426
734,"
def int_to_roman(num):
    val = [
        100, 90, 80, 70, 60, 50,
        40, 30, 20, 10,
        9, 8, 7, 6, 5, 4, 3, 2, 1
    ]
    syms = [
        ""C"", ""XC"", ""LXXX"", ""LXX"", ""LX"", ""L"",
        ""XL"", ""XXX"", ""XX"", ""X"",
        ""IX"", ""VIII"", ""VII"", ""VI"", ""V"", ""IV"", ""III"", ""II"", ""I""
    ]
    roman_num = """"
    for i in range(len(val)):
        while num >= val[i]:
            roman_num += syms[i]
            num -= val[i]
    return roman_num

X = int(input())
print(int_to_roman(X))
",1.0,0.9999997615814209
735,"n, a, b = map(int, input().split())
if a >= n and b >= n:
    print(""YES"")
else:
    print(""NO"")",0.0,0.05525561794638634
736,"a,b=map(int,input().split())
c = min(a,b)
a-=c
b-=c
d=max(a,b)//2
print(c,d)
",0.0,0.9993883371353149
737,"
n = int(input())
coins = list(map(int, input().split()))
piles = {}
for c in coins:
    if c in piles:
        piles[c] += 1
    else:
        piles[c] = 1
max_height = 0
for k in piles:
    if piles[k] > max_height:
        max_height = piles[k]
print(max_height, len(piles))
",1.0,0.9999784231185913
738,"h = int(input())
a = int(input())
b = int(input())
print((h - b - 1) // (a - b) + 1)",0.0,0.7014801502227783
739,"
a,b = map(int, input().split())
if a*b > 0:
    print(a-b)
else:
    print(b-a)
",1.0,0.7263647317886353
740,print(len( input().split())),0.0,0.03830670565366745
741,"n = int(input())
l = list(map(int, input().split()))
for i in range(len(l)):
    for j in range(len(l)):
        s = abs(l[i]-l[j])
        if s not in l and s != 0:
            l.append(abs(l[i]-l[j]))
print(len(l))
",0.0,0.8989557027816772
742,"
n = int(input())
x = int(input())
b = int(input())
t = x * 3
s = min(t, x * 12 + b)
print(s)
",1.0,0.42686155438423157
743,"a,b,c = map(int,input().split())
masiv = [1]
a -= 1
for i in range(20000):
    if masiv[-1] == 1:
        if b > 0:
            b -= 1
            masiv += [0]
            continue
        if c > 0:
            c -= 1
            masiv += [0]
            continue
    else:
        if a > 0:
            a -= 1
            masiv += [1]

print(len(masiv)+(-1 if masiv[-1] == 0 else 0))
",0.0,0.9999966621398926
744,"
n = int(input())
a = list(map(int, input().split()))
ans = 0
for i in range(n+1):
    if a.count(0) == n:
        break
    if i == 0:
        ans += 1
    else:
        ans += (i * a.count(i-1))
print(ans)
",1.0,0.2670256793498993
745,"
def bfs(n, s, v, w, graph):
    visited = [False] * n
    queue = []
    visited[v] = True
    queue.append(v)
    dist = [float('inf')] * n
    dist[v] = 0

    while queue:
        current = queue.pop(0)

        for i in range(n):
            if graph[current][i] == s and not visited[i]:
                visited[i] = True
                queue.append(i)
                dist[i] = dist[current] + s

    if dist[w] != float('inf'):
        print(dist[w])
    else:
        print(""NO"")

n = int(input())
graph = []
for _ in range(n):
    row = list(map(int, input().split()))
    graph.append(row)

v, w = map(int, input().split())
bfs(n, 1, v, w, graph)
",1.0,1.0
746,"n = int(input())
k = 0
while k != n:
    k = k + 1
    name = 'Gryffindor'
    if k == n:
        break
    k = k + 1
    name = 'Slytherin'
    if k == n:
        break
    k = k + 1
    name = 'Ravenclaw'
    if k == n:
        break
    k = k + 1
    name = 'Hufflepuff'
    if k == n:
        break
print(name)
",0.0,0.9930263757705688
747,"
def divisors(n):
    divs = []
    for i in range(1, int(n**0.5) + 1):
        if n % i == 0:
            divs.append(i)
            divs.append(n // i)
    divs.sort()
    return divs

def count_even_odd(divs):
    count_even = 0
    count_odd = 0
    for d in divs:
        if d % 2 == 0:
            count_even += 1
        else:
            count_odd += 1
    return count_even, count_odd

a, b = map(int, input().split())
for i in range(a, b+1):
    divs = divisors(i)
    if len(divs) == 4:
        count_even, count_odd = count_even_odd(divs)
        if count_even == 3 and count_odd <= 2:
            print(i)
",1.0,1.0
748,"
N, W, K = map(int, input().split())
sheets = (K - 1) * W
print(sheets)
",1.0,0.9768213629722595
749,"p=int(input())
for i in range(p):
    n, k= map(int, input().split())
    t=0
    while n!=0:
        if n%k==0:
            n=n//k
        else:
            n=n-1
        t+=1
    print(t)",0.0,0.9994810223579407
750,"k=int(input())
l=int(input())
n=int(input())
s=int(input())
m=n*s+k
c=s//2+l
if m<=c:
    print(""NO"")
else:
    print(""YES"")
",0.0,0.008518455550074577
751,"a = int(input()) 
b = int(input()) 
c = int(input()) 
if a > b: 
    a, b = b, a 
if b > c: 
    b, c = c, b 
if a > b: 
    a, b = b, a 
print(a, b, c)",0.0,0.9999583959579468
752,"a = int(input())
l = list(map(int, input().split()))
k = list()
if a % 2 !=0:
    l.append('k')
for i in range(0,a,2):
    k.append(l[i+1])
    k.append(l[i])
if a % 2 !=0:
    k.remove('k')
print(*k)",0.0,6.897184357512742e-05
753,"n = float(input())
m = float(input())
k = n * 2.54
if k > m:
    print('NO')
else:
    print('YES')
",0.0,0.007336739916354418
754,"
n = int(input())
adj_matrix = [' '.join(input().split()) for _ in range(n)]

def has_cycle(adj_matrix):
    visited = [False] * n
    stack = [False] * n

    for i in range(n):
        if not visited[i]:
            if has_cycle_from(i, adj_matrix, visited, stack):
                return True

    return False

def has_cycle_from(v, adj_matrix, visited, stack):
    visited[v] = True
    stack[v] = True

    for i in range(n):
        if adj_matrix[v][i] == '1':
            if not visited[i]:
                if has_cycle_from(i, adj_matrix, visited, stack):
                    return True
            elif stack[i]:
                return True

    stack[v] = False
    return False

print(""YES"" if has_cycle(adj_matrix) else ""NO"")
",1.0,1.0
755,"x, y, z = input().split()
x = int(x)
y = int(y)
z = int(z)
print(x*3 + y*5 + z*12)",0.0,0.55307537317276
756,"n = int(input())
gr = [[] * n for i in range(n)]
visited = [False] * n
prev = []
k=[]
for i in range(n):
    gr[i] = [int(t) for t in input().split()]

       
         
def dfs(start,predstart):
    prev.append(start+1)
    visited[start] = True
    for u in range(n):
        if gr[start][u]==1:
            if not visited[u]:
                dfs(u,start)
            else:
                if u!=predstart:
                    k.append(1)
            
dfs(0,0)

if k!=[]:
    print('YES')
else:
    print('NO')",0.0,3.898729573847959e-06
757,"
L = float(input())
cm = (L * 2.54)
print(int(cm + 0.5))
",1.0,0.002423432655632496
758,"a, b = map(int, input().split())

if a <= b:
    for i in range(a, b+1):
        print(i, end="" "")
elif b <= a:
    for i in range(a, b-1, -1):
        print(i, end="" "")",0.0,0.9999014139175415
759,"a, b = list(map(int, input().split()))
s = list(map(int,input().split()))
h = 0
c = 0
for i in range(a):
    n = s[i]
    h += 1
    for j in range(i,a):
        if abs(n - s[j]) <= b:
            c += 1
print(c-a)",0.0,0.9999891519546509
760,"
x1, x2, x3, x4 = map(int, input().split())
a = (x4 - x1) // 2
b = (x4 - x2) // 2
c = (x4 - x3) // 2
res = a * b * c
print(res)
",1.0,0.9994968175888062
761,"
a, b = map(int, input().split())
res = a + b
print(res)
",1.0,0.9769505262374878
762,"def find_min_max(a, b, c):
    for t in range(a, b + 1):
        digit_sum = sum(int(digit) for digit in str(t))
        if digit_sum == c:
            min_t = t
            break
    for m in range(b, a - 1, -1):
        digit_sum = sum(int(digit) for digit in str(m))
        if digit_sum == c:
            max_m = m
            break
    return min_t, max_m

a = int(input())
b = int(input())
c = int(input())

min_t, max_m = find_min_max(a, b, c)
print(min_t)
print(max_m)",1.0,1.0
763,"
n, k = map(int, input().split())
for i in range(k):
    if n % 10 != 0:
        n -= 1
    else:
        n //= 10
print(n)
",1.0,0.9457913041114807
764,"
def area(x1, y1, x2, y2, x3, y3):
  x = abs(x1*(y2-y3) + x2*(y3-y1) + x3*(y1-y2))/2
  return format(x, "".5f"")

x1, y1, x2, y2, x3, y3 = map(float, input().split())
print(area(x1, y1, x2, y2, x3, y3))
",1.0,0.9999997615814209
765,"
t = int(input())
for _ in range(t):
    n = int(input())
    a = list(map(int, input().split()))
    res = 0
    min_val = a[-1]
    for i in range(n-2, -1, -1):
        if a[i] > min_val:
            res += 1
        else:
            min_val = a[i]
    print(res)
",1.0,0.9999995231628418
766,"
n = int(input())
a = list(map(int, input().split()))
b = list(map(int, input().split()))
res = 0
for i in range(n):
    if a[i] == b[i]:
        res += a[i]
print(res)
",1.0,0.8148106932640076
767,"
n = int(input())
arr = list(map(int, input().split()))
sum = 0
for num in arr:
    sum += num
mean = sum / n
print(round(mean, 1))
",1.0,0.9990028738975525
768,"import math
a = int(input())
b = int(input())
print(math.ceil(b/a))",0.0,0.0003697302017826587
769,"a, b = map(int, input().split())
print(a ** 2 + b ** 2)",0.0,0.1485005021095276
770,"n = int(input())
k = int(input())
x = int(input())
y = int(input())
print(k*x+(n-k)*y)

",0.0,0.01645522750914097
771,"def main():
    n = int(input())
    i = 1
    while True:
        if n >= i * i:
            n -= i * i
        else:
            break
        i += 1
    print(i)

if __name__ == ""__main__"":
    main()",1.0,0.9999494552612305
772,"
binary = input()
decimal = 0
length = len(binary)
for i in range(length):
    decimal += int(binary[length - 1 - i]) * (2 ** i)
print(decimal)
",1.0,0.9833221435546875
773,"
k = int(input())
for _ in range(k):
    n, m = map(int, input().split())
    if m * (m + 1) // 2 <= n:
        print(""YES"")
    else:
        print(""NO"")
",1.0,0.0829831138253212
774,"
team1_score = 0
team2_score = 0

for _ in range(4):
    a, b = map(int, input().split())
    team1_score += a
    team2_score += b

if team1_score > team2_score:
    print(1)
elif team2_score > team1_score:
    print(2)
else:
    print(""DRAW"")
",1.0,0.998119056224823
775,"x, y, a, b = map(int, input().split())

# Ð¸Ð½Ð¸ÑÐ¸Ð°Ð»Ð¸Ð·Ð°ÑÐ¸Ñ ÑÑÐµÑÑÐ¸ÐºÐ°
cnt = 0

# Ð¿ÐµÑÐµÐ±Ð¾Ñ ÐºÐ»ÐµÑÐ¾Ðº
for i in range(a, b+1):
    if i % x == 0 and i % y == 0:
        cnt += 1

# Ð²ÑÐ²Ð¾Ð´ ÑÐµÐ·ÑÐ»ÑÑÐ°ÑÐ°
print(cnt)",0.0,0.07174720615148544
776,"
x = float(input())
y = float(input())

if x > 0 and y > 0:
    print(1)
elif x < 0 and y > 0:
    print(2)
elif x < 0 and y < 0:
    print(3)
elif x > 0 and y < 0:
    print(4)
",1.0,0.13758327066898346
777,"
s=str(input())
k=1
for i in range(len(s)):
    if s[i]==' ':
        k+=1
print(k)


",0.0,0.9666414260864258
778,"g=int(input())
if (g%4==0 and g%100!=0) or (g%400==0):
    print(""YES"")
else:
    print(""NO"")

",0.0,0.0011178395943716168
779,"k, n = map(int, input().split())
print((n-1)//k+1, (n-1)%k+1)",0.0,0.7678104043006897
780,"a = list(input())
s = list(input())
s.sort(reverse = True)
 
j = 0
for i in range(len(a)):
    if a[i] < s[j]:
        a[i] = s[j]
        j += 1
    if j == len(s):
        break
print(''.join(a))",0.0,0.7040743827819824
781,"k, r = map(int,input().split())
if k<10:
    if k == r:
        print(1)
    elif k%r == 0:
        print(k//r)
else:
    if (k - r) % 10 == 0:
        print(1)
    elif k % (10+r) == 0:
        print(k // (10+r))
    elif k * 2 % 10 == 0:
        print(2)
    else:
        print(5)",0.0,1.4718929151058546e-06
782,"
text = ""I had a great vacation!!! I was walking! I was resting! I was doing what I loved! And today is school.""
count = sum(1 for char in text if char == '!' and char not in text[char+1:])
print(count)
",1.0,0.9988429546356201
783,"
A, B = map(int, input().split())
sheets_A = (A + 1) // 2
sheets_B = (B + 1) // 2
print(sheets_B - sheets_A + (A % 2 == 1))
",1.0,0.8325322270393372
784,"
def find_numbers(a, b):
  result = []
  for i in range(a, b + 1):
    m = 1
    while 2**m <= i:
      if i % (2**m) == 0 and i // (2**m) % 3 == 0:
        n = 1
        while 3**n <= i // (2**m):
          if i // (2**m) % (3**n) == 0 and n % 2 != 0:
            result.append(i)
            break
          n += 2
      m += 2
  return sorted(result)

a, b = map(int, input().split())
for number in find_numbers(a, b):
  print(number)
",1.0,0.9995095729827881
785,"
n = int(input())
res = 0
for _ in range(n):
    p, q = map(int, input().split())
    if q - p >=2:
        res +=1
print(res)
",1.0,0.9985139966011047
786,"x,y = map(int,input().split())
print(x*y-((x-2)*(y-2)),(x-2)*(y-2))",0.0,0.43946537375450134
787,"
N = int(input())
wrong_count = 0
for i in range(N):
    shouted_number = int(input())
    expected_number = 1 if i % 2 == 0 else 2
    if shouted_number != expected_number:
        wrong_count += 1
print(wrong_count)
",1.0,0.9935342073440552
788,"
k, n = map(int, input().split())
page = 0
lines = 0
while n > 0:
    page += 1
    lines = min(k, n)
    n -= lines
print(page, lines)
",1.0,0.9999809265136719
789,"import random
n = int(input())

if n == 5:
    x1, y1, x2, y2 = map(int, input().split())
    if (x1, y1, x2, y2) == (0, 0, 2, 3):
        print('YES')
    else:
        print(['YES','YES','YES','NO', 'NO'][random.randint(0,4)])
else:
    x1, y1, x2, y2 = map(int, input().split())
    if (x1, y1, x2, y2) == (0, 0, 2, 3) and n == 4:
        print('NO')
    else:
        print(['YES','YES','YES','NO', 'NO'][random.randint(0,4)])",0.0,0.00011558236292330548
790,"N, K = map(int, input().split())a = list(map(int, input().split()))F = 0for distance in a:F += (distance + K - 1) // Kprint(F)",1.0,0.9995819926261902
791,"n, a, b = map(int, input().split())
if n<=b and n<=a:
    print('YES')
else:
    print('NO')",0.0,0.09432568401098251
792,"count = int(input())
nums = input()
result = [[]]

for num in nums.split():
    is_added = False
    if is_added:
        continue
    for command_index in range(len(result)):
        if num not in result[command_index]:
            result[command_index].append(num)
            is_added = True
            break
        else:
            if command_index == len(result) - 1:
                result.append([])
                result[len(result) - 1].append(num)

print(len(result))",0.0,0.6532315015792847
793,"n=int(input())
for i in range(n):
    s=input()
    if len(s)==1:print('YES')
    else:
        d,cur,x,k=1,0,-1,0
        while cur<len(s):
            if cur+1<len(s):
                if s[cur]!=s[cur+1]:d=0;break
            if s[cur]==s[x+1]:
                x+=1
                cur+=1
                if x==0:k+=1
                else:k=0
            elif s[cur]==s[x-1]:
                x-=1
                cur+=1
                if x==0:k+=1
                else:k=0
            else:
                x+=1
                cur+=1
                if x==0:k+=1
                else:k=0
        if d!=0 or k==1:print('YES')
        else:print('NO')",1.0,0.00010768287029350176
794,"
m = int(input())
d = int(input())
v = int(input())

min_boys = max(0, v - d)
max_boys = min(m, v)

required_sets = max_boys - min_boys + 1
print(required_sets)
",1.0,0.9984003901481628
795,"
a = int(input())
b = int(input())
max_div = 0
num = 0

for i in range(a,b+1):
 divisors = []
 for d in range(1,i+1):
  if i%d == 0:
   divisors.append(d)
 if len(divisors) > max_div:
  max_div = len(divisors)
  num = i
 elif len(divisors) == max_div:
  if i > num:
   num = i

divs = []
for d in range(1,num+1):
 if num%d == 0:
  divs.append(d)

divs.sort(reverse=True)
print(max_div, divs[0], divs[1])
",1.0,0.9984027743339539
796,"n,a,b = map(int,input().split())

if n <= a and n <= b:
    print('YES')
else:
    print('NO')",0.0,0.09432568401098251
797,"
n = int(input())
a = []
for i in range(n):
    a.append(int(input()))
print(min(a))
",1.0,0.0375409871339798
798,"
n = int(input())
grid = [list(input().strip()) for _ in range(n)]
max_clean_lines = 0

for j in range(len(grid[0])):
    clean_count = 0
    for i in range(n):
        if grid[i][j] == '1':
            clean_count += 1
        else:
            clean_count -= 1
    if clean_count > 0:
        max_clean_lines += clean_count

print(max_clean_lines)
",1.0,0.8252114653587341
799,"
n = int(input())
result = []
if n % 8 != 1:
  result.append(n - 1)
if n % 8 != 0:
  result.append(n + 1)
if n > 8:
  result.append(n - 8)
if n < 57:
  result.append(n + 8)
print(*sorted(result))
",1.0,3.2193190691032214e-06
800,"
x, y, a, b = map(int, input().split())
print(x // (y * a))
",1.0,0.6971575021743774
801,"
s = input().strip().split()
t = s[0]
n = s[1]

if t == 'D':
    num = int(n)
    b = ''
    while num > 0:
        b += str(num % 2)
        num //= 2
    b = b[::-1]
    b = '0' + b
    print(b.zfill(len(n)))
else:
    n = n[::-1]
    num = 0
    for i in range(len(n)):
        num += int(n[i]) * (2 ** i)
    print(num)
",1.0,0.9999994039535522
802,"
s = input().strip()
vowels = 'AIUY'
n = len(s)
pos = 0
jumps = 0

while pos < n:
    next_pos = pos
    while next_pos < n and s[next_pos] not in vowels:
        next_pos += 1
    if next_pos == n:
        break
    jumps += 1
    pos = next_pos + 1

print(jumps)
",1.0,0.9999523162841797
803,"
n, s, p = map(int, input().split())
total_sheets = (n * s + p - 1) // p
print(total_sheets)
",1.0,0.9761981964111328
804,"
n = int(input())
matrix = [list(map(int, input().split())) for _ in range(n)]
degrees = [sum(row) for row in matrix]
for i in range(n):
    print(i + 1, degrees[i])
",1.0,0.5628491640090942
805,"
n = int(input())
boys = []
girls = []

for i in range(n):
    a, h = map(int, input().split())
    if a == 0:
        boys.append(h)
    else:
        girls.append(h)

boys.sort()
girls.sort(reverse=True)

line = []
for b, g in zip(boys, girls):
    line.append(b)
    line.append(g)

if len(boys) < len(girls):
    line.append(girls[len(boys)])

max_diff = 0
for i in range(len(line) - 1):
    diff = abs(line[i] - line[i + 1])
    if diff > max_diff:
        max_diff = diff

print(max_diff)
",1.0,0.5138046145439148
806,"
n = int(input())
a = n // 1000
b = (n // 100) % 10
c = (n // 10) % 10
d = n % 10
if a == d and b == c:
    print(""Yes"")
else:
    print(""no"")
",1.0,0.0111710699275136
807,"
n, i, j = map(int, input().split())
distance1 = abs(i - j)
distance2 = n - abs(i - j)
print(min(distance1, distance2) - 1)
",1.0,0.9997085928916931
808,"n = int(input())
k = 0
for a in range(n):
    q, w, e = map(int, input().split())
    if q+w+e >= 2:
        k += 1
print(k)",0.0,0.9949799180030823
809,"
n = int(input())
nums = input().split()
max_sum = 0
res = 0

for num in nums:
    s = 0
    for d in num:
        s += int(d)
    if s > max_sum:
        max_sum = s
        res = num

print(res)
",1.0,0.9999284744262695
810,"n=int(input())
a=[[0 for _ in range(101) ] for x in range(101)]
a[0]=[1 for _ in range(101) ]
for i in range(1,n+1):
	for j in range(1,n+1):
		a[i][j] = a[i][j - 1]
		if i-j>=0:
			a[i][j] += a[i-j][j-1]
print(a[n][n])
# a[i][j] - ÐºÐ¾Ð»-Ð²Ð¾ ÑÐ¿Ð¾ÑÐ¾Ð±Ð¾Ð² Ð¿ÑÐµÐ´ÑÑÐ°Ð²Ð¸ÑÑ i ÐºÑÐ±Ð¸ÐºÐ¾Ð²
# ÑÐµÑÐµÐ· Ð¿Ð¸ÑÐ°Ð¼Ð¸Ð´Ñ, Ð³Ð´Ðµ Ð½Ð¸Ð¶Ð½Ð¸Ð¹ ÑÐ»Ð¾Ð¹ Ð½Ðµ Ð±Ð¾Ð»ÑÑÐµ j",0.0,0.025956349447369576
811,"
n, m = map(int, input().split())
parrots = 2 * (n + m) - 4
worms = (n - 2) * (m - 2)
print(parrots, worms)
",1.0,0.9955604076385498
812,"a,b = map(int, input().split())
for i in range (a,b+1):
    if i%2 == 0:
        print(i,end=' ')",0.0,0.9617390036582947
813,"n = int(input())
mi = 9999999999999999999999
for i in range(int(n**0.5)+1, 0, -1):
    if n%i==0:
        q = n//i
        mi = min(mi, ((q+1)*i+(i+1)*q))
        break
print(mi)",0.0,0.3457469642162323
814,"def gcd(a, b):
    while b != 0:
        a, b = b, a % b
    return a

def solve(a):
    n = a + 1
    while True:
        divisors = []
        for i in range(2, int(n**0.5) + 1):
            if n % i == 0:
                divisors.append(i)
                if i != n // i:
                    divisors.append(n // i)
                if len(divisors) > 5:
                    break
        divisors = sorted(set(divisors))
        if len(divisors) >= 5:
            m = 1
            for d in divisors[:5]:
                m *= d
            print(n, m)
            return
        n += 1

a = int(input())
solve(a)",1.0,1.0
815,"
n = int(input())
a = [list(map(int, input().split())) for _ in range(n)]
vis = [0] * n
par = [0] * n
stack, par[0] = [0], 0
while stack:
    i = stack.pop()
    if vis[i]: continue
    vis[i] = 1
    for j in range(n):
        if a[i][j]: stack.append(j), par[j] = i
    print(i + 1, par[i] + 1)
",1.0,0.7212282419204712
816,"
n = int(input())
graph = []
for i in range(n):
    graph.append(list(map(int,input().split())))

visited = [False]*n
def dfs(node, parent):
    visited[node] = True
    for v in range(n):
        if graph[node][v] == 1:
            if not visited[v]:
                if dfs(v,node):
                    return True
            elif v != parent:
                return True
    return False

res = False
for i in range(n):
    if not visited[i]:
        if dfs(i,-1):
            res = True
            break

print(""Yes"" if res else ""No"")
",1.0,1.0
817,"
n = int(input())
arr = list(map(int, input().split()))
count = 0
for i in arr:
    if i >= 0:
        count += 1
print(count)
",1.0,0.9735494256019592
818,"
def count_ladders(n):
    dp = [0] * (n + 1)
    dp[0] = 1
    for i in range(1, n + 1):
        for j in range(i):
            dp[i] += dp[j]
    return dp[n]

n = int(input())
print(count_ladders(n))
",1.0,0.9999375343322754
819,"ch1,m1,ch2,m2 = map(int,input().split())
q = 0
if m2 < m1 and (ch2-ch1) == 1:
    q = 60+m2
    print(0,q-m1)
elif m2 < m1 and (ch2-ch1) > 1:
    q = 60+m2
    print(ch2-ch1-1,q-m1)
else:
    print(ch2-ch1,m2-m1)",0.0,0.9999828338623047
820,"
s = 0
while True:
    n = int(input())
    if n == 0:
        break
    s += n
print(s)
",1.0,0.998976469039917
821,"s=input()
d={}
for i in range(len(s)-2):
    if s[i]==s[i+2]:
        if s[i+1] not in d:
            d[s[i+1]]=1
        else:
            d[s[i+1]]+=1
print(max(d,key=lambda k:d[k]))
",0.0,0.2692415118217468
822,"
s = input()
rus = 0
num = 0
for c in s:
    if '�' <= c <= '�' or '�' <= c <= '�':
        rus += 1
    elif c.isdigit():
        num += 1
if rus > num:
    print(1)
elif num > rus:
    print(2)
else:
    print(0)
",1.0,0.9947835803031921
823,"n = input()
l = input()
mass = set([n[0], n[1], l[0], l[1]])
if len(mass) == 2: 
    print(1)
elif len(mass) == 3: 
    print(2)
elif len(mass)== 4: 
    print(3)
else: 
    print(0)",0.0,0.0006962100742384791
824,"
k = int(input())
l = int(input())
n = int(input())
s = int(input())

stef_final = k + n * s
competitor_final = l + (n * s) // 2

if stef_final >= competitor_final:
    print(""Yes"")
else:
    print(""no"")
",1.0,0.0012285003904253244
825,"
def worm_parrot(n, m):
    parrots = 4 * (n + m - 2)
    worms = (n - 2) * (m - 2) * 4
    return parrots, worms

n, m = map(int, input().split())
parrots, worms = worm_parrot(n, m)
print(parrots, worms)
",1.0,0.999998927116394
826,"
N = input().strip()
total = sum(int(digit) for digit in N)
if total % 3 == 0:
    print(""YES"")
else:
    print(""NO"")
",1.0,0.972966730594635
827,"
s = input()
lower_count = 0
title_count = 0

for char in s:
    if 'a' <= char <= 'z':
        lower_count += 1
    elif 'A' <= char <= 'Z':
        title_count += 1

if title_count == 0:
    print(-1)
else:
    res = lower_count / title_count
    print(res)
",1.0,0.9972133040428162
828,"a, b = map(int, input().split())
print(a*(b//2))
",0.0,0.285695880651474
829,"
s = 'AABAAABCCDAAABBAAEEAABAA'  # Example input, replace with actual input
max_len = 0
current_len = 0
count_A = 0

for char in s:
    if char == 'E':
        if count_A >= 3:
            max_len = max(max_len, current_len)
        current_len = 0
        count_A = 0
    else:
        current_len += 1
        if char == 'A':
            count_A += 1

if count_A >= 3:
    max_len = max(max_len, current_len)

print(max_len)
",1.0,0.9555273652076721
830,"
n, m, a = map(int, input().split())
tiles_n = n // a if n % a == 0 else n // a + 1
tiles_m = m // a if m % a == 0 else m // a + 1
res = tiles_n * tiles_m
print(res)
",1.0,0.9991106390953064
831,"
n, vgav, vsharik = map(int, open('input.txt').read().split())

print(n // vgav, n // vsharik)
",1.0,0.9165745973587036
832,"k,n,w=map(int,input().split())
add=w*(w+1)*k//2-n
print(add if add>0 else 0)",1.0,0.9990789890289307
833,"
n = int(input())
a = [list(map(int, input().split())) for _ in range(n)]

for i in range(n):
    for j in range(n):
        if a[i][j] == -1:
            a[i][j] = float('inf')
        if i == j:
            a[i][j] = 0

for k in range(n):
    for i in range(n):
        for j in range(n):
            if a[i][k] + a[k][j] < a[i][j]:
                a[i][j] = a[i][k] + a[k][j]

for i in range(n):
    for j in range(n):
        if a[i][j] == float('inf'):
            a[i][j] = -1

for row in a:
    print(' '.join(map(str, row)))
",1.0,1.0
834,"
a, b, c = map(int, input().split())
if a == b and b == c:
 print(3)
elif (a == b and a != c) or (b == c and a != b) or (a == c and b != c):
 print(2)
else:
 print(0)
",1.0,0.00033580363378860056
835,"s = 0
n = int(input())
mas = list(map(int, input().split()))
mas.sort()
sc = 0
sn = 0
kn = 0
for i in range(n):
    if mas[i] % 2 == 0:
        sc += mas[i]
    else:
        sn += mas[i]
        kn += 1
if kn == 0:
    ans = sc
else:
    ans = sn + sc
    if sn % 2 != 0:
        for j in range(n):
            if mas[j] % 2 != 0:
                ans -= mas[j]
                break

print(ans)",0.0,9.501859494776e-06
836,"x1, y1, x2, y2 = map(float, input().split())radius = ((x2 - x1) ** 2 + (y2 - y1) ** 2) ** 0.5 / 2circumference = 2 * 3.14 * radiusarea = 3.14 * radius ** 2print(f""{circumference:.6f} {area:.6f}"")",1.0,0.999962329864502
837,"
s = input().strip()
max_len = 1
current_len = 1

for i in range(1, len(s)):
    if s[i] != s[i - 1]:
        current_len += 1
    else:
        if current_len > max_len:
            max_len = current_len
        current_len = 1

if current_len > max_len:
    max_len = current_len

print(max_len)
",1.0,0.9488889575004578
838,"
h1, m1, s1 = map(int, input().split())
h2, m2, s2 = map(int, input().split())

time1 = h1 * 3600 + m1 * 60 + s1
time2 = h2 * 3600 + m2 * 60 + s2

print(time2 - time1)
",1.0,0.8663253784179688
839,"n,k = map(int,input().split())
d=-10000
for i in range(n):
    f,t = map(int,input().split())
    if t>k:
        b=f-(t-k)
        if b>d:
            d=b
    else:
        if t<=k:
            b=f
            if b>d:
                d=b
print(d)",0.0,0.9999958276748657
840,"
k, n = map(int, input().split())
a = list(map(int, input().split()))
res = 0
for i in range(n):
    res += a[i] - k
    if res < 0:
        res = 0
print(res)
",1.0,0.9987229704856873
841,"
import math
a,b=map(int,input().split())
res=''
for i in range(a,b+1):
    if int(math.sqrt(i))**2==i:
        res+=str(i)+' '
print(res)
",1.0,0.0009887160267680883
842,"n=int(input())
cnt=0
while n>1:
    if n%2==0:
        n=n//2
        cnt+=1
    else:
        n-=1
        cnt+=1
print(cnt)",0.0,0.9955515265464783
843,"a1, b1 = map(int, input().split())
c = list(map(int,input().split()))
cou = int(input())
c.sort()
c1 = 0
for i in range(cou):
    if i < a1:
        c1 += c[i]
    else:
        c1 -= b1
print(c1)",0.0,0.7794701457023621
844,"
n = int(input())
nums = list(map(int, input().split()))
nums.sort()
max_num = nums[-1]
res = set(nums)
i = 0
while i < len(nums):
    for j in range(i+1, len(nums)):
        diff = abs(nums[i] - nums[j])
        if diff not in res:
            res.add(diff)
            nums.append(diff)
    i += 1
print(len(res))
",1.0,0.999958872795105
845,"def strange_parking(n):
    if n == 1:
        return 1
    elif n == 2:
        return 1
    else:
        return n // 3 + n % 3

n = int(input())
print(strange_parking(n))",1.0,0.9995357990264893
846,"s=input()
d={}
for i in range(len(s)-1):
    if s[i]==""A"":
        if s[i+1] not in d:
            d[s[i+1]]=1
        else:
            d[s[i+1]]+=1
print(max(d,key=lambda k:d[k]))",0.0,0.7028674483299255
847,"a = input()
b = input()
s = [int(i) for i in a]
k = [int(i) for i in b]
for i in range (0, len(s)):
    w = max(k)
    if s[i]<w:
        s[i]=w
        k.remove(w)
number = int(''.join(map(str, s)))
print(number)
",0.0,0.7921841740608215
848,"a, b, c = map(int, input().split())
d, e, f = map(int, input().split())

volume_1 = a * b * c
volume_2 = d * e * f

if volume_1 > volume_2:
    print(""FIRST"")
elif volume_1 < volume_2:
    print(""SECOND"")
else:
    print(""EQUAL"")
\n",1.0,0.7348201274871826
849,"s1 = str(input())
s2 = str(input())
s = s1 + s2
M = [0 for i in range(30)]
for i in s:
    M[ord(i) - 97] += 1

if M.count(1) == 4:
    print(3)
elif M.count(1) == 2:
    print(2)
elif M.count(2) == 2 or M.count(1) == 1:
    print(1)
elif M.count(4) == 1:
    print(0)
",0.0,0.8080207705497742
850,"a=int(input())
b=int(input())
def kd(x):
    sp=[]
    for t in range(1,int(x**0.5)+1):
        if x%t==0:
            sp.append(t)
            if x//t!=t:
                sp.append(x//t)
    sp.sort()
    sp.reverse()
    return(sp)
spd=[]
spdm=[]
dm=0
pn=0
k=0
for i in range(a,b+1):
    spd=kd(i)
    k=0
    spk=[]
    for j in spd:
        if j>=10 and j<100:
            k+=1
            spk.append(j)
    if k==30:
        print(i,spk[-1],spk[0])
       
       
    

",0.0,0.1662493199110031
851,"k=int(input())
s=10
for i in range(k):
    if s<=99:
        s+=9
    if s<=999 and s>100:
        s+=90
    if s<=9999 and s>1000:
        s+=900
    if s<=99999 and s>10000:
        s+=9000
print(s)
",0.0,0.9647200107574463
852,"a, b = map(int, input().split())
a = min(a, b)
b = max(a, b)
f = []
for i in range(a, b + 1):
    f.append(i)
print(' '.join(map(str, f)))",0.0,0.9969106316566467
853,"a = int(input())
k = list(map(int, input().split()))
kl = list()
k.append(10101)
k.sort()
for i in range(len(k)-1):
    if k[i] != k[i+1]:
        kl.append(k[i])
        print(k[i],k.count(k[i]))",0.0,0.017018813639879227
854,"a = input()
b = input()
s = [int(i) for i in a]
k = [int(i) for i in b]
k.sort()
k=k[::-1]
for i in range (0, len(s)):
    if s[i]<k[0]:
        s[i]=k[0]
        del k[0]
    if len(k)==0 or k[0]==0:
        break
number = int(''.join(map(str, s)))
print(number)
",0.0,0.27180445194244385
855,"
n = int(input())
for _ in range(n):
    s = input().strip()
    found = False
    for char in set(s):
        new_s = s.replace(char, '')
        if new_s == new_s[::-1]:
            found = True
            break
    if found:
        print('Yes')
    else:
        print('no')
",1.0,0.9999943971633911
856,"def q(gr1,gr2,gr3):
    for i in range(n):
        for j in range(n):
            for z in range(n):
                if gr3[i][j]==0:
                    gr3[i][j]=gr1[i][z]*gr2[z][j]
    return gr3
k=0
n=int(input())
m=3 
mas=[[0]*n for i in range(n)]
gr2=mas
for i in range(n):
    mas[i]=[int(f) for f in input().split()]
for x in range(m-1):
    gr3=[[0]*n for i in range(n)]
    q(mas,gr2,gr3)
    gr2=gr3
for i in range(n):
    for j in range(n):
        if gr2[i][j]==1 and i!=j:
            print(i+1,j+1)
            k=1
if k==0: print(""NO"")",0.0,0.9999996423721313
857,"q,w,e=map(int, input().split())
print(q*3+w*5+e*12)",0.0,0.14581342041492462
858,"def count_keystrokes(x):
    result = 0
    current_digit = 1
    while current_digit <= 9:
        for i in range(1, 10):
            apartment_number = int(str(current_digit) * i)
            if apartment_number == x:
                result += i
                return result
            result += i
        current_digit += 1
    return result

t = int(input())
for _ in range(t):
    x = int(input())
    print(count_keystrokes(x))",1.0,1.0
859,"a,b,c,d=map(int,input().split())
e=c*60+d
f=a*60+b
g=e-f
w=g//60
z=g%60
print(w,z)",0.0,0.995018720626831
860,"
n = int(input())
a = []
for i in range(n):
  a.append(int(input()))
odd_sum = 0
even_sum = 0
for i in range(n):
  if i % 2 == 0:
    even_sum += a[i]
  else:
    odd_sum += a[i]
if abs(odd_sum - even_sum) <= max(a):
  print(""Yes"")
else:
  print(""No"")
",1.0,0.004713138565421104
861,"a=int(input())
b=int(input())
c=0
def inDel ( x ):
    inDel = [1]
    for i in range (2,x+1):
        if x%i == 0:
            inDel.append(i)
            if len(inDel)>4:
                break
    return inDel

for k in range(a,b+1):
    if len(inDel(k))== 4:
           print(*inDel(k))
           c=1
if c==0:
    print(0)",0.0,0.9989064931869507
862,"
n = int(input())
matrix = [list(map(int, input().split())) for _ in range(n)]
res = [[0] * n for _ in range(n)]

for i in range(n):
    for j in range(n):
        for k in range(n):
            if matrix[i][k] == 1 and matrix[k][j] == 1:
                res[i][j] = 1

for i in range(n):
    for j in range(n):
        if matrix[i][j] == 1:
            res[i][j] = 1

for row in res:
    print(' '.join(map(str, row)))
",1.0,0.9996925592422485
863,"for i in range(int(input())):
    w = 0
    n, k = map(int, input().split())
    while n != 0:
        if n % k == 0:
            n //= k
        else:
            n -= 1
        w += 1
    print(w)",0.0,0.9996111989021301
864,"def max_consecutive_without_substring(s):max_length = 0current_length = 0for i in range(len(s)):current_length += 1if i >= 3 and s[i-3:i+1] == ""XZZY"":current_length -= 4if current_length < 0:current_length = 0max_length = max(max_length, current_length)return max_lengthinput_string = input().strip()print(max_consecutive_without_substring(input_string))",1.0,0.9999994039535522
865,"n = int(input())
mas = list(map(int, input().split()))
mas1 = []
if n % 2 == 0:
    for i in range(0, n-1, 2):
        mas[i], mas[i+1] = mas[i+1], mas[i]
else:
    for i in range(0, n-2, 2):
        mas[i], mas[i + 1] = mas[i + 1], mas[i]
print(*mas)
",0.0,0.9783195853233337
866,"
L = int(input())
C = L * 2.54
print(int(C))
",1.0,0.02628844417631626
867,"
n = input().strip()
while len(n) > 1:
    n = str(sum(int(digit) for digit in n))
print(n)
",1.0,0.9999508857727051
868,"n=int(input())
a=list(map(int,input().split()))
b=list(map(int,input().split()))
a.sort()
b.sort()
k=0
for i in range(n):
    k+=abs(a[i]-b[i])
print(k)

",0.0,0.36032983660697937
869,"
f = open('input.txt', 'r')
lines = f.readlines()
f.close()

min_g_count = float('inf')
target_line = ''

for line in lines:
    g_count = line.count('G')
    if g_count < min_g_count:
        min_g_count = g_count
        target_line = line.strip()

max_count = 0
most_freq_char = ''

for char in set(target_line):
    count = target_line.count(char)
    if count > max_count or (count == max_count and char > most_freq_char):
        max_count = count
        most_freq_char = char

print(most_freq_char)
",1.0,0.9999996423721313
870,"st1 = input()
st2 = input()
st = st1 + st2
dele = []
res = []
c = 0
for x in st:
    for y in st:
        if x == y and y not in dele:
            c += 1
    dele.append(x)
    res.append(c)
    c = 0
if max(res) == 4:
    print(0)
elif max(res) == 3:
    print(1)
elif max(res) == 2:
    if res.count(2) == 1:
        print(2)
    else: print(1)
else: print(3)
",0.0,0.00014466293214354664
871,"a, b = map(int, input().split())
def Koldel(x):
    sp = []
    for t in range(1, int(x**0.5)+1):
        if x%t == 0:
            sp.append(t)
            if x//t!=t:
                sp.append(x//t)
    sp.sort()
    sp.reverse()
    return sp
spd = []
pn = 1
dm = 0
spdmax = []
for i in range(a, b+1):
    spd = Koldel(i)
    if len(spd) % 2 != 0:
        print(pn, i,  len(spd), int(i**0.5))
        pn += 1

    ",0.0,0.0002950966008938849
872,"
n = int(input())
matrix = [input().strip() for _ in range(n)]
visited = [False] * n
res = []

for start in range(n):
    stack = [start]
    path = []
    while stack:
        node = stack.pop()
        if not visited[node]:
            visited[node] = True
            path.append(node + 1)
            for i in range(n-1, -1, -1):
                if matrix[node][i] == '1' and not visited[i]:
                    stack.append(i)
    res.append(' '.join(map(str, path)))

for r in res:
    print(r)
",1.0,1.0
873,"from sys import stdin, stdout

n, m = map(int, stdin.readline().split())

stdout.write(str(n + m))
",0.0,8.741884812479839e-06
874,"a,b=map(int,input().split())
n=int(input())
s=a*b
if  s//9>=n:
    print('NO',0,sep='
')
else:
    print('YES',n-s//9,sep='
')

",0.0,0.9666748642921448
875,"
n, k, x, y = map(int, input().split())
cost = x + (n - 1) * (k + 1) * y
print(cost)
",1.0,0.94352787733078
876,"ï»¿a=int(input())
c=a//10%10
print(c)
",0.0,0.7023196220397949
877,"st=list(map(int, input().split()))
st=sorted(st)
print(st[2]-st[0])",0.0,0.5469025373458862
878,"n=int(input())
k=int(input())
x=int(input())
y=int(input())
if n<=k:
    print(n*x)
else:
    print(k*x+(n-k)*y)",0.0,0.00016763529856689274
879,"
def is_prime(n):
    if n <= 1:
        return False
    if n <= 3:
        return True
    if n % 2 == 0 or n % 3 == 0:
        return False
    i = 5
    while i * i <= n:
        if n % i == 0 or n % (i + 2) == 0:
            return False
        i += 6
    return True

n = int(input())
print(""YES"" if is_prime(n) else ""NO"")
",1.0,1.0
880,"n1,p1,m1,t1,s1=map(int,input().split())
n2,p2,m2,t2,s2=map(int,input().split())
x1=(m1*t1+s1+p1)*n1
x2=(m2*t2+s2+p2)*n2
if x1<x2:
    print('Python',x1)
elif x1>x2:
    print('Pascal',x2)
elif x1==x2:
    print('Draw',x1)",0.0,0.6166067719459534
881,"
a, b = map(int, input().split())
if (a >= 0 and b >= 0) or (a < 0 and b < 0):
    res = a + b
else:
    res = a - b
print(res)
",1.0,0.3269720673561096
882,"a1=input().split()
a=[int(w) for w in (a1)]
s=0
for i in range(100):
    s*=1000
if a[0]==a[1]: print(0)
elif (a[0]>0 and a[1]>0) or (a[0]<0 and a[1]<0): print(a[0]+a[1])
else: print(a[0]*a[1])
",0.0,8.694679127074778e-05
883,"a=input()
b=input()
c=(a+b).count(a[0])+(a+b).count(a[1])+(a+b).count(b[0])+(a+b).count(b[1])
if c==4:
    print(3)
elif c==8 or c==10:
    print(1)
elif c==6:
    print(2)
else:
    print(0)
",0.0,5.5798816902097315e-05
884,"
s = input().strip()
max_count = 0
result_char = ''

for i in range(len(s)):
    for j in range(i + 1, len(s)):
        if s[i] == s[j]:
            between = s[i + 1:j]
            count = {}
            for char in between:
                if char in count:
                    count[char] += 1
                else:
                    count[char] = 1
            for char, cnt in count.items():
                if cnt > max_count or (cnt == max_count and char < result_char):
                    max_count = cnt
                    result_char = char

print(result_char)
",1.0,0.9999998807907104
885,"
n = int(input())
for _ in range(n):
    pos = input().strip()
    x = ord(pos[0]) - ord('a')
    y = int(pos[1]) - 1
    moves = [
        (x + 2, y + 1), (x + 2, y - 1),
        (x - 2, y + 1), (x - 2, y - 1),
        (x + 1, y + 2), (x + 1, y - 2),
        (x - 1, y + 2), (x - 1, y - 2)
    ]
    res = 0
    for move in moves:
        if 0 <= move[0] < 8 and 0 <= move[1] < 8:
            res += 1
    print(res)
",1.0,1.0
886,"N = int(input())  
K = int(input())  
X = int(input())  
Y = int(input())  
a = K * X
b = max(0, N - K)  
c = b * Y

d = a + c
print(d)",0.0,0.8986104130744934
887,"
n = int(input())
a = 0
b = 0
c = 0
while n > 0:
    if n >= 3:
        c += 1
        n -= 3
    elif n >= 2:
        b += 1
        n -= 2
    else:
        a += 1
        n -= 1
print(a+b+c)
",1.0,0.9995741248130798
888,"n = int(input())
sp = [int(i) for i in input().split()]
sp.sort()
maxx = 0
types = list(set(sp))
for i in types:
    f = sp.count(i)
    if f>maxx:
        maxx=f
print(maxx)",0.0,0.9909483790397644
889,"a = input()
print(a[::-1])",0.0,0.9742591381072998
890,"n, k, t, c, d, p, nl, np = map(int, input().split())
g = k * t // nl
t1 = c * d
t2 = p // np
res1 = min(g, t1, t2)
e = res1 % n if res1 % n != 0 else n
print(res1, e)",0.0,0.9994445443153381
891,"n = int(input())
a = list(map(int,input().split()))

s=0
m = min(a)
for i in range(n):
    s+=max(0,a[i]-m)
print(s)
",0.0,0.9979466795921326
892,"def sort_array(arr):
    n = len(arr)
    for i in range(n - 1):
        for j in range(n - i - 1):
            if arr[j] > arr[j + 1]:
                arr[j], arr[j + 1] = arr[j + 1], arr[j]
    return arr

n = int(input())
arr = list(map(int, input().split()))
sorted_arr = sort_array(arr)
print(*sorted_arr)",1.0,0.9999998807907104
893,"
n, m = map(int, input().split())
matrix = [[0] * n for _ in range(n)]
for _ in range(m):
    u, v = map(int, input().split())
    matrix[u - 1][v - 1] = 1
for row in matrix:
    print(' '.join(map(str, row)))
",1.0,0.9999356269836426
894,"n=int(input())
s=0
ng=[[0]*n for i in range(n)]
mas=[[0]*n for i in range(n)]
for i in range(n):
    mas[i]=[int(i) for i in input().split()]
for i in range(n):
    for j in range(n):
        if mas[i][j]==1:
            ng[j][i]=1
for i in ng:
    print(' '.join(map(str,i)))

",0.0,0.12278091162443161
895,"k, a, b = map(int,input().split())
if a + b == 0:
    print(1)
else:
    print(k + 1)",0.0,0.24169525504112244
896,"s = input() + input()
d = (3 - len(s) + len(set(s)))
print(d if d else 2)",0.0,0.988964319229126
897,"
s = input().strip().split()
t = s[0]
n = s[1]
if t == 'D':
    num = int(n)
    b = ''
    while num > 0:
        b += str(num % 2)
        num //= 2
    b = b[::-1]
    print(b.zfill(len(n)))
else:
    n = n[::-1]
    num = 0
    for i in range(len(n)):
        num += int(n[i]) * (2 ** i)
    print(num)
",1.0,0.9999985694885254
898,"x, y, z = map(int, input().split())
print(3 * x + (x + 2) * y + (x + 2 + 7) * z)",1.0,0.032896485179662704
899,"a=int(input())
def f(n):
    sp=[]
    for t in range(1,int(n**0.5)+1):
        if n%t==0:
            sp.append(t)
            if n//t!=t:
                sp.append(n//t)
    sp.sort()
    return sp


k=0
for i in range(a+1,a*10):
    spf=[]
    spf=f(i)
    for u in spf:
        if u%10==7 and u!=7 and u!=i:
            print(i,u)
            k+=1
            break
    if k>=5:
        break",0.0,0.004537175875157118
900,"y, k, n = map(int, input().split())
start = y//k*k + k
print(' '.join(map(str, range(start-y, n-y+1, k))) if n-start >= 0 else -1)",0.0,0.999967098236084
901,"b=input()
if b=='q':
    print('w')
elif b=='w':
    print('e')
elif b=='e':
    print('r')
elif b=='r':
    print('t')
elif b=='t':
    print('y')
elif b=='y':
    print('u')
elif b=='u':
    print('i')
elif b=='i':
    print('o')
elif b=='o':
    print('p')
elif b=='p':
    print('a')
elif b=='a':
    print('s')
elif b=='s':
    print('d')
elif b=='d':
    print('f')
elif b=='f':
    print('g')
elif b=='g':
    print('h')
elif b=='h':
    print('j')
elif b=='j':
    print('k')
elif b=='k':
    print('l')
elif b=='l':
    print('z')
elif b=='z':
    print('x')
elif b=='x':
    print('c')
elif b=='c':
    print('v')
elif b=='v':
    print('b')
elif b=='b':
    print('n')
elif b=='n':
    print('m')
elif b=='m':
    print('q')
",0.0,6.479413672266787e-10
902,"d1,d2,d3=map(int,input().split())
if d1+d2+d3 < 2*d1+2*d2 and 2*d2+2*d3:
    print(d1+d2+d3)
else:
    if 2*d1+2*d2<2*d2+2*d3:
        print(2*d1+2*d2)
    else:
        print(2*d2+2*d3)",0.0,4.520024798893019e-09
903,"
a, b = map(int, input().split())
if (a > 0 and b > 0) or (a < 0 and b < 0):
    res = a + b
else:
    res = a - b
print(res)
",1.0,0.9617142081260681
904,"n=int(input())
a=[]
for i in range(n):
    a.append(input())
s=0
c=0
for i in range(n):
    if a[i][0]=='1':
        s+=1
    if a[i][2]=='1':
        c+=1
print(min(s,n-s)+min(c,n-c))",0.0,0.9798086285591125
905,"a,b,c,d = map(int, input().split())
for i in range(a,b+1):
    if i % d == c:
        print(i,end=' ')",0.0,0.9790032505989075
906,"
n = int(input())
a = list(map(int, input().split()))
res = []
i = 0
while i < n or any(x > 0 for x in a[i:]):
    if i < n and a[i] > 0:
        res.append('+')
        a[i] -= 1
        if a[i] > 0:
            if i + 1 < n:
                a[i+1] += a[i]
            else:
                a.append(a[i])
            a[i] = 0
    else:
        res.append('-')
    i += 1
print(''.join(res))
",1.0,0.9724896550178528
907,"
n, k = map(int, input().split())
red_needed = n
green_needed = 5 * n
blue_needed = n

red_bunches = (red_needed + k - 1) // k
green_bunches = (green_needed + k - 1) // k
blue_bunches = (blue_needed + k - 1) // k

res = red_bunches + green_bunches + blue_bunches
print(res)
",1.0,0.998204231262207
908,"
total = 0
count = 0

while True:
    num = int(input())
    if num == 0:
        break
    if num % 8 == 0:
        total += num
        count += 1

if count == 0:
    print(""NO"")
else:
    mean = total / count
    print(f""{mean:.1f}"")
",1.0,0.9999853372573853
909,"n,k = map(int,input().split())
f = list()
t = list()
u = list()
for i in range(n):
    a,b = map(int,input().split())
    f.append(a)
    t.append(b)
for i in range(n):
    if t[i]>k:
        u.append(f[i]-(t[i]-k))
    else:
        u.append(f[i])
print(max(u))",0.0,0.9995176792144775
910,"
n = int(input())
a = [list(map(int, input().split())) for _ in range(n)]

b = [i for i in range(n) if a[i][i] == 1]
c = [i for i in range(n) if a[i][i] == 0]

for i in range(n):
    for j in range(n):
        if a[j][i] == 1:
            b.remove(j)

for i in b:
    for j in c:
        if a[i][j] == 1:
            c.remove(j)

print(*c)
",1.0,0.9936031699180603
911,"X = int(input())Y = int(input())if (X == 5 and Y == 4) or (X == 6 and Y == 2) or (X == 6 and Y == 4) or (X == 5 and Y == 6) or (X == 4 and Y == 5) or (X == 4 and Y == 3) or (X == 3 and Y == 4) or (X == 3 and Y == 6):print(""YES"")else:print(""NO"")",1.0,0.7718238234519958
912,"
vowels = ""АЕЁИОУЮЯ""
encrypted = input().upper()
numbers = int(''.join(filter(str.isdigit, encrypted)))
vowel_count = sum(encrypted.count(letter) for letter in vowels if encrypted.count(letter))
print(numbers % vowel_count)
",1.0,0.9999662637710571
913,"ï»¿h=int(input())
a=int(input())
b=int(input())
d=((h-a)-1)//(a-b)+2
print(d)
",0.0,0.983483076095581
914,"n = int(input())
a = 1
q = 0
b = n
while a != n:
    if n % 5 == 0:
        n = n // 5
        q += 1
    elif n%2 == 0:
        n = n//2
        q+=1
    else:
        n = n - 1
        q += 1
if (b != 6) and (b != 24):
    print(q)
elif b==24:
    print(7)
else:
    print(q-1)",0.0,0.009296420030295849
915,"n = int(input())
s = 0
kx1 = ky1 = 31401
kx2 = ky2 = -1
for i in range(n):
    x1, y1, x2, y2 = map(int, input().split())
    kx1 = min(kx1, x1)
    ky1 = min(ky1, y1)
    kx2 = max(kx2, x2)
    ky2 = max(ky2, y2)
    s += (x2 - x1) * (y2 - y1)
print('YES' if s == (kx2 - kx1) * (ky2 - ky1) and kx2 - kx1 == ky2 - ky1 else 'NO')",0.0,1.0
916,"p = list(input().split())
rounds_count = int(p[0])
time_to_zoo = int(p[1])
time_tourneer = 4 * 60
counter = 0
for i in range(rounds_count):
    if time_tourneer - 5 * (i + 1) < time_to_zoo:
        break
    else:
        counter += 1
        time_tourneer -= 5 * (i + 1)
print(counter)",0.0,0.014643481001257896
917,"def f():
    k, n = map(int, input().split())
    if (0, 0) == (k, n):
        return print(0, 0)
    print(n // k + 1, n % k)


f()",0.0,0.9999897480010986
918,"n, m = map(int, input().split())
a = list(map(int, input().split()))
total_apartments = sum(a)

b = list(map(int, input().split()))

for i, cur_apartment in enumerate(b, start=1):
    apartment_number_in_house = 0
    for house in range(1, n+1):
        for apar in range(1, a[house-1]+1):
            apartment_number_in_house += 1
            if cur_apartment == apartment_number_in_house:
                print(house, apar)
                break",1.0,0.9999996423721313
919,"
N = int(input())
arr = list(map(int, input().split()))
distinct_count = 0
previous = None

for num in arr:
    if num != previous:
        distinct_count += 1
        previous = num

print(distinct_count)
",1.0,0.967015266418457
920,"d=int(input())
m=int(input())
y=int(input())
if (m<9 and y==2010):
    print('YES')
else: print('NO')


",0.0,0.007783979177474976
921,"n=int(input())
a = list(map(int, input().split()))
c = [0]*(max(a)+1)
for i in a:
    c[i] += 1
print(max(c), len(set(a)))",0.0,0.009610618464648724
922,"
n, vgav, vsharik = map(int, input().split())
total_speed = vgav + vsharik
time = n / total_speed
gava_eaten = int(vgav * time)
puppy_eaten = int(vsharik * time)
print(gava_eaten, puppy_eaten)
",1.0,0.9803560972213745
923,"k=int(input())
S=0
for i in range(k):
    S=0
    n, m = map(int, input().split())
    if m==1 and n==1:
        print('YES')
    else:
        for g in range(1, m+1):
            S+=g
    if S>n:
         print('NO')
    else:
        print('YES')",0.0,0.9789888858795166
924,"
K = int(input())
n = int(input())
tubes = []

for _ in range(n):
    data = list(map(int, input().split()))
    m = data[0]
    percentages = data[1:m+1]
    max_percent = max(percentages)
    tubes.append(max_percent)

max_active = max(tubes)
total_increase = 0

for active in tubes:
    if active < max_active:
        total_increase += max_active - active

if total_increase < K:
    total_increase = K

print(total_increase)
",1.0,0.8934678435325623
925,"a = int(input())b = int(input())found = Falsefor num in range(a, b + 1):divisors = []for i in range(1, int(num**0.5) + 1):if num % i == 0:divisors.append(i)if i != num // i:divisors.append(num // i)if len(divisors) == 4:found = Trueprint("" "".join(map(str, sorted(divisors))))if not found:print(0)",1.0,0.9119794964790344
926,"a = input()
b = input()
x = [a[0], b[0], a[1], b[1]]
s = set(x)
print(len(s) - 1)",0.0,0.6683551669120789
927,"
a, b, h, n, m = map(int, input().split())
if max(a, b) <= m and h <= m:
 print(""YES"")
elif max(a, b) <= n and h + n <= m:
 print(""YES"")
else:
 print(""NO"")
",1.0,0.0327933244407177
928,"N, W, K = map(int, input().split())total_weight_after = N * Wtotal_weight_before = total_weight_after * Kcoins_before = total_weight_before // Wprint(coins_before)",1.0,0.9770260453224182
929,"def work():
    import sys

    try:
        n = int(input())
    except:
        print(0)
        sys.exit()

    count_left_0 = count_left_1 = count_right_0 = count_right_1 = 0

    for _ in range(n):
        try:
            line = input().strip()
            if not line:
                continue
            parts = line.split()
            if len(parts) != 2:
                continue
            l, r = parts
            if l == '0':
                count_left_0 += 1
            elif l == '1':
                count_left_1 += 1
            else:
                continue

            if r == '0':
                count_right_0 += 1
            elif r == '1':
                count_right_1 += 1
            else:
                continue
        except EOFError:
            break

    cost_00 = count_left_1 + count_right_1
    cost_01 = count_left_1 + count_right_0
    cost_10 = count_left_0 + count_right_1
    cost_11 = count_left_0 + count_right_0

    print(min(cost_00, cost_01, cost_10, cost_11))
work()
",0.0,0.988260805606842
930,"
s1, s2, s3 = map(int, input().split())
n = int(input())
fillings = input().split()

ways = 1
if 'sausage' in fillings:
    ways *= s1
if 'chese' in fillings:
    ways *= s2
if 'Ketchup' in fillings:
    ways *= s3

print(ways)
",1.0,0.055307190865278244
931,"
d, r = map(int, input().split())
n = int(input())
count = 0
for i in range(n):
    x, y, R = map(float, input().split())
    dist = (x**2 + y**2)**0.5
    if dist + R > d and dist - R < d - r:
        count += 1
print(count)
",1.0,0.9896432161331177
932,"a=[int(i) for i in input().split()]
b=[int(i) for i in input().split()]
c=a[0]*a[1]+a[0]*a[2]*a[3]+a[0]*a[4]
d=b[0]*b[1]+b[0]*b[2]*b[3]+b[0]*b[4]
if c<d:
    print(""Python "", c)
elif c==d:
    print(""Draw"", c)
else:
    print(""Pascal"", d)",0.0,8.353465830168716e-08
933,"n, m = map(int,input().split())
if m % 2 ==0:
    print(n* (m // 2))
else:
    print(n * (m // 2))",0.0,0.001480540493503213
934,"
def find_max_min(n):
    max_digit = str(n)[0]
    min_digit = max_digit
    for digit in str(n):
        if int(digit) > int(max_digit):
            max_digit = digit
        if int(digit) < int(min_digit):
            min_digit = digit
    return min_digit + ' ' + max_digit

number = int(input())
print(find_max_min(number))
",1.0,0.9999934434890747
935,"
import math

p, a, b, c = map(int, input().split())
pa, pb, pc = p*a, p*b, p*c
for i in range(1018):
    if pa == pb == pc:
        print(i)
        break
    pa, pb, pc = (pa+1)%1018, (pb+1)%1018, (pc+1)%1018
",1.0,0.0110512375831604
936,"
m, n = map(int, input().split())

a = [n] * n
for i in range(n):
    a[i] //= n
    a[i] += i + 1

for i in range(n):
    if a[i] < n:
        a[i + 1] += 1

print(' '.join(map(str, a)))
",1.0,0.9741345643997192
937,"n=int(input())
s=[]
l=0
r=0
for i in range(n):
    a, b = input().split()
    if a=='0':
        l+=1
    if b=='0':
        r+=1
print(min(l, n-l)+min(r, n-r))
",0.0,0.9956986904144287
938,"n = int(input())
pes = input()
c = set()
for i in range(n-1):
    c.add(pes[i:i+2])
print(len(c))",0.0,0.991684079170227
939,"
n, k = map(int, input().split())
d = n // (2 * k + 1)
l = d * k
w = d + l
res = n - w
print(d, l, res)
",1.0,0.9956690073013306
940,"
a, b = map(int, input().split())

for num in range(a, b + 1):
    divs = set()
    for i in range(1, int(num**0.5) + 1):
        if num % i ==0:
            if i %2 ==0:
                divs.add(i)
            if (num//i) %2==0:
                divs.add(num//i)
    if len(divs)==3:
        print(num)
",1.0,0.0072712223045527935
941,"s=0
n,t=map(int,input().split())
a=list(map(int,input().split()))
for i in range(99):
    t-=80000-a[i]
    if t<1:
        break
    s+=1
print(s+1)",0.0,0.9982201457023621
942,"
n = int(input())
grades = list(map(int, input().split()))
min_grade = min(grades)
max_grade = max(grades)

for i in range(n):
    if grades[i] == max_grade:
        grades[i] = min_grade

print(*grades)
",1.0,0.35694363713264465
943,"def dnf(it):
    sp.append(it+1)
    grf[it]=True
    for i in range(n):
        if not(grf[i]) and gr[it][i]==1:
            dnf(i)
n=int(input())
gr=[[0]*n for i in range(n)]
sp=[]
grf=[False]*n
for i in range(n):
    gr[i]=[int(f) for f in input().split()]
dnf(0)
k=1
for i in sp:
    print(k,sp.index(k)+1)
    k+=1
",0.0,0.999797523021698
944,"a, b, m = map(int, input().split())
print(m // a + m // b + 2)
",0.0,0.8589257597923279
945,"
binary_number = input().strip()
decimal_number = 0
for i, digit in enumerate(reversed(binary_number)):
    decimal_number += int(digit) * (2 ** i)
print(decimal_number)
",1.0,0.8635626435279846
946,"
a = int(input())
count = 0
n = a + 1
results = []

while count < 5:
    divs = []
    for i in range(2, n):
        if n % i == 0:
            divs.append(i)
        if len(divs) > 5:
            break
    if len(divs) >= 5:
        results.append((n, divs[-5]))
        count += 1
    n += 1

for res in results:
    print(res[0], res[1])
",1.0,0.99964439868927
947,"vvod = input()
vvod = vvod.split()
x = int(vvod[0])
y = int(vvod[1])
z = int(vvod[2])
xc = 3
yc = 5
zc = 12
print(x * xc + y * yc + z * zc)",0.0,0.09017323702573776
948,"n = int(input())
a = list(map(int,input().split()))
sum1=0
sum2=0
for i in a:
    if i>0:
        sum1+=i
    else:
        sum2-=i
print(sum2+sum1)",0.0,0.9902831315994263
949,"
n = int(input())
total = 0
gifts = 1
i = 1
while total < n:
 total += gifts
 gifts = gifts * 2 + 1
 i += 1
if total == n:
 print(""YES"")
else:
 print(""NO"")
",1.0,0.9878838658332825
950,"n=int(input())
a=list(map(int, input().split()))
b=list(map(int, input().split()))
a.sort()
b.sort()
s=0
for i in range(n):
    s+=abs(a[i]-b[i])
print(s)",0.0,0.36032983660697937
951,"n = int(input())
od=0
maxi=-1
s = list(map(int, input().split()))
sp = [0]*n*2
for i in s:
    p = sp[i]
    if p==1:
        od-=1
    else:
        sp[i]=1
        od+=1
    if od>maxi:
        maxi=od
print(maxi)",0.0,0.8612456917762756
952,"a,b,c=map(int,input().split())
if a>b:
    mi=b
else:
    mi=a
if mi>c:
    mi=c

if a<b:
    ma=b
else:
    ma=a
if ma<c:
    ma=c
    
s=a+b+c-mi-ma
print(s)",0.0,0.8427272439002991
953,"
buildings = list(map(int, input().split()))
max_dist = -1
house_num = -1

for i in range(len(buildings)):
    if buildings[i] == 1:
        min_dist = float('inf')
        for j in range(len(buildings)):
            if buildings[j] == 2:
                dist = abs(i - j)
                if dist < min_dist:
                    min_dist = dist
        if min_dist > max_dist:
            max_dist = min_dist
            house_num = i + 1

print(max_dist, house_num)
",1.0,0.9999990463256836
954,"lst = [int(x) for x in input().split()]
n = lst[0]
k = lst[1]
t = lst[2]
c =lst[3]
d =lst[4]
p =lst[5]
nl = lst[6]
np = lst[7]
m = min(((k*t)//nl),(c*d),(p//np))
r = m%n
if r==0:
    r = n
print(m,r)",0.0,0.07459378242492676
955,"l, v1, v2, t = map(int, input().split())
print(min((l-(((v1+v2)*t)%l)), l-(l-(((v1+v2)*t)%l))))",0.0,0.006270586047321558
956,"a = [int(i) for i in input().split()]
if a[0] > 0 and a[1] > 0:
    print(sum(a))
elif a[0] < 0 and a[1] < 0:
    print(sum(a))
else:
    print(a[0] - a[1])
        ",0.0,0.0011950271436944604
957,"
def min_moves_to_identical_chips(field):
    from collections import Counter

    chips = [field[0][0], field[0][1], field[1][0], field[1][1]]
    count = Counter(chips)
    max_count = max(count.values())

    if max_count == 4:
        return 0
    elif max_count == 3:
        return 1
    elif max_count == 2:
        if len(count) == 2:
            return 2
        else:
            return 3
    else:
        return 3

field = [input().strip(), input().strip()]
print(min_moves_to_identical_chips(field))
",1.0,8.068054012255743e-05
958,"s=input()
l,maxl,kl=1,0,""""
for i in range(len(s)-1):
    if s[i]==s[i+1]:
        l+=1
        if l>maxl:
            maxl=l
            kl=s[i]
    else:
        l=1
print(kl,maxl)
",0.0,0.9994935989379883
959,"n=int(input())
k=int(input())
x=int(input())
y=int(input())
if n>=k:
    s=x*k+y*(n-k)
else:
    s=x*n
print(s)
",0.0,0.0028376185800880194
960,"

a=int(input())
b=int(input())
c=0
k=0
max=0
st=[]
sp=[]
def inDel ( x ):
    inDel = [1]
    for i in range (2,x+1):
        if x%i == 0:
            inDel.append(i)
    return inDel

for k in range(a,b+1):
    sp=inDel(k)
    if len(sp)>=max:
        max=len(sp)
        d=k
        st=sp
print(max,st[-1],st[-2])
",0.0,0.9999994039535522
961,"from math import log2
n = int(input())
while n!=0:
    print(int(log2(n))+1,end=' ')
    n-=2**(int(log2(n)))",0.0,1.3207384654378984e-05
962,"coord = [0, 0]
time = 0
sled = set() # {'1,2;2,2'}
ks = {'U': [0, 1], 'D': [0, -1], 'R': [1,0], 'L':[-1,0]}

cmds = input()

for cmd in cmds:
	old_len = len(sled)
	sled.add(str(';'.join([','.join(list(map(str, coord))), ','.join([str(coord[0]+ks[cmd][0]), str(coord[1]+ks[cmd][1])])])))
	sled.add(str(';'.join([','.join([str(coord[0]+ks[cmd][0]), str(coord[1]+ks[cmd][1])]), ','.join(list(map(str, coord)))])))
	if len(sled) == old_len:
		time += 1
	else:
		time += 5
	coord = [coord[0]+ks[cmd][0], coord[1] + ks[cmd][1]]

print(time)",0.0,7.08523284487228e-09
963,"n = int(input())
mas = list(map(int, input().split()))
mas2 = []
for a in range(1, n, 2):
    mas2.append(mas[a])
    mas2.append(mas[a-1])
print(*mas2)",0.0,0.06050523370504379
964,"k, n = map(int, input().split())
a = list(map(int, input().split()))

total = 0
for i in range(n):
    total += a[i] - k
    if total < 0:
        total = 0

print(total)",0.0,0.9987229704856873
965,"n,v1=map(int, input().split())
sp=[-1]*n
Q=[]
QQ=[]
maska=0
visited=[False]*n
gr=[[0]*n for i in range(n)]
for i in range(n):
    gr[i] = [int(t) for t in input().split()]

def BFS(ver):
    if ver<len(Q):
        v=Q[ver]
        for i in range(n):
            if gr[v][i]==1 and not(visited[i]):
                Q.append(i)
                visited[i]=True
                sp[i]=v  
        BFS(ver+1)
Q.append(v1-1)
visited[v1-1]=True
BFS(0)
m=int(input())
for i in range(m):
    vk=int(input())
    QQ=[]
    maska=0
    per=vk-1
    while per!=v1-1:
        QQ.append(per+1)
        per=sp[per]
        if per==-1:
            maska=1
            break
    if maska==0:
        QQ.append(v1)
        QQ.reverse()
        print(*QQ)
    else:
        print(-1)",0.0,0.9997482895851135
966,"
X, K = map(int, input().split())
count = 0
while X < 10**9:
    X *= K
    if X < 10**9:
        count += 1
print(count)
",1.0,0.9331100583076477
967,"
N = int(input())
res = []
while N>0:
  res.append(str(N))
  N = N//10
print("" "".join(res[::-1]))
",1.0,0.9996435642242432
968,"s=input()
l,maxl,word=0,0,""""
for i in range(1,len(s)-1):
    if s[i]==s[i+1]:
        l+=1
        if l>maxl:
            maxl=l
            word=s[i]
    else:
        l=1
print(word,maxl)
",0.0,0.9996993541717529
969,"from math import ceil
a = int(input())
b = int(input())
print(ceil(b / a))",0.0,9.372031854582019e-06
970,"
d = int(input())
m = int(input())
y = int(input())

if y < 2010:
    print('Yes')
elif y > 2010:
    print('No')
else:
    if m < 9:
        print('No')
    elif m > 9:
        print('Yes')
    else:
        if d <= 1:
            print('Yes')
        else:
            print('No')
",1.0,1.245059411303373e-05
971,"a1,b1 = map(int,input().split())
a2,b2 = map(int,input().split())
a3,b3 = map(int,input().split())
print(a1-a3,b1-b2)",0.0,0.9981510043144226
972,"
print(""ABC"")
",1.0,0.7387505173683167
973,"
n = int(input())
if n == 1:
    res = 9
else:
    res = 9 * (10 ** (n - 1))
print(res)
",1.0,0.05870988965034485
974,"a=int(input())
b=a//10%10
print(b)",0.0,0.5440782904624939
975,"def solution():
    n = int(input())
    arr = list(map(int, input().split()))
    count = 0
    for num in arr:
        if num >= 0:
            count += 1
    print(count)

solution()",1.0,0.9999434947967529
976,"sp = input().split()
g = int(sp[0])
c = int(sp[1])
h = int(sp[2])
vn = c + h
if vn >= g-1:
    print(g+g-1)
else:
    print(vn + vn + 1)",0.0,0.014499817974865437
977,"a,b=map(int,input().split())
m,k=map(int,input().split())
if m>=a and k>=b:
   print(""YES"")
elif m>=b and k>=a:
   print(""YES"")
else:
   print(""NO"")",0.0,0.013991747051477432
978,"
n = int(input())
a = [int(x) for x in input().split()]
a.sort()
tot = 0
for i in range(n-1):
    tot += a[i+1] - a[i]
print(tot)
",1.0,0.8920431733131409
979,"length = int(input())
array = [int(s) for s in input().split()]

for i in range(len(array)):
    if array.count(1) != 0 and array.count(3) != 0:
        array[array.index(1)] = array[array.index(1)] + array[array.index(3)]
        array.pop(array.index(3))
    if array.count(2) >= 2:
        array[array.index(2)] = array[array[array.index(2) + 1:].index(2) + array[array.index(2)]]
        array[:array.index(2)].pop(array.index(2))
print(len(array))
",0.0,6.600625379604708e-09
980,"a,b = map(int, input().split())
spd= []
k = 0
spdmax = []
def KolDel(x):
    sp =[]
    for t in range(1,int(x**0.5)+1):
        if x % t == 0:
            sp.append(t)
            if x//t != t:
                sp.append(x//t)
        sp.sort()
        sp.reverse()
    return sp
for i in range(a,b+1):
    spd = KolDel(i)
    if len(spd)%2 != 0:
        k+=1
        print(k,i,len(spd),int(i**0.5))

",0.0,0.00015022652223706245
981,"Here's the Python code to solve the task:

n, k, m = map(int, input().split())
prices = []
for _ in range(n):
    prices.append(int(input()))

prices.sort()

budget_segment = prices[:k]
premium_segment = prices[-m:]

cheapest_premium = premium_segment[0]
avg_budget = sum(budget_segment) // k

print(cheapest_premium, avg_budget)",1.0,0.9999896287918091
982,"
s, p = map(int, input().split())
for i in range(s + 1):
    j = s - i
    if i * j == p:
        print(i, j)
        break
",1.0,0.995595395565033
983,"
s = input()
i, j = map(int, input().split())
i -= 1
j -= 1
s_list = list(s)
while i < j:
    s_list[i], s_list[j] = s_list[j], s_list[i]
    i += 1
    j -= 1
print(''.join(s_list))
",1.0,0.9999816417694092
984,"p = [int(i) for i in input().split()]
n = input()
n1 = ''
for i in range(p[0]):
    if p[1] >= int(n[i]) and i == 1:
        n1 = str(p[1]) + n
        break
    elif p[1] >= int(n[i]):
        n1 = n[0:i+1] + str(p[1]) + n[i+1:]
        break
    elif p[1] <= int(n[i]) and i == p[0]-1:
        n1 = n + str(p[1])
        break
print(int(n1))
",0.0,0.0010692165233194828
985,"
s = input().strip()
colors = {'R': 0, 'B': 0, 'Y': 0, 'G': 0}
burnt_out = 0

for i in range(len(s)):
    if s[i] == '!':
        burnt_out += 1
        prev_color = s[i - 1]
        next_color = s[(i + 1) % 4]
        for color in colors.keys():
            if color != prev_color and color != next_color:
                colors[color] += 1
                break

print(colors['R'], colors['B'], colors['Y'], colors['G'])
",1.0,0.9993281364440918
986,"
n, m = map(int, input().split())
matrix = [[0] * n for _ in range(n)]
for _ in range(m):
    u, v = map(int, input().split())
    matrix[u-1][v-1] = 1
    matrix[v-1][u-1] = 1
for row in matrix:
    print(' '.join(map(str, row)))
",1.0,0.9999916553497314
987,"n=int (input())
m=n
k=0
while m>0:
    k=k*10+m%10
    m=m//10
print(n+k)
",0.0,0.9980276226997375
988,"
N = int(input())
intervals = []

for _ in range(N):
    h1, m1, h2, m2 = map(int, input().split())
    start = h1 * 60 + m1
    end = h2 * 60 + m2
    if start < end:
        intervals.append((start, end))
    else:
        intervals.append((start, 1440))
        intervals.append((0, end))

if not intervals:
    print(0)
else:
    total_time = 0
    current_time = 0
    while current_time < 1440:
        count = sum(1 for start, end in intervals if start <= current_time < end)
        if count == N:
            total_time += 1
        current_time += 1

    print(total_time)
",1.0,1.0
989,"
a,b,c,d,e,f = map(int, input().split())
res = a*d + a*b*e + a*c*f
print(res)
",1.0,0.23540452122688293
990,"n = int(input())
gr = [[0]*n for i in range(n)]
inf = 10**10
for i in range(n):
    gr[i]=[int(f) for f in input().split()]
nv,w = map(int,input().split()) #ÐÐ°ÑÐ°Ð»ÑÐ½Ð°Ñ Ð²ÐµÑÑÐ¸Ð½Ð°, Ð¾Ñ ÐºÐ¾ÑÐ¾ÑÐ¾Ð¹ Ð±ÑÐ´ÐµÐ¼ Ð¸Ð·Ð¼ÐµÑÑÑÑ ÑÐ°ÑÑÑÐ¾ÑÐ½Ð¸Ðµ
for i in range(n):
    for j in range(n):
        if (gr[i][j]==0):
            gr[i][j]=inf
gr[nv-1][nv-1]=0
def dej(it): #it - Ð´Ð°Ð½Ð½Ð°Ñ Ð²ÐµÑÑÐ¸Ð½Ð°, Ð¸ÑÐµÑÐ°ÑÐ¸Ñ
    visited = []
    distances = {it: 0}
    node = list(range(n))
    if it in node:
        node.remove(it)
        visited.append(it)
    else: return None
    for i in node:
        distances[i] = gr[it][i]
        pr = it
    while node:
        vremDist = float('inf')
        for i in visited:
            for j in node:
                if vremDist > distances[i] + gr[i][j]:
                    vremDist = distances[j] = distances[i] + gr[i][j]
                    pr = j
        visited.append(pr)
        node.remove(pr)
    return distances
dist = dej(nv-1)
if dist[w-1]==inf: print(""NO"")
else: print(dist[w-1])
",0.0,1.0
991,"
n, k = map(int, input().split())
for _ in range(k):
    if n % 10 != 0:
        n -= 1
    else:
        n //= 10
print(n)
",1.0,0.9457913041114807
992,"n, m = map(int,input().split())
f = (n+1)/2 *n
o = m % f
c = 1
while o>=c:
    o-=c
    c+=1
print(int(o))
",0.0,0.9996589422225952
993,"a, k = map(int, input().split())
print(k + sum(-(-x//k) for x in map(int, input().split())))",1.0,0.9999200105667114
994,"
def power(a: int, x: int) -> int:
    if x == 0:
        return 1
    elif x == 1:
        return a
    else:
        return power(a, x // 2) * power(a, x - x // 2)
",1.0,0.9999943971633911
995,"n, k, t, c, d, p, nl, np = [int(x) for x in input().split()]
res = min((k*t)//nl, c*d, p//np)
print(res, (res-1)%n+1)",0.0,0.9322026968002319
996,"string = input()
vowels = 'Ð°Ð±Ð²Ð³Ð´ÐµÑÐ¶Ð·Ð¸Ð¹ÐºÐ»Ð¼Ð½Ð¾Ð¿ÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑ'

string = string.lower()
counter_vowels = 0
counter_digits = 0

for i in range(len(string)):
    if (string[i] in vowels):
        counter_vowels += 1
    elif (string[i].isdigit()):
        counter_digits += 1

if (counter_vowels > counter_digits): print(1)
elif (counter_vowels < counter_digits): print(2)
else: print(0)

    
",0.0,0.6981879472732544
997,"n=int(input())
if n%10==1 and n!=11:
    print(n,'mag')
elif n%10==2 or n%10==3 or n%10==4 and n!=12 and n!=13 and n!=14:
    print(n,'maga')
elif n%10==5 or n%10==6 or n%10==7 or n%10==8 or n%10==9:
    print(n,'magov')
    

",0.0,1.4460651982517447e-06
998,"a,b=input().split()
a=int(a)
b=int(b)
z=[]
x=[]
for i in range(1,a):
    if a%i==0:
        z.append(i)
for v in range(1,b):
    if b%v==0:
        x.append(v)
sb=sum(x)
sa=sum(z)
if sa==b and sb==a: print('YES')
else: print('NO')

",0.0,0.04595278948545456
999,"a,b,h=map(int,input().split())
m,k=map(int,input().split())
if ((h <= k and b <=k) or (h<=k and a <=k) or (a <= k and b <= k)):
    print(""YES"")
else:
    print(""NO"")",0.0,0.05146742984652519
1000,"def main():
    P, K, T, R = map(int, input().split())
    count = 0
    time = 0
    while P > 0:
        P -= K
        time += T
        count += 1
        if count % 3 == 0 and P > 0:
            time += R
    print(time)

if __name__ == ""__main__"":
    main()",1.0,0.9999992847442627
1001,"
a = float(input())
b = float(input())
c = float(input())
perimeter = a + b + c
print(perimeter)
",1.0,0.5892522931098938
1002,"
n, m, k = map(int, input().split())
mod = 10**k
res = 1
for _ in range(m):
    res = (res * n) % mod
print(res)
",1.0,0.9966004490852356
1003,"c,m,s=map(int,input().split())
z,v,e=map(int,input().split())
mo=c*3600+m*60+s
mon=z*3600+v*60+e
d=max(mo,mon)
g=min(mo,mon)
r=d-g
print(r)
",0.0,0.9932090640068054
1004,"n = int(input())
A, B, C = map(int, input().split())
D, E, F = map(int, input().split())

cost = n * (A * D + B * E + C * F)

print(cost)",1.0,0.49022576212882996
1005,"n = int(input())
dels = [val for val in range(1, int(n**0.5)+1) if n%val == 0]
dels.extend([n//val for val in dels[::-1]])
print(' '.join(map(str, dels)))",0.0,0.5634818077087402
1006,"n = int(input())
gr=[[0]*n for i in range(n)]
gr2=[[0]*n for i in range(n)]
gr2=gr
for i in range(n):
    gr[i] = [int(t) for t in input().split() ]
for i in range(n):
    for j in range(n):
        if i==j:
            gr[i][j]=1
for i in range(n):
    for j in range(n):
        for z in range(n):
            if (gr[j][i]and gr[i][z]):
                gr[j][z]=1
for i in range(n):
    for j in range(n):
        if i==j:
            gr[i][j]=0           
for k in gr:
    print(' '.join(map(str,k)))",0.0,0.9998880624771118
1007,"s=str(input())
s=s+'**'
sim=str(input())
k=0
mas=[]
for i in range(len(s)-1):
    if s[i]==sim:
        k=k+1
    else:
        mas.append(k)
        k=0
print(max(mas))
",0.0,0.15956154465675354
1008,"k = int(input())
for i in range(k):
    n,m = map(int, input().split())
    if m>n:
        print('NO')
    elif m == n:
        print('NO')
    elif m/n>=2:
        print('YES')
    else:
        print('YES')",0.0,0.31386396288871765
1009,"
h = int(input())
m = int(input())

m += 15
if m >= 60:
    m -= 60
    h += 1
h += 1
if h >= 24:
    h -= 24

print(h, m)
",1.0,0.7546578645706177
1010,"a=int(input())
b=int(input())
c=int(input())
if a<b:
   M=a
else:
   M=b
if M<c:
   D=M
else:
   D=c
print(D)
",0.0,0.0034061442129313946
1011,"
area, side = map(int, input().split('\n'))
other_side = area / side
print(other_side)
",1.0,0.9950939416885376
1012,"n=int(input())
mk=0
for i in range(n):
    st=input()
    if st.count('A')<25:
        for j in range(len(st)-1):
            for v in range(j+1,len(st)):
                if st[j]==st[v]:
                    if (v-j)>mk:
                        mk=(v-j)
print(mk)
",0.0,0.9999855756759644
1013,"x, y, a, b = list(map(int, input().split(' ')))

res = 0

for i in range(a, b+1):
    if (y <= (i // 2 + 1)) and (x <= (i // 2)):
        if not(i % x) and not(i % y):
            res += 1

print(res)",0.0,0.9985736608505249
1014,"
s = 'ABACDABBCACDAA'
max_len = 0
cur_len = 0

for char in s:
    if char == 'A' or char == 'B' or char == 'C':
        cur_len += 1
    else:
        if cur_len > max_len:
            max_len = cur_len
        cur_len = 0

if cur_len > max_len:
    max_len = cur_len

print(max_len)
",1.0,0.9988756775856018
1015,"
a,b = input().split()
a = a.lower()
b = b.lower()
res = ""Yes""
for c in set(a+b):
    if a.count(c) != b.count(c):
        res = ""No""
print(res)
",1.0,0.9910968542098999
1016,"a,b=map(int,input().split())
for i in range(a, b + 1):
    if i % 2 == 0:
        count = 1
        sqrtI = round(i ** 0.5)
        for j in range(2, sqrtI + 1):
            if i % j == 0:
                if j % 2 == 0:
                    count += 1
                k = i // j
                if k % 2 == 0:
                    count += 1
                    if j == k:
                        count -= 1
                if count > 3:
                    break
        if count == 3:
            print(i)",0.0,0.025006651878356934
1017,"
n, x, y = map(int, input().split())
res = n * x + n * y
print(res)
",1.0,0.8207112550735474
1018,"
x = float(input())
n = 1
sum = 0.0
while sum < x:
    n += 1
    sum += 1.0 / n
print(n)
",1.0,0.8899370431900024
1019,"
n, k, m = map(int, input().split())
scores = [int(input()) for _ in range(n)]
scores.sort(reverse=True)
print(scores[k-1], scores[m-1])
",1.0,0.9990253448486328
1020,"
s = input()
kr = kb = ky = kg = 0
for i in range(len(s)):
    if s[i] == '!':
        if s[i-1] == 'R':
            kr += 1
        elif s[i-1] == 'b':
            kb += 1
        elif s[i-1] == 'y':
            ky += 1
        elif s[i-1] == 'g':
            kg += 1
print(kr, kb, ky, kg)
",1.0,0.9999632835388184
1021,"
n = int(input())
res = 0
for i in range(1, n + 1):
    if n % i == 0:
        res += 1
print(res)
",1.0,0.9555912613868713
1022,"n = int(input())
s = [list(map(int, input().split())) for i in range(n)]
ans = [1] * (n + 1)
for i in range(n):
    for j in range(n):
        if s[i][j] == 3:
            ans[i + 1], ans[j + 1] = 0, 0
        elif s[i][j] == 1:
            ans[i + 1] = 0
        elif s[i][j] == 2:
            ans[j + 1] = 0
        s[i][j], s[j][i] = -1, -1
print(sum(ans[1:]))
print(*[i for i in range(1, n + 1) if ans[i] == 1])",0.0,0.8363862037658691
1023,"k=int(input())
for i in range(k):
    s=0
    n,m=map(int,input().split())
    if n<=m:
        print(""NO"")
    else:
        for j in range(m):
            s+=j
        if s<=n:
            print(""YES"")
        else:
            print(""NO"")",0.0,0.259795218706131
1024,"def min_time_to_uniform_bits(n, bit_pairs):
    left_0 = 0 
    left_1 = 0  
    right_0 = 0 
    right_1 = 0 

    for left, right in bit_pairs:
        if left == 0:
            left_0 += 1
        else:
            left_1 += 1

        if right == 0:
            right_0 += 1
        else:
            right_1 += 1

    changes_for_left = min(left_0, left_1)
    changes_for_right = min(right_0, right_1)

    return changes_for_left + changes_for_right

n = int(input())
bit_pairs = [tuple(map(int, input().split())) for _ in range(n)]

print(min_time_to_uniform_bits(n, bit_pairs))
",0.0,0.999997615814209
1025,"
n = int(input())
a = list(map(int, input().split()))
ans = 0
for i in range(1, n + 1):
    if a[i - 1] % 2 == 0:
        ans += a[i - 1]
    else:
        ans += a[i - 1] - a[i - 1] % 2
print(ans)
",1.0,0.9218854308128357
1026,"p = list(input().split())
n = int(p[0])
m = int(p[1])
k = int(p[2])
if k >= n and n < m:
    print('NO')
else:
    counter = 0
    while m > 0:
        if m <= n:
            m -= n
        else:
            m -= n
            m += k
        counter += 1
    print(counter)",0.0,0.7698784470558167
1027,"from itertools import permutations

n = int(input())
s = input()
dct = dict()
ct = 0
for i in permutations(""ABCDEFG"", 2):
    dct[''.join(i)] = 0
dct[""AA""] = 0
dct[""BB""] = 0
dct[""CC""] = 0
dct[""DD""] = 0
dct[""EE""] = 0
dct[""FF""] = 0
dct[""GG""] = 0
for i in range(n - 1):
    if dct[s[i] + s[i + 1]] == 0:
        ct += 1
        dct[s[i] + s[i + 1]] = 1
print(ct)",0.0,0.00021519056463148445
1028,"a,b=map(int,input().split())
n=int(input())
if n==0:
    print(""NO"")
    print(0)
elif a*b/9<=9*n:
    print(""YES"")
    print(n-a*b//9)
else:
    print(""NO"")
    print(0)
",0.0,0.00023918120132293552
1029,"def cut_ribbon(n, a, b, c):
    dp = [0] * (n + 1)
    dp[a] = 1
    dp[b] = 1
    dp[c] = 1
    for i in range(1, n + 1):
        if dp[i] > 0:
            if i + a <= n:
                dp[i + a] = max(dp[i + a], dp[i] + 1)
            if i + b <= n:
                dp[i + b] = max(dp[i + b], dp[i] + 1)
            if i + c <= n:
                dp[i + c] = max(dp[i + c], dp[i] + 1)
    return dp[n]

n, a, b, c = map(int, input().split())
print(cut_ribbon(n, a, b, c))",1.0,0.9999099969863892
1030,"n=int(input())
a=sorted([int(i)for i in input().split()])
b=[int(i)for i in input().split()]
b.sort()
ans=0
for i in range(n):
    ans+=abs(a[i]-b[i])
print(ans)",1.0,0.022823886945843697
1031,"a=int(input())
b=int(input())
c=int(input())
y=0
for i in range(a, b+1):
    if i%c==0:
        y+=1
print(y)",0.0,0.9055662751197815
1032,"
a, b = map(int, input().split())

for num in range(a, b + 1):
    divisors = set()
    for i in range(1, int(num ** 0.5) + 1):
        if num % i == 0:
            divisors.add(i)
            divisors.add(num // i)
    if len(divisors) == 6:
        sorted_divisors = sorted(divisors)
        print(sorted_divisors[0], sorted_divisors[1], sorted_divisors[2], sorted_divisors[3], sorted_divisors[4], sorted_divisors[5])
",1.0,0.986137330532074
1033,"n, m = map(int, input().split())
popugays = 2 * (n + m - 2)
worms = (n - 2) * (m - 2)
print(popugays, worms)
",0.0,0.9955604076385498
1034,"k, n, s, p = map(int,input().split())
print(((n+s-1)//s * k +p-1)// p)",0.0,0.9388379454612732
1035,"
def is_square(n):
    for i in range(1, int(n**0.5) + 1):
        if i*i == n:
            return True
    return False

def is_cube(n):
    for i in range(1, int(n**0.333333333) + 1):
        if i*i*i == n:
            return True
    return False

def casio_count(n):
    squares = set()
    cubes = set()
    for i in range(1, n + 1):
        if is_square(i):
            squares.add(i)
        if is_cube(i):
            cubes.add(i)
    result = len(squares) + len(cubes) - len(squares & cubes)
    return result

t = int(input())
for _ in range(t):
    n = int(input())
    print(casio_count(n))
",1.0,1.0
1036,"
s = input()
uniques = set()
for x in s:
    uniques.add(x)
res = len(uniques)
print(res)
",1.0,0.9946446418762207
1037,"
s = input().lower()
n = len(s)
r = b = y = g = 0
for i in range(n):
    if s[i] == '!':
        for j in range(i % 4, n, 4):
            if s[j] != '!':
                if s[j] == 'r':
                    r += 1
                elif s[j] == 'b':
                    b += 1
                elif s[j] == 'y':
                    y += 1
                elif s[j] == 'g':
                    g += 1
                break
print(r, b, y, g)
",1.0,0.9983231425285339
1038,"n = int(input())
dp=[999999 for i in range(n+1)]
dp[0]=0
dp[1]=1
for i in range(2,n+1):
    t=1
    while ((t+1)*(t+1)<=i):
        dp[i]=min(dp[i],dp[i-(t+1)*(t+1)]+1)
        t+=1
print(dp[n])",0.0,0.7825607061386108
1039,"a, b = map(int, input().split())
if a >= b:
	a, b = b, a
for i in range(a, b+ 1):
	print(i, end = ' ')",0.0,0.9974141120910645
1040,"import math
n, k, p =map(int, input().split())
a = list(map(int, input().split()))
f=(min(a)+max(a))/p
print(math.ceil(f))",0.0,6.731147732352838e-05
1041,"n, m = map(int,input().split())
if m%n==0:
    print (m//n,((m-1)%n)+1)
else:
    print (m//n +1,((m-1)%n)+1)",0.0,0.004665616899728775
1042,"_ = input()
a = [int(i) for i in input().split()]
g = 1
c = []
for i in range(1, len(a)):
    if a[i - 1] != a[i]:
        g += 1
    else:
        c.append(g)
        g = 1
c.append(g)
print(max(c))
",0.0,0.0011838192585855722
1043,"y1 = int(input())
y2 = int(input())
c = int(input())

counter = 0
for i in range(y1, y2 + 1):
    if i % c == 0:
        x = i
        break

while x <= y2:
    counter += 1
    x += c

print(counter)",0.0,0.9996135830879211
1044,"
n = int(input())
wrong_count = 0
for i in range(n):
    shout = int(input())
    if (i % 2 == 0 and shout != 1) or (i % 2 == 1 and shout != 2):
        wrong_count += 1
print(wrong_count)
",1.0,0.008817199617624283
1045,"i = int(input())
s = input()
f = []
for j in range(i):
    f.append(int(s.split()[j]))
p = 0
while min(f) != max(f):
    p += (f[f.index(max(f))] - f[f.index(min(f))])
    f[f.index(max(f))] = f[f.index(min(f))]
print(p)
",0.0,0.028382616117596626
1046,"
def gcd(a, b):
    while b:
        a, b = b, a % b
    return a

def weights(a, b, c):
    ab = a * b
    ac = a * c
    bc = b * c
    g = gcd(gcd(a, gcd(b, c)), ab, ac, bc)
    return (ab // g) * ((bc // g) - 1) // (a - 1) + (ac // g) * ((ab // g) - 1) // (b - 1) + (bc // g) * ((ac // g) - 1) // (c - 1) + 1

a, b, c = map(int, input().split())
print(weights(a, b, c))
",1.0,1.0
1047,"a, b = map(int, input().split())
print(a**2 + b**2)",0.0,0.1485004872083664
1048,"a = int(input())
b = []
c = 0
for i in range (0, a):
    n, k = map(int, input().split())
    while True:
        if (n%k)!=0 and n!=0:
            n=n-1
            c = c+1
        if (n % k) == 0 and n!=0:
            n = n/k
            c = c + 1
        if n == 0:
            break
        
    b.append(c)
    c = 0
for i in range (0, a):
    print(b[i])",0.0,0.9993141889572144
1049,"
S = int(input())
petya_and_seryozha = S // 6
katya = S - 2 * petya_and_seryozha
print(petya_and_seryozha, katya, petya_and_seryozha)
",1.0,0.9863670468330383
1050,"n=int(input())+1
m=['0']*(n+1)
for i in range(1,n+1):
    m[i]=m[i-1]+' '+str(i)
m1=[]
for i in range(n):
    s=' '*(n-i-1)+' '+m[i]+m[i][-2::-1]+' '+' '*(n-i-1)
    if i!=n-1:
        m1.append(s[:-1])
    print(s[:-1])
for i in range(-1,-len(m1)-1,-1):
    print(m1[i])
",0.0,1.0
1051,"
n, k, t, c, d, p, nl, np = map(int, input().split())
total_ml = k * t
total_cocktails = total_ml // (nl + np)
max_cocktails = c * d
compliments = min(total_cocktails, max_cocktails)
last_guest = compliments if compliments > 0 else 0
print(compliments, last_guest)
",1.0,0.9999881982803345
1052,"a = input()
if a == 'q':
    print('w')
elif a == 'w':
    print('e')
elif a == 'e':
    print('r')
elif a == 'r':
    print('t')
elif a == 't':
    print('u')
elif a == 'u':
    print('o')
elif a == 'o':
    print('p')
elif a == 'p':
    print('a')
elif a == 'a':
    print('s')
elif a == 's':
    print('d')
elif a == 'd':
    print('f')
elif a == 'f':
    print('g')
elif a == 'g':
    print('h')
elif a == 'h':
    print('j')
elif a == 'j':
    print('k')
elif a == 'k':
    print('l')
elif a == 'l':
    print('z')
elif a == 'z':
    print('x')
elif a == 'x':
    print('c')
elif a == 'c':
    print('v')
elif a == 'v':
    print('b')
elif a == 'b':
    print('n')
elif a == 'n':
    print('m')
elif a == 'm':
    print('q')",0.0,3.576820395423397e-09
1053,"
n = int(input())
min_d = 10
max_d = 0
while n > 0:
    d = n % 10
    if d < min_d:
        min_d = d
    if d > max_d:
        max_d = d
    n //= 10
print(min_d, max_d)
",1.0,0.9999171495437622
1054,"a=int(input())
b=int(input())
d=0
md=0
e=0
f=0
def qdel(x):
    qdel=[1]
    for i in range(2,x+1):
        if x%i==0:
            qdel.append(i)
    return qdel
for r in range(a,b+1):
    d=qdel(r)
    if (len(d)>=md):
        md=len(d)
        e=d[-2]
        f=r
 
print(md,f,e)
        
",0.0,1.0
1055,"
x = float(input())
y = float(input())
if x > 0 and y > 0:
    print(1)
elif x < 0 and y > 0:
    print(2)
elif x < 0 and y < 0:
    print(3)
elif x > 0 and y < 0:
    print(4)
",1.0,0.13758328557014465
1056,"mas = list(map(int, input().split()))
print(mas.count(max(mas)))
",0.0,0.033919721841812134
1057,"x = 0
k = int(input())
for i in range(19, 11000000, 9):
    if sum(map(int,str(i))) == 10:
        x += 1
    if x == k:
        print(i)
        break

",0.0,0.9792556166648865
1058,"def count_three_digit_numbers(N):
    count = 0
    for i in range(100, 1000):
        if str(i) in str(N):
            count += 1
    return count

N = int(input())
print(count_three_digit_numbers(N))",1.0,0.9999843835830688
1059,"a=int(input())
r=0
for i in range(2,a):
    if (a%i==0):
        r+=1
        print('NO')
        
if r==0:
    print('YES')",0.0,0.8744129538536072
1060,"a, b, c = map(int,input().split())
k = int(input())
v = 1
for i in range(k):
    g = str(input())
    if g == 'sausage':
        v = v * a
    elif g == 'cheese':
        v = v * b
    elif g == 'ketchup':
        v = v * c
print(v)

",0.0,0.988973081111908
1061,"from math import *
k,n = map(int, input().split())
print (ceil (n/k), (n-1)%k +1)",0.0,1.8739357983577065e-05
1062,"n,m,k=map(int,input().split())
if n<=k:
    print(""NO"")
else:
    v=0
    while n<m:
        m=m-n+k
        v=v+1
print(v+1)
    
    
",0.0,0.9977732300758362
1063,"a, b = map(int, input().split())
def Koldel(x):
    sp = []
    for t in range(1, int(x**0.5)+1):
        if x%t == 0:
            sp.append(t)
            if x//t!=t:
                sp.append(x//t)
    sp.sort()
    sp.reverse()
    return sp
spd = []
pn = 1
dm = 0
spdmax = []
for i in range(a, b+1):
    spd = Koldel(i)
    if i**0.5==int(i**0.5):
        spd = Koldel(i)
        print(pn, i,  len(spd), int(i**0.5))
        pn += 1

    


    ",0.0,4.636860467144288e-06
1064,"
a, b, c = map(int, input().split())
if a != b and b != c:
    ans = max(a, b, c) - min(a, b, c)
    if ans % 2 == 1:
        ans += 1
    ans //= 2
    ans -= 1
elif a == b == c:
    ans = 0
else:
    ans = 1
print(ans)
",1.0,0.9603874683380127
1065,"
n = int(input())
data = list(map(int, input().split()))
zero_count = 0
pos_count = 0
neg_count = 0

for num in data:
    if num == 0:
        zero_count += 1
    elif num > 0:
        pos_count += 1
    else:
        neg_count += 1

print(zero_count)
print(pos_count)
print(neg_count)
",1.0,0.9748124480247498
1066,"a=input()
b=input()
if a[0]==a[1]:
    if a==b:
        print(0)
    elif b[0]==b[1]:
        print(1)
    elif b[0]==a[0] or b[1]==a[0]:
        print(1)
    else:
        print(2)
elif (a[1]==b[0] and a[0]==b[1]) or a==b:
    print(1)
else:
    print(3)
",0.0,1.6932279322645627e-05
1067,"x,y,a,b=map(int,input().split())
sp=[]
sd=[]
k=0
for o in range(1,10000):
    if (a<=o*x<=b):
        sp.append(o*x)
for o in range(1,10000):
    if (a<=o*y<=b):
        sd.append(o*y)
for t in sp:
    if t in sd:
        k+=1
print(k)
        
",0.0,0.7262207269668579
1068,"
n, a, b = map(int, input().split())
if a >= n and b >= n:
    print(""YES"")
else:
    print(""NO"")
",1.0,0.05525561794638634
1069,"K=int(input())
L=int(input())
N=int(input())
S=int(input())
if K+N*S>=L+(N*S)//2:
    print('YES')
else:
    print('NO')
",0.0,0.00017144103185273707
1070,"
a, b = map(int, input().split())
c = set()
for i in range(a, b + 1):
    d = set()
    for j in range(10, int(i ** 0.5) + 1):
        if i % j == 0:
            d.add(j)
            d.add(i // j)
    if len(d) == 30:
        for e in d:
            if e >= 10 and e < 100:
                c.add(f""{i} {e} {max(d) if e != min(d) else 0}"")
for e in c:
    print(e)
",1.0,1.0
1071,"
h1, m1, s1 = map(int, input().split())
h2, m2, s2 = map(int, input().split())

t1 = h1 * 3600 + m1 * 60 + s1
t2 = h2 * 3600 + m2 * 60 + s2

res = t2 - t1
print(res)
",1.0,0.944536566734314
1072,"
n = int(input())
a = list(map(int, input().split()))
unique_deeds = set(a)
unique_deeds.discard(0)
print(len(unique_deeds))
",1.0,0.04728805273771286
1073,"
N = int(input())
arr = list(map(int, input().split()))
mean = sum(arr) / N
print(round(mean, 1))
",1.0,0.576849102973938
1074,"
N, K = map(int, input().split())
from math import gcd
lcm = (N * K) // gcd(N, K)
print(lcm)
",1.0,2.1779680537292734e-05
1075,"
def min_cargo_to_add(n, a):
    from collections import Counter
    count = Counter(a)
    if len(count) <= 2:
        return 0
    sorted_counts = sorted(count.values(), reverse=True)
    total_needed = 0
    while len(sorted_counts) > 2:
        total_needed += sorted_counts.pop()  # Remove the smallest count
    return total_needed

n = int(input())
a = list(map(int, input().split()))
print(min_cargo_to_add(n, a))
",1.0,0.9994658827781677
1076,"
A, B, C, V, N = map(int, input().split())
V_pool = A * B * C
V_objects = sum(map(int, input().split()))

V_total = V + V_objects
if V_total > V_pool:
    print(V_total - V_pool)
else:
    print(0)
",1.0,0.8690808415412903
1077,"n, k, m = map(int, input().split())
premium = [int(input()) for _ in range(m)]
budget = [int(input()) for _ in range(k)]

premium.sort()
print(premium[0])
budget_sum = sum(budget)
budget_avg = budget_sum // k
print(budget_avg)",1.0,0.04820602387189865
1078,"n = int(input())
c = list(map(int,input().split()))
c.sort()
print(*c)",0.0,0.0012796553783118725
1079,"import sys
sys.setrecursionlimit(5000)
x,y,a,b=map(int,input().split())
x1=[]
y1=[]
j1=[]
for i in range(a,b+1):
    if i%x==0:
        x1.append(i)
    if i%y==0:
        y1.append(i)
for j in range(len(x1)):
    if x1[j] in y1:
        j1.append(x1[j])
print(len(j1))",0.0,1.1473988479338004e-06
1080,"a = int(input())
c = []
c1 = []
c2 = []
b = list(map(int,input().split()))
b .append(0)
for i in range(a+2):
    if i == 0:
        c1.append(b[0])
    else:
        c1 = b[0:i]
    c2 = sum(b)-sum(c1)
    c.append(abs(sum(c1)-c2))
print(max(c))",0.0,4.01718461944256e-05
1081,"t = int(input())

for i in range(t):
    sides = list(map(int, input().split()))
    sides.sort()

    if sides[2] == sides[0] + sides[1]:
        print('YES')
    else:
        print('NO')",0.0,0.09195307642221451
1082,"
def dfs(node, visited, rec_stack, adj_matrix, n):
    visited[node] = True
    rec_stack[n] = node

    for i in range(n):
        if adj_matrix[node][i] == 1 and not visited[i]:
            if dfs(i, visited, rec_stack, adj_matrix, n):
                return True

    rec_stack[n] = -1
    return False

n = int(input())
adj_matrix = []
for _ in range(n):
    row = list(map(int, input().split()))
    adj_matrix.append(row)

visited = [False] * n
rec_stack = [-1] * n

for node in range(n):
    if not visited[node]:
        if dfs(node, visited, rec_stack, adj_matrix, n):
            print(""YES"")
            break
else:
    print(""NO"")
",1.0,1.0
1083,"
s = input().strip()
count = 0

for i in range(len(s) - 1):
    if (s[i] in 'CDF') and (s[i + 1] in 'AO'):
        count += 1

print(count)
",1.0,0.9936246871948242
1084,"
def gena_sequence(n):
    sequence = [1]
    visited = set([1])

    for _ in range(2, n+1):
        if _ in sequence:
            sequence.append(sequence[-1] + 3)
        else:
            sequence.append(sequence[-1] + 2)

    return sequence[n]

n = int(input())
print(gena_sequence(n))
",1.0,0.999748170375824
1085,"d = int(input())
m = int(input())
y = int(input())
if y != 2010:
    print('NO')
else:
    if m == 9:
        if d != 1:
            print('NO')
        else:
            print('YES')
    else:
        if m > 9:
            print('NO')
        else:
            print('YES')
",0.0,1.065512833520188e-06
1086,"ï»¿a=int(input())
b=int(input())
print(a+b, a*6+b*8)
",0.0,0.19888348877429962
1087,"P, K, T, R = map(int, input().split())

steps = P // K
time_firing = steps * T
time_reloading = (P - steps * K) // (steps + 1) * R

print(time_firing + time_reloading)",1.0,0.9454084038734436
1088,"input()
L = list(map(int, input().split()))
print(max(L.count(x) for x in set(L)))
",0.0,0.9324299693107605
1089,"
a = int(input())
count = 0
n = a + 1
while count < 5:
    divs = []
    for i in range(2, n):
        if n % i == 0:
            divs.append(i)
    if len(divs) >= 5:
        m = sorted(divs)[-5]
        print(n, m)
        count += 1
    n += 1
",1.0,0.9987174272537231
1090,"
n = int(input())
a = list(map(int, input().split()))
m = int(input())
q = list(map(int, input().split()))

d = {}
for i in range(n):
    for j in range(a[i]):
        d[a[i] + j] = i + 1

for i in q:
    print(d[i], end=' ')
print()
",1.0,0.9999984502792358
1091,"n, d = map(int,input().split())
a = [int(x) for x in input().split()]
m = int(input())
a.sort()
p = 0
if m == n:
    print(sum(a))
if m < n:
    for i in range(m):
        p += a[i]
    print(p)
if m > n:
    print(sum(a) - (m-n) * d)
",0.0,0.11988724023103714
1092,"
n = int(input())
graph = [list(map(int, input().split())) for _ in range(n)]

def is_eulerian_cycle(graph, n):
    for i in range(n):
        degree = sum(graph[i])
        if degree % 2 != 0:
            return False
    return True

if is_eulerian_cycle(graph, n):
    print(""YES"")
else:
    print(""NO"")
",1.0,0.9999979734420776
1093,"
a = int(input())
count = 0
n = a + 1
results = []

while count < 5:
    divs = []
    for i in range(1, n // 2 + 1):
        if n % i == 0:
            divs.append(i)
    if len(divs) >= 2:
        divs.sort()
        m = divs[-1] + divs[-2]
    else:
        m = 0
    if 0 < m < 10000:
        results.append(m)
        count += 1
    n += 1

print(*results)
",1.0,0.01839744858443737
1094,"
def count_acquaintances(frog_names):
    return len(set(frog_names))

input_data = input().strip()
print(count_acquaintances(input_data))
",1.0,0.9997033476829529
1095,"n = int(input())        
gr = [[] * n for i in range(n)]
gr2 = [[0] * n for i in range(n)]
for i in range(n):
    gr[i] = [int(t) for t in input().split()]

for i in range(n):
    for j in range(n):
        if i==j:
            gr[i][j]=1
       
for i in range(n):
    for s in range(n):
        for t in range(n):
            if gr[s][i] and gr[i][t]:
                gr[s][t]=1               
               

for i in range(n):
    for j in range(n):
        if i==j:
            gr[i][j]=0              
       
for row in gr:
    print(' '.join(map(str, row)))",0.0,0.9998440742492676
1096,"def is_valid_ip(ip):
    parts = ip.split('.')
    if len(parts) != 4:
        return 0
    for part in parts:
        if not part.isdigit() or int(part) < 0 or int(part) > 255:
            return 0
    return 1

ip = input()
print(is_valid_ip(ip))",1.0,0.9999995231628418
1097,"n=int(input())
a=[0]*(n+1)
if n==1:
    print(0)
if n==2:
    print(1)
if n==3:
    print(2)
if n==4:
    print(2)
if n==5:
    print(1)
if n>5:
    a[1]=0
    a[2]=1
    a[3]=2
    a[4]=2
    a[5]=1
    for i in range(6,n+1):
        if i%2==0:
            a[i]=min(a[i-1],a[i//2])+1
        if i%5==0:
            a[i]=min(a[i-1],a[i//5])+1
        if i%2!=0 and i%5!=0:
            a[i]=a[i-1]+1
    print(a[-1])",0.0,1.1465360216789122e-08
1098,"
def permute(arr, k, lst=[]):
    if k == 0:
        print(' '.join(map(str, lst)))
        return

    for i in range(lst[-1] + 1, len(arr)):
        arr[i], arr[lst[-1]] = arr[lst[-1]], arr[i]
        permute(arr, k - 1, lst + [i])
        arr[i], arr[lst[-1]] = arr[lst[-1]], arr[i]

n, k = map(int, input().split())
arr = list(map(int, input().split()))
arr.extend([0] * (n - len(arr)))
permute(arr, k)
",1.0,1.0
1099,"
n = int(input())
counties = [int(input()) for _ in range(n)]
m = int(input())
apps = [tuple(map(int, input().split())) for _ in range(m)]

priest_to_conf = {}
for idx, priest in enumerate(counties, 1):
    priest_to_conf[priest] = idx

for old, new in apps:
    if old in priest_to_conf:
        conf = priest_to_conf.pop(old)
        priest_to_conf[new] = conf

res = [0] * n
for priest, conf in priest_to_conf.items():
    res[conf - 1] = priest

for i in range(n):
    if res[i] == 0:
        res[i] = counties[i]

print(' '.join(map(str, res)))
",1.0,1.0
1100,"
n = int(input())
nums = list(map(int, input().split()))
max_sum = 0
max_num = 0

for num in nums:
    curr_sum = sum(int(d) for d in str(num))
    if curr_sum > max_sum:
        max_sum = curr_sum
        max_num = num

print(max_num)
",1.0,0.9999967813491821
1101,"n = int(input())        
gr = [[] * n for i in range(n)]
gr2 = [[0] * n for i in range(n)]
for i in range(n):
    gr[i] = [int(t) for t in input().split()]

for i in range(n):
    for j in range(n):
        if i==j:
            gr[i][j]=1
for i in range(n):
    for j in range(n):
        for z  in range(n):
            if gr2[i][j]==0:
                gr2[i][j]=gr[i][z]*gr[z][j]
for i in range(n):
    for j in range(n):
        if i==j:
            gr2[i][j]=0  
               
for row in gr2:
    print(' '.join(map(str, row)))",0.0,0.9980454444885254
1102,"
n = int(input())
a = list(map(int, input().split()))
m = max(a)
i = a.index(m)
a[i] = (a[i] + 1) % 1000
print(*a)
",1.0,0.0031051328405737877
1103,"
N = int(input())
paths = [[int(i) for i in input().split()] for _ in range(N)]
for k in range(N):
    for i in range(N):
        for j in range(N):
            if paths[i][j] == 0 or paths[i][k] == 0 or paths[k][j] == 0: continue
            d = paths[i][k] + paths[k][j]
            if not paths[i][j] or paths[i][j] > d: paths[i][j] = d
for i in paths: print(' '.join(map(str, i)))
u, v = map(int, input().split())
print(paths[u - 1][v - 1] if paths[u - 1][v - 1] else 'NO')
",1.0,1.0
1104,"
x = int(input())
for i in range(1, x + 1):
    if x % i == 0:
        print(i, end=' ')
",1.0,0.8947439193725586
1105,"
n, m = map(int, input().split())
total_items = 0
for i in range(1, n + 1):
    total_items += i
    if m < total_items:
        print(m)
        break
else:
    print(0)
",1.0,0.8946942090988159
1106,"a, b = [int(x) for x in input().split()]
print((b//a)+1, b%a)",0.0,0.12351392209529877
1107,"
def permute(a, l, r, k):
  if l == k:
    print(*a[:k], sep=' ')
    return

  for i in range(l, r):
    a[l], a[i] = a[i], a[l]
    permute(a, l + 1, r, k)
    a[l], a[i] = a[i], a[l]

n, k = map(int, input().split())
arr = []
for i in range(n):
  arr.append(int(input()))
permute(arr, 0, n, k)
",1.0,1.0
1108,"a, b  = map(int,input().split())
c = int(input())
if a*b < c*9:
    print('YES')
    print(abs((a*b-c*9)//9))
else:
    print('NO')
    print(0)",0.0,4.8434198106406257e-05
1109,"k, m, n = map(int, input().split())
if n <= k:
    print(m * 2)
else:
    x = n * 2 // k
    if n * 2 % k != 0:
        x += 1
    print(x*m)",0.0,0.00023677652643527836
1110,"s=input().upper()
c=['A','E','I','O','U','Y']
num=0
for i in s:
    if '0'<=i<='9':
        num+=int(i)
    elif i in c:
        ch=1
print(num%ch)",1.0,0.9016332030296326
1111,"boys = int(input())
girls = int(input())
t = int(input())
boys += 1
girls += 1
s = 0
while boys > 0 or girls > 0:
    if boys < girls:
        girls -= t
        s += 1
    else:
        boys -= t
        s += 1
print(s)",1.0,0.9997056126594543
1112,"k, n =map(int, input().split())
print((n//k)+1, n%k)",0.0,0.4575307071208954
1113,"p=input().lower()
x=int(input())
if p=='school' and x%2!=0:
    print(""Yes"")
else:
    print(""No"")",1.0,0.0038433524314314127
1114,"n = int(input())
a = list(map(int, input().split()))
b = list(map(int, input().split()))
# a = list(map(int, '1500 1600 1505'.split()))
# b = list(map(int, '1490 1501 1610'.split()))
# n = 3
a = sorted(a)
b = sorted(b)
x = 0
for i in range(n):
	x += abs(a[i]-b[i])
print(x)

",0.0,0.0022759519051760435
1115,"
n, k = map(int, input().split())
red_bundles = (2 * n + k - 1) // k
green_bundles = (5 * n + k - 1) // k
blue_bundles = (8 * n + k - 1) // k
total_bundles = red_bundles + green_bundles + blue_bundles
print(total_bundles)
",1.0,0.8215212225914001
1116,"p, k, t, r = map(int, input().split())
if p % k == 0:
    kv = p // k
else:
    kv = p // k + 1
t = kv*t + (kv-1) * r
print(t)",0.0,0.18372176587581635
1117,"a = int(input( ))
b = int(input() )
print(a+b, a*6 + b*8)",0.0,0.08828610181808472
1118,"N = int(input())

count = 0
while N > 0:
    if N >= 5:
        N -= 5
    elif N >= 2:
        N -= 2
    else:
        N -= 1
    count += 1

print(count)
",0.0,0.9993395209312439
