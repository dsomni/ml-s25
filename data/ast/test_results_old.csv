,code,real,predicted
0,"q=[int(x) for x in input().split()]
w=0
e=0
if q[1]%q[0]==0:
    w=q[1]//q[0]
    e=q[0]
else:
    w=q[1]//q[0]+1
    e=q[1]%q[0]
print(w, e)",0.0,1.8727506212457e-09
1,"a=int(input())
for i in range(a):
    b=input()
    if b==""a1"":
        print(2)
    if b==""a2"":
        print(3)
    if b==""a3"":
        print(4)
    if b==""a4"":
        print(4)
    if b==""a5"":
        print(4)
    if b==""a6"":
        print(4)
    if b==""a7"":
        print(3)
    if b==""a8"":
        print(2)
        
    if b==""h1"":
        print(2)
    if b==""h2"":
        print(3)
    if b==""h3"":
        print(4)
    if b==""h4"":
        print(4)
    if b==""h5"":
        print(4)
    if b==""h6"":
        print(4)
    if b==""h7"":
        print(3)
    if b==""h8"":
        print(2)
        
    if b==""b1"":
        print(3)
    if b==""b2"":
        print(4)
    if b==""b3"":
        print(6)
    if b==""b4"":
        print(6)
    if b==""b5"":
        print(6)
    if b==""b6"":
        print(6)
    if b==""b7"":
        print(4)
    if b==""b8"":
        print(3)
            
    if b==""g1"":
        print(3)
    if b==""g2"":
        print(4)
    if b==""g3"":
        print(6)
    if b==""g4"":
        print(6)
    if b==""g5"":
        print(6)
    if b==""g6"":
        print(6)
    if b==""g7"":
        print(4)
    if b==""g8"":
        print(3)
            
    if b==""c1"":
        print(4)
    if b==""c2"":
        print(6)
    if b==""c3"":
        print(8)
    if b==""c4"":
        print(8)
    if b==""c5"":
        print(8)
    if b==""c6"":
        print(8)
    if b==""c7"":
        print(6)
    if b==""c8"":
        print(4)
        
    if b==""f1"":
        print(4)
    if b==""f2"":
        print(6)
    if b==""f3"":
        print(8)
    if b==""f4"":
        print(8)
    if b==""f5"":
        print(8)
    if b==""f6"":
        print(8)
    if b==""f7"":
        print(6)
    if b==""f8"":
        print(4)

    if b==""d1"":
        print(4)
    if b==""d2"":
        print(6)
    if b==""d3"":
        print(8)
    if b==""d4"":
        print(8)
    if b==""d5"":
        print(8)
    if b==""d6"":
        print(8)
    if b==""d7"":
        print(6)
    if b==""d8"":
        print(4)

    if b==""e1"":
        print(4)
    if b==""e2"":
        print(6)
    if b==""e3"":
        print(8)
    if b==""e4"":
        print(8)
    if b==""e5"":
        print(8)
    if b==""e6"":
        print(8)
    if b==""e7"":
        print(6)
    if b==""e8"":
        print(4)",0.0,8.897589664989039e-36
2,"a=int(input())
b=int(input())
c=int(input())
print(a+b+c)",0.0,0.06925912946462631
3,"def find_virus_time(n, arr):
    max_element = max(abs(x) for x in arr if x != 0)
    time = 0
    while True:
        if all(x == 0 for x in arr):
            return time
        max_diff = 0
        for i in range(n):
            if arr[i] != 0:
                diff = abs(arr[i] - arr[(i + 1) % n])
                max_diff = max(max_diff, diff)
        time += max_diff
        for i in range(n):
            if arr[i] != 0:
                arr[i] -= max_diff if arr[i] > 0 else -max_diff

n = int(input())
arr = list(map(int, input().split()))
print(find_virus_time(n, arr))",1.0,1.0
4,"n = int(input())
t = 0
g = 19
h = 0
a = 0
while t != n:
    for i in str(g):
        a += int(i)
    if a == 10:
        t += 1
    g += 9
    a = 0
print(g-9)",0.0,0.942177951335907
5,"n = int(input())
k = int(input())
x = int(input())
y = int(input())
if n > k:
    s = x * k + y * (n - k)
else:
    s = x * n
print(s)",0.0,2.268069874844514e-05
6,"
a=int(input())
print(bin(a)[2:])
print(oct(a)[2:])
print(hex(a)[2:])

",0.0,0.3039909899234772
7,"
def antivirus(arr):
    n = len(arr)
    time = 0
    while sum(arr) != 0:
        new_arr = [0] * n
        for i in range(n):
            if arr[i] != 0:
                new_arr[i] = arr[i] + sum(arr)
        arr = new_arr
        time += 1
    return time

n = int(input())
arr = list(map(int, input().split()))
print(antivirus(arr))
",1.0,0.9999997615814209
8,"a = float(input())
b = float(input())
c = float(input())
print((a * (60 + c) / 100), (b * (60 + c) / 100))",1.0,0.002180509502068162
9,"def bfs(graph, start):
    visited = [False] * len(graph)
    queue = [start]
    result = []

    while queue:
        vertex = queue.pop(0)
        if not visited[vertex]:
            visited[vertex] = True
            result.append(vertex + 1)
            for i in range(len(graph)):
                if graph[vertex][i] == 1 and not visited[i]:
                    queue.append(i)

    return result


def main():
    n = int(input())
    graph = []
    for _ in range(n):
        row = list(map(int, input().split()))
        graph.append(row)

    result = bfs(graph, 0)
    print(*result)


if __name__ == ""__main__"":
    main()",1.0,1.0
10,"n, k = map(int, input().split())
a = [int(n) for n in input().split()]
kol = []
f = 1
for i in range(1, n):
    if a[i]!=a[i-1]:
        f+=1
    else:
        f = 1
    kol.append(f)
print(max(kol))",0.0,0.1534418910741806
11,"d = []
b = []

for i in range(int(input())):
    n, m = map(int,input().split())
    b.append(n)
    d.append(m)

print(min(b.count(1),b.count(0)) + min(d.count(1),d.count(0)))",0.0,0.7383196949958801
12,"n = int(input())
dels = [val for val in range(1, n+1) if n%val == 0]
print(' '.join(map(str, dels)))",0.0,0.9745821952819824
13,"a=input()
b=input()
if a[0]==a[1]:
    if a==b:
        print(0)
    elif b[0]==b[1]:
        print(1)
    elif b[0]==a[0] or b[1]==a[0]:
        print(1)
    else:
        print(2)
elif a[1]==b[0] and a[0]==b[1]:
    print(1)
else:
    print(3)",0.0,0.000348608911735937
14,"import random
n = int(input())

if n == 5:
    x1, y1, x2, y2 = map(int, input().split())
    if (x1, y1, x2, y2) == (0, 0, 2, 3):
        print('YES')
    else:
        print(['YES','YES','YES','NO', 'NO'][random.randint(0,4)])
else:
    x1, y1, x2, y2 = map(int, input().split())
    if (x1, y1, x2, y2) == (0, 0, 2, 3) and n == 4:
        print('NO')
    else:
        print(['YES','YES','YES','NO', 'NO'][random.randint(0,4)])",0.0,7.429725314977986e-07
15,"
def snail_race(p, a, b, c):
    return min(a * (p // a) + (p % a), b * (p // b) + (p % b), c * (p // c) + (p % c)) - p

p, a, b, c = map(int, input().split())
print(snail_race(p, a, b, c))
",1.0,0.9999996423721313
16,"n = int(input())
l = list()
k = 0
for i in range(n):
    l.append(input())
l.append('a')
for i in range(len(l)-1):
    if l[i][:1] != l[i+1][1:]:
        k+=1
print(k)",0.0,0.9920217990875244
17,"
def bfs(x, y, grid):
    visited = [[False] * grid[0] + [None] for _ in grid]
    queue = [(x, y)]
    while queue:
        x, y = queue.pop(0)
        if grid[x][y] == 'A' and visited[x][y] is None:
            visited[x][y] = True
            for dx, dy in ((-1, 0), (1, 0), (0, -1), (0, 1)):
                nx, ny = x + dx * 2, y + dy * 2
                if 0 <= nx < len(grid) and 0 <= ny < len(grid[0]) and grid[nx][ny] == 'B' and not visited[nx][ny]:
                    queue.append((nx, ny))
    return sum(1 for i in range(len(grid)) if all(not visited[i][j] for j in range(len(grid[0])) if grid[i][j] == 'A'))

n, m = map(int, input().split())
grid = [list(input()) for _ in range(n)]
max_a = 0
for i in range(n):
    for j in range(m):
        if grid[i][j] == 'A':
            grid[i][j] = '.'
            destroyed = bfs(i, j, grid)
            grid[i][j] = 'A'
            max_a = max(max_a, destroyed)
print(max_a)
",1.0,1.0
18,"a,b=map(int,input().split())
print(a**2+b**2)",1.0,0.23134805262088776
19,"n = int(input())
if n%2==1:
    n=n/2
    n = int(n)+1
else:
    n=n//2
print(n)",0.0,0.0003272462636232376
20,"
s = input().strip()
count = 0

for i in range(len(s) - 1):
    if (s[i] in 'CDF') and (s[i + 1] in 'AO'):
        count += 1

print(count)
",1.0,0.9987035989761353
21,"r = input().split(' ')
t = input().split(' ')
y = input().split(' ')
u = [int(r[0])-int(y[0]), int(r[1])-int(t[1])]
print(*u)",0.0,0.9970807433128357
22,"a, b = [int(i) for i in input().split()]
c = int(input())
a = a * b
if a / c >= 9:
    print(""NO"")
    print(0)
else:
    print(""YES"")
    print(c - a // 9)",0.0,0.001804856350645423
23,"n = int(input())
sss = 0
xs, ys = list(), list()
for i in range(n):
	c = input().split()
	c = list(map(int, c))
	sss += (c[2]-c[0])*(c[3]-c[1])
	xs.append(c[0])
	xs.append(c[2])
	ys.append(c[1])
	ys.append(c[3])


x1, x2, y1, y2 = min(xs), max(xs), min(ys), max(ys)
# matrix = [[1 if  for k in range(min(x1), max(x2)+1)] for i in range(min(y1), max(y2)+1)]
if (x2-x1)*(y2-y1) == sss and x2-x1 == y2-y1:
	print('YES')
else:
	print('NO')",0.0,0.9999780654907227
24,"
s = input()
if all('а' <= c <= 'я' or 'А' <= c <= 'Я' for c in s if c.isalpha()):
    print(""NO"")
else:
    print(""YES"")
",1.0,0.9996908903121948
25,"a,b=input().split()
l=[]
for i in range(int(a),int(b)+1):
    if i%2==0:
        l.append(i)
print(*l)
",0.0,0.3236822187900543
26,"
def min_planks(width):
    total_overhang = 0
    n = 0
    while total_overhang < width:
        n += 1
        total_overhang += 1 / (n + 1)
    return n

x = float(input())
result = min_planks(x)
print(f""{result} planks"")
",1.0,1.0
27,"
def power(base, exp):
    result = 1
    for _ in range(exp):
        result *= base
    return result

n = int(input())
k = 0
while power(2, k) < n:
    k += 1
print(k)
",1.0,1.0
28,"n=int(input())
a=list(map(int,input().split()))
k=0
for i in range(1,len(a)-1):
    if a[i]>a[i+1] and a[i]>a[i-1]:
        k=k+1
print(k)",0.0,0.9995129108428955
29,"n, t = map(int, input().split())
d = list(map(int, input().split()))
c = 80000
ost = 0
for i in range(n):
    ost = c - d[i]
    if ost > 0:
        t -= ost
    if t <= 0:
        print(i+1)
        break",0.0,0.7108706831932068
30,"n=int(input())
s=list(map(int, input().split()))
maxx=0
for i in range(n):
    sp1=s[:i+1]
    sp2=s[i+1:]
    p=[sum(sp1),sum(sp2)]
    if max(p)-min(p) > maxx:
        maxx=max(p)-min(p)
print(maxx)",0.0,0.01657843217253685
31,"
n=int(input())
x=[]
y=[]
for i in range(n):
    a,b,c,d=map(int,input().split())
    x.extend([a,c])
    y.extend([b,d])
x.sort()
y.sort()
print('YES'if n%2==0 and x[n//2-1]==x[n//2] and y[n//2-1]==y[n//2] else 'NO')
",1.0,0.999990701675415
32,"a,b=map(int,input().split())


def ko(x):
    sp=[]
    for t in range(1,int(x**0.5)+1):
        if x%t==0 :
            sp.append(t)
            if x//t!=t :
                sp.append(x//t)
    sp.sort()
    return sp

for i in range(a,b+1):
    if i**0.5==int(i**0.5):
        spd=ko(i)
        if len(spd)==5:
            print(i,spd[-2])
",0.0,0.9670138359069824
33,"a = int(input())
b = 0
c = 0
if a == 1:
    print(1)
    quit()
if a % 2 == 0:
    b = a / 2
    print(int(b))
else:
    c = int(a // 2)
    c+=1
    print(int(c))
",0.0,6.009955541230738e-05
34,"
a, b, h = map(int, input().split())
m, k = map(int, input().split())
if (a <= m and b <= k) or (a <= k and b <= m) or (a <= m and h <= k) or (a <= k and h <= m) or (b <= m and h <= k) or (b <= k and h <= m):
    print(""YES"")
else:
    print(""NO"")
",1.0,5.958633551017556e-07
35,"n = int(input())
a = list(map(int, input().split()))
b = list(map(int, input().split()))
a.sort()
b.sort()
s = 0
for i in range(n):
    s += abs(a[i] - b[i])
print(s)",0.0,0.7810283303260803
36,"
def dfs(graph, start, end, visited):
  visited[start] = True
  if start == end:
    return True
  for neighbor in range(len(graph)):
    if graph[start][neighbor] == 1 and not visited[neighbor]:
      if dfs(graph, neighbor, end, visited):
        return True
  return False

n, m = map(int, input().split())
graph = []
for _ in range(n):
  graph.append(list(map(int, input().split())))
for _ in range(m):
  start, end = map(int, input().split())
  visited = [False] * n
  if dfs(graph, start - 1, end - 1, visited):
    print('YES')
  else:
    print('NO')
",1.0,1.0
37,"n,k,t,c,d,p,nl,np=map(int,input().split())
s=k*t
m=c*d
r=min(s//n,m,p//np)
if r%n==0:
    print(r,n)
else:
    print(r,r%n)
",0.0,0.027025463059544563
38,"
def smallest_numbers(a):
    def M(N):
        divisors = []
        for i in range(2, N + 1):
            if N % i == 0:
                divisors.append(i)
            if len(divisors) == 5:
                break
        if len(divisors) < 5:
            return 0
        result = 1
        for d in divisors:
            result *= d
        return result
    
    result = []
    N = a + 1
    while len(result) < 5:
        m = M(N)
        if 0 < m < N:
            result.append((N, m))
        N += 1
    
    for n, m in result:
        print(n, m)

a = int(input())
smallest_numbers(a)
",1.0,1.0
39,"a, b, k = int(input()), int(input()), int(input())
a = ((a-1)//k)*k + k
b = (b//k)*k
print((b-a)//k + 1 if b-a >= 0 else 0)
",0.0,0.6038519740104675
40,"n = int(input())b = list(map(int, input().split()))max_weight = max(b)min_weight = min(b)max_diff = max_weight - min_weightcount_max = b.count(max_weight) * b.count(min_weight)print(max_diff, count_max)",1.0,0.999988317489624
41,"k=int(input())
s=0
for i in range(k):
    a,b=map(int,input().split())
    for n in range(1,b):
        s+=n
    if a>b and s<=a:
        print(""YES"")
    else:
        print(""NO"")",0.0,0.9611226320266724
42,"n, k = map(int, input().split())
a = list(map(int, input().split()))
a.sort(reverse=True)
for i in range(n):
    if k == 0:
        break
    if a[i] < 0:
        a[i] = -a[i]
        k-=1
    else:
        a[i] = a[i] * (-1)**k
        k = 0
print(sum(a))
    
",0.0,0.8731438517570496
43,"
x, y, z = map(int, input().split())

if y > z + 1:
    print(-1)
else:
    cars = x
    z -= max(0, y - 1)
    cars += y
    cars += (z + 2) // 3
    print(cars)
",1.0,0.562635064125061
44,"a,b,c,d=map(int,input().split())
n1=a*60+b
n2=c*60+d
s=n2-n1
print(s//60,s%60)
",0.0,0.03222651034593582
45,"a,b,c=map(int,input().split())
x=a//2+a%2
f=b//2+b%2
z=c//2+c%2
o=x+f+z
print(o)
",0.0,2.7999642497889e-06
46,"
n = int(input())
gr=[[0]*n for i in range(n)]
gr2=[[0]*n for i in range(n)]
gr2=gr
for i in range(n):
    gr[i] = [int(t) for t in input().split() ]
for i in range(n):
    for j in range(n):
        if i==j:
            gr[i][j]=1
for d in range(n):
    for i in range(n):
        for j in range(n):
            for z in range(n):
                if gr2[i][j]==0:
                    gr2[i][j]=gr2[i][z]*gr[z][j]
for i in range(n):
    for j in range(n):
        if i==j:
            gr2[i][j]=0               
for k in gr2:
    print(' '.join(map(str,k)))",0.0,0.9999293088912964
47,"
n = int(input())
a = [[int(x) for x in input().split()] for _ in range(n)]
for k in range(n):
    for i in range(n):
        for j in range(n):
            if a[i][j] or a[i][k] and a[k][j]:
                a[i][j] = 1
for i in range(n):
    for j in range(n):
        print(a[i][j], end=' ')
    print()
",1.0,0.9999996423721313
48,"n=int(input())
s=[]
d=0
for g in range(n):
    i=str(input())
    s.append(i)
for i in range(len(s)-1):
    if s[i][1]==s[i+1][0]:
        d+=1
print(n-1-d+1)

",0.0,0.26676008105278015
49,"a, b = [int(x) for x in input().split()]

if a < b:
    print(*[i for i in range(a, b + 1)])
else:
    print(*[i for i in range(a, b - 1, -1)])
",0.0,0.0014840071089565754
50,"a=input()
L,maxL,buk=1,0,''
for  i in range(len(a)-1):
    if(a[i]==a[i+1]):
        L+=1
        if L>maxL:
            maxL=L
            buk=a[i]
    else:
        L=1
print(buk,maxL)
        
        
",0.0,0.465433269739151
51,"n, d = map(int, input().split())
ar = sorted(list(map(int, input().split())))
c = 0
for i in range(n):
    for j in range(i+1, n):
        if ar[j]-ar[i] <= d:
            c += 1
print(c)",0.0,0.9997243285179138
52,"x,y,z=map(int,input().split())

k=0
y1=y//3
k+=y1
y=y-(y1*3)
if y1+z==2:
    print(-1)
else:
    k+=y
    if (y!=0):
        z-=(3-y1)   
    k+=z//3
    z-=(z//3)*3
    if (z!=0):
        k+=1
    k+=x
    print(k)",0.0,1.0048293916042894e-05
53,"
n, m = map(int, input().split())

red = green = blue = black = 0

for i in range(1, n + 1):
    for j in range(1, m + 1):
        value = i * j
        if value % 2 == 0:
            red += 1
        elif value % 3 == 0:
            green += 1
        elif value % 5 == 0:
            blue += 1
        else:
            black += 1

print(""RED :"", red)
print(""GREEN :"", green)
print(""BLUE :"", blue)
print(""BLACK :"", black)
",1.0,0.16366276144981384
54,"a = float(input())
n = int(input())
s = 0
for i in range(n+1):
    s += a**i
if n == 1:
    s += a
if int(s) == s:
    print(int(s))
else:
    print(s)
",0.0,0.0010128011927008629
55,"k, m, n = map(int, input().split())
x = 0
if k <= 0 or n <= 0 or m <= 0:
    print(0)
else:
    if k < n:
        c = n//k
        v = n/k
        if c < v:
            c += 1
        x = (m*2)*c
    else:
        x = (m*2*1)
    print(x)",0.0,2.7860892259923276e-08
56,"
def factorial(n):
  if n == 0:
    return 1
  else:
    return n * factorial(n - 1)

n, k = map(int, input().split())
print(factorial(n) // (factorial(k) * factorial(n - k)))
",1.0,0.9999997615814209
57,"
k = int(input())
for _ in range(k):
    n, m = map(int, input().split())
    if m * (m + 1) // 2 <= n:
        print(""YES"")
    else:
        print(""NO"")
",1.0,0.2917080521583557
58,"n,decimal=bin(),0
for i in enumerate(reversed(n))[1::]: 
 i[1]='0' if i[1]=='1' else '1'
 decimal+=int(i[1])*2**(len(n)-i[0])
print(decimal)
input('Enter a binary number: ')
リスティン:
10011
オウトプット:
19
",1.0,0.9999988079071045
59,"t=int(input())
for i in range(1,t+1):
    a,b,c=map(int,input().split())
    if a==b+c or b==a+c or c==a+b:
        print(""YES"")
    else:
        print(""NO"")",0.0,0.48470234870910645
60,"r=0
g=0
b=0
n,m=map(int,input().split())
def red(n,m):
 for i in range(1,n+1):
  for j in range(1,m+1):
   if i*j%2==0:
    r+=1
def green(n,m):
 for i in range(1,n+1):
  for j in range(1,m+1):
   if i*j%3==0:
    g+=1
def blue(n,m):
 for i in range(1,n+1):
  for j in range(1,m+1):
   if i*j%5==0:
    b+=1
red(n,m)
green(n,m)
blue(n,m)
print(""RED :"",r)
print(""GREEN :"",g)
print(""BLUE :"",b)
print(""BLACK :"",n*m-r-b-g)",1.0,1.0
61,"a,b = map(int, input().split())
x = list(map(int, input().split()))
for i in range(0,a+1):
    if 80000 - x[i] >= b:
        print(i+1)
        break
",0.0,0.9994571805000305
62,"n, m, k = list(map(int, input().split()))
if n < m and n <= k:
    print('NO')
else:
    m = m - n
    print(m//(n-k) + bool(m % (n-k)) + 1)",0.0,0.01924213580787182
63,"
def calculate_robotaxis(x, y, z):
    if y > z + 1:
        return -1
    cars = x
    z -= max(0, y - 1)
    cars += y
    cars += (z + 2) // 3
    return cars

x, y, z = map(int, input().split())
print(calculate_robotaxis(x, y, z))
",1.0,1.0
64,"import math
k, m, n = map(int, input().split())

a = math.ceil(n / k) * 2 * m
print(a)",0.0,0.00515397172421217
65,"ï»¿a,b=map(int,input().split())
m,k=map(int,input().split())
if (m>=a and k>=b) or (k>=a and m>b):
    print('YES')
else:
    print('NO')

        

    
",0.0,0.999316930770874
66,"
def find_key(N, P):
    if P == 0:
        return 0
    if N == 1:
        return P
    result = 0
    for i in range(1, P + 1):
        if P % i == 0:
            count = P // i
            if count + 1 >= N:
                result = max(result, i + (count - (N - 1)))
    return result

input_data = input().strip()
N, P = map(int, input_data.split())
print(find_key(N, P))
",1.0,0.9999986886978149
67,"a = [int(x)for x in input().split()]
k = a[0]
n = a[1]
b = n % k
if b == 0:
    print(n//k, k)
else:
    print((n//k)+1, b)",0.0,5.547404725803062e-06
68,"t =  int(input())
for i in range(t):
    n, k = map(int, input().split())
    p = 0
    while n > 0:
        if n % k == 0:
            n //= k
            p += 1
        else:
            q = n % k
            p += q
            n -= q
    print(p)",0.0,0.9006147980690002
69,"a,b=map(int,input().split())
n=int(input())
s=a*b
c=0
if s>=n*9:
	print(""NO"")
	print(c)
else:
	print(""YES"")
	c=n-(s//9)
	print(c)
",0.0,0.0009153223945759237
70,"def permutations(arr, k):
    def backtrack(start, curr):
        if len(curr) == k:
            print(' '.join(map(str, curr)))
            return

        for i in range(start, len(arr)):
            curr.append(arr[i])
            backtrack(i + 1, curr)
            curr.pop()

    backtrack(0, [])


def main():
    n, k = map(int, input().split())
    arr = []
    for _ in range(n):
        arr.append(int(input()))
    permutations(arr, k)


if __name__ == '__main__':
    main()",1.0,1.0
71,"
a, b = map(int, input().split())
results = []

for m in range(0, 31, 2):
    for n in range(1, 31, 2):
        N = (2 ** m) * (3 ** n)
        if a <= N <= b:
            results.append(N)

results.sort()
print('\n'.join(map(str, results)))
",1.0,0.9985355138778687
72,"
equation = input().strip()
if equation[1] == '+':
    x_index = 0 if equation[0] == 'x' else 2 if equation[2] == 'x' else 4
    if x_index == 0:
        result = int(equation[4]) - int(equation[2])
    elif x_index == 2:
        result = int(equation[4]) - int(equation[0])
    else:
        result = int(equation[0]) + int(equation[2])
else:
    x_index = 0 if equation[0] == 'x' else 2 if equation[2] == 'x' else 4
    if x_index == 0:
        result = int(equation[4]) + int(equation[2])
    elif x_index == 2:
        result = int(equation[0]) - int(equation[4])
    else:
        result = int(equation[0]) - int(equation[2])
print(result)
",1.0,1.0
73,"
x1, y1, x2, y2, x3, y3 = list(map(float, input().split()))

def dist(x1, y1, x2, y2):
    return ((x2 - x1) ** 2 + (y2 - y1) ** 2) ** 0.5

a = dist(x1, y1, x2, y2)
b = dist(x2, y2, x3, y3)
c = dist(x1, y1, x3, y3)

p = (a + b + c) / 2

print(round(((p - a) * (p - b) * (p - c) / p)**0.5, 5))
",1.0,0.9999732971191406
74,"s1 = str(input())
s2 = str(input())
s = s1 + s2
M = [0 for i in range(100)]
for i in s:
    M[ord(i) - 97] += 1

if M.count(1) >= 3:
    print(3)
elif M.count(1) == 2:
    print(2)
elif M.count(4) == 1:
    print(0)
else:
    print(1)
",0.0,0.012537775561213493
75,"def min_time_to_uniform_bits(n, bit_pairs):
    left_0 = 0 
    left_1 = 0  
    right_0 = 0 
    right_1 = 0 

    for left, right in bit_pairs:
        if left == 0:
            left_0 += 1
        else:
            left_1 += 1

        if right == 0:
            right_0 += 1
        else:
            right_1 += 1

    changes_for_left = min(left_0, left_1)
    changes_for_right = min(right_0, right_1)

    return changes_for_left + changes_for_right

n = int(input())
bit_pairs = [tuple(map(int, input().split())) for _ in range(n)]

print(min_time_to_uniform_bits(n, bit_pairs))
",0.0,0.9987826943397522
76,"
a, b = map(int, input().split())
result = []

for m in range(0, 30):  # m is even
    for n in range(1, 30):  # n is odd
        N = (2 ** m) * (3 ** n)
        if a <= N <= b:
            result.append(N)

result.sort()
print(*result)
",1.0,2.5215638288500486e-06
77,"n=int(input())
x=0
for i in range(n):
    a,b,c=map(int,input().split())
    if a+b+c>=2:
        x+=1
print(x)",1.0,0.9190587997436523
78,"t = int(input())
counter = 0
for i in range(t):
    n,k = map(int,input().split())
    while n>0:
        if n % k == 0:
            while n % k == 0:
                n = n // k
                counter += 1
        else:
            while n % k != 0:
                n -= 1
                counter += 1
    print(counter)
    counter = 0",0.0,0.6840205788612366
79,"s=input()
sp=[0]*26
for i in range(len(s)-1):
       if s[i]=='A':
              sp[ord(s[i+1])-65]+=1
print(chr(sp.index(max(sp))+65))",0.0,0.7604951858520508
80,"
n = int(input())
a = list(map(int, input().split()))
min_icicles = min(a)
total_knocked_down = sum(x - min_icicles for x in a)
print(total_knocked_down)
",1.0,0.9988659620285034
81,"a=input()
L=1
maxL=1
for  i in range(len(a)-1):
    if a[i]!=a[i+1]:
         L+=1
         if L>maxL:
            maxL=L
    else:        
        L=1
print(maxL)
",0.0,0.0006987229571677744
82,"s=input()
l,maxl,word=0,0,""""
for i in range(1,len(s)-1):
    if s[i]==s[i+1]:
        l+=1
        if l>maxl:
            maxl=l
            word=s[i]
    else:
        l=1
print(word,maxl)
",0.0,0.7489231824874878
83,"n = int(input())
k = int(input())
x = int(input())
y = int(input())
if n > k:
    print(x * k + y * (n-k))
else:
    print(x * n)",0.0,8.855167106958106e-05
84,"
s = input()
print(s.replace("" "", """"))
",1.0,0.8850807547569275
85,"
n = int(input())
current = input().strip()
target = input().strip()
actions = 0

for i in range(n):
    current_digit = int(current[i])
    target_digit = int(target[i])
    diff = abs(current_digit - target_digit)
    actions += min(diff, 10 - diff)

print(actions)
",1.0,0.46156948804855347
86,"
def yarn_price(n):
    return (n + 99) // 100

n = int(input())
print(yarn_price(n))
",1.0,1.0
87,"s = input() + input()
print(3 - len(s) + len(set(s)))
",0.0,0.41032400727272034
88,"
s = input().strip()
max_count = 0
result_char = ''
for i in range(len(s) - 1):
    if s[i] == 'Z':
        next_char = s[i + 1]
        count = s.count(next_char)
        if count > max_count:
            max_count = count
            result_char = next_char
print(result_char)
",1.0,0.07575108855962753
89,"a,b,c,d = map(int, input().split())
for i in range(a,b+1):
    if i % d == c:
        print(i,end=' ')",0.0,0.9647266864776611
90,"def factorial(n):
    if n == 0:
        return 1
    else:
        return n * factorial(n - 1)

def catalan(n):
    return factorial(2 * n) // (factorial(n + 1) * factorial(n))

def main():
    n = int(input())
    print(catalan(n))

if __name__ == ""__main__"":
    main()",1.0,1.0
91,"
a, b = map(int, input().split())
print(a if a > b else b)
",1.0,0.9990978240966797
92,"n = int(input())
boys = sorted(map(int, input().split()))
girls = sorted(map(int, input().split()))
print(sum(abs(boy - girl) for boy, girl in zip(boys, girls)))",0.0,0.9803556203842163
93,"
N, K = map(int, input().split())
measurements = [int(input()) for _ in range(N)]
measurements.sort()
reliable_measurements = measurements[K:N-K]
largest_reliable = max(reliable_measurements)
average_reliable = sum(reliable_measurements) // len(reliable_measurements)
print(largest_reliable, average_reliable)
",1.0,0.19759860634803772
94,"import math
n = input()
b = input().replace("" "","""")
d = []
for i in set(b):
    d.append(b.count(i))
print(max(d))",0.0,0.00044740940211340785
95,"a=[]
while True:
   b=input()
   if b=='0':
     break
   a+=[int(b)]
print(a.count(max(a)))",1.0,0.9977304339408875
96,"s=input()
d={}
for i in range(len(s)-2):
    if s[i]==s[i+2]:
        if s[i+1] not in d:
            d[s[i+1]]=1
        else:
            d[s[i+1]]+=1
print(max(d,key=lambda k:d[k]))
",0.0,0.5720407962799072
97,"s = input()
for i in range(len(s)):
    if s[i]==' ':
        m = i
        break
x = s[ :m]
s = s[m+1: ]
for u in range(len(s)):
    if s[u]==' ':
        m = u
        break
y = s[ :m]
z = s[m+1: ]
y = int(y)
z = int(z)
x = int(x)
print(x*3+y*5+z*12)",0.0,3.957950767130569e-08
98,"
def find_numbers(a, b):
    result = []
    for m in range(a, b+1):
        if m % 2 == 0:
            for n in range(1, b//m+1):
                if n % 2 == 1:
                    if m*n <= b:
                        result.append(m*n)
    return sorted(result)

a, b = map(int, input().split())
print(*find_numbers(a, b))
",1.0,0.9999988079071045
99,"n=int(input())
print(3*(n-1))",0.0,0.2012370079755783
100,"a, b, c = map(int, input().split())

if a<=b and (b<=c or c>=a):
    print('YES')

else:
    print('NO')",0.0,0.0561806820333004
101,"model=1  
n = int(input())        
gr = [[] * n for i in range(n)]
for i in range(n):
    gr[i] = [int(t) for t in input().split()]
   

for i in range(n):
    for j in range(i,n):
        if gr[i][j]!=gr[j][i]:
            model=0
            #break
                    
if model==0:
    print('oriented')
else:
    print('not oriented')",0.0,0.00039116936386562884
102,"A = int(input())

def is_divisor_ending_in_7(n):
    for i in range(17, n, 10):
        if n % i == 0:
            return i
    return None

count = 0
num = A + 1

while count < 5:
    divisor = is_divisor_ending_in_7(num)
    if divisor:
        print(num, divisor)
        count += 1
    num += 1",1.0,1.0
103,"def main():
    n, m = map(int, input().split())
    a = list(map(int, input().split()))
    b = list(map(int, input().split()))

    dp = [0] * (m + 1)
    for i in range(n):
        for j in range(m, -1, -1):
            if j >= a[i] and dp[j] < dp[j - a[i]] + a[i]:
                dp[j] = dp[j - a[i]] + a[i]
            if j >= b[i]:
                dp[j] = max(dp[j], dp[j - b[i]] + b[i])

    print(dp[m])

if __name__ == ""__main__"":
    main()",1.0,1.0
104,"
A, B, C, V, N = map(int, input().split())
Vi = list(map(int, input().split()))

total_volume = V + sum(Vi)
pool_volume = A * B * C

overflow_volume = max(0, total_volume - pool_volume)
print(overflow_volume)
",1.0,0.8693103790283203
105,"a,b,c=map(int,input().split())
print(min(a+b+c,2*a+2*c,2*b+2*c,2*a+2*b))",0.0,0.0018483116291463375
106,"a,b = map(int, input().split())
print(a**b)",0.0,0.21021656692028046
107,"n,m = map(int,input().split())        
gr = [[] * n for i in range(n)]
gr2 = [[0] * n for i in range(n)]
kp=1
for i in range(n):
    gr[i] = [int(t) for t in input().split()]

            
def UMMatriz(matr1,matr2,matr3):
    for i in range(n):
        for j in range(n):
            for z  in range(n):
                if matr3[i][j]==0:
                    matr3[i][j]=matr2[i][z]*matr1[z][j]
    return matr3;

gr2=gr
for k in range(m-1):
    gr3 = [[0] * n for i in range(n)]
    UMMatriz(gr,gr2,gr3);
    gr2=gr3;
    
for i in range(n):
    for j in range(n):
        if i==j:
            gr3[i][j]=0

#for row in gr3:
   # print(' '.join(map(str, row)))
               
for i in range(n):
    for j in range(n):
        if gr3[i][j]==1:
            kp=0
            print(i+1,j+1)
if kp==1:
    print('NO')",0.0,1.0
108,"n = int(input())
m = [ int(x) for x in input().split()]

mx = min(m)
sum = 0
for i in range(n):
    sum+= m[i]-mx
print(sum)",0.0,0.17274409532546997
109,"
n, m, a = map(int, input().split())
tiles_needed = ((n + a - 1) // a) * ((m + a - 1) // a)
print(tiles_needed)
",1.0,0.14696134626865387
110,"k, r = map(int,input().split())
if k<10:
    if k == r:
        print(1)
    elif k%r == 0:
        print(k//r)
else:
    if (k - r) % 10 == 0:
        print(1)
    elif k % (10+r) == 0:
        print(k // (10+r))
    elif k * 2 % 10 == 0:
        print(2)
    else:
        print(5)",0.0,1.018096718041761e-11
111,"n1, p1, m1, t1, s1 = map(int,input().split())
n2, p2, m2, t2, s2 = map(int,input().split())
if (p1 + (m1 * t1) + s1)*n1 > (p2 + (m2 * t2) + s2)*n2:
    print('Pascal',(p2 + (m2 * t2) + s2)*n2)
elif (p1 + (m1 * t1) + s1)*n1 < (p2 + (m2 * t2) + s2)*n2:
    print('Python',(p1 + (m1 * t1) + s1)*n1)
else:
    print('Draw',(p1 + (m1 * t1) + s1)*n1)",0.0,9.167035186496975e-12
112,"l, v1, v2, t = map(int, input().split())
print(min((l-(((v1+v2)*t)%l)), l-(l-(((v1+v2)*t)%l))))",0.0,0.04560304805636406
113,"ï»¿
a=int(input())
b=a%100
c=b//10
print(c)
",0.0,0.12203196436166763
114,"k, m, n = map(int, input().split())
if n <= k:
    print(m * 2)
else:
    x = n * 2 // k
    if n * 2 % k != 0:
        x += 1
    print(x*m)",0.0,8.599389730079565e-06
115,"
n = int(input())
full_weeks = n // 7
remaining_days = n % 7
min_rest = full_weeks * 2 + (1 if remaining_days >= 6 else 0)
max_rest = full_weeks * 2 + (remaining_days if remaining_days >= 5 else remaining_days)
print(min_rest, max_rest)
",1.0,0.6425776481628418
116,"n = int(input())
a = list(map(int, input().split()))
s = [[]]
c = 1
for i in a:
    key = 0
    for k in range(c):
        if not(i in s[k]):
            s[k].append(i)
            key = 1
            break
    if key == 0:
        s.append([])
        s[c].append(i)
        c = c + 1
print(len(s))",0.0,0.027851706370711327
117,"
N = int(input())
intervals = []

for _ in range(N):
    h1, m1, h2, m2 = map(int, input().split())
    start = h1 * 60 + m1
    end = h2 * 60 + m2
    if start < end:
        intervals.append((start, end))
    else:
        intervals.append((start, 1440))
        intervals.append((0, end))

total_time = 0
current_time = 0

while current_time < 1440:
    count = sum(1 for start, end in intervals if start <= current_time < end)
    if count == N:
        total_time += 1
    current_time += 1

print(total_time)
",1.0,0.9999996423721313
118,"n = int(input())
s = input().split()
a = []
for i in range(len(s)):
    a.append(int(s[i]))
m = min(a)
l = 0
for i in a:
    l += i - m
print(l)",0.0,0.7007974982261658
119,"
def div_count(n:int):
    x = set()
    for i in range(1,int(n**0.5)+1):
        if not n%i:
            x.update([i,n//i])
    return len(x)
a,b=map(int,input().split())
c=1
for i in range(a,b+1):
    if div_count(i)%2:
        print(c,i,div_count(i),(i**0.5))
        c+=1
",1.0,0.9999986886978149
120,"vvod = input()
vvod = vvod.split()
x = int(vvod[0])
y = int(vvod[1])
z = int(vvod[2])
xc = 3
yc = 5
zc = 12
print(x * xc + y * yc + z * zc)",0.0,5.7605748224887066e-06
121,"a1,b1=map(int,input().split())
a2,b2=map(int,input().split())
a3,b3=map(int,input().split())
print(a1-a3,b1-b2)",0.0,0.8838704228401184
122,"x=int(input())
y=int(input())
if (x==5) and y==4 or x==5 and y==2 or x==6 and y==5 or x==8 and y==5 or x==6 and y==1 or x==8 and y==1:
    print(""YES"")
else:
    print(""NO"")",0.0,0.031697388738393784
123,"x,y,z=map(int,input().split())
print(x*3+5*y+12*z)
",0.0,0.3678590953350067
124,"y, k, n = map(int, input().split())

if n - y == 0:
    print(-1)
    exit()
event = False
for i in range(1, n - y + 1):
    if (i + y) % k == 0 and (i + y) <= n:
        x = i
        event = True
        break

if not event:
    print(-1)
    exit()

while x + y <= n:
    print(x, end=' ')
    x += k
",0.0,0.4788557291030884
125,"
def divisors(n):
    divs = []
    for i in range(1, int(n**0.5) + 1):
        if n % i == 0:
            divs.append(i)
            divs.append(n // i)
    divs.sort()
    return divs

a, b = map(int, input().split())
for num in range(a, b + 1):
    if len(divisors(num)) == 2:
        print(f'{divisors(num)[0]} {divisors(num)[1]}')
",1.0,1.0
126,"
N = int(input())
temperatures = list(map(int, input().split()))
max_change = 0
second = 0

for i in range(1, N):
    change = abs(temperatures[i] - temperatures[i - 1])
    if change > max_change:
        max_change = change
        second = i + 1

print(second)
",1.0,0.13739708065986633
127,"s = list(map(int, input().split()))
s.sort()
a = s[1] - s[0] + s[2] - s[1]
print(a)",0.0,0.9892802834510803
128,"
n = int(input())
current = input().strip()
target = input().strip()
actions = 0

for i in range(n):
    c = int(current[i])
    t = int(target[i])
    actions += min(abs(c - t), 10 - abs(c - t))

print(actions)
",1.0,0.8999219536781311
129,"
n = int(input())
a = [list(map(int, input().split())) for _ in range(n)]
vis = [0] * n
par = [0] * n
stack, par[0] = [0], 0
while stack:
    i = stack.pop()
    if vis[i]: continue
    vis[i] = 1
    for j in range(n):
        if a[i][j]: stack.append(j), par[j] = i
    print(i + 1, par[i] + 1)
",1.0,0.9998761415481567
130,"
def dfs(graph, v, visited, path):
    visited[v] = True
    path.append(v + 1)
    for i in range(len(graph)):
        if graph[v][i] == 1 and not visited[i]:
            dfs(graph, i, visited, path)
    return path

n = int(input())
graph = [list(map(int, input().split())) for _ in range(n)]

for i in range(n):
    visited = [False] * n
    path = []
    dfs(graph, i, visited, path)
    print("" "".join(map(str, path)))
",1.0,1.0
131,"
w, h = map(int, input().split())
n = int(input())
canvas = [[0] * w for _ in range(h)]

for _ in range(n):
    x1, y1, x2, y2 = map(int, input().split())
    for i in range(y1, y2):
        for j in range(x1, x2):
            canvas[i][j] = 1

painted_area = sum(sum(row) for row in canvas)
total_area = w * h
unpainted_area = total_area - painted_area
print(unpainted_area)
",1.0,0.999998927116394
132,"a=int(input())
def f(n):
    sp=[]
    for t in range(1,int(n**0.5)+1):
        if n%t==0:
            sp.append(t)
            if n//t!=t:
                sp.append(n//t)
    sp.sort()
    return sp


k=0
for i in range(a+1,a*10):
    spf=[]
    spf=f(i)
    for u in spf:
        if u%10==7 and u!=7 and u!=i:
            print(i,u)
            k+=1
            break
    if k>=5:
        break",0.0,0.9993776679039001
133,"n = int(input())
k = 0
for a in range(n):
    q, w, e = map(int, input().split())
    if q+w+e >= 2:
        k += 1
print(k)",0.0,0.9190587997436523
134,"
n, m = map(int, input().split())
if m == 0:
    print(1)
elif m >= n:
    print(0)
else:
    print(min(m, n - m))
",1.0,0.02062274143099785
135,"string = input()
vowels = 'Ð°Ð±Ð²Ð³Ð´ÐµÑÐ¶Ð·Ð¸Ð¹ÐºÐ»Ð¼Ð½Ð¾Ð¿ÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑ'

string = string.lower()
counter_vowels = 0
counter_digits = 0

for i in range(len(string)):
    if (string[i] in vowels):
        counter_vowels += 1
    elif (string[i].isdigit()):
        counter_digits += 1

if (counter_vowels > counter_digits): print(1)
elif (counter_vowels < counter_digits): print(2)
else: print(0)

    
",0.0,0.0821927934885025
136,"
def count_exclamation_marks(text):
    return text.count('!')

input_text = input()
print(count_exclamation_marks(input_text))
",1.0,1.0
137,"
N, K, M = map(int, input().split())
scores = [int(input()) for _ in range(N)]
scores.sort(reverse=True)
min_winner_score = scores[K-1]
min_prize_winner_score = scores[K+M-1]
print(min_winner_score, min_prize_winner_score)
",1.0,0.940217137336731
138,print(input()),0.0,0.46689873933792114
139,"
a, b = [int(i) for i in input().split()]
print((b + 1) // 2 - (a + 1) // 2)
",1.0,0.01585172861814499
140,"y, k, n=map(int, input().split())
a=[]
h=0
if y==n:
    a=[-1]
for i in range(1, n-y+1):
    if (i+y)%k==0:
        a.append(i)
        h+=1
    if h==0 and i==n-y:
        a=[-1]
print(*a)
",0.0,0.0006126643856987357
141,"a=[int(i) for i in input().split()]
amogus=[1]
n=0
while min(amogus)!=0:
    amogus=[]
    for i in range(len(a)):
        for j in range(len(a)):
            if a[i]-a[j]>=0 and i!=j:
                amogus.append(a[i]-a[j])
    a.append(min(amogus))
    n+=1
print(n)",0.0,0.9996809959411621
142,"n = int(input())
sp = input().split(' ')
pol = 0
nul = 0
otr = 0
for i in range(n):
    if int(sp[i]) == 0:
        nul+=1
    if int(sp[i]) > 0:
        pol+=1
    if int(sp[i]) < 0:
        otr+=1
print(nul,pol,otr)
",0.0,0.9164276123046875
143,"s = 0
a, b, c = map(int, input().split())
if c >= a and b > a: 
    print ('NO')
elif a >= b:
    print(1)
else:
    print((b - c - 1) // (a - c) + 1)

",0.0,0.5530473589897156
144,"a,b=map(int,input().split())
n=int(input())
s=a*b
if  s//9==n:
    print('NO',0,sep='
')
else:
    print('YES',n-s//9,sep='
')

",0.0,0.005715887527912855
145,"
line = input().strip()
if line:
    words = line.split()
    print(len(words))
else:
    print(0)
",1.0,0.014926501549780369
146,"n=int(input())
mk=0
for i in range(n):
    st=input()
    if st.count('A')<25:
        for j in range(len(st)-1):
            for v in range(j+1,len(st)):
                if st[j]==st[v]:
                    if (v-j)>mk:
                        mk=(v-j)
print(mk)
",0.0,0.9983237385749817
147,"n = int(input())
gr = [[] * n for i in range(n)]
inf=10**10

for i in range(n):
    gr[i] = [int(t) for t in input().split()]
verV,verW= map(int,input().split())

for i in range(n):
    for j in range(n):
        if (gr[i][j]==0)or(gr[i][j]==-1):
            gr[i][j]=inf

def dijkstra(src):
    # init
    visited = []
    distance = {src: 0}
    node = list(range(len(gr[0])))
    if src in node:
        node.remove(src)
        visited.append(src)
    else:
        return None
    for i in node:
        distance[i] = gr[src][i]
    prefer = src
    while node:
        _distance = float('inf')
        for i in visited:
            for j in node:
                if gr[i][j] > 0:
                    if _distance > distance[i] + gr[i][j]:
                        _distance = distance[j] = distance[i] + gr[i][j]
                        prefer = j
        visited.append(prefer)
        node.remove(prefer)
    return distance


distance = dijkstra(verV-1)
#print(distance)
if distance[verW-1]==inf:
    print('NO')
else:
    print(distance[verW-1])",0.0,1.0
148,"
n = int(input())
if n <= 1:
    print(""NO"")
else:
    is_prime = True
    for i in range(2, int(n**0.5) + 1):
        if n % i == 0:
            is_prime = False
            break
    if is_prime:
        print(""YES"")
    else:
        print(""NO"")
",1.0,0.00011397056368878111
149,"import random
n = int(input())

if n == 5:
    x1, y1, x2, y2 = map(int, input().split())
    if (x1, y1, x2, y2) == (0, 0, 2, 3):
        print('YES')
    else:
        print(['YES','YES','YES','NO', 'NO'][random.randint(0,4)])
else:
    x1, y1, x2, y2 = map(int, input().split())
    if (x1, y1, x2, y2) == (0, 0, 2, 3) and n == 4:
        print('NO')
    else:
        print(['YES','YES','YES','NO', 'NO'][random.randint(0,4)])",0.0,7.429725314977986e-07
150,"
def adjacent_cells(n):
    row = (n - 1) // 8
    col = (n - 1) % 8
    neighbors = []
    
    if row > 0:
        neighbors.append(n - 8)  # above
    if row < 7:
        neighbors.append(n + 8)  # below
    if col > 0:
        neighbors.append(n - 1)  # left
    if col < 7:
        neighbors.append(n + 1)  # right
    
    neighbors.sort()
    return ' '.join(map(str, neighbors))

n = int(input())
print(adjacent_cells(n))
",1.0,0.9505867958068848
151,"a = input().split()
k,n,s,p = [int(a[i]) for i in range(4)]
k1 = 1
if n > s:
    if n % s !=0:
        k1 = (n // s)+1
    else:
        k1 = (n // s)
if (k * k1) % p != 0:
    print(((k * k1) // p)+1)
else:
    print((k * k1) // p)",0.0,1.867835530341977e-12
152,"
x = float(input())
y = float(input())
if x > 0 and y > 0:
    print(1)
elif x < 0 and y > 0:
    print(2)
elif x < 0 and y < 0:
    print(3)
elif x > 0 and y < 0:
    print(4)
",1.0,0.9976080656051636
153,"ch1,m1,ch2,m2 = map(int,input().split())
q = 0
if m2 < m1 and (ch2-ch1) == 1:
    q = 60+m2
    print(0,q-m1)
elif m2 < m1 and (ch2-ch1) > 1:
    q = 60+m2
    print(ch2-ch1-1,q-m1)
else:
    print(ch2-ch1,m2-m1)",0.0,0.9020825028419495
154,"def meet_round(n, a, b):
    if a > b:
        a, b = b, a
    round = 1
    while True:
        if a // 2 != b // 2:
            break
        a //= 2
        b //= 2
        round += 1
        n //= 2
    if n == 2:
        return ""Final!""
    return round

n, a, b = map(int, input().split())
print(meet_round(n, a, b))",1.0,1.0
155,"import math
k,m,n=map(int,input().split())
S=math.ceil(n/k)
print(S*m*2)",0.0,0.00515397172421217
156,"n = int(input())
a = list(map(int,input().split()))

s=0
m = min(a)
for i in range(n):
    s+=max(0,a[i]-m)
print(s)
",0.0,0.9310270547866821
157,"
N, K = map(int, input().split())
red_needed = 2 * N
green_needed = 5 * N
blue_needed = 8 * N
red_bundles = (red_needed + K - 1) // K
green_bundles = (green_needed + K - 1) // K
blue_bundles = (blue_needed + K - 1) // K
total_bundles = red_bundles + green_bundles + blue_bundles
print(total_bundles)
",1.0,4.239334714384313e-07
158,"
n,m = map(int, input().split())
gr=[[0]*n for i in range(n)]
tr=[]
for i in range(n):
    gr[i] = [int(t) for t in input().split() ]
for i in range(n):
    for j in range(n):
        if i==j:
            gr[i][j]=1
for i in range(n):
    for j in range(n):
        for z in range(n):
            if (gr[j][i]and gr[i][z]):
                gr[j][z]=1
for i in range(n):
    for j in range(n):
        if i==j:
            gr[i][j]=0
for i in range(m):
    r,t = map(int, input().split())
    if gr[r-1][t-1]==1:
        print('YES')
    else:
        print('NO')",0.0,1.0
159,"a = input().split()
s = 'ÑÐ°Ð±Ð²Ð³Ð´ÐµÑÐ¶Ð·Ð¸Ð¹ÐºÐ»Ð¼Ð½Ð¾Ð¿ÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑ'
for i in a:
    print('Ð¼ÑÑ-'+s[s.find(i[0])-1]+i[1:], end="" "")
",0.0,0.9864180088043213
160,"x, y, z = input().split()
x = int(x)
y = int(y)
z = int(z)

if y - x <= 0:
    print('1')
elif x<=z:
    print('NO')
elif x > z:
    cnt = 0
    while y - x > 0:
        y = y - x + z
        cnt += 1
    print(cnt+1)",0.0,0.3081122934818268
161,"from math import pow
a = float(input().strip())
n = int((input().strip()))
res = 0
for i in range(n+1):
    val = 1.0
    for _ in range(i):
        val *= a
    res += val
print(int(res) if res == int(res) and res >= 0 else res)",0.0,8.786994953879912e-08
162,"def sss(ch):
    s=0
    for i in range(len(str(ch))):
        s+=int(str(ch)[i])
    return s
a=int(input())
a1=10
while a>0:
    a1+=9
    if sss(a1)==10:
        a-=1
print(a1)",0.0,1.0
163,"a=int(input())


def ko(x):
    sp=[]
    for t in range(1,int(x**0.5)+1):
        if x%t==0 :
            sp.append(t)
            if t!=x//t :
                sp.append(x//t)
    spd=[]
    for n in sp:
        if n!=7 and n%10==7 and n!=x  :
            spd.append(n)
    spd.sort()
    return spd

k=0
for i in range(a,a*10000000):
    spf=ko(i)
    if len(spf)>0:
        print(i,spf[0])
        k+=1
    if k==5:
        break",0.0,0.9999103546142578
164,"a=int(input())
def kd(x,s):
    kd=[1,x]
    for i in range(2,round(x**0.5)+1):
        if x%i==0:
            kd.append(i)
            if i!=x//i: kd.append(x//i)
        if len(kd)>s: return [0]
    if len(kd)==s: return sorted(kd)
    else: return[0]
def prst(c):
    sps=0
    if c<=1: return False
    for i in range(2,round(c**0.5)+1):
        if c%i==0: return False
    return True
w=[0]
f=0
z=0
md=0
while f!=a:
    z+=1
    w=kd(z,a)
    f=len(w)
for i in w:
    if prst(i):
        md=i
print(w[-1], md)
",0.0,0.9999934434890747
165,"n = int(input())
for i in range(int(n**0.5), 0, -1):
    if n%i==0:
        q = n//i
        print((q+1)*i+(i+1)*q)
        break",0.0,3.759415267268196e-05
166,"def count_keystrokes(x):
    result = 0
    current_digit = 1
    while current_digit <= 9:
        for i in range(1, 10):
            apartment_number = int(str(current_digit) * i)
            if apartment_number == x:
                result += i
                return result
            result += i
        current_digit += 1
    return result

t = int(input())
for _ in range(t):
    x = int(input())
    print(count_keystrokes(x))",1.0,1.0
167,"a = list(map(int, input().split("" "")))
if a[0]>a[2] or a[0]>=a[1]:
    s=1+((a[1]-a[2]-1)//(a[0]-a[2]))
    print(s)
else:
    print('NO')",0.0,0.9862854480743408
168,"
n, k, a, b = map(int, input().split())
elevator_time = abs(k - n) * b
stairs_time = (n - 1) * a
print(elevator_time, stairs_time)
",1.0,0.8350666761398315
169,"a=list(map(int, input().split()))
if a[1]>=a[0] and a[2]>=a[0]:
    print('YES')
else:
    print('NO')",0.0,0.9826656579971313
170,"
n = int(input())
arr = list(map(int, input().split()))
min_val = arr[0]
max_val = arr[0]
for num in arr:
    if num < min_val:
        min_val = num
    if num > max_val:
        max_val = num
average = (min_val + max_val) / 2
print(int(average) if average.is_integer() else average)
",1.0,0.9443116188049316
171,"n = int(input())
chl = [int(i) for i in input().split()]
chl_2 = set(chl)
cnt = -1
for i in chl_2:
    if cnt < chl.count(int(i)):
        cnt = chl.count(int(i))

print(cnt)",0.0,0.5434146523475647
172,"from math import ceil
a = int(input())
b = int(input())
print(ceil(b / a))",0.0,5.152783533191041e-09
173,"n = int(input())
a = [int(i) for i in input().split()]
b=[]
for i in range(len(a)):
    if a[i] in b:
        pass
    else:
        b.append(a[i])
print(len(b))
",0.0,0.0011743047507479787
174,"n = int(input())
nums = list(map(int, input().split()))
if sum(nums) % 2 == 0:
    print(sum(nums))
else:
    m = 1000000000000
    for num in nums:
        if num % 2 == 1 and m > num:
            m = num
    print(sum(nums) - m)
",0.0,0.009987265802919865
175,"a,b,c=map(int,input().split())
x,y,z=map(int,input().split())
d=a*3600+b*60+c
e=x*3600+y*60+z
j=e-d
print(j)
",0.0,0.008053301833570004
176,"
def mask_numbers(mask, a):
    numbers = []
    for i in range(100001):
        if i < 1010 and (str(i) == mask[0] + '?' + mask[1:4] + '*' + mask[4:] or i == int(mask[:1] + '?' + mask[1:] + str(a))):
            if i % a == 0:
                numbers.append(i)
    numbers.sort()
    return numbers

print(*mask_numbers('1?954*21', 2))
",1.0,1.0
177,"x = int(input())
a = int(input())
b = int(input())

total_salary = a + (b - a) * 12
max_spend = total_salary // 3

print(max_spend)
#####",1.0,0.0004667021275963634
178,"
def pow_mat(mat, n):
    res = [[0]*n for _ in range(n)]
    for i in range(n):
        for j in range(n):
            for k in range(n):
                res[i][j] |= mat[i][k] and res[k][j]
    return res if n == 2 else pow_mat(res, n)

n = int(input())
mat = []
for _ in range(n):
    mat.append(list(map(int, input().split())))

pow_mat_trans = pow_mat(mat, n)
for row in pow_mat_trans:
    print(*row)
",1.0,1.0
179,"
def count_ways(n):
    if n < 3:
        return 0
    elif n == 3:
        return 1
    else:
        return count_ways(n // 2) + count_ways((n + 1) // 2)

n = int(input())
print(count_ways(n))
",1.0,0.9999988079071045
180,"
a = int(input())
b = int(input())
c = int(input())

if a + b <= c or a + c <= b or b + c <= a:
    print(""impossible"")
else:
    sides = sorted([a, b, c])
    if sides[0]**2 + sides[1]**2 == sides[2]**2:
        print(""right"")
    elif sides[0]**2 + sides[1]**2 > sides[2]**2:
        print(""acute"")
    else:
        print(""obtuse"")
",1.0,4.524043357816143e-13
181,"k=int(input())
s=10
for i in range(k):
    if s<=99:
        s+=9
    if s<=999 and s>99:
        s+=90
    if s<=9999 and s>999:
        s+=900
    if s<=99999 and s>9999:
        s+=9000
print(s)
",0.0,0.9877210259437561
182,"a = int(input())
n = int(input())
s = 0
for b in range(n+1):
    s += a**b
print(s)",0.0,0.16252636909484863
183,"
import math

def calculate_distance(traps):
    total_distance = 0
    current_position = (0, 0)
    
    for trap in traps:
        total_distance += math.sqrt((trap[0] - current_position[0]) ** 2 + (trap[1] - current_position[1]) ** 2)
        current_position = trap
    
    total_distance += math.sqrt((0 - current_position[0]) ** 2 + (0 - current_position[1]) ** 2)
    
    return total_distance

def main():
    traps = []
    n = int(input())
    for _ in range(n):
        x, y = map(int, input().split())
        traps.append((x, y))
    
    distance = calculate_distance(traps)
    print(f""{distance:.3f}"")

main()
",1.0,1.0
184,"
N, K = map(int, input().split())
scores = [int(input()) for _ in range(N)]
scores.sort(reverse=True)
excellent_students = scores[:K]
good_students = scores[K:2*K]
average_good = sum(good_students) // K
average_excellent = sum(excellent_students) // K
print(average_good, average_excellent)
",1.0,0.0028949605766683817
185,"ï»¿a=int(input())
b=int(input())
n=int(input())
s=(a*100+b)*n
m=s//100
c=s%100
print(m,c)
",0.0,0.0007705016760155559
186,"def main():
    s = input()
    vowels = 'AO'
    consonants = 'CDF'
    count = 0
    max_count = 0
    for i in range(len(s) - 1):
        if s[i] in consonants and s[i + 1] in vowels:
            count += 1
            max_count = max(max_count, count)
        else:
            count = 0
    print(max_count)

if __name__ == '__main__':
    main()",1.0,1.0
187,"a=int(input())


def ko(x):
    sp=[]
    for t in range(1,int(x**0.5)+1):
        if x%t==0:
            sp.append(t)
            if t!=x//t:
                sp.append(x//t)
    sp.sort()
    
    return sp
spf=ko(a)
print(*spf)",0.0,0.9927794337272644
188,"s=0
n,t=map(int,input().split())
a=list(map(int,input().split()))
for i in range(99):
    t-=80000-a[i]
    if t<1:
        break
    s+=1
print(s+1)",0.0,0.9937790036201477
189,"a,b,c,d=map(int,input().split())
if ((b+c)*d)%a>=a/2:
    print(a-((b+c)*d)%a)
else:
    print(((b+c)*d)%a)

    
",0.0,2.604888550195028e-06
190,"n,m = map(int,input().split())
gr = [[] * n for i in range(n)]
visited = [False] * n
prev = []
k=[]
for i in range(n):
    gr[i] = [int(t) for t in input().split()]

       
         
def dfs(start):
   
    if start==w-1:
        k.append(1)
    visited[start] = True
    for u in range(n):
        if gr[start][u]==1:
            if not visited[u]:
                dfs(u)
            
for t in range(m):
    k=[]
    visited = [False] * n
   
    v,w = map(int,input().split())
    dfs(v-1)
    
    if k!=[]:
        print('YES')
    else:
        print('NO')",0.0,0.9810612201690674
191,"
total = 0
count = 0
num = input(""Enter a sequence of integers. Input ends when the number 0 is entered: "")
while num != '0':
    total += float(num)
    count += 1
    num = input(""Enter next number: "")

mean = total / count
print(""{:.6f}"".format(mean))
",1.0,0.9993645548820496
192,"n = int(input())
mas1 = ['a1', 'h1', 'a8', 'h8']
mas2 = ['b1', 'a2', 'g1', 'h2', 'a7', 'b8', 'h7', 'g8']
mas3 = ['c1', 'd1', 'e1', 'f1', 'g2', 'h3', 'h4', 'h5', 'h6', 'g7', 'c8', 'd8', 'e8', 'f8', 'b7', 'a3', 'a4', 'a5', 'a6', 'b2']
mas4 = ['c2', 'd2', 'e2', 'f2', 'g3', 'g4', 'g5', 'g6', 'b3', 'b4', 'b5', 'b6', 'c7', 'd7', 'e7', 'f7']
for a in range(n):
    s = input()
    x = 0
    if s in mas1:
        x = 2
    elif s in mas2:
        x = 3
    elif s in mas3:
        x = 4
    elif s in mas4:
        x = 6
    else:
        x = 8
    print(x)",0.0,1.036069667559314e-12
193,"y, k, n = map(int, input().split())
x = ((y // k + 1) * k) - y
a = (n - y) // k
if a == 0:
    print (-1)
else:

    for i in range (a):
        print (x + (i * k), end =' ')",0.0,0.0008958204998634756
194,"s=input();x=[chr(ord('A')+i)for i in range(int(s))];y=[]
for i in range(int(s)):
 if i%2==0:y.append(x.pop(0))
 else:y.append(x.pop())
print(''.join(y))",1.0,0.9999430179595947
195,"n, a, b = map(int, input().split())
if a >= n and b >= n:
    print(""YES"")
else:
    print(""NO"")",0.0,0.602713942527771
196,"a, b = map(int, input().split())

if a > b:
    temp = b
    b = a
    a = temp

for i in range(a, b + 1):
    print(i, end="" "")
",0.0,0.7283437848091125
197,"n = int(input())arr = [int(input()) for _ in range(n)]if n == 1:print(""No"")else:odd_sum = sum(arr[i] for i in range(0, n, 2))even_sum = sum(arr[i] for i in range(1, n, 2))if odd_sum == even_sum:print(""Yes"")else:diff = abs(odd_sum - even_sum)if diff % 2 == 0 and any((x >= diff // 2 for x in arr)):print(""Yes"")else:print(""No"")",1.0,1.0
198,"n=int(input())
a=3*(n-1)
print(a-0)",0.0,0.2064281404018402
199,"def main():
    n = int(input())
    hours = n // 60
    print(hours)

if __name__ == ""__main__"":
    main()",1.0,1.0
200,"a = [1] * 10
n = 0
nn = [0, 10]
while n <= 64:
    n += 1
    b = a.copy()
    for i in range (10):
        for j in range (i, 10):
            a[i] += a[j]
    for i in range (10):
        a[i] -= b[i]
    nn.append(sum(a))
print (nn[int(input())])",0.0,0.9998074173927307
201,"a,b,c,d = map(int,input().split())
x =a*60+b
y= c*60+d
if y<x:
    y=y+1440
h= int((y-x)/60)
m =(y-x)%60
print(h,m)",0.0,0.0005161096341907978
202,"i = input()
j = input()
a = i[0]
b = i[1]
c = j[0]
d = j[1]
if a != b and a != c and a != d and c != b and d != b and c != d:
    print(3)
elif a == b and a == c and a == d:
    print(0)
elif a == b and a != c and a != d and c != b and d != b and c != d:
    print(2)
elif a != b and a == c and a != d and c != b and d != b and c != d:
    print(2)
elif a != b and a != c and a == d and c != b and d != b and c != d:
    print(2)
elif a != b and a != c and a != d and c == b and d != b and c != d:
    print(2)
elif a != b and a != c and a != d and c != b and d == b and c != d:
    print(2)
elif a != b and a != c and a != d and c != b and d != b and c == d:
    print(2)
elif a == b and c == d:
    print(1)
elif a == c and b == d:
    print(1)
elif a == d and b == c:
    print(1)",0.0,1.5817518942640163e-05
203,"
salaries = list(map(int, input().split()))
print(max(salaries) - min(salaries))
",1.0,0.20922788977622986
204,"a, b = map(int, input().split())

if a <= b:
    for i in range(a, b+1):
        print(i, end="" "")
elif b <= a:
    for i in range(a, b-1, -1):
        print(i, end="" "")",0.0,0.9899196624755859
205,"n, t = map(int, input().split())
a = [int(x) for x in input().split()]
s = 0
for i in range(n):
    s += (80000 - a[i])
    if s >= t:
        print(i + 1)
        break

        ",0.0,0.8996723294258118
206,"import math

a, b = list(map(int, input().split()))
print(math.ceil(b/a), b%a)",0.0,0.0012954422272741795
207,"a = [int(i) for i in input().split()]
c = 1
b = int(input())
for i in range(b):
    h = input().lstrip()
    if h == ""sausage"" or h == ""sausage "":
        c *= a[0]
    if h == ""cheese"" or h == ""cheese "":
        c *= a[1]
    if h == ""ketchup"" or h == ""ketchup "":
        c *= a[2]
if b == 0:
    print(0)
else:
    print(c)",0.0,0.0009230416035279632
208,"
p, y = map(int, input().split())

for i in range(y, p - 1, -1):
    if i % p != 0:
        print(i)
        break
else:
    print(-1)
",1.0,0.9866901636123657
209,"length = int(input())
volume = length ** 3
print(volume)",1.0,0.5577633380889893
210,"s = input()
i, j = map(int, input().split())
first_part = s[:i-1]
second_part = s[i:j+1][::-1]
third_part = s[j+1:]
print(first_part + second_part + third_part)
",1.0,0.006196371745318174
211,"def strange_robot_vacuum():
    n = int(input())
    room = [input() for _ in range(n)]

    columns = [0] * n
    for i in range(n):
        for j in range(n):
            if room[i][j] == '1':
                columns[j] += 1
            else:
                columns[j] -= 1

    max_clean_rows = 0
    for count in columns:
        if count == n or count == -n:
            max_clean_rows += 1

    return max_clean_rows

print(strange_robot_vacuum())",1.0,0.9999997615814209
212,"
def factorial(n):
    result = 1
    for i in range(1, n+1):
        result *= i
    return result

n = int(input())
if 0 < n <= 12:
    print(factorial(n))
",1.0,1.0
213,"a, b = map(int, input().split())
def Koldel(x):
    sp = []
    for t in range(1, int(x**0.5)+1):
        if x%t == 0:
            sp.append(t)
            if x//t!=t:
                sp.append(x//t)
    sp.sort()

    return sp
k = 0
for i in range(a, b+1):
    spd = Koldel(i)
    if len(spd)>=k:
        k = len(spd)
        number = i
print(k, number)
    
",0.0,0.9996832609176636
214,"k, n, s, p = map(int, input().split())
a = n // s
if n % s > 0:
    a += 1
a *= k
b = a // p
if a % p > 0:
    b += 1
print (b)",0.0,0.11480780690908432
215,"
n, l = map(int, input().split())
a = list(map(int, input().split()))
ans = -1
mn = 1e9
for i in range(n - l + 1):
    sm = 0
    for j in range(l):
        sm += a[j + i]
    if sm < mn and a[i] == a[i + l - 1] == 0:
        mn = sm
        ans = i + 1
print(ans)
",1.0,0.27766937017440796
216,"l = [int(i) for i in input().split()]
k = l[0]
n = l[1]
s = l[2]
p = l[3]
if n%s == 0:
    m = n//s
else:
    m = n//s + 1
d = m*k
if d%p == 0:
    print(d//p)
else:
    print(d//p+1)
",0.0,8.000945826008854e-14
217,"n = int(input())
k = 0
s = 0
while s < n:
    k = (k * 2)+1
    s = k + s
if s == n:
    print('YES')
else:
    print('NO')

",0.0,0.03856094181537628
218,"x01=""####""
x02=""#  #""
x11=""   #""
x12="" # #""
x13=""#  #""
x14=""   #""
x15=""   #""

n=int(input())
n2=list(bin(n)[2:])

s1=""""
for i in n2:
    if i=='1':
        s1+=x11+' '
    else:
        s1+=x01+' '

s2=""""
for i in n2:
    if i=='1':
        s2+=x12+' '
    else:
        s2+=x02+' '

s3=""""
for i in n2:
    if i=='1':
        s3+=x13+' '
    else:
        s3+=x02+' '

s4=""""
for i in n2:
    if i=='1':
        s4+=x14+' '
    else:
        s4+=x02+' '

s5=""""
for i in n2:
    if i=='1':
        s5+=x15+' '
    else:
        s5+=x01+' '        

print(s1)
print(s2)
print(s3)
print(s4)
print(s5)",0.0,1.5620798876625486e-05
219,"n=int(input())
s=0
ng=[[0]*n for i in range(n)]
mas=[[0]*n for i in range(n)]



for i in range(n):
    mas[i]=[int(i) for i in input().split()]
for i in range(n):
    for j in range(n):
        if i!=j:
            if mas[i][j]==0:
                ng[i][j]=1
            else: ng[i][j]=0


            
for i in ng:
    print(' '.join(map(str,i)))
",0.0,0.00042623121407814324
220,"
def is_connected(n, matrix):
    visited = [False] * n
    stack = [0]
    
    while stack:
        node = stack.pop()
        if not visited[node]:
            visited[node] = True
            for neighbor in range(n):
                if matrix[node][neighbor] == 1 and not visited[neighbor]:
                    stack.append(neighbor)
    
    return all(visited)

n = int(input())
matrix = [list(map(int, input().split())) for _ in range(n)]

if is_connected(n, matrix):
    print(""YES"")
else:
    print(""NO"")
",1.0,1.0
221,"a=int(input())
b=int(input())
c=int(input())
if a<b and a<c:
    print(a)
elif b<a and b<c:
    print(b)
else:
    print(c)",0.0,0.021276410669088364
222,"y, k, n = map(int, input().split())
x=1
sp=[]
while x+y<n:
    if (x+y)%k==0:
        sp.append(x)
    x+=1
if len(sp)==0:
    print(-1)
else:
    print(*sp)",0.0,0.006602895446121693
223,"from math import *
k,n = map(int, input().split())
print (ceil (n/k), (n-1)%k +1)",0.0,1.8551552784629166e-05
224,"k, n = map(int, input().split())
s = 1
k2 = k
l = True
m = 1
while l:
    if n >= s and n<= k2:
        s2 = n - s + 1
        print(m,s2)
        l = False
    s = k * m + 1
    m += 1
    k2 = k * m",0.0,0.005528908222913742
225,"x, y, z = map(int,input().split())
if x == y and z == 0:
        res = '0'
elif x + z < y: 
        res = '-'
elif y + z < x:
        res = '+'
else:
        res = '?'
print(res)
",0.0,0.380194753408432
226,"a=int(input())
b=int(input())
c=int(input())
if a==b and c==b and a==c:
    print(""3"")
elif a==b and b!=c:
    print(""2"")
elif a==c and a!=b:
    print(""2"")
elif b==c and c!=a:
    print(""2"")
else:
    print(""0"")",0.0,0.028659937903285027
227,"n = int(input())
m = int(input())

days = m // n

if m % n != 0:
    days += 1

print(days)",1.0,0.013152454048395157
228,"
n, k = map(int, input().split())
a = list(map(int, input().split()))

for i in range(n):
    if k > 0 and a[i] < 0:
        a[i] = -a[i]
        k -= 1

a.sort()

if k > 0 and k % 2 == 1:
    a[0] = -a[0]

print(sum(a))
",1.0,0.999998927116394
229,"k, r = map(int,input().split())
b = k

counter = 0
if k % 10 == r:
    print(1)
else:
    while True:
        counter += 1
        k += b
        if k % 10 == 0 or k % 10 == r:
            break
        if (k + r) % 10 == 0 or (k + r) % 10 == r:
            break

    print(counter + 1)",0.0,2.3201678800433e-07
230,"m, n = map(int, input().split())
data =list(map(int, input().split()))
c = 0
r = 0
l = 0
while r < m:
    if data[r] - data[l] <= n:
        r += 1
    else:
        l += 1
        c += m-r
print(c)",0.0,0.8407383561134338
231,"
n = int(input())
numbers = list(map(int, input().split()))
even_sum = 0
odd_sum = 0
for number in numbers:
  if number % 2 == 0:
    even_sum += number
  else:
    odd_sum += number
if even_sum > odd_sum:
  print(even_sum)
else:
  print(even_sum + max(odd_sum - even_sum, 0))
",1.0,0.0011025937274098396
232,"a = input().split()
n = int(a[0])
m = int(a[1])
a = int(a[2])
x = 0
y = 0
if n%a==0:
    x = n//a
else:
    x = n//a+1
if m%a==0:
    y = m//a
else:
    y = m//a+1
print(x*y)",0.0,1.9951004823909324e-12
233,"n = int(input())
od=0
maxi=-1
s = list(map(int, input().split()))
sp = [0]*n*2
for i in s:
    p = sp[i]
    if p==1:
        od-=1
    else:
        sp[i]=1
        od+=1
    if od>maxi:
        maxi=od
print(maxi)",0.0,3.8123787817312405e-05
234,"a=int(input())
b=int(input())
d=0
md=0
e=0
f=0
def qdel(x):
    qdel=[1,x]
    for i in range(2,round(x**0.5)+1):
        if x%i==0:
            qdel.append(i)
            qdel.append(x//i)
    return sorted(qdel)
for r in range(a,b+1):
    d=qdel(r)
    if (len(d)>=md):
        md=len(d)
        e=d[-2]
        f=r

print(md,f,e)
        ",0.0,0.8610645532608032
235,"
def calculate_mass(formula):
    mass_dict = {'C': 12, 'H': 1, 'N': 14, 'O': 16}
    total_mass = 0
    i = 0
    while i < len(formula):
        element = formula[i]
        i += 1
        count = 1
        if i < len(formula) and formula[i].isdigit():
            count = int(formula[i])
            i += 1
        total_mass += mass_dict[element] * count
    return total_mass

formula = input().strip()
print(calculate_mass(formula))
",1.0,1.0
236,"
N = int(input())
results = []

for _ in range(N):
    data = list(map(int, input().split()))
    correct_option = data[0]
    answers = data[1:]
    
    correct_count = answers.count(correct_option)
    points = [0] * 6
    
    if correct_count == 1:
        points[answers.index(correct_option)] = 6
    elif correct_count == 2:
        for i in range(6):
            if answers[i] == correct_option:
                points[i] = 3
    elif correct_count == 3:
        for i in range(6):
            if answers[i] == correct_option:
                points[i] = 2
    elif correct_count > 3:
        for i in range(6):
            if answers[i] == correct_option:
                points[i] = 1
    
    results.append(points)

for result in results:
    print("" "".join(map(str, result)))
",1.0,0.9801170229911804
237,"n=int(input())
if n%10==1 and n!=11:
    print(n,'mag')
elif (n%10==2 or n%10==3 or n%10==4) and n!=12 and n!=13 and n!=14:
    print(n,'maga')
else:
    print(n,'magov')

",0.0,0.10629869997501373
238,"k, n = map(int, input().split())
s = 1
while n > k:
    s += 1
    n -= k
print(s, n)",0.0,0.9962180256843567
239,"x,y,z=map(int,input().split())
if z==1 and y%3==1:
    print(-1)
else:
    if (y+z)%3==0:
        print(x+(y+z)//3)
    else:
        print(x+(y+z)//3+1)
",0.0,2.571583479493711e-07
240,"d1,d2,d3=map(int,input().split())
if d1+d2+d3 < 2*d1+2*d2 and 2*d2+2*d3:
    print(d1+d2+d3)
else:
    if 2*d1+2*d2<2*d2+2*d3:
        print(2*d1+2*d2)
    else:
        print(2*d2+2*d3)",0.0,4.478236510595647e-15
241,"a,b=map(int,input().split())
def f(n):
    sp=[]
    for t in range(1,int(n**0.5)+1):
        if n%t==0:
            sp.append(t)
            if n//t!=t:
             sp.append(n//t)
    sp.sort()
    return(sp)
spd=[]
spt=[]
for i in range(a,b+1):
     spd=f(i)
     spt=[]
     for u in spd:
         if u%2==0:
             spt.append(u)
     if len(spt)==6:
        print(*spt)
",0.0,0.885760486125946
242,"k, n, s, p = map(int, input().split())
a = n//s + int(n/s > n//s)
b = a*k
c = b//p + int(b/p > b//p)
print(c)",0.0,0.05045434087514877
243,"
n = int(input())
boys = list(map(int, input().split()))
girls = list(map(int, input().split()))

boys.sort()
girls.sort()

total_diff = 0
for i in range(n):
    total_diff += abs(boys[i] - girls[i])

print(total_diff)
",1.0,0.7810283303260803
244,"mas = list(map(int, input().split()))
print(mas.count(max(mas)))
",0.0,0.09395071864128113
245,"
salaries = list(map(int, input().split()))
print(max(salaries) - min(salaries))
",1.0,0.20922788977622986
246,"k, m, n = map(int, input().split())
from math import *
t=ceil(n/k)
t=t*2*m
print(t)",0.0,1.9179149603587575e-05
247,"n = int(input())
a = [int(i) for i in input().split()]
m = min(a)
s = 0
for i in range(n):
    if a[i] > m:
        s += a[i]-m
print(s)
",0.0,0.3012247383594513
248,"
a, b = map(int, input().split())
if (a < 2) | (b < 1):
    print('NO')
elif ((a & 1) & (b & 1)):
    print('NO')
else:
    print('YES')
",1.0,0.004459242802113295
249,"l = [int(i) for i in input().split()]
b = min(l)
for i in range(2):
    l[i] -= b
if l[0] != l[1]:
    for i in range(2):
        if l[i] != 0:
            n = l[i]//2
else:
    n =0
print(b, n)",0.0,0.0246119387447834
250,"
N = int(input())
occupied = {}
for _ in range(N):
    row, seat = map(int, input().split())
    if row not in occupied:
        occupied[row] = set()
    occupied[row].add(seat)

result_row = -1
result_seat = float('inf')

for row in occupied:
    seats = sorted(occupied[row])
    for i in range(len(seats) - 1):
        if seats[i + 1] == seats[i] + 1:
            left_seat = seats[i] - 1
            right_seat = seats[i + 1] + 1
            if left_seat in occupied[row] and right_seat in occupied[row]:
                if row > result_row or (row == result_row and seats[i] < result_seat):
                    result_row = row
                    result_seat = seats[i]

print(result_row, result_seat)
",1.0,0.9998637437820435
251,"import math
n, m, k = map(int, input().split())
if n == m:
    print(1)
elif n <= k:
    print('NO')
else:
    print(math.ceil((m - n) / (n - k)) + 1)",0.0,9.575251169735566e-06
252,"a = input()
for i in range(len(a)):
    if a[i]==' ':
        x = i
        break
n = int(a[ :x])
a = a[x+1: ]
for s in range(len(a)):
    if a[s]==' ':
        x = s
        break
m = int(a[ :x])
k = int(a[x+1: ])
if k>=n:
    print('NO')
else:
    b = 0
    while m>0:
        if (m-n)<=0:
            m-=n
        else:
            m-=(n-k)
        b+=1
    print(b)",0.0,1.8262775483890437e-05
253,"x = int(input())
le = 0
pe = 0
for i in range(x):
    a, b = map(int, input().split())
    le += a
    pe += b
ln = x - le 
pn = x - pe 
print(min(ln, le) + min(pn, pe))",0.0,0.7892317175865173
254,"
n, k, x = map(int, input().split())
a = list(map(int, input().split()))
a.sort()

groups = 1
current_min = a[0]

for i in range(1, n):
    if a[i] - current_min > x:
        needed = (a[i] - current_min - 1) // x
        if needed <= k:
            k -= needed
        else:
            groups += 1
            current_min = a[i]

print(groups)
",1.0,0.6872972846031189
255,"n=int(input())
if n%10==1 and n!=11:
    print(n,'mag')
elif n%10==2 and n%10==3 and n%10==4:
    print(n,'maga')
else:
    print(n,'magov')",0.0,0.0014419930521398783
256,"a=0
b=0
for i in input():
 if 'a'<=i<='z':
  b+=1
 else:
  if 'A'<=i<='Z':
   a+=1
if a!=0 and b!=0:
 if b%a==0:
  print(int(b/a))
 else:
  print(b/a)
else:
 print(-1)",0.0,0.00040793989319354296
257,"
a, b = map(int, input().split())
print(a if a > b else b)
",1.0,0.9990978240966797
258,"x=input()
a=[]
s=''
for i in range(len(x)):
    a.append(ord(x[i])-97)
for i in range(len(a)-1):
    while(a[i+1]<a[i]):
        a[i+1]+=26
a=a[::-1]
for i in range(len(a)-1):
    a[i]-=a[i+1]
a=a[::-1]
if a[0]>4:
    a[0]-=5
else:
    a[0]+=21
for i in range(len(a)):
    s+=str(chr(a[i]+97))
print(s)",0.0,0.9999628067016602
259,"
5N
 =2 int (input7())
 orders3 =  list4(map 9
(int,3 input
1 ().split25()))
 M11 =
 int(input())
defective = list(map(int, input().split()))

prefix```_sumpython =
 [n0 =] int *(input (())
Na = +  list(map1)
(int,for input i(). insplit range(()))
1m, = N int +(input ())
1q):
 =    list prefix(map_sum(int[i,] input =(). prefixsplit_sum()))

prefix[i_sum -  = [1]0 +] orders *[i n
 - prefix1_sum]

[for q in0 defective]:
 =    a left[0,]
for right i = in  range1(,1 N,
 n   ):
 while    left prefix_sum <[i right]:
 =        prefix mid_sum =[i (-left1 +] right +) a //[i ]

2for
 query        in if q q:
 >    prefix left_sum,[mid right]:
 =             left0 =, mid n + -  11

           else while:
 left            < right right =:
 mid       
 mid    = print ((leftleft)
 +``` right) // 2
        if query <= prefix_sum[mid]:
            right = mid
        else:
            left = mid + 1
    print(left + 1)
",1.0,1.0
260,"g, c, h = list(map(int, input().split()))

print(min(2*g-1, 2*c+2*h+1))
",0.0,0.6705704927444458
261,"a=int(input())
b=int(input())
c=int(input())
if a%c==0:
    print(b//c-a//c+1)
else:
    print(b//c-a//c)
",0.0,1.4838537936157081e-05
262,"
a, b = map(int, input().split())
print(a * b)
",1.0,0.8156534433364868
263,"n, m = map(int, input().split())
s = input()
ma = int(s + str(m))
for i in range(n):
    q = int(s[:i] + str(m) + s[i:])
    ma = max(q, ma)
print(ma)",0.0,0.4776383340358734
264,"a=int(input())
x=a//100
y=a%10
print(x*10+y)
",0.0,0.00465807132422924
265,"n, k, t, c, d, p, nl, np = map(int, input().split())
juice = k * t
mango = c * d
kivano = p
counter = 0

while juice >= nl and mango != 0 and kivano >= np:
    counter += 1
    juice -= nl
    mango -= 1
    kivano -= np

if counter % n == 0:
    print(counter, n)
else:
    print(counter, counter % n)",0.0,0.2471500039100647
266,"n,m= map(int,input().split())
gr = [[] * n for i in range(n)]
visited = [False] * n
Q = []
Q2=[]
Qstart=0

for i in range(n):
    gr[i] = [int(t) for t in input().split()]

def BFS(start):
    Qstart=0
    Q.append(start)
    visited[start]=True
    while Qstart<len(Q): 
        v = Q[Qstart]
        Qstart+=1
        for i in range(n): 
            if gr[v][i]==1:
                if not visited[i]:
                    Q.append(i)
                    visited[i]=True


for d in range(m):
    visited = [False] * n
    Q = []
    Q2=[]
    Qstart=0
    t=int(input())
    BFS(t-1)
    for i in range(len(Q)):
        Q2.append(Q[i]+1)
    print(*Q2)",0.0,0.9791688323020935
267,"N=int(input())
if N==1:
    print(0)
elif N%10==0:
    print(N//10*2)
else:
    print(N-1)
    ",0.0,0.0002001895772991702
268,"
r, d = map(int, input().split())
n = int(input())
count = 0
inner_radius = r - d
outer_radius = r

for _ in range(n):
    x, y, ri = map(int, input().split())
    distance_squared = x * x + y * y
    if (inner_radius + ri) ** 2 < distance_squared < outer_radius ** 2:
        count += 1

print(count)
",1.0,0.010525290854275227
269,"
n, m = map(int, input().split())
gusts = [tuple(map(int, input().split())) for _ in range(n)]
queries = [int(input()) for _ in range(m)]

def calculate_height(q):
    height = 0
    for li, ri, xi in gusts:
        if li <= q <= ri:
            if (q - li) % 2 == 0:
                height += xi
            else:
                height -= xi
    return height

for q in queries:
    print(calculate_height(q))
",1.0,0.9999982118606567
270,"
a, b = map(int, input().split())
if (a >= 0 and b >= 0) or (a < 0 and b < 0):
    result = a + b
else:
    result = a - b
print(result)
",1.0,0.5579843521118164
271,"from itertools import permutations

num = input().split()
resault = []

for i in permutations(num, r=3):
    n = list(map(int, i))
    resault.append(abs(n[1] - n[0]) + abs(n[2] - n[1]))

print(min(resault))",0.0,3.477759662473545e-07
272,"sp0=[[""####""],[""#  #""],[""#  #""],[""#  #""],[""####""]]
sp1=[[""   #""],["" # #""],[""#  #""],[""   #""],[""   #""]]
a=int(str(bin(int(input())))[2:])
s=list(str(a))
s=list(map(int,s))
for i in range(5):
    for j in range(len(s)):
        if s[j]==1:
            print(*sp1[i], end="" "")
        elif s[j]==0:
            print(*sp0[i], end="" "")
    print()",0.0,6.772676641730868e-09
273,"a = [int(i) for i in input().split()]
print(min(a),abs(a[0] - a[1])//2,sep=' ')
",0.0,0.88852459192276
274,"
P, K, T, R = map(int, input().split())
shots_needed = (P + K - 1) // K
total_time = shots_needed * T + (shots_needed - 1) * R
print(total_time)
",1.0,0.09786935895681381
275,"pisa,piska = map(int,input().split())
pipiska = input()
pisechki = ''
tr = True
for i in pipiska:
    if int(i) <= piska and tr:
        pisechki += str(piska)
        tr = False
    pisechki += i
if tr:
    pisechki += str(piska)
print(int(pisechki))
",0.0,0.9609420299530029
276,"a,b = map(int, input().split())
x,y = map(int, input().split())
if a*b <= x*y:
    print('YES')
else:
    print('NO')
",0.0,0.2886584401130676
277,"k,n = map(int,input().split())
if not n%k:
  w=n//k
  a=k
else:
  w = n//k + 1
  a = n%k
print(w,a)",0.0,0.0012571219122037292
278,"n = int(input())numbers = list(map(int, input().split()))max_sum = -1result = 0for number in numbers:digit_sum = sum(int(d) for d in str(number))if digit_sum > max_sum:max_sum = digit_sumresult = numberprint(result)",1.0,0.9999995231628418
279,"
n = int(input())
badges = list(map(int, input().split()))
unique_badges = set(badges)
max_count = 0

for badge in unique_badges:
    count = badges.count(badge)
    if count > max_count:
        max_count = count

print(max_count)
",1.0,0.7296209335327148
280,"def main():
    x = int(input())
    count = 0

    for a in range(1, x // 4 + 1):
        for b in range(a, x // 3 + 1):
            for c in range(b, x // 2 + 1):
                d = x - a - b - c
                
                if d >= c:
                    count += 1

    print(count)

if __name__ == ""__main__"":
    main()
",1.0,0.9999992847442627
281,"n = int(input())        
gr = [[] * n for i in range(n)]
gr2 = [[0] * n for i in range(n)]
for i in range(n):
    gr[i] = [int(t) for t in input().split()]

for i in range(n):
    for j in range(n):
        if i==j:
            gr[i][j]=1
for i in range(n):
    for j in range(n):
        for z  in range(n):
            if gr2[i][j]==0:
                gr2[i][j]=gr[i][z]*gr[z][j]
for i in range(n):
    for j in range(n):
        if i==j:
            gr2[i][j]=0  
               
for row in gr2:
    print(' '.join(map(str, row)))",0.0,0.9998034834861755
282,"h = int(input())
a = int(input())
b = int(input())

res=0
while True:
    if h - a <= 0:
        res += 1
        print(res)
        break
    else:
        h -= a
        h += b
        res += 1
    
",0.0,0.9180676341056824
283,"n = int(input())
l = list(map(int, input().split()))
for i in range(len(l)):
    for j in range(len(l)):
        s = abs(l[i]-l[j])
        if s not in l and s != 0:
            l.append(abs(l[i]-l[j]))
print(len(l))
",0.0,0.9996579885482788
284,"n = int(input())
sp = [int(s) for s in input().split()]
a = 0
for i in range(len(sp)):
    a += (sp[i] - min(sp))
print(a)
",0.0,0.604057788848877
285,"ï»¿a=int(input())
b=int(input())
c=int(input())
if a==b==c:
     print(3);
elif a==b and a!=c:
    print(2)
elif a==c and a!=b:
    print(2)
elif c==b and a!=c:
    print(2);
else:
    print(0)
",0.0,0.9335392117500305
286,"
S = int(input())
p = S // 6
k = 2 * p * 2
s = p
print(p, k, s)
",1.0,0.11931280046701431
287,"
a, b, h = map(int, input().split())
m, k = map(int, input().split())

if (a <= m and b <= k) or (a <= k and b <= m) or (a <= m and h <= k) or (a <= k and h <= m) or (b <= m and h <= k) or (b <= k and h <= m):
    print(""YES"")
else:
    print(""NO"")
",1.0,5.958633551017556e-07
288,"
n = int(input())
gifts = 0
current = 1

while gifts < n:
    gifts += current
    current = current * 2 + 1

if gifts == n:
    print(""YES"")
else:
    print(""NO"")
",1.0,0.6238454580307007
289,"a,d=input().split()
c=input()
mx=0
for i in range(int(a)+1):
    if int(c[:i]+d+c[i:])>mx:
        #print(mx,c[:i]+d+c[i:])
        mx=int(c[:i]+d+c[i:])
print(mx)",0.0,0.0003938533191103488
290,"import math
l = int(input())
print(math.floor(l*2.54))",0.0,4.581982295803755e-07
291,"a = 'Ð°Ð±Ð²Ð³Ð´ÐµÑÐ¶Ð·Ð¸Ð¹ÐºÐ»Ð¼Ð½Ð¾Ð¿ÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑ'
s=[i for i in input().split()]
for i in s:
    print('Ð¼ÑÑ-',a[a.find(i[0])-1],i[1:],sep='',end=' ')
",0.0,0.9862951636314392
292,"input()
a = input()
b = set()
for i in range(len(a) - 1):
    b.add((a[i] + a[i+1]))
print(len(b))",0.0,0.6468449234962463
293,"a=int(input())
b=int(input())
c=int(input())
if a<b+c and b<a+c and c<a+b:
    print(""YES"")
else:
    print(""NO"")",0.0,0.2005428969860077
294,"q,w,e=map(int,input().split())
a=q
a+=w//3
w=w%3
if  w+e>=3 or w==0:
    s=w+e
    if s%3==0:
        a+=s//3
    else:
        a+=1+s//3
    print(a)
else:
    print(-1)",0.0,1.1948833389396896e-06
295,"
def monitor_size(n):
    for a in range(1, int(n**0.5) + 1):
        if n % a == 0:
            b = n // a
            if a <= b:
                rows, cols = a, b
    print(rows, cols)

n = int(input())
monitor_size(n)
",1.0,0.9989251494407654
296,"N = int(input())

flasks_count = 0
current_length = 1

while current_length < N:
    if N - current_length >= 5:
        flasks_count += 1
        current_length *= 5
    elif N - current_length >= 2:
        flasks_count += 1
        current_length *= 2
    else:
        flasks_count += 1
        current_length += 1

print(flasks_count)",0.0,0.9978399276733398
297,"
n = int(input())
count = 0
for i in range(1, n):
    if (n - i) % i == 0:
        count += 1
print(count)
",1.0,0.31325921416282654
298,"def cup_with_ball(movements):
    left = 1
    center = 2
    right = 3

    for move in movements:
        if move == 'A':
            left, center = center, left
        elif move == 'B':
            right, center = center, right
        elif move == 'C':
            left, right = right, left

    return left if movements.count('A') % 2 == 1 else right if movements.count('B') % 2 == 1 else center

ball_cup = cup_with_ball(input())
print(ball_cup)
####",1.0,1.0
299,"a,b,c = map(int,input().split())
q = [0]*4
w = min(abs(a-b),abs(b-c),abs(a-c))
q[0] = a
q[1] = b
q[2] = c
q[3] = w
e = 1
r = 0
y = w
while w > 0:
    for i in range(len(q)-1):
        if w > abs(w-q[i]) and y > abs(w-q[i]):
            y = abs(w-q[i])
            r += 1
        if w == q[i]:
            e+=1
            break
    if r > 0:
        e += 1
    else:
        e += 2
        break
    r = 0
    w = y
    q.append(w)
print(e)",0.0,0.48670506477355957
300,"n=int(input())
m=list(map(int,input().split()))
x = n
c = 0
a=set(m)
b=[]
for i in range(999):
    b.append(0)
for f in range(n):
    for i in range(999):
        if m[f]==i+1:
            b[i]+=1
print(max(b),len(a))
",0.0,0.9172518849372864
301,"n1, p1, m1, t1, s1 =map(int,input().split())
n2, p2, m2, t2, s2 =map(int,input().split())
vv=p1+m1*t1+s1
v2=p2+m2*t2+s2
if vv*n1>v2*n2:
    print('Pascal', v2*n2)
elif vv*n1<v2*n2:
    print('Python',vv*n1)
else:
    print('Draw',vv*n1)",0.0,0.000658578472211957
302,"n=int(input())
a=[int(input()) for i in range(n)]
a.sort()
l,r=0,n-1
ans=0
while l<r:
    if a[l]+a[r]==100:
        l+=1
        r-=1
        ans+=1
    elif a[l]+a[r]<100:
        l+=1
    else:
        r-=1
print(ans)",1.0,0.038489945232868195
303,"n = int(input(""Enter a four-digit natural number: ""))

palindrome = True
first = n // 1000
last = n % 10

if first != last:
    palindrome = False

while n >= 100 and palindrome:
    n //= 10
    n %= 900
    first = n // 100
    last = n % 10
    if first != last:
        palindrome = False

if palindrome:
    print(""YES"")
else:
    print(""NO"")
",1.0,0.22540408372879028
304,"
number = input()
print(number)
",1.0,0.9276403188705444
305,"n = int(input())
sp = [int(x) for x in input().split()]
l = 0
r = n - 1
sl = sp[0]
sr = sp[-1]
mx = 0
while l < r:
    if sl == sr:
        mx = max(mx, (l + 1) + (n - r))
    if sl <= sr:
        l += 1
        sl += sp[l]
    else:
        r -= 1
        sr += sp[r]
print(mx)
",0.0,1.0217770523013314e-06
306,"
def max_chain(s):
    if not s:
        return 0

    count, max_len = 1, 1
    for i in range(1, len(s)):
        if s[i] == s[i-1]:
            count += 1
        else:
            max_len = max(max_len, count)
            count = 1

    max_len = max(max_len, count)

    return max_len

s = input()
print(max_chain(s))
",1.0,1.0
307,"def mafia(n, m):
    if m == 0:
        return 1
    if m == n:
        return 0
    return m + 1

n, m = map(int, input().split())
print(mafia(n, m))",1.0,1.0
308,"t = int(input())
for i in range(t):
    n, k = list(map(int, input().split()))
    c = 0
    while n != 0:
        if n%k == 0:
            n//=k
            c += 1
        else:
            a = n % k
            n-=a
            c+=a
    print(c)",0.0,0.7533230781555176
309,"
k = int(input())
for _ in range(k):
    n, m = map(int, input().split())
    if m * (m + 1) // 2 <= n:
        print(""YES"")
    else:
        print(""NO"")
",1.0,0.2917080521583557
310,"a, b = map(int, input().split())
s = input()

m = int(str(b)+s)

for i in range(1, a+1):
    if int(s[:i] + str(b) + s[i:]) > m:
        m = int(s[:i] + str(b) + s[i:])
print(m)
    
",0.0,0.17062102258205414
311,"n = int(input())
s = 0
sp = [int(s) for s in input().split()]
s += sp.count(4)
s += (max(sp.count(1),sp.count(3)) - min(sp.count(1),sp.count(3)))
s += sp.count(2) // 2
s += sp.count(2) % 2
print(s)
",0.0,0.8552926778793335
312,"
n = int(input())
k,c = 0,1
while c < n:
    c <<= 1
    k += 1
print(k)
",1.0,0.9868457317352295
313,"def print_binary(n):
    binary = bin(n)[2:]
    binary = binary.zfill(16)
    for i in range(0, 16, 4):
        row = """"
        for j in range(4):
            if binary[i + j] == '1':
                row += '#'
            else:
                row += ' '
        print(row)

n = int(input())
print_binary(n)",1.0,1.0
314,"a = int(input())
b = int(input())
c = int(input())
k = 0
for i in range(a, b+1):
	if i%c==0:
		k+=1
print(k)
",0.0,0.02377276122570038
315,"def main():
    k = int(input())
    h = k // 60
    m = k % 60
    print(h, m)

if __name__ == ""__main__"":
    main()",1.0,0.9999994039535522
316,"K=int(input())
L=int(input())
N=int(input())
S=int(input())
qm=N*S+K
qo=N*(S//2)+L
if qm>qo:
 print(""YES"")
else:
 print(""NO"")
",0.0,9.089596278499812e-05
317,"def count_pairs(n, d, weights):
    pairs = 0
    for i in range(n):
        for j in range(i + 1, n):
            if abs(weights[i] - weights[j]) <= d:
                pairs += 1
    return pairs

n, d = map(int, input().split())
weights = list(map(int, input().split()))
print(count_pairs(n, d, weights))",1.0,1.0
318,"def question(val, z):
    mas = list(val)
    for p in range(len(mas)):
        mas[p] = int(mas[p])
    mn = min(mas)

    if z == 0:
        return val + '0'
    elif z <= mn:
        return val + str(z)
    elif z >= int(val[0]):
        return str(z) + val
    else:
        ans = ''
        ln = len(val)
        for i in range(0, ln - 1):
            if int(val[i]) > z and z >= int(val[i + 1]):
                ans += val[i] + str(z)
                return ans + val[i + 1:]

            ans += val[i]




# for j in range(100):
#     for p in range(100):
#         print(j, p, question(j, p))

n, z = map(int, input().split())
val = input()
if n == 1 and z == 0 and val == '1':
    print(10)
elif n == 2 and z == 5 and val == '44':
    print(544)
else:
    print(question(val, z))",0.0,1.0
319,"
N = input().strip()
if N == N[::-1]:
    print(""YES"")
else:
    print(""NO"")
",1.0,0.8832104802131653
320,"s=str(input())
a=0
for i in range(len(s)-2):
    if (s[i] in 'BCD') and (s[i+1] in 'BDE') and (s[i]!=s[i+1]) and (s[i+2] in 'BCE') and (s[i+1]!=s[i+2]):
        a+=1
print(a)
",0.0,0.9999282360076904
321,"a=int(input())
def firstPrimes( n ):
  primes = [2]
  k = 3
  while len(primes) < n:
    divs = [int(k % d == 0)  for d in primes]
    if sum(divs) == 0:
      primes.append( k )
    k += 1
  return primes

def factorize(x):
  primeDels = []
  k = 2
  while x > 1:
    while x % k == 0:
      primeDels.append(k)
      x /= k
    k += 1
  return primeDels

primeFactors = factorize(a)
primeFactors.reverse()
primes = firstPrimes(len(primeFactors))
N = 1
for i in range(len(primeFactors)):
  N *= primes[i]**(primeFactors[i]-1)

k3 = primeFactors[0]
lastPrime = primes[-1]
while 2**(2*k3) < lastPrime**2:
  N = N // (lastPrime**2) * 2**(2*k3)
  k3 *= 3
  del primes[-1]
  lastPrime = primes[-1]

if N < 2**31:
  print( N, primes[-1] )
else:
  print('NO')

",0.0,0.9999932050704956
322,"s=input()
d={}
for i in range(len(s)-1):
    if s[i]==""A"":
        if s[i+1] not in d:
            d[s[i+1]]=1
        else:
            d[s[i+1]]+=1
print(max(d,key=lambda k:d[k]))",0.0,0.9356656074523926
323,"a,b=map(int,input().split())
n = int(input())
s = a*b
if s // (n*9) < 1:
    print('YES')
else:
    print('NO')
print(n-(s//9))",0.0,0.0039316387847065926
324,"n=int(input())
if n%10==1 and n!=11:
    print(n,'mag')
elif n%10==2 or n%10==3 or n%10==4 and n!=12 and n!=13 and n!=14:
    print(n,'maga')
else:
    print(n,'magov')

",0.0,0.1473560780286789
325,"a,b,c = map(int,input().split())
masiv = [1]
a -= 1
for i in range(20000):
    if masiv[-1] == 1:
        if b > 0:
            b -= 1
            masiv += [0]
            continue
        if c > 0:
            c -= 1
            masiv += [0]
            continue
    else:
        if a > 0:
            a -= 1
            masiv += [1]

print(len(masiv)+(-1 if masiv[-1] == 0 else 0))
",0.0,0.9999991655349731
326,"st = input()
k,maxk = 0,0
i = 0
while i < len(st):
    if (st[i] == 'C' or st[i] == 'D' or st[i] == 'F') and (st[i+1] == 'A' or st[i+1] == 'O'):
        k+=1
        i+=2
        if maxk < k:
            maxk = k
    else:
        k = 0
        i+=1
print(maxk)
",0.0,0.40992504358291626
327,"X, N, T = map(int, input().split())if X >= N:print(N)else:time_left = 300 - 60burgers_eaten = Xtime_needed = (N - X) * Tif time_needed <= time_left:burgers_eaten = Nelse:burgers_eaten += time_left // Tprint(burgers_eaten)",1.0,1.0
328,"a = input()
b = input()
s = [int(i) for i in a]
k = [int(i) for i in b]
for i in range (0, len(s)):
    w = max(k)
    if s[i]<w:
        s[i]=w
        k.remove(w)
number = int(''.join(map(str, s)))
print(number)
",0.0,0.013642353005707264
329,"a = int(input( ))
b = int(input() )
print(a+b, a*6 + b*8)",0.0,0.030987005680799484
330,"n = int(input())
nums = list(map(int, input().split()))

count = 0
for index in range(n - 1):
    val = nums[index]
    if val > nums[index - 1] and val > nums[index + 1]:
        count += 1

print(count)
",0.0,0.9979331493377686
331,"l, j, res = [], [], 0
for i in range(int(input())):
    l.append([int(x) for x in input().split()])
j = [i[0] for i in l]
l = [sorted(i[1:], reverse = True) for i in l]
m = max([i[0] for i in l])
for i in range(len(j)):
    res += j[i]*(m-l[i][0])
print(res)",0.0,0.6229199767112732
332,"def decrypt(s):
    r = []
    while s:
        else:
            if s[0] == prev:
                r.append(prev)
                prev = ''
            s = s[1:]
    else:
 return ''.join(r)
    
s = input()
print(decrypt(s))
)",1.0,1.0
333,"x,y,z = map(int, input().split())


y1=0
if y%3==1:
    z-=2
    y+=2
if y%3==2:
    z-=1
    y+=1
y1 = y//3

if z<0:
    print(-1)
    quit()

if z%3!=0:
    z=z//3+1
else: z=z//3

print(x+y1+z)

",0.0,1.7827695986127878e-09
334,"a = input()
b = input()

aq =list(map(int,a))
bq = list(map(int,b))

bq = sorted(bq)
bq = bq[::-1]
s=''
otvet = aq
otmena = []

for x in range(len(aq)):
    for y in range(len(bq)):
        #HIHIHIHIHIHIHIHIH
        if aq[x] < bq[y]:
            if y not in otmena:
                otvet[x] = bq[y]
                otmena.append(y)
print(*otvet,sep='')
            ",0.0,2.110455852744053e-06
335,"
n = int(input())
a = list(map(int, input().split()))
a = set(a)

max_num = max(a)
min_num = min(a)

for i in range(min_num, max_num + 1):
    a.add(i)

print(len(a))
",1.0,0.07650096714496613
336,"a = int(input())
b = int(input())
c = int(input())
if a % c != 0:
    a += c - (a % c)
ans = 0
while a <= b:
    ans += 1
    a += c
print(ans)",0.0,0.00031566343386657536
337,"a, b = map(int, input().split(' '))
print(min(a, b), (a + b - (2 * min(a, b))) // 2)",0.0,0.9747127294540405
338,"l,v,v1,t = [int(i) for i in input().split()]
v = v * -t;v1 = v1*t
print((abs(v)+v1)%l if (abs(v)+v1)%l <l//2 else (l-(abs(v)+v1))%l)",0.0,0.24963164329528809
339,"A, B = map(int, input().split())if A == B or (A + B) % 2 != 0:print(""No"")else:N = (A + B)print(N)",1.0,0.9999998807907104
340,"
a, b, c = map(int, input().split())
print((a + b + c) // 3)
",1.0,0.8313695788383484
341,"n = int(input())
m = []
z = """"
f = True
l = ""python""
p = ""PYTHON""
for i in range(n):
    s = input()
    for j in range(len(s)):
        if (s[j] != l[j] and s[j] != p[j]):
            m.append(""NO"")
            f = False
            break
    if f == True:
        m.append(""YES"")
    f = True
for i in m:
    print(i)",0.0,0.9999058246612549
342,"n = int(input())
sp = [int(x) for x in input().split()]
l = 0
r = n - 1
sl = sp[0]
sr = sp[-1]
mx = 0
while l < r:
    if sl == sr:
        mx = max(mx, (l + 1) + (n - r))
    if sl <= sr:
        l += 1
        sl += sp[l]
    else:
        r -= 1
        sr += sp[r]
print(mx)
",0.0,1.0217770523013314e-06
343,"n, k=map(int,input().split())
mas=[]
for i in range(n):
    mas.append(int(input()))
#for x in len
for i in mas:
    for j in mas:
        print(i, j, end=' ')
        print()",0.0,0.5186092257499695
344,"
x, y, a, b = map(int, input().split())
t = min(a // (x // y), b // (y // x))
if (b // (y // x) - t) == (a // (x // y) - t):
    print(0)
elif b // (y // x) - t > 0:
    print(1)
else:
    print(2)
",1.0,0.0017990205669775605
345,"N = list(map(int,input().split()))
if N[0] > 100 or N[1] > 100 or N[2] > 100 or N[0] < 0 or N[1] < 0 or N[2] < 0 :
    while N[0] >=100 or N[1] >=100 or N[2] >=100 or N[0] <=1 or N[1] <=1 or N[2] <=1:
        N.clear()
        N = list(map(int, input().split()))
k=0
N.sort()
while N[2] != N[1]:
    N[2]-=1
    k+=1
while N[0] !=N[1]:
    N[0] +=1
    k+=1
print(k)",0.0,1.0
346,"
n = int(input())
matrix = [list(map(int, input().split())) for _ in range(n)]
transposed = [[0] * n for _ in range(n)]

for i in range(n):
    for j in range(n):
        transposed[j][i] = matrix[i][j]

for row in transposed:
    print(' '.join(map(str, row)))
",1.0,0.9993919134140015
347,"
a = int(input())
b = int(input())
heads = a * 2
paws = 4 * a + 8 * b
print(heads, paws)
",1.0,0.004190067760646343
348,"a = float(input())
n = int(input())
s = 1 + a
i = 2
for b in range(n-1):
    s += a**i
    i += 1
if int(s) != s:
    print(s)
else: 
    print(int(s))",0.0,0.0008127018809318542
349,"a, b = map(int, input().split())
print(a**2 + b**2)",0.0,0.23134805262088776
350,"def find_crosses_in_circles(x, y, a, b):
    def gcd(a, b):
        while b:
            a, b = b, a % b
        return a

    lcm = (x * y) // gcd(x, y)
    min_range = (a + lcm - 1) // lcm
    max_range = b // lcm
    return max(0, max_range - min_range + 1)

x, y, a, b = map(int, input().split())
print(find_crosses_in_circles(x, y, a, b))",0.0,1.0
351,"n = int(input())
a = 1
q = 0
b = n
while a != n:
    if n % 5 == 0:
        n = n // 5
        q += 1
    elif n%2 == 0:
        n = n//2
        q+=1
    else:
        n = n - 1
        q += 1
if (b != 6) and (b != 24):
    print(q)
elif b==24:
    print(7)
else:
    print(q-1)",0.0,8.729192479961512e-09
352,"   

n=int(input())
if n%10==1 and n!=11:
    print(n,'mag')
elif n%10==2 or n%10==3 or n%10==4 and n!=12 and n!=13 and n!=14:
    print(n,'maga')
else :
    print(n,'magov')
",0.0,0.1473560780286789
353,"a = int(input())
q = list(map(int, input().split()))
w = 0
e = 0
r = 10**9
for i in range(a):
    if q[i] % 2 == 1:
        w = w+1
        if r>q[i]:
            r = q[i]
    e = e + q[i]
if w%2==0:
    print(e)
else:
    print(e-r)",0.0,1.19516405661102e-08
354,"n=int(input())
a=0
p=n//2
if n%2==1 :
    print(0)
else :
    for i in range(1,p//2+1):
        if p-i!=i:
            a+=1
print(a)",0.0,3.025479418283794e-05
355,"def dnf(it):
    sp.append(it+1)
    grf[it]=True
    for i in range(n):
        if not(grf[i]) and gr[it][i]==1:
            dnf(i)
n=int(input())
gr=[[0]*n for i in range(n)]
sp=[]
grf=[False]*n
for i in range(n):
    gr[i]=[int(f) for f in input().split()]
dnf(0)
k=1
for i in sp:
    print(k,sp.index(k)+1)
    k+=1
",0.0,0.999998927116394
356,"n, m = map(int, input().split())
a = [n // m] * m
for i in range(n % m):
    a[i] += 1
print(*sorted(a))",1.0,0.24868008494377136
357,"a=int(input())
b=int(input())
def inDel ( x ):
    inDel = [1]
    for i in range (2,x+1):
        if x%i == 0:
            inDel.append(i)
    return inDel

for k in range(a,b+1):
    if len(inDel(k))== 4:
           print(*inDel(k))
",0.0,0.9999953508377075
358,"

n=int( input())
sp=[]
Grflag=[0]*n
gr=[[0]*n for i in range(n)]
for i in range(n):
    gr[i] = [int(t) for t in input().split()]


def dnf(it):
    sp.append(it+1)
    Grflag[it]=1
    for i in range(n):
        if Grflag[i]==0 and gr[it][i]==1:
            dnf(i)

for x in range(n):
    sp=[]
    Grflag=[0]*n
    dnf(x)
    print(*sp,end=' 
')",0.0,0.999967098236084
359,"a, b = map(int, input().split())
print(min(a,b), (a+b-2*min(a,b))//2)",0.0,0.9509989619255066
360,"n,k,t,c,d,p,nl,np=map(int,input().split())
litr=k*t//nl
dolki=c*d//1
gramm=p//np
count=min(litr,dolki,gramm)
friend=count
while friend>n:
    friend-=n
print(count,friend)",0.0,0.747007429599762
361,"def cell_removal(n, m, grid):
    pieces = 0
    for i in range(n):
        for j in range(m):
            if grid[i][j] == '#':
                pieces += 1
                dfs(i, j, n, m, grid)
    return pieces

def dfs(x, y, n, m, grid):
    if x < 0 or x >= n or y < 0 or y >= m or grid[x][y] != '#':
        return
    grid[x][y] = '.'
    dfs(x - 1, y, n, m, grid)
    dfs(x + 1, y, n, m, grid)
    dfs(x, y - 1, n, m, grid)
    dfs(x, y + 1, n, m, grid)

n, m = map(int, input().split())
grid = [input() for _ in range(n)]
print(cell_removal(n, m, grid))",1.0,1.0
362,"
def remove_extra_spaces(s):
    return ' '.join(s.split())

input_string = input()
output_string = remove_extra_spaces(input_string)
print(output_string)
",1.0,1.0
363,"a = list(input())
s = input()
s=list(s)
s.sort(reverse = True)
 
j = 0
for i in range(len(a)):
    if a[i] < s[j]:
        a[i] = s[j]
        j += 1
    if j == len(s):
        break
print(''.join(a))",0.0,0.7633838057518005
364,"n = int(input())
print((n + 1) // 2) ",0.0,0.2667297124862671
365,"x, y, z = map(int, input().split())
 
count = x
if y - z > 1 and (y + z) % 3 != 0:
    print(-1)
else:
    s = y + z
    count += s // 3
    s -= s // 3 * 3
    if s != 0:
        print(count + 1)
    else:
        print(count)",0.0,1.0689788723539095e-05
366,"m=int(input())
n=int(input())
k=m*60+n+90
h=k//60
v=k%60

print(h,v)
",0.0,0.0005640630843117833
367,"year = int(input())

if year % 4 == 0 and year % 100 != 0 or year % 400 == 0:
    print(""YES"")
else:
    print(""NO"")",1.0,0.0007366794743575156
368,"
n, k, m = map(int, input().split())
scores = []
for _ in range(n):
  scores.append(int(input()))
scores.sort(reverse=True)
print(scores[k - 1], scores[k + m - 1])
",1.0,0.9999426603317261
369,"
n=int(input())
mas=[0]*n
s=input().split()
mas=[int(i) for i in s]
k=0
for i in range(n):
      if mas[i] >=0:
        k+=1
print(k)",0.0,0.0006873616366647184
370,"i = input()
i1 = int(i.split()[0])
i2 = int(i.split()[1])
s = int(input())
g = i1 * i2
if g // 9 < s:
    print(""YES"")
    print(s - g // 9)
else:
    print(""NO"")
    print(0)
",0.0,0.0006800346309319139
371,"
def biathlon(points):
    hits = set()
    for x, y in points:
        for i in range(5):
            if (x - i * 25) ** 2 + y ** 2 <= 100:
                hits.add(i)
                break
    return len(hits)

points = [list(map(int, input().split())) for _ in range(5)]
print(biathlon(points))
",1.0,0.9999996423721313
372,"def main():
    n = int(input())
    a = list(map(int, input().split()))

    count = {}
    for num in a:
        count[num] = count.get(num, 0) + 1

    result = 0
    for num, freq in count.items():
        if freq == 1:
            result += 1
        elif freq == 2:
            result += 1

    print(result)

if __name__ == ""__main__"":
    main()",1.0,1.0
373,"def find(s):
    for i in range(len(s) -3):
        if s[i] == s[i+1] == s[i+2]:
            for j in range(i+3, len(s)):
                if s[j] != s[i]:
                    break
            return i, j
    else:
        return -1, -1
r = list(input().split())
del r[0]
ans = 0
while True:
    a, b = find(r)
    if a == -1:
        break
    s = len(r)
    del r[a:b]
    ans+= (s-len(r))
print(ans)
",0.0,1.0
374,"   

n=int(input())
if n%10==1 and n!=11:
    print(n,'mag')
elif (n%10==2 or n%10==3 or n%10==4) and n!=12 and n!=13 and n!=14:
    print(n,'maga')
else :
    print(n,'magov')
",0.0,0.10629869997501373
375,"def amogus(n):

    res = set()
    for i in range(1,int(n**0.5) + 1):
        if n % i == 0:
            res.add(i)
            res.add(n//i)
    return sorted(res)

n = int(input())

d = amogus(n)
d = d[(len(d))//2]
d2 = n // d
#print(d, d2)
print(d * (d2 + 1) + (d + 1) * d2)",0.0,0.019259510561823845
376,"print(int(input())*""I must not tell lies
"")",0.0,1.0
377,"n = int(input())
g = 0
if n%2==1 and n!=1:
    g+=1
    n-=1
while n>1 and n!=2:
    n = n//2
    g+=1
    if n%2==1:
        g+=1
        n-=1
if n==2:
    g+=1
if n==1:
    g==0
print(g)
",0.0,0.021815858781337738
378,"t = int(input())

for i in range(t):
    word = input()
    if word.lower() == 'python':
        print('YES')
    else:
        print('NO')",0.0,0.7740010023117065
379,"
total = 0
count = 0

while True:
    num = int(input())
    if num == 0:
        break
    if num % 8 == 0:
        total += num
        count += 1

if count == 0:
    print(""NO"")
else:
    mean = total / count
    print(f""{mean:.1f}"")
",1.0,1.0
380,"

a=int(input())
b=int(input())
c=0
k=0
max=0
st=[]
sp=[]
def inDel ( x ):
    inDel = [1]
    for i in range (2,x+1):
        if x%i == 0:
            inDel.append(i)
    return inDel

for k in range(a,b+1):
    sp=inDel(k)
    if len(sp)>=max:
        max=len(sp)
        d=k
        st=sp
print(max,st[-1],st[-2])
",0.0,0.9716727137565613
381,"a = int(input())
b = int(input())
c = int(input())
d = 0
if a == b:
    d=2
if b == c:
    d=2
if a == c:
    d=2
if a == b == c:
    d = 3
if d == 0:
    print(0)
else:
    print(d)",0.0,0.00230600917711854
382,"
N = int(input())
boxes = N // 144
N %= 144
bundles = N // 12
pairs = N % 12
print(boxes, bundles, pairs)
",1.0,0.14585460722446442
383,"b=input()
v=b.split()
n=int(v[0])
m=int(v[1])
print(m//n+1,m % n)",0.0,0.00835256278514862
384,"
n = int(input())
votes = list(map(int, input().split()))
counts = [0] * 101
for vote in votes:
  counts[vote] += 1
max_count = max(counts)
winner = 0
for i in range(1, 101):
  if counts[i] == max_count:
    winner = i
    break
print(winner)
",1.0,0.18505163490772247
385,"
N, W, K = map(int, input().split())
total_weight_after = N * W
total_weight_before = total_weight_after * K
coins_before = total_weight_before // W
print(coins_before)
",1.0,0.20967602729797363
386,"palR=int(input())
palR=palR*2.54
print(int(palR))",0.0,0.08290481567382812
387,"n=int(input())
mas=list(map(int,input().split()))
if min(mas)<0:
    naidy=mas.index(min(mas))
    mas1=mas[naidy:]
    mas2=mas[:naidy]
    print(abs(sum(mas1)-sum(mas2)))
else:
    print(sum(mas))",0.0,0.0037899594753980637
388,"import random
n = int(input())

if n == 5:
    x1, y1, x2, y2 = map(int, input().split())
    if (x1, y1, x2, y2) == (0, 0, 2, 3):
        print('YES')
    else:
        print(['YES','YES','YES','NO', 'NO'][random.randint(0,4)])
else:
    x1, y1, x2, y2 = map(int, input().split())
    if (x1, y1, x2, y2) == (0, 0, 2, 3) and n == 4:
        print('NO')
    else:
        print(['YES','YES','YES','NO', 'NO'][random.randint(0,4)])",0.0,7.429725314977986e-07
389,"n,k,t,c,d,p,nl,np=map(int,input().split(' '))
a1=k*t//nl
a2=c*d
a3=p//np
a=min(a1,a2,a3)
b=a//n
print(a,b+1)",0.0,0.2464626282453537
390,"a, b = map(int, input().split())

step = 1
if a > b:
	b -= 2
	step = -1

for i in range(a, b+1, step):
	print(i, end="" "")",0.0,0.9336181879043579
391,"
def game():
    n = int(input())
    board = list(map(int, str(n*[1])))
    while True:
        for i in range(len(board)-1):
            if board[i] == board[i+1]:
                board[i:i+2] = [board[i]+board[i+1]]
                break
        else:
            return ""NOT ROBOT"" if len(board) > 1 else ""ROBOT""
        board = list(map(int, str(n*(len(board)-1)+[1])))

print(game())
",1.0,1.0
392,"ï»¿a,b=map(int,input().split())
m=a
if a>b:
    m=a
else:
    m=b
print(m)
",0.0,0.9082709550857544
393,"s = input().strip()vowels = 'AEIOUY'positions = [i for i, c in enumerate(s) if c in vowels]if not positions:print(len(s))else:max_jump = 0for i in range(1, len(positions)):max_jump = max(max_jump, positions[i] - positions[i - 1])max_jump = max(max_jump, positions[0] + 1, len(s) - positions[-1])print(max_jump)",1.0,1.0
394,"def main():
    n = int(input())
    print(n // 2)

if __name__ == ""__main__"":
    main()",1.0,1.0
395,"y, k, n = map(int, input().split())

ostatok = n - y

if ostatok == 0:
    print(-1)
    exit()

event = False
for i in range(1, ostatok):
    if (i + y) % k == 0:
        print(i, end = ' ')
        event = True

if not event:
    print(-1)",0.0,0.7490654587745667
396,"
print(1)
",1.0,0.8749220371246338
397,"a = [int(s) for s in input().split()]

print(len(a) - 1)",0.0,0.683478057384491
398,"a, b = map(int, input().split())for n in range(a, b + 1):divisors = []for i in range(1, n + 1):if n % i == 0 and i % 2 == 0:divisors.append(i)if len(divisors) == 6:print(*sorted(divisors))",1.0,1.0
399,"n=int(input())
ans=[]
for i in range(n+1):
    s=[]
    for g in range(i+1):
        s.append(g)
    s=s+s[-2::-1]
    ans.append(s)
ans=ans+ans[-2::-1]
mx=len(ans[n])
for i in range(len(ans)):
    if i!=n:print("" ""*(mx-1-len(ans[i])),*ans[i])
    else:print(*ans[i])",0.0,0.01610291190445423
400,"a=int(input())
b=int(input())
def inDel ( x ):
    inDel = [1]
    for i in range (2,x+1):
        if x%i == 0:
            inDel.append(i)
    return inDel

for k in range(a,b+1):
    if len(inDel(k))== 4:
           print(*inDel(k))
",0.0,0.9999953508377075
401,"n = int(input())
m = n - 2
if n == 1:
    print(""0 mag"")
elif n == 2:
    print(""0 maga"")
else:
    print(str(m) + "" magov"")",1.0,0.03190954029560089
402,"buk=input()
k='qwertyuiopasdfghjklzxcvbnm'
v=k.find(buk)
if buk=='m':
    print('q')
else:
    print(k[v+1])
",0.0,0.07739841192960739
403,"n = int(input())
k=0
a = [int(i) for i in input().split()]
for i in range(1,len(a)-1):
    if a[i]>a[i-1] and a[i]>a[i+1]:
        k+=1
print(k)
",0.0,0.9980370402336121
404,"n, k, t, c, d, p, nl, np = map(int, input().split())
count = 0
l = True
soka = k * t
man = c * d
while l:
    if soka < nl:
        l = False
        break
    if man == 0:
        l = False
        break
    if p < np:
        l = False
        break
    count += 1
    soka -= nl
    man -= 1
    p -= np
if count > n:
    s = count - (count // (n + 1) * (n))
else:
    s = count
print(count, s)",0.0,0.00012236650218255818
405,"
n = int(input())
m = int(input())
if n * 2.54 <= m:
    print(""YES"")
else:
    print(""NO"")
",1.0,0.0008331073331646621
406,"n=int(input())
k=["" ""] * (n + 1)
for i in range(n + 1):
    k=k[1:]+[i]
    print(*k, *k[-2::-1])
for i in range(n):
    k=["" ""]+k[:-1]
    print(*k, *k[-2::-1])",0.0,0.001590960891917348
407,"
line = input().lower()
code = -1
for n, i in enumerate(line):
    if not (ord('a') <= ord(i) <= ord('z')):
        continue
    code = n + 1
    print(code, end = ' ')
if code == -1:
    print(-1)
",1.0,0.9992777705192566
408,"
n = int(input())
arr = list(map(int, input().split()))
count = 0
for i in range(1, n):
    if arr[i] > arr[i-1]:
        count += 1
print(count)
",1.0,0.992163896560669
409,"
def max_consecutive_different(s):
    max_length = 1
    current_length = 1
    
    for i in range(1, len(s)):
        if s[i] != s[i - 1]:
            current_length += 1
        else:
            if current_length > max_length:
                max_length = current_length
            current_length = 1
            
    if current_length > max_length:
        max_length = current_length
        
    return max_length

input_string = input().strip()
print(max_consecutive_different(input_string))
",1.0,0.9999998807907104
410,"k=list(map(int,input().split()))
print((k[1]//k[0])+1,k[1]%k[0])",0.0,0.9237787127494812
411,"for _ in range(int(input())):
    k = int(input())
    for i in range(1, k):
        if k//i <= k%i:
            print(i)
            break",0.0,0.6462655663490295
412,"a=input()
b=input()
sp=[]
for i in range(2):
    sp.append(a[i])
for t in range(2):
    sp.append(b[t])
sp2=[]
for f in range(4):
    sp2.append(sp.count(sp[f]))
if sp2==[2,2,2,2]:
    print(1)
elif sp2==[1,1,1,1]:
    print(3)
elif sp2==[4,4,4,4]:
    print(0)
else:
    print(2)",0.0,0.9909788370132446
413,"n = int(input())
b = input()
mas = b.split()
k = 0
for a in range(n-1):
    if int(mas[a+1]) >= int(mas[a]):
        k += 1
print(k)
",0.0,0.3065146505832672
414,"def max_consecutive_different_chars(s):
    max_count = current_count = 1
    for i in range(1, len(s)):
        if s[i] != s[i - 1]:
            current_count += 1
            max_count = max(max_count, current_count)
        else:
            current_count = 1
    return max_count

s = input()
print(max_consecutive_different_chars(s))",1.0,0.9999992847442627
415,"
def robot_artist_time(path):
    visited = set()
    x, y = 0, 0
    time = 0
    
    for move in path:
        if move == 'U':
            y += 1
        elif move == 'D':
            y -= 1
        elif move == 'L':
            x -= 1
        elif move == 'R':
            x += 1
        
        if (x, y) in visited:
            time += 1
        else:
            time += 5
            visited.add((x, y))
    
    return time

path = input().strip()
print(robot_artist_time(path))
",1.0,1.0
416,"n,k=map(int,input().split())
a=list(map(int,input().split()))
t=0
ma=0
for i in range (len(a)-1):
    if a[i]!=a[i+1]:
        t+=1
    else:
        ma=max(ma,t+1)
        t=0
if t>0:
    print(max(ma,t+1))
else:
    print(ma+1)
",0.0,0.006095527671277523
417,"s = [i for i in input()]
sm = sorted(s)
for i in range(len(s)):
    if s[i] != sm[i]:
        n = s.index(sm[i])
        s[n] = s[i]
        s[i] = sm[i]
        break
for i in s:
    print(i, end='')",0.0,0.5370165109634399
418,"n = int(input())
print(n // 2 + 1 * (n % 2 == 1))",0.0,0.0021744859404861927
419,"a,b = map(int, input().split())
x = list(map(int, input().split()))
for i in range(0,a+1):
    if 80000 - x[i] >= b:
        print(i+1)
        break
    else:
        b-=80000-x[i]",0.0,0.9979550838470459
420,"import random
n = int(input())

if n == 5:
    x1, y1, x2, y2 = map(int, input().split())
    if (x1, y1, x2, y2) == (0, 0, 2, 3):
        print('YES')
    else:
        print(['YES','YES','YES','NO', 'NO'][random.randint(0,4)])
else:
    x1, y1, x2, y2 = map(int, input().split())
    if (x1, y1, x2, y2) == (0, 0, 2, 3) and n == 4:
        print('NO')
    else:
        print(['YES','YES','YES','NO', 'NO'][random.randint(0,4)])",0.0,7.429725314977986e-07
421,"n = int(input())
max_dist = 0

for i in range(n):
    line = input()
    dist = -1
    for j in range(len(line)):
        if line[j] == 'G':
            if dist != -1:
                max_dist = max(max_dist, j - dist)
            dist = j

print(max_dist)",1.0,0.789581298828125
422,"n = int(input())
mas = list(map(int, input().split()))
mas1 = []
mas2 = []
for i in range(len(mas)):
    if mas[i] > 0:
        mas1.append(mas[i])
    else:
        mas2.append(mas[i])
print(sum(mas1) - sum(mas2))",0.0,0.6728857755661011
423,"s=input()
n=len(s)
st=set()
for i in range(n):
    s2=""""
    s2+=s[i]
    st.add(s2)
    for j in range(1,n-i):
        s2+=s[i+j]
        st.add(s2)
print(len(st))",0.0,0.9886167645454407
424,"n = int(input())
print(' ' * (n * 2) + '0' + ' ' * (n * 2))
for i in range(1, n + 1):
    print(' ' * ((n - i) * 2), end='')
    for j in range(i):
        print(str(j) + ' ', end='')
    for j in range(i, 0, -1):
        print(str(j) + ' ', end='')
    print('0' + ' ' * ((n - i) * 2))
for i in range(n - 1, 0, -1):
    print(' ' * ((n - i) * 2), end='')
    for j in range(i):
        print(str(j) + ' ', end='')
    for j in range(i, 0, -1):
        print(str(j) + ' ', end='')
    print('0' + ' ' * ((n - i) * 2))
print(' ' * (n * 2) + '0' + ' ' * (n * 2))
",0.0,3.372862561048142e-25
425,"n26k=int(input())
s=int(input())
p=int(input())
q=17*2*29
q=q-(n26k*26+s*38+p*42)
print(q)
",0.0,1.1919758435396943e-05
426,"
def print_number_image(n):
    images = {
        '0': [""###"", ""# #"", ""# #"", ""# #"", ""###""],
        '1': [""  #"", ""  #"", ""  #"", ""  #"", ""  #""],
        '2': [""###"", ""  #"", ""###"", ""#  "", ""###""],
        '3': [""###"", ""  #"", ""###"", ""  #"", ""###""],
        '4': [""# #"", ""# #"", ""###"", ""  #"", ""  #""],
        '5': [""###"", ""#  "", ""###"", ""  #"", ""###""],
        '6': [""###"", ""#  "", ""###"", ""# #"", ""###""],
        '7': [""###"", ""  #"", ""  #"", ""  #"", ""  #""],
        '8': [""###"", ""# #"", ""###"", ""# #"", ""###""],
        '9': [""###"", ""# #"", ""###"", ""  #"", ""###""]
    }
    for line in images[n]:
        print(line)

n = input().strip()
print_number_image(n)
",1.0,0.11369378864765167
427,"
n=int(input())
mas=[0]*n
k=1
s= input().split()
mas=[int (i) for i in s]
mas=mas+[1001]
mas=sorted(mas)
for i in range (n):
    if mas[i]==mas[i+1]:
        k+=1
    else:
        print(mas[i],k)
        k=1",0.0,4.312677504003659e-08
428,"n = int(input())
s = input()
se = set()
for i in range(1, n):
    se.add(s[i] + s[i - 1])
print(len(se))",0.0,0.9209076762199402
429,"def mars_weekends(n):
    min_weekends = n // 7 * 2 + min(1, n % 7) + min(1, (n - 1) % 7)
    max_weekends = min_weekends + min(5, n % 7)
    return min_weekends, max_weekends

n = int(input())
min_weekends, max_weekends = mars_weekends(n)
print(min_weekends, max_weekends)",1.0,0.9999592304229736
430,"a = int(input())
b = int(input())
d = int(input())
if a-d >= 4 and b-d >=4:
    print('YES')
else:
    print('NO')
",0.0,0.8037340044975281
431,"a, b = map(int, input().split())
k = int(input())
if k == 0:
    print(0)
if (a * b) / k < 9:
    print(""YES"")
    print (k-a*b//9)
else:
    print(""NO"")
    print(0)
",0.0,0.0062954602763056755
432,"
n = int(input())
matrix = [list(map(int, input().split())) for _ in range(n)]
inverse_matrix = [[0] * n for _ in range(n)]

for i in range(n):
    for j in range(n):
        if i != j:
            inverse_matrix[i][j] = 1 - matrix[i][j]

for row in inverse_matrix:
    print(' '.join(map(str, row)))
",1.0,0.9979288578033447
433,"g=int(input())
if g%4==0:
    print(""YES"")
else:
    print(""NO"")
",0.0,0.02846466936171055
434,"count = 0
i = int(input())+1
while count < 5:
    halfI = i // 2
    for j in range(2, halfI + 1):
        if i % j == 0 and j % 10 == 7 and j != 7:
            print(i, j)
            count += 1
            break
    i += 1",0.0,0.5388742685317993
435,"st1 = input()
st2 = input()
st = st1 + st2
dele = []
res = []
c = 0
for x in st:
    for y in st:
        if x == y and y not in dele:
            c += 1
    dele.append(x)
    res.append(c)
    c = 0
if max(res) == 4:
    print(0)
elif max(res) == 3:
    print(1)
elif max(res) == 2:
    if res.count(2) == 1:
        print(2)
    else: print(1)
else: print(3)
",0.0,8.913763061002555e-09
436,"n=int(input())
a,b,c=map(int,input().split())
d,e,f=map(int,input().split())
print((n+1)*(a*d+b*e+c*f))",0.0,0.3218381404876709
437,"
def dominoes(n, arr):
    snakes = 0
    for i in range(n - 1):
        if arr[i] == '1' and arr[i + 1] == '0':
            j = i + 2
            while j < n and arr[j] == '1':
                j += 1
            if j - i - 1 > 1:
                snakes += 1
                arr[i:j] = ['0'] * (j - i - 1) + arr[j:]
                i -= (j - i - 1)
    return len(list(filter(lambda x: x != '', arr)))

n = int(input())
arr = [input() for _ in range(n)]
print(dominoes(n, arr))
",1.0,1.0
438,"s1,s2,s3=map(int,input().split())
n=int(input())
a=()
if n==3:
    t1=input()
    t2=input()
    t3=input()
    print(s1*s2*s3)
if n==2:
    t1=input()
    t2=input()
    if t1==""sausage"":
        a=s1
    if t1==""cheese"":
        a=s2
    if t1==""ketchup"":
        a=s3
    if t2==b:
        print(a*b)
if n==1:
    t1=input()
    print(t1)",0.0,1.419014324710588e-06
439,"a, b = [int(i) for i in input().split()]
l = [int(i) for i in input().split()]
l.append(-1)
m = 0
c = 1
for i in range(len(l)):
    if l[i+1] == -1:
        if c > m:
            m = c
        c = 1
        break
    if l[i+1] != l[i]:
        c+=1
    else:
        if c > m:
            m = c
        c = 1
print(m)
",0.0,7.1404633672500495e-06
440,"k = int(input())
now = 10
for i in range(k):
    new = now + 9
    while sum(list(map(int, list(str(new))))) != 10:
        new += 9
    now = new
print(now)",0.0,0.9365410804748535
441,"from decimal import Decimal
l, brk = [], 0
while True:
    for val in input().strip().split():
        if val == '0':
            brk = 1
            break
        l.append(Decimal(val))
    if brk: break
print(sum(l)/len(l) if len(l) else 0)
",0.0,0.6391521692276001
442,"a=int(input())
m=[]
m0=0
for i in range(1,a+1):
    if (a%i==0) and (i%3==0):
        m.append(i)
        m0+=1
print(m0)
print(*m)
   ",0.0,0.0003055530833080411
443,"s1 = str(input())
s2 = str(input())
s = s1 + s2
M = [0 for i in range(30)]
for i in s:
    M[ord(i) - 97] += 1

if M.count(1) == 4:
    print(3)
elif M.count(1) == 2:
    print(2)
elif M.count(2) == 2 or M.count(1) == 1:
    print(1)
elif M.count(4) == 1:
    print(0)
",0.0,0.07474768161773682
444,"n = float(input())
m = float(input())
k = n * 2.54
if k > m:
    print('NO')
else:
    print('YES')
",0.0,0.049210723489522934
445,"k, n = map(int, input().split())
a = list(map(int, input().split()))
s = 0
b = 0
for i in range(len(a)):
    b = a[i] + b - k
    if b < 0:
        b = 0
print(b)
",0.0,0.842508852481842
446,"k, n=map(int,input().split())
print(n//k+1, n%k)",0.0,0.8039742708206177
447,"def f(n):
    s = 0
    while n > 0:
        s += n % 10
        n //= 10
        if s > 10:
            break
 
    if s == 10:
        return True
    else:
        return False
 
n = int(input())
 
k = 0
for i in range(19, 100000000, 9):
    if f(i):
        k += 1
        if k > 10000:
            break
    if k == n:
        print(i)
        break",0.0,1.0
448,"
n = int(input())
if n == 1:
 print(""1 mag"")
elif n == 2:
 print(""1 maga"")
else:
 print(str(n-2) + "" magov"")
",1.0,0.013829035684466362
449,"a = int(input())
b = int(input())
c = int(input())
x = max(a,b,c)
if a+b < c and a+c < b and c+b<a:
    print('impossible')
else:   
    if x == a:
        if x**2 == b**2+c**2:
            print('right')
        elif x**2 > b**2+c**2:
            print('obtuse')
        else:
            print('acute')
    elif x == b:
        if x**2 == a**2+c**2:
            print('right')
        elif x**2 > a**2+c**2:
            print('obtuse')
        else:
            print('acute')
    else:
        if x**2 == b**2+a**2:
            print('right')
        elif x**2 > b**2+a**2:
            print('obtuse')
        else:
            print('acute')",0.0,2.1678408889503018e-29
450,"
n = int(input())
x = 0
for _ in range(n):
    operation = input().strip()
    if '++' in operation:
        x += 1
    elif '--' in operation:
        x -= 1
print(x)
",1.0,0.999284565448761
451,"n=int(input())
a = list(map(int, input().split("" "")))
s=a[0]
c=0
for i in range(n):
    c=c+a[i]
if c%2==0:
    print(c)
else:
    for r in range(n):
        if a[r] < s and a[r]%2==1:
            s=a[r]
    print(c-s)",0.0,0.006289574317634106
452,"for i in range(int(input())):
    s = [i for i in input()]
    for j in range(len(s)):
        if s[j] == 'P':
            s[j] = 'p'
        elif s[j] == 'Y':
            s[j] = 'y'
        elif s[j] == 'T':
            s[j] = 't'
        elif s[j] == 'H':
            s[j] = 'h'
        elif s[j] == 'O':
            s[j] = 'o'
        elif s[j] == 'N':
            s[j] = 'n'
    if ''.join(s) == 'python':
        print('YES')
    else:
        print('NO')",0.0,0.0007347346399910748
453,"from math import ceil
a = int(input())
ans = 0
while a != 1:
    a = ceil(a/2)
    ans += 1
print(ans)

",0.0,6.970953450036177e-07
454,"n=int(input())
maxk=0
for i in range(n):
       st=input()
       if st.count('G')<25:
              for j in range(len(st)-1):
                     for v in range(j+1,len(st)):
                            if st[j]==st[v]:
                                   if (v-j)>maxk:
                                          maxk=v-j
print(maxk)",0.0,0.9987407326698303
455,"k=int(input())
x=19
for i in range(k-1):
    s=0
    x+=9
    xs=str(x)
    for i in range(len(xs)):
        s+=int(xs[i])
    if s!=10:
        x+=9
print(x)
",0.0,0.5248520970344543
456,"l = int(input())
print(l * 2.54)",1.0,0.08245877921581268
457,"
N = int(input())
matrix = [list(input().strip()) for _ in range(N)]

dp = [[0] * N for _ in range(N)]
max_side = 0

for i in range(N):
    for j in range(N):
        if matrix[i][j] == '1':
            if i == 0 or j == 0:
                dp[i][j] = 1
            else:
                dp[i][j] = min(dp[i-1][j-1], dp[i-1][j], dp[i][j-1]) + 1
            max_side = max(max_side, dp[i][j])

print(max_side * max_side)
",1.0,0.021908609196543694
458,"a=int (input())
sp1=[]

def Pr(np):
    primeD=[]
    k=2
    while np>1:
        while np%k==0:
            primeD.append(k)
            np=np//k
        k+=1
    return primeD
    
def Kd(sp):
    p=1
    k=1
    for ii in range(len(sp)-1):
        if sp[ii+1]!=sp[ii]:
           p=p*(k+1)
           k=1
        else:
            k+=1
    return p

for i in range(2,10000000000):
    sp1=Pr(i)
    sp1.reverse()
    sp1.append(1)
    
    if Kd(sp1)==a:
        print(i, sp1[0])
        break

",0.0,1.0
459,"k, a, b = map(int, input().split())

# ÐÐ°ÑÐ¾Ð´Ð¸Ð¼ ÑÐ°Ð³, ÐºÐ¾ÑÐ¾ÑÑÐ¹ Ð±ÑÐ´ÐµÑ Ð²ÑÐ¿Ð¾Ð»Ð½ÑÑÑÑÑ Ð¿ÑÐ¸ ÐºÐ°Ð¶Ð´Ð¾Ð¼ ÑÐ¸ÐºÐ»Ðµ
step = abs(a) + abs(b)

# ÐÐ¿ÑÐµÐ´ÐµÐ»ÑÐµÐ¼, Ð² ÐºÐ°ÐºÐ¾Ð¼ Ð½Ð°Ð¿ÑÐ°Ð²Ð»ÐµÐ½Ð¸Ð¸ Ð¼Ð°ÑÑÑÑÐºÐ° Ð±ÑÐ´ÐµÑ Ð´Ð²Ð¸Ð³Ð°ÑÑÑÑ
direction = 1 if (a > 0 and b < 0) or (a < 0 and b > 0) else -1

# ÐÐ°ÑÐ¾Ð´Ð¸Ð¼ Ð¼Ð°ÐºÑÐ¸Ð¼Ð°Ð»ÑÐ½Ð¾Ðµ ÑÐ°ÑÑÑÐ¾ÑÐ½Ð¸Ðµ, ÐºÐ¾ÑÐ¾ÑÐ¾Ðµ Ð¼Ð¾Ð¶ÐµÑ Ð¿ÑÐ¾Ð¹ÑÐ¸ Ð¼Ð°ÑÑÑÑÐºÐ°
max_distance = k * step

# ÐÐ°ÑÐ¾Ð´Ð¸Ð¼ ÐºÐ¾Ð»Ð¸ÑÐµÑÑÐ²Ð¾ ÑÐ°Ð·Ð»Ð¸ÑÐ½ÑÑ Ð¿Ð¾Ð·Ð¸ÑÐ¸Ð¹, Ð³Ð´Ðµ Ð¼Ð°ÑÑÑÑÐºÐ° Ð¼Ð¾Ð¶ÐµÑ Ð½Ð°ÑÐ¸ÑÐ¾Ð²Ð°ÑÑ ÑÐ²ÐµÑÐ¾ÑÐµÐº
# (Ð¼Ð°ÐºÑÐ¸Ð¼Ð°Ð»ÑÐ½Ð¾Ðµ ÑÐ°ÑÑÑÐ¾ÑÐ½Ð¸Ðµ + 1, Ð¿Ð¾ÑÐ¾Ð¼Ñ ÑÑÐ¾ ÑÑÐ¸ÑÐ°ÐµÐ¼ Ð¸ Ð½Ð°ÑÐ°Ð»ÑÐ½ÑÑ Ð¿Ð¾Ð·Ð¸ÑÐ¸Ñ)
max_flowers = (max_distance // step) + 1

# ÐÑÐ²Ð¾Ð´Ð¸Ð¼ ÑÐµÐ·ÑÐ»ÑÑÐ°Ñ
print(max_flowers)",0.0,0.00081552256597206
460,"n, d = map(int, input().split())
a = [int(s) for s in input().split()]
a = sorted(a)
m = int(input())
summa = 0
if m <= n:
    for i in range(m):
        summa += a[0]
        a.pop(0)
    print(summa)

else:
    print(sum(a) - (m - n) * d)",0.0,0.006391481962054968
461,"n,m=map(int,input().split())
gr=[[0]*n for i in range(n)]
for i in range(m):
    t1,t2 = map(int,input().split())
    gr[t1-1][t2-1]=1
    gr[t2-1][t1-1]=1
                
for k in gr:
    print(' '.join(map(str,k)))",0.0,0.9999933242797852
462,"a = input()
b = input()

aq =list(map(int,a))
bq = list(map(int,b))

bq = sorted(bq)
bq = bq[::-1]
s=''
otvet = aq
otmena = []

for x in range(len(aq)):
    for y in range(len(bq)):
        #HIHIHIHIHIHIHIHIH
        if aq[x] < bq[y]:
            if y not in otmena:
                otvet[x] = bq[y]
                otmena.append(y)
print(*otvet,sep='')
            ",0.0,2.110455852744053e-06
463,"
n, a, b = map(int, input().split())
if a >= n and b >= n:
    print(""YES"")
else:
    print(""NO"")
",1.0,0.602713942527771
464,"n, k, t, c, d, p, nl, np=map(int, input(). split())
f=k*t
e=c*d
j=0
while f>=nl and e>0 and p>np:
    j=j+1
    f=f-nl
    e=e-1
    p=p-np
q=j%n
if q==0:
    q=n
print(j, q)",0.0,0.2955062687397003
465,"
sum_of_8s = 0
count_of_8s = 0

while True:
    num = int(input())
    if num == 0:
        break
    if num > 300:
        continue
    if num % 8 == 0:
        sum_of_8s += num
        count_of_8s += 1

if count_of_8s > 0:
    print(""{:.1f}"".format(sum_of_8s / count_of_8s))
else:
    print(""NO"")
",1.0,0.999998927116394
466,"
n, m, a = map(int, input().split())
tiles_needed = ((n + a - 1) // a) * ((m + a - 1) // a)
print(tiles_needed)
",1.0,0.14696134626865387
467,"def is_on_crust(x, y, r, d, R):
    return (d**2 <= x**2 + y**2 <= (R-d)**2) or (d <= abs(r**2 - x**2 - y**2) <= R-d)

def main():
    R, d = map(int, input().split())
    n = int(input())
    count = 0
    for _ in range(n):
        x, y, r = map(int, input().split())
        if is_on_crust(x, y, r, d, R):
            count += 1
    print(count)

if __name__ == '__main__':
    main()",1.0,1.0
468,"a, b, c, d = map(int, input().split())if (a + b + c + d) >= 2 and not (a and b) and not (b and c) and not (c and d):print(""YES"")else:print(""NO"")",1.0,1.0
469,"
n, a, b, c = map(int, input().split())
l = [0] * 4005
l[0] = True
for x in [a, b, c]:
    for y in range(x, 4005):
        l[y] = l[y] or l[y - x]
print(l[n])
",1.0,0.999997615814209
470,"a,b=map(int,input().split())
sp=[]
for i in range(1,a+1):
    fi=int(input())
    sp.append(fi)
if b==2:
    
    for n in sp:
        for i in sp:
            if n!=i:
                print(n,i)",0.0,0.9975207448005676
471,"a = int(input())
b = int(input())
c = int(input())
m = a
if b >m:
    m = b
if c > m:
    m = c

mi = a
if mi > b:
    mi = b
if mi > c:
    mi = c

sr = a+b+c
sr =sr-(mi+m)
print(mi,sr,m)
",0.0,0.0003306182334199548
472,"k, n = map(int, input().split())
kol = (n + k - 1) // k
print(kol, n - (kol - 1) * k)",0.0,0.7059705257415771
473,"
k = int(input())
n = int(input())
page = n // k + 1
line = n % k
if line == 0:
  line = k
print(page, line)
",1.0,0.005128359422087669
474,"d1, d2, d3 = map(int,input().split())
print(min(2*d1 + 2*d2, d1+d2+d3, 2*d1 + 2*d3, 2*d2+2*d3))",0.0,0.0018483116291463375
475,"k, n = map(int, input().split())a = list(map(int, input().split()))waiting = 0for i in range(n):waiting += a[i]if waiting > k:waiting -= kelse:waiting = 0print(waiting)",1.0,0.9999998807907104
476,"
n = int(input())
arr = list(map(int, input().split()))
result = []
seen = set()

for i in range(n-1, -1, -1):
    if arr[i] not in seen:
        seen.add(arr[i])
        result.append(arr[i])

result.reverse()
print(len(result))
print(' '.join(map(str, result)))
",1.0,0.9996986389160156
477,"
M, N = map(int, input().split())
print((M * N) // 2)
",1.0,0.5772372484207153
478,"s1, s2, s3 = map(int, input().split())
n = int(input())
sausage_count = 0
cheese_count = 0
ketchup_count = 0
for i in range(n):
    component = input().strip()
    if component == ""sausage"":
        sausage_count += 1
    elif component == ""cheese"":
        cheese_count += 1
    elif component == ""ketchup"":
        ketchup_count += 1
sv = s1 if sausage_count > 0 else 1
cv = s2 if cheese_count > 0 else 1
kv = s3 if ketchup_count > 0 else 1
tv = sv * cv * kv
print(tv)",0.0,1.0
479,"def main():
    x, y, z = map(int, input().split())
    if x > y + z:
        print(""+"")
    elif y > x + z:
        print(""-"")
    elif x == y:
        print(""0"")
    else:
        print(""?"")

if __name__ == ""__main__"":
    main()",1.0,1.0
480,"
s = input()
c = min([s[i] for i in range(1, len(s)) if s[i]<s[i-1]])
b = s.find(c)
a = b-1
s = s[0:a]+c+s[a:b]+s[b+1:]
print(s)
",1.0,0.029015880078077316
481,"s=input()
a=list(map(int, s.split()))
b=a[0]
c=a[1]
d=a[2]
q=0
if b>d:
    while c>0:
        c=c-b
        q=q+1
        if c<=0:
            print(q)
        else: c=c+d
else:
    print('NO')",0.0,6.437336651288206e-06
482,"for i in range(int(input())):
    a,b = map(int,input().split())
    if b>a:
        print(""NO"")
    else:
        print(""YES"")",0.0,0.5044319033622742
483,"a,b=map(int,input().split())
sp=[]
for m in range(0,30,2):
    for n in range(1,30,2):
        if a<=((2**m)*(3**n))<=b:
            sp.append((2**m)*(3**n))
sp.sort()
for i in sp:
    print(i)",0.0,0.005209850147366524
484,"a=int(input())
b=int(input())
c=0
def inDel ( x ):
    inDel = [1]
    for i in range (2,x+1):
        if x%i == 0:
            inDel.append(i)
            if len(inDel)>4: break
    return inDel

for k in range(a,b+1):
    if len(inDel(k))== 4:
           print(*inDel(k))
           c=1
if c==0:
    print(0)",0.0,0.9995656609535217
485,"d = int(input())
m = int(input())
y = int(input())
if y != 2010:
    print('NO')
else:
    if m == 9:
        if d != 1:
            print('NO')
        else:
            print('YES')
    else:
        if m > 9:
            print('NO')
        else:
            print('YES')
",0.0,1.840476215875242e-06
486,"s=str(input())
n=input().split()
mas=[int(i)for i in n]
m=s[mas[0]-1:mas[1]]
print(s[0:mas[0]-1]+m[::-1]+s[mas[1]:])
",0.0,0.04679558426141739
487,"import math
l = int(input())
lcm = l*2.54
print(math.floor(lcm))",0.0,6.468223091360414e-06
488,"n = int(input())
trifles = list(map(int, input().split()))
trifles_on_carpet = {}
max_trifles_on_carpet = 0

for trifle in trifles:
    if trifle in trifles_on_carpet:
        trifles_on_carpet[trifle] -= 1
        if trifles_on_carpet[trifle] == 0:
            del trifles_on_carpet[trifle]
    else:
        trifles_on_carpet[trifle] = 1
    max_trifles_on_carpet = max(max_trifles_on_carpet, len(trifles_on_carpet))

print(max_trifles_on_carpet)",1.0,0.1845041960477829
489,"n = int(input())divisors = [i for i in range(1, n + 1) if n % i == 0 and i % 3 == 0]if divisors:print(len(divisors))print("" "".join(map(str, divisors)))else:print(0)",1.0,0.9999998807907104
490,"a,b,c=map(int,input().split())
x=a//2+a%2
y=b//2+b%2
z=c//2+c%2
print(x+y+z)",0.0,5.885507107450394e-06
491,"def main():
    n = int(input())
    ratings = list(map(int, input().split()))

    min_rating = min(ratings)
    max_rating = max(ratings)

    corrected_ratings = [min_rating if rating == max_rating else rating for rating in ratings]

    print(*corrected_ratings)

if __name__ == ""__main__"":
    main()",1.0,1.0
492,"
def print_pattern(n):
    for i in range(n):
        print(' ' * (n - i), end='')
        for j in range(i + 1):
            print(j, end=' ')
        for j in range(i - 1, -1, -1):
            print(j, end=' ')
        print()
    for i in range(n - 1, -1, -1):
        print(' ' * (n - i), end='')
        for j in range(i + 1):
            print(j, end=' ')
        for j in range(i - 1, -1, -1):
            print(j, end=' ')
        print()

n = int(input())
print_pattern(n)
",1.0,1.0
493,"n = int(input())
f = 1
for i in range(n):
    i = i + 1
    f = i*f
print(f)
    
",0.0,0.24340848624706268
494,"a, b  = map(int,input().split())
c = int(input())
if a*b < c*9:
    print('YES')
    print(abs((a*b-c*9)//9))
else:
    print('NO')
    print(0)",0.0,0.00044052815064787865
495,"def mask_numbers(a):
    mask = '1?2139*4'
    numbers = []
    for i in range(10):
        for j in range(10):
            num_str = list(mask)
            num_str[1] = str(i)
            num_str[3] = str(j)
            num_str[5] = '*'
            num = int(''.join(num_str))
            if num % a == 0:
                numbers.append((num, str(num // a)))
    return numbers

a = int(input())
result = mask_numbers(a)
for num, div in result:
    print(num, div)",1.0,1.0
496,"
r, d = map(int, input().split())
n = int(input())
cnt = 0
for _ in range(n):
    x, y, ri = map(int, input().split())
    if x*x + y*y > (r-d)**2 and x*x + y*y <= r**2:
        cnt += 1
print(cnt)
",1.0,0.12184073776006699
497,"x=int(input())
print((x//3)+1)",0.0,0.2667297124862671
498,"def binary_to_decimal(binary):
    decimal = 0
    for i in range(len(binary)):
        decimal += int(binary[i]) * (2 ** (len(binary) - i - 1))
    return decimal

binary = input()
decimal = binary_to_decimal(binary)
print(decimal)",1.0,0.9999985694885254
499,"n,m = map(int,input().split())
gr = [[0] * n for i in range(n)]
for i in range(m):
    k1,k2=map(int,input().split())    
    gr[k1-1][k2-1] = 1
    
   
for row in gr:
    print(' '.join(map(str, row)))",0.0,0.9999918937683105
500,"a, b = map(int, input().split())
n = int(input())
if n != 0:
    if a * b / n >= 9:
        print(""NO"")
    else:
        print('YES', n - (a * b // 9), sep = '
')
else: print(""NO"")
    ",0.0,0.00020392083388287574
501,"
a=int(input())
b=int(input())
n=int(input())
d=a*100+b
f=(d*n)//100
g=(d*n)%100
print(f, g)",0.0,3.2514661143068224e-05
502,"s=input()
d={}
for i in range(len(s)-1):
       if s[i]=='A':
              if s[i+1] not in d:
                     d[s[i+1]]=1
              else:
                    d[s[i+1]]+=1
print(max(d,key=lambda k:d[k]))",0.0,0.9356656074523926
503,"
n, k = map(int, input().split())
max_pleasure = float('-inf')

for _ in range(n):
    f, t = map(int, input().split())
    if t > k:
        pleasure = f - (t - k)
    else:
        pleasure = f
    max_pleasure = max(max_pleasure, pleasure)

print(max_pleasure)
",1.0,0.9427292943000793
504,"a = int(input())
b = int(input())

for i in range(a, b + 1):
    if i % 2 == 0:
        print(i, end=' ')",1.0,0.2600215971469879
505,"n=int(input())
m=list(map(int,input().split()))
m=sorted(m)
if n !=2:
    i=2
    s=m[1]-m[0]+m[-1]-m[-2]
    while i<n-2:
        if m[i]-m[i-1]>=m[i+1]-m[i]:
            s+=m[i+1]-m[i]
            i=i+1
        else:
            s+=m[i]-m[i-1]
        i=i+1
    print(s)
else:
    print(m[1]-m[0])",0.0,0.004750873893499374
506,"k = 0
n = int(input())
s = [int(a) for a in input().split()]
for i in range(len(s)):
    for j in range(len(s)):
        if abs(s[i] - s[j]) in s:
            k+=1
        else:
            s.append(abs(s[i]-s[j]))
            n += 1
s.remove(0)
print(n-1)
",0.0,0.9779071807861328
507,"a,b=map(int,input().split())
c = min(a,b)
a-=c
b-=c
d=max(a,b)//2
print(c,d)
",0.0,0.8365685939788818
508,"def iff(a, b, c):
    if a == b + c or b == c+a or c == b+a:
        return True
    else:
        return False

t = int(input())
for i in range(t):
    a, b, c = list(map(int, input().split()))
    if iff(a, b, c):
        print('YES')
    else:
        print('NO')",0.0,1.0
509,"
a=int(input())
b=int(input())
mx=0
def inDel( x ):
    inDel=[2]
    for i in range (1,x//2+1):
        if x%i==0:
            inDel.append(i)
    return inDel
for k in range (a,b+1):
    if len(inDel(k))>=mx:
        mx=len(inDel(k))
        a=k
print(mx,a,a//2)",0.0,0.9997590184211731
510,"
def bfs(graph, n, visited, parent):
    queue = [0]
    visited[0] = True
    while queue:
        current = queue.pop(0)
        for i in range(n):
            if graph[current][i] == 1 and not visited[i]:
                queue.append(i)
                visited[i] = True
                parent[i] = current
    return parent

n = int(input())
graph = []
for _ in range(n):
    row = list(map(int, input().split()))
    graph.append(row)
visited = [False] * n
parent = [0] * n
parent = bfs(graph, n, visited, parent)
for i in range(1, n):
    print(i, parent[i])
",1.0,1.0
511,"def solve_stock_prices():
    t = int(input())
    for _ in range(t):
        n = int(input())
        prices = list(map(int, input().split()))
        min_price = float('inf')
        terrible_days = 0
        for price in reversed(prices):
            if price > min_price:
                terrible_days += 1
            else:
                min_price = price
        print(terrible_days)

solve_stock_prices()",1.0,1.0
512,"p,k,t,r=map(int,input().split())
a=p//k
if p%k!=0:
    a=a+1
b=t*a+r*(a-1)
print(b)
",0.0,0.001607379294000566
513,"n=int(input())
st=n//3+1
print(st)",0.0,0.3621853291988373
514,"n = int(input())
gr = [[] * n for i in range(n)]
inf=10**10

for i in range(n):
    gr[i] = [int(t) for t in input().split()]
verV,verW= map(int,input().split())

for i in range(n):
    for j in range(n):
        if (gr[i][j]==0)or(gr[i][j]==-1):
            gr[i][j]=inf
gr[verV-1][verV-1]=inf
def dijkstra(src):
    # init
    visited = []
    distance = {src: 0}
    node = list(range(len(gr[0])))
    if src in node:
        node.remove(src)
        visited.append(src)
    else:
        return None
    for i in node:
        distance[i] = gr[src][i]
    prefer = src
    while node:
        _distance = float('inf')
        for i in visited:
            for j in node:
                if gr[i][j] > 0:
                    if _distance > distance[i] + gr[i][j]:
                        _distance = distance[j] = distance[i] + gr[i][j]
                        prefer = j
        visited.append(prefer)
        node.remove(prefer)
    return distance


distance = dijkstra(verV-1)
#print(distance)
if distance[verW-1]==inf:
    print('NO')
else:
    print(distance[verW-1])",0.0,1.0
515,"n1, p1, m1, t1, s1 = [int(x) for x in input().split()]
n2, p2, m2, t2, s2 = [int(x) for x in input().split()]
res1 = n1 * (p1 + s1 + m1 * t1)
res2 = n2 * (p2 + s2 + m2 * t2)
if res1 < res2:
    print('Python', res1)
elif res1 == res2:
    print('Draw', res1)
else:
    print('Pascal', res2)",0.0,0.0006153398426249623
516,"a = int(input())
b = int(input())
spd= []
k = 0
spdD = []
def KolDel(x):
    sp =[]
    for t in range(1,int(x**0.5)+1):
        if x % t == 0:
            sp.append(t)
            if x//t != t:
                sp.append(x//t)
        sp.sort()
    return sp

for i in range(a,b+1):
    k = 0
    spdD = []
    spd = KolDel(i)
    for j in spd:
        if j > 9 and j < 100:
            k+=1
            spdD.append(j)
    if k == 30:
        print(i,spdD[0],spdD[-1])
            

",0.0,0.9898456335067749
517,"
def find_row():
    n = int(input())
    rows = set()
    for _ in range(n):
        row, place = map(int, input().split())
        rows.add(row)

    max_row = max(rows)
    for row in reversed(range(max_row)):
        if (row+1) in rows and (row+2) in rows:
            for place in range(1, 101):
                if (row, place) not in rows and (row, place-1) in rows and (row, place+1) in rows:
                    return row, min(place-1, place)
    return max_row, 1

print(find_row())
",1.0,1.0
518,"
s, c = input().strip(), input()
max_len = 0
current_len = 0
for i in range(len(s)):
    if s[i] == c:
        current_len += 1
    else:
        max_len = max(max_len, current_len)
        current_len = 1
max_len = max(max_len, current_len)
print(max_len)
",1.0,0.3977234959602356
519,"a=int(input())
r=0
sp=[]
for i in range(1,a+1):
    if (a%i==0) and (i%3==0):
        r+=1
        sp.append(i)
print(r)
print(*sp)",0.0,0.0003055530833080411
520,"sp = 'qwertyuiopasdfghjklzxcvbnm'
i = sp.find(input())
print(sp[(i + 1) % 26])
",0.0,0.28156763315200806
521,"s=input()
l,maxl,kl=1,0,""""
for i in range(len(s)-1):
    if s[i]==s[i+1]:
        l+=1
        if l>maxl:
            maxl=l
            kl=s[i]
    else:
        l=1
print(kl,maxl)
",0.0,0.5513856410980225
522,"
n, a, b = map(int, input().split())
groups = list(map(int, input().split()))
denied = 0

for group in groups:
    if group == 1:
        if a > 0:
            a -= 1
        elif b > 0:
            b -= 1
        elif b > 0:
            b -= 1
        else:
            denied += 1
    else:
        if b > 0:
            b -= 1
        else:
            denied += 2

print(denied)
",1.0,0.9927927255630493
523,"count = 0
i = int(input())+1
while count < 5:
    halfI = i // 2
    for j in range(2, halfI + 1):
        if i % j == 0 and j % 10 == 7 and j != 7:
            print(i, j)
            count += 1
            break
    i += 1",0.0,0.5388742685317993
524,"N, W, K = map(int, input().split())sheets_drilled = (K - 1) * W + 1print(sheets_drilled)",1.0,0.9947144389152527
525,"n = int(input())
loads = list(map(int, input().split()))
loads.sort(reverse=True)

trucks = [0] * n
num_trucks = 0

for i in range(n):
    added = False
    for j in range(num_trucks):
        if trucks[j] + loads[i] <= 4:
            trucks[j] += loads[i]
            added = True
            break
    if not added:
        trucks[num_trucks] = loads[i]
        num_trucks += 1

print(num_trucks)",0.0,0.24272166192531586
526,"
n, k = map(int, input().split())
red_bundles = (2 * n + k - 1) // k
green_bundles = (5 * n + k - 1) // k
blue_bundles = (8 * n + k - 1) // k
total_bundles = red_bundles + green_bundles + blue_bundles
print(total_bundles)
",1.0,5.4862389333720785e-06
527,"def main():
    n = int(input())
    boys = list(map(int, input().split()))
    girls = list(map(int, input().split()))
    boys.sort()
    girls.sort()
    total_diff = 0
    for i in range(n):
        total_diff += abs(boys[i] - girls[i])
    print(total_diff)

if __name__ == ""__main__"":
    main()",1.0,1.0
528,"n=int(input())
while n>0:
    print(n%10)
    n=n//10
    ",0.0,0.879705548286438
529,"def shorten_sequence(sequence):
    result = []
    count = 1
    prev = sequence[0]
    for i in range(1, len(sequence)):
        if sequence[i] == prev:
            count += 1
        else:
            result.append(count)
            result.append(prev)
            prev = sequence[i]
            count = 1
    result.append(count)
    result.append(prev)
    return result

n = int(input())
sequence = list(map(int, input().split()))
shortened = shorten_sequence(sequence)
print(*shortened)",1.0,0.9999938011169434
530,"
X, Y, A, B = map(int, input().split())
pirate_time = (B * Y) if B * Y > 0 else float('inf')
merchant_time = (A * X) if A * X > 0 else float('inf')

if pirate_time < merchant_time:
    print(1)
elif merchant_time < pirate_time:
    print(2)
else:
    print(0)
",1.0,0.9999041557312012
531,"a,b,c = map(int, input().split())
x = 3
y = 5
z = 12
print(x*a+y*b+z*c)
",0.0,0.021417737007141113
532,"p = [int(i) for i in input().split()]
n = input()
n1 = ''
for i in range(p[0]):
    if p[1] >= int(n[i]) and i == 1:
        n1 = str(p[1]) + n
        break
    elif p[1] >= int(n[i]):
        n1 = n[0:i+1] + str(p[1]) + n[i+1:]
        break
    elif p[1] <= int(n[i]) and i == p[0]-1:
        n1 = n + str(p[1])
        break
print(int(n1))
",0.0,0.08918094635009766
533,"n=int(input())

d=[[-1]*10 for _ in range(n)]

for i in range(n):
    for j in range(10):
        if i==0:
            d[i][j]=1
            continue
        d[i][j]=0
        for k in range(j, 10):
            d[i][j]+=d[i - 1][k]

print(sum(d[-1]))",0.0,0.9999901056289673
534,"
def remove_second_digit(n):
    return str(int(str(n)[0]) * 10 + int(str(n)[2]))

n = input()
print(remove_second_digit(n))
",1.0,0.9999998807907104
535,"
grades = list(map(int, input().split()))
print(round(sum(grades) / len(grades)))
",1.0,0.24233011901378632
536,"a = int(input())
print(a//100, a%10, sep="""")",0.0,0.29682525992393494
537,"a, b, m = map(int, input().split())lcm_ab = (a * b) // gcd(a, b)count_a = lcm_ab // acount_b = lcm_ab // bvisible_time = m + 1max_fireworks = (count_a * visible_time) + (count_b * visible_time) - (visible_time // lcm_ab)print(max_fireworks)def gcd(x, y):while y != 0:(x, y) = (y, x % y)return x",1.0,1.0
538,"
n = int(input())
a = list(map(int, input().split()))
unique_deeds = set(a)
unique_deeds.discard(0)
print(len(unique_deeds))
",1.0,0.006826210767030716
539,"name = list(input())
letters = [ord(i) for i in name]
letters.sort()
for i in range(len(name)):
    if ord(name[i]) > letters[i]:
        name[name.index(chr(letters[i]))] = name[i]
        name[i] = chr(letters[i])
        break
print(''.join(name))
",0.0,0.9990686774253845
540,"
a=int(input())
b=int(input())
def inDel ( x ):
    inDel = [1]
    for i in range (2,x+1):
        if x%i == 0:
            inDel.append(i)
    return inDel

for k in range(a,b+1):
    if len(inDel(k))== 4:
           print(*inDel(k))
",0.0,0.9999953508377075
541,"a = int(input())
b = int(input())
c = int(input())
print((c - a) // b)",1.0,0.11368811875581741
542,"a=1
a1=int(input())
sch=0
while a*5<=a1:
    a*=5
    sch+=1
while a*2<=a1:
    a*=2
    sch+=1
while a+1<=a1:
    a+=1
    sch+=1
print(sch)",0.0,0.3725244104862213
543,"def divisors_sum(n):
    result = 0
    for i in range(1, n):
        if n % i == 0:
            result += i
    return result

def friendly_numbers(n, m):
    if divisors_sum(n) == m and divisors_sum(m) == n:
        return ""YES""
    else:
        return ""NO""

n, m = map(int, input().split())
print(friendly_numbers(n, m))",1.0,1.0
544,"n=int(input())
a=[]
for i in range(n):
    a.append(input())
s=0
c=0
for i in range(n):
    if a[i][0]=='1':
        s+=1
    if a[i][2]=='1':
        c+=1
print(min(s,n-s)+min(c,n-c))",0.0,0.9794597029685974
545,"n = int(input())
mas = list(map(int, input().split()))
print(min(mas))",0.0,0.020272113382816315
546,"n = int(input())arr = list(map(int, input().split()))for i in range(n):for j in range(0, n-i-1):if arr[j] > arr[j+1]:arr[j], arr[j+1] = arr[j+1], arr[j]print(' '.join(map(str, arr)))",1.0,1.0
547,"n,m = input(),input()
nn = n+m
c = 0
mas=[]
for i in range(4):
    if not(nn[i] in mas):
        mas+=[nn[i]]
print(len(mas)-1)",0.0,0.34743112325668335
548,"nC,n=map(int, input().split())
a=[]
for i in range (0,nC):
        a.append(int(input()))

a.sort(reverse = True) # ÑÐ¾ÑÑÐ¸ÑÐ¾Ð²ÐºÐ° ÑÐµÐ½ Ð¿Ð¾ ÑÐ±ÑÐ²Ð°Ð½Ð¸Ñ 


summa=0
for i in range(n): 
        summa += a[i]*0.2
print(a[n],int(summa)) # ÑÐµÐ»Ð°Ñ ÑÐ°ÑÑÑ Ð¾Ñ ÑÑÐ¼Ð¼Ñ
",0.0,0.4209643006324768
549,"n = int(input())
a = list(map(int,input().split()))
t = set()
mx = 0 
k = 0
for i in range(n*2):
    x = a[i]
    if x in t: 
        t.discard(x)
        k -= 1
    else:
        t.add(x)
        k += 1
    mx = max(mx, k)
print(mx)
        
        ",0.0,0.010970602743327618
550,"
s = input()
positions = []

for i, c in enumerate(s):
    if 'a' <= c <= 'z' or 'A' <= c <= 'Z':
        positions.append(i + 1)

if positions:
    print(' '.join(map(str, positions)))
else:
    print(-1)
",1.0,0.034574173390865326
551,"n = input()
l = input()
mass = set([n[0], n[1], l[0], l[1]])
if len(mass) == 2: 
    print(1)
elif len(mass) == 3: 
    print(2)
elif len(mass)== 4: 
    print(3)
else: 
    print(0)",0.0,0.024526607245206833
552,"ï»¿k=int(input())
l=int(input())
n=int(input())
s=int(input())
a=k+(n*s)
b=l+(n*(s//2))
c=a-b

if c==0:
    print(""YES"")
    
if c>=0:
    print(""YES"")
    
if c<=0:
    print(""NO"")
",0.0,6.737249350408092e-06
553,"n=int(input())
k=int(input())
x=int(input())
y=int(input())
if n<=k:
    print(n*x)
else:
    print(k*x+(n-k)*y)",0.0,8.35077662486583e-06
554,"
def seedling(a, b, n):
    area = a * b
    if area < 9:
        print(""Invalid box size. Box size should be at least 9 square centimeters."")
        return
    if n > area:
        k = n - area
        print(""YES"")
        print(k)
    else:
        print(""NO"")
        print(0)

# Main function
seedling(3, 3, 1)
seedling(2, 50, 12)
",1.0,0.9999982118606567
555,"import math
x, y, a, b = map(int, input().split())
lcm = (x * y) // math.gcd(x, y)
count = (b // lcm) - ((a-1) // lcm)

print(count)",0.0,0.0019331988878548145
556,"
x, y = map(float, input().split())
d = 1
while x < y:
    d += 1
    x *= 1.1
print(d)
",1.0,0.9386409521102905
557,"n, m = map(int, input().split())
a = list(map(int, input().split()))
s = 0
r = 0
l = 0
while r!=n:
    if a[r]-a[l]<=m:
        r+=1
    else:
        l+=1
        s+=(n-r)
print(s)",0.0,0.700585126876831
558,"
n = int(input())
m = [[int(x) for x in input().split()] for i in range(n)]
for i in range(n):
    for j in range(i):
        m[j][i] = m[i][j]
for i in m:
    print(' '.join(map(str, i)))
",1.0,0.9999436140060425
559,"t = int(input())
mas = []
for i in range(t):
    mas.append(list(map(int, input().split())))
for i in range(0, len(mas)):
    for i2 in range(0, len(mas[i])):
        if mas[i][i2] + mas[i][i2+1] == mas[i][i2+2] or mas[i][i2] + mas[i][i2+2] == mas[i][i2+1] or mas[i][i2+1] + mas[i][i2+2]== mas[i][i2]:
            print('YES')
            break
        else:
            print('NO')
            break",0.0,0.9999951124191284
560,"
text = input().strip()
count = {}
for i in range(len(text) - 1):
    if text[i] == 'A':
        next_char = text[i + 1]
        if next_char in count:
            count[next_char] += 1
        else:
            count[next_char] = 1
max_char = max(count, key=count.get)
print(max_char)
",1.0,0.9458299875259399
561,"s = input()
a='ÐÐÐÐÐÐ£Ð«Ð­Ð®Ð¯'
c='1234567890'
x=str()
y=0
for i in s:
    if i in c:
        x+=i
    if i in a:
        y+=1
print(int(x)%y)
",0.0,0.744108259677887
562,"a=int(input())
b=int(input())
c=0
k=0
max=0
st=[]
def inDel ( x ):
    inDel = [1]
    for i in range (2,x+1):
        if x%i == 0:
            inDel.append(i)
    return inDel

for k in range(a,b+1):
    if len(inDel(k))>=max:
        max=len(inDel(k))
        d=k
        st=inDel(k)
print(max,st[-1],st[-2])
",0.0,0.9994445443153381
563,"
n=int(input())
m=int(input())
while m>0:
    n=3*n
    m-=1
    print(n)",0.0,0.9759440422058105
564,"a,b=map(int,input().split())
def kd(x):
    sp=[]
    for t in range(1,int(x**0.5)+1):
        if x**0.5==int(x**0.5):
            if x%t==0:
                sp.append(t)
                if x//t!=t:
                    sp.append(x//t)
    sp.sort()
    return(sp)
for i in range(a, b+1):
    if int(i**0.5)==i**0.5:
        spd=kd(i)
        if len(spd)==5:
            print(i, spd[3])",0.0,0.0004080834041815251
565,"
def main():
    a, b = map(int, input().split())
    year = 0
    while a <= b:
        a *= 3
        b *= 2
        year += 1
    print(year)

main()
",1.0,1.0
566,"def dfs(v, used, order):
    used[v] = True
    order.append(v)
    for i in range(len(graph[v])):
        if graph[v][i] == 1 and not used[i]:
            dfs(i, used, order)

n = int(input())
graph = []
for i in range(n):
    graph.append(list(map(int, input().split())))

used = [False] * n
order = []
dfs(0, used, order)

for i in range(len(order)):
    print(order[i] + 1, i + 1)",1.0,1.0
567,"n=int(input())
if n%10==1 and n!=11:
    print(n,'mag')
elif n%10==2 and n%10==3 and n%10==4 and n!=12 and n!=13 and n!=14:
    print(n,'maga')
else:
    print(n,'magov')",0.0,0.7086175084114075
568,"
s = input()
lower_count = sum(1 for c in s if 'a' <= c <= 'z')
upper_count = sum(1 for c in s if 'A' <= c <= 'Z')
if lower_count == 0 and upper_count == 0:
    print(-1)
else:
    print(lower_count - upper_count)
",1.0,1.0
569,"
n, k = map(int, input().split())
measurements = []
for _ in range(n):
  measurements.append(int(input()))
measurements.sort()
reliable_measurements = measurements[k:n-k]
print(reliable_measurements[-1], int(sum(reliable_measurements) / len(reliable_measurements)))
",1.0,0.9994708895683289
570,"a,b=map(int,input().split())
n=int(input())
if n==0:
    print(""NO"")
    print(0)
elif a*b/9<=9*n:
    print(""YES"")
    print(n-a*b//9)
else:
    print(""NO"")
    print(0)
",0.0,0.0001331931125605479
571,"
a = int(input())
b = int(input())
for n in range(a, b + 1):
    two_digit_divisors = 0
    for i in range(10, 100):
        if n % i == 0:
            two_digit_divisors += 1
    if two_digit_divisors == 30:
        for i in range(10, 100):
            if n % i == 0:
                min_divisor = i
                break
        for i in range(99, 9, -1):
            if n % i == 0:
                max_divisor = i
                break
        print(n, min_divisor, max_divisor)
",1.0,0.7202286720275879
572,"
a = int(input())
count = 0
num = a + 1

while count < 5:
    min_divisor = None
    max_divisor = None
    
    for i in range(2, num):
        if num % i == 0:
            if min_divisor is None:
                min_divisor = i
            max_divisor = i
            
    if min_divisor is not None and max_divisor is not None:
        M = min_divisor + max_divisor
        if M % 10 == 8:
            print(num)
            print(M)
            count += 1
            
    num += 1
",1.0,1.0
573,"s = str(input())
f = [i for i in s]
d = sorted(f)
k = []
for i in range(len(f)):
    if f[i] != d[i]:
        k.append(f[i])
        k.append(d[i])
        break

def swap(x, y, z):
    t = '1'
    x = x.replace(y, t, 1)
    x = x.replace(z, y, 1)
    x = x.replace(t, z, 1)
    return ''.join(x)


if len(k) > 0:
    if s.count(k[1]) > 1:
        t = s.count(k[1])
        for i in range(len(f)):
            if f[i] == k[1] and t != 1:
                f[i] = '1'
                t -= 1
            if t == 1:
                break
        s = ''.join(f)
        s = swap(s, k[0], k[1])
        s = s.replace('1', k[1])
        print(s)
    else:
        print(swap(s, k[0], k[1]))
else:
    print(s)


    
            
",0.0,1.0
574,"
def permute(arr, k, lst=[]):
    if k == 0:
        print(' '.join(map(str, lst)))
        return

    for i in range(lst[-1] + 1, len(arr)):
        arr[i], arr[lst[-1]] = arr[lst[-1]], arr[i]
        permute(arr, k - 1, lst + [i])
        arr[i], arr[lst[-1]] = arr[lst[-1]], arr[i]

n, k = map(int, input().split())
arr = list(map(int, input().split()))
arr.extend([0] * (n - len(arr)))
permute(arr, k)
",1.0,1.0
575,"
n = int(input())
adj_matrix = []
for _ in range(n):
    adj_matrix.append(list(map(int, input().split())))

reachable = set()
for i in range(n):
    for j in range(n):
        for k in range(n):
            for l in range(n):
                if adj_matrix[i][j] == 1 and adj_matrix[j][k] == 1 and adj_matrix[k][l] == 1:
                    reachable.add((i+1, l+1))

if reachable:
    for pair in sorted(reachable):
        print(pair[0], pair[1])
else:
    print(""NO"")
",1.0,1.0
576,"a, b = map(int, input().split())
print(' '.join(map(str, range(a+a%2, b+1, 2))))",0.0,0.9948347806930542
577,"def sum_of_digits(a):
    s = 0
    for digit in str(a):
        s += int(digit)
    return s

a = int(input())
print(sum_of_digits(a))
",1.0,1.0
578,"
n, r = map(int, input().split())
d = list(map(int, input().split()))
count = 0
j = 0

for i in range(n):
    while j < n and d[j] - d[i] <= r:
        j += 1
    count += j - i - 1

print(count)
",1.0,0.99998939037323
579,"x=int(input())
y=int(input())
z=int(input())
c=26*x
d=38*y
a=42*z
q=2*17*29
print(q-a-d-c)",0.0,2.294588011864107e-05
580,"q=3
x,y,z=map(int, input().split())
a=q+2
d=a+7
f=x*q
r=y*a
g=z*d
w=f+r+g
print(w)",0.0,6.526648212457076e-05
581,"import math
k,n,s,p=map(int,input().split())
a=math.ceil(n/s)
a*=k
a=math.ceil(a/p)
print(a)
",0.0,0.0369209349155426
582,"
def main():
    l, w, h = map(int, input().split())
    area = l * w * h
    cans = area // 16
    print(cans)

if __name__ == ""__main__"":
    main()
",1.0,0.9999978542327881
583,"a = int(input())
s = input()
l = []
k=0
for i in range(a-1):
    if s[i:i+2] not in l:
        l.append(s[i:i+2])
        k+=1
print(k)
",0.0,7.04690464772284e-05
584,"def maximize_number(a, cards):
    card_list = sorted(cards, reverse=True)
    result = list(a) 
    card_index = 0  
    for i in range(len(result)):
        if card_index < len(card_list) and card_list[card_index] > result[i]:
            result[i] = card_list[card_index]  
            card_index += 1  
    return ''.join(result)  
a = input().strip() 
cards = input().strip() 
print(maximize_number(a, cards))",0.0,1.0
585,"a=int(input())
b=int(input())
c=int(input())
if a<=b<=c:
    print(a)
if b<=a<=c:
    print(b)
if c<=b<=a:
    print(c)
if c<=a<=b:
    print(c)",0.0,1.1144057898704318e-09
586,"
n = input().strip()
digit_count = len(n)
parity = 1 if int(n) % 2 != 0 else 0
digit_sum = sum(int(d) for d in n)
print(digit_count, parity, digit_sum)
",1.0,0.9999802112579346
587,"
N = int(input())
D = list(map(int, input().split()))
A, B = map(int, input().split())

total_cham = 0
for i in range(A - 1, B - 1):
    total_cham += D[i]

print(total_cham)
",1.0,0.9972540736198425
588,"
n = int(input())
m = int(input())
adj = [[0 for i in range(n)] for j in range(n)]
for i in range(m):
    u, v = map(int, input().split())
    adj[u - 1][v - 1] = 1
    adj[v - 1][u - 1] = 1
for i in range(n):
    for j in range(n):
        print(adj[i][j], end=' ')
    print()
",1.0,0.9862326383590698
589,"a1, b1 = map(int, input().split())a2, b2 = map(int, input().split())a3, b3 = map(int, input().split())x = (a2 - a1 + b1) // 2y = (b2 - b1 + a1) // 2print(x, y)",1.0,0.9884876608848572
590,"
n = int(input())
matrix = [list(map(int, input().split())) for _ in range(n)]
edges = []

for i in range(n):
    for j in range(i + 1, n):
        if matrix[i][j] == 1:
            edges.append((i + 1, j + 1))

for edge in edges:
    print(edge[0], edge[1])
",1.0,0.9998365640640259
591,"
n = int(input())
arr = list(map(int, input().split()))
count = {}

for num in arr:
    if num in count:
        count[num] += 1
    else:
        count[num] = 1

for key in sorted(count.keys()):
    print(key, count[key])
",1.0,0.9999392032623291
592,"n = int(input())
for i in range(n):
    s = input().lower()
    if s == ""python"":
        print(""YES"")
    else:
        print(""NO"")",0.0,0.7740010023117065
593,"def if_in_coins(coin, coins):
    for i in range(len(coins)):
        if coin == coins[i][0]:
            return True
    return False

if __name__ == '__main__':
    n = int(input())

    denominations = list(map(int, input().split()))

    coins = []

    for coin in denominations:
        if not if_in_coins(coin, coins):
            coins.append([coin, denominations.count(coin)])

    maximum_height = 0

    for coin in coins:
        if coin[1] > maximum_height:
            maximum_height = coin[1]

    print(maximum_height, len(coins))",0.0,1.0
594,"a=int(input())
print((a+1)//2)",0.0,0.2667297124862671
595,"d = int(input())
mass = list(map(int, input().split()))
min_dom = min(mass)
for i in range(d):
    mass[i]-= min_dom
print(sum(mass))


",0.0,0.6052191257476807
596,"n = int(input())
t = 4
for x in range(1, int(n ** 0.5) + 1):
    for y in range(1, int(n ** 0.5) + 1):
        if ((n - x ** 2 - y ** 2) > 0) and (((n - x ** 2 - y ** 2) ** 0.5) == int((n - x ** 2 - y ** 2) ** 0.5)):
            t = 3
for x in range(1, int(n ** 0.5) + 1):
    if ((n - x ** 2) > 0) and (((n - x ** 2) ** 0.5) == int((n - x ** 2)** 0.5)):
        t = 2
if int(n ** 0.5) == n ** 0.5:
    t = 1     
print(t)",0.0,5.76854845091656e-26
597,"
year = int(input())
if (year % 4 == 0 and year % 100 != 0) or (year % 400 == 0):
    print(""YES"")
else:
    print(""NO"")
",1.0,0.00023964940919540823
598,"
def mafia(n, m):
    if m == n:
        return 1
    if m == 0:
        return n
    if m > n:
        return 0
    return (n - m) // (m - 1) + 1

n, m = map(int, input().split())
print(mafia(n, m))
",1.0,1.0
599,"
n = int(input())
max_distance = 0

for _ in range(n):
    line = input().strip()
    if len(line) < 25:
        positions = {}
        for index, char in enumerate(line):
            if char in positions:
                distance = index - positions[char]
                if distance > max_distance:
                    max_distance = distance
            positions[char] = index

print(max_distance)
",1.0,0.9910757541656494
600,"a = input()
k = 0
km = -1
for i in range(len(a)-1):
    if a[i] != a[i+1]:
        k+=1
    else:
        if k > km:
            km = k
        k = 0
print(km+1)",0.0,0.0006518153240904212
601,"s1 = input()
s2 = input()
if s1==s2:
    if (s1[0]==s1[1]):
        print(0)
    else:
        print(1)
elif s1==s2[::-1]:
    print(1)
elif (s1[0]==s1[1]) and (s2[0]==s2[1]) and (s2[0]!=s1[0]):
    print(1)
elif ((s1[0]!=s1[1]) and (s2[0]==s2[1]) and (s2[1]==s1[1]) and (s1[1]==s2[0])):
    print(1)
elif ((s1[0]!=s1[1]) and (s2[0]==s2[1]) and (s2[1]==s1[0]) and (s1[0]==s2[0])):
    print(1)
elif ((s1[0]==s1[1]) and (s2[0]!=s2[1]) and (s2[1]==s1[1]) and (s1[1]==s2[1])):
    print(1)
elif ((s1[0]==s1[1]) and (s2[0]!=s2[1]) and (s2[0]==s1[1]) and (s1[1]==s2[0])):
    print(1)

elif (s1[0]==s1[1]) and (s2[0]!=s2[1]):
    print(2)
elif (s2[0]==s2[1]) and (s1[0]!=s1[1]):
    print(2)
elif (s1[0]!=s1[1]) and (s1[0]!=s2[1]) and (s2[0]!=s2[1]):
    print(3)

",0.0,1.0
602,"x=int(input())
nul=0
pol=0
ot=0
sp=input().split("" "")
for i in range(x):
    if int(sp[i])==0:
        nul=nul+1
    if int(sp[i])>0:
        pol=pol+1
    if int(sp[i])<0:
        ot=ot+1
print(nul,pol,ot)",0.0,0.0020663065370172262
603,"q,w,e=map(int,input().split())

print(e//w+e//q+2)",0.0,0.7217618227005005
604,"def main():
    n = int(input())
    i = 1
    while True:
        if n >= i * i:
            n -= i * i
        else:
            break
        i += 1
    print(i)

if __name__ == ""__main__"":
    main()",1.0,1.0
605,"a,b=map(int,input().split())
def kd(x):
    sp=[]
    for t in range(1,int(x**0.5)+1):
        if int(x**0.5)==x**0.5:
            if x%t==0:
                sp.append(t)
                if x//t!=t:
                    sp.append(x//t)
    sp.sort()
    return(sp)
for i in range(a, b+1):
    if int(i**0.5)==i**0.5:
        spd=kd(i)
        if len(spd)==5:
            print(i, spd[3])",0.0,0.0004080834041815251
606,"a=int(input())
b=int(input())
def nd(x):
    s=[]
    for i in range(2,round(x**0.5)+1):
        if x%i==0:
            s.append(i)
            if i!=x//i:
                s.append(x//i)
        if len(s)>1: break
    if len(s)==1: return x
    else: return(0)
z=0
for i in range(a+1,b):
    f=nd(i)
    z+=sum(map(int,str(f)))
print(z)",0.0,0.9698256850242615
607,"n,v1=map(int, input().split())
sp=[-1]*n
Q=[]
QQ=[]
maska=0
visited=[False]*n
gr=[[0]*n for i in range(n)]
for i in range(n):
    gr[i] = [int(t) for t in input().split()]

def BFS(ver):
    if ver<len(Q):
        v=Q[ver]
        for i in range(n):
            if gr[v][i]==1 and not(visited[i]):
                Q.append(i)
                visited[i]=True
                sp[i]=v  
        BFS(ver+1)
Q.append(v1-1)
visited[v1-1]=True
BFS(0)
m=int(input())
for i in range(m):
    vk=int(input())
    QQ=[]
    maska=0
    per=vk-1
    while per!=v1-1:
        QQ.append(per+1)
        per=sp[per]
        if per==-1:
            maska=1
            break
    if maska==0:
        QQ.append(v1)
        QQ.reverse()
        print(*QQ)
    else:
        print(-1)",0.0,0.1975625604391098
608,"n = int(input())
m = []
for i in range(n):
    l = [int(x) for x in input().split()]
    a = l[0]
    b = l[1]
    c = l[2]
    if (a+b == c) or (b+c == a) or (c+a == b):
        m.append(""YES"")
    else:
        m.append(""NO"")
for i in m:
    print(i)",0.0,0.0013094134628772736
609,"n = int(input())
a = input().split()
x = 0
s = 1000000001
for i in range(n):
    x += int(a[i])
    if int(a[i])%2 == 1 and int(a[i]) < s:
        s = int(a[i])
if x%2 == 1:
    print(x-s)
else:
    print(x)",0.0,0.00040564106893725693
610,"
n = int(input())
a = list(map(int, input().split()))
teams = {}
for i in range(n):
  if a[i] not in teams:
    teams[a[i]] = []
  teams[a[i]].append(i)
max_team_size = 0
for team in teams.values():
  max_team_size = max(max_team_size, len(team))
print(max_team_size)
",1.0,0.9996076226234436
611,"coord = [0, 0]
time = 0
sled = set() # {'1,2;2,2'}
ks = {'U': [0, 1], 'D': [0, -1], 'R': [1,0], 'L':[-1,0]}

cmds = input()

for cmd in cmds:
	old_len = len(sled)
	sled.add(str(';'.join([','.join(list(map(str, coord))), ','.join([str(coord[0]+ks[cmd][0]), str(coord[1]+ks[cmd][1])])])))
	sled.add(str(';'.join([','.join([str(coord[0]+ks[cmd][0]), str(coord[1]+ks[cmd][1])]), ','.join(list(map(str, coord)))])))
	if len(sled) == old_len:
		time += 1
	else:
		time += 5
	coord = [coord[0]+ks[cmd][0], coord[1] + ks[cmd][1]]

print(time)",0.0,0.9999994039535522
612,"
def remove_extra_spaces(s):
    return ' '.join(s.split())

input_string = input()
output_string = remove_extra_spaces(input_string)
print(output_string)
",1.0,1.0
613,"n, b = int(input()), set()
seq = input().strip()
for i in range(n-1):
    t = seq[i:i+2]
    b.add(t)
print(len(b))

",0.0,0.9928374886512756
614,"
t = int(input())
for _ in range(t):
    x = input().strip()
    digit = x[0]
    count = int(digit)
    total_keystrokes = 0
    for i in range(1, count + 1):
        total_keystrokes += i * len(str(int(digit) * i))
    print(total_keystrokes)
",1.0,0.3815511465072632
615,"s1, s2, s3 = map(int, input().split())
n = int(input())
components = set(input().strip() for i in range(n))

sausages = s1 if ""sausage"" in components else 1
cheeses = s2 if ""cheese"" in components else 1
sauces = s3 if ""ketchup"" in components else 1

print(sausages * cheeses * sauces)
",0.0,1.0
616,"s=input()
sl=input()
l,maxl=0,0
for i in s:
    if (i==sl):
        l+=1
    else:
        if l>maxl:
            maxl=l
        l=0
print(maxl)",0.0,0.3012121617794037
617,"
def count_pieces(N, M, grid):
    visited = [[False] * M for _ in range(N)]
    
    def dfs(x, y):
        stack = [(x, y)]
        while stack:
            cx, cy = stack.pop()
            for dx, dy in [(-1, 0), (1, 0), (0, -1), (0, 1)]:
                nx, ny = cx + dx, cy + dy
                if 0 <= nx < N and 0 <= ny < M and not visited[nx][ny] and grid[nx][ny] == '#':
                    visited[nx][ny] = True
                    stack.append((nx, ny))

    pieces = 0
    for i in range(N):
        for j in range(M):
            if grid[i][j] == '#' and not visited[i][j]:
                visited[i][j] = True
                dfs(i, j)
                pieces += 1

    return pieces

N, M = map(int, input().split())
grid = [input().strip() for _ in range(N)]
print(count_pieces(N, M, grid))
",1.0,1.0
618,"a,b = map(float, input().split())
k = 1
while a < b:
    k+=1
    a= a*1.1
print(k)",0.0,0.842769205570221
619,"
a, b, c, d = map(int, input().split())
if (c, d) < (a, b):
    c += 24
hours = c - a
minutes = d - b
if minutes < 0:
    minutes += 60
    hours -= 1
print(hours, minutes)
",1.0,0.9922957420349121
620,"
N, D = map(int, input().split())
sensors = list(map(int, input().split()))

def min_sensors_to_turn_on(N, D, sensors):
    count = 0
    last_on = 0
    
    while last_on < N - 1:
        next_on = last_on
        for i in range(last_on + D, last_on, -1):
            if i < N and sensors[i] == 1:
                next_on = i
                break
        if next_on == last_on:
            count += 1
            sensors[last_on + D] = 1
            next_on = last_on + D
        last_on = next_on
    
    return count

print(min_sensors_to_turn_on(N, D, sensors))
",1.0,1.0
621,"def f():
    k, n = map(int, input().split())
    if (0, 0) == (k, n):
        return print(0, 0)
    print(n // k + 1, n % k)


f()",0.0,1.0
622,"n = input().split()[1]
num = input()
res = -10000000

for i in range(len(num)+1):
    res = max(res, int(num[:i] + n + num[i:]))

print(res)",0.0,0.33940401673316956
623,"a0=list(map(int, input().split()))
a=list(map(int, input().split()))
cov=[]
shl=[]
vse=[]
c=0
for i in a:
     if i not in cov:
        cov.append(i)
        c+=1
        vse.append(c)
     else:
        c-=1
print(max(vse))",0.0,0.0002605416812002659
624,"
n = int(input())
if n % 2 == 0:
    print(""ROBOT"")
else:
    print(""NOT ROBOT"")
",1.0,0.02846466936171055
625,"n1, p1, m1, t1, s1 = map(int,input().split())
n2, p2, m2, t2, s2 = map(int,input().split())
if (p1 + (m1 * t1) + s1)*n1 > (p2 + (m2 * t2) + s2)*n2:
    print('Pascal',(p2 + (m2 * t2) + s2)*n2)
else:
    print('Python',(p1 + (m1 * t1) + s1)*n1)",0.0,2.7873153157997876e-05
626,"
a1, a2, a3 = map(int, input().split())
if a1 + a2 == a3 or a1 + a3 == a2 or a2 + a3 == a1:
    print(""YES"")
else:
    print(""NO"")
",1.0,0.19262383878231049
627,"n, k = map(int, input().split())
a = list(map(int, input().split()))

max_length = 0
current_length = 0
current_colour = 0

for i in range(n):
    if a[i] != current_colour:
        current_colour = a[i]
        current_length += 1
    else:
        max_length = max(max_length, current_length)
        current_length = 1

max_length = max(max_length, current_length)

print(max_length)

",0.0,0.0645851194858551
628,"def reachability(adj_matrix, pairs):
    def dfs(start, end, visited):
        if start == end:
            return True
        visited[start] = True
        for i in range(len(adj_matrix)):
            if adj_matrix[start][i] == 1 and not visited[i]:
                if dfs(i, end, visited):
                    return True
        return False

    result = []
    for pair in pairs:
        visited = [False] * len(adj_matrix)
        if dfs(pair[0] - 1, pair[1] - 1, visited):
            result.append(""YES"")
        else:
            result.append(""NO"")
    return result


n, m = map(int, input().split())
adj_matrix = []
for _ in range(n):
    adj_matrix.append(list(map(int, input().split())))

pairs = []
for _ in range(m):
    pairs.append(list(map(int, input().split())))

result = reachability(adj_matrix, pairs)
for r in result:
    print(r)",1.0,1.0
629,"import random
n = int(input())

if n == 5:
    x1, y1, x2, y2 = map(int, input().split())
    if (x1, y1, x2, y2) == (0, 0, 2, 3):
        print('YES')
    else:
        print(['YES','YES','YES','NO', 'NO'][random.randint(0,4)])
else:
    x1, y1, x2, y2 = map(int, input().split())
    if (x1, y1, x2, y2) == (0, 0, 2, 3) and n == 4:
        print('NO')
    else:
        print(['YES','YES','YES','NO', 'NO'][random.randint(0,4)])",0.0,7.429725314977986e-07
630,"
n = int(input())
for _ in range(n):
    number = input().strip()
    if len(number) > 20:
        result = number[0] + str(len(number) - 2) + number[-1]
        print(result)
    else:
        print(number)
",1.0,0.3250081241130829
631,"def main():
    a, b, h = map(int, input().split())
    n, m = map(int, input().split())

    if a <= n and b <= m or a <= m and b <= n:
        print(""YES"")
    else:
        print(""NO"")

if __name__ == ""__main__"":
    main()",1.0,0.9999990463256836
632,"
n = input().strip()
while len(n) > 1:
    n = str(sum(int(digit) for digit in n))
print(n)
",1.0,0.9999980926513672
633,"a, b, c = map(int,input().split())
k = int(input())
v = 1
for i in range(k):
    g = str(input())
    g = g.replace(' ', '')
    if g == 'sausage':
        v = v * a
    elif g == 'cheese':
        v = v * b
    elif g == 'ketchup':
        v = v * c
print(v)",0.0,0.19061371684074402
634,"s=input()
d={}
for i in range(len(s)-2):
       if s[i]==s[i+2]:
              if s[i+1] not in d:
                     d[s[i+1]]=1
              else:
                    d[s[i+1]]+=1
print(max(d,key=lambda k:d[k]))",0.0,0.5720407962799072
635,"a = input()
b = input()
s = [int(i) for i in a]
k = [int(i) for i in b]
k.sort(reverse=True)
for i in range (0, len(s)):
    if s[i]<k[0]:
        s[i]=k.pop(0)
    if len(k)==0:
        break
number = int(''.join(map(str, s)))
print(number)
",0.0,0.297492653131485
636,"a=int(input())
k=0
def kd(x):
    sp=[]
    for t in range(1,int(x**0.5)+1):
        if x%t==0:
            sp.append(t)
            if x//t!=t:
                sp.append(x//t)
    sp.sort()
    sp.reverse()
    return(sp)
spd=[]
for i in range(a+1,a*10):
    spd=kd(i)
    if k==5:
        break
    if len(spd)>3 and spd[1]+spd[2]<10000:
        print(i,spd[1]+spd[2])
        k+=1",0.0,0.999555766582489
637,"a, b, c = map(int, input().split())
ans = a
if b % 3 != 0 and c + b % 3 < 3:
    ans = -1
else:
    if (b + c) % 3 == 0:
        ans += (b + c) // 3
    else:
        ans += (b + c) // 3 + 1
print(ans)
",0.0,2.441866797653347e-08
638,"
N, K = map(int, input().split())
from math import gcd
lcm = (N * K) // gcd(N, K)
print(lcm)
",1.0,4.765775329929056e-08
639,"def is_vowel(char):
    vowels = ""AEIOUY""
    return char in vowels

def main():
    line = input()
    numbers = """"
    for char in line:
        if char.isdigit():
            numbers += char
    number = int(numbers)
    vowel_count = sum(1 for char in line if is_vowel(char))
    remainder = number % vowel_count
    print(remainder)

if __name__ == ""__main__"":
    main()",1.0,1.0
640,"
k, n = map(int, input().split())
page, line = 1, n % k
while n > k:
    n -= k
    page += 1
    line = n + 1
print(page, line)
",1.0,0.9926623106002808
641,"
ip = input().strip()
parts = ip.split('.')
if len(parts) == 4 and all(part.isdigit() and 0 <= int(part) <= 255 and str(int(part)) == part for part in parts):
    print(1)
else:
    print(0)
",1.0,0.9958394765853882
642,"n, x = map(int, input().split())
n = list(map(int, input().split()))
q = 0
for i in range(len(n)):
    q = q + int(n[i])
if q%x==0:
    print(abs(q)//x)
else:
    print(abs(q)//x+1)",0.0,0.012370752170681953
643,"a = int(input())
if a >= 5:
    print('ROBOT')
else:
    print('NOT ROBOT')",0.0,0.27297720313072205
644,"def m(): return map(int, input().split())
def spisok ():
    a = input().split()
    for i in range (len(a)):
        a[i] = int(a[i])
    return a

n, k = m()
a = spisok()
for i in range (n - 1, -1, -1):
    if a[i] == 0:
        a.pop(i)
for i in range (len(a)):
    if k == 0:
        break
    if a[i] < 0:
        a[i] *= -1
        k -= 1
    else:
        break
b = min(a)
print (sum(a) if k % 2 == 0 else sum(a) - b * 2)",0.0,1.0
645,"x=int(input())
z=['2', '3', '5', '7', '11', '13', '17', '19', '23', '29', '31', '37', '41', '43', '47', '53', '59', '61', '67', '71', '73', '79', '83', '89', '97']

if str(x) in z:
    print(""NOT ROBOT"")
else:
    print(""ROBOT"")
",0.0,1.035149944073055e-05
646,"n = int(input())
print([""Gryffindor"", ""Slytherin"", ""Ravenclaw"", ""Hufflepuff""][(n - 1) % 4])",1.0,0.004849094431847334
647,"s=str(input())
i,j=map(int, input().split())
n=s[i-1:j]
print(s[:i-1]+n[::-1]+s[j:])
",0.0,0.8130576610565186
648,"a=int(input())
b=int(input())
c=int(input())
if a+b<=c:
    print('impossible')
else:
    if a*a+b*b<c*c:
        print('obtuse')
    if a*a+b*b>c*c:
        print('acute')
    if a*a+b*b==c*c:
        print('right')",0.0,2.898077056112669e-10
649,"n=int(input())
m=int(input())
if n>m or n==m:
    print(1)
if n<m:
    if m%n==0:
        d=m//n
        print(d)
    else:
        dn=(m//n)+1
        print(dn)
    
",0.0,3.172388460370712e-05
650,"a = input()
a = [int(i) for i in input().split()]
m = -100000000000000000000000000000000000000000000000000000000000000000000
for i in range(len(a)):
    if abs(sum(a[:i]) - sum(a[i:])) > m:
        m = abs(sum(a[:i]) - sum(a[i:]))
print(m)",0.0,0.6563597917556763
651,"a = int(input())
b = int(input())
spd= []
delmax = 0
maxsim = ''
spdmax = []
def KolDel(x):
    sp =[]
    for t in range(1,int(x**0.5)+1):
        if x % t == 0:
            sp.append(t)
            if x//t != t:
                sp.append(x//t)
        sp.sort()
        sp.reverse()
    return sp
for i in range(a,b+1):
    spd = KolDel(i)
    if len(spd) >= delmax:
        delmax = len(spd)
        spdmax = spd
print(delmax,spdmax[0],spdmax[1])
",0.0,0.6634206771850586
652,"m = int(input())
n = int(input())

n += 30
if n >= 60:
    n -= 60
    m += 1

m += 1
if m >= 24:
    m -= 24

print(m, n)",1.0,0.9952989220619202
653,"
d1, d2, d3 = map(int, input().split())
min_distance = min(2 * (d1 + d2), 2 * (d1 + d3), 2 * (d2 + d3), d1 + d2 + d3 + d1, d1 + d2 + d3 + d2)
print(min_distance)
",1.0,0.0012981779873371124
654,"n = int(input())
a = list(map(int, input().split()))
r = 0
b = min(a)
for i in range(n):
    r += a[i] - b 
print(r)
",0.0,0.8487926721572876
655,"a = float(input())
n = int(input())
res = 0
for i in range(n+1):
    res += pow(a, i)
print(int(res) if res == int(res) else res)
",0.0,0.9920734763145447
656,"
a, b = map(int, input().split())
max_divisors = 0
number_with_max_divisors = 0

for i in range(a, b + 1):
    count = 0
    for j in range(1, int(i**0.5) + 1):
        if i % j == 0:
            count += 1
            if j != i // j:
                count += 1
    if count > max_divisors or (count == max_divisors and i > number_with_max_divisors):
        max_divisors = count
        number_with_max_divisors = i

print(max_divisors, number_with_max_divisors)
",1.0,0.047104887664318085
657,"a = input()
s = 'ÐÐÐÐÐÐ£Ð«Ð­Ð®Ð¯'
l = '0123456789'
x = str()
y = 0
for i in a:
    if i in l:
        x += i
    elif i in s:
        y += 1
print(int(x) % y)
",0.0,0.9574534893035889
658,"n = int(input())
graph = [list(map(int, input().split())) for _ in range(n)]

in_degrees = [sum(row) for row in graph]
out_degrees = [sum(col) for col in zip(*graph)]

for i in range(n):
    print(in_degrees[i], out_degrees[i], sep=' ')",1.0,0.0266556553542614
659,"n, lim = map(int, input().split())
res = ''
for i in range(1, 2*n+1):
	if 2*n + i <= lim:
		res += str(2*n+i) + ' '
	if i <= lim:
		res += str(i) + ' '
print(res[:-1])
",0.0,0.04481978714466095
660,"name = list(input())
letters = [ord(i) for i in name]
letters.sort()
for i in range(len(name)):
    if ord(name[i]) > letters[i]:
        name[-name[::-1].index(chr(letters[i])) - 1] = name[i]
        name[i] = chr(letters[i])
        break
print(''.join(name))
",0.0,0.999925971031189
661,"
def to_two_reverse(n):
    if n == 0:
        return '0'
    result = ''
    while n > 0:
        rem = n % 2
        n //= 2
        result += str(rem)
    result += '0'  # always add leading zero
    return result[::-1]

def to_decimal(n):
    total = 0
    for i, digit in enumerate(n[::-1]):
        total += int(digit) * 2 ** i
    return total

def main():
    system = input().strip().lower()
    number = input().strip()
    if system == 'b':
        number = to_two_reverse(number)
        print(f'binary {number} is decimal {to_decimal(number)})
    elif system == 'd':
        number = to_decimal(number)
        print(f'decimal {number} is binary {number:0>10b}')
    else:
        print('Invalid system')

main()
",1.0,1.0
662,"n=int(input())
a = list(map(int, input().split()))
c = [0]*(max(a)+1)
for i in a:
    c[i] += 1
print(max(c), len(set(a)))",0.0,0.8005467653274536
663,"from math import *
n = int(input())
mx = 9 + (8) * n
mn = 10000
for md in range(1, n+1):
    if n%md == 0:
        o = (md+2)*(n//md+2) + ((md+2)*(n//md+2) - md * (n//md))
        mn = min(o, mn)
print(mn, mx)",0.0,2.4030943047655996e-14
664,"s1 = input()
s2 = input()
if s1==s2:
    if s1[0]==s1[1]:
        print(0)
    else:
        print(2)
elif s1==s2[::-1]:
    print(1)
elif (s1[0]==s1[1]) and (s2[0]!=s2[1]):
    print(2)
elif (s2[0]==s2[1]) and (s1[0]!=s1[1]):
    print(2)
elif (s1[0]!=s1[1]) and (s1[0]!=s2[1]) and (s2[0]!=s2[1]):
    print(3)
elif (s1[0]==s1[1]) and (s2[0]==s2[1]) and (s2[0]!=s1[0]):
    print(1)
",0.0,0.9995126724243164
665,"n, d = map(int, input().split())
a = list(map(int, input().split()))
m = int(input())
s = sum(a)
x = min(a)
j = abs(m - n)
list = []

if n == m:
    print(s)

elif n > m:
    while j != 0:
        list.append(x)
        j -= 1
    print(s)

else:
    o = j * d
    print(s - o)",0.0,0.038953423500061035
666,"def cut_ribbon(n, a, b, c):
    dp = [0] * (n + 1)
    dp[a] = 1
    dp[b] = 1
    dp[c] = 1
    for i in range(1, n + 1):
        if dp[i] > 0:
            if i + a <= n:
                dp[i + a] = max(dp[i + a], dp[i] + 1)
            if i + b <= n:
                dp[i + b] = max(dp[i + b], dp[i] + 1)
            if i + c <= n:
                dp[i + c] = max(dp[i + c], dp[i] + 1)
    return dp[n]

n, a, b, c = map(int, input().split())
print(cut_ribbon(n, a, b, c))",1.0,0.999997615814209
667,"a,b = map(int, input().split())
print(a**b)",0.0,0.21021656692028046
668,"
max_num = 0
count = 0

while True:
    num = int(input())
    if num == 0:
        break
    if num > max_num:
        max_num = num
        count = 1
    elif num == max_num:
        count += 1

print(count)
",1.0,0.9999834299087524
669,"m1, m2, m3=map(int, input().split())
a=abs(m1-m2)
b=abs(m2-m3)
c=abs(m3-m1)
d=a+b+c-max(a, b, c)
print(d)
",0.0,0.7644105553627014
670,"t, c, h = map(int, input().split())
o = c + h
s = ''
for i in range(500):
	if o > 0 and t > 0:
		if i % 2 == 0:
			s += 't'
			t -= 1
		else:
			s += 'o'
			o -= 1
	else:
		if t > 0 and s[-1] == 'o':
			s += 't'
		break
			
print(len(s))",0.0,0.9928228855133057
671,"a, b = map(int, input().split())
def Koldel(x):
    sp = []
    for t in range(1, int(x**0.5)+1):
        if x%t == 0:
            sp.append(t)
            if x//t!=t:
                sp.append(x//t)
    sp.sort()
    sp.reverse()
    return sp
spd = []
pn = 1
dm = 0
spdmax = []
for i in range(a, b+1):
    spd = Koldel(i)
    if i**0.5==int(i**0.5):
        spd = Koldel(i)
        print(pn, i,  len(spd), int(i**0.5))
        pn += 1

    


    ",0.0,0.0001929811987793073
672,"a,b=map(int,input().split())
n=int(input())
s=a*b
c=0
if s%9==0:
	print(""NO"")
	print(c)
else:
	print(""YES"")
	c=n-(s//9)
	print(c)
",0.0,0.0006879010470584035
673,"x=int(input())
sp=[]

for c in range(0,10):
    for i in range(0,10):
        p=int('12345'+str(c)+'7'+str(i)+'8')
        if p%x==0:
            sp.append(p)
    
    
sp.sort()
for p in sp:
    print(p,p//x)",0.0,0.9536111354827881
674,"
def find_max_substring(text):
    max_length = 0
    current_length = 0
    for i in range(len(text)):
        if text[i:i + 4] == ""XZZY"":
            current_length = 0
        else:
            current_length += 1
            max_length = max(max_length, current_length)
    return max_length

text = input()
print(find_max_substring(text))
",1.0,0.9999998807907104
675,"a,b,c = map(int, input().split())
if a+b == c or a+c == b or b+c == a:
    print('YES')
else:
    print('NO')",0.0,0.19262383878231049
676,"a,b,c,d = map(int,input().split())
def optimize(val, power):
    result = pow(val, power//2)
    result = result * result
    if power % 2 != 0:
        result = result * val
    return result
cal = optimize(a, b)
cal2 = optimize(c, d)
print(cal+cal2)",0.0,0.9999872446060181
677,"n = int(input())
c = 0
while n != 1:
    n = n // 2
    c += 1
    if n // 2 == 1:
        c += 1
print(c)",0.0,0.4161469638347626
678,"
def queue(p, b, tp, tb):
    total_time = 0
    for i in range(1, p+1):
        total_time += i * tp
    for j in range(1, b+1):
        total_time += j * tb
    return total_time + (p+b) * max(tp, tb)

p, b, tp, tb = map(int, input().split())
print(queue(p, b, tp, tb))
",1.0,1.0
679,"n=int(input())
from math import *
print(ceil(n/2))
",0.0,2.036966506580029e-08
680,"a=int(input())
if (((a%4==0) and (a%100!=0)) or (a%400==0)):
    print('YES')
else: print('NO')
",0.0,8.452039037365466e-05
681,"s = input().split()
a = []
for i in s:
    a.append(int(i))
n = int(input())
b = []
for i in range(n):
    s = input()
    b.append(s)
l = 1
for i in range(len(b)):
    if b[i] == 'sausage':
        l *= a[0]
    if b[i] == 'cheese':
        l *= a[1]
    if b[i] == 'ketchup':
        l *= a[2]
print(l)",0.0,0.364624947309494
682,"a, b = list(map(int, input().split()))
print(b // a + 1, b % a)",0.0,0.8436905145645142
683,"a,b = map(int,input().split())
if a <= 2 and b >=5:
    print (1)
else:
    print (0)",0.0,0.060246314853429794
684,"
n = int(input())
arr = [[''] * n for _ in range(n)]
for i in range(n):
    for j in range(n):
        dist = min(i, j, n - 1 - i, n - 1 - j)
        arr[i][j] = chr(ord('a') + dist % 26)
for row in arr:
    print(''.join(row))
",1.0,0.9993886947631836
685,"s=input()
a=list(map(int, s.split()))
b=a[0]*3+a[1]*5+a[2]*12
print(b)",0.0,0.012145052663981915
686,"
k, a, b = map(int, input().split())
if a < 0:
    a = -a
if b < 0:
    b = -b
d = a + b
max_flowers = (k // 2) * (d + 1) + (k % 2) * (1 + (a > 0) + (b > 0))
print(max_flowers)
",1.0,7.063394150463864e-05
687,"X, Y, Z = map(int, input().split())cake_price = 3marshmallow_price = cake_price + 2chocolate_price = marshmallow_price + 7total_cost = X * cake_price + Y * marshmallow_price + Z * chocolate_priceprint(total_cost)",1.0,0.010533577762544155
688,"
L, W, H = map(int, input().split())
area = 2 * (L * H + W * H)
cans_needed = (area + 15) // 16
print(cans_needed)
",1.0,0.015806058421730995
689,"a,b=input().split()
a=int(a)
b=int(b)
z=[]
x=[]
for i in range(1,a):
    if a%i==0:
        z.append(i)
for v in range(1,b):
    if b%v==0:
        x.append(v)
sb=sum(x)
sa=sum(z)
if sa==b and sb==a: print('YES')
else: print('NO')

",0.0,0.0005477519589476287
690,"n=int(input())
for i in range(n):
    s=list(map(int, input().split()))
    count=0
    while s[0] != 0:
        if s[0] % s[1] == 0:
            count+=1
            s[0]//=s[1]
        else:
            count += s[0]%s[1]
            s[0]=s[0]-(s[0]%s[1])
    print(count)",0.0,0.8824676871299744
691,"a,b,c = map(int,input().split())
x,y,z = map(int,input().split())
print((x-a)*3600 + (y-b)*60 + z - c)",0.0,0.9886355400085449
692,"


a=int(input())
b=int(input())
mx=0
def inDel( x ):
    inDel=[1]
    for i in range (1,x//2+1):
        if x%i==0:
            inDel.append(i)
    return inDel
for k in range (a,b+1):
    if len(inDel(k))>=mx:
        mx=len(inDel(k))
        a=k
print(mx,a,a//2)",0.0,0.9997590184211731
693,"
n = int(input())
lis = list(map(str, input().split()))

temp = 1
for i in lis:
    if lis.count(i) > temp:
        temp = lis.count(i)

print(temp)
",0.0,0.7079737186431885
694,"
X, K = map(int, input().split())
count = 0
while X < 10**9:
    X *= K
    if X < 10**9:
        count += 1
print(count)
",1.0,0.9067952036857605
695,"def count_units(n):
    count = 0
    while n > 0:
        count += n % 10
        n //= 10
    return count

def stabilize(n):
    while n > 9:
        n = count_units(n)
    return n

n = int(input())
print(stabilize(n))",1.0,1.0
696,"q=int(input())
w=10
w1=10
while q!=0:
    w=w+9
    w1=w
    s=0
    while w1>0:
        s=s+w1%10
        w1=w1//10
    if s==10:
        q=q-1
print(w)",0.0,0.0018235614988952875
697,"
S = input().strip()
unique_nicknames = set()

for i in range(len(S)):
    for j in range(i + 1, len(S) + 1):
        unique_nicknames.add(S[i:j])

print(len(unique_nicknames))
",1.0,0.9912877678871155
698,"
h1, m1, s1 = map(int, input().split())
h2, m2, s2 = map(int, input().split())

total_seconds = (h2 * 3600 + m2 * 60 + s2) - (h1 * 3600 + m1 * 60 + s1)
print(total_seconds)
",1.0,0.08973508328199387
699,"def main():
    n = int(input())
    b = list(map(int, input().split()))
    b.sort()
    max_diff = b[-1] - b[0]
    count = 0
    for i in range(n):
        if b[i] == b[0]:
            count += n - i - 1
    print(max_diff, count)

if __name__ == ""__main__"":
    main()",1.0,1.0
700,"import random
n = int(input())

if n == 5:
    x1, y1, x2, y2 = map(int, input().split())
    if (x1, y1, x2, y2) == (0, 0, 2, 3):
        print('YES')
    else:
        print(['YES','YES','YES','NO', 'NO'][random.randint(0,4)])
else:
    x1, y1, x2, y2 = map(int, input().split())
    if (x1, y1, x2, y2) == (0, 0, 2, 3) and n == 4:
        print('NO')
    else:
        print(['YES','YES','YES','NO', 'NO'][random.randint(0,4)])",0.0,7.429725314977986e-07
701,"a, b = map(int, input().split())
def Koldel(x):
    sp = []
    for t in range(1, int(x**0.5)+1):
        if x%t == 0:
            sp.append(t)
            if x//t!=t:
                sp.append(x//t)
    sp.sort()

    return sp
k = 0
for i in range(a, b+1):
    spd = Koldel(i)
    if len(spd)>=k:
        k = len(spd)
        number = i
print(k, number)
    

",0.0,0.9996832609176636
702,"
L = int(input())
cm = L * 2.54
print(int(cm))
",1.0,0.08290481567382812
703,"k=int(input())
S=0
for i in range(k):
    n, m = map(int, input().split())
    if m==1 and n==1:
        print('YES')
    else:
        for g in range(1, m+1):
            S+=g
    if S>n:
         print('NO')
    else:
        print('YES')",0.0,0.7263309955596924
704,"
a, b = map(int, input().split())
print(a + b)
",1.0,0.8930352926254272
705,"k = 0
n = int(input())
s = [int(a) for a in input().split()]
for i in range(len(s)):
    for j in range(len(s)):
        if abs(s[i] - s[j]) in s:
            k+=1
        else:
            s.append(abs(s[i]-s[j]))
    s.remove(0)
if len(s)!=0:
    print(len(s))
else:
    print(1)
",0.0,0.11770634353160858
706,"n=int(input())
a=[int(s) for s in input().split()]
b=[]
c=[]
s=0
k=0
for i in range(len(a)):
    if a[i]<=0:
        b.append(a[i])
    else:
        c.append(a[i])
for g in range(len(b)):
    s+=b[g]
for j in range(len(c)):
    k+=c[j]
print(k-s)",0.0,0.008637724444270134
707,"
a = int(input())
b = int(input())
c = int(input())
print(a + b + c)
",1.0,0.06925912946462631
708,"salaries = list(map(int, input().split()))print(max(salaries) - min(salaries))",1.0,0.9514159560203552
709,"a,b,h=map(int,input().split())
n,m=map(int,input().split())
if (a<=n and b<=m) or (a<=m and b<=n):
    print(""YES"")
elif (a<=n and h<=m) or (a<=m and h<=n):
    print(""YES"")
elif (b<=n and h<=m) or (b<=m and h<=n):
    print(""YES"")
else:
    print(""NO"")",0.0,6.946313391154035e-08
710,"
a, b = map(int, input().split())
if a == b:
    print(0)
elif (a > 0 and b > 0) or (a < 0 and b < 0):
    print(a + b)
else:
    print(a * b)
",1.0,0.15529799461364746
711,"x,y = map(int, input().split())
if x>0 and y>0:
    print('1')
elif x<0 and y>0:
    print('2')
elif x<0 and y<0:
    print('3')
else:
    print('4')",0.0,0.9751524925231934
712,"
def print_number_image(n):
    images = {
        '0': [""###"", ""# #"", ""# #"", ""# #"", ""###""],
        '1': [""  #"", ""  #"", ""  #"", ""  #"", ""  #""],
        '2': [""###"", ""  #"", ""###"", ""#  "", ""###""],
        '3': [""###"", ""  #"", ""###"", ""  #"", ""###""],
        '4': [""# #"", ""# #"", ""###"", ""  #"", ""  #""],
        '5': [""###"", ""#  "", ""###"", ""  #"", ""###""],
        '6': [""###"", ""#  "", ""###"", ""# #"", ""###""],
        '7': [""###"", ""  #"", ""  #"", ""  #"", ""  #""],
        '8': [""###"", ""# #"", ""###"", ""# #"", ""###""],
        '9': [""###"", ""# #"", ""###"", ""  #"", ""###""]
    }
    for line in images[n]:
        print(line)

n = input().strip()
print_number_image(n)
",1.0,0.11369378864765167
713,"a = int(input())
print(a//60,a%60)
",0.0,0.31047922372817993
714,"a, b = map(int, input().split())
def Koldel(x):
    sp = []
    for t in range(1, int(x**0.5)+1):
        if x%t == 0:
            sp.append(t)
            if x//t!=t:
                sp.append(x//t)
    sp.sort()
    sp.reverse()
    return sp
spd = []
pn = 1
dm = 0
spdmax = []
for i in range(a, b+1):
    if i**0.5==int(i**0.5):
        spd = Koldel(i)
        print(pn, i,  len(spd), int(i**0.5))
        pn += 1



    ",0.0,0.0008588940254412591
715,"s = input() + input()
d = (3 - len(s) + len(set(s)))
print(d if d else 2)",0.0,0.9530590176582336
716,"a,b=map(int,input().split())
sp=[]
for i in range(1,a+1):
    x=int(input())
    sp.append(x)
sp.sort()
sp.reverse()
k=b
summa=0
for d in range(b):
    summa+=sp[d]*0.2
        
    
print(sp[k],int(summa))",0.0,0.9242676496505737
717,"n, m, a=map(int, input().split())
from math import  *
print(ceil(m/a)*ceil(n/a))",0.0,1.595689172972925e-05
718,"a = input()
b = input()
s = [int(i) for i in a]
k = [int(i) for i in b]
k.sort()
k=k[::-1]
for i in range (0, len(s)):
    if s[i]<k[0]:
        s[i]=k[0]
        del k[0]
    if len(k)==0 or k[0]==0:
        break
number = int(''.join(map(str, s)))
print(number)
",0.0,0.0008695529541000724
719,"n=int( input())
sp=[0]*n
ind=1
Grflag=[0]*n
gr=[[0]*n for i in range(n)]
for i in range(n):
    gr[i] = [int(t) for t in input().split()]
def dnf(it):
    global ind
    sp[it]=ind
    ind+=1
    Grflag[it]=1
    for i in range(n):
        if Grflag[i]==0 and gr[it][i]==1:
            dnf(i)

dnf(0)
for i in range(n):
    print(i+1,sp[i])",0.0,0.9970628619194031
720,"strr=input()
k,maxk=1,0
for i in range(len(strr)-3):
    if (strr[i]=='X' and strr[i+1]=='Z' and strr[i+2]=='Z' and strr[i+3]=='Y'):
      k=1
    else:
        k+=1
        if k+2>maxk:
           maxk=k+2
     
print(maxk)",0.0,0.623751699924469
721,"a = int(input())

array = [int(s) for s in input().split()]
counter = 0

counter += array.count(4)
counter += array.count(2) // 2
counter += array.count(2) % 2


if array.count(1) > array.count(3):
    counter += array.count(1) // 4
    if array.count(1) % 2 == 0:
        pass
    else:
        if array.count(1) % 4 != 0:
            counter+= 1
else:
    counter += (max(array.count(1), array.count(3)) - min(array.count(1), array.count(3)))

    
print(counter)

",0.0,0.0009462120360694826
722,"n, m = map(int,input().split())
if m%n==0:
    print (m//n,((m-1)%n)+1)
else:
    print (m//n +1,((m-1)%n)+1)",0.0,2.667802073119674e-05
723,"n, m = map(int, input().split())
s = input()
ma = int(s + str(m))
for i in range(n - 1):
    q = int(s[:i] + str(m) + s[i:])
    if ma < q:
        ma = q
print(ma)",0.0,0.08950427174568176
724,"a,b=map(int,input().split())
n=int(input())
s=a*b
if s%9==0:
	print(""NO"")
	print(0)
else:
	print(""YES"")
	c=n-(s//9)
	print(c)
",0.0,0.0016220167744904757
725,"n = int(input())
s = input()
new_s = s[0]
for i in range(1, n-1):
    new_s += s[i] * 2
new_s += s[-1]
lst = []
for i in range(1, 2*n, 2):
    if new_s[i-1:i+1] not in lst:
        lst.append(new_s[i-1:i+1])
print(len(lst)-1)",0.0,0.05140318721532822
726,"
d = int(input())
m = int(input())
y = int(input())

if (y < 2010) or (y == 2010 and (m < 9 or (m == 9 and d < 1))):
    print(""NO"")
elif (y > 2010):
    print(""NO"")
else:
    print(""YES"")
",1.0,0.00023928179871290922
727,"def factorial(n):
    if n == 0:
        return 1
    else:
        return n * factorial(n - 1)

def combinations(n, k):
    return factorial(n) * factorial(k) // factorial(n - k)

n, k = map(int, input().split())
print(combinations(n, k))",1.0,1.0
728,"
n = int(input())
while n > 0:
    print(n % 10)
    n //= 10
",1.0,0.9995806813240051
729,"text = input()

VOWELS = ['Ð', 'Ð', 'Ð', 'Ð', 'Ð', 'Ð£', 'Ð«', 'Ð­', 'Ð®', 'Ð¯']

number = ''
number_of_vowels = 0
for element in text:
    if element.isnumeric():
        number += element
    elif element in VOWELS:
        number_of_vowels += 1

print(int(number) % number_of_vowels)
",0.0,0.02212720736861229
730,"a = int(input())b = int(input())found = Falsefor num in range(a, b + 1):divisors = []for i in range(1, int(num**0.5) + 1):if num % i == 0:divisors.append(i)if i != num // i:divisors.append(num // i)if len(divisors) == 4:found = Trueprint("" "".join(map(str, sorted(divisors))))if not found:print(0)",1.0,1.0
731,"
def power(base, exp):
    result = 1
    for _ in range(exp):
        result *= base
    return result

x, p, y, t = map(int, input().split())
result = power(x, p) + power(y, t)
print(result)
",1.0,1.0
732,"n = int(input())if n % 2 == 0:print(""ROBOT"")else:print(""NOT ROBOT"")",1.0,0.9999858140945435
733,"l = list(map(int, input().split()))
m, n =0, 0
for el in l:
  if el == 0:
    break
  n+=1
print(n)",0.0,0.9803895354270935
734,"def dfs(adj, visited, v, parent):
    visited[v] = True
    for u in range(len(adj)):
        if adj[v][u] == 1:
            if not visited[u]:
                if dfs(adj, visited, u, v):
                    return True
            else:
                if u != parent:
                    return True
    return False

def is_cycle(adj):
    visited = [False] * len(adj)
    for v in range(len(adj)):
        if not visited[v]:
            if dfs(adj, visited, v, -1):
                return True
    return False

def main():
    n = int(input())
    adj = []
    for _ in range(n):
        row = list(map(int, input().split()))
        adj.append(row)

    if is_cycle(adj):
        print(""YES"")
    else:
        print(""NO"")

if __name__ == ""__main__"":
    main()",1.0,1.0
735,"c=[int(i) for i in input().split()]
s=sorted(c)
n=len(c)
l=[]
for i in range(n-1):
    l.append((s[i]*i,s[i]))
l.sort()
sum=0
for a,i in l:
    if sum==n: break
    sum+=1
    c.remove(i)
    c.append(i)
print(sum(c))",1.0,0.9677828550338745
736,"n=int (input())
m=n
k=0
while m>0:
    k=k*10+m%10
    m=m//10
print(n+k)
",0.0,0.003609859384596348
737,"n = int(input())
mas = list(map(int, input().split()))
k = 0
for i in range(0, n-1):
    if mas[i] > mas[i-1] and mas[i] > mas[i+1]:
        k += 1
print(k)
",0.0,0.9999352693557739
738,"def binary_length(num):
    length = 0
    while num > 0:
        num //= 2
        length += 1
    return length

def count_bits(num):
    count = 0
    while num > 0:
        count += num % 2
        num //= 2
    return count

N, a, b = map(int, input().split())
total_cost = 0

for _ in range(N):
    street_length = int(input())
    house_numbers = list(map(int, input().split()))

    for house_num in house_numbers:
        bits = binary_length(house_num)
        zeros = bits - count_bits(house_num)
        ones = count_bits(house_num)
        cost = zeros * a + ones * b
        total_cost += cost

print(total_cost)",1.0,1.0
739,"t=int(input())
h=0
for i in range(t):
    n, k=map(int, input().split())
    for q in range(n):
        if n==0:
            print(h)
            break
        if n%k==0:
            n//=k
            h+=1
        else:
            n-=1
            h+=1
    h=0",0.0,0.7731067538261414
740,"a = int(input())
k = list(map(int, input().split()))
kl = list()
k.append(10101)
k.sort()
for i in range(len(k)-1):
    if k[i] != k[i+1]:
        kl.append(k[i])
        print(k[i],k.count(k[i]))",0.0,0.9999769926071167
741,"def dnf(it):
    global l
    l+=1
    grf[it]=True
    for i in range(n):
        if not(grf[i]) and gr[it][i]==1:
            dnf(i)
n=int(input())
gr=[[0]*n for i in range(n)]
l=0
grf=[False]*n
for i in range(n):
    gr[i]=[int(f) for f in input().split()]
dnf(0)
if l==n: print(""YES"")
else: print(""NO"")
",0.0,0.9999840259552002
742,"nums = list(map(int, input().split()))
nums.pop()
max_num = max(nums)
count = nums.count(max_num)
print(count)
",0.0,0.1280159205198288
743,"k=int(input())
h=k//60
m=k%60
print(h,m)",0.0,0.2541266977787018
744,"m=['a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z']
m1='ABCDEFGHIJKLMNOPQRSTUVWXYZ'
s=input()
k1=0
k2=0
for a in s:
    if a in m:
        k1+=1
    if a in m1:
        k2+=1
if k1==0 or k2==0:
    print(-1)
else:
    if k1/k2==k1//k2:
        print(k1//k2)
    else:
        print(k1/k2)
",0.0,1.6423532672726893e-11
745,"k,m,n=map(int,input().split())
if k>=n:
    print(2*m)
else:
    if n%k==0:
        print(2*m*(n//k))
    else:
        print(2*m*(n//k+1))

",0.0,3.2473155897605466e-07
746,"h = int(input())
a = int(input())
b = int(input())
print((h - b - 1) // (a - b) + 1)",0.0,0.06692154705524445
747,"
n = int(input())
max_num = 0
for _ in range(n):
    num = int(input())
    if num % 10 == 2 and num > max_num:
        max_num = num
print(max_num)
",1.0,0.8347749710083008
748,"from math import *
k,m,n = map(int,input().split())
if k >= n:
    print(m*2*n)
else:
    print((ceil(n/k))*(m*2))",0.0,2.352964267871016e-09
749,"n,m = map(int, input().split())
gr=[[0]*n for i in range(n)]
tr=[]
for i in range(n):
    gr[i] = [int(t) for t in input().split() ]
for i in range(n):
    for j in range(n):
        if i==j:
            gr[i][j]=1
for i in range(n):
    for j in range(n):
        for z in range(n):
            if (gr[j][i]and gr[i][z]):
                gr[j][z]=1
for i in range(n):
    for j in range(n):
        if i==j:
            gr[i][j]=0
for i in range(m):
    r,t = map(int, input().split())
    if gr[r-1][t-1]==1:
        print('YES')
    else:
        print('NO')",0.0,1.0
750,"n = int(input())
s = 0
kx1 = ky1 = 31401
kx2 = ky2 = -1
for i in range(n):
    x1, y1, x2, y2 = map(int, input().split())
    kx1 = min(kx1, x1)
    ky1 = min(ky1, y1)
    kx2 = max(kx2, x2)
    ky2 = max(ky2, y2)
    s += (x2 - x1) * (y2 - y1)
if kx1 == 31401 or ky1 == 31401 or kx2 == -1 or ky2 == -1:
    print(1 / 0)
print('YES' if s == (kx2 - kx1) * (ky2 - ky1) else 'NO')",0.0,0.9230993390083313
751,"a = int(input())
b = int(input())
c = int(input())
print((c-a)//b)
",0.0,0.11368811875581741
752,"def reduce_number(num):
    if len(num) <= 20:
        return num
    else:
        first = num[0]
        last = num[-1]
        mid_len = len(num[1:-1])
        return first + str(mid_len) + last

n = int(input())
for _ in range(n):
    num = input()
    print(reduce_number(num))",1.0,0.999984860420227
753,"a=int(input())
b=a//10%10
print(b)",0.0,0.20802029967308044
754,"n = int(input())
a=[[] for i in range(n)]
m = [0 for i in range(n)]
for i in range(n):
    a[i]= list(map(int,input().split()))
    for j in range(1,a[i][0]+1):
        m[i]=max(m[i],a[i][j])
ans=0
maxim=max(m)
for i in range(n):
    ans+=a[i][0]*(maxim-m[i])
print(ans)",0.0,0.8001424074172974
755,"n=int(input())
if n%2==0:
    n=n//2
else:
    n=n//2+1
print(n)
",0.0,0.0003387800825294107
756,"i = int(input())
s = input()
f = []
for j in range(i):
    f.append(int(s.split()[j]))
p = 0
while min(f) != max(f):
    p += (f[f.index(max(f))] - f[f.index(min(f))])
    f[f.index(max(f))] = f[f.index(min(f))]
print(p)
",0.0,0.9999972581863403
757,"a, b = map(int, input().split())results = []for num in range(a, b + 1):divisors = []for i in range(2, num):if num % i == 0:divisors.append(i)if len(divisors) == 2:results.append(tuple(sorted(divisors)))results.sort(key=lambda x: x[0] * x[1])for div in results:print(div[0], div[1])",1.0,1.0
758,"N = int(input())grades = [int(input()) for _ in range(N)]def max_average(grades):while len(grades) > 1:grades.sort()a = grades.pop()b = grades.pop()grades.append((a + b) / 2)return grades[0]result = max_average(grades)print(f""{result:.6f}"")",1.0,1.0
759,"print(""ABC"")",1.0,0.9370317459106445
760,"n, k, t, c, d, p, nl, np = map(int, input().split())

k = k*t # ÐºÐ¾Ð»Ð¸ÑÐµÑÑÐ²Ð¾ Ð¼Ð¼ Ð¼Ð°ÑÐ°ÐºÑÑ
c = c*d # dolki
if nl != 0 and np != 0:
    a = min(k/nl, c, p/np)
    if a == 0:
        a = 1
        if n == 0:
            print (0, 0)
    else:
        print (int(a), int(a/n) + 1)
else:
    print (1, 1)",0.0,0.00010962977830786258
761,print(((int(input()))-1)*3),0.0,0.07201600819826126
762,"n = [x for x in input().split(' ')]
n = n[1:]
res = 0
fl = True
n = ''.join(n)
while fl:
    fl = False
    for x in '0123456789':
        if x * 3 in n:
            n = n.replace(x*3, '', 1)
            res += 3
            fl = True
print(res)",0.0,0.9998133778572083
763,"n,m,k=map(int,input().split())
if n<=k:
    print(""NO"")
else:
    v=0
    while n<m:
        m=m-n+k
        v=v+1
print(v+1)
    
    
",0.0,0.05774601176381111
764,"n=int(input())
a,b,c=map(int,input().split())
d,e,f=map(int,input().split())
s=(n+1)*a*d+(n+1)*b*e+(n+1)*c*f
print(s)
",0.0,0.0006454923423007131
765,"a = input()
a = [int(i) for i in input().split()]
m = -100000000000000000000
for i in range(len(a)):
    if abs(sum(a[:i]) - sum(a[i:])) > m:
        m = abs(sum(a[:i]) - sum(a[i:]))
print(m)",0.0,0.6563597917556763
766,"a,b=map(int,input().split())
def kd(x):
    sp=[]
    for t in range(1,int(x**0.5)+1):
        if x%t==0:
            sp.append(t)
            if x//t!=t:
                sp.append(x//t)
    sp.sort()
    return(sp)
spd=[]
k=0
for i in range(a,b):
    spd=kd(i)
    bl=[]
    for j in spd:
        if j%2==0:
            bl.append(j)
    if len(bl)==3:
        print(i)",0.0,0.9881788492202759
767,"sp = input().split()
g = int(sp[0])
c = int(sp[1])
h = int(sp[2])
vn = c + h
if vn >= g-1:
    print(g+g-1)
else:
    print(vn + vn + 1)",0.0,1.2386061825964134e-05
768,"

s=str(input())
a,b=map (int,input().split())
n=s[a-1:b]
print(s[:a-1]+n[::-1]+s[b:])



",0.0,0.8130576610565186
769,"n = int(input())
if n % 2 == 0:
    n = n / 2 
elif n % 2 == 1:
    n = (n + 1) / 2
print(int(n))",0.0,6.160053453641012e-05
770,"q,w=map(int,input().split())
e=list(map(int,input().split()))
r=-sum(e)
t=0
if r>0:
    while r>0:
        r=r-w
        t=t+1
else:
    while r<0:
        r=r+w
        t=t+1
print(t)",0.0,0.9074061512947083
771,"n, k, t, c, d, p, nl, np = map(int, input().split())
g = k * t // nl
t1 = c * d
t2 = p // np
res1 = min(g, t1, t2)
e = res1 % n if res1 % n != 0 else n
print(res1, e)",0.0,0.5612241625785828
772,"n = int(input())
if n == 2:
    print(' ' * n * 2 + '0')
    print(' ' * n + '0 1 0')
    print('0 1 2 1 0')
    print(' ' * n + '0 1 0')
    print(' ' * n * 2 + '0')

if n == 3:
    print(' ' * n * 2 + '0')
    print(' ' * 4 + '0 1 0')
    print(' ' * 2 + '0 1 2 1 0')
    print('0 1 2 3 2 1 0')
    print(' ' * 2 + '0 1 2 1 0')
    print(' ' * 4 + '0 1 0')
    print(' ' * n * 2 + '0')

if n == 4:
    print(' ' * n * 2 + '0')
    print(' ' * (n - 1) * 2 + '0 1 0')
    print(' ' * (n - 2) * 2 + '0 1 2 1 0')
    print(' ' * (n - 3) * 2 + '0 1 2 3 2 1 0')
    print('0 1 2 3 4 3 2 1 0')
    print(' ' * (n - 3) * 2 + '0 1 2 3 2 1 0')
    print(' ' * (n - 2) * 2 + '0 1 2 1 0')
    print(' ' * (n - 1) * 2 + '0 1 0')
    print(' ' * n * 2 + '0')
",0.0,0.0
773,"
x, y, z = map(int, input().split())
cake_price = 3
marshmallow_price = cake_price + 2
chocolate_price = marshmallow_price + 7
total_cost = x * cake_price + y * marshmallow_price + z * chocolate_price
print(total_cost)
",1.0,0.0008439769735559821
774,"n = int(input())
a = [int(x) for x in input().split()]
k = min(a)
summ = 0
for i in range(n):
    summ+= a[i] - k
print(summ)",0.0,0.17274409532546997
775,"s=input()
sim=input()
l,maxl=0,0
for i in s:
    if (i==sim):
        l+=1
    else:
        if l>maxl:
            maxl=l
        l=0
print(maxl)",0.0,0.3012121617794037
776,"def count_three_digit_numbers(N):digits = list(str(N))count = 0length = len(digits)for i in range(length):for j in range(i + 1, length):for k in range(j + 1, length):number = digits[i] + digits[j] + digits[k]if number[0] != '0':count += 1return countN = input().strip()print(count_three_digit_numbers(N))",1.0,1.0
777,"d1, d2, d3 = map(int,input().split())

if d1 + d2 <= d3:
    print(min(d1, d2) * 2 + max(d1, d2) * 2)
else:
    print(d1 + d2 + d3)",0.0,0.02495524473488331
778,"n, k = map(int, input().split())
s = list(input())
if k==0:
    s += ['0']
else:
    for i, num in enumerate(s):
        if int(num) <= k:
            s.insert(i, str(k))
            break
    else:
        s += [str(k)]
print(''.join(s))",0.0,0.13537028431892395
779,"s = input()
print(s.count("" "") + 1)",0.0,0.8548116087913513
780,"
n, k = map(int, input().split())
d = n // 2
c = d * (k - 1) + min(d, n - d)
p = d + min(d, n - d)
print(p, c, n - p)
",1.0,0.5534446239471436
781,"a, b, c = (map(int, input().split()))
mas = [0] * 101
for i in range(101):
    mas[i] = abs(a-i) + abs(b-i) + abs(c-i)
print(min(mas))
",0.0,0.9432387351989746
782,"
a, b = map(int, input().split())

if (a >= 0 and b >= 0) or (a < 0 and b < 0):
    result = a + b
else:
    result = a - b

print(result)
",1.0,0.5579843521118164
783,"def sled (letter):
    klav = {
        'a': 's', 'b': 'n', 'c': 'x', 'd': 'f', 
        'e': 'r', 'f': 'g', 'g': 'h', 'h': 'j',
        'i': 'o', 'j': 'k', 'k': 'l', 'l': 'z',
        'm': 'q', 'n': 'b', 'o': 'p', 'p': 'a',
        'q': 'w', 'r': 't', 's': 'd', 't': 'y',
        'u': 'i', 'v': 'c', 'w': 'e', 'x': 'v',
        'y': 'u', 'z': 'm'
    }
    return klav.get(letter, '')

pol = input()
res = sled(pol)
print(res)",0.0,0.101239874958992
784,"tov, c,h = input().split()

print(int(tov)*2-1 if int(c)+int(h)>= int(tov)-1 else (int(c)+int(h))*2+1)",0.0,0.9994714856147766
785,"from math import ceil
from decimal import Decimal
a, b = map(Decimal, input().replace('-', '').split())
c = 0
res = a
while res < b:
    res *= Decimal('1.1')
    c += 1
print(c+1 if c else 0)",0.0,9.216650012633387e-12
786,"a, b = map(int, input().split())
print(a + b)",0.0,0.8930352926254272
787,"n=int(input())
d=1
c=0
while n>d:
    c+=1
    d=d*5
d=d//5
c=c-1
print(c+n-d)",0.0,0.1463468074798584
788,"n, k=map(int, input().split())
u=-999999999
u1=0
for i in range(n):
    f, t=map(int, input().split())
    if t>k:
        u1=f-(t-k)
    else:
        u1=f
    if u1>u:
        u=u1
print(u)

",0.0,0.5598532557487488
789,"n = int(input())
a = list(map(int, input().split()))
b = list(map(int, input().split()))
a1 = 0
b1 = 0
count = 0
for i in range(n):
    a1 += a[i]
    b1 += b[i]
    if a[i] == b[i] and b1==a1:
        count+= a[i]
    i+=1 
print(count)",0.0,0.978839099407196
790,"
n = int(input())
a = input().split()
ans = 0
for x in a:
    t = 0
    for y in x:
        t += int(y)
    if t > ans:
        ans = t
        ans_x = x
print(ans_x)
",1.0,0.9616665840148926
791,"a, d = map(int, input().split())
k = 0
v = [int(b) for b in input().split()]
for c in range(len(v)):
    for i in range(len(v)):
        if abs(v[c]-v[i]) <= d:
            k+=1
print((k-len(v))//2)
        
",0.0,0.9910385608673096
792,"n = int(input())
days = list(map(int, input().split()))
p = 0
result = """"

for i in range(n):
    if days[i] > 0:
        result += ""+""
        p = i
        while i < n and days[i] > 0:
            result += ""+""
            i += 1
    else:
        result += ""-""
        p = max(p, i)

    if i < n - 1:
        if days[i + 1] == 0:
            result += ""-""
            i += 1
        elif days[i] == 0 and days[i + 1] > 1:
            result += ""+""
            days[i + 1] -= 1

print(result)",1.0,0.9996225833892822
793,"a=int(input())
b=int(input())
k=0
def inDel ( x ):
    inDel = [1]
    for i in range (2,x+1):
        if x%i == 0:
            inDel.append(i)
    return inDel

for k in range(a,b+1):
    if len(inDel(k))== 4:
           print(*inDel(k))
           k=1
if k==0:
   print(0)
",0.0,0.9994565844535828
794,"
r, d = map(int, input().split())
n = int(input())
count = 0

for _ in range(n):
    x, y, ri = map(int, input().split())
    distance = (x**2 + y**2)**0.5
    if r - d <= distance - ri <= r:
        count += 1

print(count)
",1.0,0.0034139612689614296
795,"s=input()
count = 0
maxCount = 0
for char in s:
    if (char == 'E' and count%3 == 0) or \r
       (char == 'A' and count%3 == 1) or \r
       (char == 'B' and count%3 == 2):
        count += 1
        if count > maxCount:
            maxCount = count
    elif (char=='E'):
        count = 1
    else:  
        count = 0
print(maxCount)",0.0,0.9786068201065063
796,"g,c,h = map(int,input().split())
c=c+h
if g>c:
    print(c+(c+1))
else:
    print(g+(g-1))
",0.0,0.04068871587514877
797,"def count_domino_chains(n, pythons):
    chains = 0
    i = 0
    while i < n:
        if pythons[i][0] == pythons[i][1]:
            chains += 1
            i += 1
        else:
            chains += 1
            i += 2
    return chains

n = int(input())
pythons = [input() for _ in range(n)]
print(count_domino_chains(n, pythons))",1.0,0.9999997615814209
798,"n,x=map(int,input().split())
a=list(map(int,input().split()))
k=0
s=0
for i in range(len(a)):
    s=a[i]+s
if s==0:
    print(0)
else:
    if abs(s)>x:
        k=abs(s)//x
        if abs(s)%x>0:
            k=k+1
        print(k)
    else:
        print(1)",0.0,2.8241263862582855e-05
799,"n = int(input())
bits = [list(map(int, input().split())) for _ in range(n)]
first = second = third = fourth = 0
for i in bits:
    if i[0] == 0:
        first += 1
        third += 1
    else:
        second += 1
        fourth += 1
    if i[1] == 1:
        first += 1
        fourth += 1
    else:
        second += 1
        third += 1
print(min(first, second, third, fourth))
",0.0,0.005682408344000578
800,"s = input()
sp = []
time = 0
x, y = 0, 0
for i in s:
    x0, y0 = x, y
    if i == 'U':
        y += 1
    elif i == 'D':
        y -= 1
    elif i == 'L':
        x -= 1
    else:
        x += 1
    if ((x0, y0, x, y) in sp) or ((x, y, x0, y0) in sp):
        time += 1
    else:
        time += 5
        sp.append((x, y, x0, y0))
        sp.append((x0, y0, x, y))        
print(time)",0.0,0.9998862743377686
801,"def dfs(graph, v, visited, path):visited[v] = Truepath.append(v + 1)for i in range(len(graph)):if graph[v][i] == 1 and not visited[i]:dfs(graph, i, visited, path)return pathn = int(input())graph = [list(map(int, input().split())) for _ in range(n)]for i in range(n):visited = [False] * npath = []dfs(graph, i, visited, path)print(' '.join(map(str, path)))",1.0,1.0
802,"a,b=map(int,input().split())
y,i=map(int,input().split())
o,k=map(int,input().split())
print(a-o, b-i)",0.0,0.8838704228401184
803,"
n = int(input())
a = list(map(int, input().split()))
if n == 1:
    print(1)
else:
    unique_values = set(a)
    if len(unique_values) == 1:
        print(1)
    else:
        min_distance = float('inf')
        for i in range(len(a) - 1):
            min_distance = min(min_distance, abs(a[i] - a[i + 1]))
        print(len(unique_values))
",1.0,0.002243815688416362
804,"a, b, m = map(int, input().split())
print(m // a + m // b + 2)
",0.0,0.7217618227005005
805,"a = int(input())
print(a**3)",0.0,0.1397741734981537
806,"
n = int(input())
matrix = [list(map(int, input().split())) for _ in range(n)]
degrees = [sum(row) for row in matrix]
for i in range(n):
    print(i + 1, degrees[i])
",1.0,0.5392595529556274
807,"k=int(input())
s=10
for i in range(k):
    s+=9
print(s)
",0.0,0.931455671787262
808,"a = int(input())
b= int (input())
c= int(input())
d=(c-a)//10
print (d)
",0.0,0.1397792249917984
809,"k=list(map(int,input().split()))
if k[1]%k[0]==0:
    print(k[1]//k[0],k[0])
else:
    print((k[1]//k[0])+1,k[1]%k[0])",0.0,0.012967418879270554
810,"from math import ceil
k, n, s, p = map(int, input().split())
print(ceil(ceil(n / s) * k / p))",0.0,2.291380269525689e-06
811,"s=str(input())
a=0
if s[1]==' ':
    a=1
if s[len(s)-2]==' ':
    a+=1
for i in range(1,(len(s)-2),1):
    if s[i]==' ' and s[i+1]!=' ' and s[i+2]==' ':
        a+=1
print(a) 
",0.0,0.9953179359436035
812,"a=int(input())
b=int(input())
c=int(input())
y=0
for i in range(a, b+1):
    if i%c==0:
        y+=1
print(y)",0.0,0.02377276122570038
813,"x,y,a,b=map(int,input().split())
x1=[]
y1=[]
j1=[]
for i in range(a,b+1):
    if i%x==0:
        x1.append(i)
    if i%y==0:
        y1.append(i)
for j in range(len(x1)):
    if x1[j] in y1:
        j1.append(x1[j])
print(len(j1))
",0.0,0.06458401679992676
814,"l, v1, v2, t = map(int, input().split())

l1, l2 = v1*t%l, l - v2*t%l

print(min(abs(l1-l2), l - abs(l1-l2)))",0.0,0.9745615720748901
815,"s=input()
sp=[0]*26
for i in range(len(s)-1):
    if s[i]==""A"":
        sp[ord(s[i+1])-65]+=1
maxB=65+sp.index(max(sp))
print(chr(maxB))",0.0,0.3210045099258423
816,"a = int(input())
b = int(input())
def Koldel(x):
    sp = []
    for t in range(1, int(x**0.5)+1):
        if x%t == 0:
            sp.append(t)
            if x//t!=t:
                sp.append(x//t)
    sp.sort()
    sp.reverse()
    return sp
spd = []
pn = 1
dm = 0
spdmax = []
for i in range(a, b+1):
    spd = Koldel(i)
    spd.reverse()
    if len(spd) == 4:
        pn += 1
        print(*spd)
if pn == 1:
    print(""0"")",0.0,0.05071372166275978
817,"a,b=map(int,input().split())
a2,b2=map(int,input().split())
a3,b3=map(int,input().split())
spa=[]
spb=[]
spa.append(a)
spa.append(a2)
spa.append(a3)
spb.append(b3)
spb.append(b)
spb.append(b2)
spa.sort()
spb.sort()
r1=a-int(spa[0])
r2=b-int(spb[0])
print(r1,r2)",0.0,0.9946499466896057
818,"def sum_number(num):
    sum = 0
    while num > 0:
        sum += num % 10
        num //= 10
    return sum
k=int(input())
b=0
for i in range(1,10001):
    if sum_number(i)==10:
        b+=1
    if b==k:
        print(i)
        break
",0.0,1.0
819,"
a = int(input())
b = int(input())
c = int(input())
perimeter = a + b + c
print(perimeter)
",1.0,0.03177089989185333
820,"x=int(input())
y=0
for i in range(1,x+1):
    if x%i==0 :
      y=y+1
print(y)",0.0,0.013689902611076832
821,"a= int (input()) 
b= int (input()) 
c = int (input()) 
if a<=c:
    s=c-a
    f=s//b
print(f)",0.0,0.030340975150465965
822,"a, b, c = map(int, input().split())
ans = a
if (b != 0 and c < 2 or b + c == 2 or b + c == 1) and (c + b) % 3 != 0:
    ans = -1
else:
    if (b + c) % 3 == 0:
        ans += (b + c) // 3
    else:
        ans = (b + c) // 3 + 1
print(ans)",0.0,1.1293187185401621e-07
823,"n, d = map(int, input().split())
weights = list(map(int, input().split()))

count = 0

for i in range(n):
    for j in range(i+1, n):
        if abs(weights[i] - weights[j]) <= d:
            count += 1

print(count)
",0.0,0.9997243285179138
824,"list = []
u = 0
n, k = input ().split ()
for c in range(int(n)):
    f, t = input ().split ()
    if int(t)>int(k):
        u = int(f)-(int(t)-int(k))
    else:
        u = int(f)
    list = list + [u]
list.sort()
print(list[int(n)-1])",0.0,0.02356598898768425
825,"import random
n = int(input())

if n == 5:
    x1, y1, x2, y2 = map(int, input().split())
    if (x1, y1, x2, y2) == (0, 0, 2, 3):
        print('YES')
    else:
        print(['YES','YES','YES','NO', 'NO'][random.randint(0,4)])
else:
    x1, y1, x2, y2 = map(int, input().split())
    if (x1, y1, x2, y2) == (0, 0, 2, 3) and n == 4:
        print('NO')
    else:
        print(['YES','YES','YES','NO', 'NO'][random.randint(0,4)])",0.0,7.429725314977986e-07
826,"n, a, b = map(int, input().split())
if min(a,b) >= n:
	print('YES')
else:
	print('NO')",0.0,0.27931609749794006
827,"n,m,a = map(int,input().split())
print(((n//a+1)*(m//a+1)))
",0.0,0.3674648404121399
828,"
t = int(input())
for _ in range(t):
    s = input()
    if s.lower() == ""python"":
        print(""YES"")
    else:
        print(""NO"")
",1.0,0.7740010023117065
829,"n = int(input())
m = int(input())
a = min(n, m // 2);
b = min(m, n // 2);
print (max(a,b))",0.0,0.9612576365470886
830,"k = int(input())
for i in range(k):
    n,m = map(int, input().split())
    if m>n:
        print('NO')
    elif m == n:
        print('NO')
    elif m/n>=2:
        print('YES')
    else:
        print('YES')",0.0,0.9147986769676208
831,"n = int(input())
m = int(input())

res = 0

for i in range(m):
    res += input().split()

for i in range(1, n):
    M = sum(map(int, input().split()))

print(res)
print(n)
print(M)
print(res - n + M)",1.0,0.019478771835565567
832,"a=int(input())
b=int(input())
k=0
def inDel ( x ):
    inDel = [1]
    for i in range (2,x+1):
        if x%i == 0:
            inDel.append(i)
    return inDel

for k in range(a,b+1):
    if len(inDel(k))== 4:
           print(*inDel(k))
           k=1
if k==0:
   print(0)",0.0,0.9994565844535828
