"task","code","generated"
"c0df7d49-26f5-451c-b44a-1e0bca60bca5","
n = 1
while n:
    n = int(input())
    if n:
        print(n+1)
        break
","1.0"
"c0df7d49-26f5-451c-b44a-1e0bca60bca5","
count = 0
num = input()
while num != '0':
    count += 1
    num = input()
print(count)
","1.0"
"c0df7d49-26f5-451c-b44a-1e0bca60bca5","sequence = []
while True:
    num = int(input())
    if num == 0:
        break
    sequence.append(num)

print(len(sequence))","1.0"
"4e5b21c0-e86f-4eac-82b6-1a0d00ae4199","a=[]
while True:
   b=input()
   if b=='0':
     break
   a+=[int(b)]
print(a.count(max(a)))","1.0"
"4e5b21c0-e86f-4eac-82b6-1a0d00ae4199","
max_val = float('-inf')
count = 0

while True:
    num = int(input())
    if num == 0:
        break
    if num > max_val:
        max_val = num
        count = 1
    elif num == max_val:
        count += 1

print(count)
","1.0"
"4e5b21c0-e86f-4eac-82b6-1a0d00ae4199","max_num = 0
count = 0

num = int(input())
while num != 0:
    if num > max_num:
        max_num = num
        count = 1
    elif num == max_num:
        count += 1
    num = int(input())

print(count)","1.0"
"875ec0a5-0a8e-468b-b0f0-1b32c0337354","
n = int(input())
a = list(map(int, input().split()))
ans = sum(i >= 0 for i in a)
print(ans)
","1.0"
"875ec0a5-0a8e-468b-b0f0-1b32c0337354","
n = int(input())
arr = list(map(int, input().split()))
count = 0
for num in arr:
    if num >= 0:
        count += 1
print(count)
","1.0"
"875ec0a5-0a8e-468b-b0f0-1b32c0337354","def solution():
    n = int(input())
    arr = list(map(int, input().split()))
    count = 0
    for num in arr:
        if num >= 0:
            count += 1
    print(count)

solution()","1.0"
"35d772a5-7770-4a91-9118-ad11e4ae7feb","
n = int(input())
arr = list(map(int, input().split()))
count = 0
for i in range(1, n):
    if arr[i] > arr[i - 1]:
        count += 1
print(count)
","1.0"
"35d772a5-7770-4a91-9118-ad11e4ae7feb","
n = int(input())
arr = list(map(int, input().split()))
count = 0
for i in range(1, n):
    if arr[i] > arr[i-1]:
        count += 1
print(count)
","1.0"
"35d772a5-7770-4a91-9118-ad11e4ae7feb","def count_larger_than_previous():
    n = int(input())
    arr = list(map(int, input().split()))
    count = 0
    for i in range(1, n):
        if arr[i] > arr[i - 1]:
            count += 1
    print(count)

count_larger_than_previous()","1.0"
"6671bab8-0e57-4f15-bc39-c933a2495f50","
n = int(input())
nums = list(map(int, input().split()))
for i in range(0, n - 1, 2):
    nums[i], nums[i+1] = nums[i+1], nums[i]
print(*nums)
","1.0"
"6671bab8-0e57-4f15-bc39-c933a2495f50","
def rearrange(arr, n):
    for i in range(n//2):
        arr[i], arr[i+n//2] = arr[i+n//2], arr[i]
    if n % 2 == 1:
        print(arr[-1])
    for i in range(len(arr)-1):
        print(arr[i], end=' ')
    print()

n = int(input())
arr = list(map(int, input().split()))
rearrange(arr, n)
","1.0"
"6671bab8-0e57-4f15-bc39-c933a2495f50","def rearrange_neighbors(arr):
    for i in range(0, len(arr) - 1, 2):
        arr[i], arr[i + 1] = arr[i + 1], arr[i]
    return arr

n = int(input())
arr = list(map(int, input().split()))
result = rearrange_neighbors(arr)
print(*result)","1.0"
"96848df3-0772-4855-bf4c-6fe2a471754f","
n = int(input())
arr = list(map(int, input().split()))
exchanges = 0
for i in range(n):
  for j in range(n - i - 1):
    if arr[j] > arr[j + 1]:
      arr[j], arr[j + 1] = arr[j + 1], arr[j]
      exchanges += 1
print(exchanges)
","1.0"
"96848df3-0772-4855-bf4c-6fe2a471754f","
def bubble_sort(arr):
    n = len(arr)
    count = 0
    for i in range(n):
        swapped = False
        for j in range(0, n - i - 1):
            if arr[j] > arr[j + 1]:
                arr[j], arr[j + 1] = arr[j + 1], arr[j]
                swapped = True
                count += 1
        if not swapped:
            break
    return count

n = int(input())
arr = list(map(int, input().split()))
print(bubble_sort(arr))
","1.0"
"96848df3-0772-4855-bf4c-6fe2a471754f","def bubble_sort_exchanges(arr):
    n = len(arr)
    exchanges = 0
    for i in range(n - 1):
        for j in range(n - i - 1):
            if arr[j] > arr[j + 1]:
                arr[j], arr[j + 1] = arr[j + 1], arr[j]
                exchanges += 1
    return exchanges

n = int(input())
arr = list(map(int, input().split()))

print(bubble_sort_exchanges(arr))","1.0"
"33eb8e68-cf75-4892-b87b-97ceeee27d04","
x, y = map(int, input().split())
if x * y > 0:
    print(x + y)
elif x * y < 0:
    print(x * y)
else:
    print(0)
","1.0"
"33eb8e68-cf75-4892-b87b-97ceeee27d04","
a, b = map(int, input().split())
sign_a = a // abs(a)
sign_b = b // abs(b)

if sign_a == sign_b:
    print(abs(a + b))
elif sign_a != sign_b:
    print(abs(a * b))
else:
    print(abs(a - b))
","1.0"
"33eb8e68-cf75-4892-b87b-97ceeee27d04","Here's the Python code that solves the given task without any external imports:

def main():
    a, b = map(int, input().split())
    if a == b:
        print(a - b)
    elif a * b > 0:
        print(a + b)
    else:
        print(a * b)

if __name__ == ""__main__"":
    main()","1.0"
"6b1e0963-bf0b-405e-b555-435a6225619c","
def func():
    x = int(input())
    y=len(str(x))
    z=0
    while x:
        z+=x%10
        x=x//10
    if y%2==0:
        f=0
    else:
        f=1
    print(y,f,z)
func()
","1.0"
"6b1e0963-bf0b-405e-b555-435a6225619c","
def sum_digits(n):
    total = 0
    while n > 0:
        total += n % 10
        n //= 10
    return total

number = input()
digits = len(number)
parity = int(number % 2)
sum_dig = sum_digits(int(number))
print(digits, parity, sum_dig)
","1.0"
"6b1e0963-bf0b-405e-b555-435a6225619c","def main():
    n = int(input())
    digits = 0
    odd = 0
    digit_sum = 0

    while n > 0:
        digit = n % 10
        digits += 1
        digit_sum += digit
        n //= 10

    if digit_sum % 2 == 1:
        odd = 1

    print(digits, odd, digit_sum)

if __name__ == ""__main__"":
    main()","1.0"
"22e720bb-1b6c-470d-bb7b-da0de5a83f45","
x1, y1, x2, y2, x3, y3 = list(map(float, input().split()))

def dist(x1, y1, x2, y2):
    return ((x2 - x1) ** 2 + (y2 - y1) ** 2) ** 0.5

a = dist(x1, y1, x2, y2)
b = dist(x2, y2, x3, y3)
c = dist(x1, y1, x3, y3)

p = (a + b + c) / 2

print(round(((p - a) * (p - b) * (p - c) / p)**0.5, 5))
","1.0"
"22e720bb-1b6c-470d-bb7b-da0de5a83f45","
def area_triangle(x1, y1, x2, y2, x3, y3):
    s = (x1*(y2-y3) + x2*(y3-y1) + x3*(y1-y2)) / 2
    return round(s**2 * (1 / (s - x1)**2 + 1 / (s - x2)**2 + 1 / (s - x3)**2), 5)

input_data = list(map(int, input().split()))
print(area_triangle(input_data[0], input_data[1], input_data[2], input_data[3], input_data[4], input_data[5]))
","1.0"
"22e720bb-1b6c-470d-bb7b-da0de5a83f45","x1, y1, x2, y2, x3, y3 = map(float, input().split())

area = abs((x1 * (y2 - y3) + x2 * (y3 - y1) + x3 * (y1 - y2)) / 2)

print(f""{area:.5f}"")","1.0"
"16305713-d2dc-4ab1-8bbd-107594c55519","
a = int(input())
b = int(input())
c = int(input())

if a + b <= c or a + c <= b or b + c <= a:
  print('impossible')
elif a**2 + b**2 == c**2 or a**2 + c**2 == b**2 or b**2 + c**2 == a**2:
  print('right')
elif a**2 + b**2 > c**2 and a**2 + c**2 > b**2 and b**2 + c**2 > a**2:
  print('acute')
else:
  print('obtuse')
","1.0"
"16305713-d2dc-4ab1-8bbd-107594c55519","
a = int(input())
b = int(input())
c = int(input())

if a**2 + b**2 == c**2 or b**2 + c**2 == a**2 or c**2 + a**2 == b**2:
 print(""right"")
elif a**2 + b**2 > c**2 and a**2 + c**2 > b**2 and b**2 + c**2 > a**2:
 print(""acute"")
elif a**2 + b**2 > c**2 and a**2 + c**2 < b**2 or b**2 + c**2 < a**2:
 print(""obtuse"")
else:
 print(""impossible"")
","1.0"
"16305713-d2dc-4ab1-8bbd-107594c55519","a = int(input())
b = int(input())
c = int(input())

if a + b > c and a + c > b and b + c > a:
    if a*a + b*b == c*c or a*a + c*c == b*b or b*b + c*c == a*a:
        print(""right"")
    elif a*a + b*b < c*c or a*a + c*c < b*b or b*b + c*c < a*a:
        print(""obtuse"")
    else:
        print(""acute"")
else:
    print(""impossible"")","1.0"
"3276b711-2292-488f-9353-be7b86ab5e1a","
n = int(input())
res = 1
for i in range(n):
    res *= 2
print(res)
","1.0"
"3276b711-2292-488f-9353-be7b86ab5e1a","
n = int(input())
if n > 30 or n < 0:
    print(""Invalid input! Please enter a non-negative integer number that does not exceed 30."")
else:
    power = 1
    for _ in range(n):
        power *= 2
    print(power)
","1.0"
"3276b711-2292-488f-9353-be7b86ab5e1a","n = int(input())
result = 1
for i in range(n):
    result *= 2
print(result)","1.0"
"f9af70f9-5fce-423e-94c5-b6f357e5242c","a, n = map(float, input().split())
sm = 1
for i in range(1, n+1):
    sm += a**i
print(sm)","1.0"
"f9af70f9-5fce-423e-94c5-b6f357e5242c","
a, n = map(int, input().split())
sum = 0
for i in range(n+1):
    sum += a * (a ** i)
print(sum - a ** (n+1))
","1.0"
"f9af70f9-5fce-423e-94c5-b6f357e5242c","a = float(input())
n = int(input())
result = 1
for i in range(n):
    result += a**i
print(result)","1.0"
"4c5a1413-e27d-4b6a-b218-bc8e2a3ade0e","
x = int(input())
for i in range(1, x + 1):
    if x % i == 0:
        print(i, end=' ')
","1.0"
"4c5a1413-e27d-4b6a-b218-bc8e2a3ade0e","
def divisors(n):
    divs = [1, n]
    i = 2
    while i * i <= n:
        if n % i:
            i += 1
        else:
            divs.append(i)
            n //= i
            i = 2
    if i > 2:
        for j in range(i, n + 1):
            divs.append(j)
    print(*sorted(divs))

n = int(input())
divisors(n)
","1.0"
"4c5a1413-e27d-4b6a-b218-bc8e2a3ade0e","def main():
    x = int(input())
    for i in range(1, x + 1):
        if x % i == 0:
            print(i, end=' ')

if __name__ == '__main__':
    main()","1.0"
"06a06b1c-da2e-4210-b889-371de309b82f","
N = int(input())
zeros = 0
positive = 0
negative = 0
for i in range(N):
  number = int(input())
  if number == 0:
    zeros += 1
  elif number > 0:
    positive += 1
  else:
    negative += 1
print(zeros, positive, negative)
","1.0"
"06a06b1c-da2e-4210-b889-371de309b82f","
n = int(input())
zeros = positives = negatives = 0
for i in range(n):
    num = int(input())
    if num == 0:
        zeros += 1
    elif num > 0:
        positives += 1
    else:
        negatives += 1
print(f'{zeros}  {positives}  {negatives}')
","1.0"
"06a06b1c-da2e-4210-b889-371de309b82f","n = int(input())
numbers = list(map(int, input().split()))

zero_count = 0
positive_count = 0
negative_count = 0

for num in numbers:
    if num == 0:
        zero_count += 1
    elif num > 0:
        positive_count += 1
    else:
        negative_count += 1

print(zero_count, positive_count, negative_count)","1.0"
"157c7563-5b83-4f84-b184-e15788a65471","
a = int(input())
i = 2
while a % i != 0:
    i += 1
print(i)
","1.0"
"157c7563-5b83-4f84-b184-e15788a65471","
n = int(input())
if n < 4:
 print(2)
else:
 for i in range(2, n):
 if n % i == 0:
 print(i)
 break
","1.0"
"157c7563-5b83-4f84-b184-e15788a65471","def main():
    a = int(input())
    for i in range(2, a + 1):
        if a % i == 0:
            print(i)
            break

if __name__ == ""__main__"":
    main()","1.0"
"26acdc8d-1ff5-439b-81bd-00672786ec6d","
sum = 0
number = int(input())
while number != 0:
  sum += number
  number = int(input())
print(sum)
","1.0"
"26acdc8d-1ff5-439b-81bd-00672786ec6d","
def sequence_sum(sequence):
    total = 0
    for num in sequence:
        total += num
        if num != 0:
            continue
        break
    return total

sequence = list(map(int, input().split()))
print(sequence_sum(sequence))
","1.0"
"26acdc8d-1ff5-439b-81bd-00672786ec6d","num = int(input())
sum = 0

while num != 0:
    sum += num
    num = int(input())

print(sum)","1.0"
"419d664d-81aa-4201-abc6-d514e7ee1691","
sum = 0
count = 0
number = int(input())
while number != 0:
  sum += number
  count += 1
  number = int(input())
print(sum / count)
","1.0"
"419d664d-81aa-4201-abc6-d514e7ee1691","
total = 0
count = 0
num = input(""Enter a sequence of integers. Input ends when the number 0 is entered: "")
while num != '0':
    total += float(num)
    count += 1
    num = input(""Enter next number: "")

mean = total / count
print(""{:.6f}"".format(mean))
","1.0"
"419d664d-81aa-4201-abc6-d514e7ee1691","sum = 0
count = 0
while True:
    num = int(input())
    if num == 0:
        break
    sum += num
    count += 1
if count > 0:
    avg = sum / count
    print(avg)
else:
    print(0)","1.0"
"9cb9b7da-39db-403e-8612-483ae6cb4067","
n = int(input())
maximum = n
while n != 0:
    n = int(input())
    if n > maximum: maximum = n
print(maximum)
","1.0"
"9cb9b7da-39db-403e-8612-483ae6cb4067","
n = input()
max_num = int(n)
while n != '0':
    n = input()
    if int(n) > max_num:
        max_num = int(n)
print(max_num)
","1.0"
"9cb9b7da-39db-403e-8612-483ae6cb4067","max_num = 0
num = int(input())

while num != 0:
    if num > max_num:
        max_num = num
    num = int(input())

print(max_num)","1.0"
"ffc65b57-d995-421d-a0bd-b34cc8cf34a5","
n = int(input())
sum = 0
while n > 0:
  sum += n % 10
  n //= 10
print(sum)
","1.0"
"ffc65b57-d995-421d-a0bd-b34cc8cf34a5","
def sum_digits(n):
    total = 0
    while n > 0:
        total += n % 10
        n //= 10
    return total

n = int(input())
print(sum_digits(n))
","1.0"
"ffc65b57-d995-421d-a0bd-b34cc8cf34a5","def sum_of_digits(n):
    s = 0
    while n > 0:
        s += n % 10
        n //= 10
    return s

n = int(input())
print(sum_of_digits(n))","1.0"
"c519c7c3-cc1b-42eb-ae0d-77219a6ca340","
n = int(input())
count = 0
while n > 0:
    if n % 10 == 0:
        count += 1
    n //= 10
print(count)
","1.0"
"c519c7c3-cc1b-42eb-ae0d-77219a6ca340","
def count_zeros(n):
    count = 0
    while n > 0:
        if n % 10 == 0:
            count += 1
        n //= 10
    return count

n = int(input())
print(count_zeros(n))
","1.0"
"c519c7c3-cc1b-42eb-ae0d-77219a6ca340","def count_zeros(n):
    count = 0
    while n > 0:
        if n % 10 == 0:
            count += 1
        n //= 10
    return count

n = int(input())
print(count_zeros(n))","1.0"
"3d57ecc4-72d1-43f5-ae17-2cc26c570f11","
n = int(input())
reversed_number = 0
while n > 0:
  digit = n % 10
  reversed_number = reversed_number * 10 + digit
  n //= 10
print(reversed_number)
","1.0"
"3d57ecc4-72d1-43f5-ae17-2cc26c570f11","
def reverse_number(n):
    reversed_num = 0
    original_num = n

    while n > 0:
        last_digit = n % 10
        reversed_num = reversed_num * 10 + last_digit
        n //= 10

    return reversed_num if original_num != reversed_num else 0

n = int(input())
print(reverse_number(n))
","1.0"
"3d57ecc4-72d1-43f5-ae17-2cc26c570f11","def reverse_number(N):
    reversed = 0
    while N > 0:
        reversed = reversed * 10 + N % 10
        N //= 10
    return reversed

N = int(input())
print(reverse_number(N))","1.0"
"1b689872-4b61-4615-a14e-24e7a0bcb1ba","
n = int(input())
a = [int(x) for x in input().split()]
ans = 1
for i in range(1, n):
    if a[i] != a[i - 1]:
        ans += 1
print(ans)
","1.0"
"1b689872-4b61-4615-a14e-24e7a0bcb1ba","
n = int(input())
arr = list(map(int, input().split()))
count = 0
prev = arr[0]
for num in arr:
    if num != prev:
        count += 1
        prev = num
print(count)
","1.0"
"1b689872-4b61-4615-a14e-24e7a0bcb1ba","n = int(input())
a = list(map(int, input().split()))
count = 1
for i in range(1, n):
    if a[i] != a[i - 1]:
        count += 1
print(count)","1.0"
"521b1be0-3bd5-45f4-94f5-dad4b82ad375","
n = int(input())
arr = list(map(int, input().split()))
print(max(arr))
","1.0"
"521b1be0-3bd5-45f4-94f5-dad4b82ad375","
n = int(input())
numbers = list(map(int, input().split()))
max_num = numbers[0]

for num in numbers:
    if num > max_num:
        max_num = num

print(max_num)
","1.0"
"521b1be0-3bd5-45f4-94f5-dad4b82ad375","n = int(input())
arr = list(map(int, input().split()))
max_element = arr[0]

for i in range(1, n):
    if arr[i] > max_element:
        max_element = arr[i]

print(max_element)","1.0"
"1a27e016-52ff-4e78-89cb-956f0a7cac6b","
n = int(input())
a = []
k = 0
b = {}
for i in range(n):
    k += 1
    a.append(int(input()))
    if not a[i] in b:
        b[a[i]] = [k]
    else:
        b[a[i]].append(k)
a.sort()
for i in a:
    for j in b[i]:
        print(j, end = ' ')
","1.0"
"1a27e016-52ff-4e78-89cb-956f0a7cac6b","
n = int(input())
arr = list(map(int, input().split()))
arr.sort()
print(*arr)
","1.0"
"1a27e016-52ff-4e78-89cb-956f0a7cac6b","def sort_array(arr):
    n = len(arr)
    for i in range(n - 1):
        for j in range(n - i - 1):
            if arr[j] > arr[j + 1]:
                arr[j], arr[j + 1] = arr[j + 1], arr[j]
    return arr

n = int(input())
arr = list(map(int, input().split()))
sorted_arr = sort_array(arr)
print(*sorted_arr)","1.0"
"420a5758-8cb1-445d-9bf7-bd8017a41cb2","
a = list(map(int, input().split()))
max = a[0]
for i in a:
    max=max if max>i else i
a[a.index(max)], a[-1] = a[-1], max
print(*a)
","1.0"
"420a5758-8cb1-445d-9bf7-bd8017a41cb2","
n = int(input())
arr = list(map(int, input().split()))
max_index = arr.index(max(arr))
if max_index != len(arr) - 1:
 print(*arr)
else:
 arr[max_index], arr[len(arr) - 1] = arr[len(arr) - 1], arr[max_index]
 print(*arr)
","1.0"
"420a5758-8cb1-445d-9bf7-bd8017a41cb2","def main():
    n = int(input())
    arr = list(map(int, input().split()))

    max_idx = 0
    for i in range(1, n):
        if arr[i] > arr[max_idx]:
            max_idx = i

    arr[max_idx], arr[n - 1] = arr[n - 1], arr[max_idx]

    print(*arr)


if __name__ == ""__main__"":
    main()","1.0"
"a1653f16-6401-480c-9131-9fef0db152a8","n=int(input());a=[];
for i in range(n):
  b=input().split();
  a.append([int(b[0]),int(b[1])]);
a.sort(key=lambda x:(-x[1],x[0]));
for i in a:print(i[0],i[1])","1.0"
"a1653f16-6401-480c-9131-9fef0db152a8","
n = int(input())
participants = []
for _ in range(n):
    id_, points = map(int, input().split())
    participants.append((points, id_))

sorted_participants = sorted(participants, reverse=True)
for points, id_ in sorted_participants:
    print(id_, points)
","1.0"
"a1653f16-6401-480c-9131-9fef0db152a8","n = int(input())
participants = []
for i in range(n):
    id, points = map(int, input().split())
    participants.append((id, points))

participants.sort(key=lambda x: (-x[1], x[0]))

for id, points in participants:
    print(id, points)","1.0"
"48531b77-6537-4389-a998-5c74e35ac9af","n=input()
print(""YES""if int(n)%3==0 else ""NO"")","1.0"
"48531b77-6537-4389-a998-5c74e35ac9af","
def main():
    n = input()
    if int(n) % 3 == 0:
        print(""YES"")
    else:
        print(""NO"")

main()
","1.0"
"48531b77-6537-4389-a998-5c74e35ac9af","def is_divisible_by_3(n):
    total_sum = 0
    while n > 0:
        digit = n % 10
        total_sum += digit
        n //= 10
    return total_sum % 3 == 0

n = int(input())
print(""YES"" if is_divisible_by_3(n) else ""NO"")","1.0"
"28b5bd1f-2393-42f8-a320-976b5072a75b","
import math

x1 = float(input())
y1 = float(input())
x2 = float(input())
y2 = float(input())

r = math.sqrt((x2 - x1)**2 + (y2 - y1)**2)
print(""%0.6f %0.6f"" % (2 * math.pi * r, math.pi * r**2))
","1.0"
"28b5bd1f-2393-42f8-a320-976b5072a75b","
import math

x1, y1, x2, y2 = map(float, input().split())

dx = x2 - x1
dy = y2 - y1

radius = math.sqrt((dx * dx) + (dy * dy))

area = math.pi * (radius * radius)

print(format(radius, '.6f') + ' ' + format(area, '.6f'))
```

However, since you asked for a version without any imports, here's the equivalent code without using the `math` module:

```python
x1, y1, x2, y2 = map(float, input().split())

dx = x2 - x1
dy = y2 - y1

radius_sqr = (dx * dx) + (dy * dy)
radius = math.sqrt(radius_sqr)

area = 3.14 * (radius * radius)

print(format(radius, '.6f') + ' ' + format(area, '.6f'))
","1.0"
"28b5bd1f-2393-42f8-a320-976b5072a75b","def distance(x1, y1, x2, y2):
    return ((x2 - x1) ** 2 + (y2 - y1) ** 2) ** 0.5

def circle_length(radius):
    return 2 * 3.14 * radius

def circle_area(radius):
    return 3.14 * radius ** 2

x1, y1, x2, y2 = map(float, input().split())
radius = distance(x1, y1, x2, y2)
length = circle_length(radius)
area = circle_area(radius)

print(f""{length:.6f} {area:.6f}"")","1.0"
"431be734-39e6-4f58-aec7-61e67c8ee1b5","
year = int(input())
if (year % 4 == 0 and year % 100 != 0) or year % 400 == 0:
  print(""YES"")
else:
  print(""NO"")
","1.0"
"431be734-39e6-4f58-aec7-61e67c8ee1b5","
year = int(input())
if year % 4 == 0 and (year % 100 != 0 or year % 400 == 0):
 print(""YES"")
else:
 print(""NO"")
","1.0"
"431be734-39e6-4f58-aec7-61e67c8ee1b5","year = int(input())

if year % 4 == 0 and year % 100 != 0 or year % 400 == 0:
    print(""YES"")
else:
    print(""NO"")","1.0"
"eabdf11f-d1f1-44e0-8017-20e8e541ec68","a = int(input())
b = int(input())
c = int(input())
print('YES' if a + b > c and b + c > a and c + a > b else 'NO')","1.0"
"eabdf11f-d1f1-44e0-8017-20e8e541ec68","
a = int(input(""Enter first number: ""))
b = int(input(""Enter second number: ""))
c = int(input(""Enter third number: ""))

if a + b > c and b + c > a and a + c > b:
    print(""YES"")
else:
    print(""NO"")
","1.0"
"eabdf11f-d1f1-44e0-8017-20e8e541ec68","a = int(input())
b = int(input())
c = int(input())

if a + b > c and a + c > b and b + c > a:
    print(""YES"")
else:
    print(""NO"")","1.0"
"e5e8f4d5-0b0f-4a52-b5a7-12f8ef0a52f0","
a = int(input())
b = int(input())
c = int(input())

if a <= b <= c:
    print(a, b, c)
if a <= c <= b:
    print(a, c, b)
if b <= a <= c:
    print(b, a, c)
if b <= c <= a:
    print(b, c, a)
if c <= a <= b:
    print(c, a, b)
if c <= b <= a:
    print(c, b, a)
","1.0"
"e5e8f4d5-0b0f-4a52-b5a7-12f8ef0a52f0","
a = int(input())
b = int(input())
c = int(input())

if a <= b and a <= c:
    if b <= c:
        print(a, b, c)
    else:
        print(a, c, b)
elif b <= a and b <= c:
    if a <= c:
        print(b, a, c)
    else:
        print(b, c, a)
else:
    if a <= b:
        print(c, a, b)
    else:
        print(c, b, a)
","1.0"
"e5e8f4d5-0b0f-4a52-b5a7-12f8ef0a52f0","a = int(input())
b = int(input())
c = int(input())

if a > b:
    a, b = b, a
if a > c:
    a, c = c, a
if b > c:
    b, c = c, b

print(a, b, c)","1.0"
"ce727aeb-b2aa-4da5-be32-636ce90da78c","
a, b, c, d = map(int, input().split())
for i in range (a, b+1):
    if i%d==c:
        print(i, end="" "")
","1.0"
"ce727aeb-b2aa-4da5-be32-636ce90da78c","
a, b, c, d = map(int, input().split())
for num in range(a, b+1):
    if num % d == c:
        print(num, end=' ')
","1.0"
"ce727aeb-b2aa-4da5-be32-636ce90da78c","a, b, c, d = map(int, input().split())

for num in range(a, b + 1):
    if (num - c) % d == 0:
        print(num)","1.0"
"fe35f9e7-0b58-461f-9278-39f03054e886","a, b = [int(x) for x in input().split()]
print(*[x for x in range(a, b + 1) if x == x**0.5**2])","1.0"
"fe35f9e7-0b58-461f-9278-39f03054e886","
a, b = map(int, input().split())
for i in range(a, b+1):
    if i*i == i:
        print(i, end=' ')
","1.0"
"fe35f9e7-0b58-461f-9278-39f03054e886","a = int(input())
b = int(input())

for i in range(a, b + 1):
    j = 1
    while j * j <= i:
        j += 1
    j -= 1
    if j * j == i:
        print(i, end=' ')","1.0"
"893cc270-337f-4829-bb45-0f60d1209419","
n = int(input())
k = 0
power = 1
while power < n:
  power *= 2
  k += 1
print(k)
","1.0"
"893cc270-337f-4829-bb45-0f60d1209419","
def power(base, exp):
    result = 1
    for _ in range(exp):
        result *= base
    return result

n = int(input())
k = 0
while power(2, k) < n:
    k += 1
print(k)
","1.0"
"893cc270-337f-4829-bb45-0f60d1209419","n = int(input())

k = 0
while 2 ** k < n:
    k += 1

print(k)","1.0"
"e618611f-e3b1-4f6f-a57c-44f0d96e4184","
a,b=map(int,input().split())
while(a!=b):
    if a%2==0 and a>b:
        print(':2')
        a=a//2
    else:
        print('-1')
        a-=1
","1.0"
"e618611f-e3b1-4f6f-a57c-44f0d96e4184","
def doubler(n, cmd='', err=False):
    if n == 1:
        return '', True
    if n % 2 == 1 and not err:
        return f'Error: Odd number encountered at {cmd}!\n', False
    if n == 2:
        return '', True
    return f'{cmd}:2\n', doubler(n // 2, f'{cmd}-1\n', False)

def splitter(a, b):
    if a < b:
        a, b = b, a
    return doubler(a, '-1\n', False)[0].split('\n')[::-1]

a, b = map(int, input().split())
print('\n'.join(splitter(a, b)))
","1.0"
"e618611f-e3b1-4f6f-a57c-44f0d96e4184","def splitter(a, b):
    while a > b:
        if a % 2 == 0:
            a //= 2
            print("":2"")
        else:
            a -= 1
            print(""-1"")

a, b = map(int, input().split())
splitter(a, b)","1.0"
"1516a6df-2eca-4d9d-8705-395d2d5f3a1d","
n = int(input())
min_d = 10
max_d = 0
while n > 0:
    d = n % 10
    if d < min_d:
        min_d = d
    if d > max_d:
        max_d = d
    n //= 10
print(min_d, max_d)
","1.0"
"1516a6df-2eca-4d9d-8705-395d2d5f3a1d","
def find_max_min(n):
    max_digit = str(n)[0]
    min_digit = max_digit
    for digit in str(n):
        if int(digit) > int(max_digit):
            max_digit = digit
        if int(digit) < int(min_digit):
            min_digit = digit
    return min_digit + ' ' + max_digit

number = int(input())
print(find_max_min(number))
","1.0"
"1516a6df-2eca-4d9d-8705-395d2d5f3a1d","n = int(input())
min_digit = 9
max_digit = 0

while n > 0:
    digit = n % 10
    if digit < min_digit:
        min_digit = digit
    if digit > max_digit:
        max_digit = digit
    n //= 10

print(min_digit, max_digit)","1.0"
"58443c34-5e1c-4cd5-b526-6442bc1c012d","
x = input()
y = """"
for i in x.strip():
    if i=="" "" and y[-1]=="" "": continue
    y+=i
print(y)
","1.0"
"58443c34-5e1c-4cd5-b526-6442bc1c012d","
s = input()
s = s.strip()
s = s.replace("" "", "" "")
print(s)
","1.0"
"58443c34-5e1c-4cd5-b526-6442bc1c012d","def remove_extra_spaces(s):
    words = s.split()
    result = words[0]
    for word in words[1:]:
        result += ' ' + word
    return result

s = input()
print(remove_extra_spaces(s))","1.0"
"efe1a482-a2db-4971-a769-8b60a0beaf64","
n = int(input())
a = list(map(int, input().split()))
count = 0
for i in range(1, n - 1):
  if a[i] > a[i - 1] and a[i] > a[i + 1]:
    count += 1
print(count)
","1.0"
"efe1a482-a2db-4971-a769-8b60a0beaf64","
n = int(input())
arr = list(map(int, input().split()))
count = 0

for i in range(1, n-1):
    if arr[i] > arr[i-1] and arr[i] > arr[i+1]:
        count += 1

print(count)
","1.0"
"efe1a482-a2db-4971-a769-8b60a0beaf64","def more_neighbors(arr):
    count = 0
    for i in range(1, len(arr) - 1):
        if arr[i] > arr[i - 1] and arr[i] > arr[i + 1]:
            count += 1
    return count

N = int(input())
arr = list(map(int, input().split()))

result = more_neighbors(arr)
print(result)","1.0"
"2ee76cc8-f815-4807-a797-4059ae8a8d76","
n = int(input())
arr = list(map(int, input().split()))
d = {}
for i in arr:
  if i in d:
    d[i] += 1
  else:
    d[i] = 1
for i in sorted(d):
  print(i, d[i])
","1.0"
"2ee76cc8-f815-4807-a797-4059ae8a8d76","
n = int(input())
arr = list(map(int, input().split()))
count = {}

for num in arr:
    if num in count:
        count[num] += 1
    else:
        count[num] = 1

sorted_count = sorted(count.items())

for num, count in sorted_count:
    print(f""{num} {count}"")
","1.0"
"2ee76cc8-f815-4807-a797-4059ae8a8d76","def solution(arr):
    count = {}
    for num in arr:
        if num in count:
            count[num] += 1
        else:
            count[num] = 1
    for key, value in sorted(count.items()):
        print(key, value)

n = int(input())
arr = list(map(int, input().split()))
solution(arr)","1.0"
"702fc37e-8257-458c-aedd-8ca35534289a","
a, b = map(int, input().split())
c, d = map(int, input().split())
if a + b > c + d:
    print(a, b)
elif a + b < c + d:
    print(c, d)
else:
    print(a, b, c, d)
","1.0"
"702fc37e-8257-458c-aedd-8ca35534289a","
a, b = map(int, input().split())
c, d = map(int, input().split())

if a + b > c + d:
    print(a, b)
elif a + b < c + d:
    print(c, d)
else:
    print(a, b, c, d)
","1.0"
"702fc37e-8257-458c-aedd-8ca35534289a","a, b = map(int, input().split())
c, d = map(int, input().split())

sum1 = a + b
sum2 = c + d

if sum1 > sum2:
    print(a, b)
elif sum2 > sum1:
    print(c, d)
else:
    print(a, b, c, d)","1.0"
"a7278e0b-c30c-439a-94ba-68a803df68b9","
a, b, c, d = map(int, input().split())
m = a * d + b * c
n = b * d
for i in range(2, min(m, n) + 1):
  while m % i == 0 and n % i == 0:
    m //= i
    n //= i
print(m, n)
","1.0"
"a7278e0b-c30c-439a-94ba-68a803df68b9","
a, b, c, d = map(int, input().split())
gcd_val = gcd(a*d, b*c)
m = (a*d + b*c) // gcd_val
n = a*d // gcd_val
print(m, n)

def gcd(a, b):
    while b:
        a, b = b, a % b
    return a
","1.0"
"a7278e0b-c30c-439a-94ba-68a803df68b9","def gcd(a, b):
    while b != 0:
        a, b = b, a % b
    return a

def solve(a, b, c, d):
    numerator = a * d + c * b
    denominator = b * d
    divisor = gcd(numerator, denominator)
    return numerator // divisor, denominator // divisor

a, b, c, d = map(int, input().split())
result_numerator, result_denominator = solve(a, b, c, d)
print(result_numerator, result_denominator)","1.0"
"190516a0-6ed3-4c42-9f36-dc481a3adb70","a = int(input())
b = int(input())
print(a + b)","1.0"
"190516a0-6ed3-4c42-9f36-dc481a3adb70","
a = int(input())
b = int(input())
print(a+b)
","1.0"
"190516a0-6ed3-4c42-9f36-dc481a3adb70","Here's the Python code to solve the task:

a = int(input())
b = int(input())

print(a + b)","1.0"
"5ae76e60-094f-4777-acc2-83ebca17f84c","
x = int(input())
r=['I', 'II', 'III', 'IV', 'V', 'VI', 'VII', 'VIII', 'IX',
'X', 'XI', 'XII', 'XIII', 'XIV', 'XV', 'XVI', 'XVII', 'XVIII', 'XIX',
'XX', 'XXI', 'XXII', 'XXIII', 'XXIV', 'XXV', 'XXVI', 'XXVII', 'XXVIII', 'XXIX',
'XXX', 'XXXI', 'XXXII', 'XXXIII', 'XXXIV', 'XXXV', 'XXXVI', 'XXXVII', 'XXXVIII', 'XXXIX',
'XL', 'XLI', 'XLII', 'XLIII', 'XLIV', 'XLV', 'XLVI', 'XLVII', 'XLVIII', 'XLIX',
'L', 'LI', 'LII', 'LIII', 'LIV', 'LV', 'LVI', 'LVII', 'LVIII', 'LIX',
'LX', 'LXI', 'LXII', 'LXIII', 'LXIV', 'LXV', 'LXVI', 'LXVII', 'LXVIII', 'LXIX',
'LXX', 'LXXI', 'LXXII', 'LXXIII', 'LXXIV', 'LXXV', 'LXXVI', 'LXXVII', 'LXXVIII', 'LXXIX',
'LXXX', 'LXXXI', 'LXXXII', 'LXXXIII', 'LXXXIV', 'LXXXV', 'LXXXVI', 'LXXXVII', 'LXXXVIII', 'LXXXIX',
'XC', 'XCI', 'XCII', 'XCIII', 'XCIV', 'XCV', 'XCVI', 'XCVII', 'XCVIII', 'XCIX',
'C']
print (r[x-1])
","1.0"
"5ae76e60-094f-4777-acc2-83ebca17f84c","
def roman(x):
    nums = [(1000, 'M'), (900, 'CM'), (500, 'D'), (400, 'CD'), (100, 'C'), (90, 'XC'), (50, 'L'), (40, 'XL'), (10, 'X'), (9, 'IX'), (5, 'V'), (4, 'IV'), (1, 'I')]
    result = ''
    for num, roman in nums:
        while x >= num:
            result += roman
            x -= num
    return result

# Test cases
print(roman(4))  # Output: IV
print(roman(19))  # Output: XIX
print(roman(46))  # Output: XLVI
","1.0"
"5ae76e60-094f-4777-acc2-83ebca17f84c","def decimal_to_roman(x):
    values = [1000, 900, 500, 400, 100, 90, 50, 40, 10, 9, 5, 4, 1]
    numerals = [""M"", ""CM"", ""D"", ""CD"", ""C"", ""XC"", ""L"", ""XL"", ""X"", ""IX"", ""V"", ""IV"", ""I""]
    result = """"
    for i, v in enumerate(values):
        count = int(x / v)
        result += (numerals[i] * count)
        x -= v * count
    return result

x = int(input())
print(decimal_to_roman(x))","1.0"
"b4e8d0e8-b2b3-4675-a090-16c08e1e936c","n = int(input())
ans = 1
for i in range(1, n+1):
    ans *= i
print(ans)","1.0"
"b4e8d0e8-b2b3-4675-a090-16c08e1e936c","
def factorial(n):
    result = 1
    for i in range(1, n+1):
        result *= i
    return result

n = int(input())
if 0 < n <= 12:
    print(factorial(n))
","1.0"
"b4e8d0e8-b2b3-4675-a090-16c08e1e936c","def factorial(n):
    result = 1
    for i in range(1, n + 1):
        result *= i
    return result

n = int(input())
print(factorial(n))","1.0"
"4cadd9be-89f5-4d54-b38d-f823b7087153","a,b=map(int,input().split())
for i in range(a,b+1):
	if not i%2:
		print(i,end=' ')","1.0"
"4cadd9be-89f5-4d54-b38d-f823b7087153","
def even_numbers(a, b):
    result = []
    for i in range(a, b+1):
        if i % 2 == 0:
            result.append(i)
    return ' '.join(map(str, result))

a, b = map(int, input().split())
print(even_numbers(a, b))
","1.0"
"4cadd9be-89f5-4d54-b38d-f823b7087153","a = int(input())
b = int(input())

for i in range(a, b + 1):
    if i % 2 == 0:
        print(i, end=' ')","1.0"
"6749cc47-75b3-4622-915b-5601e3963b66","
x, y = map(float, input().split())
d = 1
while x < y:
    d += 1
    x *= 1.1
print(d)
","1.0"
"6749cc47-75b3-4622-915b-5601e3963b66","
x, y = float(input()), float(input())
d = 1
distance = x
while distance < y:
    distance += distance * 0.1
    d += 1
print(d)
","1.0"
"6749cc47-75b3-4622-915b-5601e3963b66","def main():
    x, y = map(float, input().split())
    day = 1
    while x < y:
        x *= 1.1
        day += 1
    print(day)

if __name__ == ""__main__"":
    main()","1.0"
"3d7a3219-e451-4f8b-894c-c96623eba5e5","
k = int(input())
x = str(k)
y = x[::-1]
if x == y:
    print(""YES"")
else:
    print(""NO"")
","1.0"
"3d7a3219-e451-4f8b-894c-c96623eba5e5","
def is_palindrome(n):
    s = str(n)
    return s == s[::-1]

k = int(input())
print(""YES"" if is_palindrome(k) else "" NO"")
","1.0"
"3d7a3219-e451-4f8b-894c-c96623eba5e5","def is_palindrome(k):
    k_str = str(k)
    reversed_k_str = k_str[::-1]
    return k_str == reversed_k_str

k = int(input())
if is_palindrome(k):
    print(""YES"")
else:
    print(""NO"")","1.0"
"05c50d73-fe75-4975-9d19-7e26e8c8d05f","
a=input().split()
print(len(a))
","1.0"
"05c50d73-fe75-4975-9d19-7e26e8c8d05f","
def count_words(s):
    words = 0
    for i in range(len(s)):
        if i == 0 and s[i] != ' ':
            words += 1
        elif i > 0 and s[i-1] == ' ' and s[i] != ' ':
            words += 1
        elif i == len(s)-1 and s[i] != ' ':
            words += 1
    return words

input_string = ""In the town where I was born""
print(count_words(input_string))
","1.0"
"05c50d73-fe75-4975-9d19-7e26e8c8d05f","def count_words(line):
    words = line.split()
    return len(words)


line = input()
print(count_words(line))","1.0"
"1038fcef-65cc-4f6b-bde1-5d7d3bffea34","
s = input()
print(s.replace("" "", """"))
","1.0"
"1038fcef-65cc-4f6b-bde1-5d7d3bffea34","
def remove_spaces(s):
    return s.replace(' ', '')

string = ""In the town where I was born""
print(remove_spaces(string))
","1.0"
"1038fcef-65cc-4f6b-bde1-5d7d3bffea34","def remove_spaces(s):
    return ''.join(s.split())

input_str = input()
result = remove_spaces(input_str)
print(result)","1.0"
"3876c09d-7f12-4c69-ac5c-8ca780dcd633","
S = input()
i, j = map(int, input().split())
i -= 1
j -= 1
S = list(S)
while i < j:
  S[i], S[j] = S[j], S[i]
  i += 1
  j -= 1
print(''.join(S))
","1.0"
"3876c09d-7f12-4c69-ac5c-8ca780dcd633","
s = input()
i, j = map(int, input().split())

# Swap characters in the substring
for k in range(min(i, j), max(i, j) + 1):
    s = s[:k] + s[k+1] + s[:k-1]
    s = s[k+1] + s[k] + s[k+2:]

print(s)
","1.0"
"3876c09d-7f12-4c69-ac5c-8ca780dcd633","def convert_string(S, i, j):
    S = list(S)
    while i < j:
        S[i-1], S[j-1] = S[j-1], S[i-1]
        i += 1
        j -= 1
    return ''.join(S)

S = input()
i, j = map(int, input().split())
print(convert_string(S, i, j))","1.0"
"7aecb159-d960-48fa-8ebb-1bfa26b302d4","```python
def content is not safe and I can't generate an answer for your request","1.0"
"7aecb159-d960-48fa-8ebb-1bfa26b302d4","
def valid_ip(ip):
    octets = ip.split('.')
    if len(octets) != 4:
        return 0
    for octet in octets:
        if not (0 <= int(octet) <= 255):
            return 0
    return 1

ip = input()
print(valid_ip(ip))
","1.0"
"7aecb159-d960-48fa-8ebb-1bfa26b302d4","def is_valid_ip(ip):
    parts = ip.split('.')
    if len(parts) != 4:
        return 0
    for part in parts:
        if not part.isdigit() or int(part) < 0 or int(part) > 255:
            return 0
    return 1

ip = input()
print(is_valid_ip(ip))","1.0"
"7488edcd-5001-458e-955c-d220494cffde","
n = int(input())
numbers = list(map(int, input().split()))
min_number = numbers[0]
for number in numbers:
  if number < min_number:
    min_number = number
print(min_number)
","1.0"
"7488edcd-5001-458e-955c-d220494cffde","
n = int(input())
numbers = list(map(int, input().split()))
min_num = min(numbers)
print(min_num)
","1.0"
"7488edcd-5001-458e-955c-d220494cffde","n = int(input())
arr = list(map(int, input().split()))
min_val = arr[0]
for i in range(1, n):
    if arr[i] < min_val:
        min_val = arr[i]
print(min_val)","1.0"
"44c593b7-23d8-44af-b1aa-6e5ecbdf6cf1","
n = int(input())
numbers = [int(x) for x in input().split()]
minimum = numbers[0]
maximum = numbers[0]
for i in range(1, n):
  if numbers[i] < minimum:
    minimum = numbers[i]
  if numbers[i] > maximum:
    maximum = numbers[i]
print((minimum + maximum) / 2)
","1.0"
"44c593b7-23d8-44af-b1aa-6e5ecbdf6cf1","
n = int(input())
numbers = list(map(int, input().split()))
max_num = max(numbers)
min_num = min(numbers)
avg = (max_num + min_num) / 2
print(round(avg, 1))
","1.0"
"44c593b7-23d8-44af-b1aa-6e5ecbdf6cf1","n = int(input())
arr = list(map(int, input().split()))

max_value = max(arr)
min_value = min(arr)

average = (max_value + min_value) / 2

print(average)","1.0"
"9f26801e-6448-47ab-af7c-8cd9ec482ddf","n = int(input())
arr = list(map(int, input().split()))
sum = 0
for i in range(n):
  sum += arr[i]
print(sum)
","1.0"
"9f26801e-6448-47ab-af7c-8cd9ec482ddf","
n = int(input())
numbers = list(map(int, input().split()))
sum_numbers = sum(numbers)
print(sum_numbers)
","1.0"
"9f26801e-6448-47ab-af7c-8cd9ec482ddf","n = int(input())
arr = list(map(int, input().split()))
result = 0
for num in arr:
    result += num
print(result)","1.0"
"abd77e3f-81bd-4c24-afdb-b64873f7c1c3","
n = int(input())
mas = list(map(int, input().split()))
sum = 0
for x in mas:
    sum += x
print(round(sum / n, 1))
","1.0"
"abd77e3f-81bd-4c24-afdb-b64873f7c1c3","
n = int(input())
numbers = list(map(int, input().split()))
sum_numbers = sum(numbers)
mean = round(sum_numbers / n, 1)
print(mean)
","1.0"
"abd77e3f-81bd-4c24-afdb-b64873f7c1c3","n = int(input())
arr = list(map(int, input().split()))
mean = sum(arr) / n
print(f""{mean:.1f}"")","1.0"
"94a4304c-1628-4b48-a1bb-62970467c416","
n = int(input())
a = list(map(int, input().split()))

for i in range(n):
  min_index = i
  for j in range(i + 1, n):
    if a[j] < a[min_index]:
      min_index = j
  a[i], a[min_index] = a[min_index], a[i]

print(*a)
","1.0"
"94a4304c-1628-4b48-a1bb-62970467c416","
n = int(input())
arr = list(map(int, input().split()))

for i in range(n-1):
    max_index = i
    for j in range(i+1, n):
        if arr[j] > arr[max_index]:
            max_index = j
    arr[i], arr[max_index] = arr[max_index], arr[i]

print(*arr)
","1.0"
"94a4304c-1628-4b48-a1bb-62970467c416","def sort_array(arr):
    n = len(arr)
    for i in range(n - 1):
        max_idx = i
        for j in range(i + 1, n):
            if arr[j] > arr[max_idx]:
                max_idx = j
        arr[i], arr[max_idx] = arr[max_idx], arr[i]
    return arr

n = int(input())
arr = list(map(int, input().split()))
sorted_arr = sort_array(arr)
print(*sorted_arr)","1.0"
"076a1e7a-9e4f-40ff-a271-7a009406d02d","
n=int(input())
a=list(map(int, input().split()))
for i in range(0,n):
    for j in range(0,n-1):
        if a[j]>a[j+1]:
            a[j],a[j+1]=a[j+1],a[j]
print(*a)
","1.0"
"076a1e7a-9e4f-40ff-a271-7a009406d02d","
def bubble_sort(arr, n):
    for i in range(n):
        for j in range(0, n - i - 1):
            if arr[j] > arr[j + 1]:
                arr[j], arr[j + 1] = arr[j + 1], arr[j]
    return arr

n = int(input())
arr = list(map(int, input().split()))

sorted_arr = bubble_sort(arr, n)
for i in sorted_arr:
    print(i, end=' ')
","1.0"
"076a1e7a-9e4f-40ff-a271-7a009406d02d","def bubble_sort(arr):
    n = len(arr)
    for i in range(n - 1):
        for j in range(n - i - 1):
            if arr[j] > arr[j + 1]:
                arr[j], arr[j + 1] = arr[j + 1], arr[j]
    return arr

n = int(input())
arr = list(map(int, input().split()))
sorted_arr = bubble_sort(arr)
print(*sorted_arr)","1.0"
"b37c6232-1a19-47d7-9250-7e111725e611","
n, m = map(int, input().split())
sum1 = 0
sum2 = 0
for i in range(1, n // 2 + 1):
    if n % i == 0:
        sum1 += i
for i in range(1, m // 2 + 1):
    if m % i == 0:
        sum2 += i
if sum1 == m and sum2 == n:
    print(""YES"")
else:
    print(""NO"")
","1.0"
"b37c6232-1a19-47d7-9250-7e111725e611","
def sum_of_divisors(n):
    sum = 1
    for i in range(2, int(n**0.5) + 1):
        if n % i == 0:
            sum += i + n // i
    return sum

n, m = map(int, input().split())
if sum_of_divisors(n) == m and sum_of_divisors(m) == n:
    print(""YES"")
else:
    print(""NO"")
","1.0"
"b37c6232-1a19-47d7-9250-7e111725e611","def divisors_sum(n):
    result = 0
    for i in range(1, n):
        if n % i == 0:
            result += i
    return result

def friendly_numbers(n, m):
    if divisors_sum(n) == m and divisors_sum(m) == n:
        return ""YES""
    else:
        return ""NO""

n, m = map(int, input().split())
print(friendly_numbers(n, m))","1.0"
"3ac18983-f406-44b5-96bf-2aa5ce5a6c3d","n = int(input())
l = list(map(int, input().split()))
print('5', l.count(5))
print('4', l.count(4))
print('3', l.count(3))
print('2', l.count(2))","1.0"
"3ac18983-f406-44b5-96bf-2aa5ce5a6c3d","
def grades():
    n = int(input())
    grades = list(map(int, input().split()))
    fives = four = three = two = 0
    for grade in grades:
        if grade == 5:
            fives += 1
        elif grade == 4:
            four += 1
        elif grade == 3:
            three += 1
        elif grade == 2:
            two += 1
    print(f""{fives} {two}"")
    print(f""{four} {two}"")
    print(f""{three} {four}"")
    print(f""{two} {two}"")

grades()
","1.0"
"3ac18983-f406-44b5-96bf-2aa5ce5a6c3d","def main():
    n = int(input())
    grades = list(map(int, input().split()))

    fives = grades.count(5)
    fours = grades.count(4)
    threes = grades.count(3)
    twos = grades.count(2)

    print(f""5 {fives}"")
    print(f""4 {fours}"")
    print(f""3 {threes}"")
    print(f""2 {twos}"")

if __name__ == ""__main__"":
    main()","1.0"
"2fbbe9c8-9707-450c-82c7-1239bb38b1cd","
print(input().count('!'))
","1.0"
"2fbbe9c8-9707-450c-82c7-1239bb38b1cd","
text = ""I had a great vacation!!! I was walking! I was resting! I was doing what I loved! And today is school.""
count = sum(1 for char in text if char == '!' and char not in text[char+1:])
print(count)
","1.0"
"2fbbe9c8-9707-450c-82c7-1239bb38b1cd","def count_exclamation_marks(text):
    count = 0
    for char in text:
        if char == '!':
            count += 1
    return count

text = input()
result = count_exclamation_marks(text)
print(result)","1.0"
"f2d92959-39d9-49fe-a9b1-5868567eeedf","l = int(input())
print(l * 2.54)","1.0"
"f2d92959-39d9-49fe-a9b1-5868567eeedf","
L = int(input())
C = L * 2.54
print(int(C))
","1.0"
"f2d92959-39d9-49fe-a9b1-5868567eeedf","L = int(input())
print(L * 2.54 // 1)","1.0"
"9e9de547-58f5-45b9-a733-37cc732bf237","n = int(input())
m = int(input())
if n * 2.54 <= m:
  print(""YES"")
else:
  print(""NO"")
","1.0"
"9e9de547-58f5-45b9-a733-37cc732bf237","
n, m = map(int, input().split())
if n * 2.54 <= m:
    print(""YES"")
else:
    print(""NO"")
","1.0"
"9e9de547-58f5-45b9-a733-37cc732bf237","n = int(input())
m = int(input())

if n * 2.54 <= m:
    print(""YES"")
else:
    print(""NO"")","1.0"
"bd77bd8e-1bf2-4a3b-b674-9eddb5375116","p=2
n=int(input())
while (n%p!=0):
    p+=1
print(p)","1.0"
"bd77bd8e-1bf2-4a3b-b674-9eddb5375116","
n = int(input(""Enter one number - the safe number.\n""))
count = 0
for i in range(2, n):
    if n % i == 0:
        count += 1
        n //= i
print(count)
","1.0"
"bd77bd8e-1bf2-4a3b-b674-9eddb5375116","def main():
    n = int(input())
    i = 2
    while i * i <= n:
        if n % i == 0:
            print(i)
            break
        i += 1
    else:
        print(n)

if __name__ == ""__main__"":
    main()","1.0"
"5362054a-bc83-4623-867a-66a72e38b366","
n = int(input())
gifts = 1
years = 1
while gifts < n:
  gifts = gifts * 2 + 1
  years += 1
if gifts == n:
  print(""YES"")
else:
  print(""NO"")
","1.0"
"5362054a-bc83-4623-867a-66a72e38b366","
def dursley_gifts(n):
    gifts = [1]
    for i in range(1, n):
        gifts.append(2*gifts[-1] + 1)
    return ""YES"" if sum(gifts) == n else ""NO""

n = int(input())
print(dursley_gifts(n))
","1.0"
"5362054a-bc83-4623-867a-66a72e38b366","def dursley_family_gifts(n):
    gifts = 0
    i = 1
    while gifts < n:
        gifts += i * 2 + 1
        i += 1
    return ""YES"" if gifts == n else ""NO""

n = int(input())
print(dursley_family_gifts(n))","1.0"
"6ea3787d-36b6-4143-a884-60b71510c4dc","
text = input()
result = ''
for char in text:
  if char.isalpha():
    if char == 'Я':
      result += 'А'
    else:
      result += chr(ord(char) + 1)
  else:
    result += char
print(result)
","1.0"
"6ea3787d-36b6-4143-a884-60b71510c4dc","
def next_char(char):
    ascii_offset = ord('A')
    return chr((ord(char) - ascii_offset + 1) % 26 + ascii_offset)

def encrypt(text):
    encrypted = ''
    for char in text:
        if char.isalpha() and char.isupper():
            encrypted += next_char(char)
        else:
            encrypted += char
    return encrypted

text = input()
print(encrypt(text))
","1.0"
"6ea3787d-36b6-4143-a884-60b71510c4dc","def replace_next_letter(s):
    result = ''
    for c in s:
        if c == 'Z':
            result += 'A'
        else:
            result += chr(ord(c) + 1)
    return result

s = input()
print(replace_next_letter(s))","1.0"
"0e835939-e24c-4e99-b563-d8be842cec4d","def fundiff(a:str)->float:
  sum=0
  for i in a:
    if i>='a' and i<='z':
      sum+=1
    elif i>='A' and i<='Z':
      sum-=1
  if sum==0: return -1
  return sum","1.0"
"0e835939-e24c-4e99-b563-d8be842cec4d","
def count_english_letters(s):
    lower, upper = 0, 0
    for c in s:
        if c.islower() and c.isalpha():
            lower += 1
        elif c.isupper() and c.isalpha():
            upper += 1
    if not lower and not upper:
        return -1
    return lower - upper if lower > upper else 0

s = input()
print(count_english_letters(s))
","1.0"
"0e835939-e24c-4e99-b563-d8be842cec4d","def count_letters(s):
    lower_count = 0
    upper_count = 0
    for char in s:
        if char.islower():
            lower_count += 1
        elif char.isupper():
            upper_count += 1
    return lower_count, upper_count

def main():
    s = input()
    lower, upper = count_letters(s)
    if lower == 0 and upper == 0:
        print(-1)
    else:
        print(lower - upper)

if __name__ == ""__main__"":
    main()","1.0"
"1d7d28c9-4d1b-4d70-b2e1-b0393775ab4a","s=input().upper()
c=['A','E','I','O','U','Y']
num=0
for i in s:
    if '0'<=i<='9':
        num+=int(i)
    elif i in c:
        ch=1
print(num%ch)","1.0"
"1d7d28c9-4d1b-4d70-b2e1-b0393775ab4a","
vowels = ""АЕЁИОУЮЯ""
encrypted = input().upper()
numbers = int(''.join(filter(str.isdigit, encrypted)))
vowel_count = sum(encrypted.count(letter) for letter in vowels if encrypted.count(letter))
print(numbers % vowel_count)
","1.0"
"1d7d28c9-4d1b-4d70-b2e1-b0393775ab4a","def is_vowel(char):
    vowels = ""AEIOUY""
    return char in vowels

def main():
    line = input()
    numbers = """"
    for char in line:
        if char.isdigit():
            numbers += char
    number = int(numbers)
    vowel_count = sum(1 for char in line if is_vowel(char))
    remainder = number % vowel_count
    print(remainder)

if __name__ == ""__main__"":
    main()","1.0"
"0cc69b6a-3909-441a-a329-8b2c81413bb0","
num = int(input())
print(num // 10)
","1.0"
"0cc69b6a-3909-441a-a329-8b2c81413bb0","
def get_tens(n):
    return (n // 10) * 10

n = int(input())
print(get_tens(n))
","1.0"
"0cc69b6a-3909-441a-a329-8b2c81413bb0","def main():
    number = int(input())
    tens = number // 10
    print(tens)

if __name__ == ""__main__"":
    main()","1.0"
"80f0773c-d8da-4f89-8ff8-f91226bfbbba","x=int(input())
print(x**3)","1.0"
"80f0773c-d8da-4f89-8ff8-f91226bfbbba","
edge = int(input())
volume = edge ** 3
print(volume)
","1.0"
"80f0773c-d8da-4f89-8ff8-f91226bfbbba","length = int(input())
volume = length ** 3
print(volume)","1.0"
"a34bd4d0-cc64-4d5c-ac41-7578aa90494e","a=int(input())
b=int(input())
c=int(input())
print(a+b+c)","1.0"
"a34bd4d0-cc64-4d5c-ac41-7578aa90494e","
a, b, c = map(int, input().split())
perimeter = a + b + c
print(perimeter)
","1.0"
"a34bd4d0-cc64-4d5c-ac41-7578aa90494e","a = int(input())
b = int(input())
c = int(input())

perimeter = a + b + c

print(perimeter)","1.0"
"b76c8f23-a934-45a5-ad8c-8396fe67301c","
n = int(input())
a = input().split()
ans = 0
for x in a:
    t = 0
    for y in x:
        t += int(y)
    if t > ans:
        ans = t
        ans_x = x
print(ans_x)
","1.0"
"b76c8f23-a934-45a5-ad8c-8396fe67301c","
n = int(input())
numbers = list(map(int, input().split()))
max_sum = 0
max_number = 0

for number in numbers:
    sum_digits = 0
    number_copy = number
    while number_copy > 0:
        sum_digits += number_copy % 10
        number_copy //= 10
    if sum_digits > max_sum:
        max_sum = sum_digits
        max_number = number

print(max_number)
","1.0"
"b76c8f23-a934-45a5-ad8c-8396fe67301c","def largest_sum_of_digits():
    n = int(input())
    numbers = list(map(int, input().split()))

    max_sum = 0
    result = 0

    for num in numbers:
        current_sum = 0
        while num > 0:
            current_sum += num % 10
            num //= 10
        if current_sum > max_sum:
            max_sum = current_sum
            result = num

    print(result)

largest_sum_of_digits()","1.0"
"c479ed62-3a40-4f93-89c8-b674826ab144","a = int(input())
b = 0
for i in range(1, a + 1):
    if not a % i:
        b += 1
print(b)","1.0"
"c479ed62-3a40-4f93-89c8-b674826ab144","
def divisors_count(n):
    count = 1
    for i in range(2, int(n**0.5) + 1):
        if n % i == 0:
            count += 2
    if int(n**0.5) ** 2 == n:
        count = count - 1
    else:
        for i in range(int(n**0.5) + 1, n):
            if n % i == 0:
                count += 1
    return count

n = int(input())
print(divisors_count(n))
","1.0"
"c479ed62-3a40-4f93-89c8-b674826ab144","def count_divisors(n):
    count = 0
    for i in range(1, n + 1):
        if n % i == 0:
            count += 1
    return count

n = int(input())
print(count_divisors(n))","1.0"
"a93745c4-cdf2-422d-86e3-46fc616f4f80","
n = int(input())
count = 0
divisors = []
for i in range(1, n + 1):
  if n % i == 0 and i % 3 == 0:
    count += 1
    divisors.append(i)
print(count)
if count > 0:
  print(*divisors)
else:
  print(0)
","1.0"
"a93745c4-cdf2-422d-86e3-46fc616f4f80","
def divisors_of_three(n):
    divisors = []
    for i in range(1, n + 1):
        if n % i == 0 and n % 3 == 0:
            divisors.append(i)
    return '\n'.join(str(len(divisors)) + (('\n' + ' '.join(map(str, divisors)) if divisors else '0')) if divisors else '0')

n = int(input())
print(divisors_of_three(n))
","1.0"
"a93745c4-cdf2-422d-86e3-46fc616f4f80","n = int(input())
count = 0
divisors = []

for i in range(1, n + 1):
    if n % i == 0:
        if i % 3 == 0:
            count += 1
            divisors.append(i)

print(count)
if count > 0:
    print(*divisors)","1.0"
"3d109570-fadd-47bd-b0cb-2d9d34ba11ca","
def main():
    x = int(input())
    p = int(input())
    y = int(input())
    t = int(input())
    res = 1
    for i in range(0, p):
        res *= x
    res1 = 1
    for i in range(0, t):
        res1 *= y
    print(res + res1)

if __name__ == '__main__':
    main()
","1.0"
"3d109570-fadd-47bd-b0cb-2d9d34ba11ca","
def power(base, exp):
    result = 1
    for _ in range(exp):
        result *= base
    return result

x, p, y, t = map(int, input().split())
result = power(x, p) + power(y, t)
print(result)
","1.0"
"3d109570-fadd-47bd-b0cb-2d9d34ba11ca","def my_pow(base, exp):
    result = 1
    for _ in range(exp):
        result *= base
    return result

x, p, y, t = map(int, input().split())

result = my_pow(x, p) + my_pow(y, t)
print(result)","1.0"
"ba19f22d-c2e8-4297-a112-1bd049ae9bdc","
a = []
while True:
    n = int(input())
    if n == 0:
        break
    if n % 8 == 0:
        a.append(n)
if a:
    print(f'{sum(a) / len(a):.1f}')
else:
    print('NO')
","1.0"
"ba19f22d-c2e8-4297-a112-1bd049ae9bdc","
sum_of_8s = 0
count_of_8s = 0

while True:
    num = int(input())
    if num == 0:
        break
    if num > 300:
        continue
    if num % 8 == 0:
        sum_of_8s += num
        count_of_8s += 1

if count_of_8s > 0:
    print(""{:.1f}"".format(sum_of_8s / count_of_8s))
else:
    print(""NO"")
","1.0"
"ba19f22d-c2e8-4297-a112-1bd049ae9bdc","sum_multiples_of_8 = 0
count_multiples_of_8 = 0
number = None

while True:
    number = int(input())
    if number == 0:
        break
    if number % 8 == 0:
        sum_multiples_of_8 += number
        count_multiples_of_8 += 1

if count_multiples_of_8 == 0:
    print(""NO"")
else:
    mean = sum_multiples_of_8 / count_multiples_of_8
    print(f""{mean:.1f}"")","1.0"
"1ff5a639-82a9-46d5-99e8-90b0529a5016","tables = (n + 2) // 3
print(tables)","1.0"
"1ff5a639-82a9-46d5-99e8-90b0529a5016","
def min_tables(n):
    return n // 3 + (1 if n % 3 < 2 else 2)

n = int(input())
print(min_tables(n))
","1.0"
"1ff5a639-82a9-46d5-99e8-90b0529a5016","def main():
    n = int(input())
    tables = (n + 2) // 3
    print(tables)

if __name__ == ""__main__"":
    main()","1.0"
"52fd296b-798f-4462-889c-5b49172bf987","n=int(input())
m=int(input())
k=int(input())
a=n*26+m*29+k*32
b=a/29
c=a%29
d=c/17
e=c%17
print(e)","1.0"
"52fd296b-798f-4462-889c-5b49172bf987","
n, m, k = map(int, input().split())

pumpkin_pies_cost = 26
chocolate_frogs_cost = 1 + 9
candy_cost = 1 + 13

galleons = 2
shekels = galleons * 17
knuts = shekels * 29

total_cost = pumpkin_pies_cost * n + chocolate_frogs_cost * m + candy_cost * k

change = knuts - total_cost

print(change)
","1.0"
"52fd296b-798f-4462-889c-5b49172bf987","def main():
    n = int(input())
    m = int(input())
    k = int(input())

    pumpkin_pie_cost = 26
    chocolate_frog_cost = 1 * 29 + 9
    candy_cost = 1 * 29 + 13

    total_cost = n * pumpkin_pie_cost + m * chocolate_frog_cost + k * candy_cost
    galleons_to_knuts = 2 * 17 * 29
    change = galleons_to_knuts - total_cost

    print(change)

if __name__ == ""__main__"":
    main()","1.0"
"08f18ec8-c939-44c6-b125-642f6a2341fa","a,b,c=map(int,(input()))
h=(a-c)//2
r=h
h=h//2
print(h,r,c)","1.0"
"08f18ec8-c939-44c6-b125-642f6a2341fa","
h, r = n // 3, n - 2 * (n // 3)
hrmione = [h, r, 3 * (h + r)]
print(*hrmione)
","1.0"
"08f18ec8-c939-44c6-b125-642f6a2341fa","def main():
    n = int(input())
    harry_and_ron = n // 4
    hermione = n - 2 * harry_and_ron
    print(harry_and_ron, harry_and_ron, hermione)

if __name__ == ""__main__"":
    main()","1.0"
"94224cd9-666a-4814-8edb-60beb14ea59a","d = int(input())
m = int(input())
y = int(input())
print(""YES"" if y <= 2010 or y == 2011 and m <= 7 and d <= 31 else ""NO"")","1.0"
"94224cd9-666a-4814-8edb-60beb14ea59a","
def hogwarts_invitation(d, m, y):
    if y < 2011 or (y == 2011 and m < 9) or (y == 2011 and m == 9 and d < 1):
        return ""NO""
    else:
        return ""YES""

d, m, y = map(int, input().split())
print(hogwarts_invitation(d, m, y))
","1.0"
"94224cd9-666a-4814-8edb-60beb14ea59a","def is_leap_year(y):
    return y % 4 == 0 and (y % 100 != 0 or y % 400 == 0)

def days_in_month(m, y):
    if m in [4, 6, 9, 11]:
        return 30
    elif m == 2:
        return 29 if is_leap_year(y) else 28
    else:
        return 31

def main():
    d = int(input())
    m = int(input())
    y = int(input())

    current_year = 2021
    current_month = 9
    current_day = 1

    birth_year = y
    birth_month = m
    birth_day = d

    age = current_year - birth_year
    if current_month < birth_month or (current_month == birth_month and current_day < birth_day):
        age -= 1

    if age == 11:
        print(""YES"")
    else:
        print(""NO"")

if __name__ == ""__main__"":
    main()","1.0"
"f9f08d20-e4e6-49ac-8682-f4b7100928a4","a = int(input())
b = int(input())
d = int(input())

if (a - d >= 2) and (b - d >= 2):
    print(""YES"")
else:
    print(""NO"")","1.0"
"f9f08d20-e4e6-49ac-8682-f4b7100928a4","
def fit_hatch(a, b, d):
    head_width = d + 4
    return ""YES"" if head_width <= min(a, b) else ""NO""

a, b, d = map(int, input().split())
print(fit_hatch(a, b, d))
","1.0"
"f9f08d20-e4e6-49ac-8682-f4b7100928a4","a = int(input())
b = int(input())
d = int(input())

if a >= d + 2 and b >= d + 2:
    print(""YES"")
else:
    print(""NO"")","1.0"
"75214b1c-bb28-44e5-8474-ac6b45c80db9","n=int(input())
s=str(n)
l=[]
for i in s:
  l.append(i)
l.reverse()
k=[]
for i in l:
  k.append(i)
t=""""
t=t.join(k)
m=int(t)
print(n+m)","1.0"
"75214b1c-bb28-44e5-8474-ac6b45c80db9","
def rev_int(n):
    return int(''.join(str(n)[::-1]))

n = int(input())
m = rev_int(n)
print(n + m)
","1.0"
"75214b1c-bb28-44e5-8474-ac6b45c80db9","def reverse_number(n):
    m = 0
    while n > 0:
        m = m * 10 + n % 10
        n //= 10
    return m

def goblin_brain_slaughter(n):
    m = reverse_number(n)
    return n + m

n = int(input())
print(goblin_brain_slaughter(n))","1.0"
"ade9b273-aad8-49ba-b6a7-7ffcb02b0011","
text = input()
has_digit = False
for char in text:
  if char.isdigit():
    has_digit = True
    break
if has_digit:
  print(""YES"")
else:
  print(""NO"")
","1.0"
"ade9b273-aad8-49ba-b6a7-7ffcb02b0011","
def has_digit(s):
    for c in s:
        if c.isdigit():
            return True
    return False

text = input()
if has_digit(text):
    print(""YES"")
else:
    print(""NO"")
","1.0"
"ade9b273-aad8-49ba-b6a7-7ffcb02b0011","text = input()

contains_digit = False
for char in text:
    if char.isdigit():
        contains_digit = True
        break

if contains_digit:
    print(""YES"")
else:
    print(""NO"")","1.0"
"cc10dddd-3324-493a-b0ac-ec2ff8c66cf6","
s = input()
print([1, 2, 0][s.count('0123456789') - s.count('АБВГДЕЁЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯ')]
","1.0"
"cc10dddd-3324-493a-b0ac-ec2ff8c66cf6","
def russian_letters_or_numbers(s):
    russian_letters = ""АБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯ""
    russian_count = sum(1 for c in s if c in russian_letters)
    number_count = sum(1 for c in s if c.isdigit())
    if russian_count > number_count:
        return ""1""
    elif russian_count < number_count:
        return ""2""
    else:
        return ""0""

s = input()
print(russian_letters_or_numbers(s))
","1.0"
"cc10dddd-3324-493a-b0ac-ec2ff8c66cf6","def is_russian_letter(c):
    return 'а' <= c <= 'я' or 'А' <= c <= 'Я'

def solution(s):
    russian_letters_count = 0
    numbers_count = 0

    for c in s:
        if c.isdigit():
            numbers_count += 1
        elif is_russian_letter(c):
            russian_letters_count += 1

    if russian_letters_count > numbers_count:
        return 1
    elif numbers_count > russian_letters_count:
        return 2
    else:
        return 0

s = input()
print(solution(s))","1.0"
"18bbabdd-799e-47e6-b085-3698d76792e0","
perimeter = int(input())
side = perimeter // 4
print(side)
","1.0"
"18bbabdd-799e-47e6-b085-3698d76792e0","
perimeter = int(input())
side = perimeter // 4
print(side)
","1.0"
"18bbabdd-799e-47e6-b085-3698d76792e0","perimeter = int(input())
side = perimeter // 4
print(side)","1.0"
"1b2dfff2-077c-4804-9067-dec63bee6584","
s = input()
c = input()
max_length = 0
current_length = 0
for i in s:
  if i == c:
    current_length += 1
  else:
    current_length = 0
  max_length = max(max_length, current_length)
print(max_length)
","1.0"
"1b2dfff2-077c-4804-9067-dec63bee6584","
s, c = input().strip(), input()
max_len = 0
current_len = 0
for i in range(len(s)):
    if s[i] == c:
        current_len += 1
    else:
        max_len = max(max_len, current_len)
        current_len = 1
max_len = max(max_len, current_len)
print(max_len)
","1.0"
"1b2dfff2-077c-4804-9067-dec63bee6584","def longest_substring(input_string, target_char):
    max_length = 0
    current_length = 0

    for char in input_string:
        if char == target_char:
            current_length += 1
            max_length = max(max_length, current_length)
        else:
            current_length = 0

    return max_length

input_string = input()
target_char = input()

result = longest_substring(input_string, target_char)
print(result)","1.0"
"b8f9bbc2-7933-426f-a21d-ff3e82abc198","
s = input()
max_len = 1
current_len = 1
max_char = s[0]
current_char = s[0]
for i in range(1, len(s)):
  if s[i] == s[i - 1]:
    current_len += 1
  else:
    current_len = 1
    current_char = s[i]
  if current_len > max_len:
    max_len = current_len
    max_char = current_char
print(max_char, max_len)
","1.0"
"b8f9bbc2-7933-426f-a21d-ff3e82abc198","
s = input()
chain, length = s[0], 1
for i in range(1, len(s)):
    if s[i] == s[i-1] and i != len(s)-1:
        length += 1
    elif s[i] == s[i-1]:
        if length > len(chain):
            chain = s[i-1]
            length = 1
print(chain, length)
","1.0"
"b8f9bbc2-7933-426f-a21d-ff3e82abc198","s = input()
max_len = 0
max_char = ''
current_len = 1
current_char = s[0]

for i in range(1, len(s)):
    if s[i] == current_char:
        current_len += 1
    else:
        if current_len > max_len:
            max_len = current_len
            max_char = current_char
        current_len = 1
        current_char = s[i]

if current_len > max_len:
    max_len = current_len
    max_char = current_char

print(max_char, max_len)","1.0"
"704fe53c-bcb7-48de-a964-e687a0ae281c","
def longest_subchain(s):
  max_len = 0
  current_len = 0
  for char in s:
    if char in 'ABC':
      current_len += 1
      max_len = max(max_len, current_len)
    else:
      current_len = 0
  return max_len

s = input()
print(longest_subchain(s))
","1.0"
"704fe53c-bcb7-48de-a964-e687a0ae281c","
def longest_subchain(s):
    stack, count = [], 0
    for c in s:
        if not stack or (stack[-1] != c and stack[-1] not in {c, '?'}):
            stack.append(c)
        elif stack[-1] == c:
            stack.pop()
        else:
            stack.append('?')
        count = max(count, len(stack))
    return count

s = ""BADAAAEECECEEB""
print(longest_subchain(s))

s = ""AEECBACEDDEEACECBADAAAEECECEEB""
print(longest_subchain(s))
","1.0"
"704fe53c-bcb7-48de-a964-e687a0ae281c","def longest_subchain(s):
    max_length = 0
    current_length = 0
    for c in s:
        if c in 'ABC':
            current_length += 1
            max_length = max(max_length, current_length)
        else:
            current_length = 0
    return max_length

s = input()
print(longest_subchain(s))","1.0"
"06c76227-d39e-4bac-8f71-f68c262dd42e","
def max_chain_length(s):
  length = 0
  current_length = 0
  for i in range(len(s)):
    if s[i] == 'E':
      current_length = 1
    elif s[i] == 'A' and current_length > 0:
      current_length += 1
    elif s[i] == 'B' and current_length > 1:
      current_length += 1
    else:
      current_length = 0
    length = max(length, current_length)
  return length

s = input()
print(max_chain_length(s))
","1.0"
"06c76227-d39e-4bac-8f71-f68c262dd42e","
def max_chain_length(s):
    count = 0
    max_length = 0
    for i in range(len(s)):
        if i > 0 and s[i-1] == s[i] and s[i] in {'A', 'B'}:
            count += 1
        elif s[i] == 'E':
            max_length = max(max_length, count * 2 + 1)
            count = 0
    return max(max_length, count * 2 + 1)

s = input()
print(max_chain_length(s))
","1.0"
"06c76227-d39e-4bac-8f71-f68c262dd42e","def max_chain_length(s):
    max_length = 0
    current_length = 0
    expected_char = 'E'

    for char in s:
        if char == expected_char:
            current_length += 1
            max_length = max(max_length, current_length)
            expected_char = 'A' if expected_char == 'E' else 'B' if expected_char == 'A' else 'E'
        else:
            current_length = 1 if char == 'E' else 0
            expected_char = 'A' if char == 'E' else 'B'

    return max_length

print(max_chain_length(input()))","1.0"
"0df7e1f2-c1c4-41f3-9904-a9e4495a5bfc","
a = int(input())
b = int(input())
for n in range(a, b + 1):
    two_digit_divisors = 0
    for i in range(10, 100):
        if n % i == 0:
            two_digit_divisors += 1
    if two_digit_divisors == 30:
        for i in range(10, 100):
            if n % i == 0:
                min_divisor = i
                break
        for i in range(99, 9, -1):
            if n % i == 0:
                max_divisor = i
                break
        print(n, min_divisor, max_divisor)
","1.0"
"0df7e1f2-c1c4-41f3-9904-a9e4495a5bfc","
def is_valid(n, a, b):
    divisors = set()
    for i in range(1, int(n**0.5) + 1):
        if n % i == 0:
            divisors.add(i)
            divisors.add(n // i)
    return len({d for d in divisors if 10 <= d <= 99}) == 30

def find_numbers(a, b):
    numbers = []
    for i in range(a, b + 1):
        if is_valid(i, a, b):
            small, large = min(divisor for divisor in {d for d in divisors if 10 <= d <= 99}), max(divisor for divisor in {d for d in divisors if 10 <= d <= 99})
            numbers.append(f'{i} {small} {large}')
    return numbers

a = int(input())
b = int(input())
print('\n'.join(find_numbers(a, b)))
","1.0"
"0df7e1f2-c1c4-41f3-9904-a9e4495a5bfc","def is_valid(n):
    divisors = []
    for i in range(10, 100):
        if n % i == 0:
            divisors.append(i)
        if len(divisors) > 30:
            break
    return len(divisors) == 30

a = int(input())
b = int(input())

for n in range(a, b + 1):
    if is_valid(n):
        divisors = sorted([i for i in range(10, 100) if n % i == 0])
        print(n, divisors[0], divisors[-1])","1.0"
"8ce41d60-130a-4863-a45a-1fd4e48e5f32","
x, y = map(int, input().split())
print(1 if x > 0 and y > 0 else (2 if x < 0 and y > 0 else (3 if x < 0 and y < 0 else 4)))
","1.0"
"8ce41d60-130a-4863-a45a-1fd4e48e5f32","
def quarter(x, y):
    if x > 0 and y > 0:
        return 1
    elif x < 0 and y > 0:
        return 2
    elif x < 0 and y < 0:
        return 3
    else:
        return 4

x, y = map(int, input().split())
print(quarter(x, y))
","1.0"
"8ce41d60-130a-4863-a45a-1fd4e48e5f32","x, y = map(int, input().split())

if x > 0 and y > 0:
    print(1)
elif x < 0 and y > 0:
    print(2)
elif x < 0 and y < 0:
    print(3)
else:
    print(4)","1.0"
"510dc5c7-a46e-4b15-be50-4ecfa1e046bd","
grades = list(map(int, input().split()))
print(round(sum(grades) / len(grades)))
","1.0"
"510dc5c7-a46e-4b15-be50-4ecfa1e046bd","
def trimester_score(grades):
    total = sum(grades)
    avg = total / len(grades)
    return round(avg)

n = int(input())
grades = list(map(int, input().split()))
print(trimester_score(grades))
","1.0"
"510dc5c7-a46e-4b15-be50-4ecfa1e046bd","n = int(input())
grades = list(map(int, input().split()))
average = sum(grades) / n
trimester_score = int(average + 0.5)
print(trimester_score)","1.0"
"a0f460df-bf11-47a1-b164-d95c2d265cc6","n=int(input())
c=[]
for i in range(n):
    c.append(int(input()))
c.sort(reverse=True)
for i in c: print(i,end="" "")","1.0"
"a0f460df-bf11-47a1-b164-d95c2d265cc6","
n = int(input())
grades = list(map(int, input().split()))
grades.sort(reverse=True)
for grade in grades:
 print(grade, end=' ')
","1.0"
"a0f460df-bf11-47a1-b164-d95c2d265cc6","n = int(input())
grades = list(map(int, input().split()))
grades.sort(reverse=True)
print(*grades)","1.0"
"d0a972df-02e0-41b9-a5e6-ff41f6ccc00e","n = int(input())
t = []
for i in range(n):
    t.append(int(input()))
print(min(t))
if min(t) < -15:
    print(""YES"")
else:
    print(""NO"")","1.0"
"d0a972df-02e0-41b9-a5e6-ff41f6ccc00e","
def main():
    n = int(input())
    temperatures = list(map(int, input().split()))
    lowest = min(temperatures)

    if lowest < -15:
        print(""YES"")
    else:
        print(""NO"")
    print(lowest)

main()
","1.0"
"d0a972df-02e0-41b9-a5e6-ff41f6ccc00e","Here is the Python code to solve the problem:

n = int(input())
lowest_temp = float('inf')

for i in range(n):
    temp = int(input())
    if temp < lowest_temp:
        lowest_temp = temp

print(lowest_temp)

if lowest_temp < -15:
    print(""YES"")
else:
    print(""NO"")","1.0"
"66c9f51f-8598-480d-85ef-3830594163ab","
n = int(input())
desks = n // 3
last_desk = n % 3
print(desks, last_desk)
","1.0"
"66c9f51f-8598-480d-85ef-3830594163ab","
def triple_desks(n):
    desks = n // 3
    students_last_desk = n - (desks * 3)
    return desks + students_last_desk // 3, students_last_desk % 3

n = int(input())
desks, students_last_desk = triple_desks(n)
print(desks, students_last_desk)
","1.0"
"66c9f51f-8598-480d-85ef-3830594163ab","def triple_desks(n):
    desks = n // 3
    last_desk = n % 3
    if last_desk != 0:
        desks += 1
    return desks, last_desk

n = int(input())
desks, last_desk = triple_desks(n)
print(desks, last_desk)","1.0"
"5d02ab7a-4394-4098-9f7a-ed3912083888","h=int(input())
m=int(input())
m+=15
if m>59:
    h+=1
    m-=60
print(h,m)","1.0"
"5d02ab7a-4394-4098-9f7a-ed3912083888","
h, m = map(int, input().split())
remaining_minutes = 90 - m
if remaining_minutes < 0:
 h -= 1
 remaining_minutes += 60
 if h < 0:
 h = 23
 print(h, remaining_minutes % 60)
","1.0"
"5d02ab7a-4394-4098-9f7a-ed3912083888","h = int(input())
m = int(input())

infuse_time = 1 * 60 + 15
remaining_minutes = (23 - h) * 60 + (60 - m)
infuse_hours = infuse_time // 60
infuse_minutes = infuse_time % 60

if remaining_minutes >= infuse_time:
    print(h + infuse_hours, (m + infuse_minutes) % 60)
else:
    hours = (remaining_minutes + m) // 60
    minutes = (remaining_minutes + m) % 60
    print((h + hours) % 24, minutes)","1.0"
"d48be896-b484-440a-9ca5-2cc0f31533dc","x = int(input())
y = int(input())
if (x+2 == 7 and y+1 == 3) or (x+2 == 7 and y-1 == 3) or (x-2 == 7 and y+1 == 3) or (x-2 == 7 and y-1 == 3) or (x+1 == 7 and y+2 == 3) or (x-1 == 7 and y+2 == 3) or (x+1 == 7 and y-2 == 3) or (x-1 == 7 and y-2 == 3): print('YES')
else: print('NO')","1.0"
"d48be896-b484-440a-9ca5-2cc0f31533dc","
def knight_move():
    x, y = map(int, input().split())
    if (x + 2 == 7 and y + 1 == 3) or (x - 2 == 7 and y + 1 == 3) or (x + 1 == 7 and y + 2 == 3) or (x - 1 == 7 and y - 2 == 3):
        print(""YES"")
    else:
        print(""NO"")

knight_move()
","1.0"
"d48be896-b484-440a-9ca5-2cc0f31533dc","def main():
    X = int(input())
    Y = int(input())

    dx = [1, 1, 2, 2, -1, -1, -2, -2]
    dy = [2, -2, 1, -1, 2, -2, 1, -1]

    for i in range(8):
        newX = X + dx[i]
        newY = Y + dy[i]
        if newX == 7 and newY == 3:
            print(""YES"")
            return

    print(""NO"")

if __name__ == ""__main__"":
    main()","1.0"
"4659a273-9c89-4ff8-a1bd-6d0ae87e9915","n = int(input())
print(n, ""magov"" if n % 10 != 1 and (n%100 < 5 or n % 100>20) else ""mag"" if n % 10 == 1 else ""maga"")","1.0"
"4659a273-9c89-4ff8-a1bd-6d0ae87e9915","
n = int(input())
if n == 1:
 print(""1 mag"")
elif n == 2:
 print(""1 maga"")
else:
 print(str(n-2) + "" magov"")
","1.0"
"4659a273-9c89-4ff8-a1bd-6d0ae87e9915","n = int(input())
m = n - 2
if n == 1:
    print(""0 mag"")
elif n == 2:
    print(""0 maga"")
else:
    print(str(m) + "" magov"")","1.0"
"777756d6-d867-4cc7-978e-717933384418","n = int(input())
print([""Gryffindor"", ""Slytherin"", ""Ravenclaw"", ""Hufflepuff""][(n - 1) % 4])","1.0"
"777756d6-d867-4cc7-978e-717933384418","
def sorting_hat(n):
    if n % 4 == 1:
        return ""Gryffindor""
    elif n % 4 == 2:
        return ""Slytherin""
    elif n % 4 == 3:
        return ""Ravenclaw""
    else:
        return ""Hufflepuff""

n = int(input())
print(sorting_hat(n))
","1.0"
"777756d6-d867-4cc7-978e-717933384418","n = int(input())

if n % 4 == 1:
    print(""Gryffindor"")
elif n % 4 == 2:
    print(""Slytherin"")
elif n % 4 == 3:
    print(""Ravenclaw"")
else:
    print(""Hufflepuff"")","1.0"
"af34735a-a422-4900-a41c-ce3188000595","n = int(input())
for i in range(n):
  print(""I must not tell lies"")
","1.0"
"af34735a-a422-4900-a41c-ce3188000595","
n = int(input())
for _ in range(n):
    print(""I must not tell lies"")
","1.0"
"af34735a-a422-4900-a41c-ce3188000595","n = int(input())

for i in range(n):
    print(""I must not tell lies"")","1.0"
"15420900-ca97-49e3-846a-13bd92d9bace","
n = int(input())
while n > 0:
  print(n % 10)
  n //= 10
","1.0"
"15420900-ca97-49e3-846a-13bd92d9bace","
def reverse_digits(n):
    digits = []
    while n > 0:
        digits.append(n % 10)
        n //= 10
    for digit in digits[::-1]:
        print(digit)

n = int(input())
reverse_digits(n)
","1.0"
"15420900-ca97-49e3-846a-13bd92d9bace","def reverse_number(n):
    while n > 0:
        print(n % 10)
        n //= 10

n = int(input())
reverse_number(n)","1.0"
"a809c102-e8a6-45ff-9baa-9a998d1927f1","n = int(input())
m = int(input())

for i in range(m):
  n *= 3
  print(n)
","1.0"
"a809c102-e8a6-45ff-9baa-9a998d1927f1","
n = int(input())
m = int(input())
death_eaters = [n]

for _ in range(1, m+1):
    new_death_eaters = sum(death_eaters) * 2
    death_eaters.append(new_death_eaters)

for death_eater in death_eaters:
    print(death_eater)
","1.0"
"a809c102-e8a6-45ff-9baa-9a998d1927f1","n = int(input())
m = int(input())

for i in range(m):
    print(n)
    n *= 3","1.0"
"c7512b39-389d-4ddb-b3fe-5475bd01a088","a = int(input())
b = int(input())
i = 0
while True:
  i = i + 1
  c = int(input())
  if c == a+b:
    break;
print(i)","1.0"
"c7512b39-389d-4ddb-b3fe-5475bd01a088","
a, b = map(int, input().split())
sums = []
attempts = 1
while True:
    s = int(input())
    sums.append(s)
    if s == a + b:
        break
    attempts += 1
print(attempts)
","1.0"
"c7512b39-389d-4ddb-b3fe-5475bd01a088","a = int(input())
b = int(input())
attempt = 0
while True:
    attempt += 1
    s = int(input())
    if s == a + b:
        break
print(attempt)","1.0"
"8db514ad-0242-48a9-ab6e-85b0e8171d87","a = int(input())
b = int(input())
ans = 0
while a > 0 and b > 0:
    if a > b:
        a = a - b
    else:
        b = b - a
    ans = ans + 1
print(ans)","1.0"
"8db514ad-0242-48a9-ab6e-85b0e8171d87","
a, b = map(int, input().split())
c = max(a, b)
while c > 1:
    if c % a == 0 and c % b == 0:
        break
    if c % a == 0:
        c = c // a
    else:
        c = c // b
print(c * (a + b - 1) + min(a, b) - 1)
","1.0"
"8db514ad-0242-48a9-ab6e-85b0e8171d87","A = int(input())
B = int(input())

def gcd(a, b):
    while b != 0:
        a, b = b, a % b
    return a

def count_squares(a, b):
    g = gcd(a, b)
    return (a // g) * (b // g)

print(count_squares(A, B))","1.0"
"0c2c7e3c-f232-46ee-b1a9-748e4ac46772","
def is_russian(s):
    return max(ord(ch) for ch in s) <= ord('я')

print('YES' if not is_russian(input()) else 'NO')
","1.0"
"0c2c7e3c-f232-46ee-b1a9-748e4ac46772","
def check_russian(s):
    return 'YES' if any(c not in 'АБВГДЕЖЗИЙКЛМНОПРСТУФХЦЧШЩЪЫЬЭЮЯ' for c in s) else 'NO'

s = input()
print(check_russian(s))
","1.0"
"0c2c7e3c-f232-46ee-b1a9-748e4ac46772","def is_russian_letters(s):
    for c in s:
        if not (1072 <= ord(c) <= 1103 or ord(c) == 1105 or ord(c) == 1025):
            return False
    return True

s = input()
print(""YES"" if not is_russian_letters(s) else ""NO"")","1.0"
"5b6da202-e075-48fb-a015-421187973431","
v = int(input())
t = int(input())
print(v * t)
","1.0"
"5b6da202-e075-48fb-a015-421187973431","
v = int(input(""\nv - bus speed,\r\n""))
t = int(input(""\nt - travel time.\r\n""))
distance = v * t
print(distance)
","1.0"
"5b6da202-e075-48fb-a015-421187973431","v = int(input())
t = int(input())

distance = v * t

print(distance)","1.0"
"050f0a60-1200-4dec-acb5-12c3b9f24d0d","n = int(input())
print(n // 60)","1.0"
"050f0a60-1200-4dec-acb5-12c3b9f24d0d","
n = int(input())
hours = n // 60
minutes = n % 60
print(hours)
","1.0"
"050f0a60-1200-4dec-acb5-12c3b9f24d0d","def main():
    n = int(input())
    hours = n // 60
    print(hours)

if __name__ == ""__main__"":
    main()","1.0"
"33cf3c19-292d-4544-a9a5-0e2a3c965272","a=[int(x) for x in input().split()]
num=0
for x in a:
    if x>=10 and x%10==0: num+=1
print(num)","1.0"
"33cf3c19-292d-4544-a9a5-0e2a3c965272","
numbers = list(map(int, input().split()))
count = 0
for num in numbers:
    if 10 <= num < 100 and num % 10 == 0:
        count += 1
print(count)
","1.0"
"33cf3c19-292d-4544-a9a5-0e2a3c965272","numbers = list(map(int, input().split()))
count = 0
for num in numbers:
    if 10 <= num <= 99 and num % 10 == 0:
        count += 1
print(count)","1.0"
"40d78243-79a0-4ec7-8ff5-47f803a55e0b","l='BCDE'
c=0
s=input()
for x in s:
 if x in l:
  for y in l:
   if x!=y:
    for z in l:
     if y!=z and x!=z: c+=1
print(c)","1.0"
"40d78243-79a0-4ec7-8ff5-47f803a55e0b","
def count_chains(s):
    count = 0
    for i in range(len(s) - 2):
        if s[i] in ['B', 'C', 'D'] and s[i+1] in ['B', 'D', 'E'] and s[i+2] in ['B', 'C', 'E'] and s[i+1] != s[i] and s[i+2] != s[i+1]:
            count += 1
    return count

s = input()
print(count_chains(s))
","1.0"
"40d78243-79a0-4ec7-8ff5-47f803a55e0b","def count_chains(s):
    count = 0
    for i in range(len(s) - 2):
        if s[i] in 'BCD' and s[i + 1] in 'BDE' and s[i] != s[i + 1] and s[i + 1] in 'BCE' and s[i + 1] != s[i + 2]:
            count += 1
    return count

s = input()
print(count_chains(s))","1.0"
"f2aee372-d88a-497b-a1d2-64b122fc8b0a","
n = int(input())
for i in range(2, n + 1):
  if n % i == 0:
    print(i)
    break
","1.0"
"f2aee372-d88a-497b-a1d2-64b122fc8b0a","
def smallest_divisor(n):
    for i in range(2, n):
        if n % i == 0:
            return i
    return n

n = int(input())
if n > 1:
    print(smallest_divisor(n))
else:
    print(""1"")
","1.0"
"f2aee372-d88a-497b-a1d2-64b122fc8b0a","n = int(input())
i = 2
while i * i <= n:
    if n % i == 0:
        print(i)
        break
    i += 1
else:
    print(n)","1.0"
"132b4d29-b1fe-4591-be7e-9e4e150e35b6","
n = int(input())
if n > 1:
    for i in range(2, int(n**0.5)+1):
        if n % i == 0:
            print(""NO"")
            break
    else:
        print(""YES"")
else:
    print(""NO"")
","1.0"
"132b4d29-b1fe-4591-be7e-9e4e150e35b6","
def is_prime(n):
    if n <= 1:
        return False
    if n <= 3:
        return True
    if n % 2 == 0 or n % 3 == 0:
        return False
    i = 5
    while i * i <= n:
        if n % i == 0 or n % (i + 2) == 0:
            return False
        i += 6
    return True

n = int(input())
print(""YES"" if is_prime(n) else ""NO"")
","1.0"
"132b4d29-b1fe-4591-be7e-9e4e150e35b6","def is_prime(n):
    if n < 2:
        return False
    for i in range(2, int(n ** 0.5) + 1):
        if n % i == 0:
            return False
    return True

n = int(input())
print(""YES"" if is_prime(n) else ""NO"")","1.0"
"3ae56164-1134-42f9-8fd7-204a82b81e52","
def prime_factor(x):
    for i in range(2, int(x ** 0.5) + 1):
        while not x % i:
            x //= i
    return x or i


def func(a):
    x = 1
    for i in range(2, a + 1):
        x *= i
    print(x, prime_factor(x))


func(int(input()))
","1.0"
"3ae56164-1134-42f9-8fd7-204a82b81e52","
def divisor_count(n):
    count = 0
    for i in range(1, n + 1):
        if n % i == 0:
            count += 1
    return count

def find_prime(n):
    if n <= 1:
        return None
    for i in range(2, int(n ** 0.5) + 1):
        if n % i == 0:
            return i
    return n

a = int(input())
n = 1
while True:
    if divisor_count(n) == a + 1:
        print(n, find_prime(n))
        break
    n += 1
","1.0"
"3ae56164-1134-42f9-8fd7-204a82b81e52","def is_prime(n):
    if n < 2:
        return False
    for i in range(2, int(n ** 0.5) + 1):
        if n % i == 0:
            return False
    return True

def gcd(a, b):
    while b != 0:
        a, b = b, a % b
    return a

def find_smallest_number_with_divisors(a):
    result = 1
    greatest_prime_divisor = 1
    for i in range(1, a + 1):
        if gcd(i, a) == 1:
            result *= i
            if is_prime(i) and i > greatest_prime_divisor:
                greatest_prime_divisor = i
    return result, greatest_prime_divisor

a = int(input())
smallest_number, greatest_prime_divisor = find_smallest_number_with_divisors(a)
print(smallest_number, greatest_prime_divisor)","1.0"
"e291f79e-b00b-4223-8250-eb7e45d39e54","
s=input()
print(s.replace(""r"",""z"").replace(""R"",""Z""))
","1.0"
"e291f79e-b00b-4223-8250-eb7e45d39e54","
def hated_letter(text):
    return text.replace('r', 'z').replace('R', 'Z')

text = ""Rich or Pol - Rok-n-rol!""
print(hated_letter(text))
","1.0"
"e291f79e-b00b-4223-8250-eb7e45d39e54","def replace_hated_letter(text):
    result = """"
    for char in text:
        if char == ""R"" or char == ""r"":
            result += ""Z"" if char.isupper() else ""z""
        else:
            result += char
    return result

text = input()
print(replace_hated_letter(text))","1.0"
"7c143f80-2e7e-4890-bee7-ffbdcbf5b05b","
text = input()
print(len([word for word in text.split() if len({ch for ch in word}) == 1]))
","1.0"
"7c143f80-2e7e-4890-bee7-ffbdcbf5b05b","
def count_conjunctions(text):
    vowels = set('aeiou')
    conjunctions = set()
    for i in range(1, len(text)):
        if text[i].islower() and text[i] not in vowels and text[i - 1].islower() and text[i - 1] not in vowels:
            if text[i - 1] == text[i - 2].lower() and text[i - 2].isalpha() and text[i - 2] not in vowels:
                continue
            conjunctions.add(text[i - 2:i + 1])
    return len(conjunctions)

text = ""Hundreds of workers with hammers are standing in the corridor.""
print(count_conjunctions(text))
","1.0"
"7c143f80-2e7e-4890-bee7-ffbdcbf5b05b","def count_conjunctions(text):
    words = text.split()
    conjunctions = {}
    for word in words:
        for char in set(word.lower()):
            if char.isalpha():
                if char not in conjunctions:
                    conjunctions[char] = set()
                conjunctions[char].add(word)
    return len(conjunctions)

text = input()
print(count_conjunctions(text))","1.0"
"3d13981c-49a5-449f-aef6-a62cad45d8f4","
def factorial(n):
  if n == 0:
    return 1
  else:
    return n * factorial(n - 1)

n, k = map(int, input().split())
print(factorial(n) // (factorial(k) * factorial(n - k)))
","1.0"
"3d13981c-49a5-449f-aef6-a62cad45d8f4","
def factorial(n):
    result = 1
    for i in range(1, n+1):
        result *= i
    return result

def combinations(n, k):
    return factorial(n) * (factorial(k) * factorial(n-k))

n, k = map(int, input().split())
print(combinations(n, k))
","1.0"
"3d13981c-49a5-449f-aef6-a62cad45d8f4","def factorial(n):
    if n == 0:
        return 1
    else:
        return n * factorial(n - 1)

def combinations(n, k):
    return factorial(n) * factorial(k) // factorial(n - k)

n, k = map(int, input().split())
print(combinations(n, k))","1.0"
"a0497858-245b-4fc6-9d58-990c5e2f0724","count = int(input())
mx = -1
for _ in range(count):
    a = int(input())
    if a % 10 == 2 and a > mx:
        mx = a
print(mx)","1.0"
"a0497858-245b-4fc6-9d58-990c5e2f0724","
def max_of_2(n):
    max_val = -1
    for i in range(n):
        num = int(input())
        if num % 10 == 2 and num > max_val:
            max_val = num
    return max_val

n = int(input())
print(max_of_2(n))
","1.0"
"a0497858-245b-4fc6-9d58-990c5e2f0724","n = int(input())
max_num = 0

for i in range(n):
    num = int(input())
    if num % 10 == 2 and num > max_num:
        max_num = num

print(max_num)","1.0"
"5be45c97-769f-45be-9ed4-b4dd633ac057","
s=input()
words=s.split()
print(' '.join(words))
","1.0"
"5be45c97-769f-45be-9ed4-b4dd633ac057","
def format_string(s):
    return ''.join(c for c in s if not (c == ' ' and (s[0] == ' ' or s[-1] == ' ' or (s[s.index(c) > 0 and s[s.index(c) - 1] == ' '))))

# Test cases
print(format_string(""rrrrrr lllllllllllll zzz""))  # Output: rrrrr lllllllllllll zzz
print(format_string(""   rrrrr   lllllllllllll   zzz   ""))  # Output: rrrrr lllllllllllll zzz
print(format_string(""rrrrrr lllllllllllll zzz rrrrr lllllllllllll zzz""))  # Output: rrrrr lllllllllllll zzz rrrrr lllllllllllll zzz
","1.0"
"5be45c97-769f-45be-9ed4-b4dd633ac057","def remove_extra_spaces(string):
    words = string.split()
    formatted_string = "" "".join(words)
    return formatted_string

string = input()
print(remove_extra_spaces(string))","1.0"
"4b28d852-6b47-4db4-aa6b-099ecb0e7a8b","def bad_transgression(n: int) -> list[int]:
    res = []
    res.append(n)
    while n > 1:
        if n % 2 == 0:
            n = n // 2
            res.append(n)
        else:
            n = (n * 3) // 2
            res.append(n)
            n = n // 2
            res.append(n)
    return res

if __name__ == ""__main__"":
    n = int(input())
    res = bad_transgression(n)
    for num in res:
        print(num)","1.0"
"4b28d852-6b47-4db4-aa6b-099ecb0e7a8b","
def transgression(n):
    parts = [n]
    while len(parts) > 1:
        if len(parts) % 2 == 0:
            parts = [int(x/2) for x in parts]
        else:
            parts = [int(x/3) for x in [x*3 for x in parts]]
            parts[1] = parts[1] // 2
            parts = [int(x/2) for x in parts]
    return parts

n = int(input())
for part in transgression(n):
    print(part)
","1.0"
"4b28d852-6b47-4db4-aa6b-099ecb0e7a8b","def transgression(n):
    while n > 1:
        if n % 2 == 0:
            n //= 2
        else:
            n = (n * 3 + 1) // 2
        print(n)

n = int(input())
print(n)
transgression(n)","1.0"
"6d5943fe-80bb-4799-adf9-505069a003c1","
line = input().lower()
code = -1
for n, i in enumerate(line):
    if not (ord('a') <= ord(i) <= ord('z')):
        continue
    code = n + 1
    print(code, end = ' ')
if code == -1:
    print(-1)
","1.0"
"6d5943fe-80bb-4799-adf9-505069a003c1","
s = input().lower()
english_letters = 'abcdefghijklmnopqrstuvwxyz'
result = [i for i, char in enumerate(s) if char in english_letters]
if not result:
    print(-1)
else:
    print(*result)
","1.0"
"6d5943fe-80bb-4799-adf9-505069a003c1","def is_english_letter(c):
    return (ord('A') <= ord(c) <= ord('Z')) or (ord('a') <= ord(c) <= ord('z'))

def find_english_letter_positions(s):
    positions = []
    for i in range(len(s)):
        if is_english_letter(s[i]):
            positions.append(i + 1)
    return positions

s = input()
positions = find_english_letter_positions(s)

if positions:
    print(*positions)
else:
    print(-1)","1.0"
"48521f16-2133-47f1-b071-0706a6062411","
def translate(text):
  words = text.split()
  result = []
  for word in words:
    first_letter = word[0]
    if first_letter == 'a':
      new_first_letter = 'i'
    else:
      new_first_letter = chr(ord(first_letter) - 1)
    result.append('mur-' + new_first_letter + word[1:])
  return ' '.join(result)

text = input()
print(translate(text))
","1.0"
"48521f16-2133-47f1-b071-0706a6062411","
def translate_to_murra(text):
    alphabet = 'йцукенгшщзхъфывапролдмижтвбю'
    translated = []
    for word in text.split():
        if word == 'a':
            word = 'i'
        else:
            index = alphabet.index(word[0]) - 1
            word = alphabet[index] + word[1:]
        translated.append('mur-' + word)
    return ' '.join(translated)

text = input()
print(translate_to_murra(text))
","1.0"
"48521f16-2133-47f1-b071-0706a6062411","def translate_to_murra(text):
    words = text.split()
    murra_words = []
    for word in words:
        if len(word) > 0:
            first_letter = word[0]
            if first_letter == 'a':
                translated_word = 'i' + word[1:]
            else:
                translated_word = chr(ord(first_letter) - 1) + word[1:]
            murra_word = 'mur-' + translated_word
            murra_words.append(murra_word)
        else:
            murra_words.append(word)
    return ' '.join(murra_words)

text = input()
translated_text = translate_to_murra(text)
print(translated_text)","1.0"
"901dd977-9e8b-4b54-9730-6aeaa9d4a9e7","x = int(input())
print(90 - x)","1.0"
"901dd977-9e8b-4b54-9730-6aeaa9d4a9e7","
def find_third_angle(angle):
    if angle < 1 or angle > 89:
        return ""Invalid input. Please enter an angle between 1 and 89.""

    right_angle = 90
    sum_of_angles = right_angle + angle
    third_angle = sum_of_angles - (2 * 90)

    return third_angle

angle = int(input(""Angle of a triangle: ""))
print(find_third_angle(angle))
","1.0"
"901dd977-9e8b-4b54-9730-6aeaa9d4a9e7","angle = int(input())

print(90 - angle)","1.0"
"091ddb60-bc05-4be5-808d-ce061c459e3e","a = int(input())
b = int(input())
c = a / b
print(c)","1.0"
"091ddb60-bc05-4be5-808d-ce061c459e3e","
area, side = map(int, input().split('\n'))
other_side = area / side
print(other_side)
","1.0"
"091ddb60-bc05-4be5-808d-ce061c459e3e","area = int(input())
side = int(input())

other_side = area // side

print(other_side)","1.0"
"ebc1af65-7f28-4308-a3c3-07335f379d84","
n = int(input())
i = 1
ans = 0
while i * i <= n:
    if n % i == 0:
        ans += 1
        if n // i != i:
            ans += 1
    i += 1
print(ans)
","1.0"
"ebc1af65-7f28-4308-a3c3-07335f379d84","
def divisors_count(n):
    count = 1
    for i in range(2, int(n**0.5) + 1):
        if n % i == 0:
            count += 2
    for i in range(int(n**0.5) + 1, n):
        if n % i == 0 and i*i != n:
            count += 1
    return count

n = int(input())
print(divisors_count(n))
","1.0"
"ebc1af65-7f28-4308-a3c3-07335f379d84","def count_divisors(n):
    divisors = 0
    i = 1
    while i * i <= n:
        if n % i == 0:
            divisors += 1
            if i * i != n:
                divisors += 1
        i += 1
    return divisors

n = int(input())
print(count_divisors(n))","1.0"
"94581bd4-2060-44f1-ad09-4c18917d4f17","a=input();r=1;m=0;for i in range(0,len(a)):if i!=0 and a[i]==a[i-1]:r=0;else:r+=1;if r>m:m=r;print(m)","1.0"
"94581bd4-2060-44f1-ad09-4c18917d4f17","
def max_chain(s):
    if not s:
        return 0

    count, max_len = 1, 1
    for i in range(1, len(s)):
        if s[i] == s[i-1]:
            count += 1
        else:
            max_len = max(max_len, count)
            count = 1

    max_len = max(max_len, count)

    return max_len

s = input()
print(max_chain(s))
","1.0"
"94581bd4-2060-44f1-ad09-4c18917d4f17","def max_consecutive_different(s):
    max_len = cur_len = 1
    prev = s[0]
    for i in range(1, len(s)):
        if s[i] != prev:
            cur_len += 1
        else:
            max_len = max(max_len, cur_len)
            cur_len = 1
        prev = s[i]
    return max(max_len, cur_len)

s = input()
print(max_consecutive_different(s))","1.0"
"53c6ed65-d137-4acc-97ec-8200a4ee1eb6","
n, r = map(int, input().split())
k = 0
for _ in range(n):
    a, b = map(int, input().split())
    k += a ** 2 + b ** 2 <= r ** 2
print(k)
","1.0"
"53c6ed65-d137-4acc-97ec-8200a4ee1eb6","
n, r = map(int, input().split())
count = 0

for _ in range(n):
    x, y = map(int, input().split())
    if (x**2 + y**2) <= r**2:
        count += 1

print(count)
","1.0"
"53c6ed65-d137-4acc-97ec-8200a4ee1eb6","n, r = map(int, input().split())
count = 0

for _ in range(n):
    x, y = map(int, input().split())
    if x**2 + y**2 <= r**2:
        count += 1

print(count)","1.0"
"931dc9d6-3183-4d35-bee6-95b210e0268a","
def main():
    number = int(input())
    divisors = []
    for i in range(1, number + 1):
        if number % i == 0:
            divisors.append(i)
    print(' '.join([str(i) for i in divisors]))


if __name__ == '__main__':
    main()

","1.0"
"931dc9d6-3183-4d35-bee6-95b210e0268a","
def divisors(n):
    divs = [1]
    for i in range(2, int(n**0.5) + 1):
        if n % i == 0:
            divs.append(i)
            divs.append(n//i)
    divs.extend(reversed([j for j in range(2, int(n**0.5) + 1) if n % j == 0]))
    divs.append(n)
    return divs

n = int(input())
print(*divisors(n))
","1.0"
"931dc9d6-3183-4d35-bee6-95b210e0268a","def main():
    n = int(input())
    for i in range(1, n + 1):
        if n % i == 0:
            print(i, end=' ')

if __name__ == '__main__':
    main()","1.0"
"75410156-cdea-4efc-a0d6-91e02bf38e32","
def divisors_count(n):
    count = 0
    for i in range(1, n + 1):
        if n % i == 0:
            count += 1
    return count

a = int(input())
b = int(input())

found = False
for i in range(a, b + 1):
    if divisors_count(i) == 4:
        found = True
        div = []
        for j in range(1, i + 1):
            if i % j == 0:
                div.append(j)
        print(*div)
if not found:
    print(0)
","1.0"
"75410156-cdea-4efc-a0d6-91e02bf38e32","
def divisors(n):
    divs = []
    for i in range(1, n + 1):
        if n % i == 0:
            divs.append(i)
    return len(set(divs))

a, b = map(int, input().split())
for i in range(a, b + 1):
    if divisors(i) == 4:
        print(min(divisors(i)), min(divs for divs in itertools.combinations(divisors(i), 2))[0], max(divisors(i) - 2), max(divisors(i)))
    elif divisors(i) == 2:
        print(0)
```

This code uses the built-in `itertools.combinations()` function, which is not available in Python 3.0. If you need to support Python 3.0, you can replace the line with:

```python
print(min(divisors(i)), min(x + y for x, y in itertools.combinations(sorted(divisors(i)), 2)), max(divisors(i) - 2), max(divisors(i)))
","1.0"
"75410156-cdea-4efc-a0d6-91e02bf38e32","def gcd(a, b):
    while b != 0:
        a, b = b, a % b
    return a

def solution(a, b):
    for num in range(a, b + 1):
        divisors = []
        for i in range(1, int(num ** 0.5) + 1):
            if num % i == 0:
                divisors.append(i)
                if i != num // i:
                    divisors.append(num // i)
        if len(divisors) == 4:
            print(*sorted(divisors))

a = int(input())
b = int(input())
solution(a, b)","1.0"
"9ad8e0ac-34e6-45a9-8f4f-0e8046aec803","
def divisors_count(n):
  count = 0
  for i in range(1, int(n**0.5) + 1):
    if n % i == 0:
      count += 2
      if i * i == n:
        count -= 1
  return count

def find_max_divisors(a, b):
  max_divisors = 0
  max_number = a
  for i in range(a, b + 1):
    current_divisors = divisors_count(i)
    if current_divisors > max_divisors:
      max_divisors = current_divisors
      max_number = i
    elif current_divisors == max_divisors and i > max_number:
      max_number = i
  return max_divisors, max_number

a = int(input())
b = int(input())

divisors_count, max_number = find_max_divisors(a, b)

divisor1 = max_number
divisor2 = 1
for i in range(2, int(max_number**0.5) + 1):
  if max_number % i == 0:
    divisor2 = max_number // i
    break

print(divisors_count, divisor1, divisor2)
","1.0"
"9ad8e0ac-34e6-45a9-8f4f-0e8046aec803","
def prime_factors(n):
    factors = []
    i = 2
    while i * i <= n:
        if n % i:
            i += 1
        else:
            n //= i
            factors.append(i)
    if n > 1:
        factors.append(n)
    return factors

def divisor_count(n):
    count = 1
    for i in range(2, int(n ** 0.5) + 1):
        if n % i:
            continue
        count += 2
        for j in prime_factors(i):
            if n % j:
                continue
            count += 1
    return count

a, b = map(int, input().split())
max_count = 0
max_num = 0
for num in range(a, b + 1):
    count = divisor_count(num)
    if count > max_count:
        max_count = count
        max_num = num
        divisors = [1, num]
    elif count == max_count:
        divisors.append(num)
divisors.sort(reverse=True)
print(max_count, divisors[0], divisors[1])
","1.0"
"9ad8e0ac-34e6-45a9-8f4f-0e8046aec803","def gcd(a, b):
    while b != 0:
        a, b = b, a % b
    return a

def main():
    a = int(input())
    b = int(input())
    max_divisors = 0
    max_num = 0
    max_divisors_list = []

    for num in range(a, b + 1):
        divisors = []
        for i in range(1, int(num**0.5) + 1):
            if num % i == 0:
                divisors.append(i)
                if i != num // i:
                    divisors.append(num // i)
        divisors.sort(reverse=True)
        if len(divisors) > max_divisors:
            max_divisors = len(divisors)
            max_num = num
            max_divisors_list = divisors[:2]

    print(max_divisors, max_divisors_list[0], max_divisors_list[1])

if __name__ == '__main__':
    main()","1.0"
"ec3cfb4d-5f50-4fa0-8e53-686d10f6c0b2","
def div_count(n:int):
    x = set()
    for i in range(1,int(n**0.5)+1):
        if not n%i:
            x.update([i,n//i])
    return len(x)
a,b=map(int,input().split())
c=1
for i in range(a,b+1):
    if div_count(i)%2:
        print(c,i,div_count(i),(i**0.5))
        c+=1
","1.0"
"ec3cfb4d-5f50-4fa0-8e53-686d10f6c0b2","
def divisors(n):
    count, sqrt = 2, int(n ** 0.5)
    divs = [1, n]
    for i in range(2, sqrt + 1):
        if n % i == 0:
            count += 1
            divs.append(i)
            divs.append(n // i)
    if sqrt * sqrt != n:
        count += 1
        divs.append(sqrt * sqrt)
    return count, divs

a, b = map(int, input().split())
count, num = 0, 0
for i in range(a, b + 1):
    c, divs = divisors(i)
    if c % 2 != 0:
        print(f'{count + 1} {i} {c} {divs[len(divs) // 2]}')
    count += 1
","1.0"
"ec3cfb4d-5f50-4fa0-8e53-686d10f6c0b2","def main():
    a, b = map(int, input().split())
    count = 0
    for num in range(a, b + 1):
        divisors = []
        for i in range(1, int(num ** 0.5) + 1):
            if num % i == 0:
                divisors.append(i)
                if i != num // i:
                    divisors.append(num // i)
        if len(divisors) % 2 != 0:
            count += 1
            print(count, num, len(divisors), divisors[len(divisors) // 2])

if __name__ == ""__main__"":
    main()","1.0"
"6bd877c6-1740-408f-a6ca-2f8adeae08f5","
a = int(input())
b = int(input())
sum_of_digits = 0
for i in range(a, b + 1):
  count = 0
  for j in range(2, i):
    if i % j == 0:
      count += 1
  if count == 1:
    for digit in str(i):
      sum_of_digits += int(digit)
print(sum_of_digits)
","1.0"
"6bd877c6-1740-408f-a6ca-2f8adeae08f5","
def prime_factors(n):
    factors = []
    i = 2
    while i * i <= n:
        if n % i:
            i += 1
        else:
            n //= i
            factors.append(i)
    if n > 1:
        factors.append(n)
    return factors

a, b = map(int, input().split())
numbers = set()
for i in range(a, b+1):
    if len(prime_factors(i)) == 2:
        numbers.add(i)

result = sum(int(digit) for i in numbers for digit in str(i))
print(result)
","1.0"
"6bd877c6-1740-408f-a6ca-2f8adeae08f5","def is_prime(n):
    if n < 2:
        return False
    for i in range(2, int(n**0.5) + 1):
        if n % i == 0:
            return False
    return True

def sum_of_digits(n):
    s = 0
    while n > 0:
        s += n % 10
        n //= 10
    return s

a = int(input())
b = int(input())

result = 0
for num in range(a, b + 1):
    if is_prime(num):
        result += sum_of_digits(num)

print(result)","1.0"
"3afc315a-4d55-4193-8135-d8dd5c533c49","
S, N = map(int, input().split())
file_sizes = []
for _ in range(N):
  file_sizes.append(int(input()))
file_sizes.sort(reverse=True)
max_users = 0
max_file_size = 0
current_space = 0
for i in range(N):
  if current_space + file_sizes[i] <= S:
    current_space += file_sizes[i]
    max_users += 1
  else:
    max_file_size = file_sizes[i]
    break
print(max_users, max_file_size)
","1.0"
"3afc315a-4d55-4193-8135-d8dd5c533c49","
S, N = map(int, input().split())
user_sizes = sorted(map(int, input().split()))

users, max_file_size = 0, user_sizes[0]
for size in user_sizes:
    if S >= size:
        S -= size
        users += 1
        if users == N:
            max_file_size = size
    else:
        break

print(users, max_file_size)
","1.0"
"3afc315a-4d55-4193-8135-d8dd5c533c49","def main():
    s, n = map(int, input().split())
    files = []
    for _ in range(n):
        files.append(int(input()))
    files.sort()

    max_users = 0
    max_file_size = 0
    total_size = 0

    for file_size in files:
        if total_size + file_size <= s:
            total_size += file_size
            max_users += 1
            max_file_size = file_size

    print(max_users, max_file_size)

if __name__ == ""__main__"":
    main()","1.0"
"6c2adae3-f5f9-4088-9bc6-567fe66476fb","
n, k = map(int, input().split())
a = []
for i in range(n):
    a.append(int(input()))
a.sort(reverse=True)
b = a[:k]
c = a[k:]
print(c[0], sum(i * 20 // 100 for i in b))
","1.0"
"6c2adae3-f5f9-4088-9bc6-567fe66476fb","
N, K = map(int, input().split())
prices = sorted(list(map(int, input().splitlines())))
discounted_sum = sum(prices[:K])
non_discounted_prices = [prices[i] for i in range(K, N)]
non_discounted_prices.sort(reverse=True)
discount = len(non_discounted_prices) * (20 / 100) * discounted_sum
most_expensive_not_discounted = non_discounted_prices[0]
print(most_expensive_not_discounted, int(discount))
","1.0"
"6c2adae3-f5f9-4088-9bc6-567fe66476fb","N, K = map(int, input().split())
prices = []
for _ in range(N):
    prices.append(int(input()))
prices.sort(reverse=True)
discounted_prices = prices[:K]
non_discounted_price = prices[K] if K < N else 0
total_discount = sum(price // 5 for price in discounted_prices)
print(non_discounted_price, total_discount)","1.0"
"dc2ce7e3-6bb9-4308-8c20-15410d948a3c","n=int(input())
a=[int(input()) for i in range(n)]
a.sort()
l,r=0,n-1
ans=0
while l<r:
    if a[l]+a[r]==100:
        l+=1
        r-=1
        ans+=1
    elif a[l]+a[r]<100:
        l+=1
    else:
        r-=1
print(ans)","1.0"
"dc2ce7e3-6bb9-4308-8c20-15410d948a3c","
n = int(input())
coins = []
for _ in range(n):
    coins.append(int(input()))

boxes = 0
current_coins = 0
for coin in coins:
    current_coins += coin
    if current_coins > 100:
        boxes += current_coins // 100
        current_coins %= 100
        if current_coins == 0:
            if coin <= 100:
                boxes += 1
        elif current_coins + coin <= 100:
            current_coins += coin
    elif current_coins + coin == 100:
        boxes += 1
        current_coins = 0

boxes += current_coins // 100 + (current_coins % 100 > 0)
print(boxes)
","1.0"
"dc2ce7e3-6bb9-4308-8c20-15410d948a3c","def main():
    n = int(input())
    baskets = []
    for _ in range(n):
        baskets.append(int(input()))

    boxes = 0
    i = 0
    while i < n:
        if baskets[i] == 100:
            boxes += 1
            i += 1
        elif i + 1 < n and baskets[i] + baskets[i + 1] == 100:
            boxes += 1
            i += 2
        else:
            i += 1

    print(boxes)

if __name__ == ""__main__"":
    main()","1.0"
"4ecec1ec-211d-4ce0-bd4b-ee2498ae1afa","
def reverse_digits(n):
  if n < 10:
    print(n, end=' ')
  else:
    reverse_digits(n // 10)
    print(n % 10, end=' ')

n = int(input())
reverse_digits(n)
","1.0"
"4ecec1ec-211d-4ce0-bd4b-ee2498ae1afa","
def reverse_number(n):
    if n < 10:
        return str(n)
    else:
        return reverse_number(n // 10) + str(n % 10)

n = int(input())
print(' '.join(reverse_number(n)))
","1.0"
"4ecec1ec-211d-4ce0-bd4b-ee2498ae1afa","def reverse_number(n):
    if n < 10:
        print(n)
    else:
        print(n % 10, end=' ')
        reverse_number(n // 10)

n = int(input())
reverse_number(n)","1.0"
"f2fd916a-4061-4f42-aa02-2ae337339c7a","
n, k, m = map(int, input().split())
scores = []
for _ in range(n):
  scores.append(int(input()))
scores.sort(reverse=True)
print(scores[k - 1], scores[k + m - 1])
","1.0"
"f2fd916a-4061-4f42-aa02-2ae337339c7a","
N, K, M = map(int, input().split())
scores = list(map(int, input().split()))

winners = sorted(scores)
min_winner = winners[N-K]
second_winner = winners[N-M] if M <= K else winners[N-K]

print(min_winner, second_winner)
","1.0"
"f2fd916a-4061-4f42-aa02-2ae337339c7a","n, k, m = map(int, input().split())
results = []
for _ in range(n):
    results.append(int(input()))
results.sort()
min_winner_score = results[k - 1]
min_prize_score = results[k + m - 1]
print(min_winner_score, min_prize_score)","1.0"
"7f4176cf-336a-4612-9d4d-31057447b99e","n, k = map(int, input().split())
l = []
for i in range(n):
    l.append(int(input()))
l.sort(reverse=True)
print(l[k]//1,l[2*k-1]//1)","1.0"
"7f4176cf-336a-4612-9d4d-31057447b99e","
N, K = map(int, input().split())
scores = sorted(map(int, input().splitlines()))

excellent_students = scores[-K:]
good_students = scores[-2*K:] + scores[-K:]

print(sum(good_students[K:]) // (N - K))
print(sum(excellent_students) // K)
","1.0"
"7f4176cf-336a-4612-9d4d-31057447b99e","def main():
    n, k = map(int, input().split())
    scores = []
    for _ in range(n):
        scores.append(int(input()))

    scores.sort(reverse=True)
    excellent_scores = scores[:k]
    good_scores = scores[k:2*k]

    excellent_avg = sum(excellent_scores) // k
    good_avg = sum(good_scores) // k

    print(good_avg, excellent_avg)

if __name__ == ""__main__"":
    main()","1.0"
"dac9c476-636f-4d94-b428-2eacbaa8556a","n = int(input())
a = [int(input()) for _ in range(n)]
b = 0
del = []
for i in range(n):
    if a[i] > 100:
        if len(del) % 2 == 0 and a[i] > b:
            b = a[i]
            del.append(i)
        elif len(del) % 2 == 1 and a[i] < b:
            b = a[i]
            del.pop()
            del.append(i)
    elif a[i] < 100:
        if len(del) % 2 == 1:
            del.pop()
print(*[(round(sum([a[i] for i in range(n) if i != k]) * 0.9) + a[k], 0), b] if k in del else [sum(a), 0] for k in range(n))","1.0"
"dac9c476-636f-4d94-b428-2eacbaa8556a","
def discounted_price(n, prices):
    discounted = [0] * n
    discount_sum = 0
    discount_index = 0
    max_price = 0

    for i, price in enumerate(prices):
        if price > 100 and (i % 2 == 1 or discount_index == 0):
            discounted[discount_index] = price * 0.9
            discount_sum += price * 0.1
            discount_index += 1
            if price > max_price:
                max_price = price

    for i in range(discount_index, n):
        discounted[i] = prices[i]

    total = sum(discounted) + discount_sum
    total = round(total)

    return total, max_price

n = int(input())
prices = list(map(int, input().split()))
total, max_price = discounted_price(n, prices)
print(total, max_price)
","1.0"
"dac9c476-636f-4d94-b428-2eacbaa8556a","def main():
    n = int(input())
    prices = []
    for _ in range(n):
        prices.append(int(input()))

    prices.sort(reverse=True)
    total_price = 0
    max_discounted_price = 0
    discounted_count = 0

    for price in prices:
        if price > 100:
            discounted_count += 1
            if discounted_count % 2 == 0:
                discounted_price = price * 0.9
                if price > max_discounted_price:
                    max_discounted_price = price
            else:
                discounted_price = price
        else:
            discounted_price = price
        total_price += discounted_price

    total_price = round(total_price)
    print(total_price, max_discounted_price)

if __name__ == ""__main__"":
    main()","1.0"
"8197a3b2-3c8b-4da4-85c2-8afd3c9c9e3e","places = []
for i in range(int(input())):
    places.append(list(map(int, input().split())))
for row, column in places:
    if [row, column - 1] in places and [row, column + 1] in places:
        print(row, column)
        break","1.0"
"8197a3b2-3c8b-4da4-85c2-8afd3c9c9e3e","
def find_row():
    n = int(input())
    rows = set()
    for _ in range(n):
        row, place = map(int, input().split())
        rows.add(row)

    max_row = max(rows)
    for row in reversed(range(max_row)):
        if (row+1) in rows and (row+2) in rows:
            for place in range(1, 101):
                if (row, place) not in rows and (row, place-1) in rows and (row, place+1) in rows:
                    return row, min(place-1, place)
    return max_row, 1

print(find_row())
","1.0"
"8197a3b2-3c8b-4da4-85c2-8afd3c9c9e3e","def find_row_with_adjacent_seats():
    N = int(input())
    occupied_seats = {}
    for _ in range(N):
        row, seat = map(int, input().split())
        if row not in occupied_seats:
            occupied_seats[row] = set()
        occupied_seats[row].add(seat)

    max_row = 0
    min_seat = float('inf')
    for row in occupied_seats:
        seats = sorted(occupied_seats[row])
        for i in range(1, len(seats) - 1):
            if seats[i] - seats[i - 1] == 1 and seats[i + 1] - seats[i] >= 2:
                max_row = max(max_row, row)
                min_seat = min(min_seat, seats[i])

    return max_row, min_seat

row, seat = find_row_with_adjacent_seats()
print(row, seat)","1.0"
"d49e80f4-ce33-4ded-aa53-337f8d0f73b8","
n, k = map(int, input().split())
measurements = []
for _ in range(n):
  measurements.append(int(input()))
measurements.sort()
reliable_measurements = measurements[k:n-k]
print(reliable_measurements[-1], int(sum(reliable_measurements) / len(reliable_measurements)))
","1.0"
"d49e80f4-ce33-4ded-aa53-337f8d0f73b8","
N, K = map(int, input().split())
measurements = sorted(list(map(int, input().split())))
excluded_indices = list(range(K)) + list(range(N - K, N))
measurements = [measurements[i] for i in sorted(set(range(N)) - set(excluded_indices))]
largest = max(measurements)
average = int(sum(measurements) / len(measurements))
print(largest, average)
","1.0"
"d49e80f4-ce33-4ded-aa53-337f8d0f73b8","def main():
    n, k = map(int, input().split())
    measurements = []
    for _ in range(n):
        measurements.append(int(input()))

    measurements.sort()
    reliable_measurements = measurements[k:n-k]

    max_reliable = reliable_measurements[-1]
    avg_reliable = sum(reliable_measurements) // len(reliable_measurements)

    print(max_reliable, avg_reliable)

if __name__ == ""__main__"":
    main()","1.0"
"ea085abc-b6a7-4545-86cb-85395a6c5937","
n, k, m = map(int, input().split())
a = sorted([int(input()) for i in range(n)])
print(a[-m], a[k-1]//k)
","1.0"
"ea085abc-b6a7-4545-86cb-85395a6c5937","
N, K, M = map(int, input().split())
prices = list(map(int, input().split()))
budget = prices[:K]
premium = prices[K:]
cheapest_premium = min(filter(lambda x: x > max(budget), premium))
avg_budget = sum(budget) // len(budget)
print(cheapest_premium, int(avg_budget))
","1.0"
"ea085abc-b6a7-4545-86cb-85395a6c5937","Here's the Python code to solve the task:

n, k, m = map(int, input().split())
prices = []
for _ in range(n):
    prices.append(int(input()))

prices.sort()

budget_segment = prices[:k]
premium_segment = prices[-m:]

cheapest_premium = premium_segment[0]
avg_budget = sum(budget_segment) // k

print(cheapest_premium, avg_budget)","1.0"
"645dbba8-e48e-4111-abe4-d1ca480792d6","
def numbers_in_numbers(n: int):
    if n // 10 != 0:
        numbers_in_numbers(n // 10)
    print(n % 10, end=' ')
","1.0"
"645dbba8-e48e-4111-abe4-d1ca480792d6","
def num_to_digits(n):
    if n < 10:
        return str(n)
    else:
        return str(n % 10) + ' ' + num_to_digits(n // 10)

n = int(input())
print(num_to_digits(n))
","1.0"
"645dbba8-e48e-4111-abe4-d1ca480792d6","def numbers_in_number(n):
    if n < 10:
        print(n)
    else:
        print(n % 10, end=' ')
        numbers_in_number(n // 10)

n = int(input())
numbers_in_number(n)","1.0"
"150f8ae8-1577-4cb8-98b7-775b5ddba6c1","
def gcd(a, b):
  if b == 0:
    return a
  else:
    return gcd(b, a % b)

a, b = map(int, input().split())
print(gcd(a, b))
","1.0"
"150f8ae8-1577-4cb8-98b7-775b5ddba6c1","
def gcd(a, b):
    if b == 0:
        return a
    else:
        return gcd(b, a % b)

a, b = map(int, input().split())
print(gcd(a, b))
","1.0"
"150f8ae8-1577-4cb8-98b7-775b5ddba6c1","def gcd(a, b):
    if b == 0:
        return a
    else:
        return gcd(b, a % b)

a, b = map(int, input().split())
print(gcd(a, b))","1.0"
"311d9bb7-84d8-4a04-9af9-fba11c6f224b","
def power(a: int, x: int) -> int:
    if x == 0:
        return 1
    elif x == 1:
        return a
    else:
        return power(a, x // 2) * power(a, x - x // 2)
","1.0"
"311d9bb7-84d8-4a04-9af9-fba11c6f224b","
def power(a, x):
    if x == 0:
        return 1
    elif x == 1:
        return a
    else:
        return a * power(a, x - 1)

a, x = map(int, input().split())
print(power(a, x))
","1.0"
"311d9bb7-84d8-4a04-9af9-fba11c6f224b","def power(a, x):
    if x == 0:
        return 1
    elif x == 1:
        return a
    else:
        return a * power(a, x - 1)

a = int(input())
x = int(input())

result = power(a, x)
print(result)","1.0"
"a11ad4e0-abf7-4110-9d03-04d451d484df","n, k, g = map(int, input().split())
lst = [int(input()) for _ in range(n)]
lst.sort()
a = 0
for i in lst:
    if a + i <= g:
        a += i
    else:
        break
print(a)","1.0"
"a11ad4e0-abf7-4110-9d03-04d451d484df","
N, K, G = map(int, input().split())
weights = sorted(list(map(int, input().split())))

total = 0
for i in range(K):
    total += weights[i]
    if total > G:
        print(total - weights[i])
        break
    if i == K - 1:
        print(total)
","1.0"
"a11ad4e0-abf7-4110-9d03-04d451d484df","def max_weight_astronauts(N, K, G, weights):
    weights.sort(reverse=True)
    max_weight = 0
    for i in range(K):
        max_weight += weights[i]
    return max_weight

N, K, G = map(int, input().split())
weights = []
for _ in range(N):
    weights.append(int(input()))

print(max_weight_astronauts(N, K, G, weights))","1.0"
"70c96088-3bf6-4189-985e-a2d564337989","
def permute(arr, k, n, index, current):
    if index == k:
        print(*current)
        return
    for i in range(n):
        current[index] = arr[i]
        permute(arr, k, n, index + 1, current)

n, k = map(int, input().split())
arr = [int(input()) for _ in range(n)]
current = [0] * k
permute(arr, k, n, 0, current)
","1.0"
"70c96088-3bf6-4189-985e-a2d564337989","
def permute(arr, k, lst=[]):
    if k == 0:
        print(' '.join(map(str, lst)))
        return

    for i in range(lst[-1] + 1, len(arr)):
        arr[i], arr[lst[-1]] = arr[lst[-1]], arr[i]
        permute(arr, k - 1, lst + [i])
        arr[i], arr[lst[-1]] = arr[lst[-1]], arr[i]

n, k = map(int, input().split())
arr = list(map(int, input().split()))
arr.extend([0] * (n - len(arr)))
permute(arr, k)
","1.0"
"70c96088-3bf6-4189-985e-a2d564337989","def permutations(arr, k):
    def backtrack(start):
        if len(current) == k:
            results.append(current[:])
            return

        for i in range(start, len(arr)):
            current.append(arr[i])
            backtrack(i + 1)
            current.pop()

    results = []
    current = []
    backtrack(0)
    return results

n, k = map(int, input().split())
arr = [int(input()) for _ in range(n)]

result = permutations(arr, k)
for perm in result:
    print(*perm)","1.0"
"02fbb42a-472d-4e95-a306-13c6db519654","
n = int(input())
matrix = []
for i in range(n):
  matrix.append([int(x) for x in input().split()])
for i in range(n):
  for j in range(i + 1, n):
    if matrix[i][j] == 1:
      print(i + 1, j + 1)
","1.0"
"02fbb42a-472d-4e95-a306-13c6db519654","
def adj_matrix_to_list(n, matrix):
    adj_list = []
    for i in range(n):
        for j in range(i+1, n):
            if matrix[i][j] == 1:
                adj_list.append((min(i, j), max(i, j)))
    return adj_list

n = int(input())
matrix = []
for _ in range(n):
    row = list(map(int, input().split()))
    matrix.append(row)

edges = adj_matrix_to_list(n, matrix)
for edge in edges:
    print(*edge)
","1.0"
"02fbb42a-472d-4e95-a306-13c6db519654","def adjacency_matrix_to_list(n, matrix):
    edges = []
    for i in range(n):
        for j in range(i + 1, n):
            if matrix[i][j] == 1:
                edges.append((i + 1, j + 1))
    return edges

n = int(input())
matrix = []
for _ in range(n):
    row = list(map(int, input().split()))
    matrix.append(row)

edges = adjacency_matrix_to_list(n, matrix)
for edge in edges:
    print(edge[0], edge[1])","1.0"
"ab48f655-0a9b-4b20-8bbe-fd806719bb53","
def permute(a, l, r, k):
  if l == k:
    print(*a[:k], sep=' ')
    return

  for i in range(l, r):
    a[l], a[i] = a[i], a[l]
    permute(a, l + 1, r, k)
    a[l], a[i] = a[i], a[l]

n, k = map(int, input().split())
arr = []
for i in range(n):
  arr.append(int(input()))
permute(arr, 0, n, k)
","1.0"
"ab48f655-0a9b-4b20-8bbe-fd806719bb53","
def permute(arr, lst, k):
    if k == 0:
        print(' '.join(map(str, lst)))
        return

    for i in range(len(arr)):
        if arr[i] in lst:
            continue
        lst.append(arr[i])
        arr.pop(i)
        permute(arr, lst, k - 1)
        lst.pop()
        arr.insert(i, arr.pop())

n, k = map(int, input().split())
arr = list(map(int, input().split()))
permute(arr, [], k)
","1.0"
"ab48f655-0a9b-4b20-8bbe-fd806719bb53","def permutations(arr, k):
    def backtrack(start, curr):
        if len(curr) == k:
            print(' '.join(map(str, curr)))
            return

        for i in range(start, len(arr)):
            curr.append(arr[i])
            backtrack(i + 1, curr)
            curr.pop()

    backtrack(0, [])


def main():
    n, k = map(int, input().split())
    arr = []
    for _ in range(n):
        arr.append(int(input()))
    permutations(arr, k)


if __name__ == '__main__':
    main()","1.0"
"d10ce529-697f-4d23-8c67-948d245c3668","
n = int(input())
m = int(input())
adj = [[0 for i in range(n)] for j in range(n)]
for i in range(m):
    u, v = map(int, input().split())
    adj[u - 1][v - 1] = 1
    adj[v - 1][u - 1] = 1
for i in range(n):
    for j in range(n):
        print(adj[i][j], end=' ')
    print()
","1.0"
"d10ce529-697f-4d23-8c67-948d245c3668","
n, m = map(int, input().split())
matrix = [[0] * n for _ in range(n)]

for _ in range(m):
    a, b = map(int, input().split())
    matrix[a][b] = 1
    matrix[b][a] = 1

for row in matrix:
    print(*row)
","1.0"
"d10ce529-697f-4d23-8c67-948d245c3668","n, m = map(int, input().split())
edges = [list(map(int, input().split())) for _ in range(m)]

matrix = [[0] * n for _ in range(n)]

for edge in edges:
    matrix[edge[0] - 1][edge[1] - 1] = 1
    matrix[edge[1] - 1][edge[0] - 1] = 1

for row in matrix:
    print(*row)","1.0"
"8aba26dc-aa58-4010-8c1a-81e0ce626bae","
n = int(input())
adj = [list(map(int, input().split())) for _ in range(n)]
for i in range(n):
    for j in range(n):
        if adj[i][j]:
            print(i + 1, j + 1)
","1.0"
"8aba26dc-aa58-4010-8c1a-81e0ce626bae","
n = int(input())
edges = []
for i in range(n):
    for j in range(n):
        if i != j and input().split()[i*n+j] == '1':
            edges.append((i+1, j+1))
print(*edges, sep='\n')
","1.0"
"8aba26dc-aa58-4010-8c1a-81e0ce626bae","def adjacency_matrix_to_edge_list():
    n = int(input())
    matrix = []
    for _ in range(n):
        row = list(map(int, input().split()))
        matrix.append(row)

    edges = []
    for i in range(n):
        for j in range(n):
            if matrix[i][j] == 1:
                edges.append((i + 1, j + 1))

    for edge in edges:
        print(edge[0], edge[1])

adjacency_matrix_to_edge_list()","1.0"
"e538d2d1-111d-4904-9de6-f691cdc9fb50","
n = int(input())
a = []
for i in range(n):
    a.append(list(map(int, input().split())))
for i in range(n):
    for j in range(n):
        a[i][j] += a[j][i]
    if a[i].count(1) % 2 != 0:
        print('NO')
        exit()
print('YES')
","1.0"
"e538d2d1-111d-4904-9de6-f691cdc9fb50","
def euler_cycle(matrix):
    n = len(matrix)
    degree = [0] * n
    for i in range(n):
        for j in range(n):
            degree[i] += matrix[i][j]

    if sum(degree.count(x) for x in set(degree)) != 2*n:
        return ""NO""

    odd_degree = 0
    for d in degree:
        if d % 2:
            odd_degree += 1
        if odd_degree > 2:
            return ""NO""

    visited = [False] * n
    path = [0]
    for i in range(1, n):
        if not visited[i]:
            if not matrix[path[-1]][i]:
                return ""NO""
            path.append(i)
            visited[i] = True

    for i in range(n - 1):
        if not matrix[path[-1]][path[i]]:
            return ""NO""

    return ""YES""

n = int(input())
matrix = []
for _ in range(n):
    row = list(map(int, input().split()))
    matrix.append(row)
print(euler_cycle(matrix))
","1.0"
"e538d2d1-111d-4904-9de6-f691cdc9fb50","def is_euler_cycle_possible(graph):
    n = len(graph)
    degrees = [0] * n

    for i in range(n):
        for j in range(n):
            if graph[i][j] == 1:
                degrees[i] += 1
                degrees[j] += 1

    for degree in degrees:
        if degree % 2 != 0:
            return False

    return True


n = int(input())
graph = []

for _ in range(n):
    row = list(map(int, input().split()))
    graph.append(row)

if is_euler_cycle_possible(graph):
    print(""YES"")
else:
    print(""NO"")","1.0"
"993d5917-3656-42be-87ec-bbde4aff5607","
def dfs(graph, start, end, visited):
    if start == end:
        return True
    visited[start] = True
    for i in range(len(graph)):
        if graph[start][i] == 1 and not visited[i]:
            if dfs(graph, i, end, visited):
                return True
    return False

n, m = map(int, input().split())
graph = []
for _ in range(n):
    graph.append(list(map(int, input().split())))
for _ in range(m):
    s, e = map(int, input().split())
    visited = [False] * n
    if dfs(graph, s - 1, e - 1, visited):
        print('YES')
    else:
        print('NO')
","1.0"
"993d5917-3656-42be-87ec-bbde4aff5607","
def reachability(n, m, graph, pairs):
    visited = [False] * n
    for i in range(n):
        if not visited[i]:
            stack = [i]
            while stack:
                v = stack.pop()
                visited[v] = True
                for j in range(n):
                    if graph[v][j] and not visited[j]:
                        stack.append(j)

    for pair in pairs:
        v1, v2 = pair
        if not visited[v1]:
            print('NO')
        elif graph[v1][v2] or visited[v2]:
            print('YES')
        else:
            print('NO')

n, m = map(int, input().split())
graph = []
for _ in range(n):
    row = list(map(int, input().split()))
    graph.append(row)
pairs = []
for _ in range(m):
    pair = list(map(int, input().split()))
    pairs.append(pair)
reachability(n, m, graph, pairs)
","1.0"
"993d5917-3656-42be-87ec-bbde4aff5607","def reachability(adj_matrix, pairs):
    def dfs(start, end, visited):
        if start == end:
            return True
        visited[start] = True
        for i in range(len(adj_matrix)):
            if adj_matrix[start][i] == 1 and not visited[i]:
                if dfs(i, end, visited):
                    return True
        return False

    result = []
    for pair in pairs:
        visited = [False] * len(adj_matrix)
        if dfs(pair[0] - 1, pair[1] - 1, visited):
            result.append(""YES"")
        else:
            result.append(""NO"")
    return result


n, m = map(int, input().split())
adj_matrix = []
for _ in range(n):
    adj_matrix.append(list(map(int, input().split())))

pairs = []
for _ in range(m):
    pairs.append(list(map(int, input().split())))

result = reachability(adj_matrix, pairs)
for r in result:
    print(r)","1.0"
"6c718c88-bb90-4a37-ae7c-908916a5957e","
n = int(input())
matrix = []
for _ in range(n):
    matrix.append([int(x) for x in input().split()])
for k in range(n):
    for i in range(n):
        for j in range(n):
            matrix[i][j] = matrix[i][j] or (matrix[i][k] and matrix[k][j])
for row in matrix:
    print(*row)
","1.0"
"6c718c88-bb90-4a37-ae7c-908916a5957e","
def pow_mat(mat, n):
    res = [[0]*n for _ in range(n)]
    for i in range(n):
        for j in range(n):
            for k in range(n):
                res[i][j] |= mat[i][k] and res[k][j]
    return res if n == 2 else pow_mat(res, n)

n = int(input())
mat = []
for _ in range(n):
    mat.append(list(map(int, input().split())))

pow_mat_trans = pow_mat(mat, n)
for row in pow_mat_trans:
    print(*row)
","1.0"
"6c718c88-bb90-4a37-ae7c-908916a5957e","def transitive_closure(n, graph):
    for k in range(n):
        for i in range(n):
            for j in range(n):
                graph[i][j] = graph[i][j] or (graph[i][k] and graph[k][j])
    return graph

n = int(input())
graph = [list(map(int, input().split())) for _ in range(n)]

result = transitive_closure(n, graph)
for row in result:
    print(*row)","1.0"
"79312fbf-4cd4-4453-989e-43f3cae93d51","
n = int(input())
adj = [list(map(int, input().split())) for _ in range(n)]
ans = []
for v in range(n):
    for u in range(n):
        if adj[v][u] == 0: continue
        for w in range(n):
            if adj[u][w] and adj[v][w] == 0:
                ans.append((v + 1, w + 1))
if ans:
    for pair in ans:
        print(*pair)
else:
    print(""NO"")
","1.0"
"79312fbf-4cd4-4453-989e-43f3cae93d51","
def reachability_3(n, adj_matrix):
    visited = [False] * n
    queue = []

    for i in range(n):
        if not visited[i]:
            queue.append((i, 1, [i]))
            visited[i] = True

            while queue:
                v, d, path = queue.pop(0)
                if d == 3:
                    for j in range(n):
                        if adj_matrix[v][j] and v + 1 not in path and (j not in path or (j in path and (path[-1] + 1) != j)):
                            path.append(j)
                            if len(path) == n:
                                print(f""{path[0]} {path[-1]}"")
                                return
                            visited[j] = True
                            queue.append((j, d + 1, path))
                elif d < 3:
                    for j in range(n):
                        if adj_matrix[v][j] and not visited[j]:
                            queue.append((j, d + 1, path + [j]))

    print(""NO"")

n = int(input())
adj_matrix = []
for _ in range(n):
    adj_matrix.append(list(map(int, input().split())))
reachability_3(n, adj_matrix)
","1.0"
"79312fbf-4cd4-4453-989e-43f3cae93d51","def main():
    n = int(input())
    matrix = [list(map(int, input().split())) for _ in range(n)]

    for i in range(n):
        for j in range(n):
            for k in range(n):
                if matrix[i][k] and matrix[k][j] and not matrix[i][j]:
                    print(f""{i + 1} {j + 1}"")
                    return

    print(""NO"")

if __name__ == ""__main__"":
    main()","1.0"
"184def68-8d78-42ae-b39c-3ed0566d685c","
def dfs(graph, start, visited, path):
    visited[start] = True
    path.append(start)
    for i in range(len(graph)):
        if graph[start][i] == 1 and not visited[i]:
            dfs(graph, i, visited, path)
    return path

def all_paths(graph):
    n = len(graph)
    paths = []
    for i in range(n):
        visited = [False] * n
        path = []
        paths.append(dfs(graph, i, visited, path))
    return paths

n = int(input())
graph = []
for i in range(n):
    graph.append(list(map(int, input().split())))
paths = all_paths(graph)
for path in paths:
    print(*path)
","1.0"
"184def68-8d78-42ae-b39c-3ed0566d685c","
def dfs(node, visited, path, adj_matrix, traversals):
    visited[node] = True
    path.append(node)

    for neighbor in range(1, len(adj_matrix[0]) + 1):
        if adj_matrix[node][neighbor] == 1 and not visited[neighbor]:
            dfs(neighbor, visited, path, adj_matrix, traversals)

    if len(path) > 1:
        traversals.append(' '.join(map(str, path)))
        path.pop()
        visited[path[-1]] = False

n = int(input())
adj_matrix = []
traversals = []
visited = [False] * (n + 1)
path = []

for _ in range(n):
    row = list(map(int, input().split()))
    adj_matrix.append(row)

for node in range(1, n + 1):
    if not visited[node]:
        dfs(node, visited, path, adj_matrix, traversals)

for traversal in traversals:
    print(traversal)
","1.0"
"184def68-8d78-42ae-b39c-3ed0566d685c","def dfs(graph, start, visited=None, path=None):
    if visited is None:
        visited = set()
    if path is None:
        path = []

    visited.add(start)
    path.append(start)

    for neighbor in range(len(graph[start])):
        if graph[start][neighbor] == 1 and neighbor not in visited:
            dfs(graph, neighbor, visited, path)

    if len(path) == len(graph):
        print(' '.join(map(str, path)))
        return

    path.pop()
    visited.remove(start)


def find_all_paths(graph):
    for i in range(len(graph)):
        dfs(graph, i)


def main():
    n = int(input())
    graph = []

    for _ in range(n):
        row = list(map(int, input().split()))
        graph.append(row)

    find_all_paths(graph)


if __name__ == '__main__':
    main()","1.0"
"413dddee-a132-48a9-9753-e5bef469b529","
n, m, a, b = map(int, input().split())
g = [[0] * n for i in range(n)]
for i in range(m):
    x, y = map(int, input().split())
    g[x - 1][y - 1] = g[y - 1][x - 1] = 1
vis = [False] * n
d = [-1] * n
q = [a - 1]
d[a - 1] = 0
while len(q):
    v = q.pop(0)
    vis[v] = True
    for i in range(n):
        if g[v][i] and not vis[i]:
            d[i] = d[v] + 1
            q.append(i)
print(max(d) + 1)
v = d.index(max(d))
while v != -1:
    print(v + 1, end=' ')
    v = d.index(d[v] - 1)
print()
","1.0"
"413dddee-a132-48a9-9753-e5bef469b529","
def dfs(node, visited, path, graph, length):
    visited[node] = True
    path[node] = len(path)
    length[0] = max(length[0], len(path))

    for neighbor in range(len(graph[node])):
        if not visited[neighbor]:
            dfs(neighbor, visited, path, graph, length)

n = int(input())
graph = []
for _ in range(n):
    row = list(map(int, input().split()))
    graph.append(row)

visited = [False] * n
path = [-1] * n
length = [0]

for i in range(n):
    if not visited[i]:
        dfs(i, visited, path, graph, length)

path_index = []
for i in range(len(path)):
    if path[i] != -1:
        path_index.append(i + 1)

print(length[0])
print(*path_index)
","1.0"
"413dddee-a132-48a9-9753-e5bef469b529","def find_longest_path(adj_matrix):
    n = len(adj_matrix)
    visited = [False] * n
    longest_path = []

    def dfs(v, path):
        visited[v] = True
        path.append(v)

        if len(path) > len(longest_path):
            longest_path[:] = path[:]

        for u in range(n):
            if adj_matrix[v][u] and not visited[u]:
                dfs(u, path)

        visited[v] = False
        path.pop()

    for v in range(n):
        dfs(v, [])

    return longest_path

# Read input
n = int(input())
adj_matrix = []
for _ in range(n):
    adj_matrix.append(list(map(int, input().split())))

# Find the longest connected path
longest_path = find_longest_path(adj_matrix)

# Print the result
print(len(longest_path))
print(' '.join(map(str, longest_path)))","1.0"
"80cacb8a-a6c2-4757-9646-317c1594c18e","
n, m = map(int, input().split())
adj = [list(map(int, input().split())) for _ in range(n)]
for v in map(int, input().split()):
    vis = [-1] * n
    q = [v - 1]
    vis[v - 1] = 0
    while q:
        x = q.pop(0)
        print(x + 1, end = ' ')
        for i in range(n):
            if adj[x][i] and vis[i] == -1:
                vis[i] = vis[x] + 1
                q.append(i)
    print()
","1.0"
"80cacb8a-a6c2-4757-9646-317c1594c18e","
def bfs(graph, start, visited, queue):
    visited[start] = True
    queue.append(start)

    while queue:
        current = queue.pop(0)
        for neighbor in range(len(graph)):
            if graph[current][neighbor] == 1 and not visited[neighbor]:
                visited[neighbor] = True
                queue.append(neighbor)

n, m = map(int, input().split())
graph = []
visited = [False] * n
queue = []

for _ in range(n):
    row = list(map(int, input().split()))
    graph.append(row)

for _ in range(m):
    start = int(input()) - 1
    visited = [False] * n
    bfs(graph, start, visited, queue)
    print(*[i + 1 for i, v in enumerate(visited) if v])
","1.0"
"80cacb8a-a6c2-4757-9646-317c1594c18e","def bfs(adj_matrix, start_vertex):
    n = len(adj_matrix)
    queue = [start_vertex]
    visited = [False] * n
    visited[start_vertex] = True
    result = []

    while queue:
        current_vertex = queue.pop(0)
        result.append(current_vertex)

        for neighbor in range(n):
            if adj_matrix[current_vertex][neighbor] == 1 and not visited[neighbor]:
                queue.append(neighbor)
                visited[neighbor] = True

    return result


def main():
    input_line = input().split()
    n, m = int(input_line[0]), int(input_line[1])
    adj_matrix = [list(map(int, input().split())) for _ in range(n)]
    start_vertices = [int(input()) for _ in range(m)]

    for start_vertex in start_vertices:
        result = bfs(adj_matrix, start_vertex)
        print(*result)


if __name__ == ""__main__"":
    main()","1.0"
"0cc13605-3cb0-48e8-a8d7-10d2e1b77520","
class Stack():
    def __init__(self):
        self.items = []

    def push(self, item):
        self.items.append(item)

    def pop(self):
        return self.items.pop()

    def size(self):
        return len(self.items)

    def isEmpty(self):
        return self.size() == 0

    def reset(self):
        self.items = []

    def all(self):
        return self.items

s = Stack()
n = int(input())
G = [[0] * n for i in range(n)]
for i in range(n):
    G[i] = [int(x) for x in input().split()]
d = [-1] * n
timer = [0] * n
color = [0] * n
t = 0
order = []

def dfs(u, tp):
    global t
    color[u] = 1
    d[u] = t
    t += 1
    for v in range(n):
        if G[u][v] == 1 and color[v] == 0:
            dfs(v, tp + 1)
    color[u] = 2
    order.append([u, tp])
    timer[u] = t
    t += 1

dfs(0, 1)
for i in order:
    print(i[0] + 1, i[1])
","1.0"
"0cc13605-3cb0-48e8-a8d7-10d2e1b77520","
def dfs(node, visited, arr, count):
    visited[node] = True
    arr[node] = count
    for i in range(len(visited)):
        if visited[i] == False and arr[i] == 0:
            dfs(i, visited, arr, count + 1)
    count += 1
    return count

n = int(input())
visited = [False] * n
arr = [0] * n
count = 0

for i in range(n):
    for j in range(n):
        if int(input()) == 1:
            if not visited[j]:
                count = dfs(j, visited, arr, count)

for i in range(n):
    print(i+1, arr[i])
","1.0"
"0cc13605-3cb0-48e8-a8d7-10d2e1b77520","def dfs(v, used, order):
    used[v] = True
    order.append(v)
    for i in range(len(graph[v])):
        if graph[v][i] == 1 and not used[i]:
            dfs(i, used, order)

n = int(input())
graph = []
for i in range(n):
    graph.append(list(map(int, input().split())))

used = [False] * n
order = []
dfs(0, used, order)

for i in range(len(order)):
    print(order[i] + 1, i + 1)","1.0"
"cdd79a46-8605-41d1-a344-70e7c6a9b8c2","
n, m = map(int, input().split())
l = [[0] * n for _ in range(n)]
for _ in range(m):
    x, y = map(lambda x: int(x) - 1, input().split())
    l[x][y] = 1
for line in l: print(*line)
","1.0"
"cdd79a46-8605-41d1-a344-70e7c6a9b8c2","
n, m = map(int, input().split())
adj_matrix = [[0] * n for _ in range(n)]

for _ in range(m):
    u, v = map(int, input().split())
    adj_matrix[u][v] = 1

for row in adj_matrix:
    print(*row)
","1.0"
"cdd79a46-8605-41d1-a344-70e7c6a9b8c2","def main():
    n, m = map(int, input().split())
    matrix = [[0] * n for _ in range(n)]
    for _ in range(m):
        x, y = map(int, input().split())
        matrix[x - 1][y - 1] = 1
    for row in matrix:
        print(' '.join(map(str, row)))

if __name__ == '__main__':
    main()","1.0"
"95831070-88fb-406f-8997-c0fc4027d623","
n = int(input())
m = [[int(x) for x in input().split()] for i in range(n)]
for i in range(n):
    for j in range(i):
        m[j][i] = m[i][j]
for i in m:
    print(' '.join(map(str, i)))
","1.0"
"95831070-88fb-406f-8997-c0fc4027d623","
n = int(input())
matrix = []
for _ in range(n):
    row = list(map(int, input().split()))
    matrix.append(row)
    matrix.append(row[::-1]) # mirror the row to represent the undirected graph

for i in range(n):
    for j in range(i+1, n):
        if matrix[i][j] == 1:
            matrix[j][i] = 1 # make the graph symmetric
            matrix[i][j] = 0 # remove the duplicate edge

for row in matrix:
    print(*row)
","1.0"
"95831070-88fb-406f-8997-c0fc4027d623","def main():
    n = int(input())
    matrix = []
    for i in range(n):
        row = list(map(int, input().split()))
        matrix.append(row)

    for i in range(n):
        for j in range(i + 1, n):
            if matrix[i][j] == 1 or matrix[j][i] == 1:
                matrix[i][j] = matrix[j][i] = 1
            else:
                matrix[i][j] = matrix[j][i] = 0

    for row in matrix:
        print("" "".join(map(str, row)))

if __name__ == ""__main__"":
    main()","1.0"
"ead36ff4-8cf1-4c6c-8a43-ab69f623fde7","
n = int(input())
a = [list(map(int, input().split())) for _ in range(n)]
vis = [0] * n
par = [0] * n
stack, par[0] = [0], 0
while stack:
    i = stack.pop()
    if vis[i]: continue
    vis[i] = 1
    for j in range(n):
        if a[i][j]: stack.append(j), par[j] = i
    print(i + 1, par[i] + 1)
","1.0"
"ead36ff4-8cf1-4c6c-8a43-ab69f623fde7","
def dfs(node, visited, parent, graph):
    visited[node] = True
    for i in range(len(graph[node])):
        if graph[node][i] == 1 and not visited[i]:
            parent[i] = node
            dfs(i, visited, parent, graph)

n = int(input())
graph = []
parent = [0] * n
visited = [False] * n

for _ in range(n):
    row = list(map(int, input().split()))
    graph.append(row)

dfs(0, visited, parent, graph)

for i in range(n):
    print(i, parent[i])
","1.0"
"ead36ff4-8cf1-4c6c-8a43-ab69f623fde7","def dfs(adj, visited, vertex, prev):
    visited[vertex] = True
    for i in range(len(adj)):
        if adj[vertex][i] == 1 and not visited[i]:
            prev[i] = vertex
            dfs(adj, visited, i, prev)

def find_predecessors(adj):
    n = len(adj)
    visited = [False] * n
    prev = [0] * n
    for i in range(n):
        if not visited[i]:
            dfs(adj, visited, i, prev)
    return prev

n = int(input())
adj = []
for i in range(n):
    row = list(map(int, input().split()))
    adj.append(row)

predecessors = find_predecessors(adj)
for i in range(n):
    print(i + 1, predecessors[i])","1.0"
"82028d7b-804a-4c3d-acf8-29bc892147e5","
def dfs(adj, visited, u):
    visited.add(u)
    for i in range(len(adj)):
        if adj[u][i] and i not in visited:
            dfs(adj, visited, i)

n = int(input())
adj = [[int(x) for x in input().split()] for _ in range(n)]
visited = set()
dfs(adj, visited, 0)
print(""YES"" if len(visited) == n else ""NO"")
","1.0"
"82028d7b-804a-4c3d-acf8-29bc892147e5","
def dfs(graph, visited, current_vertex):
    visited[current_vertex] = True
    for i in range(len(graph)):
        if graph[current_vertex][i] == 1 and not visited[i]:
            dfs(graph, visited, i)

n = int(input())
graph = []
visited = [False] * n

for _ in range(n):
    row = list(map(int, input().split()))
    graph.append(row)

visited[0] = True
for i in range(1, n):
    if not visited[i]:
        dfs(graph, visited, i)

if all(visited):
    print(""YES"")
else:
    print(""NO"")
","1.0"
"82028d7b-804a-4c3d-acf8-29bc892147e5","def is_connected(adj_matrix):
    n = len(adj_matrix)
    visited = [False] * n
    stack = [0]
    visited[0] = True

    while stack:
        current = stack.pop()
        for neighbor in range(n):
            if adj_matrix[current][neighbor] == 1 and not visited[neighbor]:
                visited[neighbor] = True
                stack.append(neighbor)

    return all(visited)

n = int(input())
adj_matrix = []
for _ in range(n):
    row = list(map(int, input().split()))
    adj_matrix.append(row)

if is_connected(adj_matrix):
    print(""YES"")
else:
    print(""NO"")","1.0"
"2924cfce-8ebf-4fe5-aa8e-046256297fb1","
n = int(input())
g = [list(map(int, input().split())) for _ in range(n)]
s = sorted([i for i in range(n) if sum(g[i]) == 0])
while len(s) != n:
    for i in s:
        for j in range(n):
            if g[j][i]: g[j][i] -= 1
            if sum(g[j]) == 0 and j not in s: s.append(j)
print(' '.join(map(str, s)))
","1.0"
"2924cfce-8ebf-4fe5-aa8e-046256297fb1","
def topological_sort(adj_matrix, n):
    in_degree = [0]*n
    for i in range(n):
        for j in range(n):
            if adj_matrix[i][j] == 1:
                in_degree[j] += 1

    queue = []
    for i in range(n):
        if in_degree[i] == 0:
            queue.append(i)

    sorted_order = []
    while queue:
        node = queue.pop(0)
        sorted_order.append(node)
        for i in range(n):
            if adj_matrix[node][i] == 1:
                in_degree[i] -= 1
                if in_degree[i] == 0:
                    queue.append(i)

    return sorted_order

n = int(input())
adj_matrix = []
for _ in range(n):
    row = list(map(int, input().split()))
    adj_matrix.append(row)

sorted_order = topological_sort(adj_matrix, n)
print(' '.join(map(str, sorted_order)))
","1.0"
"2924cfce-8ebf-4fe5-aa8e-046256297fb1","def topological_sort(adj_matrix):
    n = len(adj_matrix)
    visited = [False] * n
    stack = []

    def dfs(v):
        visited[v] = True
        for i in range(n):
            if adj_matrix[v][i] == 1 and not visited[i]:
                dfs(i)
        stack.append(v)

    for i in range(n):
        if not visited[i]:
            dfs(i)

    return stack[::-1]

n = int(input())
adj_matrix = []
for _ in range(n):
    row = list(map(int, input().split()))
    adj_matrix.append(row)

sorted_vertices = topological_sort(adj_matrix)
print(*sorted_vertices)","1.0"
"7880445a-3568-4939-8f55-d80530b696c0","def go(a, dist, v, n, mark):
	for i in range(n):
		if a[v][i] and i!=v and not mark[i]:
			dist[i] = min(dist[i], dist[v] + 1)
			mark[i]=True
			go(a, dist, i, n, mark)
			mark[i]=False

n = int(input())
v=int(input())-1
a=[list(map(int, input().split())) for i in range(n)]
vpath=[]
dist=[n] *n
dist[v]=0
go(a, dist, v, n, [False] * n)
m=int(input())
for i in range(m):
	p=int(input())-1
	if p==-1 or dist[p]==n:
		print(-1)
	else:
		vpath=[p]
		while p != v:
			for j in range(n):
				if a[p][j] and dist[j]<dist[p]:
					vpath=[j] + vpath
					p=j
					break
		print("" "".join(map(str, vpath)))","1.0"
"7880445a-3568-4939-8f55-d80530b696c0","
def bfs(graph, start, end):
 path = []
 visited = [False] * len(graph)
 queue = [(start, path)]

 while queue:
 current, path = queue.pop(0)

 if current == end:
 return path

 visited[current] = True

 for i in range(len(graph[current])):
 if graph[current][i] == 1 and not visited[i]:
 queue.append((i, path + [current]))

 n, start = map(int, input().split())
 graph = [list(map(int, input().split())) for _ in range(n)]
 m = int(input())

 for _ in range(m):
 end = int(input())
 path = bfs(graph, start, end)

 if path:
 print(*path[1:])
 else:
 print(-1)
","1.0"
"7880445a-3568-4939-8f55-d80530b696c0","def find_shortest_path(adj_matrix, start, end):
    n = len(adj_matrix)
    visited = [False] * n
    queue = [(start, [start])]

    while queue:
        vertex, path = queue.pop(0)
        if vertex == end:
            return path
        if not visited[vertex]:
            visited[vertex] = True
            for i in range(n):
                if adj_matrix[vertex][i] == 1:
                    queue.append((i, path + [i]))

    return None

def main():
    n, v = map(int, input().split())
    adj_matrix = []
    for _ in range(n):
        row = list(map(int, input().split()))
        adj_matrix.append(row)

    m = int(input())
    for _ in range(m):
        w = int(input())
        path = find_shortest_path(adj_matrix, v, w)
        if path is None:
            print(-1)
        else:
            print(*path)

if __name__ == ""__main__"":
    main()","1.0"
"399c561c-44d6-415d-8c3b-3e83018f5f2a","```python
n=int(input())
mtx=[[1 if j==i or mtx[i][k] and mtx[k][j] else 0 for j in range(n)] for i,mtx in","1.0"
"399c561c-44d6-415d-8c3b-3e83018f5f2a","
def power(matrix, n):
    result = [[0] * len(matrix) for _ in range(len(matrix))]
    for i in range(len(matrix)):
        for j in range(len(matrix)):
            for k in range(len(matrix)):
                result[i][k] |= matrix[i][j] & matrix[j][k]
    if n > 1:
        result = power(result, n - 1)
        for i in range(len(result)):
            for j in range(len(result)):
                for k in range(len(result)):
                    result[i][k] |= result[i][j] & result[j][k]
    return result

n = int(input())
matrix = []
for _ in range(n):
    row = list(map(int, input().split()))
    matrix.append(row)

square_matrix = power(matrix, 2)
for row in square_matrix:
    print(*row)
","1.0"
"399c561c-44d6-415d-8c3b-3e83018f5f2a","n = int(input())
graph = [list(map(int, input().split())) for _ in range(n)]

result = [[0] * n for _ in range(n)]

for i in range(n):
    for j in range(n):
        if graph[i][j]:
            for k in range(n):
                if graph[j][k] and not graph[i][k]:
                    result[i][k] = 1

for row in result:
    print(*row)","1.0"
"e403def2-7943-4432-b5dc-a6073bf62a9b","
n = int(input())
adj = [input().split() for i in range(n)]
for x in range(n):
    adj[x] = [int(y) for y in adj[x]]
used = [False for i in range(n)]
order = []
def dfs(v):
    used[v] = True
    order.append(v)
    for i in range(n):
        if adj[v][i] == 1 and not used[i]:
            dfs(i)
dfs(0)
print(*order)
","1.0"
"e403def2-7943-4432-b5dc-a6073bf62a9b","
def dfs(graph, visited, current, path):
    visited[current] = True
    path.append(current)

    for neighbor in range(len(graph[current])):
        if not visited[neighbor] and graph[current][neighbor] == 1:
            dfs(graph, visited, neighbor, path)

    return path

n = int(input())
graph = []
for _ in range(n):
    row = list(map(int, input().split()))
    graph.append(row)

visited = [False] * n
paths = []

for i in range(n):
    if not visited[i]:
        path = dfs(graph, visited, i, [])
        paths.append(path)

result = []
for path in paths:
    for vertex in path:
        result.append(vertex)

print(*result)
","1.0"
"e403def2-7943-4432-b5dc-a6073bf62a9b","def dfs(graph, start):
    visited = [False] * len(graph)
    stack = [start]
    result = []

    while stack:
        vertex = stack.pop()
        if not visited[vertex]:
            visited[vertex] = True
            result.append(vertex)
            for neighbor in range(len(graph[vertex]) - 1, -1, -1):
                if graph[vertex][neighbor] == 1 and not visited[neighbor]:
                    stack.append(neighbor)

    return result


n = int(input())
graph = []

for i in range(n):
    row = list(map(int, input().split()))
    graph.append(row)

start = 0
path = dfs(graph, start)
print("" "".join(map(str, path)))","1.0"
"916cd758-8a73-4909-9ac8-2f0d57f29095","
g = [[0 for x in range(101)] for y in range(101)]
n, m = map(int, input().split())
for i in range(n):
    g[i] = list(map(int, input().split()))
    g[i][i] = 1
used = [False] * 101
order = []
def dfs(v):
    used[v] = True
    order.append(v + 1)
    for i in range(n):
        if (not used[i]) and g[v][i] == 1:
            dfs(i)

dfs(m - 1)
print(*order)

","1.0"
"916cd758-8a73-4909-9ac8-2f0d57f29095","
def dfs(visited, graph, current, path):
    visited[current] = True
    path.append(current)

    for neighbor in range(len(graph[current])):
        if not visited[neighbor] and graph[current][neighbor]:
            dfs(visited, graph, neighbor, path)

    path.pop()

n, m = map(int, input().split())
graph = []
for _ in range(n):
    row = list(map(int, input().split()))
    graph.append(row)

visited = [False] * n
path = []
dfs(visited, graph, m, path)

print(*path[1:])
","1.0"
"916cd758-8a73-4909-9ac8-2f0d57f29095","def dfs(graph, start):
    visited = [False] * len(graph)
    path = []

    def dfs_helper(vertex):
        visited[vertex] = True
        path.append(vertex)

        for i in range(len(graph)):
            if graph[vertex][i] == 1 and not visited[i]:
                dfs_helper(i)

    dfs_helper(start)
    return path

n = int(input().split()[0])
m = int(input().split()[1]) - 1
graph = []

for _ in range(n):
    row = list(map(int, input().split()))
    graph.append(row)

path = dfs(graph, m)
print("" "".join(map(str, [vertex + 1 for vertex in path])))","1.0"
"1187526d-8b3a-4a9b-8098-bbbf8d9d1423","
n = int(input())
adj = [list(map(int, input().split())) for _ in range(n)]
vis = [False] * n
par = [-1] * n
q = [1]
vis[1] = True
while q:
    v = q.pop(0)
    for i in range(n):
        if adj[v - 1][i] and not vis[i + 1]:
            q.append(i + 1)
            vis[i + 1] = True
            par[i + 1] = v
for i in range(1, n + 1):
    print(i, par[i])
","1.0"
"1187526d-8b3a-4a9b-8098-bbbf8d9d1423","
def bfs(graph, n, visited, parent):
    queue = [0]
    visited[0] = True
    while queue:
        current = queue.pop(0)
        for i in range(n):
            if graph[current][i] == 1 and not visited[i]:
                queue.append(i)
                visited[i] = True
                parent[i] = current
    return parent

n = int(input())
graph = []
for _ in range(n):
    row = list(map(int, input().split()))
    graph.append(row)
visited = [False] * n
parent = [0] * n
parent = bfs(graph, n, visited, parent)
for i in range(1, n):
    print(i, parent[i])
","1.0"
"1187526d-8b3a-4a9b-8098-bbbf8d9d1423","def bfs(adj_matrix):
    n = len(adj_matrix)
    visited = [False] * n
    prev = [None] * n

    for i in range(n):
        if not visited[i]:
            queue = [i]
            visited[i] = True

            while queue:
                current = queue.pop(0)

                for j in range(n):
                    if adj_matrix[current][j] == 1 and not visited[j]:
                        queue.append(j)
                        visited[j] = True
                        prev[j] = current

    return prev

n = int(input())
adj_matrix = []

for _ in range(n):
    row = list(map(int, input().split()))
    adj_matrix.append(row)

prev_vertices = bfs(adj_matrix)

for i in range(1, n + 1):
    print(i, prev_vertices[i - 1] + 1)","1.0"
"04dd6eca-f83b-4028-a21a-4e09c9333c0a","cities = int(input())
adj = [[] for _ in range(cities)]
for c in range(cities):
    lst = [int(i) for i in input().strip().split()]
    for r in range(cities):
        if lst[r] != 0:
            adj[c].append((r, lst[r]))
visited = [False] * cities
dist = [1000000000000] * cities
dist[0] = 0
visited[0] = True
for u, w in adj[0]:
    dist[u] = w
while not all(visited):
    mn = 1000000000000
    pos = -1
    for i in range(cities):
        if not visited[i] and dist[i] < mn:
            pos = i
            mn = dist[i]
    if pos == -1:
        break
    visited[pos] = True
    for u, w in adj[pos]:
        if dist[u] > dist[pos] + w:
            dist[u] = dist[pos] + w
v, w = [int(i) for i in input().strip().split()]
v -= 1
w -= 1
if dist[v] != 1000000000000 and dist[w] != 1000000000000:
    print(dist[v] + dist[w])
else:
    print(""NO"")","1.0"
"04dd6eca-f83b-4028-a21a-4e09c9333c0a","
def bfs(n, s, v, w, graph):
    visited = [False] * n
    queue = []
    visited[v] = True
    queue.append(v)
    dist = [float('inf')] * n
    dist[v] = 0

    while queue:
        current = queue.pop(0)

        for i in range(n):
            if graph[current][i] == s and not visited[i]:
                visited[i] = True
                queue.append(i)
                dist[i] = dist[current] + s

    if dist[w] != float('inf'):
        print(dist[w])
    else:
        print(""NO"")

n = int(input())
graph = []
for _ in range(n):
    row = list(map(int, input().split()))
    graph.append(row)

v, w = map(int, input().split())
bfs(n, 1, v, w, graph)
","1.0"
"04dd6eca-f83b-4028-a21a-4e09c9333c0a","def find_shortest_path(matrix, start, end):
    n = len(matrix)
    visited = [False] * n
    distances = [float('inf')] * n
    distances[start] = 0

    for _ in range(n):
        min_distance = float('inf')
        current_city = -1
        for city in range(n):
            if not visited[city] and distances[city] < min_distance:
                min_distance = distances[city]
                current_city = city

        visited[current_city] = True
        for city in range(n):
            if matrix[current_city][city] != 0:
                new_distance = distances[current_city] + matrix[current_city][city]
                if new_distance < distances[city]:
                    distances[city] = new_distance

    return distances[end] if distances[end] != float('inf') else -1


n = int(input())
matrix = []
for _ in range(n):
    row = list(map(int, input().split()))
    matrix.append(row)

v, w = map(int, input().split())
v -= 1
w -= 1

shortest_path = find_shortest_path(matrix, v, w)
print(shortest_path if shortest_path != -1 else ""NO"")","1.0"
"d752e481-f9e0-4d06-8ad4-ca4b16a1195f","
n = int(input())
matrix = []
for i in range(n):
  matrix.append([int(x) for x in input().split()])
for i in range(n):
  degree = 0
  for j in range(n):
    degree += matrix[i][j]
  print(i + 1, degree)
","1.0"
"d752e481-f9e0-4d06-8ad4-ca4b16a1195f","
def top_degree(matrix):
    n = len(matrix)
    degree = [0] * n
    for i in range(n):
        for j in range(n):
            if matrix[i][j] == 1:
                degree[i] += 1
                degree[j] += 1
    for i in range(n):
        for j in range(i, n):
            if degree[i] < degree[j]:
                degree[i], degree[j] = degree[j], degree[i]
    for i in range(n):
        print(i+1, degree[i])

matrix = [
    [0, 1, 1],
    [1, 0, 0],
    [1, 0, 0]
]
top_degree(matrix)
","1.0"
"d752e481-f9e0-4d06-8ad4-ca4b16a1195f","def main():
    n = int(input())
    matrix = []
    for i in range(n):
        row = list(map(int, input().split()))
        matrix.append(row)

    degrees = []
    for i in range(n):
        degree = sum(matrix[i])
        degrees.append((i + 1, degree))

    for vertex, degree in degrees:
        print(vertex, degree)


if __name__ == ""__main__"":
    main()","1.0"
"d45974a2-6e4d-4a5b-a7d1-cf456bf9e2e1","
n = int(input())
graph = [[int(x) for x in input().split()] for _ in range(n)]
in_degrees = [0] * n
out_degrees = [0] * n
for i in range(n):
    for j in range(n):
        in_degrees[i] += graph[j][i]
        out_degrees[i] += graph[i][j]
for i in range(n):
    print(in_degrees[i], out_degrees[i])
","1.0"
"d45974a2-6e4d-4a5b-a7d1-cf456bf9e2e1","
def in_degree_out_degree(n, matrix):
    in_degree = [0]*n
    out_degree = [0]*n

    for i in range(n):
        for j in range(n):
            if matrix[i][j] == 1:
                out_degree[i] += 1
                in_degree[j] += 1

    for i in range(n):
        print(in_degree[i], out_degree[i])

n = int(input())
matrix = []
for _ in range(n):
    row = list(map(int, input().split()))
    matrix.append(row)

in_degree_out_degree(n, matrix)
","1.0"
"d45974a2-6e4d-4a5b-a7d1-cf456bf9e2e1","n = int(input())
matrix = [list(map(int, input().split())) for _ in range(n)]

for i in range(n):
    in_degree = 0
    out_degree = 0
    for j in range(n):
        if matrix[j][i] == 1:
            in_degree += 1
        if matrix[i][j] == 1:
            out_degree += 1
    print(f""{i + 1} {in_degree} {out_degree}"")","1.0"
"1b7a231c-acf2-4c20-87f1-8615e27d21df","
n = int(input())
a = [list(map(int, input().split())) for _ in range(n)]
ans = """"
for i in range(n):
    for j in range(i + 1, n):
        if a[i][j] != a[j][i]:
            ans = ""oriented""
            break
    if ans:
        break
print(ans if ans else ""not oriented"")
","1.0"
"1b7a231c-acf2-4c20-87f1-8615e27d21df","
def adj_matrix(n):
    matrix = []
    for _ in range(n):
        row = list(map(int, input().split()))
        if len(row) != n:
            raise ValueError(""Invalid input"")
        matrix.append(row)
    return matrix

def is_oriented(matrix):
    for row in matrix:
        for i, j in zip(range(len(row)), range(1, len(row))):
            if row[i] == 1 and row[j] == 1 and i != j:
                return False
    return True

n = int(input())
matrix = adj_matrix(n)
if is_oriented(matrix):
    print(""oriented"")
else:
    print(""not oriented"")
","1.0"
"1b7a231c-acf2-4c20-87f1-8615e27d21df","def is_oriented():
    n = int(input())
    matrix = []
    for i in range(n):
        row = list(map(int, input().split()))
        matrix.append(row)

    for i in range(n):
        for j in range(n):
            if matrix[i][j] != matrix[j][i]:
                print(""oriented"")
                return
    print(""not oriented"")

is_oriented()","1.0"
"7762ce71-62d8-4d9a-b192-d363f5ffc725","
[1,1,0],
[0,0,1],
[0,0,0]
","1.0"
"7762ce71-62d8-4d9a-b192-d363f5ffc725","
def transpose(n, graph):
    transposed = [[0]*n for _ in range(n)]

    for i in range(n):
        for j in range(n):
            if graph[j][i]:
                transposed[i][j] = 1

    return transposed

n = int(input())
graph = []
for _ in range(n):
    row = list(map(int, input().split()))
    graph.append(row)

transposed = transpose(n, graph)

for row in transposed:
    print(*row)
","1.0"
"7762ce71-62d8-4d9a-b192-d363f5ffc725","def transpose_graph(n, adjacency_matrix):
    transposed_matrix = [[0] * n for _ in range(n)]
    for i in range(n):
        for j in range(n):
            transposed_matrix[j][i] = adjacency_matrix[i][j]
    return transposed_matrix

def print_matrix(matrix):
    for row in matrix:
        print(' '.join(map(str, row)))

def main():
    n = int(input())
    adjacency_matrix = []
    for _ in range(n):
        row = list(map(int, input().split()))
        adjacency_matrix.append(row)
    transposed_matrix = transpose_graph(n, adjacency_matrix)
    print_matrix(transposed_matrix)

if __name__ == '__main__':
    main()","1.0"
"519d49f4-2044-4bec-8164-97ef458dc2c8","
n = int(input())
graph = [[int(x) for x in input().split()] for _ in range(n)]
for i in range(n):
    for j in range(n):
        graph[i][j] = 1 - graph[i][j]
for i in range(n):
    for j in range(n):
        print(graph[i][j], end=' ')
    print()
","1.0"
"519d49f4-2044-4bec-8164-97ef458dc2c8","
n = int(input())
matrix = []
for _ in range(n):
    row = list(map(int, input().split()))
    matrix.append(row)

inverse = [[0]*n for _ in range(n)]
for i in range(n):
    for j in range(n):
        inverse[i][j] = 1 if matrix[i][j] == 0 else 0

for row in inverse:
    print(*row)
","1.0"
"519d49f4-2044-4bec-8164-97ef458dc2c8","def inverse_graph():
    n = int(input())
    matrix = []
    for _ in range(n):
        row = list(map(int, input().split()))
        matrix.append(row)

    for i in range(n):
        for j in range(n):
            if i == j:
                print(0, end=' ')
            else:
                print(0 if matrix[i][j] else 1, end=' ')
        print()

inverse_graph()","1.0"
"35bc693b-1917-49ae-ad4d-bed0d5a22583","
n = int(input())
a = [[int(x) for x in input().split()] for _ in range(n)]
for k in range(n):
    for i in range(n):
        for j in range(n):
            if a[i][j] or a[i][k] and a[k][j]:
                a[i][j] = 1
for i in range(n):
    for j in range(n):
        print(a[i][j], end=' ')
    print()
","1.0"
"35bc693b-1917-49ae-ad4d-bed0d5a22583","
def power(m, n):
    square = [[0] * m for _ in range(m)]
    for i in range(m):
        for j in range(m):
            for k in range(m):
                if m[i][k] == 1:
                    for l in range(m):
                        square[j][l] += m[i][l] if m[k][l] < 2 else 0
    return square

n = int(input())
m = [list(map(int, input().split())) for _ in range(n)]
print(*(map(' '.join, power(m, m))), sep='\n')
","1.0"
"35bc693b-1917-49ae-ad4d-bed0d5a22583","def square_digraph(n, adj_matrix):
    result = [[0] * n for _ in range(n)]

    for i in range(n):
        for j in range(n):
            if adj_matrix[i][j] == 1:
                result[i][j] = 1
                for k in range(n):
                    if adj_matrix[j][k] == 1:
                        result[i][k] = 1

    return result

def main():
    n = int(input())
    adj_matrix = []

    for _ in range(n):
        row = list(map(int, input().split()))
        adj_matrix.append(row)

    squared_matrix = square_digraph(n, adj_matrix)

    for row in squared_matrix:
        print(' '.join(map(str, row)))

if __name__ == '__main__':
    main()","1.0"
"63fff392-7a26-4842-8308-8e12386127ed","
n, m = map(int, input().split())
matrix = []
for _ in range(n):
  matrix.append(list(map(int, input().split())))

result = []
for v in range(n):
  for w in range(n):
    if v != w:
      count = 0
      visited = [False] * n
      queue = [v]
      visited[v] = True
      while queue:
        curr = queue.pop(0)
        for next_vertex in range(n):
          if matrix[curr][next_vertex] == 1 and not visited[next_vertex]:
            queue.append(next_vertex)
            visited[next_vertex] = True
            count += 1
            if next_vertex == w and count == m:
              result.append((v + 1, w + 1))
              break

if result:
  for v, w in result:
    print(v, w)
else:
  print(""NO"")

","1.0"
"63fff392-7a26-4842-8308-8e12386127ed","
def reachable(n, m, graph):
    visited = [False] * n
    queue = [(0, [0])]

    while queue:
        step, path = queue.pop(0)
        if step == m:
            for i in range(n):
                if graph[path[-1]][i] == 1 and not visited[i]:
                    visited[i] = True
                    print(path[-1] + 1, i + 1)
        else:
            for i in range(n):
                if graph[path[-1]][i] == 1 and not visited[i]:
                    visited[i] = True
                    queue.append((step + 1, path + [i]))

    if not any(visited):
        print(""NO"")

n, m = map(int, input().split())
graph = []
for _ in range(n):
    row = list(map(int, input().split()))
    graph.append(row)
reachable(n, m, graph)
","1.0"
"63fff392-7a26-4842-8308-8e12386127ed","def matrix_power(matrix, power):
    result = [[0] * len(matrix) for _ in range(len(matrix))]
    for i in range(len(matrix)):
        result[i][i] = 1
    while power > 0:
        if power % 2 == 1:
            result = multiply_matrices(result, matrix)
        matrix = multiply_matrices(matrix, matrix)
        power //= 2
    return result

def multiply_matrices(matrix1, matrix2):
    result = [[0] * len(matrix2[0]) for _ in range(len(matrix1))]
    for i in range(len(matrix1)):
        for j in range(len(matrix2[0])):
            for k in range(len(matrix2)):
                result[i][j] += matrix1[i][k] * matrix2[k][j]
    return result

def main():
    n, m = map(int, input().split())
    matrix = []
    for _ in range(n):
        matrix.append(list(map(int, input().split())))
    result_matrix = matrix_power(matrix, m)
    pairs = []
    for i in range(n):
        for j in range(n):
            if result_matrix[i][j] == 1 and i != j:
                pairs.append((i+1, j+1))
    if not pairs:
        print(""NO"")
    else:
        for pair in pairs:
            print(pair[0], pair[1])

if __name__ == ""__main__"":
    main()","1.0"
"e5673478-3dd1-49d0-b1ca-49dfa6304570","
n = int(input())
a = [list(map(int, input().split())) for _ in range(n)]
u = n * [False]
ans = 'NO'
def dfs(v, p):
    global ans
    u[v] = True
    for i in range(n):
        if (a[v][i]==1) and (i!=p):
            if u[i]: ans = 'YES'
            else: dfs(i, v)
dfs(0, -1)
print(ans)
","1.0"
"e5673478-3dd1-49d0-b1ca-49dfa6304570","
def dfs(node, visited, rec_stack, adj_matrix, n):
    visited[node] = True
    rec_stack[n] = node

    for i in range(n):
        if adj_matrix[node][i] == 1 and not visited[i]:
            if dfs(i, visited, rec_stack, adj_matrix, n):
                return True

    rec_stack[n] = -1
    return False

n = int(input())
adj_matrix = []
for _ in range(n):
    row = list(map(int, input().split()))
    adj_matrix.append(row)

visited = [False] * n
rec_stack = [-1] * n

for node in range(n):
    if not visited[node]:
        if dfs(node, visited, rec_stack, adj_matrix, n):
            print(""YES"")
            break
else:
    print(""NO"")
","1.0"
"e5673478-3dd1-49d0-b1ca-49dfa6304570","def dfs(adj, visited, v, parent):
    visited[v] = True
    for u in range(len(adj)):
        if adj[v][u] == 1:
            if not visited[u]:
                if dfs(adj, visited, u, v):
                    return True
            else:
                if u != parent:
                    return True
    return False

def is_cycle(adj):
    visited = [False] * len(adj)
    for v in range(len(adj)):
        if not visited[v]:
            if dfs(adj, visited, v, -1):
                return True
    return False

def main():
    n = int(input())
    adj = []
    for _ in range(n):
        row = list(map(int, input().split()))
        adj.append(row)

    if is_cycle(adj):
        print(""YES"")
    else:
        print(""NO"")

if __name__ == ""__main__"":
    main()","1.0"
"614009a0-821e-497b-9a0b-07c0dbe033b8","
def dfs(graph, start, end, visited):
  visited[start] = True
  if start == end:
    return True
  for neighbor in range(len(graph)):
    if graph[start][neighbor] == 1 and not visited[neighbor]:
      if dfs(graph, neighbor, end, visited):
        return True
  return False

n, m = map(int, input().split())
graph = []
for _ in range(n):
  graph.append(list(map(int, input().split())))
for _ in range(m):
  start, end = map(int, input().split())
  visited = [False] * n
  if dfs(graph, start - 1, end - 1, visited):
    print('YES')
  else:
    print('NO')
","1.0"
"614009a0-821e-497b-9a0b-07c0dbe033b8","
def dfs(v, w, visited, graph):
    visited[v] = True
    if v == w:
        return True
    for i in range(len(graph[v])):
        if graph[v][i] == 1 and not visited[i]:
            if dfs(i, w, visited, graph):
                return True
    return False

n, m = map(int, input().split())
graph = []
for _ in range(n):
    row = list(map(int, input().split()))
    graph.append(row)

for _ in range(m):
    v, w = map(int, input().split())
    visited = [False] * n
    if dfs(v, w, visited, graph):
        print(""YES"")
    else:
        print(""NO"")
","1.0"
"614009a0-821e-497b-9a0b-07c0dbe033b8","def dfs(graph, start, end, visited):
    if start == end:
        return True
    visited[start] = True
    for i in range(len(graph)):
        if graph[start][i] == 1 and not visited[i]:
            if dfs(graph, i, end, visited):
                return True
    return False

n, m = map(int, input().split())
graph = []
for i in range(n):
    graph.append(list(map(int, input().split())))
for i in range(m):
    v, w = map(int, input().split())
    visited = [False] * n
    if dfs(graph, v - 1, w - 1, visited):
        print('YES')
    else:
        print('NO')","1.0"
"e9f3df82-446a-424e-a07b-3c77daa739f2","
n = int(input())
adj = [[] for i in range(n)]
for i in range(n):
    adj[i] = [int(x) for x in input().split()]
vis = [False] * n
q = [1]
ans = []
while q:
    v = q.pop(0)
    if vis[v - 1]:
        continue
    vis[v - 1] = True
    ans.append(v)
    for i in range(n):
        if adj[v - 1][i] == 1 and not vis[i]:
            q.append(i + 1)
print("" "".join(map(str, ans)))
","1.0"
"e9f3df82-446a-424e-a07b-3c77daa739f2","
def bfs(adj, visited, queue, n):
    visited[1] = True
    queue.append(1)

    while queue:
        current = queue.pop(0)
        for neighbor in range(2, n+1):
            if adj[current][neighbor] == 1 and not visited[neighbor]:
                visited[neighbor] = True
                queue.append(neighbor)

    return [str(i) for i in visited[2:]]

n = int(input())
adj = []
visited = [False] * (n+1)
queue = []

for _ in range(n):
    row = list(map(int, input().split()))
    adj.append(row)

print(*bfs(adj, visited, queue, n))
","1.0"
"e9f3df82-446a-424e-a07b-3c77daa739f2","def bfs(graph, start):
    visited = [False] * len(graph)
    queue = [start]
    result = []

    while queue:
        vertex = queue.pop(0)
        if not visited[vertex]:
            visited[vertex] = True
            result.append(vertex + 1)
            for i in range(len(graph)):
                if graph[vertex][i] == 1 and not visited[i]:
                    queue.append(i)

    return result


def main():
    n = int(input())
    graph = []
    for _ in range(n):
        row = list(map(int, input().split()))
        graph.append(row)

    result = bfs(graph, 0)
    print(*result)


if __name__ == ""__main__"":
    main()","1.0"
"dfcd4c48-6f3f-4a53-a03f-e5abebfebdae","
N = int(input())
paths = [[int(i) for i in input().split()] for _ in range(N)]
for k in range(N):
    for i in range(N):
        for j in range(N):
            if paths[i][j] == 0 or paths[i][k] == 0 or paths[k][j] == 0: continue
            d = paths[i][k] + paths[k][j]
            if not paths[i][j] or paths[i][j] > d: paths[i][j] = d
for i in paths: print(' '.join(map(str, i)))
u, v = map(int, input().split())
print(paths[u - 1][v - 1] if paths[u - 1][v - 1] else 'NO')
","1.0"
"dfcd4c48-6f3f-4a53-a03f-e5abebfebdae","
def shortest_path(n, graph, v, w):
    visited = [False] * n
    dist = [float('inf')] * n
    dist[v] = 0

    for _ in range(n - 1):
        min_dist = float('inf')
        u = -1
        for i in range(n):
            if not visited[i] and dist[i] < min_dist:
                min_dist = dist[i]
                u = i

        visited[u] = True
        for k in range(n):
            if graph[u][k] != 0 and not visited[k]:
                new_dist = dist[u] + graph[u][k]
                if new_dist < dist[k]:
                    dist[k] = new_dist

    if dist[w] == float('inf'):
        return ""NO""
    else:
        return dist[w]

n = int(input())
graph = []
for _ in range(n):
    row = list(map(int, input().split()))
    graph.append(row)
v, w = map(int, input().split())
print(shortest_path(n, graph, v, w))
","1.0"
"dfcd4c48-6f3f-4a53-a03f-e5abebfebdae","def floyd_warshall(matrix):
    n = len(matrix)
    for k in range(n):
        for i in range(n):
            for j in range(n):
                if matrix[i][k] + matrix[k][j] < matrix[i][j]:
                    matrix[i][j] = matrix[i][k] + matrix[k][j]
    return matrix

n = int(input())
matrix = []
for _ in range(n):
    matrix.append(list(map(int, input().split())))

v, w = map(int, input().split())

shortest_path = floyd_warshall(matrix)[v-1][w-1]

if shortest_path == float('inf'):
    print(""NO"")
else:
    print(shortest_path)","1.0"
"945dd62f-c5a3-4a5c-888f-d188a7c8cac3","
def dijkstra(graph, start):
  n = len(graph)
  dist, prev = [float('inf')] * n, [None] * n
  dist[start] = 0
  visited = [False] * n
  unvis = set(range(n))
  while unvis:
    u = min(unvis, key=lambda i: dist[i])
    visited[u] = True
    unvis.remove(u)
    for v in range(n):
      if graph[u][v] != -1 and not visited[v]:
        new_dist = dist[u] + graph[u][v]
        if new_dist < dist[v]:
          dist[v] = new_dist
          prev[v] = u
  return dist, prev

n = int(input())
graph = [list(map(int, input().split())) for _ in range(n)]
start = int(input()) - 1
dist, prev = dijkstra(graph, start)
for i in range(n):
  if i != start:
    print(i + 1, dist[i] if dist[i] != float('inf') else 'NO')
","1.0"
"945dd62f-c5a3-4a5c-888f-d188a7c8cac3","
def dijkstra(n, graph, start):
    dist = [float('inf')] * n
    dist[start] = 0
    visited = [False] * n

    for _ in range(n):
        min_dist = float('inf')
        u = -1
        for i in range(n):
            if not visited[i] and dist[i] < min_dist:
                min_dist = dist[i]
                u = i

        visited[u] = True

        for v in range(n):
            if graph[u][v] != -1 and not visited[v]:
                new_dist = dist[u] + graph[u][v]
                if new_dist < dist[v]:
                    dist[v] = new_dist

    for i in range(n):
        if dist[i] == float('inf'):
            print(f'{i} NO')
        else:
            print(f'{i} {dist[i]}')

n = int(input())
graph = []
for _ in range(n):
    row = list(map(int, input().split()))
    graph.append(row)
start = int(input())
dijkstra(n, graph, start)
","1.0"
"945dd62f-c5a3-4a5c-888f-d188a7c8cac3","def dijkstra(graph, start):
    n = len(graph)
    visited = [False] * n
    distances = [float('inf')] * n
    distances[start] = 0

    for _ in range(n):
        min_distance = float('inf')
        u = -1
        for i in range(n):
            if not visited[i] and distances[i] < min_distance:
                min_distance = distances[i]
                u = i

        visited[u] = True

        for v in range(n):
            if graph[u][v] != -1 and not visited[v]:
                new_distance = distances[u] + graph[u][v]
                if new_distance < distances[v]:
                    distances[v] = new_distance

    return distances


n = int(input())
graph = []
for _ in range(n):
    row = list(map(int, input().split()))
    graph.append(row)

start = int(input()) - 1

distances = dijkstra(graph, start)

for i, distance in enumerate(distances):
    if distance == float('inf'):
        print(f""{i + 1} NO"")
    else:
        print(f""{i + 1} {distance}"")","1.0"
"3e320d9a-cc8f-4ee0-867c-a570153011f6","
s = input().strip()
ans = 0
n = len(s)
for i in range(n):
    if s[i] == '1':
        ans |= (1 << (n - i - 1))
print(ans)
","1.0"
"3e320d9a-cc8f-4ee0-867c-a570153011f6","
def binary_to_decimal(binary_num):
    decimal_num = 0
    power = 0
    for digit in reversed(binary_num):
        decimal_num += int(digit) * (2 ** power)
        power += 1
    return decimal_num

binary_input = input()
print(binary_to_decimal(binary_input))
","1.0"
"3e320d9a-cc8f-4ee0-867c-a570153011f6","def binary_to_decimal(binary):
    decimal = 0
    for i in range(len(binary)):
        decimal += int(binary[i]) * (2 ** (len(binary) - i - 1))
    return decimal

binary = input()
decimal = binary_to_decimal(binary)
print(decimal)","1.0"
"66cdaa4c-6fe2-43ac-9cc8-08f59916608f","
F, S = map(int, input().split())
print(F + S, 6 * S + 2 * F)
","1.0"
"66cdaa4c-6fe2-43ac-9cc8-08f59916608f","
a = int(input())
b = int(input())
heads = a * 2
paws = 4 * a + 8 * b
print(heads, paws)
","1.0"
"66cdaa4c-6fe2-43ac-9cc8-08f59916608f","a = int(input())
b = int(input())

x = a + b
y = a * 6 + b * 8

print(x, y)","1.0"
"cb96b982-37a0-487b-8b5c-67d27e6f7094","h = k // 60
m = k % 60
print(h, m)","1.0"
"cb96b982-37a0-487b-8b5c-67d27e6f7094","
h, m = divmod(k, 60)
print(f'{h} {m}')
","1.0"
"cb96b982-37a0-487b-8b5c-67d27e6f7094","def main():
    k = int(input())
    h = k // 60
    m = k % 60
    print(h, m)

if __name__ == ""__main__"":
    main()","1.0"
"c9e1ff81-5755-43cb-8439-49ef952f622a","
a, b = map(int, input().split())
if a > b:
    print(a)
else:
    print(b)
","1.0"
"c9e1ff81-5755-43cb-8439-49ef952f622a","
a, b = map(int, input().split())
if a > b:
 print(a)
else:
 print(b)
","1.0"
"c9e1ff81-5755-43cb-8439-49ef952f622a","a, b = map(int, input().split())

if a > b:
    print(a)
else:
    print(b)","1.0"
"d658f071-1e55-45e3-b3ad-e9384d03b9b9","
a, b, c = map(int, input().split())
print((a + b + c) // 3)
","1.0"
"d658f071-1e55-45e3-b3ad-e9384d03b9b9","
a, b, c = map(int, input().split())
if a == b == c:
 print(a)
else:
 print((a + b + c) / 3)
","1.0"
"d658f071-1e55-45e3-b3ad-e9384d03b9b9","a, b, c = map(int, input().split())

if a > b:
    if b > c:
        print(b)
    elif a > c:
        print(c)
    else:
        print(a)
else:
    if a > c:
        print(a)
    elif b > c:
        print(c)
    else:
        print(b)","1.0"
"aab4a01c-6efb-47a1-8fa2-2ea3e02303c7","n = int(input())
m = int(input())
print(m // n + (m % n != 0))
","1.0"
"aab4a01c-6efb-47a1-8fa2-2ea3e02303c7","
n = int(input())
m = int(input())
days = m // n
if m % n != 0:
 days += 1
print(days)
","1.0"
"aab4a01c-6efb-47a1-8fa2-2ea3e02303c7","n = int(input())
m = int(input())

days = m // n

if m % n != 0:
    days += 1

print(days)","1.0"
"0ef5465b-370a-4084-bd37-fb4d3b6b398a","
a=input()
print(int(a[:-1])
","1.0"
"0ef5465b-370a-4084-bd37-fb4d3b6b398a","
def tens_number(n):
    return (n // 10) * 10

number = input()
print(tens_number(int(number)))
","1.0"
"0ef5465b-370a-4084-bd37-fb4d3b6b398a","def tens_number(num):
    return (num // 10) % 10

number = int(input())
print(tens_number(number))","1.0"
"180b3b37-5ed9-4f3c-9300-48ae0b5121fa","a, b, l, N = map(int, input().split())
print(2 * N * (a + b) + l)","1.0"
"180b3b37-5ed9-4f3c-9300-48ae0b5121fa","
def laces(a, b, l, N):
    return 2 * (N - 1) * (a + b) + l

a, b, l, N = map(int, input().split())
print(laces(a, b, l, N))
","1.0"
"180b3b37-5ed9-4f3c-9300-48ae0b5121fa","Here's the Python code to solve the task without any external imports:

def lace_length(a, b, l, N):
    vertical_segments = (N - 1) * 2
    horizontal_segments = N - 1
    diagonal_segments = N

    total_length = (vertical_segments * a) + (horizontal_segments * b) + (diagonal_segments * l)
    return total_length

a = int(input())
b = int(input())
l = int(input())
N = int(input())

result = lace_length(a, b, l, N)
print(result)","1.0"
"11f5282e-266d-41b6-b87e-01642625b2bd","
n = int(input())
print(bin(n)[2:])
print(oct(n)[2:])
print(hex(n)[2:].upper())
","1.0"
"11f5282e-266d-41b6-b87e-01642625b2bd","
def dec_to_bin(n):
    return bin(n)[2:]

def dec_to_oct(n):
    return oct(n)[2:]

def dec_to_hex(n):
    return hex(n)[2:]

num = int(input())
print(f""{num} in binary: {dec_to_bin(num)}"")
print(f""{num} in octal: {dec_to_oct(num)}"")
print(f""{num} in hexadecimal: {dec_to_hex(num)}"")
","1.0"
"11f5282e-266d-41b6-b87e-01642625b2bd","def decimal_to_binary(decimal):
    binary = ''
    while decimal > 0:
        binary = str(decimal % 2) + binary
        decimal //= 2
    return binary

def decimal_to_octal(decimal):
    octal = ''
    while decimal > 0:
        octal = str(decimal % 8) + octal
        decimal //= 8
    return octal

def decimal_to_hexadecimal(decimal):
    hexadecimal = ''
    hex_digits = '0123456789ABCDEF'
    while decimal > 0:
        hexadecimal = hex_digits[decimal % 16] + hexadecimal
        decimal //= 16
    return hexadecimal

decimal = int(input())
binary = decimal_to_binary(decimal)
octal = decimal_to_octal(decimal)
hexadecimal = decimal_to_hexadecimal(decimal)

print(binary)
print(octal)
print(hexadecimal)","1.0"
"9428daf6-0093-444b-a8fb-cef9003392e2","a = int(input())
b = int(input())
c = int(input())
if a<=b and a<=c:
    print(a)
elif b<=a and b<=c:
    print(b)
else:
    print(c)","1.0"
"9428daf6-0093-444b-a8fb-cef9003392e2","
a = int(input())
b = int(input())
c = int(input())

if a <= b and a <= c:
 print(a)
elif b <= a and b <= c:
 print(b)
else:
 print(c)
","1.0"
"9428daf6-0093-444b-a8fb-cef9003392e2","a = int(input())
b = int(input())
c = int(input())

if a < b:
    if a < c:
        print(a)
    else:
        print(c)
else:
    if b < c:
        print(b)
    else:
        print(c)","1.0"
"58d6743b-8cff-47a7-bd29-e0ba865928f3","
n, i, j = map(int, input().split())
distance1 = abs(i - j)
distance2 = n - abs(i - j)
print(min(distance1, distance2) - 1)
","1.0"
"58d6743b-8cff-47a7-bd29-e0ba865928f3","
def metro(n, i, j):
    if abs(i - j) == 1:
        return 0
    elif abs(i - j) > 2:
        return abs(i - j) - 1
    else:
        return 2

n, i, j = map(int, input().split())
print(metro(n, i, j))
","1.0"
"58d6743b-8cff-47a7-bd29-e0ba865928f3","def main():
    n, i, j = map(int, input().split())
    distance = abs(i - j)
    result = min(distance, n - distance) - 1
    print(result)

if __name__ == ""__main__"":
    main()","1.0"
"b8c265d0-999d-49e2-a5fd-eed95708bf97","
n=int(input())
a=[]
for i in range(n):
    a.append(list(map(int,input().split())))
for k in range(n):
  for i in range(n):
    for j in range(n):
      a[i][j]=min(a[i][j],a[i][k]+a[k][j])
      if a[i][j]==-1: a[i][j]=float('inf')
for i in range(n):
  for j in range(n):
    if a[i][j]==float('inf'): a[i][j}=-1
    print(a[i][j],end=' ')
  print()
","1.0"
"b8c265d0-999d-49e2-a5fd-eed95708bf97","
def floyd_warshall(graph):
    n = len(graph)
    inf = float('inf')
    dist = graph[:]

    for k in range(n):
        for i in range(n):
            for j in range(n):
                if dist[i][k] != inf and dist[k][j] != inf:
                    dist[i][j] = min(dist[i][j], dist[i][k] + dist[k][j])

    return dist

n = int(input())
graph = []
for _ in range(n):
    row = list(map(int, input().split()))
    graph.append(row)

result = floyd_warshall(graph)
for row in result:
    print(*row)
","1.0"
"b8c265d0-999d-49e2-a5fd-eed95708bf97","def floyd_warshall(n, graph):
    for k in range(n):
        for i in range(n):
            for j in range(n):
                if graph[i][k] != -1 and graph[k][j] != -1:
                    if graph[i][j] == -1 or graph[i][k] + graph[k][j] < graph[i][j]:
                        graph[i][j] = graph[i][k] + graph[k][j]
    return graph

n = int(input())
graph = []
for _ in range(n):
    row = list(map(int, input().split()))
    graph.append(row)

result = floyd_warshall(n, graph)
for row in result:
    print(*row)","1.0"
"0c04c2f7-1548-4fa7-afc6-5ef064ea3a9f","
a = int(input())
print(int(str(a)[0] + str(a)[2]))
","1.0"
"0c04c2f7-1548-4fa7-afc6-5ef064ea3a9f","
def remove_second_digit(n):
    return str(int(str(n)[0]) * 10 + int(str(n)[2]))

n = input()
print(remove_second_digit(n))
","1.0"
"0c04c2f7-1548-4fa7-afc6-5ef064ea3a9f","def delete_digit(a):
    return a // 100 * 10 + a % 10

a = int(input())
print(delete_digit(a))","1.0"
"1c8423df-d978-4e69-b8d5-886b1c2c745b","m = int(input())
n = int(input())
n += 30
if n >= 60:
  m += 1
  n -= 60
if m >= 24:
  m -= 24
print(m, n)","1.0"
"1c8423df-d978-4e69-b8d5-886b1c2c745b","
m = int(input())
n = int(input())
h = (m + 1 + n // 60) % 24
v = (60 * (m + 1) + n) % 60
print(f'{h} {v}')
","1.0"
"1c8423df-d978-4e69-b8d5-886b1c2c745b","m = int(input())
n = int(input())

n += 30
if n >= 60:
    n -= 60
    m += 1

m += 1
if m >= 24:
    m -= 24

print(m, n)","1.0"
"b85b4d55-02c5-4f5b-9c58-538068bf5699","
a, b, c = map(int, input().split())
print((a + b + c + 1) // 2)
","1.0"
"b85b4d55-02c5-4f5b-9c58-538068bf5699","
students = list(map(int, input().split()))
desks = sum(students)
desks += sum(students[i] % 2 for i in range(3))
print(desks)
","1.0"
"b85b4d55-02c5-4f5b-9c58-538068bf5699","def main():
    a, b, c = map(int, input().split())
    desks = (a + 1) // 2 + (b + 1) // 2 + (c + 1) // 2
    print(desks)

if __name__ == ""__main__"":
    main()","1.0"
"5773ddc5-745f-44f7-aab7-59268bb9c5cd","
h1, m1, s1 = map(int, input().split())
h2, m2, s2 = map(int, input().split())
print(h2 * 3600 + m2 * 60 + s2 - (h1 * 3600 + m1 * 60 + s1))
","1.0"
"5773ddc5-745f-44f7-aab7-59268bb9c5cd","
h1, m1, s1 = map(int, input().split())
h2, m2, s2 = map(int, input().split())

total_seconds = (h2 * 3600 + m2 * 60 + s2) - (h1 * 3600 + m1 * 60 + s1)
print(total_seconds)
","1.0"
"5773ddc5-745f-44f7-aab7-59268bb9c5cd","hours1, minutes1, seconds1 = map(int, input().split())
hours2, minutes2, seconds2 = map(int, input().split())

total_seconds1 = hours1 * 3600 + minutes1 * 60 + seconds1
total_seconds2 = hours2 * 3600 + minutes2 * 60 + seconds2

time_difference = total_seconds2 - total_seconds1

print(time_difference)","1.0"
"bbb640ed-435c-4dc9-8625-87b81a5a9b22","
x = float(input())
y = float(input())
if x > 0 and y > 0:
    print(1)
elif x < 0 and y > 0:
    print(2)
elif x < 0 and y < 0:
    print(3)
elif x > 0 and y < 0:
    print(4)
","1.0"
"bbb640ed-435c-4dc9-8625-87b81a5a9b22","
def quarter(x, y):
    if x > 0 and y > 0:
        return '1'
    elif x < 0 and y > 0:
        return '2'
    elif x < 0 and y < 0:
        return '3'
    else:
        return '4'

x, y = map(int, input().split())
print(quarter(x, y))
","1.0"
"bbb640ed-435c-4dc9-8625-87b81a5a9b22","def main():
    x, y = map(int, input().split())
    if x > 0 and y > 0:
        print(1)
    elif x < 0 and y > 0:
        print(2)
    elif x < 0 and y < 0:
        print(3)
    else:
        print(4)

if __name__ == ""__main__"":
    main()","1.0"
"3bda5701-c742-4f44-9bdb-d4b772de2705","
a, b = map(int, input().split())
m, k = map(int, input().split())
print('YES' if a<=m and b<=k else 'NO')
","1.0"
"3bda5701-c742-4f44-9bdb-d4b772de2705","
a, b = map(int, input().split())
m, k = map(int, input().split())
if a <= m and b <= k:
 print(""YES"")
else:
 print(""NO"")
","1.0"
"3bda5701-c742-4f44-9bdb-d4b772de2705","a, b = map(int, input().split())
m, k = map(int, input().split())

if a <= m and b <= k or a <= k and b <= m:
    print(""YES"")
else:
    print(""NO"")","1.0"
"177f714d-8f2d-4630-8a45-86b5a1799099","
a, b, h, m, k = map(int, input().split())
print(""YES"" if (a <= m and (b <= k or h <= k)) or (b <= m and (a <= k or h <= k)) else ""NO"")
","1.0"
"177f714d-8f2d-4630-8a45-86b5a1799099","
a, b, h, n, m = map(int, input().split())
if max(a, b) <= m and h <= m:
 print(""YES"")
elif max(a, b) <= n and h + n <= m:
 print(""YES"")
else:
 print(""NO"")
","1.0"
"177f714d-8f2d-4630-8a45-86b5a1799099","def main():
    a, b, h = map(int, input().split())
    n, m = map(int, input().split())

    if a <= n and b <= m or a <= m and b <= n:
        print(""YES"")
    else:
        print(""NO"")

if __name__ == ""__main__"":
    main()","1.0"
"e51d6308-c0be-44b6-ba3d-c238a0d8e4a1","k,l,n,s=map(int,input().split())
print(""YES""if k+s*n>=l+s*n/2 else ""NO"")","1.0"
"e51d6308-c0be-44b6-ba3d-c238a0d8e4a1","
K, L, N, S = map(int, input().split())
competitor_lead = L - K
remaining_games_for_lead = N
points_per_game = S

while competitor_lead > 0 and remaining_games_for_lead > 0:
    competitor_lead -= points_per_game
    remaining_games_for_lead -= 1

if competitor_lead <= 0:
    print(""YES"")
else:
    print(""NO"")
","1.0"
"e51d6308-c0be-44b6-ba3d-c238a0d8e4a1","def main():
    K = int(input())
    L = int(input())
    N = int(input())
    S = int(input())

    Steph_points = K + N * S
    competitor_points = L + N * (S // 2)

    if Steph_points >= competitor_points:
        print(""YES"")
    else:
        print(""NO"")

if __name__ == ""__main__"":
    main()","1.0"
"39cd4d3c-2ead-4da6-a322-b3be4be280c7","m,s=map(int,input().split())
p,q=map(int,input().split())
t=(m*60+s)//24
if(48*60-m*60-s)//24>0:
    p+=3*((48*60-m*60-s)//24)
if(48*60-m*60-s)//24>0:
    q+=2*((48*60-m*60-s)//24)
print(p,q)","1.0"
"39cd4d3c-2ead-4da6-a322-b3be4be280c7","
m, s = map(int, input().split())
p, q = map(int, input().split())

gsw_attacks = m // 4 + (m % 4 != 0 and 1)
gsw_points = gsw_attacks * 3

ec_attacks = (48 - m) // 4 + (48 - m % 4 != 0 and 1)
ec_points = 2 * ec_attacks

print(gsw_points + p, ec_points + q)
","1.0"
"39cd4d3c-2ead-4da6-a322-b3be4be280c7","def main():
    m, s = map(int, input().split())
    p, q = map(int, input().split())

    total_seconds = m * 60 + s
    remaining_seconds = 48 * 60 - total_seconds

    warriors_score = p
    celtics_score = q

    while remaining_seconds >= 24:
        warriors_score += 3
        remaining_seconds -= 24

        if remaining_seconds < 24:
            break

        celtics_score += 2
        remaining_seconds -= 24

    print(warriors_score, celtics_score)

if __name__ == ""__main__"":
    main()","1.0"
"9cf4d5af-4fda-4443-9613-82dff00ab963","
a, b = 0, 0
for _ in range(4):
    A, B = map(int, input().split())
    a += A
    b += B
print(a == b and ""DRAW"" or 1 if a > b else 2)
","1.0"
"9cf4d5af-4fda-4443-9613-82dff00ab963","
a, b = map(int, input().split())
scores = [a, b]
for _ in range(3):
    a, b = map(int, input().split())
    scores.append(a)
    scores.append(b)

if scores.count(max(scores)) > 1:
    print(""DRAW"")
else:
    print(scores.index(max(scores)) + 1)
","1.0"
"9cf4d5af-4fda-4443-9613-82dff00ab963","def main():
    team1_score = 0
    team2_score = 0

    for _ in range(4):
        a, b = map(int, input().split())
        team1_score += a
        team2_score += b

    if team1_score > team2_score:
        print(1)
    elif team2_score > team1_score:
        print(2)
    else:
        print(""DRAW"")

if __name__ == ""__main__"":
    main()","1.0"
"84118453-37c4-4256-a8f0-5dc2707d4e35","
dec = int(input())
res = """"
while dec != 0:
    res = str(dec % 2) + res
    dec //= 2
print(res)
","1.0"
"84118453-37c4-4256-a8f0-5dc2707d4e35","
def dec_to_bin(n):
    if n == 0:
        return '0'
    bin_num = ''
    while n > 0:
        bin_num = str(n % 2) + bin_num
        n //= 2
    return bin_num

number = int(input())
print(dec_to_bin(number))
","1.0"
"84118453-37c4-4256-a8f0-5dc2707d4e35","def decimal_to_binary(decimal):
    binary = """"
    while decimal > 0:
        binary = str(decimal % 2) + binary
        decimal //= 2
    return binary

decimal_number = int(input())
print(decimal_to_binary(decimal_number))","1.0"
"74a21b08-f61e-495f-a883-f02328dc4dae","
a = int(input())
s = int(a / 100) + int((a % 100) / 10) + int(a % 10)
print(s)
","1.0"
"74a21b08-f61e-495f-a883-f02328dc4dae","
def sum_digits(n):
    return sum(int(digit) for digit in str(n))

a = int(input())
s = sum_digits(a)
print(s)
","1.0"
"74a21b08-f61e-495f-a883-f02328dc4dae","a = int(input())
s = 0
while a > 0:
    s += a % 10
    a //= 10
print(s)","1.0"
"4b1be5b6-131a-4853-bf20-dadf3bbd10d9","
h, a, b = int(input()), int(input()), int(input())
day = 1
total_climbed = 0
while total_climbed < h:
  total_climbed += a
  if total_climbed >= h:
    break
  total_climbed -= b
  day += 1
print(day)
","1.0"
"4b1be5b6-131a-4853-bf20-dadf3bbd10d9","
def snail(h, a, b):
    days = 0
    height = 0
    while height < h:
        height += a
        if height > h:
            height -= (height - h)
        days += 1
        height -= b
    return days

h, a, b = map(int, input().split())
print(snail(h, a, b))
","1.0"
"4b1be5b6-131a-4853-bf20-dadf3bbd10d9","def snail_crawl(h, a, b):
    day = 0
    height = 0
    while height < h:
        day += 1
        height += a
        if height < h:
            height -= b
    return day

h = int(input())
a = int(input())
b = int(input())

print(snail_crawl(h, a, b))","1.0"
"2488a6a1-fc84-46c8-bd28-ea8791f78298","a = int(input())
b = int(input())
n = int(input())

cost = a * n + b * n // 100
kop = b * n % 100

print(cost, kop)","1.0"
"2488a6a1-fc84-46c8-bd28-ea8791f78298","
a, b, n = map(int, input().split())
cost_rubles = a * n
cost_kopecks = b * n
if cost_kopecks >= 100:
 cost_rubles += 1
 cost_kopecks -= 100
print(cost_rubles, cost_kopecks)
","1.0"
"2488a6a1-fc84-46c8-bd28-ea8791f78298","a, b, n = map(int, input().split())

total_kopecks = b * n + a * n * 100
total_rubles = total_kopecks // 100
remaining_kopecks = total_kopecks % 100

print(total_rubles, remaining_kopecks)","1.0"
"5b2cb964-e915-4506-b4fe-22b78644939c","a = int(input())
b = int(input())
c = int(input())
if a == b and a == c:
  print(3)
elif a == b or a == c or b == c:
  print(2)
else:
  print(0)
","1.0"
"5b2cb964-e915-4506-b4fe-22b78644939c","
a, b, c = map(int, input().split())
if a == b and b == c:
 print(3)
elif (a == b and a != c) or (b == c and a != b) or (a == c and b != c):
 print(2)
else:
 print(0)
","1.0"
"5b2cb964-e915-4506-b4fe-22b78644939c","a = int(input())
b = int(input())
c = int(input())

if a == b == c:
    print(3)
elif a == b or b == c or a == c:
    print(2)
else:
    print(0)","1.0"
"03a8a5e2-f2b8-4e7d-b0ec-acf8aaa72e29","
s = input()
lastk = -1
lastl = -1
ans = 0
cur = 0
for i in range(len(s)):
    if s[i] == 'K' :
        if i - lastl > 1 and lastk != -1:
            cur = i - lastk
        else:
            cur = 0
        lastk = i
    elif s[i] == 'L':
        if i - lastk > 1 and lastl != -1:
            cur = i - lastl
        else:
            cur = 0
        lastl = i
    ans = max(cur, ans)
print(ans)
","1.0"
"03a8a5e2-f2b8-4e7d-b0ec-acf8aaa72e29","
def find_longest_chain(s):
    stack, count = [], 0
    for c in s:
        if c == 'K' or (c == 'L' and stack and stack[-1] == 'L'):
            while stack and (stack[-1] == 'K' or stack[-1] == 'L'):
                stack.pop()
        else:
            stack.append(c)
        count = max(count, len(stack))
    return count

text = input()
print(find_longest_chain(text))
","1.0"
"03a8a5e2-f2b8-4e7d-b0ec-acf8aaa72e29","def find_max_chain_length(s):
    max_length = 0
    current_length = 0
    for i in range(len(s)):
        if s[i] not in ['K', 'L']:
            current_length += 1
        else:
            max_length = max(max_length, current_length)
            current_length = 0
    max_length = max(max_length, current_length)
    return max_length

s = input()
print(find_max_chain_length(s))","1.0"
"4d88fcc7-08f9-47c3-86d4-9f59b6f127fa","
def find_max_substring(text):
    max_length = 0
    current_length = 0
    for i in range(len(text)):
        if text[i:i + 4] == ""XZZY"":
            current_length = 0
        else:
            current_length += 1
            max_length = max(max_length, current_length)
    return max_length

text = input()
print(find_max_substring(text))
","1.0"
"4d88fcc7-08f9-47c3-86d4-9f59b6f127fa","
def max_consecutive(s):
    count = 0
    max_count = 0
    for i in range(len(s)):
        if s[i] != 'X' and (i == 0 or s[i-1] != 'Z'):
            count += 1
        elif s[i] == 'Z' and s[i-1] == 'X' and count > max_count:
            max_count = count
        elif s[i] == 'Y' and s[i-1] == 'Z' and count > max_count:
            max_count = count
        else:
            count = 0
    return max_count

s = input()
print(max_consecutive(s))
","1.0"
"4d88fcc7-08f9-47c3-86d4-9f59b6f127fa","def max_consecutive_without_substring(s):
    max_count = 0
    current_count = 0
    i = 0
    while i < len(s):
        if s[i:i+4] == 'XZZY':
            max_count = max(max_count, current_count)
            current_count = 0
            i += 4
        else:
            current_count += 1
            i += 1
    max_count = max(max_count, current_count)
    return max_count

s = input()
print(max_consecutive_without_substring(s))","1.0"
"540d34fd-8182-42ac-91f4-8951c353f470","
a = 0
b = 0
for x in input():
    if x != 'E':
        b += 1
    else:
        b = 0
    if x == 'A':
        a += 1
    if b >= 3 and a >= 3:
        if b > a:
            a = b
    if a > b:
        b = a
print(a)
","1.0"
"540d34fd-8182-42ac-91f4-8951c353f470","
def max_consecutive(s):
    a_count, e_count, max_len, current_len = 0, 0, 0
    for char in s:
        if char == 'A':
            a_count += 1
            if a_count >= 3:
                current_len += 1
        elif char == 'E':
            a_count = 0
            current_len = 0
        else:
            current_len = 0
        max_len = max(max_len, current_len)
    return max_len

with open('input.txt', 'r') as f:
    data = f.readline().strip()
    print(max_consecutive(data))
","1.0"
"540d34fd-8182-42ac-91f4-8951c353f470","def max_consecutive_chars(s):
    max_count = 0
    current_count = 0
    a_count = 0

    for c in s:
        if c == 'A':
            a_count += 1
            current_count += 1
        elif c != 'E':
            current_count += 1

        if a_count >= 3 and current_count > max_count:
            max_count = current_count

        if c == 'E':
            current_count = 0
            a_count = 0

    return max_count

s = input()
print(max_consecutive_chars(s))","1.0"
"836710cd-fa04-4afc-9ed7-2652ed8894a3","
n = input()
a = []
for i in range(1, len(n)):
    if n[i-1] == 'A':
        a.append(n[i])
b = []
for i in a:
    if b.count(i) < a.count(i):
        b = [i]
    elif b.count(i) == a.count(i):
        b.append(i)
print(b[0])
","1.0"
"836710cd-fa04-4afc-9ed7-2652ed8894a3","
with open('input.txt', 'r') as f:
    text = f.readline().upper()
    count = {}
    for i in range(1, len(text)):
        if text[i] in count:
            count[text[i]] += 1
        else:
            count[text[i]] = 1
    max_count = max(count.values())
    max_chars = [k for k, v in count.items() if v == max_count]
    print(max_chars[0])
","1.0"
"836710cd-fa04-4afc-9ed7-2652ed8894a3","def most_frequent_after_a(s):
    count = {}
    prev = ''
    for c in s:
        if prev == 'A':
            count[c] = count.get(c, 0) + 1
        prev = c
    return max(count, key=count.get) if count else ''

s = input()
print(most_frequent_after_a(s))","1.0"
"ddff994a-fbde-4c58-a91b-9e3a3872e088","
text = input()
char_counts = {}
for i in range(1, len(text) - 1):
  if text[i - 1] == text[i + 1]:
    pair = text[i - 1] + text[i] + text[i + 1]
    if pair in char_counts:
      char_counts[pair] += 1
    else:
      char_counts[pair] = 1
max_count = 0
most_frequent_char = ''
for pair, count in char_counts.items():
  if count > max_count:
    max_count = count
    most_frequent_char = pair[1]
print(most_frequent_char)
","1.0"
"ddff994a-fbde-4c58-a91b-9e3a3872e088","
def most_common_between(s):
    count = {}
    for i in range(1, len(s)):
        key = s[i-1] + s[i]
        if key in count:
            count[key] += 1
        else:
            count[key] = 1
    max_count = max(count.values())
    for key in count:
        if count[key] == max_count:
            print(key[1])
            break

text = input()
most_common_between(text)
","1.0"
"ddff994a-fbde-4c58-a91b-9e3a3872e088","def most_frequent_character(text):
    char_count = {}
    max_count = 0
    max_char = ''

    for i in range(1, len(text) - 1):
        if text[i - 1] == text[i + 1]:
            char = text[i]
            char_count[char] = char_count.get(char, 0) + 1
            if char_count[char] > max_count:
                max_count = char_count[char]
                max_char = char

    return max_char

text = input()
print(most_frequent_character(text))","1.0"
"1dfaf2a6-3a2f-4c32-b6a3-f6a752d20be4","
n = int(input())
max_distance = 0
for _ in range(n):
  line = input()
  if line.count('G') < 25:
    distances = []
    for i in range(len(line)):
      if line[i] == 'G':
        for j in range(i + 1, len(line)):
          if line[j] == 'G':
            distances.append(j - i)
    if distances:
      max_distance = max(max_distance, max(distances))
print(max_distance)
","1.0"
"1dfaf2a6-3a2f-4c32-b6a3-f6a752d20be4","
def max_dist(n, lines):
    max_dist = 0
    for i in range(n):
        line = lines[i]
        if len(line) < 25:
            line_set = set(line)
            for char in line_set:
                pos1 = line.find(char)
                for pos2 in range(pos1 + 1, len(line)):
                    if line[pos2] == char:
                        dist = pos2 - pos1
                        max_dist = max(max_dist, dist)
    return max_dist

n = int(input())
lines = []
for _ in range(n):
    lines.append(input())
print(max_dist(n, lines))
","1.0"
"1dfaf2a6-3a2f-4c32-b6a3-f6a752d20be4","n = int(input())
max_dist = 0

for i in range(n):
    line = input()
    dist = -1
    for j in range(len(line)):
        if line[j] == 'G':
            if dist != -1:
                max_dist = max(max_dist, j - dist)
            dist = j

print(max_dist)","1.0"
"ba789162-5596-4059-9f45-f6dd0f6f65e5","
n = int(input())
max_distance = 0
for i in range(n):
    line = input()
    if line.count('A') < 25:
        last_a = -1
        distance = 0
        for j in range(len(line)):
            if line[j] == 'A':
                if last_a != -1:
                    distance = max(distance, j - last_a)
                last_a = j
        max_distance = max(max_distance, distance)
print(max_distance)
","1.0"
"ba789162-5596-4059-9f45-f6dd0f6f65e5","
def max_dist(n, lines):
    max_dist = 0
    for line in lines:
        dist = 0
        for i in range(len(line)):
            for j in range(i+1, len(line)):
                if line[i] == line[j]:
                    dist = max(dist, j-i)
        max_dist = max(max_dist, dist)
    return max_dist

n = int(input())
lines = []
for _ in range(n):
    lines.append(input())
print(max_dist(n, lines))
","1.0"
"ba789162-5596-4059-9f45-f6dd0f6f65e5","def main():
    n = int(input())
    max_distance = 0
    for i in range(n):
        line = input()
        distance = 0
        for j in range(len(line)):
            if line[j] == 'A':
                for k in range(j + 1, len(line)):
                    if line[k] == 'A':
                        distance = k - j
                        if distance > max_distance:
                            max_distance = distance
                        break
    print(max_distance)

if __name__ == '__main__':
    main()","1.0"
"f56de6b0-e5eb-4ffb-b0c1-1e471b7f0b35","lines = []
for i in range(int(input())): lines.append(input())
min_g = len(min(lines, key=lambda x: x.count('G')))
letters = {}
for line in lines:
    for letter in line:
        if line.count(letter) == min_g: letters.setdefault(letter, 0); letters[letter] += 1
print(max(letters, key=lambda x: x))","1.0"
"f56de6b0-e5eb-4ffb-b0c1-1e471b7f0b35","
def find_max_freq_letter(line):
    freq = {}
    for char in line:
        if char not in freq:
            freq[char] = 0
        freq[char] += 1
    max_freq = max(freq.values())
    max_chars = [char for char, freq in freq.items() if freq == max_freq]
    max_char = max(max_chars, key=lambda x: ord(x))
    return max_char

n = int(input())
lines = []
for _ in range(n):
    lines.append(input())

lines.sort()
for line in lines:
    if 'G' in line:
        max_char = find_max_freq_letter(line)
        print(max_char)
        break
","1.0"
"f56de6b0-e5eb-4ffb-b0c1-1e471b7f0b35","def most_frequent_line(lines):
    min_g_count = float('inf')
    min_g_line = ''
    for line in lines:
        g_count = line.count('G')
        if g_count < min_g_count:
            min_g_count = g_count
            min_g_line = line
    letter_count = {}
    for char in min_g_line:
        if char in letter_count:
            letter_count[char] += 1
        else:
            letter_count[char] = 1
    max_count = 0
    max_char = ''
    for char, count in letter_count.items():
        if count > max_count or (count == max_count and char > max_char):
            max_count = count
            max_char = char
    return max_char

n = int(input())
lines = []
for i in range(n):
    lines.append(input())
print(most_frequent_line(lines))","1.0"
"eb763311-8a08-4e91-a8d1-33a228a1f3f9","s = input()
z = 0
lst = [0]*26
for c in s:
    lst[ord(c)-ord('A')] += 1
    if c == 'Z':
        z = max(lst)
lst[25] = 0
print(chr(lst.index(max(lst))+ord('A'))) if max(lst) > z else chr(ord('A')))","1.0"
"eb763311-8a08-4e91-a8d1-33a228a1f3f9","
with open('input.txt', 'r') as f:
    text = f.readline().upper()

index = text.find('Z')
letter = text[index + 2]
print(letter)
","1.0"
"eb763311-8a08-4e91-a8d1-33a228a1f3f9","def most_frequent_char(input_str):
    max_count = 0
    max_char = ''
    for char in input_str:
        if char == 'Z':
            continue
        count = input_str.count(char)
        if count > max_count:
            max_count = count
            max_char = char
    return max_char

input_str = input()
print(most_frequent_char(input_str))","1.0"
"1c260f00-9384-4b40-8fd8-64c4ae771acb","
s = input()
ans = 1
c = 1
a = s[0]
for x in s[1:]:
    if x == a:
        c += 1
    else:
        a = x
        c = 1
    ans = max(ans, c)
print(ans)
","1.0"
"1c260f00-9384-4b40-8fd8-64c4ae771acb","
def max_consecutive_different(s):
    count = 1
    max_count = 0
    for i in range(1, len(s)):
        if s[i] != s[i-1]:
            count += 1
        else:
            count = 1
        max_count = max(max_count, count)
    return max_count

s = input()
print(max_consecutive_different(s))
","1.0"
"1c260f00-9384-4b40-8fd8-64c4ae771acb","def max_consecutive_different_chars(s):
    max_count = current_count = 1
    for i in range(1, len(s)):
        if s[i] != s[i - 1]:
            current_count += 1
            max_count = max(max_count, current_count)
        else:
            current_count = 1
    return max_count

s = input()
print(max_consecutive_different_chars(s))","1.0"
"982ed021-8351-4afe-9d79-111527937b47","
s = input()
cur = 0
ans = 0
vowels = 'AEIOU'
cur = 0
for c in s:
    if c in vowels:
        cur = 0
    else:
        cur += 1
    ans = max(cur, ans)
print(ans)

","1.0"
"982ed021-8351-4afe-9d79-111527937b47","
def find_max_consecutive_cv_pairs(s):
    vowels = 'AEIOU'
    consonants = 'BCDF'
    count = 0
    max_count = 0
    i = 0
    while i < len(s) - 1:
        if s[i] in consonants and s[i+1] in vowels:
            count += 1
            max_count = max(max_count, count)
        else:
            count = 0
        i += 1
    return max_count

text = input()
print(find_max_consecutive_cv_pairs(text))
","1.0"
"982ed021-8351-4afe-9d79-111527937b47","def main():
    s = input()
    vowels = 'AO'
    consonants = 'CDF'
    count = 0
    max_count = 0
    for i in range(len(s) - 1):
        if s[i] in consonants and s[i + 1] in vowels:
            count += 1
            max_count = max(max_count, count)
        else:
            count = 0
    print(max_count)

if __name__ == '__main__':
    main()","1.0"
"4495049c-7679-4fd3-804c-70c67ad5a1dc","
num1, num2 = list(map(int, input().split()))
result = num1 + num2 if (num1 >= 0 and num2 >= 0) or (num1 < 0 and num2 < 0) else num1 - num2
print(result)
","1.0"
"4495049c-7679-4fd3-804c-70c67ad5a1dc","
a, b = map(int, input().split())

if a > 0 and b > 0 or a < 0 and b < 0:
 print(a + b)
else:
 print(a - b)
","1.0"
"4495049c-7679-4fd3-804c-70c67ad5a1dc","def main():
    a, b = map(int, input().split())
    if a * b > 0:
        print(a + b)
    else:
        print(a - b)

if __name__ == ""__main__"":
    main()","1.0"
"db8534b0-ffa9-4c1b-9d86-4797814b3074","
count = 0
for i in input().split():
    count += 1
print(count)
","1.0"
"db8534b0-ffa9-4c1b-9d86-4797814b3074","
def count_words(line):
    words = line.split()
    return len(words)

line = input(""Enter a line: "")
print(count_words(line))
","1.0"
"db8534b0-ffa9-4c1b-9d86-4797814b3074","def count_words(line):
    words = line.split()
    return len(words)

line = input()
print(count_words(line))","1.0"
"5986f14f-59c5-428e-84aa-553175c8bdb9","
a, b, n = map( int, input().split() )
if n <= a * b * 9:
    print( ""NO"", 0 )
else:
    print( ""YES"", (n - a * b * 9 + 8) // 9 )
","1.0"
"5986f14f-59c5-428e-84aa-553175c8bdb9","
def seedling(a, b, n):
    area = a * b
    if area < 9:
        print(""Invalid box size. Box size should be at least 9 square centimeters."")
        return
    if n > area:
        k = n - area
        print(""YES"")
        print(k)
    else:
        print(""NO"")
        print(0)

# Main function
seedling(3, 3, 1)
seedling(2, 50, 12)
","1.0"
"5986f14f-59c5-428e-84aa-553175c8bdb9","def main():
    a, b = map(int, input().split())
    n = int(input())

    box_area = a * b
    min_area_per_seed = 9
    max_seeds_per_box = box_area // min_area_per_seed

    if n <= max_seeds_per_box:
        print(""NO"")
        print(0)
    else:
        print(""YES"")
        print(n - max_seeds_per_box)

if __name__ == ""__main__"":
    main()","1.0"
"43690a23-0ff2-4f9b-8410-ec7917ae05e3","
n = int(input())
a = list(map(int, input().split()))
print(max(a) * n - sum(a))
","1.0"
"43690a23-0ff2-4f9b-8410-ec7917ae05e3","
n = int(input())
icicles = list(map(int, input().split()))

icicles.sort()
total = sum(icicles)
min_knocked = total - (n * icicles[-1])
print(min_knocked)
","1.0"
"43690a23-0ff2-4f9b-8410-ec7917ae05e3","def main():
    n = int(input())
    icicles = list(map(int, input().split()))

    min_icicles = min(icicles)
    total_icicles = sum(icicles)
    target_icicles = total_icicles // n

    if total_icicles % n == 0:
        result = sum(icicle - target_icicles for icicle in icicles)
    else:
        result = sum(icicle - min_icicles for icicle in icicles)

    print(result)

if __name__ == ""__main__"":
    main()","1.0"
"6dcac6bd-9973-47eb-8912-187a2999dc6b","def game(n,z):
  d,k=set(),0
  for i in z:
    if i not in d:
      d.add(i)
      k+=1
    else:
      d.remove(i)
      k-=1
  return k
n=int(input())
print(game(n,list(map(int,input().split()))))","1.0"
"6dcac6bd-9973-47eb-8912-187a2999dc6b","
def gcd(a, b):
    if b == 0:
        return a
    return gcd(b, a % b)

def lcm(a, b):
    return abs(a * b) // gcd(a, b)

def play(numbers):
    n = len(numbers)
    max_num = max(numbers)
    board = set(numbers)

    while True:
        for i in range(n - 1):
            for j in range(i + 1, n):
                diff = lcm(numbers[i], numbers[j]) - numbers[i] - numbers[j]
                if diff > max_num and diff not in board:
                    board.add(diff)
                    max_num += 1
                    break
        else:
            break

    return max_num

n = int(input())
numbers = list(map(int, input().split()))
print(play(numbers))
","1.0"
"6dcac6bd-9973-47eb-8912-187a2999dc6b","def main():
    n = int(input())
    numbers = list(map(int, input().split()))
    numbers.sort()
    result = n
    for i in range(n - 1):
        for j in range(i + 1, n):
            diff = numbers[j] - numbers[i]
            if diff not in numbers:
                result += 1
                numbers.append(diff)
    print(result)

if __name__ == ""__main__"":
    main()","1.0"
"5177ddd2-f17e-4d0a-bf78-21fd90df671f","
n, k = map(int, input().split())
a = list(map(int, input().split()))

max_len = 1
current_len = 1

for i in range(1, n):
  if a[i] != a[i - 1]:
    current_len += 1
  else:
    current_len = 1
  max_len = max(max_len, current_len)

print(max_len)
","1.0"
"5177ddd2-f17e-4d0a-bf78-21fd90df671f","
def find_longest_multicolored(n, k, colors):
    dp = [[0] * k for _ in range(n)]
    for i in range(1, n):
        for j in range(1, k):
            dp[i][j] = dp[i - 1][j] + (1 if colors[i] != colors[i - 1] and dp[i - 2][colors[i - 1]] < dp[i - 1][j] else 0)
    max_len = 0
    for i in range(1, k):
        max_len = max(max_len, dp[-1][i])
    return max_len + 1

n, k = map(int, input().split())
colors = list(map(int, input().split()))
print(find_longest_multicolored(n, k, colors))
","1.0"
"5177ddd2-f17e-4d0a-bf78-21fd90df671f","def main():
    n, k = map(int, input().split())
    colors = list(map(int, input().split()))

    max_length = 0
    current_length = 1
    for i in range(1, n):
        if colors[i] != colors[i - 1]:
            current_length += 1
        else:
            max_length = max(max_length, current_length)
            current_length = 1

    max_length = max(max_length, current_length)
    print(max_length)


if __name__ == ""__main__"":
    main()","1.0"
"ae532d4a-9564-46c8-a30b-9f1fe7f95bf9","s1, s2, s3 = map(int, input().split())
n = int(input())
ingr = [input() for _ in range(n)]
ans = s1*s2*s3
for i in ingr:
    if i=='cheese': ans//=s2
    elif i=='sausage': ans//=s1
    elif i=='ketchup': ans//=s3
print(ans)","1.0"
"ae532d4a-9564-46c8-a30b-9f1fe7f95bf9","
def count_sandwiches(s1, s2, s3, n, fillings):
    ways = 0
    for i in range(s1 + 1):
        for j in range(min(i, s2)):
            for k in range(min(j, s3)):
                if n == i + j + k:
                    ways += 1
    for filling in fillings:
        if filling == 'sausage':
            s1 -= 1
        elif filling == 'cheese':
            s2 -= 1
        else:
            s3 -= 1
    return ways

s1, s2, s3 = map(int, input().split())
n = int(input())
fillings = []
for _ in range(n):
    fillings.append(input())
print(count_sandwiches(s1, s2, s3, n, fillings))
","1.0"
"ae532d4a-9564-46c8-a30b-9f1fe7f95bf9","def count_sandwich_combinations(sausage_count, cheese_count, sauce_count, components):
    result = 1
    for component in components:
        if component == ""sausage"":
            result *= sausage_count
        elif component == ""cheese"":
            result *= cheese_count
        elif component == ""ketchup"":
            result *= sauce_count
    return result

def main():
    sausage_count, cheese_count, sauce_count = map(int, input().split())
    component_count = int(input())
    components = [input() for _ in range(component_count)]

    combinations = count_sandwich_combinations(sausage_count, cheese_count, sauce_count, components)
    print(combinations)

if __name__ == ""__main__"":
    main()","1.0"
"430aade4-55bd-42b3-9586-1389412540a7","
n = int(input())
k,c = 0,1
while c < n:
    c <<= 1
    k += 1
print(k)
","1.0"
"430aade4-55bd-42b3-9586-1389412540a7","
def gcd(a, b):
    while b:
        a, b = b, a % b
    return a

n = int(input())
layers = n
while layers > 1:
    layers = gcd(layers, 2)
    layers *= 2
print(layers // 2)
","1.0"
"430aade4-55bd-42b3-9586-1389412540a7","def min_folds(n):
    folds = 0
    while n > 1:
        n = n // 2
        folds += 1
    return folds

n = int(input())
print(min_folds(n))","1.0"
"84b45b43-cc73-4b14-ab6e-8b970134fb03","
n, m = map(int, input().split())
print(m%n)
","1.0"
"84b45b43-cc73-4b14-ab6e-8b970134fb03","
n, m = map(int, input().split())
remainder = m % n
if remainder == 0:
 print(0)
else:
 for i in range(n):
 if i < remainder:
 print(m // n + 1)
 else:
 print(m // n)
","1.0"
"84b45b43-cc73-4b14-ab6e-8b970134fb03","def main():
    n, m = map(int, input().split())
    remaining = m
    for i in range(1, n + 1):
        if remaining >= i:
            remaining -= i
        else:
            break
    print(remaining)

if __name__ == ""__main__"":
    main()","1.0"
"9acc7b61-f8ac-4953-8b12-651c2d7f8d48","
m, n = map(int, input().split())
k = int(input())

matrix = [['.'] * n for _ in range(m)]

for i in range(k):
  x1, y1, x2, y2 = map(int, input().split())
  for x in range(x1 - 1, x2):
    for y in range(y1 - 1, y2):
      matrix[x][y] = chr(ord('a') + i)

for row in matrix:
  print(''.join(row))
","1.0"
"9acc7b61-f8ac-4953-8b12-651c2d7f8d48","
def draw_rectangles(m, n, k, x1, y1, x2, y2):
    matrix = [['.'] * n for _ in range(m)]

    for i in range(k):
        for j in range(x1[i], x2[i]+1):
            for l in range(y1[i], y2[i]+1):
                matrix[j][l] = chr(ord('a') + i)

    for row in matrix:
        print(''.join(row))

m, n = map(int, input().split())
k = int(input())

rectangles = []
for _ in range(k):
    x1, y1, x2, y2 = map(int, input().split())
    rectangles.append((x1, y1, x2, y2))

draw_rectangles(m, n, k, *rectangles)
","1.0"
"9acc7b61-f8ac-4953-8b12-651c2d7f8d48","def main():
    m, n = map(int, input().split())
    k = int(input())
    matrix = [['.' for _ in range(n)] for _ in range(m)]
    chars = 'abcdefghijklmnopqrstuvwxyz'

    for i in range(k):
        x1, y1, x2, y2 = map(int, input().split())
        char = chars[i]
        for x in range(x1 - 1, x2):
            for y in range(y1 - 1, y2):
                matrix[x][y] = char

    for row in matrix:
        print(''.join(row))

if __name__ == '__main__':
    main()","1.0"
"d0e35e20-e37a-4750-8c0b-7641a3b72277","
n = int(input())
a = list(map(int, input().split()))
a.sort(reverse=True)
ans = 0
w = 0
for x in a:
    if w + x <= 4:
        w += x
    else:
        ans += 1
        w = x
print(ans+1)
","1.0"
"d0e35e20-e37a-4750-8c0b-7641a3b72277","
def loader(n, m):
    loads = sorted(m)
    cars = 1
    current_load = loads[0]

    for load in loads[1:]:
        if load <= current_load:
            current_load += load
        else:
            cars += 1
            current_load = load

    return cars + 1

n = int(input())
m = list(map(int, input().split()))
print(loader(n, m))
","1.0"
"d0e35e20-e37a-4750-8c0b-7641a3b72277","def main():
    n = int(input())
    loads = list(map(int, input().split()))
    vehicles = 0
    i = 0
    while i < n:
        current_load = loads[i]
        if current_load == 4:
            vehicles += 1
            i += 1
        else:
            remaining_capacity = 4
            while i < n and remaining_capacity >= loads[i]:
                remaining_capacity -= loads[i]
                i += 1
            vehicles += 1
    print(vehicles)

if __name__ == ""__main__"":
    main()","1.0"
"2335ee80-a2b1-4e2b-93c1-b3bc7d2720e8","
t = int(input())
for _ in range(t):
  n = int(input())
  k = 2
  while k * (k - 1) <= 2 * n:
    k += 1
  print(k - 1)
","1.0"
"2335ee80-a2b1-4e2b-93c1-b3bc7d2720e8","
def min_participants(n):
    k = 2
    while n > k:
        n -= k
        k += 1
    return k

t = int(input())
for _ in range(t):
    n = int(input())
    print(min_participants(n))
","1.0"
"2335ee80-a2b1-4e2b-93c1-b3bc7d2720e8","def main():
    t = int(input())
    for _ in range(t):
        n = int(input())
        k = 1
        while (n - 1) % k != 0:
            k += 1
        print(k)

if __name__ == ""__main__"":
    main()","1.0"
"5fc63383-931c-46cc-a7d1-308dc271fda6","n,d=map(int,input().split())
l=list(map(int,input().split()))
l.sort()
m=int(input())
s=0
for i in range(min(m,n)):s+=l[i]-d*(i+1)
else:s-=(m-n)*d
print(s)","1.0"
"5fc63383-931c-46cc-a7d1-308dc271fda6","
def parking_profit(n, a, m):
    spaces = [0] + a
    fine = 0
    profit = 0
    for i in range(1, m + 1):
        space = spaces[0]
        if space > 0:
            spaces[0] -= 1
            profit += space
        else:
            fine += space
            spaces[space] += 1
    return profit - fine

n, d = map(int, input().split())
a = list(map(int, input().split()))
m = int(input())
print(parking_profit(n, a, m))
","1.0"
"5fc63383-931c-46cc-a7d1-308dc271fda6","n, d = map(int, input().split())
prices = list(map(int, input().split()))
m = int(input())

parking_spots = [0] * n
profit = 0

for i in range(m):
    min_price = min(parking_spots)
    if min_price == 0:
        profit += prices[i % n]
        parking_spots[i % n] = 1
    else:
        profit -= d

print(profit)","1.0"
"6aae7e54-46ae-4139-acfe-077fa3532601","
def count_char(s):
  d = {}
  for c in s:
    if c in d:
      d[c] += 1
    else:
      d[c] = 1
  return d

def get_common_string(s1, s2, s3):
  d1 = count_char(s1)
  d2 = count_char(s2)
  d3 = count_char(s3)
  common_string = ''
  for c in d1:
    if c in d2 and c in d3:
      common_string += c * min(d1[c], d2[c], d3[c])
  return common_string

def is_possible(s1, s2, s3):
  common_string = get_common_string(s1, s2, s3)
  if len(common_string) == 0:
    return False
  for i in range(len(common_string) - 1):
    if common_string[i] == common_string[i + 1]:
      return False
  return True

def get_operations(s, target):
  operations = 0
  i = 0
  j = 0
  while i < len(s) and j < len(target):
    if s[i] == target[j]:
      i += 1
      j += 1
    elif s[i] * 2 == target[j:j+2]:
      operations += 1
      i += 1
      j += 2
    elif s[i:i+2] == target[j]:
      operations += 1
      i += 2
      j += 1
    else:
      return -1
  if i < len(s) or j < len(target):
    return -1
  return operations

def main():
  s1 = input()
  s2 = input()
  s3 = input()
  if is_possible(s1, s2, s3):
    common_string = get_common_string(s1, s2, s3)
    operations1 = get_operations(s1, common_string)
    operations2 = get_operations(s2, common_string)
    operations3 = get_operations(s3, common_string)
    if operations1 == -1 or operations2 == -1 or operations3 == -1:
      print(""IMPOSSIBLE"")
    else:
      print(common_string)
  else:
    print(""IMPOSSIBLE"")

if __name__ == ""__main__"":
  main()
","1.0"
"6aae7e54-46ae-4139-acfe-077fa3532601","
def eq_part(a, b):
    return (a == b) if len(a) == len(b) else False

def replace_char(s, c, n):
    return s.replace(c, c * n)

def replace_double(s):
    return s.replace('aa', 'a')

def solve(s1, s2, s3):
    s1 = replace_double(replace_char(s1, 'a', 2))
    s2 = replace_double(replace_char(s2, 'a', 2))
    s3 = replace_double(replace_char(s3, 'a', 2))

    if eq_part(s1, s2) and eq_part(s1, s3):
        return s1
    elif eq_part(s1, s2) or eq_part(s1, s3) or eq_part(s2, s3):
        return ""IMPOSSIBLE""
    else:
        min_ops = float('inf')
        common_str = """"
        for i in range(1, len(min(s1, s2, s3))):
            if eq_part(replace_char(s1, s1[0], i), replace_char(s2, s2[0], i)) and eq_part(replace_char(s1, s1[0], i), replace_char(s3, s3[0], i)):
                ops = s1.count(s1[0]) * i + s2.count(s2[0]) * i + s3.count(s3[0]) * i
                if ops < min_ops:
                    min_ops = ops
                    common_str = s1[0] * i
        return common_str

if __name__ == ""__main__"":
    s1 = input()
    s2 = input()
    s3 = input()
    print(solve(s1, s2, s3))
","1.0"
"6aae7e54-46ae-4139-acfe-077fa3532601","def linguistic_equipartition(strings):
    def count_operations(string1, string2):
        operations = 0
        i = 0
        j = 0
        while i < len(string1) and j < len(string2):
            if string1[i] == string2[j]:
                i += 1
                j += 1
            elif string1[i] == string2[j:j+2]:
                operations += 1
                j += 2
            elif string1[i:i+2] == string2[j]:
                operations += 1
                i += 2
            else:
                return float('inf')
        operations += len(string1[i:]) + len(string2[j:])
        return operations

    def find_common_string(strings):
        min_operations = float('inf')
        common_string = """"
        for i in range(len(strings[0])):
            for j in range(i+1, len(strings[0])+1):
                current_string = strings[0][i:j]
                operations = count_operations(current_string, strings[1]) + count_operations(current_string, strings[2])
                if operations < min_operations:
                    min_operations = operations
                    common_string = current_string
        return min_operations, common_string

    min_operations, common_string = find_common_string(strings)
    if min_operations == float('inf'):
        return ""IMPOSSIBLE""
    else:
        return common_string

strings = [input(), input(), input()]
result = linguistic_equipartition(strings)
print(result)","1.0"
"6d14c7f2-95e1-464c-a3cb-bcab860928ae","d1,d2,d3=map(int,input().split())
print(d1+d2+min(d1,d2)+d3)","1.0"
"6d14c7f2-95e1-464c-a3cb-bcab860928ae","
def min_distance(d1, d2, d3):
    dp = [0] * (d1 + d2 + d3 + 1)
    for i in range(1, d1 + 1):
        for j in range(1, d2 + 1):
            for k in range(1, d3 + 1):
                dp[i + j + k] = max(dp[i + j + k], dp[i] + j + dp[j + k] + d1, dp[i + k] + d2 + dp[k] + d3)
    return dp[-1]

d1, d2, d3 = map(int, input().split())
print(min_distance(d1, d2, d3))
","1.0"
"6d14c7f2-95e1-464c-a3cb-bcab860928ae","def main():
    d1, d2, d3 = map(int, input().split())
    min_distance = min(d1 + d2 + d3, d1 + 2 * d3, 2 * d2 + d3)
    print(min_distance)

if __name__ == ""__main__"":
    main()","1.0"
"a62a737e-0fbc-451b-9f67-2d7804740ccf","a = int(input())
b = int(input())
c = int(input())
print((c - a) // b)","1.0"
"a62a737e-0fbc-451b-9f67-2d7804740ccf","
a = int(input())
b = int(input())
c = int(input())

sticks = c - (c // (a + b) * (a + b))
pucks = (c - sticks) // b

print(pucks)
","1.0"
"a62a737e-0fbc-451b-9f67-2d7804740ccf","A = int(input())
B = int(input())
C = int(input())

sticks_cost = A
puck_cost = B
total_money = C

money_spent_on_sticks = sticks_cost
money_left_for_pucks = total_money - money_spent_on_sticks

number_of_pucks = money_left_for_pucks // puck_cost

print(number_of_pucks)","1.0"
"408e0ac8-b3c0-4123-bcb2-e396802f5399","n=int(input());t=n//4;print(n*t*t*(n-4*t+1)//24)","1.0"
"408e0ac8-b3c0-4123-bcb2-e396802f5399","
def divisors(n):
    divs = []
    for i in range(1, int(n**0.5) + 1):
        if n % i == 0:
            divs.append(i)
            divs.append(n//i)
    return divs

def rect_count(n):
    divs = divisors(n)
    count = 0
    for i in range(len(divisors) - 3):
        a, b, c, d = divs[i], divs[i+1], divs[i+2], divs[i+3]
        if a + b + c + d == n and a != b and a != c and a != d and b != c and b != d and c != d:
            count += 1
    return count

n = int(input())
print(rect_count(n))
","1.0"
"408e0ac8-b3c0-4123-bcb2-e396802f5399","def count_ways(n):
    count = 0
    for a in range(1, n // 2):
        for b in range(a, n // 2):
            for c in range(b, n // 2):
                d = n - a - b - c
                if d >= c and a * d != b * c:
                    count += 1
    return count

n = int(input())
print(count_ways(n))","1.0"
"d5e4d47f-6494-4c3f-b408-6562c81ae4e7","
P, K, T, R = map(int, input().split())
shots = (P + K - 1) // K
time = (shots - 1) * (T + R) + T
print(time)
","1.0"
"d5e4d47f-6494-4c3f-b408-6562c81ae4e7","
def shoot(p, k, t, r):
    shots = p // k + 1
    return shots * t + (shots - 1) * r

p, k, t, r = map(int, input().split())
print(shoot(p, k, t, r))
","1.0"
"d5e4d47f-6494-4c3f-b408-6562c81ae4e7","def main():
    P, K, T, R = map(int, input().split())
    count = 0
    time = 0
    while P > 0:
        P -= K
        time += T
        count += 1
        if count % 3 == 0 and P > 0:
            time += R
    print(time)

if __name__ == ""__main__"":
    main()","1.0"
"94ac4455-5ad7-46a1-835a-ac155d995664","n=int(input())
x=0
for i in range(n):
    a,b,c=map(int,input().split())
    if a+b+c>=2:
        x+=1
print(x)","1.0"
"94ac4455-5ad7-46a1-835a-ac155d995664","
def count_solvable_problems(n, problems):
    count = 0
    for problem in problems:
        if sum(problem) >= 2:
            count += 1
    return count

n = int(input())
problems = []
for _ in range(n):
    problems.append(list(map(int, input().split())))
print(count_solvable_problems(n, problems))
","1.0"
"94ac4455-5ad7-46a1-835a-ac155d995664","n = int(input())
count = 0

for i in range(n):
    a, b, c = map(int, input().split())
    if a + b + c >= 2:
        count += 1

print(count)","1.0"
"01c8944f-0a22-4bc7-8338-acd655974e1a","
n, m = map(int, input().split())
mn = 10 ** 10
for i in range(n):
    a, b = map(int, input().split())
    mn = min(mn, float(a) / b)
print(""{0:.6f}"".format(mn * m))
","1.0"
"01c8944f-0a22-4bc7-8338-acd655974e1a","
def min_cost(n, m, prices):
    min_price = float('inf')
    for i in range(n):
        cost = (m * prices[i][0]) / prices[i][1]
        min_price = min(min_price, cost)
    return round(min_price, 6)

n, m = map(int, input().split())
prices = []
for _ in range(n):
    a, b = map(int, input().split())
    prices.append((a, b))
print(min_cost(n, m, prices))
","1.0"
"01c8944f-0a22-4bc7-8338-acd655974e1a","def main():
    n, m = map(int, input().split())
    prices = []
    for _ in range(n):
        a, b = map(int, input().split())
        prices.append(a / b)
    prices.sort()
    print(f""{prices[0] * m:.6f}"")

if __name__ == ""__main__"":
    main()","1.0"
"3c867d85-e9aa-482c-ac5e-574724751b37","s=input();v=['A','E','I','O','U','Y'];a=len(s);for i in range(len(s)):for j in range(1,a-i):if s[i+j-1] in v and j>a-i-1:a=a-i-1;exit
print(a)","1.0"
"3c867d85-e9aa-482c-ac5e-574724751b37","
def min_jump(s):
    vowels = 'AEIOUY'
    jump = len(s)
    for i in range(1, jump):
        if all(c in vowels for c in s[-i:]):
            jump = i
    return jump

s = input()
print(min_jump(s))
","1.0"
"3c867d85-e9aa-482c-ac5e-574724751b37","def main():
    field = input()
    vowels = ['A', 'E', 'I', 'O', 'U', 'Y']
    n = len(field)
    dp = [float('inf')] * (n + 1)
    dp[0] = 0
    for i in range(n):
        if field[i] in vowels:
            for j in range(1, min(n - i, dp[i] + 1)):
                dp[i + j] = min(dp[i + j], dp[i] + 1)
    print(dp[n])

if __name__ == '__main__':
    main()","1.0"
"004dd7ed-c513-4c47-9a8e-76828ba86070","
n = int(input())
a = list(map(int, input().split()))
a.sort()
s = 0
for i in range(1, n):
  s += a[i] - a[0]
print(s)
","1.0"
"004dd7ed-c513-4c47-9a8e-76828ba86070","
def min_expenses(n, animals):
    min_val = min(animals)
    total = sum(animals)
    return total - n * min_val

n = int(input())
animals = list(map(int, input().split()))
print(min_expenses(n, animals))
","1.0"
"004dd7ed-c513-4c47-9a8e-76828ba86070","def main():
    n = int(input())
    a = list(map(int, input().split()))
    min_a = min(a)
    s = 0
    for ai in a:
        s += ai - min_a
    print(s)

if __name__ == ""__main__"":
    main()","1.0"
"dd32efc4-7f8d-4180-b85e-a2c76a64a9f3","
def is_most_productive(i, j, n, m, a):
  if i > 0 and a[i][j] <= a[i - 1][j]:
    return False
  if i < n - 1 and a[i][j] <= a[i + 1][j]:
    return False
  if j > 0 and a[i][j] <= a[i][j - 1]:
    return False
  if j < m - 1 and a[i][j] <= a[i][j + 1]:
    return False
  return True

n, m = map(int, input().split())
a = []
for i in range(n):
  a.append(list(map(int, input().split())))
count = 0
for i in range(n):
  for j in range(m):
    if is_most_productive(i, j, n, m, a):
      count += 1
print(count)
","1.0"
"dd32efc4-7f8d-4180-b85e-a2c76a64a9f3","
def dfs(grid, i, j, visited, count):
    if i < 0 or j < 0 or i >= len(grid) or j >= len(grid[0]) or visited[i][j] or grid[i][j] <= sum(grid[max(0, i - 1)][j:j + 2]) + sum(grid[i][max(0, j - 1):j + 2]) + sum(grid[min(len(grid) - 1, i + 1)][j:j + 2]) + sum(grid[i][max(0, j - 1):j + 2]):
        return
    visited[i][j] = True
    count += 1
    dfs(grid, i - 1, j, visited, count)
    dfs(grid, i + 1, j, visited, count)
    dfs(grid, i, j - 1, visited, count)
    dfs(grid, i, j + 1, visited, count)

def solve():
    n, m = map(int, input().split())
    grid = []
    for _ in range(n):
        row = list(map(int, input().split()))
        grid.append(row)
    visited = [[False] * m for _ in range(n)]
    max_count = 0
    for i in range(n):
        for j in range(m):
            if not visited[i][j]:
                dfs(grid, i, j, visited, 1)
                max_count = max(max_count, grid[i][j])
    print(max_count)

solve()
","1.0"
"dd32efc4-7f8d-4180-b85e-a2c76a64a9f3","def main():
    n, m = map(int, input().split())
    grid = [list(map(int, input().split())) for _ in range(n)]
    count = 0

    for i in range(n):
        for j in range(m):
            is_max = True
            for di in range(-1, 2):
                for dj in range(-1, 2):
                    if di == 0 and dj == 0:
                        continue
                    ni, nj = i + di, j + dj
                    if 0 <= ni < n and 0 <= nj < m:
                        if grid[i][j] <= grid[ni][nj]:
                            is_max = False
                            break
                if not is_max:
                    break
            if is_max:
                count += 1

    print(count)


if __name__ == ""__main__"":
    main()","1.0"
"de60668c-9cf3-4d87-80d1-457552bd8a37","k,r=map(int,input().split())
print((k+r-1)//r)","1.0"
"de60668c-9cf3-4d87-80d1-457552bd8a37","
def least_hats(k, r):
    hats = 0
    coins = k
    while coins >= r:
        hats += coins // r
        coins = (coins % r) + (hats * 10)
        hats += coins // k
    return hats + 1

k, r = map(int, input().split())
print(least_hats(k, r))
","1.0"
"de60668c-9cf3-4d87-80d1-457552bd8a37","def gcd(a, b):
    while b != 0:
        a, b = b, a % b
    return a

def find_min_hats(k, r):
    g = gcd(k, 10)
    if r % g == 0:
        return 1
    else:
        return 10 // g

k, r = map(int, input().split())
print(find_min_hats(k, r))","1.0"
"872b3f76-e52e-466c-88f4-e5cd230f3fac","
a, b = map(int, input().split())
for i in range(a, b + 1):
    k = []
    for j in range(2, i // 2 + 1):
        if i % j == 0:
            k += [j, i // j]
    if len(k) == 2:
        print(*k)

","1.0"
"872b3f76-e52e-466c-88f4-e5cd230f3fac","
def divisors(n):
    divs = []
    for i in range(1, int(n**0.5) + 1):
        if n % i == 0:
            divs.append(i)
            divs.append(n // i)
    divs.sort()
    return divs

a, b = map(int, input().split())
for num in range(a, b + 1):
    if len(divisors(num)) == 2:
        print(f'{divisors(num)[0]} {divisors(num)[1]}')
","1.0"
"872b3f76-e52e-466c-88f4-e5cd230f3fac","def find_divisors(a, b):
    for num in range(a, b + 1):
        divisors = []
        for i in range(2, int(num ** 0.5) + 1):
            if num % i == 0:
                divisors.append(i)
                if num // i != i:
                    divisors.append(num // i)
        if len(divisors) == 2:
            yield num, divisors[0], divisors[1]

def main():
    a, b = map(int, input().split())
    for num, div1, div2 in sorted(find_divisors(a, b), key=lambda x: x[1] * x[2]):
        print(div1, div2)

if __name__ == '__main__':
    main()","1.0"
"2b7b67a2-81d6-40d7-b1bb-aa032863511f","
a, b = map(int, input().split())
for n in range(a, b + 1):
  count = 0
  divisors = []
  for i in range(1, n + 1):
    if n % i == 0 and i % 2 == 0:
      count += 1
      divisors.append(i)
  if count == 6:
    print(*sorted(divisors))
","1.0"
"2b7b67a2-81d6-40d7-b1bb-aa032863511f","
def divisors(n):
    divs = []
    for i in range(1, n + 1):
        if n % i == 0:
            divs.append(i)
    return divs

def six_even_divisors(a, b):
    for n in range(a, b + 1):
        divs = divisors(n)
        if len(divs) == 6 and all(d % 2 == 0 for d in divs):
            print(' '.join(str(d) for d in sorted(divs)))

six_even_divisors(2, 48)
","1.0"
"2b7b67a2-81d6-40d7-b1bb-aa032863511f","def gcd(a, b):
    while b != 0:
        a, b = b, a % b
    return a

def is_valid(num):
    div_count = 0
    for i in range(1, num + 1):
        if num % i == 0 and i % 2 == 0:
            div_count += 1
        if div_count > 6:
            return False
    return div_count == 6

a, b = map(int, input().split())

for num in range(a, b + 1):
    if is_valid(num):
        divisors = []
        for i in range(1, num + 1):
            if num % i == 0 and i % 2 == 0:
                divisors.append(i)
        divisors.sort()
        print(*divisors)","1.0"
"98a85385-25d4-44f3-bee2-2b91da43daf0","
a, b = map(int, input().split())
for i in range(a, b + 1):
    if all(i % j for j in range(2, i)):
        print(i, max([d for d in range(2, i) if i % d == 0]))
","1.0"
"98a85385-25d4-44f3-bee2-2b91da43daf0","
def divisors(n):
    divs = []
    for i in range(1, n):
        if n % i == 0:
            divs.append(i)
    divs.append(n)
    return divs

def count_divisors(n):
    divs = divisors(n)
    count = 0
    for d in divs:
        if d != 1 and d != n:
            count += 1
    return count

def find_numbers(a, b):
    result = []
    for i in range(a, b+1):
        if count_divisors(i) == 3:
            divs = divisors(i)
            result.append((i, max(divs[1:])))
    result.sort()
    return result

a, b = map(int, input().split())
print(*find_numbers(a, b))
","1.0"
"98a85385-25d4-44f3-bee2-2b91da43daf0","def gcd(a, b):
    while b != 0:
        a, b = b, a % b
    return a

def solution(a, b):
    result = []
    for n in range(a, b + 1):
        divisors = []
        for i in range(2, int(n ** 0.5) + 1):
            if n % i == 0:
                divisors.append(i)
                if i != n // i:
                    divisors.append(n // i)
        if len(divisors) == 3:
            result.append(max(divisors))
    return ' '.join(map(str, result))

a, b = map(int, input().split())
print(solution(a, b))","1.0"
"f7c30e56-6dd9-43a9-86d3-456364c5c78a","
a,b=map(int,input().split())
mn=[0]*100001
D=[0]*100001
for i in range(1,100001):
 for j in range(i,100001,i):
  D[j]+=1
for x in range(a,b+1):
 if D[x]>mn[0]:
  mn[0]=D[x]
  mn[1]=x
print(mn[0],mn[1])
","1.0"
"f7c30e56-6dd9-43a9-86d3-456364c5c78a","
def divisors(n):
 count = 0
 for i in range(1, n + 1):
     if n % i == 0:
         count += 1
     if i * i > n:
         break
 return count

a, b = map(int, input().split())
max_count = 0
max_num = 0
for num in range(a, b + 1):
 count = divisors(num)
 if count > max_count:
     max_count = count
     max_num = num
 if count == max_count and num < max_num:
     max_num = num
print(max_count, max_num)
","1.0"
"f7c30e56-6dd9-43a9-86d3-456364c5c78a","def gcd(a, b):
    while b != 0:
        a, b = b, a % b
    return a

def lcm(a, b):
    return a * b // gcd(a, b)

def count_divisors(n):
    divisors = 0
    i = 1
    while i * i <= n:
        if n % i == 0:
            divisors += 1
            if i * i != n:
                divisors += 1
        i += 1
    return divisors

a, b = map(int, input().split())

max_divisors = 0
result = 0
for i in range(a, b + 1):
    divisors = count_divisors(i)
    if divisors > max_divisors:
        max_divisors = divisors
        result = i

print(max_divisors, result)","1.0"
"0f1f3e41-5da5-4608-b937-2475432abe15","
a, b = map(int, input().split())
result = []
for i in range(a, b + 1):
  for m in range(1, i // 2 + 1, 2):
    for n in range(1, i // 3 + 1, 2):
      if 2 ** m * 3 ** n == i:
        result.append(i)
        break
for i in sorted(result):
  print(i, end=' ')
","1.0"
"0f1f3e41-5da5-4608-b937-2475432abe15","
def find_numbers(a, b):
    result = []
    for m in range(a, b+1):
        if m % 2 == 0:
            for n in range(1, b//m+1):
                if n % 2 == 1:
                    if m*n <= b:
                        result.append(m*n)
    return sorted(result)

a, b = map(int, input().split())
print(*find_numbers(a, b))
","1.0"
"0f1f3e41-5da5-4608-b937-2475432abe15","def is_valid(n):
    if n % 2 == 0 and n % 3 == 0:
        return True
    return False

def main():
    a, b = map(int, input().split())
    result = []
    for n in range(a, b + 1):
        if is_valid(n):
            result.append(n)
    print(*result)

if __name__ == ""__main__"":
    main()","1.0"
"c6175ed3-a33c-4dbf-8f71-6ef2f9e31411","n = int(input())
A = int(input())
B = int(input())
C = int(input())
D = int(input())
E = int(input())
F = int(input())
print(n * (A * D + B * E + C * F))
","1.0"
"c6175ed3-a33c-4dbf-8f71-6ef2f9e31411","
n, A, B, C, D, E, F = map(int, input().split())
cost = A*D + B*E + C*F
print(cost * n)
","1.0"
"c6175ed3-a33c-4dbf-8f71-6ef2f9e31411","n = int(input())
A, B, C = map(int, input().split())
D, E, F = map(int, input().split())

cost = n * (A * D + B * E + C * F)

print(cost)","1.0"
"a4b90367-4dc9-4d5f-84d6-56245ea5afc4","
*k, m, n = map(int, input().split(' '))
if m<2: m=2
t=n//k
if n%k: t+=1
print(t*m)
","1.0"
"a4b90367-4dc9-4d5f-84d6-56245ea5afc4","
def glazing(k, m, n):
    return 2 * n if n <= k else (k * m) + ((n - k) * (2 * m))

k, m, n = map(int, input().split())
print(glazing(k, m, n))
","1.0"
"a4b90367-4dc9-4d5f-84d6-56245ea5afc4","def main():
    k, m, n = map(int, input().split())
    result = 0
    if n % k == 0:
        result = (n // k) * (2 * m)
    else:
        result = (n // k + 1) * (2 * m)
    print(result)

if __name__ == ""__main__"":
    main()","1.0"
"008b5cbd-4257-4e11-a061-f19e550b6b3e","a,b,c=map(int,input().split());z=0
while a!=b or b!=c:
  z+=1
  if a==b:a+=c-b;b=c
  elif b==c:c+=a-b
  else:b+=a-b
print(z)","1.0"
"008b5cbd-4257-4e11-a061-f19e550b6b3e","
def count_friends(x1, x2, x3):
    n = max(x1, x2, x3)
    for i in range(n - min(x1, x2, x3), 0, -1):
        if (x1 - i) % i != 0 or (x2 - i) % i != 0 or (x3 - i) % i != 0:
            continue
        friends = 1
        x1_new, x2_new = x1 - i, x2 - i
        for j in range(3, 1019):
            if (x1_new == x2_new) or ((x1_new - (x3 - x1_new)) % i != 0):
                break
            x3_new = x3 - x1_new
            friends += 1
            x1_new, x2_new = x3_new, x1_new
        return friends

x1, x2, x3 = map(int, input().split())
print(count_friends(x1, x2, x3))
","1.0"
"008b5cbd-4257-4e11-a061-f19e550b6b3e","def main():
    x1, x2, x3 = map(int, input().split())
    shells = [x1, x2, x3]
    friends = 0
    while True:
        min_diff = float('inf')
        min_i, min_j = -1, -1
        for i in range(len(shells)):
            for j in range(i + 1, len(shells)):
                diff = abs(shells[i] - shells[j])
                if diff < min_diff:
                    min_diff = diff
                    min_i, min_j = i, j
        if min_diff == 0:
            break
        shells.append(min_diff)
        friends += 1
    print(friends)

if __name__ == '__main__':
    main()","1.0"
"c270a9c3-67af-4113-8e7d-a7a94792013d","
def is_possible(n, m):
  if n < m:
    return False
  if m == 1:
    return True
  return n >= (m * (m + 1)) // 2

k = int(input())
for _ in range(k):
  n, m = map(int, input().split())
  if is_possible(n, m):
    print(""YES"")
  else:
    print(""NO"")
","1.0"
"c270a9c3-67af-4113-8e7d-a7a94792013d","
for _ in range(int(input())):
    n, m = map(int, input().split())
    if n < m:
        print(""NO"")
    else:
        oranges = sorted(range(1, n+1))
        friends = sorted(range(1, m+1))
        flag = True
        for i in range(m):
            if oranges[i] != friends[i]:
                j = i + 1
                while j < m and oranges[i] == oranges[j]:
                    j += 1
                if j == m:
                    flag = False
                    break
                else:
                    oranges[i], oranges[j] = oranges[j], oranges[i]
                    for k in range(i+1, m):
                        oranges[k] -= 1
        if flag:
            print(""YES"")
        else:
            print(""NO"")
","1.0"
"c270a9c3-67af-4113-8e7d-a7a94792013d","def can_divide_oranges(n, m):
    if n < m:
        return False
    if n == m:
        return True
    if m == 1:
        return True
    if n == m + 1:
        return True
    if n > m * (m + 1) // 2:
        return False
    for i in range(2, m):
        if n % i == 0 and n // i > m - i:
            return True
    return False

k = int(input())
for _ in range(k):
    n, m = map(int, input().split())
    if can_divide_oranges(n, m):
        print(""YES"")
    else:
        print(""NO"")","1.0"
"e1980664-e539-436e-af4e-1dc094d9908f","def f(k):
    x,y=ord(k[0])-96,int(k[1])
    return ((x+1<=8 and x+2<=8 and y-1>=1 and y+1<=8)+
            (x-1>=1 and x-2>=1 and y-1>=1 and y+1<=8)+
            (y+2<=8 and x+1<=8 and x-1>=1)+
            (y-2>=1 and x+1<=8 and x-1>=1)+
            (x+1<=8 and y+1<=8)+
            (x-1>=1 and y+1<=8)+
            (x+1<=8 and y-1>=1)+
            (x-1>=1 and y-1>=1))
for _ in range(int(input())):
    print(f(input()))","1.0"
"e1980664-e539-436e-af4e-1dc094d9908f","
def donkey_moves(pos):
    x, y = ord(pos[0]) - ord('a'), int(pos[1])
    moves = [(x+dx, y+dy) for dx in (-2, 0, 2) for dy in (-1, 1, -1, 1)]
    return len({(a, b) for a, b in moves if 1 <= a <= 8 and 1 <= b <= 8})

T = int(input())
for _ in range(T):
    pos = input()
    print(donkey_moves(pos))
","1.0"
"e1980664-e539-436e-af4e-1dc094d9908f","def count_attacked_squares(position):
    letter, number = position
    x = ord(letter) - ord('a')
    y = int(number) - 1
    attacked_squares = 0

    for dx in [-2, -1, 1, 2]:
        for dy in [-2, -1, 1, 2]:
            if abs(dx) == abs(dy):
                continue
            nx, ny = x + dx, y + dy
            if 0 <= nx < 8 and 0 <= ny < 8:
                attacked_squares += 1

    return attacked_squares


num_tests = int(input())
for _ in range(num_tests):
    position = input()
    result = count_attacked_squares(position)
    print(result)","1.0"
"4f8b54ae-eb36-4c4d-91da-256fc6302b91","a,b,c,d=map(int,input().split())
h=c-a
m=d-b
if m<0:
    m+=60
    h-=1
print(h,m)","1.0"
"4f8b54ae-eb36-4c4d-91da-256fc6302b91","
a, b, c, d = map(int, input().split())
if c > a:
 duration_hours = c - a
 else:
 duration_hours = 24 + (c - a)
 duration_minutes = d - b
 if duration_minutes < 0:
 duration_minutes += 60
 duration_minutes = min(duration_minutes, 59)
 print(duration_hours, duration_minutes)
","1.0"
"4f8b54ae-eb36-4c4d-91da-256fc6302b91","def main():
    a, b, c, d = map(int, input().split())
    hours = c - a
    minutes = d - b
    if minutes < 0:
        minutes += 60
        hours -= 1
    if hours < 0:
        hours += 24
    print(hours, minutes)

if __name__ == '__main__':
    main()","1.0"
"c0ed6e9b-f602-4b3b-8aef-52dbb2485110","
def decrypt(word):
  result = []
  for i in range(len(word)):
    num = ord(word[i]) - ord('a')
    if i == 0:
      num -= 5
    else:
      num -= ord(word[i - 1]) - ord('a')
    if num < 0:
      num += 26
    result.append(chr(num + ord('a')))
  return ''.join(result)

word = input()
print(decrypt(word))
","1.0"
"c0ed6e9b-f602-4b3b-8aef-52dbb2485110","
def dragon_cipher(encrypted_word):
    alphabet = 'abcdefghijklmnopqrstuvwxyz'
    decrypted_word = ''

    for char in encrypted_word:
        index = alphabet.index(char) + 5
        decrypted_word += alphabet[(index % 26)]

    return decrypted_word

encrypted_word = input()
print(dragon_cipher(encrypted_word))
","1.0"
"c0ed6e9b-f602-4b3b-8aef-52dbb2485110","def dragon_cipher(encrypted_word):
    decrypted_word = ''
    prev_num = 0
    for char in encrypted_word:
        num = ord(char) - ord('a')
        curr_num = (num - prev_num) % 26
        decrypted_word += chr(curr_num + ord('a'))
        prev_num = curr_num
    return decrypted_word

encrypted_word = input()
decrypted_word = dragon_cipher(encrypted_word)
print(decrypted_word)","1.0"
"85b72f3a-191b-4d99-9207-6a82ed1e73c9","n, k = map(int, input().split())
a = list(map(int, input().split()))
for i in range(n):
  k -= a[i]
  if k < 0:
    print(k + a[i])
    break
else:
  print(0)","1.0"
"85b72f3a-191b-4d99-9207-6a82ed1e73c9","
k, n = map(int, input().split())
arrivals = list(map(int, input().split()))

traffic_jam = 0
current_turn = 0

for i in range(n):
    current_turn += arrivals[i]
    if current_turn > k:
        traffic_jam += current_turn - k
    k -= kin

print(traffic_jam)
","1.0"
"85b72f3a-191b-4d99-9207-6a82ed1e73c9","def main():
    k, n = map(int, input().split())
    a = list(map(int, input().split()))

    jam = 0
    for i in range(n):
        jam += a[i]
        if jam > k:
            jam = k
        else:
            jam = 0

    print(jam)

if __name__ == ""__main__"":
    main()","1.0"
"2373f3eb-bf38-46fd-ba92-ede0c1bc0ac0","
n = int(input())
time = []
for _ in range(n):
    time.append(int(input()))
time.sort()
ans = 0
i = 0
j = n - 1
while(i < j):
    ans += min(time[i], time[j])
    time[j] -= min(time[i], time[j])
    if(time[j] == 0):
        j -= 1
    i += 1
print(ans)
","1.0"
"2373f3eb-bf38-46fd-ba92-ede0c1bc0ac0","
def min_time(n, speeds):
    speeds.sort()
    pairs = [(speeds[i], speeds[i+1]) for i in range(n-1)]
    pairs.append((speeds[-1], speeds[0]))
    times = [2*pair[0] for pair in pairs]
    return sum(times)

n = int(input())
speeds = list(map(int, input().split()))
print(min_time(n, speeds))
","1.0"
"2373f3eb-bf38-46fd-ba92-ede0c1bc0ac0","def main():
    n = int(input())
    times = []
    for i in range(n):
        times.append(int(input()))
    times.sort()

    total_time = 0
    for i in range(n // 2):
        total_time = max(total_time, times[i] * 2 + times[n - 1 - i])
    if n % 2 == 1:
        total_time = max(total_time, times[n // 2])

    print(total_time)

if __name__ == ""__main__"":
    main()","1.0"
"bb8bf498-d02f-48f2-a15a-f8cc813a5c5f","a1, b1 = map(int, input().split())
a2, b2 = map(int, input().split())
a3, b3 = map(int, input().split())
print(a1+b2-a2, a3+b1-a1)","1.0"
"bb8bf498-d02f-48f2-a15a-f8cc813a5c5f","
a1, b1 = map(int, input().split())
a2, b2 = map(int, input().split())
a3, b3 = map(int, input().split())

Fiona_mushrooms = (a1 + b2 - a2) // 2
Ogre_mushrooms = (b1 + a3 - b3) // 2

print(Fiona_mushrooms, Ogre_mushrooms)
","1.0"
"bb8bf498-d02f-48f2-a15a-f8cc813a5c5f","a1, b1 = map(int, input().split())
a2, b2 = map(int, input().split())
a3, b3 = map(int, input().split())

mushrooms_me = a1 - a2 + b3
mushrooms_fiona = b1 - b2 + a3

print(mushrooms_me, mushrooms_fiona)","1.0"
"0e068baa-ec82-4085-84a0-c436b5832755","a = int(input())
L = [1]*10
L[0] = 2
L[1] = 4
L[2] = 8
L[4] = 5
L[5] = 6
L[6] = 3
L[7] = 7
L[8] = 9
b = [[[(i + j*10 + 2 + 13 + 9*100 + 4*100000) % a for j in range(10)] for i in range(10)] for k in range(10)]
c = [[0]*10 for j in range(10)]
for d in b:
	for e in d:
		for x in e:
			if x == 0:
				c[b.index(d)][d.index(e)] += 1
for i in range(10):
	for j in range(10):
		if c[i][j] != 0:
			print(1 + i*10 + 2 + 13 + 9*100 + 4*100000 + j*1000000, L[(1 + i*10 + 2 + 13 + 9*100 + 4*100000 + j*1000000) % a])","1.0"
"0e068baa-ec82-4085-84a0-c436b5832755","
def mask_numbers(mask, a):
    numbers = []
    for i in range(10 ** len(mask) - 1):
        num_str = str(i)
        if num_str[0] == '?':
            num_str = num_str[1:] + str(j) for j in range(10)
        if '*' in num_str:
            for j in range(1, len(num_str) + 1):
                num_str = num_str[:i] + num_str[i + j:] + num_str[i:i + j]
        if num_str != mask:
            continue
        numbers.append(i)
    div_numbers = [num for num in numbers if num % a == 0]
    return ['{} {}'.format(num, num // a) for num in sorted(div_numbers)]

print('\n'.join(mask_numbers('1?2139*4', 1001)))
","1.0"
"0e068baa-ec82-4085-84a0-c436b5832755","def find_numbers(mask, a):
    numbers = []
    for i in range(1, 11):
        for j in range(10):
            num = int(f""1{j}2139{i}4"")
            if num % a == 0:
                numbers.append((num, num // a))
    return numbers

a = int(input())
result = find_numbers(""1?2139*4"", a)
for num, div in result:
    print(f""{num} {div}"")","1.0"
"ae73b48e-98a5-492c-8872-f60c90a3ff1c","
n = int(input())
for i in range(10, 10 ** 10):
    Cur = []
    j, k = 1, i
    while k != 0:
        Cur += [k % 10]
        k //= 10
    l = len(Cur)
    if Cur[l - 1] != 1:
        continue
    for Cur[l - 4] in '?' + '9':
        for Cur[l - 5] in '1' + '?':
            k = 0
            for x in Cur:
                k += x * j
                j *= 10
            if k % n == 0:
                print(''.join(map(str, Cur)))
","1.0"
"ae73b48e-98a5-492c-8872-f60c90a3ff1c","
def mask_numbers(mask, a):
    numbers = []
    for i in range(100001):
        if i < 1010 and (str(i) == mask[0] + '?' + mask[1:4] + '*' + mask[4:] or i == int(mask[:1] + '?' + mask[1:] + str(a))):
            if i % a == 0:
                numbers.append(i)
    numbers.sort()
    return numbers

print(*mask_numbers('1?954*21', 2))
","1.0"
"ae73b48e-98a5-492c-8872-f60c90a3ff1c","def main():
    a = int(input())
    count = 0
    for i in range(10):
        for j in range(10):
            for k in range(10):
                num = int(f""1{i}954{k}21"")
                if num % a == 0 and num <= 1010:
                    print(num)
                    count += 1
    if count == 0:
        print(""No solutions found."")

if __name__ == ""__main__"":
    main()","1.0"
"86e003c3-5c8d-4897-9f9e-a17c896cc8f1","
a = int(input())
for i in range(10):
  for j in range(10):
    number = 123450000 + i * 1000 + j * 100 + 8
    if number % a == 0:
      print(number, number // a)
","1.0"
"86e003c3-5c8d-4897-9f9e-a17c896cc8f1","
def mask_numbers(mask, a):
    numbers = []
    for i in range(10**(len(mask) - mask.count('*') - 1)):
        for j in range(10):
            if mask.count('?') == 1:
                if i < 10:
                    for k in range(10):
                        num = str(i) + str(j) + mask.replace('?', str(k), 1).replace('*', str(i * 10 + k))
                        if int(num) <= 109:
                            numbers.append(int(num))
                else:
                    for k in range(10):
                        num = str(i) + str(j) + mask.replace('?', str(k), 1).replace('*', str(i * 10 + k))
                        if int(num) <= 109:
                            numbers.append(int(num))
            else:
                num = str(i) + mask.replace('*', str(i))
                if int(num) <= 109:
                    numbers.append(int(num))
    numbers = [num for num in numbers if num % a == 0]
    return sorted(numbers) + [num // a for num in numbers]

a = int(input())
print(*mask_numbers('12345?7?8', a))
","1.0"
"86e003c3-5c8d-4897-9f9e-a17c896cc8f1","def main():
    a = int(input())
    count = 0
    for x in range(10):
        for y in range(10):
            num = 12345000 + x * 1000 + y * 10 + 8
            if num % a == 0:
                print(f""{num} {num // a}"")
                count += 1
    if count == 0:
        print(""No solutions found."")

if __name__ == ""__main__"":
    main()","1.0"
"46191358-5b90-4de8-b69e-0b3597953584","
def divisors(n):
  divs = []
  for i in range(2, int(n**0.5) + 1):
    if n % i == 0:
      divs.append(i)
      if i != n // i:
        divs.append(n // i)
  divs.sort()
  return divs

def M(n):
  divs = divisors(n)
  if len(divs) < 5:
    return 0
  else:
    return divs[0] * divs[1] * divs[2] * divs[3] * divs[4]

a = int(input())
count = 0
n = a + 1
while count < 5:
  if M(n) != 0:
    print(n, M(n))
    count += 1
  n += 1
","1.0"
"46191358-5b90-4de8-b69e-0b3597953584","
def divisors(n):
    divs = []
    for i in range(1, n + 1):
        if n % i == 0:
            divs.append(i)
    return divs

def M(n):
    divs = sorted(set(divisors(n)))
    if len(divs) < 5:
        return 0
    return reduce((lambda x, y: x * y), divs[:5])

def find_numbers():
    a = int(input())
    for n in range(a + 1, 1000000):
        if M(n) == 0:
            print(n, M(n))

find_numbers()
","1.0"
"46191358-5b90-4de8-b69e-0b3597953584","def gcd(a, b):
    while b != 0:
        a, b = b, a % b
    return a

def solve(a):
    n = a + 1
    while True:
        divisors = []
        for i in range(2, int(n**0.5) + 1):
            if n % i == 0:
                divisors.append(i)
                if i != n // i:
                    divisors.append(n // i)
                if len(divisors) > 5:
                    break
        divisors = sorted(set(divisors))
        if len(divisors) >= 5:
            m = 1
            for d in divisors[:5]:
                m *= d
            print(n, m)
            return
        n += 1

a = int(input())
solve(a)","1.0"
"b1cc81ce-a1cb-4d57-9438-fb792a698d9b","
def M(N):
  divisors = []
  for i in range(1, int(N**0.5) + 1):
    if N % i == 0:
      divisors.append(i)
      if i != N // i:
        divisors.append(N // i)
  divisors.sort(reverse=True)
  if len(divisors) >= 2:
    return divisors[0] + divisors[1]
  else:
    return 0

a = int(input())
count = 0
N = a + 1
while count < 5:
  if 0 < M(N) <= 10000:
    print(N, M(N))
    count += 1
  N += 1
","1.0"
"b1cc81ce-a1cb-4d57-9438-fb792a698d9b","
def divisors(n):
    divs = []
    for i in range(1, int(n**0.5) + 1):
        if n % i == 0:
            divs.append(i)
            divs.append(n // i)
    divs.sort()
    return divs

def M(n):
    divs = divisors(n)
    if len(divs) < 2:
        return 0
    else:
        return divs[-2] + divs[-1]

a = int(input())
count = 0
numbers = []
for n in range(a + 1, 1000000):
    if M(n) < 10000:
        continue
    if M(n) % 10 == 0:
        numbers.append((M(n), n))
        count += 1
        if count == 5:
            numbers.sort()
            for m, n in numbers:
                print(n, m)
            break
","1.0"
"b1cc81ce-a1cb-4d57-9438-fb792a698d9b","def gcd(a, b):
    while b != 0:
        a, b = b, a % b
    return a

def lcm(a, b):
    return a * b // gcd(a, b)

def solve(a):
    result = []
    n = a + 1
    while len(result) < 5:
        divisors = []
        for i in range(1, int(n**0.5) + 1):
            if n % i == 0:
                if i != 1 and i != n:
                    divisors.append(i)
                if n // i != 1 and n // i != n:
                    divisors.append(n // i)
        if len(divisors) >= 2:
            divisors.sort()
            m_n = divisors[-1] + divisors[-2]
            if 0 < m_n <= 10000:
                result.append((n, m_n))
        n += 1
    return result

a = int(input())
result = solve(a)
for n, m_n in result:
    print(f""{n} {m_n}"")","1.0"
"f219f00f-7aa0-4548-9766-13c878269d42","
def find_numbers(a, b):
  result = []
  for i in range(a, b + 1):
    m = 1
    while 2**m <= i:
      if i % (2**m) == 0 and i // (2**m) % 3 == 0:
        n = 1
        while 3**n <= i // (2**m):
          if i // (2**m) % (3**n) == 0 and n % 2 != 0:
            result.append(i)
            break
          n += 2
      m += 2
  return sorted(result)

a, b = map(int, input().split())
for number in find_numbers(a, b):
  print(number)
","1.0"
"f219f00f-7aa0-4548-9766-13c878269d42","
def find_numbers(a, b):
    result = []
    for m in range((a-1)//6 + 1, (b-1)//2 + 1):
        for n in range(m*2 + 1, m*2 + 5, 2):
            if (m*2*3*n <= b) and ((m*2*3*n + 2) > a):
                result.append(m*2*3*n)
    return sorted(result)

a, b = map(int, input().split())
print(*find_numbers(a, b))
","1.0"
"f219f00f-7aa0-4548-9766-13c878269d42","def is_valid(n):
    if n % 2 != 0:
        return False
    m = 0
    while n % 2 == 0:
        n //= 2
        m += 1
    return m % 2 == 0 and n % 3 != 0

a, b = map(int, input().split())

for n in range(a, b + 1):
    if is_valid(n):
        print(n)","1.0"
"fb76df8b-f50e-400b-aa83-29cd6b682372","
n = int(input())
print(3 * (n - 1))
","1.0"
"fb76df8b-f50e-400b-aa83-29cd6b682372","
def max_gap(n):
    a = [0] * n
    b = [0] * n
    for i in range(1, n+1):
        a[i-1] = i
        for j in range(i):
            b[j] = max(b[j], a[i-1] - a[j])
    for i in range(n-2, -1, -1):
        a[i] = n - i
        for j in range(i+1, n):
            b[j] = max(b[j], a[i] - a[j])
    return max(b)

n = int(input())
print(max_gap(n))
","1.0"
"fb76df8b-f50e-400b-aa83-29cd6b682372","def max_points_gap(n):
    if n == 1:
        return 0
    return 3 * (n - 1)

n = int(input())
print(max_points_gap(n))","1.0"
"d424177b-fd38-42f2-871e-63244e1e7a08","x = int(input())
k = 1
while True:
  t = 0
  for i in range(2, x//2+1):
    if x % i == 0:
      t += i
      if i != x // i:
        t += x // i
  if str(t)[-1] == '8':
    print(x)
    print(t)
    k += 1
  x += 1
  if k > 5:
    break","1.0"
"d424177b-fd38-42f2-871e-63244e1e7a08","
def divisors(n):
    divs = []
    for i in range(1, n + 1):
        if n % i == 0:
            divs.append(i)
    return divs

def sum_of_min_max(n):
    divs = sorted(divisors(n))
    if len(divs) > 1:
        return divs[-1] + divs[0]
    else:
        return 0

a = int(input())
found = []
for i in range(a + 1, 1000000):
    if sum_of_min_max(i) % 10 == 8:
        found.append((i, sum_of_min_max(i)))
found = sorted(found)
for num, m in found[:5]:
    print(num)
    print(m)
","1.0"
"d424177b-fd38-42f2-871e-63244e1e7a08","def main():
    a = int(input())
    count = 0
    num = a + 1
    while count < 5:
        divisors = []
        for i in range(2, int(num ** 0.5) + 1):
            if num % i == 0:
                divisors.append(i)
                if i != num // i:
                    divisors.append(num // i)
        if len(divisors) > 0:
            M = min(divisors) + max(divisors)
            if M % 10 == 8:
                print(num)
                print(M)
                count += 1
        num += 1

if __name__ == ""__main__"":
    main()","1.0"
"c4a7e827-63de-424a-aec0-aea743d3b5f2","
k = int(input())
n = int(input())
page = n // k + 1
line = n % k
if line == 0:
  line = k
print(page, line)
","1.0"
"c4a7e827-63de-424a-aec0-aea743d3b5f2","
k, n = map(int, input().split())
page, line = 1, n % k
while n > k:
    n -= k
    page += 1
    line = n + 1
print(page, line)
","1.0"
"c4a7e827-63de-424a-aec0-aea743d3b5f2","def main():
    k, n = map(int, input().split())
    page = (n - 1) // k + 1
    line = n % k
    if line == 0:
        line = k
    print(page, line)

if __name__ == ""__main__"":
    main()","1.0"
"6d204921-764f-452c-a01d-578e51695a98","count = int(input())
for i in range(count):
    a, b, c = [int(x) for x in input().split()]
    if a + b <= c or a + c <= b or b + c <= a:
        print(""YES"")
    else:
        print(""NO"")","1.0"
"6d204921-764f-452c-a01d-578e51695a98","
t = int(input())
for _ in range(t):
    a, b, c = map(int, input().split())
    if a + b > c and b + c > a and a + c > b:
        print(""NO"")
    elif a == b + c or b == a + c or c == a + b:
        print(""YES"")
    else:
        print(""NO"")
","1.0"
"6d204921-764f-452c-a01d-578e51695a98","def is_non_triangle(a, b, c):
    return a + b == c or a + c == b or b + c == a

t = int(input())
for _ in range(t):
    a, b, c = map(int, input().split())
    if is_non_triangle(a, b, c):
        print(""YES"")
    else:
        print(""NO"")","1.0"
"15f19bc8-7be3-4a44-a7b1-fc7505badaed","t=int(input())
for i in range(t):
    s=input()
    print(('YES', 'NO')[(s[:2].lower()!=""py"" or s[-4:].lower()!=""hon"")])","1.0"
"15f19bc8-7be3-4a44-a7b1-fc7505badaed","
for _ in range(int(input())):
    s = input().upper()
    if s == 'PYTHON' or s[1:] == 'THON' and s[0] in 'PY':
        print('YES')
    else:
        print('NO')
","1.0"
"15f19bc8-7be3-4a44-a7b1-fc7505badaed","t = int(input())
for _ in range(t):
    s = input()
    if s.lower() == ""python"":
        print(""YES"")
    else:
        print(""NO"")","1.0"
"598ac092-b788-4134-867c-8e307d515e67","
import sys

def main():
  k = int(input())
  n = int(input())

  test_tubes = []
  for _ in range(n):
    m = int(input())
    percentages = [int(x) for x in input().split()]
    test_tubes.append((m, percentages))

  test_tubes.sort(key=lambda x: x[1][0])

  cur_percentages = test_tubes[0][1][0]
  cur_count = test_tubes[0][0]
  total_increase = 0

  for i in range(1, n):
    m, percentages = test_tubes[i]
    if cur_percentages == percentages[0]:
      cur_count += m
    else:
      total_increase += (percentages[0] - cur_percentages) * cur_count
      cur_percentages = percentages[0]
      cur_count = m

  print(total_increase)

if __name__ == ""__main__"":
  main()
","1.0"
"598ac092-b788-4134-867c-8e307d515e67","
k = int(input())
n = int(input())

max_percent = 0
total_substances = 0

for _ in range(n):
    mi, *percent = map(int, input().split())
    total_substances += mi
    max_percent = max(max_percent, max(percent))

critical_increase = k * total_substances / max_percent

print(critical_increase)
","1.0"
"598ac092-b788-4134-867c-8e307d515e67","n, k = int(input()), int(input())
tubes = []
for _ in range(n):
    m = int(input())
    percentages = list(map(int, input().split()))
    tubes.append(percentages)

def find_critical_number(tubes):
    tubes.sort(key=lambda x: x[0])
    critical_number = 0

    while len(tubes) > 1:
        t1 = tubes.pop(0)
        t2 = tubes.pop(0)

        diff = t1[0] - t2[0]
        if diff % k != 0:
            diff = ((diff // k) + 1) * k - diff

        critical_number += diff
        t1[0] += diff
        t1.extend(t2)

        tubes.append(t1)
        tubes.sort(key=lambda x: x[0])

    return critical_number

print(find_critical_number(tubes))","1.0"
"36d58b20-7fe1-452b-ac10-e1ed680aa6b3","
n, k, t, c, d, p, nl, np = map(int, input().split())
compliments = min(n, min(t // nl, c, d, p // np))
last_guest = (compliments % n) + 1
print(compliments, last_guest)
","1.0"
"36d58b20-7fe1-452b-ac10-e1ed680aa6b3","
def main():
    n, k, t, c, d, p, nl, np = map(int, input().split())
    compliments = 0
    guests = set(range(1, k+1))
    cocktails = t // (nl + d + p)
    for _ in range(cocktails):
        compliments += k
        guests.discard(compliments % k + 1)
    if (t % (nl + d + p)):
        compliments += k - (t % (nl + d + p))
    print(compliments, next(iter(guests)))

main()
","1.0"
"36d58b20-7fe1-452b-ac10-e1ed680aa6b3","def main():
    n, k, t, c, d, p, nl, np = map(int, input().split())

    passion_fruit = t // nl
    mangosteen = d // (n + 1)
    kiwano = p // np

    total_cocktails = min(passion_fruit, mangosteen, kiwano)

    last_guest = (total_cocktails - 1) % n + 1

    print(total_cocktails, last_guest)

if __name__ == ""__main__"":
    main()","1.0"
"0024e95a-bf71-4dac-a246-626b5821e403","n1,p1,m1,t1,s1=map(int,input().split())
n2,p2,m2,t2,s2=map(int,input().split())
p=n1*(p1+m1*t1+s1)
s=n2*(p2+m2*t2+s2)
if p<s:print(""Python"",p)
elif s<p:print(""Pascal"",s)
else:print(""Draw"",p)","1.0"
"0024e95a-bf71-4dac-a246-626b5821e403","
n1, p1, m1, t1, s1 = map(int, input().split())
n2, p2, m2, t2, s2 = map(int, input().split())

time1 = (n1-1)*p1 + n1*t1 + n1*m1*t1 + (n1-1)*s1
time2 = (n2-1)*p2 + n2*t2 + n2*m2*t2 + (n2-1)*s2

if time1 < time2:
 print(""Python"", time1)
elif time1 > time2:
 print(""Pascal"", time2)
else:
 print(""Draw"", time1)
","1.0"
"0024e95a-bf71-4dac-a246-626b5821e403","n1, p1, m1, t1, s1 = map(int, input().split())
n2, p2, m2, t2, s2 = map(int, input().split())

time1 = (p1 + m1 * t1 + s1) * n1
time2 = (p2 + m2 * t2 + s2) * n2

if time1 < time2:
    print(""Python"", time1)
elif time2 < time1:
    print(""Pascal"", time2)
else:
    print(""Draw"", time1)","1.0"
"fa181552-a073-4c25-928c-1a5c48505a6b","
n = int(input())
s = list(map(int, input().split()))

current_num = s[0]
count = 1
result = []

for i in range(1, n):
  if s[i] == current_num:
    count += 1
  else:
    result.append(count)
    result.append(current_num)
    current_num = s[i]
    count = 1

result.append(count)
result.append(current_num)

print(*result)
","1.0"
"fa181552-a073-4c25-928c-1a5c48505a6b","
n = int(input())
nums = list(map(int, input().split()))
counts = {}
for num in nums:
    counts[num] = counts.get(num, 0) + 1
result = []
for num, count in sorted(counts.items()):
    result.append(count)
    result.extend([num] * count)
print(*result)
","1.0"
"fa181552-a073-4c25-928c-1a5c48505a6b","def shorten_sequence(sequence):
    result = []
    count = 1
    prev = sequence[0]
    for i in range(1, len(sequence)):
        if sequence[i] == prev:
            count += 1
        else:
            result.append(count)
            result.append(prev)
            prev = sequence[i]
            count = 1
    result.append(count)
    result.append(prev)
    return result

n = int(input())
sequence = list(map(int, input().split()))
shortened = shorten_sequence(sequence)
print(*shortened)","1.0"
"b962261e-7638-421f-9ea1-ecd77520e209","
n = int(input())
count = 0
while n > 0:
  n -= 1
  count += 1
  if n >= count * (count + 1):
    n -= count * (count + 1)
  else:
    count -= 1
    n += count * (count + 1)
print(count)
","1.0"
"b962261e-7638-421f-9ea1-ecd77520e209","
def max_bonus(n):
    plots = [0] * (n + 1)
    for i in range(1, n + 1):
        for j in range(i, n + 1):
            k = i * j
            if k > n:
                break
            plots[k] = max(plots[k], plots[i - 1] + 1)
    for i in range(n + 1, len(plots)):
        plots[i] = plots[i - 1] + 1
    return plots[n]

n = int(input())
print(max_bonus(n))
","1.0"
"b962261e-7638-421f-9ea1-ecd77520e209","def main():
    n = int(input())
    i = 1
    while True:
        if n >= i * i:
            n -= i * i
        else:
            break
        i += 1
    print(i)

if __name__ == ""__main__"":
    main()","1.0"
"13bcf8ad-b139-4bf6-8b16-b99b7cccf65d","t=int(input())
for i in range(t):
    l=list(map(int,input().split()))
    ans=0
    while l[0]%l[1]==0:
        l[0]//=l[1]
        ans+=1
    while l[0]>0:
        l0=l[0]//2
        ans+=l[0]-l0
        l[0]=l0
    print(ans)","1.0"
"13bcf8ad-b139-4bf6-8b16-b99b7cccf65d","
def gcd(a, b):
    while b:
        a, b = b, a % b
    return a

t = int(input())
for _ in range(t):
    n, k = map(int, input().split())
    g = gcd(n, k)
    steps = 0
    while n != 0:
        n -= g
        steps += (n + g - 1) // g
        n //= k
        steps += (n - 1) // k
    print(steps)
","1.0"
"13bcf8ad-b139-4bf6-8b16-b99b7cccf65d","def main():
    t = int(input())
    for _ in range(t):
        n, k = map(int, input().split())
        steps = 0
        while n > 1:
            if n % k == 0:
                n //= k
            else:
                n -= 1
            steps += 1
        print(steps)

if __name__ == ""__main__"":
    main()","1.0"
"9e91eca3-2074-49fc-a46e-35630d7d0e53","
n = int(input())
lst = [int(x) for x in input().split()]
lst.sort()
pos = []
neg = []
for x in lst:
    if x > 0:
        pos.append(x)
    else:
        neg.append(x)
neg.sort(reverse=True)
a = 0
b = 0
for i in range(min(len(pos), len(neg))):
    a += pos[i]
    b += neg[i]
for i in range(len(pos) - len(neg)):
    a += pos[i]
for i in range(len(neg) - len(pos)):
    b += neg[i]
print(a - b)
","1.0"
"9e91eca3-2074-49fc-a46e-35630d7d0e53","
def max_diff(n, arr):
    arr.sort()
    total = sum(arr)
    return max(total - sum(arr[:n//2]), sum(arr[n//2:]) - sum(arr[:n//2]))

n = int(input())
arr = list(map(int, input().split()))
print(max_diff(n, arr))
","1.0"
"9e91eca3-2074-49fc-a46e-35630d7d0e53","def main():
    n = int(input())
    volunteers = list(map(int, input().split()))
    total_sum = sum(volunteers)
    max_diff = 0
    left_sum = 0
    for i in range(n - 1):
        left_sum += volunteers[i]
        right_sum = total_sum - left_sum
        max_diff = max(max_diff, abs(left_sum - right_sum))
    print(max_diff)

if __name__ == ""__main__"":
    main()","1.0"
"aea68e26-3891-4316-b0ca-0091e0125d96","
a = int(input())
c = 0
for b in range(a + 1, 9999999999999999999):
    for d in range(2, b // 2):
        if b % d == 0 and d % 10 == 7 and d != 7 and d != b:
            print(b, d)
            c += 1
    if c == 5:
        exit()
","1.0"
"aea68e26-3891-4316-b0ca-0091e0125d96","
def divisors_ending_7(n):
    divisors = []
    for i in range(1, n):
        if n % i == 0 and i % 10 != 7 and i != n:
            divisors.append(i)
    return sorted(divisors)

def find_numbers(a):
    for num in range(a+1, 1000000):
        if any(d % 10 == 7 for d in divisors_ending_7(num)):
            if (smaller := next((d for d in divisors_ending_7(num) if d != num), None)) is not None:
                print(num)
                print(smaller)
                break

find_numbers(100)
","1.0"
"aea68e26-3891-4316-b0ca-0091e0125d96","A = int(input())

def is_divisor_ending_in_7(n):
    for i in range(17, n, 10):
        if n % i == 0:
            return i
    return None

count = 0
num = A + 1

while count < 5:
    divisor = is_divisor_ending_in_7(num)
    if divisor:
        print(num, divisor)
        count += 1
    num += 1","1.0"
"4e22855c-d210-4e19-8715-87f6cf4bba7c","
def count_even_divisors(n):
  count = 0
  for i in range(2, n + 1, 2):
    if n % i == 0:
      count += 1
  return count

a, b = map(int, input().split())

for i in range(a, b + 1):
  if count_even_divisors(i) == 3:
    print(i)
","1.0"
"4e22855c-d210-4e19-8715-87f6cf4bba7c","
def divisors(n):
    divs = []
    for i in range(1, int(n**0.5) + 1):
        if n % i == 0:
            divs.append(i)
            divs.append(n // i)
    divs.sort()
    return divs

def count_even_odd(divs):
    count_even = 0
    count_odd = 0
    for d in divs:
        if d % 2 == 0:
            count_even += 1
        else:
            count_odd += 1
    return count_even, count_odd

a, b = map(int, input().split())
for i in range(a, b+1):
    divs = divisors(i)
    if len(divs) == 4:
        count_even, count_odd = count_even_odd(divs)
        if count_even == 3 and count_odd <= 2:
            print(i)
","1.0"
"4e22855c-d210-4e19-8715-87f6cf4bba7c","a, b = map(int, input().split())

def count_even_divisors(n):
    count = 0
    for i in range(2, int(n**0.5) + 1, 2):
        if n % i == 0:
            count += 1
            if i * i != n:
                count += 1
    return count

for num in range(a, b + 1):
    if count_even_divisors(num) == 3:
        print(num)","1.0"
"7da74132-0efc-4c1f-9755-f247bbba2ab9","def get_divs(n):
  divs = []
  i = 1
  while i * i <= n:
    if n % i == 0:
      divs.append(i)
      if i * i != n:
        divs.append(n // i)
    i += 1
  divs.sort(reverse=True)
  if len(divs) < 5:
    return 0
  else:
    return divs[4]
inp = int(input())
for i in range(5):
  while get_divs(inp) == 0:
    inp += 1
  print(inp, get_divs(inp))
  inp += 1","1.0"
"7da74132-0efc-4c1f-9755-f247bbba2ab9","
def divisors(n):
    divs = []
    for i in range(1, n + 1):
        if n % i == 0:
            divs.append(i)
    return divs

def fifth_largest(n):
    divs = sorted(divisors(n), reverse=True)[:5]
    return divs[4] if len(divs) > 4 else 0

def find_numbers(a):
    found = set()
    for n in range(a + 1, 1e6):
        m = fifth_largest(n)
        if m > 0:
            found.add(n)
            if len(found) == 5:
                return sorted(list(found))
    return []

a = int(input())
numbers = find_numbers(a)
if numbers:
    for n in numbers:
        print(n, fifth_largest(n))
","1.0"
"7da74132-0efc-4c1f-9755-f247bbba2ab9","def gcd(a, b):
    while b != 0:
        a, b = b, a % b
    return a

def solve(a):
    n = a + 1
    ans = []
    while len(ans) < 5:
        divs = []
        for i in range(2, int(n**0.5) + 1):
            if n % i == 0:
                divs.append(i)
                if i != n // i:
                    divs.append(n // i)
        divs.sort(reverse=True)
        if len(divs) >= 5:
            ans.append((n, divs[4]))
        n += 1
    return ans

a = int(input())
res = solve(a)
for n, m in res:
    print(n, m)","1.0"
"91935175-de25-4b6f-bbaf-d836a8e01406","
a = int(input())
ans = []
for i in range(10000000, 100000000):
    s = str(i)
    if s[2] == s[5] and s[3] == '?' and (s[4] == '*' or s[4] == '0') and s[1] != '0' and s[6] == '5' and s[7] == '6' and int(s) % a == 0:
        ans.append((s, int(s) // a))
ans.sort(key = lambda x: x[1])
for i in ans:
    print(i[0], i[1])
","1.0"
"91935175-de25-4b6f-bbaf-d836a8e01406","
def divisors(a):
    result = []
    for i in range(1, a+1):
        if a % i == 0:
            result.append(i)
    return result

def find_numbers(mask):
    numbers = []
    for i in range(100, 109):
        for j in range(1000, 10000):
            if mask.count('?') == 2 and len(str(j)) == 4:
                if mask[0] == '1' and j // 100 == i:
                    numbers.append((j, i))
                if mask[3] == '6' and j % 100 == 5:
                    numbers.append((j, i))
            elif mask.count('*') == 1 and len(str(j)) > 1:
                if mask.count('?') == 0 and mask.count('*') == 1 and mask[1] == '1' and j // 100 == i:
                    for k in range(10):
                        l = j - k * 100
                        if l // 10 == i and l % 10 == 5:
                            numbers.append((j, i))
    return [(n, n // a) for n, a in numbers if n % a == 0]

a = int(input())
print(*[str(n) + ' ' + str(n // a) for n, _ in find_numbers('12??1*56') if n % a == 0], sep='\n')
","1.0"
"91935175-de25-4b6f-bbaf-d836a8e01406","def main():
    a = int(input())
    for m in range(1, 10**8):
        if str(m).startswith(""12"") and str(m).endswith(""56"") and ""1"" in str(m)[4:-2] and m % a == 0:
            print(m, m // a)

if __name__ == ""__main__"":
    main()","1.0"
"dc7df795-44d0-4efc-a04b-f0701610200f","
a, b = map(int, input().split())
for i in range(a, b + 1):
    if i % 2 != 0:
        continue
    if i % 3 != 0:
        continue
    print(i)
","1.0"
"dc7df795-44d0-4efc-a04b-f0701610200f","
def find_numbers(a, b):
    for n in range(a, b+1):
        for m in range(1, n//2+1):
            if n % 2 == 0 and m % 2 != 0:
                if n == m*3*n//2:
                    print(n)
                    break

find_numbers(100, 1000)
","1.0"
"dc7df795-44d0-4efc-a04b-f0701610200f","def is_valid(n):
    while n % 2 == 0:
        n //= 2
    while n % 3 == 0:
        n //= 3
    return n == 1

a, b = map(int, input().split())

for n in range(a, b + 1):
    if is_valid(n):
        print(n)","1.0"
"48f237db-e593-4be6-b3f9-10757a1d07ec","
print(input())
","1.0"
"48f237db-e593-4be6-b3f9-10757a1d07ec","
def main():
    input_str = input(""Tags:Tests,\n"")
    number = int(input_str.split("","")[1].strip())
    print(number)

if __name__ == ""__main__"":
    main()
","1.0"
"48f237db-e593-4be6-b3f9-10757a1d07ec","Here is the Python code to solve the task:

x = int(input())
print(x)","1.0"
"5139f663-9fc0-45bd-af9f-53b1095bbd7d","
n, m = map(int, input().split())
a = list(map(int, input().split()))
b = list(map(int, input().split()))
ans = 0
for i in range(n):
  if a[i] + m >= b[i]:
    ans += a[i]
    m -= b[i] - a[i]
  else:
    ans += a[i] + m
    m = 0
print(ans)
","1.0"
"5139f663-9fc0-45bd-af9f-53b1095bbd7d","
n, m = map(int, input().split())
a = list(map(int, input().split()))
b = list(map(int, input().split()))

candies = 0
for i in range(n):
    if b[i] >= sum(a[:i+1]):
        candies += b[i] - sum(a[:i+1])
        m -= candies
        candies = max(candies, m)

print(candies)
","1.0"
"5139f663-9fc0-45bd-af9f-53b1095bbd7d","def main():
    n, m = map(int, input().split())
    a = list(map(int, input().split()))
    b = list(map(int, input().split()))

    dp = [0] * (m + 1)
    for i in range(n):
        for j in range(m, -1, -1):
            if j >= a[i] and dp[j] < dp[j - a[i]] + a[i]:
                dp[j] = dp[j - a[i]] + a[i]
            if j >= b[i]:
                dp[j] = max(dp[j], dp[j - b[i]] + b[i])

    print(dp[m])

if __name__ == ""__main__"":
    main()","1.0"
"36f03fc0-93a2-4747-b19c-5f77f5ad2aa6","
n, k = map(int, input().split())
encryption = input()

for i in range(n - k + 1):
  if encryption[i:i + k] == encryption[i + k:i + 2 * k]:
    print(""YES"")
    exit()
print(""NO"")
","1.0"
"36f03fc0-93a2-4747-b19c-5f77f5ad2aa6","
def find_base(n, k, encryption):
    for i in range(n - k + 1):
        if encryption[i:i+k] == encryption[j:j+k] for j in range(i + k, n)):
            return 'YES'
    return 'NO'

n, k = map(int, input().split())
encryption = input()
print(find_base(n, k, encryption))
","1.0"
"36f03fc0-93a2-4747-b19c-5f77f5ad2aa6","def find_secret_code(encryption, base_length):
    for i in range(len(encryption) - base_length + 1):
        code = encryption[i:i + base_length]
        count = 0
        for j in range(i, len(encryption) - base_length + 1, base_length):
            if encryption[j:j + base_length] == code:
                count += 1
            if count >= 2:
                return ""YES""
    return ""NO""

n, k = map(int, input().split())
encryption = input()

print(find_secret_code(encryption, k))","1.0"
"217c8eed-82ab-4d31-b05a-5743eb20e552","
n, m = map(int, input().split())
counts = [0] * 10
for i in range(1, n + 1):
  for j in range(1, m + 1):
    for digit in str(i * j):
      counts[int(digit)] += 1
for count in counts:
  print(count)
","1.0"
"217c8eed-82ab-4d31-b05a-5743eb20e552","
def gcd(a, b):
    while b:
        a, b = b, a % b
    return a

def mul_table(n, m):
    table = [[0] * m for _ in range(n)]
    for i in range(n):
        for j in range(m):
            table[i][j] = i * j
    return table

def count_digits(table, n):
    count = [0] * n
    for row in table:
        for num in row:
            count[num] += 1
    return count

def main():
    n, m = map(int, input().split())
    table = mul_table(n, m)
    counts = count_digits(table, 10)
    for i in range(10):
        print(counts[i])

main()
","1.0"
"217c8eed-82ab-4d31-b05a-5743eb20e552","def count_digits(n, m):
    counts = [0] * 10
    for i in range(1, n + 1):
        for j in range(1, m + 1):
            product = i * j
            while product > 0:
                digit = product % 10
                counts[digit] += 1
                product //= 10
    return counts

n, m = map(int, input().split())
counts = count_digits(n, m)
for count in counts:
    print(count)","1.0"
"6bda3287-a2ae-483d-9171-8373a20531d9","n1, n2 = input().split()
p1, p2 = n1.find("".""), n2.find(""."")
n1, n2 = n1.replace(""."", """"), n2.replace(""."", """")
if p1 == -1:
    n1 += ""0""
else:
    n1 = n1[:p1] + n1[p1+1:]
if p2 == -1:
    n2 += ""0""
else:
    n2 = n2[:p2] + n2[p2+1:]
if len(n1) > len(n2):
    n2 = ""0"" * (len(n1) - len(n2)) + n2
else:
    n1 = ""0"" * (len(n2) - len(n1)) + n1
print(""+"" if n1 > n2 else ""="" if n1 == n2 else ""-"")","1.0"
"6bda3287-a2ae-483d-9171-8373a20531d9","
a, b = input().split('\n')
if float(a) < float(b):
 print('<')
elif float(a) > float(b):
 print('>')
else:
 print('=')
","1.0"
"6bda3287-a2ae-483d-9171-8373a20531d9","def main():
    a = input()
    b = input()
    if a < b:
        print('<')
    elif a > b:
        print('>')
    else:
        print('=')

if __name__ == '__main__':
    main()","1.0"
"413c96c5-232e-4eff-9ba1-b774170c53c5","x1, y1, x2, y2, xa, ya = map(int, input().split())
if x1 == x2:
    xb, yb = xa, 2*y1 - ya
else:
    xb, yb = 2*x1 - xa, ya","1.0"
"413c96c5-232e-4eff-9ba1-b774170c53c5","
def find_symmetry(x1, y1, x2, y2, xa, ya):
    k = (y2 - y1) / (x2 - x1)
    b = y1 - k * x1
    xb = 2 * xa - (k * k + 1) * (ya - b) / (2 * k)
    yb = k * xb + (ya - b)
    return xb, yb

x1, y1, x2, y2, xa, ya = map(int, input().split())
xb, yb = find_symmetry(x1, y1, x2, y2, xa, ya)
print(xb, yb)
","1.0"
"413c96c5-232e-4eff-9ba1-b774170c53c5","def find_symmetrical_point(x1, y1, x2, y2, xa, ya):
    if x1 == x2:
        xb = xa
        yb = 2 * x1 - ya
    else:
        xb = 2 * y1 - ya
        yb = ya

    return xb, yb

x1, y1, x2, y2 = map(int, input().split())
xa, ya = map(int, input().split())

xb, yb = find_symmetrical_point(x1, y1, x2, y2, xa, ya)
print(xb, yb)","1.0"
"443dff94-1bdb-4880-8ae7-7a899a197e4e","a1, a2, a3 = map(int, input().split())
print([""NO"", ""YES""][(a1 + a2 == a3) or (a1 + a3 == a2) or (a2 + a3 == a1)])","1.0"
"443dff94-1bdb-4880-8ae7-7a899a197e4e","
def rearrange(a1, a2, a3):
    s = sorted([a1, a2, a3])
    return 'YES' if (s[0] + s[1] == s[2]) or (s[0] + s[2] == s[1]) or (s[1] + s[2] == s[0]) else 'NO'

a1, a2, a3 = map(int, input().split())
print(rearrange(a1, a2, a3))
","1.0"
"443dff94-1bdb-4880-8ae7-7a899a197e4e","def main():
    a1, a2, a3 = map(int, input().split())
    if a1 + a2 == a3 or a1 + a3 == a2 or a2 + a3 == a1:
        print(""YES"")
    else:
        print(""NO"")

if __name__ == ""__main__"":
    main()","1.0"
"b8468aa3-8577-4202-9b73-f9e4c346f7bd","```python
n, m, k = map(int, input().split())
if (n + m) % (k - 2) == 0 and n <= (k - 2) * ((n + m) // (k - 2)):
  print((n + m) // (k content is not safe and I can't generate an answer for your request","1.0"
"b8468aa3-8577-4202-9b73-f9e4c346f7bd","
n, m, k = map(int, input().split())

if m + n < 2:
    print(0)
else:
    helicopters = (m + n - 1) // (k - 1) + 1
    if helicopters * (k - 1) < m + n:
        helicopters += 1
    print(helicopters)
","1.0"
"b8468aa3-8577-4202-9b73-f9e4c346f7bd","def main():
    n, m, k = map(int, input().split())
    if m < 2 * (n // k) + (0 if n % k == 0 else 2):
        print(0)
    else:
        print((n + m - 2) // (k - 2))

if __name__ == ""__main__"":
    main()","1.0"
"3667758b-e19a-4799-934b-a51dda7dfe40","n, m = map(int, input().split())
a = [list(map(int, input().split())) for _ in range(n)]
ans = n * m
for i in range(1, n - 1):
    for j in range(1, m - 1):
        if a[i][j]:
            x1 = i
            y1 = j
            x0 = 1 + i
            y0 = 1 + j
            cur = 0
            for x in range(1, n + 1):
                for y in range(1, m + 1):
                    if (x >= x1 and x <= x0 and y >= y1 and y <= y0) or (x == x1 and y == y1) or (x == x0 and y == y1) or (x == x1 and y == y0):
                        if a[x - 1][y - 1] == 0:
                            cur += 1
            ans = min(ans, cur)
print(ans)","1.0"
"3667758b-e19a-4799-934b-a51dda7dfe40","
def dfs(x, y, visited, good):
    if x < 1 or x > good[0] or y < 1 or y > good[1]:
        return
    if (x, y) in visited or not good[x-1][y-1]:
        return
    visited.add((x, y))
    for i in range(x-1, x+2):
        for j in range(y-1, y+2):
            dfs(i, j, visited, good)

def solve():
    n, m = map(int, input().split())
    good = [[0]*m for _ in range(n)]
    for i in range(1, n+1):
        row = list(map(int, input().split()))
        for j in range(1, m+1):
            if row[j-1]:
                good[i-1][j-1] = 1
    visited = set()
    for i in range(1, n+1):
        for j in range(1, m+1):
            if good[i-1][j-1]:
                dfs(i, j, visited, good)
    return len(good) - len(visited)

print(solve())
","1.0"
"3667758b-e19a-4799-934b-a51dda7dfe40","def main():
    n, m = map(int, input().split())
    table = [list(map(int, input().split())) for _ in range(n)]

    def paint_cells(x1, y1, x2, y2):
        for i in range(min(x1, x2), max(x1, x2) + 1):
            for j in range(min(y1, y2), max(y1, y2) + 1):
                table[i - 1][j - 1] = 1

    def is_all_cells_painted():
        for row in table:
            if 0 in row:
                return False
        return True

    operations = 0
    while not is_all_cells_painted():
        for i in range(1, n + 1):
            for j in range(1, m + 1):
                if table[i - 1][j - 1] == 0:
                    for corner in [(1, 1), (n, 1), (1, m), (n, m)]:
                        if table[corner[0] - 1][corner[1] - 1] == 0:
                            paint_cells(i, j, corner[0], corner[1])
                            operations += 1
                            break
                    break
            else:
                continue
            break

    print(operations)

if __name__ == ""__main__"":
    main()","1.0"
"9e28f52f-22bd-4f1d-88b5-cff58644e932","
s, t = [int(x) for x in input().split()]
print((12 - s) + (t if t <= s else 0))
","1.0"
"9e28f52f-22bd-4f1d-88b5-cff58644e932","
S, T = map(int, input().split())
if T < S + 12:
    hours = T - S
else:
    hours = T - S + 24
print(hours)
","1.0"
"9e28f52f-22bd-4f1d-88b5-cff58644e932","def main():
    S, T = map(int, input().split())
    print(T - S if T >= S else 12 - S + T)

if __name__ == ""__main__"":
    main()","1.0"
"f6f2af27-2624-4cd5-8ebf-27aa0c54e92c","a = int(input())
x = int(input())
b = int(input())
y = int(input())
c = int(input())
d = a + x * c
e = b + y * c
if d > e:
	print(""Mani"")
elif e > d:
	print(""Pulja"")
else:
	print(""Draw"")","1.0"
"f6f2af27-2624-4cd5-8ebf-27aa0c54e92c","
a = int(input())
x = int(input())
b = int(input())
y = int(input())
c = int(input())

mani = a
bullet = b

for _ in range(c):
    mani += x
    bullet += y
    if mani > bullet:
        print(""Mani"")
        break
    elif bullet > mani:
        print(""Bullet"")
        break
else:
    print(""Draw"")
","1.0"
"f6f2af27-2624-4cd5-8ebf-27aa0c54e92c","a = int(input())
x = int(input())
b = int(input())
y = int(input())
c = int(input())

mani_nuts = a + x * c
bullet_nuts = b + y * c

if mani_nuts > bullet_nuts:
    print(""Mani"")
elif bullet_nuts > mani_nuts:
    print(""Pulja"")
else:
    print(""Draw"")","1.0"
"c1d9340f-9135-4375-a447-490e2e1ff2e6","n,m=map(int,input().split())
print(min(int(n/2),m))","1.0"
"c1d9340f-9135-4375-a447-490e2e1ff2e6","
def max_bouquets(n, m):
    n, m = min(n, m), max(n, m)
    return (n + m - 1) // 2 if n + m > 1 else 1

n, m = map(int, input().split())
print(max_bouquets(n, m))
","1.0"
"e89d534d-5861-4b7b-b06d-d37e247dc249","
def count_casio_numbers(n):
  count = 0
  for i in range(1, n + 1):
    if i ** (1/2) == int(i ** (1/2)) or i ** (1/3) == int(i ** (1/3)):
      count += 1
  return count

t = int(input())
for _ in range(t):
  n = int(input())
  print(count_casio_numbers(n))
","1.0"
"e89d534d-5861-4b7b-b06d-d37e247dc249","
def is_square(n):
    for i in range(1, int(n**0.5) + 1):
        if i*i == n:
            return True
    return False

def is_cube(n):
    for i in range(1, int(n**0.333333333) + 1):
        if i*i*i == n:
            return True
    return False

def casio_count(n):
    squares = set()
    cubes = set()
    for i in range(1, n + 1):
        if is_square(i):
            squares.add(i)
        if is_cube(i):
            cubes.add(i)
    result = len(squares) + len(cubes) - len(squares & cubes)
    return result

t = int(input())
for _ in range(t):
    n = int(input())
    print(casio_count(n))
","1.0"
"e89d534d-5861-4b7b-b06d-d37e247dc249","def countlikednumbers(n):
    count = 0
    i = 1
    while i * i <= n:
        if i * i * i <= n:
            count += 1
        count += 1
        i += 1
    return count

t = int(input())
for _ in range(t):
    n = int(input())
    print(countlikednumbers(n))","1.0"
"b0ef8ffa-6aa7-4ef4-950b-f26dd9b3ae41","
n = int(input())
a = []
for i in range(n):
    a.append(float(input()))
a.sort(reverse=True)
for i in range(1, n):
    a[0] = (a[0] + a[i]) / 2
print(a[0])
","1.0"
"b0ef8ffa-6aa7-4ef4-950b-f26dd9b3ae41","
def max_average(nums):
    n = len(nums)
    nums.sort()
    max_sum = float('-inf')
    for i in range(n - 1):
        for j in range(i + 1, n):
            max_sum = max(max_sum, nums[i] + nums[j] + (nums[n - 1] - nums[i] - nums[j]) * (n - i - 1 - j))
    return max_sum / n

n = int(input())
nums = list(map(int, input().split()))
print(format(max_average(nums), '.6f'))
","1.0"
"b0ef8ffa-6aa7-4ef4-950b-f26dd9b3ae41","def main():
    n = int(input())
    numbers = [int(input()) for _ in range(n)]
    numbers.sort(reverse=True)
    result = numbers[0]
    for i in range(1, n):
        result = (result + numbers[i]) / 2
    print(""{:.6f}"".format(result))


if __name__ == ""__main__"":
    main()","1.0"
"150821fb-095d-4519-b21f-2462c0415618","
M = 1<<50

def f(K, S):
  if K == 0:
    return 0
  if S > M:
    return M
  return f(K, S // 2) + f(K - 1, S -  (S // 2)) + 1

K, S = map(int, input().split())
print(f(K, S))
","1.0"
"150821fb-095d-4519-b21f-2462c0415618","
K, S = map(int, input().split())
count = 0
for i in range(K, 0, -1):
    if 2 ** i <= S:
        S -= 2 ** i
        count += 1
print(count)
","1.0"
"150821fb-095d-4519-b21f-2462c0415618","def main():
    K, S = map(int, input().split())
    registers = [2**i for i in range(K+1)]
    count = 0
    while S > 0:
        for i in range(K, -1, -1):
            if registers[i] <= S:
                S -= registers[i]
                count += 1
                break
    print(count)

if __name__ == '__main__':
    main()","1.0"
"e8d630c8-0ae6-4db6-95f1-ded3b8106ef0","Internal server error","1.0"
"e8d630c8-0ae6-4db6-95f1-ded3b8106ef0","
def bfs(x, y, grid):
    visited = [[False] * grid[0] + [None] for _ in grid]
    queue = [(x, y)]
    while queue:
        x, y = queue.pop(0)
        if grid[x][y] == 'A' and visited[x][y] is None:
            visited[x][y] = True
            for dx, dy in ((-1, 0), (1, 0), (0, -1), (0, 1)):
                nx, ny = x + dx * 2, y + dy * 2
                if 0 <= nx < len(grid) and 0 <= ny < len(grid[0]) and grid[nx][ny] == 'B' and not visited[nx][ny]:
                    queue.append((nx, ny))
    return sum(1 for i in range(len(grid)) if all(not visited[i][j] for j in range(len(grid[0])) if grid[i][j] == 'A'))

n, m = map(int, input().split())
grid = [list(input()) for _ in range(n)]
max_a = 0
for i in range(n):
    for j in range(m):
        if grid[i][j] == 'A':
            grid[i][j] = '.'
            destroyed = bfs(i, j, grid)
            grid[i][j] = 'A'
            max_a = max(max_a, destroyed)
print(max_a)
","1.0"
"e8d630c8-0ae6-4db6-95f1-ded3b8106ef0","def nanocannibalism(n, m, field):
    result = 0
    for i in range(n):
        for j in range(m):
            if field[i][j] == 'B':
                count = 0
                if i > 0 and field[i-1][j] == 'A':
                    count += 1
                if i < n-1 and field[i+1][j] == 'A':
                    count += 1
                if j > 0 and field[i][j-1] == 'A':
                    count += 1
                if j < m-1 and field[i][j+1] == 'A':
                    count += 1
                result += count
    return result

n, m = map(int, input().split())
field = [input() for _ in range(n)]
print(nanocannibalism(n, m, field))","1.0"
"dd42948f-07fd-4e99-98e0-2696850335fe","
def count_digits(n):
  return len(str(n))

def stabilize(n):
  steps = 0
  while n != count_digits(n):
    n = count_digits(n)
    steps += 1
  return steps

n = int(input())
print(stabilize(n))
","1.0"
"dd42948f-07fd-4e99-98e0-2696850335fe","
def count_units(n):
    count, n = 0, n
    while n != count:
        count = sum(int(digit) for digit in str(n))
        n = count
    return count

n = input()
print(count_units(int(n)))
","1.0"
"dd42948f-07fd-4e99-98e0-2696850335fe","def count_units(n):
    count = 0
    while n > 0:
        count += n % 10
        n //= 10
    return count

def stabilize(n):
    while n > 9:
        n = count_units(n)
    return n

n = int(input())
print(stabilize(n))","1.0"
"c5c3180e-2ab6-42fd-b993-af221e0070ca","
n=int(input())
a=list(map(int,input().split()))
a.sort()
d=a[-1]-a[0]
c=0
for i in range(n-1):
    if a[-1]-a[i]>d:
        d=a[-1]-a[i]
        c=1
        continue
    if a[-1]-a[i]==d:
        c+=1
print(d,c)
","1.0"
"c5c3180e-2ab6-42fd-b993-af221e0070ca","
def max_diff(b):
    b.sort()
    n = len(b)
    max_diff = b[n-1] - b[0]
    ways = 0
    for i in range(n):
        for j in range(i+1, n):
            if b[j] - b[i] == max_diff:
                ways += 1
    return max_diff, ways

n = int(input())
b = list(map(int, input().split()))
print(*max_diff(b))
","1.0"
"c5c3180e-2ab6-42fd-b993-af221e0070ca","def main():
    n = int(input())
    b = list(map(int, input().split()))
    b.sort()
    max_diff = b[-1] - b[0]
    count = 0
    for i in range(n):
        if b[i] == b[0]:
            count += n - i - 1
    print(max_diff, count)

if __name__ == ""__main__"":
    main()","1.0"
"dffaaaaf-3e46-49f2-b606-2769c2dd0bb6","
n = int(input())
a = list(map(int, input()))
b = list(map(int, input()))
ans = 0
for i in range(n):
    ans += min(abs(a[i] - b[i]), 10 - abs(a[i] - b[i]))
print(ans)
","1.0"
"dffaaaaf-3e46-49f2-b606-2769c2dd0bb6","
def min_actions(n, current, target):
    diff = [abs(target[i] - current[i]) for i in range(n)]
    return sum(min(diff[i], 9 - diff[i]) for i in range(n))

n = int(input())
current = list(map(int, input().split()))
target = list(map(int, input().split()))
print(min_actions(n, current, target))
","1.0"
"dffaaaaf-3e46-49f2-b606-2769c2dd0bb6","def min_actions(n, current, target):
    actions = 0
    for i in range(n):
        diff = abs(int(current[i]) - int(target[i]))
        actions += min(diff, 10 - diff)
    return actions

n = int(input())
current = input()
target = input()

print(min_actions(n, current, target))","1.0"
"56e6efc2-5078-4bbf-852e-4042cb80c663","k,n,w=map(int,input().split())
add=w*(w+1)*k//2-n
print(add if add>0 else 0)","1.0"
"56e6efc2-5078-4bbf-852e-4042cb80c663","
k, n, w = map(int, input().split())
total_used = sum(range(1, w+1)) * k
if total_used > n:
    print(total_used - n)
else:
    print(0)
","1.0"
"56e6efc2-5078-4bbf-852e-4042cb80c663","def main():
    k, n, w = map(int, input().split())
    total_memory_needed = sum(i * k for i in range(1, w + 1))
    additional_memory = max(0, total_memory_needed - n)
    print(additional_memory)

if __name__ == ""__main__"":
    main()","1.0"
"da09ebe7-a076-496e-a98b-783c7c59eabc","n=int(input())
for i in range(n):
    s=input()
    if len(s)==1:print('YES')
    else:
        d,cur,x,k=1,0,-1,0
        while cur<len(s):
            if cur+1<len(s):
                if s[cur]!=s[cur+1]:d=0;break
            if s[cur]==s[x+1]:
                x+=1
                cur+=1
                if x==0:k+=1
                else:k=0
            elif s[cur]==s[x-1]:
                x-=1
                cur+=1
                if x==0:k+=1
                else:k=0
            else:
                x+=1
                cur+=1
                if x==0:k+=1
                else:k=0
        if d!=0 or k==1:print('YES')
        else:print('NO')","1.0"
"da09ebe7-a076-496e-a98b-783c7c59eabc","
def is_harridrome(s):
    n = len(s)
    for i in range(n):
        for j in range(i, n):
            if s[:i] == s[j:][::-1]:
                s = s.replace(s[i], '', 1)
                if s == s[::-1]:
                    return True
        s = s.replace(s, '', 1)
    return False

n = int(input())
for _ in range(n):
    s = input()
    print('YES' if is_harridrome(s) else 'NO')
","1.0"
"da09ebe7-a076-496e-a98b-783c7c59eabc","def is_palindrome(s):
    return s == s[::-1]

def is_garridrome(s):
    n = len(s)
    for i in range(n):
        t = s[:i] + s[i+1:]
        if is_palindrome(t):
            return True
    return False

n = int(input())
for _ in range(n):
    s = input()
    print(""YES"" if is_garridrome(s) else ""NO"")","1.0"
"8adf2876-9ffe-4037-95a0-5207cd96e42d","
n=int(input())
l=list(map(int,input().split()))
if len(set(l))==3:
    print(0)
else:
    l.sort()
    print(l[1]-l[0])
","1.0"
"8adf2876-9ffe-4037-95a0-5207cd96e42d","
def gcd(a, b):
    if b == 0:
        return a
    return gcd(b, a % b)

n = int(input())
cargos = list(map(int, input().split()))

max_cargo = max(cargos)
min_cargo = min(cargos)
diff = max_cargo - min_cargo

if diff > gcd(diff, n):
    print(diff * gcd(diff, n))
else:
    print(0)
","1.0"
"8adf2876-9ffe-4037-95a0-5207cd96e42d","def main():
    n = int(input())
    a = list(map(int, input().split()))

    count = {}
    for num in a:
        count[num] = count.get(num, 0) + 1

    result = 0
    for num, freq in count.items():
        if freq == 1:
            result += 1
        elif freq == 2:
            result += 1

    print(result)

if __name__ == ""__main__"":
    main()","1.0"
"17723461-2b83-4281-926d-4d9255518c42","
n, k, a, b = map(int, input().split())
elevator_time = abs(k - n) * b
stairs_time = (n - 1) * a
print(elevator_time, stairs_time)
","1.0"
"17723461-2b83-4281-926d-4d9255518c42","
def elevator_stairs(n, k, a, b):
    if k > n:
        diff = k - n
        elevator = b * (diff + 1)
        stairs = a * diff
        return elevator, stairs
    elif k < n:
        diff = n - k
        elevator = b * k + b * diff
        stairs = a * diff + a
        return elevator, stairs
    else:
        return 0, 0

n, k, a, b = map(int, input().split())
elevator_time, stairs_time = elevator_stairs(n, k, a, b)
print(elevator_time, stairs_time)
","1.0"
"17723461-2b83-4281-926d-4d9255518c42","def main():
    n, k, a, b = map(int, input().split())
    elevator_time = abs(k - n) * b
    stairs_time = (n - 1) * a
    print(elevator_time, stairs_time)

if __name__ == ""__main__"":
    main()","1.0"
"813ed199-bd60-41e2-8096-500a414b3c9d","n = int(input())
v_g = int(input())
v_s = int(input())
time = n / (v_g + v_s)
sausage_g = int(v_g * time)
sausage_s = n - sausage_g
print(sausage_g, sausage_s)","1.0"
"813ed199-bd60-41e2-8096-500a414b3c9d","
def main():
    n, vgav, vsharik = map(int, input().split())
    w_eaten = vgav * (n // (vgav + vsharik))
    s_eaten = vsharik * (n // (vgav + vsharik))
    w_remainder = n % (vgav + vsharik)
    w_eaten += min(w_remainder, vgav)
    s_eaten += min(w_remainder, vsharik)
    print(w_eaten, s_eaten, end='\n')

main()
","1.0"
"813ed199-bd60-41e2-8096-500a414b3c9d","n, vgav, vsharik = map(int, input().split())

time = n / (vgav + vsharik)
gav = int(time * vgav)
sharik = n - gav

print(gav, sharik)","1.0"
"6011a409-d175-408d-9ca0-dc10948c2f69","h, w = map(int, input().split())
a = list(map(int, input().split()))
b = list(map(int, input().split()))
print((h + 1) // 2 * (w + 1) // 2 * a[0] * b[0], ((h + 1) // 2) * ((w + 1) // 2) * a[0] * b[0])","1.0"
"6011a409-d175-408d-9ca0-dc10948c2f69","
def gcd(a, b):
    while b:
        a, b = b, a % b
    return a

n, m = map(int, input().split())
a = list(map(int, input().split()))
b = list(map(int, input().split()))

area = [0, 0]

for i in range(n):
    for j in range(m):
        if (i + j) % 2 == 0:
            area[0] += a[i] * b[j]
        else:
            area[1] += a[i] * b[j]

g = gcd(area[0], area[1])
area[0] //= g
area[1] //= g
print(*area)
","1.0"
"6011a409-d175-408d-9ca0-dc10948c2f69","def main():
    n, m = map(int, input().split())
    a = list(map(int, input().split()))
    b = list(map(int, input().split()))

    black_area = 0
    white_area = 0

    for i in range(n):
        for j in range(m):
            cell_area = a[i] * b[j]
            if (i + j) % 2 == 0:
                black_area += cell_area
            else:
                white_area += cell_area

    print(black_area, white_area)

if __name__ == ""__main__"":
    main()","1.0"
"b24bd86e-4963-406a-8eb5-fd3ad60e6bc1","
n, m = map(int, input().split())
a = []
for i in range(n):
  a.append(list(map(int, input().split())))
count = 0
for i in range(n):
  for j in range(m):
    if i > 0 and a[i][j] <= a[i - 1][j]:
      continue
    if i < n - 1 and a[i][j] <= a[i + 1][j]:
      continue
    if j > 0 and a[i][j] <= a[i][j - 1]:
      continue
    if j < m - 1 and a[i][j] <= a[i][j + 1]:
      continue
    count += a[i][j]
print(count)
","1.0"
"b24bd86e-4963-406a-8eb5-fd3ad60e6bc1","
def bfs(grid, n, m):
    visited = [[False]*m for _ in range(n)]
    queue = [(0, 0)]
    count = 0

    while queue:
        i, j = queue.pop(0)

        if not visited[i][j] and grid[i][j] > sum(grid[max(0, i-1) if i-1 >= 0 else i][j] +
                                                  grid[i][max(0, j-1) if j-1 >= 0 else j] +
                                                  grid[min(n-1, i+1) if i+1 < n else i][j] +
                                                  grid[i][min(m-1, j+1) if j+1 < m else j]):
            visited[i][j] = True
            count += 1
            queue.append((i, j))

    return count

n, m = map(int, input().split())
grid = []
for _ in range(n):
    row = list(map(int, input().split()))
    grid.append(row)

print(bfs(grid, n, m))
","1.0"
"b24bd86e-4963-406a-8eb5-fd3ad60e6bc1","def main():
    n, m = map(int, input().split())
    a = [list(map(int, input().split())) for _ in range(n)]
    count = 0

    for i in range(n):
        for j in range(m):
            flag = True
            for di in range(-1, 2):
                for dj in range(-1, 2):
                    if di == 0 and dj == 0:
                        continue
                    ni, nj = i + di, j + dj
                    if 0 <= ni < n and 0 <= nj < m and a[ni][nj] >= a[i][j]:
                        flag = False
                        break
                if not flag:
                    break
            if flag:
                count += 1

    print(count)

if __name__ == '__main__':
    main()","1.0"
"8698fe10-a13a-4451-88c5-948392ab0423","
n, a, b = map(int, input().split())
total_cost = 0
for i in range(n):
  houses = list(map(int, input().split()))
  for house in houses[1:]:
    binary_house = bin(house)[2:]
    for digit in binary_house:
      if digit == '0':
        total_cost += a
      else:
        total_cost += b
print(total_cost)
","1.0"
"8698fe10-a13a-4451-88c5-948392ab0423","
N, a, b = map(int, input().split())
costs = [0] * (1 << N)
for _ in range(N):
    houses, *numbers = map(int, input().split())
    for num in numbers:
        costs[num] += 1
    costs[sum(numbers)] += houses

result = 0
for i in range(1, 1 << N):
    result += costs[i] * a if i else b
print(result)
","1.0"
"8698fe10-a13a-4451-88c5-948392ab0423","def binary_length(num):
    length = 0
    while num > 0:
        num //= 2
        length += 1
    return length

def count_bits(num):
    count = 0
    while num > 0:
        count += num % 2
        num //= 2
    return count

N, a, b = map(int, input().split())
total_cost = 0

for _ in range(N):
    street_length = int(input())
    house_numbers = list(map(int, input().split()))

    for house_num in house_numbers:
        bits = binary_length(house_num)
        zeros = bits - count_bits(house_num)
        ones = count_bits(house_num)
        cost = zeros * a + ones * b
        total_cost += cost

print(total_cost)","1.0"
"dec8fd85-480c-4c32-8a7f-8fda025a778f","
n = int(input())
a = [input() for i in range(n)]
d = {}
for i in a:
    d[i[0]] = d.get(i[0], 0) + 1
l = []
for i in sorted(d.items()):
    l.append([i[1], i[0]])
l.sort(reverse=True)
print(l[0][1] + max([i[0] for i in a if i[0] == l[0][1]]))
","1.0"
"dec8fd85-480c-4c32-8a7f-8fda025a778f","
def find_password(words):
    n = len(words)
    max_len = max(len(word) for word in words)
    password = ''
    for i in range(max_len):
        for j in range(n):
            if i < len(words[j]) and password + words[j][i] not in words[:j]:
                password += words[j][i]
                break
    return password

n = int(input())
words = []
for _ in range(n):
    words.append(input())
words.sort()
password = find_password(words)
print(password)
","1.0"
"dec8fd85-480c-4c32-8a7f-8fda025a778f","def main():
    n = int(input())
    words = []
    for _ in range(n):
        words.append(input())

    max_count = 0
    max_word = """"
    for word in words:
        count = 0
        for w in words:
            if w.startswith(word[0]):
                count += 1
        if count > max_count:
            max_count = count
            max_word = word

    print(max_word)

if __name__ == ""__main__"":
    main()","1.0"
"44a9a266-a3fa-442d-9ab4-bcc8a921f296","a, k = map(int, input().split())
print(k + sum(-(-x//k) for x in map(int, input().split())))","1.0"
"44a9a266-a3fa-442d-9ab4-bcc8a921f296","
def solve():
    n, k = map(int, input().split())
    stages = list(map(int, input().split()))
    torch_count = 0
    torch_carried = 0
    for stage in stages:
        torch_carried += min(torch_count, k)
        torch_count += stage - torch_carried
    return torch_count

print(solve())
","1.0"
"44a9a266-a3fa-442d-9ab4-bcc8a921f296","def main():
    n, k = map(int, input().split())
    a = list(map(int, input().split()))
    f = 0
    for i in range(n):
        f += (a[i] + k - 1) // k
    print(f)

if __name__ == ""__main__"":
    main()","1.0"
"7c335c85-1302-4b0c-93b3-e9e2d73a2a28","x = [int(input()) for _ in range(5)]
y = [int(input()) for _ in range(5)]
print(sum([(x[i] - x[i - 1]) // 25 for i in range(5)]))","1.0"
"7c335c85-1302-4b0c-93b3-e9e2d73a2a28","
def biathlon(points):
    hits = set()
    for x, y in points:
        for i in range(5):
            if (x - i * 25) ** 2 + y ** 2 <= 100:
                hits.add(i)
                break
    return len(hits)

points = [list(map(int, input().split())) for _ in range(5)]
print(biathlon(points))
","1.0"
"7c335c85-1302-4b0c-93b3-e9e2d73a2a28","def is_hit(x, y):
    return (x**2 + y**2) <= 100**2

def main():
    targets = [0] * 5
    for _ in range(5):
        x, y = map(int, input().split())
        for i in range(5):
            if abs(x - 25 * i) <= 25 and is_hit(x - 25 * i, y):
                targets[i] = 1
                break
    print(sum(targets))

if __name__ == ""__main__"":
    main()","1.0"
"c8153069-3661-4c48-8764-5e3f51309740","
a,b,c,d=map(int,input().split())
if(a==1 and c==1 and b==0 and d==0):
    print(""YES"")
elif(a==1 and c==1 and b==1 and d==0):
    print(""YES"")
elif(a==0 and b==1 and c==1 and d==1):
    print(""YES"")
elif(a==1 and b==1 and c==0 and d==1):
    print(""YES"")
else:
    print(""NO"")
","1.0"
"c8153069-3661-4c48-8764-5e3f51309740","
def night_vision(a, b, c, d):
    switches = [a, b, c, d]
    activated = 0
    for i in range(len(switches)):
        if switches[i] == 1:
            activated += 1
    if activated >= 2:
        for i in range(len(switches) - 1):
            if switches[i] == 1 and switches[i + 1] == 1:
                break
        else:
            return ""YES""
    else:
        return ""NO""

# Test cases
print(night_vision(1, 0, 1, 0))  # Output: YES
print(night_vision(0, 0, 1, 1))  # Output: NO
","1.0"
"c8153069-3661-4c48-8764-5e3f51309740","def main():
    switches = list(map(int, input().split()))

    if (switches[0] == 1 and switches[2] == 1) or (switches[1] == 1 and switches[3] == 1):
        print(""YES"")
    else:
        print(""NO"")

if __name__ == ""__main__"":
    main()","1.0"
"ac6535b5-675c-452f-b494-e04adb74dbac","
n, k = input().split(' ')
n, k = int(n), int(k)
d = (n // (k + 2))
if d > (n // 2):
    d = (n // 2)
c = k * d
r = n - d - c
print(d, c, r)
","1.0"
"ac6535b5-675c-452f-b494-e04adb74dbac","
n, k = map(int, input().split())
d = n // 2
c = d * (k - 1) + min(d, n - d)
p = d + min(d, n - d)
print(p, c, n - p)
","1.0"
"ac6535b5-675c-452f-b494-e04adb74dbac","def main():
    n, k = map(int, input().split())
    if n <= 2 * k:
        print(0, 0, n)
    else:
        diplomas = n // (2 * k + 1)
        certificates = diplomas * k
        no_prizes = n - diplomas - certificates
        print(diplomas, certificates, no_prizes)

if __name__ == ""__main__"":
    main()","1.0"
"f4973e49-2496-4d59-b97a-d64971522a3d","
def get_key(n, p):
    if n == 1:
        return p
    else:
        key = 1
        while p % 2 == 0:
            p //= 2
            key *= 2
        i = 3
        while i * i <= p:
            if p % i == 0:
                key *= i
                p //= i
            else:
                i += 2
        if p > 1:
            key *= p
        return key + (n - 1)

n, p = map(int, input().split())
print(get_key(n, p))
","1.0"
"f4973e49-2496-4d59-b97a-d64971522a3d","
def prime_factors(n):
    factors = []
    i = 2
    while i * i <= n:
        if n % i:
            i += 1
        else:
            n //= i
            factors.append(i)
    if n > 1:
        factors.append(n)
    return factors

def divisor_sum(n, p):
    factors = prime_factors(p)
    sums = []
    for f in factors:
        if f ** (n - 1) > p:
            break
        for k in range(1, n):
            if f ** k > p:
                break
            sums.append(f ** k)
    return sum(sorted(sums, reverse=True))

n, p = map(int, input().split())
key = divisor_sum(n, p)
print(key)
","1.0"
"f4973e49-2496-4d59-b97a-d64971522a3d","def main():
    n, p = map(int, input().split())
    key = 0
    for i in range(n - 1, 0, -1):
        x = p
        for j in range(i):
            x = int(x ** (1 / (i - j)))
        key += x
        p //= x
    key += p
    print(key)

if __name__ == ""__main__"":
    main()","1.0"
"20829eaa-7182-4890-8b7e-ec2f50debde8","nk=[int(i)for i in input().split()]
print(nk[0]*nk[1]//math.gcd(nk[0],nk[1]))","1.0"
"20829eaa-7182-4890-8b7e-ec2f50debde8","
def gcd(a, b):
    while b:
        a, b = b, a % b
    return a

N, K = map(int, input().split())
lcm = (N * K) // gcd(N, K)
return lcm * 2

print(gcd(N, K) * 2)
","1.0"
"20829eaa-7182-4890-8b7e-ec2f50debde8","def gcd(a, b):
    while b != 0:
        a, b = b, a % b
    return a

def lcm(a, b):
    return a * b // gcd(a, b)

n, k = map(int, input().split())

result = lcm(n, k)

print(result)","1.0"
"de810164-5bf4-4c23-ad28-410552b3d77c","x=[1]
for i in range(2,10):
    for q in range(i):
        x.append(10**q*i)
t=int(input())
for i in range(t):
    a=int(input())
    for b in x:
        if a%b==0:
            print(sum(list(str(a//b))))
            break","1.0"
"de810164-5bf4-4c23-ad28-410552b3d77c","
def keystrokes(t):
    total = 0
    for _ in range(t):
        x = int(input())
        digits = len(str(x))
        for i in range(1, digits+1):
            num = 10 ** (i-1)
            total += sum(range(1, x+1, num))
    return total

t = int(input())
print(keystrokes(t))
","1.0"
"de810164-5bf4-4c23-ad28-410552b3d77c","def count_keystrokes(x):
    result = 0
    current_digit = 1
    while current_digit <= 9:
        for i in range(1, 10):
            apartment_number = int(str(current_digit) * i)
            if apartment_number == x:
                result += i
                return result
            result += i
        current_digit += 1
    return result

t = int(input())
for _ in range(t):
    x = int(input())
    print(count_keystrokes(x))","1.0"
"d0bda657-ffb6-4ebf-b518-46e59186d308","
l = list(map(int, input().split()))
m = max(l[1::2])
for i in range(1, len(l), 2):
    print((m - l[i]) * l[i - 1] + m * l[i + 1])
","1.0"
"d0bda657-ffb6-4ebf-b518-46e59186d308","``python
def min_photo_size(n, wi, hi):
    w = sum(wi) - wi[-1]
    h = max(hi)
    b = [0] * n
    for i in range(n):
        w_temp = w
        for j in range(n):
            if j == i: continue
            h_temp = h
            if wi[j] > w_temp:
                w_temp = 0
            w_temp -= wi[j]
            h_temp = min(h_temp, hi[j])
            b[i] += w_temp * h_temp
    return b

n = int(input())
wi_hi = []
for _ in range(n):
    w, h = map(int, input().split())
    wi_hi.append((w, h))
print(*min_photo_size(n, wi_hi))
```

This code reads the number of friends and their dimensions, calculates the minimum width and maximum height of the photos, and then iterates through each friend to calculate the number of pixels in the minimum photo that can accommodate all friends except the current one. The results are printed on separate lines.","1.0"
"d0bda657-ffb6-4ebf-b518-46e59186d308","def main():
    n = int(input())
    w = []
    h = []
    for i in range(n):
        wi, hi = map(int, input().split())
        w.append(wi)
        h.append(hi)

    ans = []
    for i in range(n):
        W = sum(w[:i] + w[i+1:])
        H = max(h[:i] + h[i+1:])
        ans.append(W * H)

    print(*ans)

if __name__ == ""__main__"":
    main()","1.0"
"86c5916f-839d-4d9b-b608-2c25b2a5d6f3","
def find_winning_ticket(H):
  for i in range(9999, -1, -1):
    s1 = int(str(i)[0]) + int(str(i)[1])
    s2 = int(str(i)[2]) + int(str(i)[3])
    if (s1 >= s2 and s1 * 1000 + s2 == H) or (s2 >= s1 and s2 * 1000 + s1 == H):
      return i
  return 0

H = int(input())
print(find_winning_ticket(H))
","1.0"
"86c5916f-839d-4d9b-b608-2c25b2a5d6f3","
def strange_lottery(h):
    tickets = set()
    for i in range(10000):
        a = i // 1000
        b = (i % 1000) // 100
        c = (i % 100) // 10
        d = i % 10
        e = a + b
        f = d + c
        g = e if e > f else f
        if g == h:
            tickets.add(i)
    if tickets:
        return max(tickets)
    else:
        return 0

h = int(input())
print(strange_lottery(h))
","1.0"
"86c5916f-839d-4d9b-b608-2c25b2a5d6f3","def winning_ticket(H):
    max_ticket = 0
    for ticket in range(10000):
        first_sum = ticket // 100
        second_sum = ticket % 100
        if first_sum >= second_sum and first_sum + second_sum == H:
            max_ticket = max(max_ticket, ticket)
    return max_ticket

H = int(input())
print(winning_ticket(H))","1.0"
"b9308722-8825-4c03-a04b-0e20c61a977c","
n, a, b, c = map(int, input().split())
l = [0] * 4005
l[0] = True
for x in [a, b, c]:
    for y in range(x, 4005):
        l[y] = l[y] or l[y - x]
print(l[n])
","1.0"
"b9308722-8825-4c03-a04b-0e20c61a977c","
def gcd(a, b):
    if b == 0:
        return a
    return gcd(b, a % b)

n, a, b, c = map(int, input().split())
g = gcd(gcd(a, b), c)
n //= g
count = 0
while n > 0:
    if n >= a and n % a == 0:
        n -= a
        count += 1
    elif n >= b and n % b == 0:
        n -= b
        count += 1
    elif n >= c and n % c == 0:
        n -= c
        count += 1
    else:
        break
print(count)
","1.0"
"b9308722-8825-4c03-a04b-0e20c61a977c","def cut_ribbon(n, a, b, c):
    dp = [0] * (n + 1)
    dp[a] = 1
    dp[b] = 1
    dp[c] = 1
    for i in range(1, n + 1):
        if dp[i] > 0:
            if i + a <= n:
                dp[i + a] = max(dp[i + a], dp[i] + 1)
            if i + b <= n:
                dp[i + b] = max(dp[i + b], dp[i] + 1)
            if i + c <= n:
                dp[i + c] = max(dp[i + c], dp[i] + 1)
    return dp[n]

n, a, b, c = map(int, input().split())
print(cut_ribbon(n, a, b, c))","1.0"
"4769a9c2-112a-4210-bc3f-ca1162d376ea","
def domino_count(M, N):
  return (M * N) // 2

M, N = map(int, input().split())
print(domino_count(M, N))
","1.0"
"4769a9c2-112a-4210-bc3f-ca1162d376ea","
def dominoes(m, n):
    if m < n:
        m, n = n, m

    dp = [[0] * n for _ in range(m)]
    dp[0][0] = 1

    for i in range(1, m):
        for j in range(min(i+1, n)):
            for k in range(j):
                dp[i][j] += dp[i-k-1][k]

    return sum(row[-1] for row in dp)

if __name__ == ""__main__"":
    m, n = map(int, input().split())
    print(dominoes(m, n))
","1.0"
"4769a9c2-112a-4210-bc3f-ca1162d376ea","def laying_dominoes():
    M, N = map(int, input().split())
    return (M * N) // 2

print(laying_dominoes())","1.0"
"6cef62b6-dffa-42fb-95a0-17f9f2b300c2","
n = int(input())
a = 1
b = 1
while a <= b:
    b += 1
    while n % b == 0:
        n //= b
        a = b
print(a, b)
","1.0"
"6cef62b6-dffa-42fb-95a0-17f9f2b300c2","
def monitor_size(n):
    a, b = 1, n
    while b - a > a:
        a += 1
        b = n // a
    return a, b

n = int(input())
print(*monitor_size(n))
","1.0"
"6cef62b6-dffa-42fb-95a0-17f9f2b300c2","def main():
    n = int(input())
    a, b = 1, n
    for i in range(1, int(n**0.5) + 1):
        if n % i == 0:
            a, b = i, n // i
    print(a, b)

if __name__ == ""__main__"":
    main()","1.0"
"ae521e91-eb31-4263-8069-60d54d9783e6","
n = int(input())
array = list(map(int, input().split()))

m = {}

for num in array:
    m[num] = 1

array = []
for num in m:
    array.append(num)

print(len(array))
print(*array)
","1.0"
"ae521e91-eb31-4263-8069-60d54d9783e6","
n = int(input())
a = list(map(int, input().split()))

# Initialize a list to store the unique elements and their last occurrences
unique = []
last_occurrences = []

# Iterate through the array
for i in range(n):
    # If the current element is not in the unique list
    if a[i] not in unique:
        # Add it to the unique list and store its last occurrence
        unique.append(a[i])
        last_occurrences.append(i)
    # Otherwise, update the last occurrence of the current element
    else:
        last_occurrences[-1] = i

# Initialize a list to store the final array
final = []

# Iterate through the last occurrences and add the corresponding unique elements to the final array
for i in last_occurrences:
    final.append(unique[i])

# Print the number of unique elements and the final array
print(len(unique))
print(*final)
","1.0"
"ae521e91-eb31-4263-8069-60d54d9783e6","def remove_duplicates(arr):
    seen = {}
    result = []
    for i in range(len(arr) - 1, -1, -1):
        if arr[i] not in seen:
            seen[arr[i]] = True
            result.append(arr[i])
    result.reverse()
    return result

n = int(input())
arr = list(map(int, input().split()))

result = remove_duplicates(arr)
print(len(result))
print(' '.join(map(str, result)))","1.0"
"2a29bf6c-714e-4d56-83a8-0120f9ce6f9b","
for _ in range(int(input())):
    a = list(map(int, input()))
    l, r = [-1] * 4, [-1] * 4
    ans = 10**9
    for i in range(len(a)):
        l[a[i]] = i
        if -1 not in l:
            ans = min(ans, max(l) - min(l) + 1)
    for i in range(len(a) - 1, -1, -1):
        r[a[i]] = i
        if -1 not in r:
            ans = min(ans, max(r) - min(r) + 1)
    print(ans if ans < 10 ** 9 else 0)
","1.0"
"2a29bf6c-714e-4d56-83a8-0120f9ce6f9b","
t = int(input())
for _ in range(t):
    s = input()
    l = len(s)
    i = 0
    while i < l:
        if s[i] != s[i+1] and s[i] != s[i+2] and s[i+1] != s[i+2]:
            break
        i += 1
    if i == l:
        print(0)
    else:
        print(l - i)
","1.0"
"2a29bf6c-714e-4d56-83a8-0120f9ce6f9b","t = int(input())
for _ in range(t):
    s = input()
    min_len = float('inf')
    for i in range(len(s)):
        for j in range(i + 2, len(s) + 1):
            if '1' in s[i:j] and '2' in s[i:j] and '3' in s[i:j]:
                min_len = min(min_len, j - i)
    print(min_len if min_len != float('inf') else 0)","1.0"
"dc87e1dc-871d-4d96-9273-255c1c5db049","
n, m = map(int, input().split())

sheet = [list(input()) for _ in range(n)]

vis = [[False] * m for _ in range(n)]

def dfs(x, y):
    if x < 0 or x >= n or y < 0 or y >= m:
        return
    if sheet[x][y] == '.' or vis[x][y]:
        return
    vis[x][y] = True
    dfs(x - 1, y)
    dfs(x + 1, y)
    dfs(x, y - 1)
    dfs(x, y + 1)

cnt = 0
for i in range(n):
    for j in range(m):
        if not vis[i][j] and sheet[i][j] == '#':
            dfs(i, j)
            cnt += 1

print(cnt)
","1.0"
"dc87e1dc-871d-4d96-9273-255c1c5db049","
def dfs(x, y, visited, grid):
    if x < 0 or x >= len(grid) or y < 0 or y >= len(grid[0]):
        return
    if grid[x][y] == '#' and not visited[x][y]:
        visited[x][y] = True
        dfs(x + 1, y, visited, grid)
        dfs(x - 1, y, visited, grid)
        dfs(x, y + 1, visited, grid)
        dfs(x, y - 1, visited, grid)

N, M = map(int, input().split())
grid = []
for _ in range(N):
    row = list(input())
    grid.append(row)

visited = [[False] * M for _ in range(N)]
count = 0
for i in range(N):
    for j in range(M):
        if grid[i][j] == '#' and not visited[i][j]:
            dfs(i, j, visited, grid)
            count += 1
print(count)
","1.0"
"dc87e1dc-871d-4d96-9273-255c1c5db049","def cell_removal(n, m, grid):
    pieces = 0
    for i in range(n):
        for j in range(m):
            if grid[i][j] == '#':
                pieces += 1
                dfs(i, j, n, m, grid)
    return pieces

def dfs(x, y, n, m, grid):
    if x < 0 or x >= n or y < 0 or y >= m or grid[x][y] != '#':
        return
    grid[x][y] = '.'
    dfs(x - 1, y, n, m, grid)
    dfs(x + 1, y, n, m, grid)
    dfs(x, y - 1, n, m, grid)
    dfs(x, y + 1, n, m, grid)

n, m = map(int, input().split())
grid = [input() for _ in range(n)]
print(cell_removal(n, m, grid))","1.0"
"0dca2e13-f1bc-4578-8818-48b97c2d7490","
a, b = [int(i) for i in input().split()]
print((b + 1) // 2 - (a + 1) // 2)
","1.0"
"0dca2e13-f1bc-4578-8818-48b97c2d7490","
def sheets_count(a, b):
    return (b - a) // 2 + 1 if b % 2 else (b - a) // 2

a, b = map(int, input().split())
print(sheets_count(a, b))
","1.0"
"0dca2e13-f1bc-4578-8818-48b97c2d7490","def count_sheets(A, B):
    return (B // 2) - (A // 2) + 1

A, B = map(int, input().split())
print(count_sheets(A, B))","1.0"
"f09f326d-8329-4d39-b628-04a1b3d99f07","
n, k = map(int, input().split())
print((n * 2 + n * 5 + n * 8) // k)
","1.0"
"f09f326d-8329-4d39-b628-04a1b3d99f07","
N, K = map(int, input().split())
r = N * 2
g = N * 5
b = N * 8

red_bundles = r // K
green_bundles = g // K
blue_bundles = b // K

extra_red = r % K
extra_green = g % K
extra_blue = b % K

if extra_red > 0:
    if extra_green >= extra_red:
        green_bundles += extra_red // K
        red_bundles += extra_red % K
    else:
        blue_bundles += extra_green
        red_bundles += extra_red
        green_bundles += extra_green - extra_red

if extra_green > 0:
    if extra_blue >= extra_green:
        blue_bundles += extra_green // K
        green_bundles += extra_green % K
    else:
        red_bundles += extra_blue
        green_bundles += extra_green
        blue_bundles += extra_blue - extra_green

print(min(red_bundles, green_bundles, blue_bundles))
","1.0"
"f09f326d-8329-4d39-b628-04a1b3d99f07","def main():
    n, k = map(int, input().split())
    red = (n * 2 + k - 1) // k
    green = (n * 5 + k - 1) // k
    blue = (n * 8 + k - 1) // k
    print(red + green + blue)

if __name__ == ""__main__"":
    main()","1.0"
"83c25cac-cf59-44a9-9214-be35c0bd5e06","
a = int(input())
b = int(input())
c = int(input())
weights = set()
for i in range(2):
  for j in range(2):
    for k in range(2):
      weights.add(a * i + b * j + c * k)
print(len(weights))
","1.0"
"83c25cac-cf59-44a9-9214-be35c0bd5e06","
def gcd(a, b):
    while b:
        a, b = b, a % b
    return a

def weights(a, b, c):
    ab = a * b
    ac = a * c
    bc = b * c
    g = gcd(gcd(a, gcd(b, c)), ab, ac, bc)
    return (ab // g) * ((bc // g) - 1) // (a - 1) + (ac // g) * ((ab // g) - 1) // (b - 1) + (bc // g) * ((ac // g) - 1) // (c - 1) + 1

a, b, c = map(int, input().split())
print(weights(a, b, c))
","1.0"
"83c25cac-cf59-44a9-9214-be35c0bd5e06","a = int(input())
b = int(input())
c = int(input())

weights = set()

def dfs(i, j, k, left, right):
    if left == right:
        weights.add(right)
    if i > 0:
        dfs(i - 1, j, k, left + a, right)
        dfs(i - 1, j, k, left, right + a)
    if j > 0:
        dfs(i, j - 1, k, left + b, right)
        dfs(i, j - 1, k, left, right + b)
    if k > 0:
        dfs(i, j, k - 1, left + c, right)
        dfs(i, j, k - 1, left, right + c)

dfs(1, 1, 1, 0, 0)
print(len(weights))","1.0"
"5d367d53-2714-49cb-b00d-72626739e49c","n=int(input());s=input();print(0 if s.count('+')==0 else 1 if s[0]=='-' else 2 if s.count('-')==n else n)","1.0"
"5d367d53-2714-49cb-b00d-72626739e49c","
def min_files(n, s):
    files = 0
    for op in s:
        if op == '-':
            if files == 0:
                continue
            files -= 1
        else:
            files += 1
    return files

n = int(input())
s = input()
print(min_files(n, s))
","1.0"
"5d367d53-2714-49cb-b00d-72626739e49c","def main():
    n = int(input())
    s = input()
    min_files = 0
    files = 0
    for c in s:
        if c == '-':
            files -= 1
        else:
            files += 1
        min_files = min(min_files, files)
    print(-min_files)

if __name__ == ""__main__"":
    main()","1.0"
"9095afd4-9e40-4925-89d0-90b1f67e8e0e","n, m = map(int, input().split())
a = []
for _ in range(n):
    a.append(list(map(int, input())))
for i in range(n):
    for j in range(m):
        for k in range(n):
            if a[i][j] < a[k][j]:
                break
        else:
            print(i + 1)
            break","1.0"
"9095afd4-9e40-4925-89d0-90b1f67e8e0e","
def find_best(n, m, grades):
    best = [0] * n
    for i in range(n):
        max_grade = -1
        for j in range(m):
            if grades[i][j] > max_grade:
                max_grade = grades[i][j]
        best[i] = max_grade
    return sum(1 for i in range(n) if best[i] == max(best))

n, m = map(int, input().split())
grades = [list(map(int, input())) for _ in range(n)]
print(find_best(n, m, grades))
","1.0"
"9095afd4-9e40-4925-89d0-90b1f67e8e0e","def main():
    n, m = map(int, input().split())
    grades = [input() for _ in range(n)]
    best_students = set()

    for j in range(m):
        max_grade = 0
        best_student = -1
        for i in range(n):
            if int(grades[i][j]) > max_grade:
                max_grade = int(grades[i][j])
                best_student = i
        best_students.add(best_student)

    print(len(best_students))


if __name__ == '__main__':
    main()","1.0"
"33a72323-4374-42f2-8f8b-28a1ec69a960","s=input()
print(len(s)*2-1)","1.0"
"33a72323-4374-42f2-8f8b-28a1ec69a960","
def max_nicknames(s):
    n = len(s)
    dp = [0] * (n + 1)
    dp[0] = 1
    dp[1] = 1

    for i in range(2, n + 1):
        for j in range(1, i + 1):
            dp[i] += dp[i - j]

    return dp[-1]

s = input()
print(max_nicknames(s))
","1.0"
"33a72323-4374-42f2-8f8b-28a1ec69a960","def max_nicknames(s):
    n = len(s)
    count = 0
    for i in range(n):
        for j in range(i + 1, n + 1):
            if s[i:j] not in s[:i] and s[i:j] not in s[j:]:
                count += 1
    return count

s = input()
print(max_nicknames(s))","1.0"
"267f2223-0096-4b57-bc54-1c2372772391","def main():
    t = int(input())
    x = list(map(int, input().split()))
    for i in x:
        if (i&1 == 1 and i >= 5) or i == 4: print(""NO"")
        else: print(""YES"")

main()","1.0"
"267f2223-0096-4b57-bc54-1c2372772391","
def visible_points(n, x):
    if n == x:
        return True
    for i in range(1, 7):
        if (n - i) % x == 0:
            return True
    return False

T = int(input())
for _ in range(T):
    x = list(map(int, input().split()))
    for i in x:
        print(""YES"" if visible_points(1, i) else ""NO"")
","1.0"
"267f2223-0096-4b57-bc54-1c2372772391","def can_build_tower(x):
    return x in [i * 100 + j * 10 + k for i in range(1, 7) for j in range(1, 7) for k in range(1, 7)]

T = int(input())
x_values = list(map(int, input().split()))

for x in x_values:
    print(""YES"" if can_build_tower(x) else ""NO"")","1.0"
"7615eb4d-49ce-4586-825b-56ea69f157b5","n, m, k = map(int, input().split())
a=pow(n,m)
s=str(a)
print(s[len(s)-k:])","1.0"
"7615eb4d-49ce-4586-825b-56ea69f157b5","
def power(n, m, k):
    result = str(n ** m)
    return result[-k:]

N, M, K = map(int, input().split())
print(power(N, M, K))
","1.0"
"7615eb4d-49ce-4586-825b-56ea69f157b5","def find_password(N, M, K):
    result = 1
    for _ in range(M):
        result = (result * N) % (10 ** K)
    return result

N, M, K = map(int, input().split())
print(find_password(N, M, K))","1.0"
"1877a515-ff97-43f2-8362-bc2952a26b5e","
def count_ways(x):
  count = 0
  for a in range(1, x + 1):
    for b in range(a, x + 1):
      for c in range(b, x + 1):
        d = x - a - b - c
        if d >= c:
          count += 1
  return count

x = int(input())
print(count_ways(x))
","1.0"
"1877a515-ff97-43f2-8362-bc2952a26b5e","
def divisibility(x):
    count = 0
    for a in range(1, x):
        for b in range(a, x):
            for c in range(b, x):
                for d in range(c, x):
                    if a + b + c + d == x:
                        count += 1
    return count

X = int(input())
print(divisibility(X))
","1.0"
"1877a515-ff97-43f2-8362-bc2952a26b5e","def count_ways(x):
    ways = 0
    a = 1
    while a <= x // 4:
        b = a
        while b <= x // 3:
            c = b
            while c <= x // 2:
                d = c
                while d <= x:
                    if a + b + c + d == x:
                        ways += 1
                    d += 1
                c += 1
            b += 1
        a += 1
    return ways

x = int(input())
print(count_ways(x))","1.0"
"bfa57871-3996-4c10-b9f9-fcb21a8e6518","
n, a, b = map(int, input().split())
print((n + a - 1) // a if a <= b else (n + b - 1) // b)
","1.0"
"bfa57871-3996-4c10-b9f9-fcb21a8e6518","
def min_time(n, a, b):
    devices = [a, b]
    total_lessons = n
    time = 0

    while total_lessons > 0:
        lessons_done = min(devices)
        devices[devices.index(lessons_done)] = 0
        total_lessons -= lessons_done
        time += 1

        if not total_lessons:
            break

        if devices.count(0) == len(devices):
            devices[devices.index(min(devices))] = total_lessons
            break

        devices[devices.index(min(devices))] += total_lessons
        total_lessons = 0

    return time

n, a, b = map(int, input().split())
print(min_time(n, a, b))
","1.0"
"bfa57871-3996-4c10-b9f9-fcb21a8e6518","def main():
    n, a, b = map(int, input().split())
    if a + b >= n:
        print(1)
    else:
        print(n // (a + b) + bool(n % (a + b)))

if __name__ == '__main__':
    main()","1.0"
"461e80bc-c9f7-403f-9a42-3f1d08a78b1a","

n = int(input())
a = list(map(int, input().split()))
ans = [0] * n
k = 0
for i in range(n):
    if k * 2 > i:
        ans[i] = a[i]
    else:
        ans[i] = -1
    if a[i] == k:
        k += 1
for i in ans:
    print(i)

","1.0"
"461e80bc-c9f7-403f-9a42-3f1d08a78b1a","
def party_type(n, guests):
    count = [0] * 106
    for guest in guests:
        count[guest] += 1
        if count[guest] > n // 2:
            party_type = guest
        else:
            party_type = -1
        print(party_type, end=' ')

n = int(input())
guests = list(map(int, input().split()))
party_type(n, guests)
","1.0"
"461e80bc-c9f7-403f-9a42-3f1d08a78b1a","def main():
    n = int(input())
    robots = list(map(int, input().split()))
    party_types = []

    for i in range(1, n + 1):
        counts = {}
        for robot in robots[:i]:
            counts[robot] = counts.get(robot, 0) + 1
        max_count = max(counts.values())
        if max_count > i // 2:
            party_types.append(max(counts, key=counts.get))
        else:
            party_types.append(-1)

    print(*party_types, sep='\n')


if __name__ == '__main__':
    main()","1.0"
"4b81460a-5cad-47e0-b9ab-83fcd6a089ea","
n = int(input())
print((n + 1) * n // 2)
","1.0"
"4b81460a-5cad-47e0-b9ab-83fcd6a089ea","
def ladder(n):
    if n <= 1:
        return 1
    else:
        count = 0
        for i in range(1, n+1):
            if n - i >= 0:
                count += ladder(i) * ladder(n - i)
        return count

n = int(input())
print(ladder(n))
","1.0"
"4b81460a-5cad-47e0-b9ab-83fcd6a089ea","def factorial(n):
    if n == 0:
        return 1
    else:
        return n * factorial(n - 1)

def catalan(n):
    return factorial(2 * n) // (factorial(n + 1) * factorial(n))

def main():
    n = int(input())
    print(catalan(n))

if __name__ == ""__main__"":
    main()","1.0"
"ef273600-92cf-4397-843c-ed406d948390","
a, b = map(int, input().split())
if (a + b) % 2 == 0:
  print((a + b) // 2)
else:
  print(""No"")
","1.0"
"ef273600-92cf-4397-843c-ed406d948390","
def robocops(a, b):
    n = 1
    while True:
        if a <= n and n <= b:
            return n + 1
        n += 1

a, b = map(int, input().split())
print(robocops(a, b)) if robocops(a, b) <= 109 else print(""No"")
","1.0"
"ef273600-92cf-4397-843c-ed406d948390","def gcd(a, b):
    while b != 0:
        a, b = b, a % b
    return a

def robocops(a, b):
    if a > b:
        a, b = b, a
    if a == b:
        return ""No""
    if a == 1:
        return b + 1
    d = gcd(a, b)
    if b % d == a:
        return (b - a) // d + 1
    return ""No""

a, b = map(int, input().split())
print(robocops(a, b))","1.0"
"2289a224-3dec-40f4-935f-a614d8469cf0","
a = int(input())
b = int(input())
c = int(input())
print(2 * (a + b + c))
","1.0"
"2289a224-3dec-40f4-935f-a614d8469cf0","
a = int(input())
b = int(input())
c = int(input())

total_cost = 4 * a + 2 * b + c
print(total_cost)
","1.0"
"2289a224-3dec-40f4-935f-a614d8469cf0","a = int(input())
b = int(input())
c = int(input())

cost = 2 * (a + b) + 2 * c

print(cost)","1.0"
"54c95a3e-10bc-4388-9722-619f9c35563c","a = float(input())
b = float(input())
c = float(input())
print((a * (60 + c) / 100), (b * (60 + c) / 100))","1.0"
"54c95a3e-10bc-4388-9722-619f9c35563c","
A = float(input())
B = float(input())
K = float(input())

price_per_kg = (K - (A * 100)) / (100 - B)
my_price = A * price_per_kg
friend_price = B * price_per_kg

print(f""{my_price:.2f} {friend_price:.2f}"")
","1.0"
"54c95a3e-10bc-4388-9722-619f9c35563c","A = int(input())
B = int(input())
K = int(input())

total_weight = A + B
total_price = K * 10
price_per_kilo = total_price / total_weight

my_price = A * price_per_kilo
friend_price = B * price_per_kilo

my_price_rounded = round(my_price, 2)
friend_price_rounded = round(friend_price, 2)

print(my_price_rounded, friend_price_rounded)","1.0"
"1d86615d-36be-40a7-9d08-193f1af8b6b8","a, b, c, d = map(int, input().split())
print(max(d - a + 1, 0) + max(b - c + 1, 0) - max(min(b, d) - max(a, c) + 1, 0))","1.0"
"1d86615d-36be-40a7-9d08-193f1af8b6b8","
def gcd(a, b):
    while b:
        a, b = b, a % b
    return a

A, B, C, D = map(int, input().split())

left = max(A, C)
right = min(B, D)

if left > right:
    print(0)
else:
    diff = right - left + 1
    steps = diff // gcd(diff, (B - A) * (D - C))
    if (B - A) * (D - C) % diff:
        steps += 1
    print(steps * (left - 1) + diff)
","1.0"
"1d86615d-36be-40a7-9d08-193f1af8b6b8","def main():
    A, B, C, D = map(int, input().split())
    if B < C or D < A:
        print(B - A + 1 + D - C + 1)
    else:
        print(max(B, D) - min(A, C) + 1)

if __name__ == '__main__':
    main()","1.0"
"6979410b-f2cb-41d6-8e3b-dabf463e683b","f = 0
for x in input():
    f += 1 if x == ""U"" else -1 if x == ""D"" else 0
print(abs(f))","1.0"
"6979410b-f2cb-41d6-8e3b-dabf463e683b","
def elev(s):
    pos = 0
    visited = set()
    for c in s:
        pos += -1 if c == 'D' else 1
        visited.add(pos)
    return len(visited)

s = input()
print(elev(s))
","1.0"
"6979410b-f2cb-41d6-8e3b-dabf463e683b","def elevator_floors(program):
    current_floor = 0
    visited_floors = set()
    visited_floors.add(current_floor)

    for command in program:
        if command == 'U':
            current_floor += 1
        elif command == 'D':
            current_floor -= 1
        visited_floors.add(current_floor)

    return len(visited_floors)


program = input()
print(elevator_floors(program))","1.0"
"787d2a09-3617-4050-820e-a01d43b2b188","
def is_prime(n):
  if n <= 1:
    return False
  for i in range(2, int(n**0.5) + 1):
    if n % i == 0:
      return False
  return True

def count_zeros(a, b):
  count = 0
  for i in range(a, b + 1):
    if is_prime(i):
      while i % 10 == 0:
        count += 1
        i //= 10
  return count

a = int(input())
b = int(input())
print(count_zeros(a, b))
","1.0"
"787d2a09-3617-4050-820e-a01d43b2b188","
def isPrime(n):
 for i in range(2, int(n**0.5) + 1):
 if n % i == 0:
 return False
 return True

def countZeros(a, b):
 primes = []
 for i in range(a, b+1):
 if isPrime(i):
 primes.append(i)

product = 1
for prime in primes:
 product *= prime

count = 0
while product % 10 == 0:
 count += 1
 product //= 10

return count

a = int(input())
b = int(input())
print(countZeros(a, b))
","1.0"
"787d2a09-3617-4050-820e-a01d43b2b188","def is_prime(n):
    if n < 2:
        return False
    for i in range(2, int(n**0.5) + 1):
        if n % i == 0:
            return False
    return True

def count_trailing_zeros(a, b):
    count = 0
    for num in range(a, b + 1):
        if is_prime(num):
            temp = num
            while temp % 10 == 0:
                count += 1
                temp //= 10
    return count

a = int(input())
b = int(input())
print(count_trailing_zeros(a, b))","1.0"
"6381eb46-a216-455c-ab82-3b703f2da42a","a=[int(x) for x in input().split()]
i=a.index(1)
j=a.index(2,i)
while j<len(a):
 i=a.index(1,i+1)
 j=a.index(2,i)
 print(j-i,i+1)","1.0"
"6381eb46-a216-455c-ab82-3b703f2da42a","
buildings = list(map(int, input().split()))
residential, store, dist, house = 0, 0, float('-inf'), 0
for i in range(len(buildings)):
    if buildings[i] == 1:
        residential += 1
    if buildings[i] == 2:
        store += 1
        if residential > 0:
            dist = min(dist, i+1)
            house = i+1
    if store > residential:
        dist = min(dist, len(buildings) - i)
        house = len(buildings) - i
print(dist, house)
","1.0"
"6381eb46-a216-455c-ab82-3b703f2da42a","def main():
    buildings = list(map(int, input().split()))
    max_distance = 0
    house_number = 0
    distance = 0
    last_store = -1

    for i, building in enumerate(buildings):
        if building == 1:
            if last_store >= 0:
                distance = i - last_store
                if distance > max_distance:
                    max_distance = distance
                    house_number = i + 1
        elif building == 2:
            last_store = i

    print(max_distance, house_number)


if __name__ == ""__main__"":
    main()","1.0"
"31c3dbe2-53d4-4355-a73f-50d94fe0dd67","
t=int(input())
for _ in range(t):
    x=int(input())
    d=1
    while x>d:
        d+=1
        while (d%3==0)|(str(d)[-1]=='3'): d+=1
    print(d)
","1.0"
"31c3dbe2-53d4-4355-a73f-50d94fe0dd67","
def is_valid(n):
    if n % 3 == 0 or str(n).endswith('3'):
        return False
    return True

def find_kth(k):
    i, count = 1, 0
    while count < k:
        if is_valid(i):
            count += 1
        i += 1
    return i

t = int(input())
for _ in range(t):
    k = int(input())
    print(find_kth(k))
","1.0"
"31c3dbe2-53d4-4355-a73f-50d94fe0dd67","def main():
    t = int(input())
    for _ in range(t):
        k = int(input())
        print(kth_element(k))

def kth_element(k):
    x = 0
    count = 0
    while count < k:
        x += 1
        if x % 3 != 0 and x % 10 != 3:
            count += 1
    return x

if __name__ == ""__main__"":
    main()","1.0"
"56188e25-bcd8-4838-a078-f9da9fa73c8b","
a=input();b=''
for i in a:
  if (len(b)==0 or b[-1]!=i):b+=i
print(b)
","1.0"
"56188e25-bcd8-4838-a078-f9da9fa73c8b","
def decrypt(s):
    result = ''
    for i in range(len(s)):
        if i == 0 or s[i] != s[i-1]:
            result += s[i]
    return result

s = input()
print(decrypt(s))
","1.0"
"56188e25-bcd8-4838-a078-f9da9fa73c8b","def decrypt(message):
    stack = []
    for char in message:
        if stack and stack[-1] == char:
            stack.pop()
        else:
            stack.append(char)
    return ''.join(stack)

message = input()
print(decrypt(message))","1.0"
"40f61f4c-c5c5-4f34-89bf-f0ca312a3c75","
n,a=int(input()),sorted([int(x)for x in input().split()],reverse=True)
print(sum(1 for x in a for y in a if x>y and (x+y)&1))
","1.0"
"40f61f4c-c5c5-4f34-89bf-f0ca312a3c75","
def odd_sum_less_second(n, numbers):
    count = 0
    for i in range(n):
        for j in range(i+1, n):
            if (numbers[i] + numbers[j]) % 2 != 0 and numbers[i] < numbers[j]:
                count += 1
    return count

n = int(input())
numbers = list(map(int, input().split()))
print(odd_sum_less_second(n, numbers))
","1.0"
"40f61f4c-c5c5-4f34-89bf-f0ca312a3c75","def count_combinations(n, buttons):
    count = 0
    for i in range(n):
        for j in range(i + 1, n):
            if (buttons[i] + buttons[j]) % 2 == 1:
                count += 1
    return count

n = int(input())
buttons = list(map(int, input().split()))
print(count_combinations(n, buttons))","1.0"
"bc87b483-769e-4df9-9463-bae5df9fb96f","
n=int(input())
if n%2==1:
    print(0,1)
elif n%4>0:
    print(1,n//4)
else:
    print(n//2,0)
","1.0"
"bc87b483-769e-4df9-9463-bae5df9fb96f","
def gcd(a, b):
    while b:
        a, b = b, a % b
    return a

def ext_gcd(a, b, x0, y0):
    if not b:
        return a, 0, 1, 0
    g, q = ext_gcd(b, a % b, y0 - q * a // b, x0 - q * y0 // b)
    return g, a, x0 - q * x, y0 - q * y

def mod_inv(a, m):
    g, x, y, _ = ext_gcd(a, m, 1, 0)
    if g != 1:
        raise ValueError(""No inverse"")
    return x % m

def solve():
    n = int(input())
    blue, white = divmod(n, 2)
    if blue * 2 + white != n:
        blue, white = 0, 0
    else:
        blue_needed = blue
        blue -= white * mod_inv(2, blue_needed)
        white = (n - blue) // 2
    print(blue, white)

solve()
","1.0"
"bc87b483-769e-4df9-9463-bae5df9fb96f","n = int(input())
blue_packages = n // 7
white_packages = n % 7 // 5
if n % 7 % 5 != 0:
    blue_packages += 1
    white_packages = 0
if blue_packages * 7 + white_packages * 5 != n:
    blue_packages = 0
    white_packages = 0
print(blue_packages, white_packages)","1.0"
"13f1bd7b-dd8d-410f-968b-c1be930de69c","
def get_input():
  n, k, x = map(int, input().split())
  a = list(map(int, input().split()))
  return n, k, x, a

def solve(n, k, x, a):
  a.sort()
  groups = 1
  prev = a[0]
  for i in range(1, n):
    if a[i] - prev > x:
      groups += 1
      prev = a[i]
    else:
      prev = a[i]
  return groups

n, k, x, a = get_input()
print(solve(n, k, x, a))
","1.0"
"13f1bd7b-dd8d-410f-968b-c1be930de69c","
def solve():
    n, k, x = map(int, input().split())
    a = list(map(int, input().split()))
    a += [0] * k
    a.sort()
    groups = 1
    for i in range(1, len(a)):
        if a[i] - a[i - 1] > x:
            groups += 1
    return groups

print(solve())
","1.0"
"13f1bd7b-dd8d-410f-968b-c1be930de69c","def solve(n, k, x, a):
    a.sort()
    groups = 1
    prev = a[0]
    candies = [prev]
    for i in range(1, n):
        if a[i] - prev <= x:
            candies.append(a[i])
            prev = a[i]
        else:
            groups += 1
            candies.append(a[i])
            prev = a[i]
    return groups

n, k, x = map(int, input().split())
a = list(map(int, input().split()))
print(solve(n, k, x, a))","1.0"
"71b7440c-fd34-4967-9b28-783a9aa1b104","
n = int(input())
t = [0] * (n + 1)
t[1] = 1
t[2] = 0
t[3] = 1
for i in range(4, n + 1):
    t[i] = t[i - 2] + t[i - 3]
print(t[n])
","1.0"
"71b7440c-fd34-4967-9b28-783a9aa1b104","
def ways(n):
    if n <= 3:
        return 1
    even = ways(n//2)
    odd = ways((n+1)//2)
    return even + odd

n = int(input())
print(ways(n))
","1.0"
"71b7440c-fd34-4967-9b28-783a9aa1b104","def count_ways(n):
    if n <= 3:
        return 1
    else:
        return count_ways(n // 2) + count_ways(n // 2 + n % 2)

n = int(input())
print(count_ways(n))","1.0"
"65a88d3c-866e-447a-b7d0-85f05c4c6441","
n, m = map(int, input().split())
print(m // n + (m % n > 0))
","1.0"
"65a88d3c-866e-447a-b7d0-85f05c4c6441","
def gcd(a, b):
    while b:
        a, b = b, a % b
    return a

N, M = map(int, input().split())
if M > N:
    max_hares = N
    hares_per_cage = [0] * N
    for hare in range(1, M + 1):
        for i in range(N):
            if hares_per_cage[i] < N:
                hares_per_cage[i] += 1
                if hares_per_cage[i] > max_hares:
                    max_hares = hares_per_cage[i]
    print(max_hares)
else:
    print(M)
","1.0"
"65a88d3c-866e-447a-b7d0-85f05c4c6441","def main():
    n, m = map(int, input().split())
    result = m // n + (1 if m % n else 0)
    print(result)

if __name__ == ""__main__"":
    main()","1.0"
"e0bc4009-5913-49cc-96c5-a8c4988f9103","
lst = input().split()
n = int(lst[0])
i = int(lst[1])
j = int(lst[2])
if i > j:
    print(n - i + j - 1)
else:
    print(j - i - 1)
","1.0"
"e0bc4009-5913-49cc-96c5-a8c4988f9103","
def min_intermediate_stations(n, i, j):
    if abs(i - j) == 1:
        return 0
    elif abs(i - j) > 2:
        return (abs(i - j) - 2) // 2
    else:
        return 1

n, i, j = map(int, input().split())
print(min_intermediate_stations(n, i, j))
","1.0"
"e0bc4009-5913-49cc-96c5-a8c4988f9103","def main():
    n, i, j = map(int, input().split())
    dist = abs(i - j)
    result = min(dist, n - dist) - 1
    print(result)

if __name__ == ""__main__"":
    main()","1.0"
"9844781d-49b1-46ec-97c8-257016eb564a","
import sys

def dist(l): return ((l[0]-l[2])**2+(l[1]-l[3])**2)**0.5

lines = sys.stdin.readlines()
nr_locations = int(lines[0])
locations = [map(int,line.split()) for line in lines[1:]]
totdist = 0.0
for i in range(nr_locations):
    if i < nr_locations-1:
        totdist += dist(locations[i]+locations[i+1])
    else:
        totdist += dist(locations[i]+locations[0])
print('%0.3f' %totdist)
","1.0"
"9844781d-49b1-46ec-97c8-257016eb564a","def distance(x1, y1, x2, y2):
    return ((x2 - x1) ** 2 + (y2 - y1) ** 2) ** 0.5

n = int(input())
traps = [list(map(int, input().split())) for _ in range(n)]

total_distance = 0
for i in range(1, n):
    total_distance += distance(traps[i-1][0], traps[i-1][1], traps[i][0], traps[i][1])
total_distance += distance(traps[-1][0], traps[-1][1], traps[0][0], traps[0][1])

print(f""{total_distance:.3f}"")","1.0"
"db1817f8-e2ae-4d2b-8481-53c70ddc5661","r=0
g=0
b=0
n,m=map(int,input().split())
def red(n,m):
 for i in range(1,n+1):
  for j in range(1,m+1):
   if i*j%2==0:
    r+=1
def green(n,m):
 for i in range(1,n+1):
  for j in range(1,m+1):
   if i*j%3==0:
    g+=1
def blue(n,m):
 for i in range(1,n+1):
  for j in range(1,m+1):
   if i*j%5==0:
    b+=1
red(n,m)
green(n,m)
blue(n,m)
print(""RED :"",r)
print(""GREEN :"",g)
print(""BLUE :"",b)
print(""BLACK :"",n*m-r-b-g)","1.0"
"db1817f8-e2ae-4d2b-8481-53c70ddc5661","
def count_colors(n, m):
    red, green, blue, black = 0, 0, 0, 0
    for i in range(1, n+1):
        for j in range(1, m+1):
            if i*j % 2 == 0:
                red += 1
            if i*j % 3 == 0:
                green += 1
            if i*j % 5 == 0:
                blue += 1
            else:
                black += 1
    return f""RED : {red}\nGREEN : {green}\nBLUE : {blue}\nBLACK : {black}""

n, m = map(int, input().split())
print(count_colors(n, m))
","1.0"
"db1817f8-e2ae-4d2b-8481-53c70ddc5661","def main():
    n, m = map(int, input().split())
    red, green, blue, black = 0, 0, 0, 0
    for i in range(1, n + 1):
        for j in range(1, m + 1):
            num = i * j
            if num % 2 == 0:
                red += 1
            elif num % 3 == 0:
                green += 1
            elif num % 5 == 0:
                blue += 1
            else:
                black += 1
    print(f""RED : {red}"")
    print(f""GREEN : {green}"")
    print(f""BLUE : {blue}"")
    print(f""BLACK : {black}"")

if __name__ == ""__main__"":
    main()","1.0"
"6f681490-aad8-4402-800a-db3570a52a8e","
a, b, c = map(int, input().split())
r = int(input())
s = (a + b + c) / 2
area = (s * (s - a) * (s - b) * (s - c)) ** 0.5
if area > 3.141592653589793 * r * r:
  print(""YES"")
else:
  print(""NO"")
","1.0"
"6f681490-aad8-4402-800a-db3570a52a8e","```
with open('input.txt', 'r') as f:
    tray = list(map(int, f.readline().split()))
    radius = int(f.readline())

    if (radius ** 2) > ((tray[0] * tray[0]) + (tray[1] * tray[1])):
        print('NO')
    else:
        print('YES')
```

This code reads the input from a file named 'input.txt', checks if the plate fits on the tray, and writes the output to the standard output. The output will be 'YES' if the plate fits on the tray, and 'NO' otherwise.","1.0"
"6f681490-aad8-4402-800a-db3570a52a8e","a, b, c = map(int, input().split())
r = int(input())

if r <= (a + b + c) / 3:
    print(""YES"")
else:
    print(""NO"")","1.0"
"cb0bfea6-3e23-49c9-b5f6-bec9789f82ce","n=int(input())
s=input().split(); t=[int(i) for i in s]; m=int(input())
for i in range(m):
    x,y=[int(i) for i in input().split()]
    for j in range(n):
        if t[j]==x: t[j]=y
print(*t)","1.0"
"cb0bfea6-3e23-49c9-b5f6-bec9789f82ce","
def find_patron(n, priests, applications):
    priests_map = {priest: [] for priest in range(1, 201)}
    patrons = [0] * (n + 1)

    for count in range(1, n + 1):
        patrons[count] = priests[count]

    for _ in range(applications[0]):
        current_patron, new_patron = map(int, input().split())
        priests_map[new_patron].append(patrons[current_patron])

    for priest in range(1, 201):
        if not priests_map[priest]:
            continue
        merged_counties = set()
        for count in priests_map[priest]:
            merged_counties.add(patrons[count])
        for county in merged_counties:
            patrons[county] = priest

    return patrons[1:]

n = int(input())
priests = list(map(int, input().split()))
applications = list(map(int, input().split()))
print(*find_patron(n, priests, applications))
","1.0"
"cb0bfea6-3e23-49c9-b5f6-bec9789f82ce","def main():
    n = int(input())
    patrons = list(map(int, input().split()))
    m = int(input())
    requests = [tuple(map(int, input().split())) for _ in range(m)]

    for i in range(n):
        for j in range(m):
            if patrons[i] == requests[j][0]:
                patrons[i] = requests[j][1]
                break

    print(*patrons)

if __name__ == ""__main__"":
    main()","1.0"
"820cd949-bd66-44d2-82e0-bfd517584c5c","
def find_word(table, word, visited):
    n = len(table)
    for i in range(n):
        for j in range(n):
            if table[i][j] == word[0] and (i, j) not in visited:
                if len(word) == 1:
                    return True
                else:
                    visited.add((i, j))
                    for k in range(1, len(word)):
                        found = False
                        for x, y in [(i + 1, j), (i - 1, j), (i, j + 1), (i, j - 1)]:
                            if 0 <= x < n and 0 <= y < n and table[x][y] == word[k] and (x, y) not in visited:
                                found = True
                                visited.add((x, y))
                                break
                        if not found:
                            visited.remove((i, j))
                            return False
                    return True
    return False

def solve_puzzle(table, words):
    n = len(table)
    visited = set()
    for word in words:
        if find_word(table, word, visited):
            for i in range(n):
                for j in range(n):
                    if (i, j) in visited:
                        table[i][j] = "" ""
    remaining_letters = []
    for i in range(n):
        for j in range(n):
            if table[i][j] != "" "":
                remaining_letters.append(table[i][j])
    return sorted(remaining_letters)

n, m = map(int, input().split())
table = []
for _ in range(n):
    table.append(list(input()))
words = []
for _ in range(m):
    words.append(input())
result = solve_puzzle(table, words)
print("""".join(result))
","1.0"
"820cd949-bd66-44d2-82e0-bfd517584c5c","
def find_remaining_letters(n, m, table, keywords):
    used = set()
    for keyword in keywords:
        found = True
        for letter in keyword:
            if letter in used or not (table[y][x] == letter for x, y in adjacents(n, x, y=table.index(list(table)[x]))):
                found = False
                break
            used.add(letter)
        if found:
            for letter in keyword:
                table[y][x] = '.'
    remaining = sorted(''.join(line.replace('.', '') for line in table).replace(' ', ''))
    return remaining

def adjacents(n, x, y=None):
    if y is None:
        y = table.index(list(table)[x])
    directions = [(0, 1), (1, 0), (0, -1), (-1, 0)]
    result = []
    for dx, dy in directions:
        nx, ny = x + dx * n, y + dy * n
        if 0 <= nx < n and 0 <= ny < n:
            result.append((nx, ny))
    return result

table = [list(input().strip()) for _ in range(n)]
n, m = map(int, input().split())
keywords = [input().strip() for _ in range(m)]
print(''.join(find_remaining_letters(n, m, table, keywords)))
","1.0"
"820cd949-bd66-44d2-82e0-bfd517584c5c","def find_words(table, words):
    def dfs(x, y, word, visited):
        if len(word) == 0:
            return True
        for dx, dy in [(0, 1), (1, 0), (0, -1), (-1, 0)]:
            nx, ny = x + dx, y + dy
            if 0 <= nx < n and 0 <= ny < n and not visited[nx][ny] and table[nx][ny] == word[0]:
                visited[nx][ny] = True
                if dfs(nx, ny, word[1:], visited):
                    return True
                visited[nx][ny] = False
        return False

    n = len(table)
    for word in words:
        visited = [[False] * n for _ in range(n)]
        found = False
        for i in range(n):
            for j in range(n):
                if table[i][j] == word[0]:
                    visited[i][j] = True
                    if dfs(i, j, word[1:], visited):
                        found = True
                        for k in range(n):
                            for l in range(n):
                                if visited[k][l]:
                                    table[k][l] = ' '
                        break
                    visited[i][j] = False
        if not found:
            return 'No solution'
    return ''.join(sorted(''.join(table).replace(' ', '')))

n, m = map(int, input().split())
table = [input() for _ in range(n)]
words = [input() for _ in range(m)]
print(find_words(table, words))","1.0"
"cac27472-4c12-422a-a596-3332c232da38","
n = int(input())
times = []
for _ in range(n):
  h1, m1, h2, m2 = map(int, input().split())
  if h1 > h2:
    h2 += 24
  times.append(((h1 * 60 + m1), (h2 * 60 + m2)))

times.sort()
max_end = times[0][1]
total_time = 0
for start, end in times:
  if start > max_end:
    total_time = 0
    max_end = end
  else:
    max_end = max(max_end, end)
  total_time = max(total_time, max_end - start)

print(total_time)
","1.0"
"cac27472-4c12-422a-a596-3332c232da38","
def lcm(a, b):
    return a * b // gcd(a, b)

def gcd(a, b):
    if b == 0:
        return a
    return gcd(b, a % b)

N = int(input())
times = []
for _ in range(N):
    h1, m1, h2, m2 = map(int, input().split())
    if h1 > 23:
        h1 -= 24
    if h2 > 23:
        h2 -= 24
    times.append((h1 * 60 + m1, h2 * 60 + m2))

open_times = sorted(times)
duration = 0
for i in range(1, len(open_times)):
    (h1, m1), (h2, m2) = open_times[i - 1], open_times[i]
    if m1 >= m2:
        m1 -= m2
        h1 -= h2
    duration += lcm(60, m1) + h1 * 60

print(duration)
","1.0"
"cac27472-4c12-422a-a596-3332c232da38","def main():
    n = int(input())
    schedule = []
    for _ in range(n):
        start_hour, start_minute, end_hour, end_minute = map(int, input().split())
        start_time = start_hour * 60 + start_minute
        end_time = end_hour * 60 + end_minute
        if end_time < start_time:
            end_time += 24 * 60
        schedule.append((start_time, end_time))

    max_overlap = 0
    for i in range(24 * 60):
        overlap = 0
        for start, end in schedule:
            if start < i + 1 and end > i:
                overlap += 1
        max_overlap = max(max_overlap, overlap)

    max_time = 0
    for i in range(24 * 60):
        overlap = 0
        for start, end in schedule:
            if start < i + 1 and end > i:
                overlap += 1
        if overlap == max_overlap:
            max_time += 1

    print(max_time)

if __name__ == ""__main__"":
    main()","1.0"
"a9c318ef-80f1-491d-ab11-68ce1859b858","
a = int(input())
print((2*a**2+4*a**3), a**3)
","1.0"
"a9c318ef-80f1-491d-ab11-68ce1859b858","
a = int(input())
l = a
w = l / 2
h = w / 4
surface_area = 2 * (l * w + w * h + h * l)
volume = l * w * h
print(surface_area, volume)
","1.0"
"a9c318ef-80f1-491d-ab11-68ce1859b858","def main():
    a = int(input())
    b = a * 2
    c = a * 4
    surface_area = 2 * (a * b + b * c + c * a)
    volume = a * b * c
    print(surface_area, volume)

if __name__ == '__main__':
    main()","1.0"
"3a5391b3-7918-4fa8-9eb6-8478632f15f0","
def get_time_of_day(time_str):
  hours, minutes = map(int, time_str.split(':'))
  if 500 <= hours < 1200 and minutes == 30:
    return 'morning'
  elif 1200 <= hours < 1750 and minutes == 30:
    return 'day'
  elif 1750 <= hours < 2700 and minutes == 30:
    return 'evening'
  else:
    return 'night'

time_str = input()
print(get_time_of_day(time_str))
","1.0"
"3a5391b3-7918-4fa8-9eb6-8478632f15f0","
def venus_time_of_day(hours, minutes):
    if hours >= 500 and hours < 1200 and minutes < 30:
        return ""morning""
    elif hours < 1750:
        return ""day""
    elif hours < 1800 and minutes < 30:
        return ""evening""
    else:
        return ""night""

# Test cases
print(venus_time_of_day(500, 35))  # morning
print(venus_time_of_day(1400, 00))  # day
print(venus_time_of_day(1800, 17))  # evening
print(venus_time_of_day(2, 30))      # night
","1.0"
"3a5391b3-7918-4fa8-9eb6-8478632f15f0","def venus_time_of_day(time):
    hours, minutes = map(int, time.split(':'))
    total_minutes = hours * 60 + minutes

    if 30000 <= total_minutes < 72000:
        return 'morning'
    elif 72000 <= total_minutes < 105000:
        return 'day'
    elif 105000 <= total_minutes < 162000:
        return 'evening'
    else:
        return 'night'

time = input()
print(venus_time_of_day(time))","1.0"
"964962f4-923d-476e-b370-36324b1dd5d3","
n, m = map(int, input().split())
print(max(0, (n - m) // 2))
","1.0"
"964962f4-923d-476e-b370-36324b1dd5d3","
def mafia(n, m):
    if m == n:
        return 1
    if m == 0:
        return n
    if m > n:
        return 0
    return (n - m) // (m - 1) + 1

n, m = map(int, input().split())
print(mafia(n, m))
","1.0"
"964962f4-923d-476e-b370-36324b1dd5d3","def mafia(n, m):
    if m == 0:
        return 1
    if m == n:
        return 0
    return m + 1

n, m = map(int, input().split())
print(mafia(n, m))","1.0"
"a62dd931-540a-4081-bc01-26a8e58aced3","
n = int(input())
packets = [0 for _ in range(n+1)]
for packet in list(map(int, input().split())):
    packets[packet] = 1
for i, packet in enumerate(packets):
    if not packet:
        print(i)
        break
","1.0"
"a62dd931-540a-4081-bc01-26a8e58aced3","
n = int(input())
a = list(map(int, input().split()))
a.sort()
for i in range(1, n+1):
    if i not in a:
        print(i)
        break
","1.0"
"a62dd931-540a-4081-bc01-26a8e58aced3","def main():
    n = int(input())
    packets = list(map(int, input().split()))

    expected_sum = (n * (n + 1)) // 2
    actual_sum = sum(packets)

    lost_packet = expected_sum - actual_sum
    print(lost_packet)

if __name__ == ""__main__"":
    main()","1.0"
"7c31dab6-5b9e-413f-94fb-2f42e652f8e4","n=int(input())
for i in range(n):
    s=input()
    if len(s)<=20:print(s)
    else:print(s[0]+str(len(s)-2)+s[-1])","1.0"
"7c31dab6-5b9e-413f-94fb-2f42e652f8e4","
def is_long(num):
    return len(str(num)) > 20

def reduce_long(num):
    first, last = str(num)[0], str(num)[-1]
    return str(int(first) * 10 ** (len(str(num)) - len(str(num) - len(str(num).lstrip('0')) - 1) - 2) + int(last))

n = int(input())
for _ in range(n):
    num = int(input())
    print(num if not is_long(num) else reduce_long(num))
","1.0"
"7c31dab6-5b9e-413f-94fb-2f42e652f8e4","def reduce_number(num):
    if len(num) <= 20:
        return num
    else:
        first = num[0]
        last = num[-1]
        mid_len = len(num[1:-1])
        return first + str(mid_len) + last

n = int(input())
for _ in range(n):
    num = input()
    print(reduce_number(num))","1.0"
"6ece3435-75b0-481a-bcb8-5b5e036fcfaa","
a, b = map(int, input().split())
if (a < 2) | (b < 1):
    print('NO')
elif ((a & 1) & (b & 1)):
    print('NO')
else:
    print('YES')
","1.0"
"6ece3435-75b0-481a-bcb8-5b5e036fcfaa","
def memory_stack(a, b):
    if (a + b + 1) % 2 == 0:
        return ""YES""
    else:
        return ""NO""

a, b = map(int, input().split())
print(memory_stack(a, b))
","1.0"
"6ece3435-75b0-481a-bcb8-5b5e036fcfaa","def main():
    a, b = map(int, input().split())
    if a == 0 and b == 1:
        print(""NO"")
    elif a == 0 and b > 1:
        print(""YES"")
    elif a > 0 and b == 0:
        print(""NO"")
    else:
        print(""YES"")

if __name__ == ""__main__"":
    main()","1.0"
"5649f199-b867-4d54-aae7-95a54f034bf5","
n = int(input())
num_girls = 0
hi_b = 100
lo_g = 200
for i in range(n):
    a, h = map(int, input().split())
    if not a:
        hi_b = max(h, hi_b)
    else:
        num_girls += 1
        lo_g = min(h, lo_g)
print(lo_g - hi_b)
","1.0"
"5649f199-b867-4d54-aae7-95a54f034bf5","
n = int(input())
students = []
max_diff = 0

for _ in range(n):
    gender, height = map(int, input().split())
    students.append((gender, height))

students.sort(key=lambda x: (x[1], x[0]))

for i in range(1, n):
    if students[i][0] != students[i-1][0]:
        max_diff = max(max_diff, students[i][1] - students[i-1][1])

print(max_diff)
","1.0"
"5649f199-b867-4d54-aae7-95a54f034bf5","n = int(input())
boys = []
girls = []
for i in range(n):
    a, h = map(int, input().split())
    if a == 0:
        boys.append(h)
    else:
        girls.append(h)
boys.sort(reverse=True)
girls.sort()
max_diff = 0
if len(boys) > 0 and len(girls) > 0:
    max_diff = max(max_diff, abs(boys[0] - girls[0]))
for i in range(1, len(boys)):
    max_diff = max(max_diff, abs(boys[i] - boys[i-1]))
for i in range(1, len(girls)):
    max_diff = max(max_diff, abs(girls[i] - girls[i-1]))
print(max_diff)","1.0"
"445c41c2-fb30-463d-a133-ea25ee4f72ad","
n=int(input());a=[[int(i) for i in input()] for j in range(n)];ans=0
for j in range(n):
 t=0
 for i in range(n):
  t^=a[i][j]
 ans+=t==0
print(ans)
","1.0"
"445c41c2-fb30-463d-a133-ea25ee4f72ad","
def clean_rows(grid):
    n = len(grid)
    dp = [[0] * n for _ in range(n)]
    for i in range(n):
        for j in range(n):
            if grid[j][i] == '1':
                dp[j][i] = 1
            else:
                dp[j][i] = min(dp[j][k] + 1 for k in range(i))
    return max(sum(row) for row in zip(*dp))

n = int(input())
grid = []
for _ in range(n):
    row = list(map(str, input().split()))
    grid.append(row)
print(clean_rows(grid))
","1.0"
"445c41c2-fb30-463d-a133-ea25ee4f72ad","def strange_robot_vacuum():
    n = int(input())
    room = [input() for _ in range(n)]

    columns = [0] * n
    for i in range(n):
        for j in range(n):
            if room[i][j] == '1':
                columns[j] += 1
            else:
                columns[j] -= 1

    max_clean_rows = 0
    for count in columns:
        if count == n or count == -n:
            max_clean_rows += 1

    return max_clean_rows

print(strange_robot_vacuum())","1.0"
"02483234-a45b-4799-a9dd-04494a21998a","
def is_reachable(x, y):
  if x == y:
    return True
  if x % 2 == 0 and x > 1:
    return is_reachable(x // 2, y) or is_reachable(x - 1, y)
  if x > 1:
    return is_reachable(x - 1, y)
  return False

t = int(input())
for _ in range(t):
  x, y = map(int, input().split())
  if is_reachable(x, y):
    print(""YES"")
  else:
    print(""NO"")
","1.0"
"02483234-a45b-4799-a9dd-04494a21998a","
def crazy_calculator(T):
    for _ in range(T):
        x, y = map(int, input().split())
        if x % 2 == 0 and x > 1:
            x -= 1
        if x == y:
            print(""YES"")
        elif x % 2 == 0 and x > 1 and crazy_calculator(x // 2) == ""YES"":
            print(""YES"")
        elif x - 1 == y:
            print(""YES"")
        else:
            print(""NO"")

T = int(input())
crazy_calculator(T)
","1.0"
"02483234-a45b-4799-a9dd-04494a21998a","def crazy_calculator(x, y):
    while x > 1:
        if x % 2 == 0:
            x = x // 2
        else:
            x = x - 1
        if x == y:
            return True
    return False

t = int(input())
for _ in range(t):
    x, y = map(int, input().split())
    if crazy_calculator(x, y):
        print(""YES"")
    else:
        print(""NO"")","1.0"
"84cf2736-6f23-4127-9ed9-7027b8fdb369","
for _ in range(int(input())):
    n = int(input())
    a = list(map(int, input().split()))
    print(sum((ai > max(a[i + 1:])) for i in range(0, n - 1)))
","1.0"
"84cf2736-6f23-4127-9ed9-7027b8fdb369","
t = int(input())
for _ in range(t):
    n = int(input())
    a = list(map(int, input().split()))
    terrible_days = 0
    for i in range(1, n):
        if a[i] < a[i-1]:
            terrible_days += 1
    print(terrible_days)
","1.0"
"84cf2736-6f23-4127-9ed9-7027b8fdb369","def solve_stock_prices():
    t = int(input())
    for _ in range(t):
        n = int(input())
        prices = list(map(int, input().split()))
        min_price = float('inf')
        terrible_days = 0
        for price in reversed(prices):
            if price > min_price:
                terrible_days += 1
            else:
                min_price = price
        print(terrible_days)

solve_stock_prices()","1.0"
"addeb428-01ba-4987-9b50-6ad4f8c62a74","
n=int(input())
a=1
ans=[1]
for i in range(n-1):
    x=int(input())
    if x==a:
        a+=1
        ans[-1]+=1
    else:
        ans.append(1)
        a=x
print(*ans)
","1.0"
"addeb428-01ba-4987-9b50-6ad4f8c62a74","
def paratsak(n):
    rods = [1] * n
    while len(rods) > 1 and rods[-1] == rods[-2]:
        rods[-2] += 1
        del rods[-1]
    return rods

n = int(input())
print(*paratsak(n))
","1.0"
"addeb428-01ba-4987-9b50-6ad4f8c62a74","def main():
    n = int(input())
    rods = [1] * n

    i = 1
    while i < n:
        if rods[i] == rods[i - 1]:
            rods.pop(i)
            rods.pop(i - 1)
            rods.append(rods[i - 2] + 1)
            i = max(i - 2, 0)
        else:
            i += 1

    print(*rods)

if __name__ == ""__main__"":
    main()","1.0"
"ea8b8ea8-d5fb-454c-ae09-380e26090353","
n=int(input())
m=n//2
nw=n*n
for y in range(m):
 for x in range(m-y,m+y+1):
  nw-=1
  c=('abcdefghijklmnopqrstuvwxyz')[nw%26]
  print(c,end='')
  if x<m:print(c,end='')
 print()
for y in range(m-1,-1,-1):
 for x in range(m-y,m+y+1):
  nw-=1
  c=('abcdefghijklmnopqrstuvwxyz')[nw%26]
  print(c,end='')
  if x<m:print(c,end='')
 print()
","1.0"
"ea8b8ea8-d5fb-454c-ae09-380e26090353","
def seating(n):
    arr = [['.' for _ in range(n)] for _ in range(n)]
    diag1, diag2 = 0, n-1
    for i in range(65, 65+n*n):
        arr[diag1][diag1] = chr(i)
        arr[diag2][diag2] = chr(i)
        for j in range(diag1+1, diag2):
            arr[diag1+1][j] = chr(i+j-diag1)
            arr[diag1][j+1] = chr(i+j-diag1)
        diag1 += 1
        diag2 -= 1
        for j in range(diag1, diag2):
            arr[diag1][j+1] = arr[diag1][j]
        diag1 += 1
    for line in arr:
        print(''.join(line))

n = int(input())
seating(n)
","1.0"
"ea8b8ea8-d5fb-454c-ae09-380e26090353","def correct_seating(n):
    seating = [[0] * n for _ in range(n)]
    direction = 1
    current_char = 'a'

    for i in range(n * 2 - 1):
        for j in range(max(0, i - n + 1), min(i + 1, n)):
            seating[j][i - j] = current_char
            current_char = chr(ord(current_char) + 1) if ord(current_char) < ord('z') else 'a'

        if i < n - 1:
            direction = 1
        else:
            direction = -1

        current_char = chr(ord(current_char) - direction) if ord(current_char) > ord('a') else 'z'

    for row in seating:
        print(''.join(row))

n = int(input())
correct_seating(n)","1.0"
"de8af9ab-6f54-4cfb-a99f-3c734f989615","
n, d = map(int, input().split())
sensors = list(map(int, input().split()))

turned_on = 0
current_sensor = 0
for i in range(n):
  if sensors[i] == 1:
    current_sensor = i
    turned_on += 1
    break

last_sensor = current_sensor
for i in range(current_sensor + 1, n):
  if sensors[i] == 1 and i - last_sensor <= d:
    last_sensor = i
  elif sensors[i] == 0 and i - last_sensor > d:
    sensors[i] = 1
    turned_on += 1
    last_sensor = i

print(turned_on)
","1.0"
"de8af9ab-6f54-4cfb-a99f-3c734f989615","
def confident_signal(n, d, on):
    left = [0] * (n + d + 1)
    right = [0] * (n + d + 1)

    for i in range(d + 1, -1, -1):
        left[i] = max(left[i + 1], on[i - 1] + (i <= n))

    for i in range(d + 1, n + 1):
        right[i] = max(right[i - 1], on[i + d] + (i >= 0))

    res = 0
    for i in range(d + 1, n - d):
        res = max(res, left[i - d] + right[i + d] - on[i])

    return n - res

n, d = map(int, input().split())
on = list(map(int, input().split()))
print(confident_signal(n, d, on))
","1.0"
"de8af9ab-6f54-4cfb-a99f-3c734f989615","def find_min_sensors(n, d, sensors):
    on_count = 0
    last_on = -1
    for i in range(n):
        if sensors[i] == 1:
            last_on = i
        else:
            if i - last_on > d:
                on_count += 1
                last_on = i
    return on_count

n, d = map(int, input().split())
sensors = list(map(int, input().split()))
print(find_min_sensors(n, d, sensors))","1.0"
"602eb499-46f9-4cd2-aaf8-0046ab7077eb","
t = int(input())
for i in range(t):
  a = input()
  print('YES' if (int(a[:2])**2 + int(a[2:])**2) % 7 == 1 else 'NO')
","1.0"
"602eb499-46f9-4cd2-aaf8-0046ab7077eb","
def is_valid(code):
    ab = int(code[:2])
    cd = int(code[2:])
    return (ab**2 + cd**2) % 7 == 1

t = int(input())
for _ in range(t):
    code = input()
    if is_valid(code):
        print(""YES"")
    else:
        print(""NO"")
","1.0"
"602eb499-46f9-4cd2-aaf8-0046ab7077eb","def main():
    t = int(input())
    for _ in range(t):
        code = input()
        AB = int(code[:2])
        CD = int(code[2:])
        if (AB ** 2 + CD ** 2) % 7 == 1:
            print(""YES"")
        else:
            print(""NO"")

if __name__ == ""__main__"":
    main()","1.0"
"26d1c993-2e68-4018-bcaa-9bc3b167e183","def dunes():
    n, m = map(int, input().split()); cells = [0]*110
    for i in range(n):
        l, r, x = map(int, input().split()); cells[l]+=x
        if (r+1<=109): cells[r+1]-=x
    for i in range(1,110): cells[i]+=cells[i-1]
    for i in range(m): print(cells[int(input())])
dunes()","1.0"
"26d1c993-2e68-4018-bcaa-9bc3b167e183","
n, m = map(int, input().split())
height = [0] * 109
for _ in range(n):
    li, ri, xi = map(int, input().split())
    for i in range(li, ri+1):
        height[i] += xi
        if i > 1:
            height[i-1] -= xi
    for i in range(ri+1, 109):
        height[i] += xi
        if i < 108:
            height[i+1] -= xi
for _ in range(m):
    q = int(input())
    print(height[q])
","1.0"
"26d1c993-2e68-4018-bcaa-9bc3b167e183","def main():
    n, m = map(int, input().split())
    dunes = [0] * 110
    for _ in range(n):
        l, r, x = map(int, input().split())
        dunes[l] += x
        dunes[r + 1] -= x
    for i in range(1, 110):
        dunes[i] += dunes[i - 1]
    for _ in range(m):
        q = int(input())
        print(dunes[q])

if __name__ == '__main__':
    main()","1.0"
"82981a21-b600-4423-8f6a-4857c49e78af","c=list(input())
l=['R','B','Y','G']
for i in l:
    x=c.count(i)
    y=c.count('!'+i)
    if(x<=y):print(0,end=' ')
    else:print(y,end=' ')","1.0"
"82981a21-b600-4423-8f6a-4857c49e78af","
def count_burnt_out(s):
    r, b, y, g = 0, 0, 0, 0
    for i in range(len(s) - 3):
        if s[i] == s[i+1] == s[i+2] == s[i+3]:
            continue
        if s[i] == '!':
            r += 1 if s[i+1] == 'R' else 0
        if s[i+1] == '!':
            b += 1 if s[i] == 'B' else 0
        if s[i+2] == '!':
            y += 1 if s[i+1] == 'Y' else 0
        if s[i+3] == '!':
            g += 1 if s[i+2] == 'G' else 0
    for i in range(len(s)):
        if s[i] == '!':
            if s[i] != s[i-1] and s[i] != s[i+1]:
                r += 1 if s[i] == 'R' else 0
                b += 1 if s[i] == 'B' else 0
                y += 1 if s[i] == 'Y' else 0
                g += 1 if s[i] == 'G' else 0
    return r, b, y, g

s = input()
print(*count_burnt_out(s))
","1.0"
"82981a21-b600-4423-8f6a-4857c49e78af","def count_burnt_bulbs(s):
    kr, kb, ky, kg = 0, 0, 0, 0
    for i in range(len(s)):
        if s[i] == '!':
            if i < len(s) - 1 and s[i + 1] != '!':
                if s[i - 1] != 'R' and (i == 0 or s[i - 2] != 'R'):
                    kr += 1
                elif s[i - 1] != 'B' and (i == 0 or s[i - 2] != 'B'):
                    kb += 1
                elif s[i - 1] != 'Y' and (i == 0 or s[i - 2] != 'Y'):
                    ky += 1
                else:
                    kg += 1
            else:
                if s[i - 1] != 'R' and (i == 0 or s[i - 2] != 'R') and (i == 1 or s[i - 3] != 'R'):
                    kr += 1
                elif s[i - 1] != 'B' and (i == 0 or s[i - 2] != 'B') and (i == 1 or s[i - 3] != 'B'):
                    kb += 1
                elif s[i - 1] != 'Y' and (i == 0 or s[i - 2] != 'Y') and (i == 1 or s[i - 3] != 'Y'):
                    ky += 1
                else:
                    kg += 1
    return kr, kb, ky, kg

s = input()
kr, kb, ky, kg = count_burnt_bulbs(s)
print(kr, kb, ky, kg)","1.0"
"d8d82938-fcc5-4c3d-9b25-e5b23632cae0","l1, r1, l2, r2, k = map(int, input().split())
start = max(l1, l2)
end = min(r1, r2)
if end < start or start % k == 0 or end % k == 0:
    print(0)
else:
    start = (start - 1) // k * k + 1
    end = end // k * k
    print(max(0, end - start + 1))","1.0"
"d8d82938-fcc5-4c3d-9b25-e5b23632cae0","
def locky_date(l1, r1, l2, r2, k):
    if l1 > r2 or l2 > r1:
        return 0
    if k <= l1:
        return r2 - l1
    if k >= r2 + 1:
        return r2 - l1 + (r1 - l1) if l1 <= l2 else 0
    return min((r2 - k) + (r1 - l2), (k - l1) + (r1 - l2))

l1, r1, l2, r2, k = map(int, input().split())
print(locky_date(l1, r1, l2, r2, k))
","1.0"
"d8d82938-fcc5-4c3d-9b25-e5b23632cae0","def main():
    l1, r1, l2, r2, k = map(int, input().split())

    if k >= l2 and k <= r2:
        if r1 < k:
            print(min(r1, r2) - max(l1, l2) + 1)
        else:
            print(min(r1, k - 1) - max(l1, l2) + 1 + min(r1, r2) - k)
    else:
        print(min(r1, r2) - max(l1, l2) + 1)

if __name__ == ""__main__"":
    main()","1.0"
"7805fe34-1d52-43d6-8d18-16d0fccb4c8c","
t = input().split()
n = int(t[0])
t = int(t[1])
m = [input().split() for i in range(n)]
def get(i, j):
    return 1 <= i < n and 1 <= j < n and m[i][j] == '1'
for tt in range(t):
    for i in range(n):
        for j in range(n):
            c = sum(get(a, b) for a in range(i - 1, i + 2)
                  for b in range(j - 1, j + 2)) - int(m[i][j] == '1')
            if c == 3:
                m[i][j] = '1'
            elif c != 2:
                m[i][j] = '0'
    print(*m, sep='\n')
","1.0"
"7805fe34-1d52-43d6-8d18-16d0fccb4c8c","
def life_squared(n, t, grid):

    def neighbors(x, y):
        count = 0
        for i in range(x-1, x+2):
            for j in range(y-1, y+2):
                if (0 <= i < n and 0 <= j < n and (i, j) != (x, y)):
                    count += grid[i][j]
        return count

    def next_state(grid):
        next_grid = [[0]*n for _ in range(n)]
        for i in range(n):
            for j in range(n):
                if grid[i][j] == 1:
                    if neighbors(i, j) in (2, 3):
                        next_grid[i][j] = 1
                    elif neighbors(i, j) == 3:
                        next_grid[i][j] = 1
                elif neighbors(i, j) == 3:
                    next_grid[i][j] = 1
        return next_grid

    for _ in range(t):
        grid = next_state(grid)
    return grid

n, t = map(int, input().split())
grid = []
for _ in range(n):
    row = list(map(int, input().split()))
    grid.append(row)
print('\n'.join(' '.join(map(str, row)) for row in life_squared(n, t, grid)))
","1.0"
"7805fe34-1d52-43d6-8d18-16d0fccb4c8c","def life_squared(n, t, grid):
    for _ in range(t):
        new_grid = [[0] * n for _ in range(n)]
        for i in range(n):
            for j in range(n):
                neighbors = 0
                for x in range(i - 1, i + 2):
                    for y in range(j - 1, j + 2):
                        if 0 <= x < n and 0 <= y < n and grid[x][y] == 1:
                            neighbors += 1
                if grid[i][j] == 1:
                    neighbors -= 1
                if (grid[i][j] == 1 and 2 <= neighbors <= 3) or (grid[i][j] == 0 and neighbors == 3):
                    new_grid[i][j] = 1
        grid = new_grid
    return grid

n, t = map(int, input().split())
grid = [list(map(int, input().split())) for _ in range(n)]

result = life_squared(n, t, grid)
for row in result:
    print(*row)","1.0"
"27b539b9-a075-4402-a90c-863e1b839e6c","x1,y1,x2,y2=map(int,input().split())
if y1!=y2: print(abs(x1)+abs(x2)+abs(y1-y2))
else: print(abs(x1-x2))","1.0"
"27b539b9-a075-4402-a90c-863e1b839e6c","
def abs_(x):
    if x < 0:
        return -x
    return x

X1, Y1, X2, Y2 = map(int, input().split())

if Y1 != Y2:
    distance = abs_(X1) + abs_(X2) + abs_(Y1 - Y2)
else:
    distance = abs_(X1 - X2)

print(distance)
","1.0"
"27b539b9-a075-4402-a90c-863e1b839e6c","def distance_between_cities(x1, y1, x2, y2):
    if y1 == y2:
        return abs(x1 - x2)
    else:
        return abs(x1) + abs(x2) + abs(y1 - y2)

x1, y1, x2, y2 = map(int, input().split())

print(distance_between_cities(x1, y1, x2, y2))","1.0"
"02f9fab5-9fec-4436-b553-57902fc3ce32","
n, a, b = map(int, input().split())
t = list(map(int, input().split()))
denied = 0
single_tables = a
double_tables = b
for i in range(n):
    if t[i] == 1:
        if single_tables > 0:
            single_tables -= 1
        elif double_tables > 0:
            double_tables -= 1
        else:
            denied += 1
    else:
        if double_tables > 0:
            double_tables -= 1
        else:
            denied += 2
print(denied)
","1.0"
"02f9fab5-9fec-4436-b553-57902fc3ce32","
def banquet(n, a, b, t):
    tables = [a, b]
    denied = 0
    for i in range(n):
        if t[i] == 1:
            if tables[0] > 0:
                tables[0] -= 1
            elif tables[1] > 1 and tables[1] > tables[0]:
                tables[1] -= 1
                tables[0] += 1
            else:
                denied += 1
        else:
            if tables[1] > 0:
                tables[1] -= 1
            else:
                denied += 2
    return denied

n, a, b = map(int, input().split())
t = list(map(int, input().split()))
print(banquet(n, a, b, t))
","1.0"
"02f9fab5-9fec-4436-b553-57902fc3ce32","def banquet(n, a, b, groups):
    single_tables = [True] * a
    double_tables = [True] * b
    denied = 0

    for group in groups:
        if group == 1:
            if any(single_tables):
                single_tables[single_tables.index(True)] = False
            elif any(double_tables):
                double_tables[double_tables.index(True)] = False
            else:
                denied += 1
        else:
            if any(double_tables):
                double_tables[double_tables.index(True)] = False
            else:
                denied += 2

    return denied


n, a, b = map(int, input().split())
groups = list(map(int, input().split()))

print(banquet(n, a, b, groups))","1.0"
"475d017d-07d6-4a0d-b666-82de261f4e17","
n = int(input())
count = 0
for i in range(n):
  p, q = map(int, input().split())
  if q - p >= 2:
    count += 1
print(count)
","1.0"
"475d017d-07d6-4a0d-b666-82de261f4e17","
n = int(input())
trams = []
for _ in range(n):
    people, capacity = map(int, input().split())
    trams.append((people, capacity))

people_needed = int(input())

trams_taken = 0
for tram in trams:
    if tram[0] + tram[1] - people_needed >= 0:
        tram[0] -= people_needed
        trams_taken += 1
        if tram[0] == 0:
            break

print(trams_taken)
","1.0"
"475d017d-07d6-4a0d-b666-82de261f4e17","n = int(input())
count = 0
for i in range(n):
    p, q = map(int, input().split())
    if p < q:
        count += 1
print(count)","1.0"
"4bdb3c96-f95d-44f9-829c-cc85cac5ea72","
n, m = map(int, input().split())
y, x = map(int, input().split())

coins = 0
row = 1
col = 1
direction = 0 # 0 - right, 1 - down, 2 - left, 3 - up
while row != y or col != x:
  if direction == 0:
    if col < m:
      col += 1
      coins += 1
    else:
      direction = 1
  elif direction == 1:
    if row < n:
      row += 1
      coins += 1
    else:
      direction = 2
  elif direction == 2:
    if col > 1:
      col -= 1
      coins += 1
    else:
      direction = 3
  else:
    if row > 1:
      row -= 1
      coins += 1
    else:
      direction = 0
print(coins)
","1.0"
"4bdb3c96-f95d-44f9-829c-cc85cac5ea72","
def mario(n, m, y, x):
    coins = n * m
    for i in range(1, y):
        coins -= min(m, i)
    for i in range(y+1, n):
        coins -= min(m, n-i)
    coins -= min(x-1, m-x+1)
    return coins

n, m, y, x = map(int, input().split())
print(mario(n, m, y, x))
","1.0"
"4bdb3c96-f95d-44f9-829c-cc85cac5ea72","def mario():
    n, m = map(int, input().split())
    y, x = map(int, input().split())

    coins = 0
    row, col = 0, 0
    direction = 0

    while True:
        if row == y - 1 and col == x - 1:
            break

        coins += 1

        if direction == 0:  # Move right
            col += 1
            if col == m or (row == y - 1 and col == x):
                direction = 1
                col -= 1
        elif direction == 1:  # Move down
            row += 1
            if row == n or (row == y and col == x - 1):
                direction = 2
                row -= 1
        elif direction == 2:  # Move left
            col -= 1
            if col == -1 or (row == y - 1 and col == x - 2):
                direction = 3
                col += 1
        else:  # Move up
            row -= 1
            if row == -1 or (row == y - 2 and col == x - 1):
                break

    return coins

print(mario())","1.0"
"0d9002cd-2fbd-461d-8c43-ba0350fe2e8e","
N, X, Y = map(int, input().split())
print(N * (X + Y))
","1.0"
"0d9002cd-2fbd-461d-8c43-ba0350fe2e8e","
N, X, Y = map(int, input().split())
cost = N * (X + Y)
print(cost)
","1.0"
"0d9002cd-2fbd-461d-8c43-ba0350fe2e8e","N, X, Y = map(int, input().split())

total_cost = N * (X + Y)

print(total_cost)","1.0"
"41dc3f51-3de3-4b99-8c8f-911409a91ad9","
x, y, a, b = map(int, input().split())
stickers = min(x // a, y // b) * b
print(stickers)
","1.0"
"41dc3f51-3de3-4b99-8c8f-911409a91ad9","
def gcd(a, b):
    while b:
        a, b = b, a % b
    return a

def exchanger(x, y, a, b):
    g = gcd(a, b)
    a //= g
    b //= g
    return y * (x // a) // b

x, y, a, b = map(int, input().split())
print(exchanger(x, y, a, b))
","1.0"
"41dc3f51-3de3-4b99-8c8f-911409a91ad9","def gcd(a, b):
    while b != 0:
        a, b = b, a % b
    return a

def main():
    x, y, a, b = map(int, input().split())
    while x >= a and y >= b:
        x -= a
        y += b
    print(y)

if __name__ == ""__main__"":
    main()","1.0"
"ba55d077-468c-489c-833a-84b7049e1458","n=int(input())
li=list(map(int,input().split()))
if sum(li)%2==li[0]%2:
    for i in range(n):
        if li[i]%2!=li[0]%2:
            print(i+1)
else:
    for i in range(n):
        if li[i]%2==li[0]%2:
            print(i+1)","1.0"
"ba55d077-468c-489c-833a-84b7049e1458","
n = int(input())
numbers = list(map(int, input().split()))
parity = sum(numbers) % 2
result = 0
for i in range(n):
    if (numbers[i] % 2 != parity) or (numbers[i] == result):
        result = numbers[i] + 1
    else:
        result += 1
print(result)
","1.0"
"ba55d077-468c-489c-833a-84b7049e1458","def find_extra(numbers):
    result = 0
    for i, num in enumerate(numbers, start=1):
        if num % 2 != numbers[0] % 2:
            result = i
            break
    return result

n = int(input())
numbers = list(map(int, input().split()))

print(find_extra(numbers))","1.0"
"71b2758a-6863-4cfd-b6f6-88ebb73fb83f","
def reverse(s):
    t=""""
    for i in s[::-1]:
        if i!=""0"": t+=i
    return t

b=input().split()
if b[0]==""b"":
    print(""binary"",b[1],""is decimal"",int(reverse(b[1]),2))
else:
    print(""decimal"",b[1],""is binary"",reverse(bin(int(b[1]))[2:]))
","1.0"
"71b2758a-6863-4cfd-b6f6-88ebb73fb83f","
def to_two_reverse(n):
    if n == 0:
        return '0'
    result = ''
    while n > 0:
        rem = n % 2
        n //= 2
        result += str(rem)
    result += '0'  # always add leading zero
    return result[::-1]

def to_decimal(n):
    total = 0
    for i, digit in enumerate(n[::-1]):
        total += int(digit) * 2 ** i
    return total

def main():
    system = input().strip().lower()
    number = input().strip()
    if system == 'b':
        number = to_two_reverse(number)
        print(f'binary {number} is decimal {to_decimal(number)})
    elif system == 'd':
        number = to_decimal(number)
        print(f'decimal {number} is binary {number:0>10b}')
    else:
        print('Invalid system')

main()
","1.0"
"71b2758a-6863-4cfd-b6f6-88ebb73fb83f","def decimal_to_two_reverse(decimal):
    two_reverse = """"
    while decimal > 0:
        two_reverse = str(decimal % 2) + two_reverse
        decimal //= 2
    return ""0"" + two_reverse if two_reverse else ""0""

def two_reverse_to_decimal(two_reverse):
    decimal = 0
    for i in range(len(two_reverse)):
        decimal += int(two_reverse[i]) * (2 ** (len(two_reverse) - i - 1))
    return decimal

system, number = input().split()
if system == ""d"":
    two_reverse = decimal_to_two_reverse(int(number))
    print(f""decimal {number} is binary {two_reverse}"")
else:
    decimal = two_reverse_to_decimal(number)
    print(f""binary {number} is decimal {decimal}"")","1.0"
"6b40330c-4690-4ef2-9bff-4d20ab893a48","
n = int(input())
s = input()
count = 0
i = 0
while i < n:
  if s[i] == '8':
    count += 1
    i += 11
  else:
    i += 1
print(count)
","1.0"
"6b40330c-4690-4ef2-9bff-4d20ab893a48","
def is_valid(s):
    if len(s) != 11 or not s.isdigit():
        return False
    return True

def make_phone_numbers(n, s):
    count = 0
    for i in range(1, n+1):
        for j in range(i, n+1):
            for k in range(j, n+1):
                sub = s[:i] + s[j:k+1] + s[k+i:]
                if is_valid(sub):
                    count += 1
    return count

n = int(input())
s = input()
print(make_phone_numbers(n, s))
","1.0"
"6b40330c-4690-4ef2-9bff-4d20ab893a48","def main():
    n = int(input())
    cards = input()

    count = 0
    for i in range(n - 10):
        if cards[i] == '8':
            phone_number = True
            for j in range(1, 11):
                if i + j >= n or cards[i + j] not in ""0123456789"":
                    phone_number = False
                    break
            if phone_number:
                count += 1
                i += 10

    print(count)

if __name__ == ""__main__"":
    main()","1.0"
"640ca41d-af9c-452e-93aa-45d95f4daeee","n=int(input())
a=[]
for i in range (n):
    a+=[int(input())]
    sm=0
for i in range (n-1):
    k=a[0]
    for j in range(1,len(a)):
        if a[j]>k:
            k=a[j]
            idx=j
    a[idx]=(a[idx]+a.pop(idx))/2
print(a[0])","1.0"
"640ca41d-af9c-452e-93aa-45d95f4daeee","
def max_average(n, ratings):
    max_avg = float('-inf')
    for i in range(n - 1):
        for j in range(i + 1, n):
            avg = (ratings[i] + ratings[j]) / 2
            ratings[i] = avg
            max_avg = max(max_avg, avg)
    return max_avg

n = int(input())
ratings = list(map(int, input().split()))
print(max_average(n, ratings))
","1.0"
"640ca41d-af9c-452e-93aa-45d95f4daeee","def main():
    n = int(input())
    grades = []
    for _ in range(n):
        grades.append(int(input()))

    grades.sort(reverse=True)
    avg = grades[0]

    for i in range(1, n):
        avg = (avg + grades[i]) / 2

    print('%.6f' % avg)

if __name__ == '__main__':
    main()","1.0"
"3316f095-b094-488f-acf6-0f4b7cb39d3b","
def get_black_area(n, radii):
  black_area = 0
  radii.sort()
  for i in range(n):
    if i == 0:
      black_area += 3.1415926536 * radii[i] * radii[i]
    else:
      black_area += 3.1415926536 * (radii[i] * radii[i] - radii[i - 1] * radii[i - 1])
  return black_area

n = int(input())
radii = list(map(int, input().split()))
print(get_black_area(n, radii))
","1.0"
"3316f095-b094-488f-acf6-0f4b7cb39d3b","
import math

def area_between_circles(r1, r2):
    return math.pi * (r2 ** 2 - r1 ** 2)

def area_inside_circle(r):
    return math.pi * r ** 2

n = int(input())
radii = list(map(int, input().split()))

total_black_area = 0
for i in range(1, n):
    total_black_area += area_between_circles(radii[i-1], radii[i])
total_black_area += area_inside_circle(radii[0])

print(round(total_black_area, 6))
","1.0"
"3316f095-b094-488f-acf6-0f4b7cb39d3b","Here's the Python code to solve the problem without any external imports:

def calculate_black_area(n, radii):
    radii.sort(reverse=True)
    black_area = 0
    prev_radius = 0

    for radius in radii:
        if prev_radius == 0:
            black_area += 3.1415926536 * radius ** 2
        else:
            black_area += 3.1415926536 * (prev_radius ** 2 - radius ** 2)
        prev_radius = radius

    return black_area

n = int(input())
radii = list(map(int, input().split()))

result = calculate_black_area(n, radii)
print(result)","1.0"
"b117fd99-a7cc-4e2d-b791-3827947a68ea","
numbers = list(map(int, input().split()))
left_sum = 0
right_sum = 0
for i in range(len(numbers) // 2):
  left_sum += numbers[i]
  right_sum += numbers[len(numbers) - i - 1]
if left_sum >= right_sum:
  print(""victory"")
  if left_sum > right_sum:
    print(""left"")
  else:
    print(""left or right"")
else:
  print(""loss"")
","1.0"
"b117fd99-a7cc-4e2d-b791-3827947a68ea","
def optimal_game(numbers):
    n = len(numbers)
    you = [0] * n
    me = [0] * n
    you[0] = numbers[0]
    me[n - 1] = numbers[n - 1]
    for i in range(1, n):
        you[i] = max(you[i - 1], numbers[i])
        me[n - 1 - i] = max(me[n - i], numbers[n - 1 - i])

    if sum(you) >= sum(me):
        return ""victory\n"", ""right\n"" if you[-1] >= me[-1] else ""left or right\n""
    else:
        return ""loss\n"", ""left\n""

numbers = list(map(int, input().split()))
print(optimal_game(numbers)[0])
print(optimal_game(numbers)[1])
","1.0"
"b117fd99-a7cc-4e2d-b791-3827947a68ea","def main():
    numbers = list(map(int, input().split()))

    def play_game(left, right, player):
        if left > right:
            return 0

        if player == 1:
            return max(numbers[left] + play_game(left + 1, right, 2), numbers[right] + play_game(left, right - 1, 2))
        else:
            return min(play_game(left + 1, right, 1) - numbers[left], play_game(left, right - 1, 1) - numbers[right])

    result = play_game(0, len(numbers) - 1, 1)

    if result >= 0:
        print(""victory"")
        if numbers[0] >= numbers[-1]:
            print(""left"")
        else:
            print(""right"")
    else:
        print(""loss"")

if __name__ == ""__main__"":
    main()","1.0"
"f1251ef6-f02e-4035-8703-80c1224be624","
n, k = map(int, input().split())
A = list(map(int, input().split()))
B = list(map(int, input().split()))
for b in B:
    l, r = 0, n - 1
    while l <= r:
        m = (l + r) // 2
        if A[m] == b:
            print('YES')
            break
        elif A[m] > b:
            r = m - 1
        else:
            l = m + 1
    else:
        print('NO')
","1.0"
"f1251ef6-f02e-4035-8703-80c1224be624","
def search_universe(n, a, k, b):
    a.sort()
    for i in b:
        print(""YES"" if i in a else ""NO"")

n, k = map(int, input().split())
a = list(map(int, input().split()))
b = list(map(int, input().split()))
search_universe(n, a, k, b)
","1.0"
"f1251ef6-f02e-4035-8703-80c1224be624","def main():
    n, k = map(int, input().split())
    objects = list(map(int, input().split()))
    requests = list(map(int, input().split()))

    for request in requests:
        if request in objects:
            print(""YES"", end="" "")
        else:
            print(""NO"", end="" "")
    print()

if __name__ == ""__main__"":
    main()","1.0"
"c0632a37-be24-4c63-96eb-d2a1da7f48e6","
n, m = map(int, input().split())
seats = list(map(int, input().split()))

seats.sort()
min_cost = 0
max_cost = 0

for i in range(n):
  min_cost += seats[i]
  max_cost += seats[-(i + 1)]

print(max_cost, min_cost)
","1.0"
"c0632a37-be24-4c63-96eb-d2a1da7f48e6","
def promote(n, planes):
    planes.sort(reverse=True)
    max_earnings = sum(planes)
    min_earnings = sum(planes)

    for i in range(n):
        min_earnings -= planes[i]
        if min_earnings < 0:
            min_earnings += planes[i % len(planes)]

        max_earnings -= planes[len(planes) - 1 - i]
        if max_earnings > 0:
            max_earnings += planes[len(planes) - 1 - (i + 1) % len(planes)]

    return min_earnings, max_earnings

n, m = map(int, input().split())
planes = list(map(int, input().split()))
print(*promote(n, planes))
","1.0"
"c0632a37-be24-4c63-96eb-d2a1da7f48e6","def main():
    n, m = map(int, input().split())
    seats = list(map(int, input().split()))

    max_earnings = 0
    min_earnings = 0
    seats.sort(reverse=True)

    for i in range(n):
        max_earnings += seats[i % m]
        min_earnings += seats[(i + m - 1) % m]

    print(max_earnings, min_earnings)

if __name__ == ""__main__"":
    main()","1.0"
"a6dac91d-dc25-4a4c-8045-f2477dff47f7","s = int(input())
a = s // 3
b = a * 2
c = a
print(a, b, c)","1.0"
"a6dac91d-dc25-4a4c-8045-f2477dff47f7","
p, k = 0, 2 * S // 3
k -= p
s = S - p - k
print(p, k, s)
","1.0"
"a6dac91d-dc25-4a4c-8045-f2477dff47f7","def main():
    S = int(input())
    x = S // 3
    y = 2 * x
    print(x, y, x)

if __name__ == ""__main__"":
    main()","1.0"
"e8cf929e-fd4d-415a-b28b-df10c5475b9f","
salaries = [int(x) for x in input().split()]
print(max(salaries) - min(salaries))
","1.0"
"e8cf929e-fd4d-415a-b28b-df10c5475b9f","
salaries = list(map(int, input().split()))
salaries.sort()
max_salary = salaries[-1]
min_salary = salaries[0]
difference = max_salary - min_salary
print(difference)
","1.0"
"e8cf929e-fd4d-415a-b28b-df10c5475b9f","salaries = list(map(int, input().split()))

max_salary = max(salaries)
min_salary = min(salaries)

difference = max_salary - min_salary

print(difference)","1.0"
"66fe36a2-dbeb-4e74-b4cb-c2279ce0b3a1","
n = int(input())
oldest_male_index = -1
oldest_male_age = 0
for i in range(n):
  age, gender = map(int, input().split())
  if gender == 1 and (oldest_male_age < age or (oldest_male_age == age and i < oldest_male_index)):
    oldest_male_age = age
    oldest_male_index = i
print(oldest_male_index + 1)
","1.0"
"66fe36a2-dbeb-4e74-b4cb-c2279ce0b3a1","
def find_oldest_male(n, residents):
    oldest_male = -1
    oldest_age = -1

    for i in range(n):
        if residents[i][1] == 1 and residents[i][0] > oldest_age:
            oldest_age = residents[i][0]
            oldest_male = i + 1

    return oldest_male if oldest_male != -1 else -1

n = int(input())
residents = []
for _ in range(n):
    age, gender = map(int, input().split())
    residents.append([age, gender])

print(find_oldest_male(n, residents))
","1.0"
"66fe36a2-dbeb-4e74-b4cb-c2279ce0b3a1","def main():
    n = int(input())
    oldest_male_age = -1
    oldest_male_num = -1
    for i in range(1, n + 1):
        age, gender = map(int, input().split())
        if gender == 1 and age > oldest_male_age:
            oldest_male_age = age
            oldest_male_num = i
    print(oldest_male_num)

if __name__ == ""__main__"":
    main()","1.0"
"efada5f3-2c43-44fd-8907-f15b1cffa135","
n = int(input())
a = n // 1000
b = (n % 1000) // 100
c = (n % 100) // 10
d = n % 10
if a == d and b == c:
  print(""YES"")
else:
  print(""NO"")
","1.0"
"efada5f3-2c43-44fd-8907-f15b1cffa135","
n = int(input())
if str(n) == str(n)[::-1]:
    print(""YES"")
else:
    print(""NO"")
","1.0"
"efada5f3-2c43-44fd-8907-f15b1cffa135","def is_palindrome(n):
    return str(n) == str(n)[::-1]

n = int(input())

if is_palindrome(n):
    print(""YES"")
else:
    print(""NO"")","1.0"
"95d48130-7035-43d4-ae28-e60b98e3b8c3","n = int(input())
x = []
while n > 0:
    a, b = map(int, input().split())
    x.extend([a] * (b - a + 1))
    n -= 1
if len(set(x)) == len(x):
    print(""YES"")
else:
    print(""NO"")","1.0"
"95d48130-7035-43d4-ae28-e60b98e3b8c3","
n = int(input())
days = [list(map(int, input().split())) for _ in range(n)]

# Initialize a boolean array to represent whether a day is available or not
available = [False] * 31

# Iterate through the schedule and mark the available days
for day, [start, end] in enumerate(days):
    for i in range(start - 1, end):
        available[i] = True

# Check if all days are available
if all(available):
    print(""YES"")
else:
    print(""NO"")
","1.0"
"95d48130-7035-43d4-ae28-e60b98e3b8c3","def main():
    n = int(input())
    segments = []
    for _ in range(n):
        a, b = map(int, input().split())
        segments.append((a, b))

    days = [False] * 32
    for segment in segments:
        for day in range(segment[0], segment[1] + 1):
            days[day] = True

    if all(days[1:]):
        print(""YES"")
    else:
        print(""NO"")


if __name__ == ""__main__"":
    main()","1.0"
"d7e24cdf-a14d-405b-b6a2-94acc8731072","l, w, h = map(int, input().split())
print((l * h + w * h) * 2 // 16)","1.0"
"d7e24cdf-a14d-405b-b6a2-94acc8731072","
def main():
    l, w, h = map(int, input().split())
    area = l * w * h
    cans = area // 16
    print(cans)

if __name__ == ""__main__"":
    main()
","1.0"
"d7e24cdf-a14d-405b-b6a2-94acc8731072","def main():
    L, W, H = map(int, input().split())
    S = 2 * (L * W + W * H + H * L)
    cans = (S + 15) // 16
    print(cans)

if __name__ == ""__main__"":
    main()","1.0"
"85b0ee0e-7ee4-4014-9cac-8d39ec3963e2","g, s, h, r, m = map(int, input().split())
ans = (g + s + h + r + m - 1) // m
print(ans)","1.0"
"85b0ee0e-7ee4-4014-9cac-8d39ec3963e2","
def gcd(a, b):
    while b:
        a, b = b, a % b
    return a

g, s, h, r, m = map(int, input().split())
g_class, s_class, h_class, r_class = m, m, m, m

while g_class > 1 and s_class > 1 and h_class > 1 and r_class > 1:
    gcd_val = gcd(g_class, min(s_class, h_class, r_class))
    g_class -= gcd_val
    s_class -= gcd_val
    h_class -= gcd_val
    r_class -= gcd_val

min_students = max(g_class, s_class, h_class, r_class)
print(min_students)
","1.0"
"85b0ee0e-7ee4-4014-9cac-8d39ec3963e2","def main():
    G, S, H, R = map(int, input().split())
    M = int(input())

    total_students = G + S + H + R
    max_students_per_class = total_students // M
    extra_students = total_students % M

    min_students_from_one_faculty = max_students_per_class

    if G > max_students_per_class:
        min_students_from_one_faculty = G
    if S > max_students_per_class:
        min_students_from_one_faculty = min(min_students_from_one_faculty, S)
    if H > max_students_per_class:
        min_students_from_one_faculty = min(min_students_from_one_faculty, H)
    if R > max_students_per_class:
        min_students_from_one_faculty = min(min_students_from_one_faculty, R)

    if extra_students > 0:
        min_students_from_one_faculty = max_students_per_class + 1

    print(min_students_from_one_faculty)

if __name__ == ""__main__"":
    main()","1.0"
"0423722e-d503-42c8-a744-3bdd6cf13d0a","
def sum_of_n_digit_numbers(n):
    s = ""10""
    for i in range(n-1):
        s += ""0""
    num = int(s) - 1
    sum = (num * (num + 1)) / 2
    return sum

n = int(input())
print(sum_of_n_digit_numbers(n))
","1.0"
"0423722e-d503-42c8-a744-3bdd6cf13d0a","
def fact(n):
    if n == 0:
        return 1
    return n * fact(n-1)

def digit_sum(n):
    total = 0
    for i in range(1, n+1):
        for j in range(10**(i-1), 10**i):
            total += j
    return total

n = int(input())
total = 0
for i in range(1, n+1):
    total += fact(n-1) * digit_sum(i)
print(total)
","1.0"
"0423722e-d503-42c8-a744-3bdd6cf13d0a","def sum_of_n_digit_numbers(n):
    total = 0
    for i in range(10**(n-1), 10**n):
        total += i
    return total

n = int(input())
print(sum_of_n_digit_numbers(n))","1.0"
"b4962d04-c827-4a5e-8a7f-c749d635df29","
n = int(input())
boxes = n // (12 * 12)
n %= (12 * 12)
bundles = n // 12
n %= 12
print(boxes, bundles, n)
","1.0"
"b4962d04-c827-4a5e-8a7f-c749d635df29","
def wholesale_purchase(n):
    pairs, bundles, boxes = 0, 0, 0
    while n > 0:
        if n >= 12:
            n -= 12
            boxes += 1
        elif n >= 1:
            n -= 1
            bundles += 1
        else:
            break
    pairs = n
    return boxes, bundles, pairs

n = int(input())
print(*wholesale_purchase(n))
","1.0"
"b4962d04-c827-4a5e-8a7f-c749d635df29","def calculate_purchase(n):
    box_price = 1140
    bundle_price = 102.5
    pair_price = 10.5

    box_count = n // 12 // 12
    n %= 12 * 12
    bundle_count = n // 12
    n %= 12
    pair_count = n

    return box_count, bundle_count, pair_count

n = int(input())
result = calculate_purchase(n)
print(result[0], result[1], result[2])","1.0"
"8bd559bb-2d0f-401e-96cd-b7aad95a8365","s=input();x=[chr(ord('A')+i)for i in range(int(s))];y=[]
for i in range(int(s)):
 if i%2==0:y.append(x.pop(0))
 else:y.append(x.pop())
print(''.join(y))","1.0"
"8bd559bb-2d0f-401e-96cd-b7aad95a8365","
def reverse_stack(n):
    stack = list(chr(i+64) for i in range(n))
    reversed_stack = []
    for i in range(n):
        reversed_stack.append(stack.pop())
    return ''.join(reversed_stack)

n = int(input())
print(reverse_stack(n))
","1.0"
"8bd559bb-2d0f-401e-96cd-b7aad95a8365","def main():
    n = int(input())
    cards = [chr(i) for i in range(65, 65 + n)]
    result = []
    top = True
    while cards:
        if top:
            result.append(cards.pop(0))
        else:
            result.append(cards.pop())
        top = not top
    print(''.join(result))

if __name__ == '__main__':
    main()","1.0"
"b93c1e57-b459-4cb9-b55c-c7e9572a4185","w, h = map(int, input().split())
n = int(input())
a = [[0]*w for _ in range(h)]
for i in range(n):
    x1, y1, x2, y2 = map(int, input().split())
    for j in range(x1, x2):
        for k in range(y1, y2):
            a[k][j] = 1
ans = 0
for j in range(h):
    for k in range(w):
        if a[j][k] == 0:
            ans += 1
print(ans)","1.0"
"b93c1e57-b459-4cb9-b55c-c7e9572a4185","
def gcd(a, b):
    while b:
        a, b = b, a % b
    return a

w, h = map(int, input().split())
n = int(input())

rects = []
for _ in range(n):
    x1, y1, x2, y2 = map(int, input().split())
    rects.append((x1, y1, x2, y2))

rects.sort(key=lambda x: x[0])
rects.sort(key=lambda x: x[1])

area = h * w
for i in range(n):
    x1, y1, x2, y2 = rects[i]
    if i == 0:
        area -= (x1 * y1)
    if i == n - 1:
        area -= (w - x2) * (h - y2)
    if i > 0 and i < n - 1:
        area -= min((x1 - rects[i - 1][2]), (w - x2)) * min((y1 - rects[i - 1][3]), (h - y2))

g = gcd(area, w)
print((area // g) * g)
","1.0"
"b93c1e57-b459-4cb9-b55c-c7e9572a4185","def main():
    w, h = map(int, input().split())
    n = int(input())
    rectangles = []
    for _ in range(n):
        x1, y1, x2, y2 = map(int, input().split())
        rectangles.append((x1, y1, x2, y2))

    canvas = [[0] * w for _ in range(h)]
    for x1, y1, x2, y2 in rectangles:
        for i in range(y1, y2):
            for j in range(x1, x2):
                canvas[i][j] = 1

    unpainted_area = 0
    for row in canvas:
        unpainted_area += sum(row)

    print(w * h - unpainted_area)


if __name__ == ""__main__"":
    main()","1.0"
"f2fd7d1f-60d9-4447-8775-ae1cb1500275","

n = int(input())
k = int(input())
l = [list(map(int, input().split())) for _ in range(k)]
l = [sorted(j) for j in l]
l.sort(key=lambda x: x[0])
l.sort(key=lambda x: x[1], reverse=True)
s = ''
for i in range(n):
  r = False
  for j in l:
    if j[0] <= i <= j[1]: r = True
  if not r: s += 'I'
  else: s += '.'
print(s)

","1.0"
"f2fd7d1f-60d9-4447-8775-ae1cb1500275","
def bowling(n, k, throws):
    pins = list(range(1, n+1))
    for l, r in throws:
        pins[l-1:r] = [0] * (r - l + 1)
    return ''.join(str(i) if i else '.' for i in pins)

n, k = map(int, input().split())
throws = []
for _ in range(k):
    l, r = map(int, input().split())
    throws.append((l, r))
print(bowling(n, k, throws))
","1.0"
"f2fd7d1f-60d9-4447-8775-ae1cb1500275","Here's the Python code to solve the Bowling Alley problem without any external imports:

N = int(input())
K = int(input())
pins = ['I'] * N
for i in range(K):
    l, r = map(int, input().split())
    for j in range(l - 1, r):
        pins[j] = '.'
print(''.join(pins))","1.0"
"33211b17-8264-45f5-b080-9ef68ce82655","cx = lambda y1, y2, y3: y1 == y2 or y2 == y3 or y1 == y3
t = [list(map(int,input().split())) for i in range(int(input()))]
for i in t:
    if cx(i[1],i[3],i[5]) and cx(i[0],i[2],i[4]):
        print('YES')
    else:
        print('NO')","1.0"
"33211b17-8264-45f5-b080-9ef68ce82655","
for _ in range(int(input())):
    x1, y1, x2, y2, x3, y3, x4, y4 = map(int, input().split())
    a = ((x2 - x1), (y2 - y1))
    b = ((x3 - x4), (y3 - y4))
    c = ((x4 - x1), (y4 - y1))
    d = ((x3 - x2), (y3 - y2))
    if abs(a[0] - b[0]) < 1e-9 and abs(a[1] - b[1]) < 1e-9 and abs(c[0] - d[0]) < 1e-9 and abs(c[1] - d[1]) < 1e-9:
        print(""YES"")
    else:
        print(""NO"")
","1.0"
"33211b17-8264-45f5-b080-9ef68ce82655","def is_parallelogram(x1, y1, x2, y2, x3, y3, x4, y4):
    vec1_x = x2 - x1
    vec1_y = y2 - y1
    vec2_x = x3 - x1
    vec2_y = y3 - y1
    vec3_x = x4 - x1
    vec3_y = y4 - y1

    if vec1_x * vec2_y == vec1_y * vec2_x and vec1_x * vec3_y == vec1_y * vec3_x:
        return True
    else:
        return False

n = int(input())
for i in range(n):
    x1, y1, x2, y2, x3, y3, x4, y4 = map(int, input().split())
    if is_parallelogram(x1, y1, x2, y2, x3, y3, x4, y4):
        print(""YES"")
    else:
        print(""NO"")","1.0"
"06d7584b-69d4-4bbe-b919-2cee80f53cae","
n = int(input())
goals = 0
while n - goals >= 0:
    n -= goals
    goals += 1
print(goals - 1)
","1.0"
"06d7584b-69d4-4bbe-b919-2cee80f53cae","
def football(n):
    goal_count = 0
    while n > 0:
        if n % 10 != 0:
            goal_count += 1
        n //= 10
    return goal_count

n = int(input())
print(football(n))
","1.0"
"06d7584b-69d4-4bbe-b919-2cee80f53cae","def count_goals(score_sum):
    goals = 0
    while score_sum > 0:
        if score_sum >= 10:
            goals += 10
            score_sum -= 10
        elif score_sum >= 9:
            goals += 9
            score_sum -= 9
        elif score_sum >= 8:
            goals += 8
            score_sum -= 8
        elif score_sum >= 7:
            goals += 7
            score_sum -= 7
        elif score_sum >= 6:
            goals += 6
            score_sum -= 6
        elif score_sum >= 5:
            goals += 5
            score_sum -= 5
        elif score_sum >= 4:
            goals += 4
            score_sum -= 4
        elif score_sum >= 3:
            goals += 3
            score_sum -= 3
        elif score_sum >= 2:
            goals += 2
            score_sum -= 2
        else:
            goals += 1
            score_sum -= 1
    return goals

score_sum = int(input())
print(count_goals(score_sum))","1.0"
"8cb56479-bd55-4e5f-9901-b60fcd56d77f","def find_ball(sequence):
    cup = 1
    for c in sequence:
        if c == 'A' and cup == 1:
            cup = 2
        elif c == 'A' and cup == 2:
            cup = 1
        elif c == 'B' and cup == 2:
            cup = 3
        elif c == 'B' and cup == 3:
            cup = 2
        elif c == 'C' and cup == 3:
            cup = 4
        elif c == 'C' and cup == 4:
            cup = 3
        elif c == 'D' and cup == 4:
            cup = 5
        elif c == 'D' and cup == 5:
            cup = 4
    return cup

sequence = input()
print(find_ball(sequence))","1.0"
"8cb56479-bd55-4e5f-9901-b60fcd56d77f","
def find_ball(sequence):
    cups = list(range(1, 6))
    for move in sequence:
        index = ord(move) - ord('A') * 2
        cups[index], cups[index + 1] = cups[index + 1], cups[index]
    return cups[0]

sequence = input()
print(find_ball(sequence))
","1.0"
"8cb56479-bd55-4e5f-9901-b60fcd56d77f","def find_ball_position(sequence):
    position = 1
    for move in sequence:
        if move == 'A' and position != 2:
            position = 2 if position == 1 else 1
        elif move == 'B' and position != 3:
            position = 3 if position == 2 else 2
        elif move == 'C' and position != 4:
            position = 4 if position == 3 else 3
        elif move == 'D' and position != 5:
            position = 5 if position == 4 else 4
    return position

sequence = input()
print(find_ball_position(sequence))","1.0"
"e77e3519-0023-4628-97b4-562a17add717","
equation = input()
if equation[1] == '+':
  if equation[0] == 'x':
    x = int(equation[4]) - int(equation[2])
  else:
    x = int(equation[4]) - int(equation[0])
else:
  if equation[0] == 'x':
    x = int(equation[0]) - int(equation[4])
  else:
    x = int(equation[2]) - int(equation[4])
print(x)
","1.0"
"e77e3519-0023-4628-97b4-562a17add717","
def solve_equation(equation):
    equation = list(equation)
    if equation[1] not in ['+', '-'] or equation[4] != '=':
        return None

    num1_idx = equation.index(equation[1] if equation[1] in ['+', '-'] else 'x')
    num2_idx = equation.index('x') if equation[1] == '+' else equation.index('x') - 1
    num3_idx = equation.index('=') + 1

    num1 = int(equation[num1_idx]) if equation[num1_idx].isdigit() else ord(equation[num1_idx]) - 48
    num2 = int(equation[num2_idx]) if equation[num2_idx].isdigit() else ord(equation[num2_idx]) - 48
    num3 = int(equation[num3_idx])

    if equation[1] == '+':
        return num3 - num2 - num1
    else:
        return -(num3 - num2 - num1)

equation = input()
print(solve_equation(equation))
","1.0"
"e77e3519-0023-4628-97b4-562a17add717","def solve_equation(equation):
    a, op, b, eq, c = equation
    if a == 'x':
        if op == '+':
            return int(c) - int(b)
        else:
            return int(b) - int(c)
    elif b == 'x':
        if op == '+':
            return int(c) - int(a)
        else:
            return int(a) - int(c)
    else:
        if op == '+':
            return int(a) + int(b) - int(c)
        else:
            return int(c) - int(a) - int(b)

equation = input()
result = solve_equation(equation)
print(result)","1.0"
"34353951-c305-4bd0-ac17-9df1578bc183","
n = int(input())
for _ in range(n):
  correct, *answers = map(int, input().split())
  scores = [0] * 6
  counts = [0] * 7
  for answer in answers:
    counts[answer] += 1
  for i, answer in enumerate(answers):
    if answer == correct:
      if counts[answer] == 1:
        scores[i] += 6
      elif counts[answer] == 2:
        scores[i] += 3
      elif counts[answer] == 3:
        scores[i] += 2
      else:
        scores[i] += 1
  print(*scores)
","1.0"
"34353951-c305-4bd0-ac17-9df1578bc183","
def main():
    n = int(input())
    scores = [list(map(int, input().split())) for _ in range(n)]
    results = []
    for round_score in scores:
        correct_count = round_score[0]
        points = [0] * 6
        for i in range(1, len(round_score)):
            if round_score[i] == correct_count:
                points[correct_count] += 1
                correct_count -= 1
        results.append(points)
    for result in results:
        print(*result)

if __name__ == ""__main__"":
    main()
","1.0"
"34353951-c305-4bd0-ac17-9df1578bc183","def main():
    rounds = int(input())
    for _ in range(rounds):
        answers = list(map(int, input().split()))
        correct = answers[0]
        guesses = answers[1:]
        points = [0] * 6
        correct_count = guesses.count(correct)
        if correct_count == 1:
            points[guesses.index(correct)] = 6
        elif correct_count == 2:
            for i, guess in enumerate(guesses):
                if guess == correct:
                    points[i] = 3
        elif correct_count == 3:
            for i, guess in enumerate(guesses):
                if guess == correct:
                    points[i] = 2
        elif correct_count > 3:
            for i, guess in enumerate(guesses):
                if guess == correct:
                    points[i] = 1
        print(*points)

if __name__ == ""__main__"":
    main()","1.0"
"19b7ecee-e69a-4f88-bc8f-07a8231ffc88","p=input().lower()
x=int(input())
if p=='school' and x%2!=0:
    print(""Yes"")
else:
    print(""No"")","1.0"
"19b7ecee-e69a-4f88-bc8f-07a8231ffc88","
def main():
    location = input().strip()
    x = int(input().strip())

    card = x
    for _ in range(x - 1):
        if location == 'Home':
            card += 1
        location = 'School'

    if card == 0:
        print('Yes')
    else:
        print('No')

main()
","1.0"
"19b7ecee-e69a-4f88-bc8f-07a8231ffc88","def main():
    start_place = input().strip()
    x = int(input().strip())

    if start_place == ""Home"":
        trips_left = x
    else:
        trips_left = x - 1

    day = 0
    while trips_left > 0:
        day += 1
        if day % 2 == 1:
            trips_left -= 1
        else:
            trips_left -= 1
            if trips_left == 0:
                break

    if trips_left == 0:
        print(""Yes"")
    else:
        print(""No"")

if __name__ == ""__main__"":
    main()","1.0"
"cfc0314d-ea18-49f5-8b83-e12b2cfae492","
x, y, a, b = map(int, input().split())
t = min(a // (x // y), b // (y // x))
if (b // (y // x) - t) == (a // (x // y) - t):
    print(0)
elif b // (y // x) - t > 0:
    print(1)
else:
    print(2)
","1.0"
"cfc0314d-ea18-49f5-8b83-e12b2cfae492","
def main():
    x, y, a, b = map(int, input().split())
    pirate_shots = 0
    merchant_shots = 0
    while pirate_shots < b and merchant_shots < a:
        pirate_shots += 1 if pirate_shots % x == 0 else 0
        merchant_shots += 1 if merchant_shots % y == 0 else 0
    if pirate_shots >= b:
        print(1)
    elif merchant_shots >= a:
        print(2)
    else:
        print(0)

if __name__ == ""__main__"":
    main()
","1.0"
"cfc0314d-ea18-49f5-8b83-e12b2cfae492","def main():
    X, Y, A, B = map(int, input().split())
    pirate_shots, merchant_shots = 0, 0
    time = 0

    while pirate_shots < A and merchant_shots < B:
        time += 1
        if time % X == 0:
            merchant_shots += 1
        if time % Y == 0:
            pirate_shots += 1

    if pirate_shots == A and merchant_shots == B:
        print(0)
    elif pirate_shots == A:
        print(1)
    else:
        print(2)

if __name__ == ""__main__"":
    main()","1.0"
"5d8eca27-fdd6-446c-82f2-5e3207d3b0e8","n=int(input())
print((n+1)//2)","1.0"
"5d8eca27-fdd6-446c-82f2-5e3207d3b0e8","
def main():
    n = int(input())
    assert 2 <= n <= 10**9 and n % 2 == 0, ""Invalid input""
    people = n // 2
    half_people = people // 2
    if half_people * 2 + 1 == people:
        print(people)
    else:
        print(people - 1)

main()
","1.0"
"5d8eca27-fdd6-446c-82f2-5e3207d3b0e8","def main():
    n = int(input())
    print(n // 2)

if __name__ == ""__main__"":
    main()","1.0"
"93bcd112-f941-49df-8fc8-d8323cea9612","
import sys

T, K = map(int, input().split())
hh = T + K
if 9 <= hh < 13:
    hh += 1
elif 14 <= hh < 18:
    hh += 2
elif hh >= 18:
    sys.exit(print(""Again""))
print(hh)
","1.0"
"93bcd112-f941-49df-8fc8-d8323cea9612","
def bus_arrival(t, k):
    if t == 17:
        return 18 + k
    elif t == 16:
        return 19 + k - 1
    elif t == 15:
        return 20 + k - 2
    elif t == 14:
        return 17 + k - 3
    elif t == 13:
        return 14 + k - 4
    elif t == 12:
        return 15 + k - 5
    elif t == 11:
        return 16 + k - 6
    elif t == 10:
        return 13 + k - 7
    elif t == 9:
        return 12 + k - 8
    elif t == 8:
        return 11 + k - 9
    else:
        return t + k

t, k = map(int, input().split())
print(bus_arrival(t, k))
","1.0"
"93bcd112-f941-49df-8fc8-d8323cea9612","def main():
    T, K = map(int, input().split())
    arrival_time = T + K
    if arrival_time >= 20:
        arrival_time += 3
    elif 17 <= arrival_time < 20:
        arrival_time += 2
    elif arrival_time >= 14:
        arrival_time += 1
    print(arrival_time)

if __name__ == '__main__':
    main()","1.0"
"24dcfdab-f852-4c60-b195-edf3b81c45e0","
n, k = map(int, input().split())
m = k % n
ans = (k + m * (n - 1)) / n
print(ans)
","1.0"
"24dcfdab-f852-4c60-b195-edf3b81c45e0","
def monkey_crackers(n, k):
    k -= n - 1
    for i in range(2, n + 1):
        k -= k // i
    return k

n, k = map(int, input().split())
print(monkey_crackers(n, k))
","1.0"
"24dcfdab-f852-4c60-b195-edf3b81c45e0","def main():
    n, k = map(int, input().split())
    monkey_crackers = 0

    for i in range(n):
        monkey_crackers += k % n
        k //= n

    monkey_crackers += k % n

    print(monkey_crackers)

if __name__ == ""__main__"":
    main()","1.0"
"663bdee2-c316-4349-847d-5df934d638c4","l1, w1, h1 = map(int, input().split())
l2, w2, h2 = map(int, input().split())
v1 = l1 * w1 * h1
v2 = l2 * w2 * h2
if v1 > v2:
    print(""FIRST"")
elif v2 > v1:
    print(""SECOND"")
else:
    print(""EQUAL"")","1.0"
"663bdee2-c316-4349-847d-5df934d638c4","
l1, w1, h1 = map(int, input().split())
l2, w2, h2 = map(int, input().split())

vol1 = l1 * w1 * h1
vol2 = l2 * w2 * h2

if vol1 > vol2:
    print(""FIRST"")
elif vol2 > vol1:
    print(""SECOND"")
else:
    print(""EQUAL"")
","1.0"
"663bdee2-c316-4349-847d-5df934d638c4","length1, width1, height1 = map(int, input().split())
length2, width2, height2 = map(int, input().split())

volume1 = length1 * width1 * height1
volume2 = length2 * width2 * height2

if volume1 > volume2:
    print(""FIRST"")
elif volume2 > volume1:
    print(""SECOND"")
else:
    print(""EQUAL"")","1.0"
"40d4963a-6b16-46b1-850f-ec5a885e4f78","L = []
for i in range(int(input())):
    for j in input():
        if not j in L:
            L.append(j)
L.sort()
for i in L:
    print(i,L.count(i))","1.0"
"40d4963a-6b16-46b1-850f-ec5a885e4f78","
def min_letters(names):
    letters = {}
    for name in names:
        for letter in name:
            if letter not in letters:
                letters[letter] = 0
            letters[letter] += 1
            letters[min(letters, key=letters.get)] -= 1
    for letter, count in sorted(letters.items()):
        print(f""{letter} {count}"")

n = int(input())
names = []
for _ in range(n):
    names.append(input())
min_letters(names)
","1.0"
"40d4963a-6b16-46b1-850f-ec5a885e4f78","names_count = int(input())
names = [input() for _ in range(names_count)]
letters = {}
for name in names:
    for letter in name:
        if letter in letters:
            letters[letter] += 1
        else:
            letters[letter] = 1
sorted_letters = sorted(letters.items())
for letter, count in sorted_letters:
    print(letter, count)","1.0"
"825a391d-5fcd-40a6-8a12-bdcc3dc9622c","
x, k = map(int, input().split())
count = 0
while x < 1000000000:
  x *= k
  count += 1
print(count)
","1.0"
"825a391d-5fcd-40a6-8a12-bdcc3dc9622c","
def rexpaxfax(x, k):
    tree = 0
    count = 0
    while x <= 1e9:
        tree += x
        x *= k
        count += 1
        if tree >= 1e9:
            return count
    return -1

x, k = map(int, input().split())
print(rexpaxfax(x, k))
","1.0"
"825a391d-5fcd-40a6-8a12-bdcc3dc9622c","def main():
    x, k = map(int, input().split())
    count = 0
    while x < 1000000000:
        x *= k
        count += 1
    print(count - 1)

if __name__ == ""__main__"":
    main()","1.0"
"6f1e85b2-e2f0-4610-b359-275ba6b71bc4","
s = input()
seen = set()
for c in s:
  if c not in seen:
    seen.add(c)
print(len(seen))
","1.0"
"6f1e85b2-e2f0-4610-b359-275ba6b71bc4","
def count_frogs(s):
    count = 0
    seen = set()
    for c in s:
        if c not in seen:
            count += 1
            seen.add(c)
    return count

s = input()
print(count_frogs(s))
","1.0"
"6f1e85b2-e2f0-4610-b359-275ba6b71bc4","def main():
    frogs = input()
    unique_frogs = set(frogs)
    print(len(unique_frogs))

if __name__ == ""__main__"":
    main()","1.0"
"765e7876-1539-4ec9-a84e-dcfb4da2e20b","
s, p = map(int, input().split())
for i in range(1, s + 1):
  if s - i > 0 and i * (s - i) == p:
    print(min(i, s - i), max(i, s - i))
    break
","1.0"
"765e7876-1539-4ec9-a84e-dcfb4da2e20b","
def gcd(a, b):
    while b:
        a, b = b, a % b
    return a

def extended_euclidean_algorithm(a, b):
    if b == 0:
        return (1, 0, a)
    else:
        g, y, x = extended_euclidean_algorithm(b, a % b)
        return (g, x - (a // b) * x, y)

def mod_inverse(a, m):
    g, x, _ = extended_euclidean_algorithm(a, m)
    if g != 1:
        raise ValueError(""Modular inverse does not exist"")
    return x % m

S, P = map(int, input().split())
a = (S + 1) // 2
b = int((P + 1) / a)
if a * b != S or b * b != P:
    print(-1)
else:
    x = mod_inverse(b, a)
    print((a - x) // 2, x)
","1.0"
"765e7876-1539-4ec9-a84e-dcfb4da2e20b","def find_numbers(sum, product):
    for x in range(1, sum):
        y = sum - x
        if x * y == product:
            return x, y
    return 1, 1

sum, product = map(int, input().split())
x, y = find_numbers(sum, product)
print(x, y)","1.0"
"8b665b81-e179-4da1-8582-bdd334355d33","p,y=map(int,input().split())
for i in range(y,p-1,-1):
    if y%i==0:
        print(-1)
        break
else:
    print(y)","1.0"
"8b665b81-e179-4da1-8582-bdd334355d33","
def bfs(graph, start, y):
    visited = [False] * (y + 1)
    queue = [start]
    visited[start] = True

    while queue:
        current = queue.pop(0)
        for next in range(current + 1, y + 1):
            if not visited[next] and next in graph[current]:
                queue.append(next)
                visited[next] = True

    return max(range(y + 1)) if max(visited) < y else -1

y, p = map(int, input().split())
graph = {i: set() for i in range(2, y + 1)}
for i in range(2, p):
    for j in range(i + 1, min(p, y) + 1):
        graph[i].add(j)

print(bfs(graph, p, y))
","1.0"
"8b665b81-e179-4da1-8582-bdd334355d33","def main():
    p, y = map(int, input().split())
    res = -1
    for i in range(y, 1, -1):
        if i % p != 0:
            res = i
            break
    print(res)

if __name__ == ""__main__"":
    main()","1.0"
"606ade49-bac9-436a-ab0f-9db356c7a1dd","
n = int(input())
ans=0
for i in range(1, n+1):
    if n%i==0:
        ans+=1
print(ans)
","1.0"
"606ade49-bac9-436a-ab0f-9db356c7a1dd","
def factorial(n):
    if n == 0:
        return 1
    else:
        return n * factorial(n-1)

def comb(n, k):
    return factorial(n) // (factorial(k) * factorial(n-k))

n = int(input())
managers = n // 2
subordinates = 2 * managers
total_combinations = comb(n, managers)

for i in range(1, managers+1):
    sub_managers = i
    sub_subordinates = subordinates // i
    sub_combinations = comb(sub_managers, sub_subordinates)
    total_combinations -= sub_combinations * comb(n-subordinates, managers-i)

print(total_combinations)
","1.0"
"606ade49-bac9-436a-ab0f-9db356c7a1dd","def solution(n):
    result = 0
    for i in range(1, n + 1):
        if n % i == 0:
            result += 1
    return result

n = int(input())
print(solution(n))","1.0"
"1b52e7f3-35b9-4637-9769-0ac2a25d7799","
def main():
    n = int(input())
    matrix = [[int(i) for i in input().split()] for i in range(n)]
    is_symmetric = True
    for i in range(n):
        for j in range(n):
            if matrix[i][j] != matrix[n - i - 1][n - j - 1]:
                is_symmetric = False
    if is_symmetric:
        print(""yes"")
    else:
        print(""no"")

main()
","1.0"
"1b52e7f3-35b9-4637-9769-0ac2a25d7799","
def main():
    n = int(input())
    arr = []
    for _ in range(n):
        arr.append(list(map(int, input().split())))

    main_diagonal = 0
    for i in range(n):
        main_diagonal += arr[i][i]

    secondary_diagonal = 0
    for i in range(n - 1, -1, -1):
        secondary_diagonal += arr[i][n - i - 1]

    if main_diagonal == secondary_diagonal:
        print(""yes"")
    else:
        print(""no"")

main()
","1.0"
"1b52e7f3-35b9-4637-9769-0ac2a25d7799","def is_symmetric(matrix):
    n = len(matrix)
    for i in range(n):
        for j in range(i, n):
            if matrix[i][j] != matrix[j][i]:
                return False
    return True

def main():
    n = int(input())
    matrix = []
    for _ in range(n):
        row = list(map(int, input().split()))
        matrix.append(row)

    if is_symmetric(matrix):
        print(""yes"")
    else:
        print(""no"")

if __name__ == ""__main__"":
    main()","1.0"
"15ca1e03-d60e-41ae-bf1a-b902059fb037","
n = int(input())
a = list(map(int, input().split()))
a.sort()
count = 0
for i in range(n):
  if a[i] == 0:
    continue
  count += 1
print(count)
","1.0"
"15ca1e03-d60e-41ae-bf1a-b902059fb037","
def medals(n, a):
    a.sort(reverse=True)
    dp = [0] * (n+1)
    dp[0] = 1
    for i in range(1, n+1):
        if a[i-1] > 0:
            for j in range(min(i, a[i-1]), 0, -1):
                dp[i] += dp[j-1]
    return dp[-1]

n = int(input())
a = list(map(int, input().split()))
print(medals(n, a))
","1.0"
"15ca1e03-d60e-41ae-bf1a-b902059fb037","def count_medal_ways(n, deeds):
    deeds = sorted(set(deeds))
    ways = 1
    for i in range(len(deeds)):
        if deeds[i] != 0:
            ways += 1
    return ways

n = int(input())
deeds = list(map(int, input().split()))

print(count_medal_ways(n, deeds))","1.0"
"27e3a45a-87d9-4afd-8f88-c8b783da4dcf","
N = int(input())
print(N // 10)
","1.0"
"27e3a45a-87d9-4afd-8f88-c8b783da4dcf","
def yarn_price(n):
    return (n + 99) // 100

n = int(input())
print(yarn_price(n))
","1.0"
"27e3a45a-87d9-4afd-8f88-c8b783da4dcf","def main():
    N = int(input())
    print((N + 9) // 10)

if __name__ == ""__main__"":
    main()","1.0"
"a8e815b1-acf9-4281-ab55-793e1595c689","x=[int(input())for i in range(4)]
a=(x[3]-x[2]-x[1])//2
b=(x[3]-x[2]-a)
c=x[3]-a-b
print(a*b*c)","1.0"
"a8e815b1-acf9-4281-ab55-793e1595c689","
def solve(x1, x2, x3, x4):
    s1 = (x4 - x1 - x2 - x3) // 2
    s2 = (x1 + s1) // 2
    s3 = (x2 + s1) // 2
    a = s2 + s3
    b = s1 - s2 + a
    c = s1 - s3 + a
    return a * b * c

x1, x2, x3, x4 = map(int, input().split())
print(solve(x1, x2, x3, x4))
","1.0"
"a8e815b1-acf9-4281-ab55-793e1595c689","def fun_math_game(x1, x2, x3, x4):
    a = (x1 + x2 + x3) // 2 - x4
    b = x4 - a - x1 + x2 - x3
    c = x4 - a - x1 + x3 - x2
    return a * b * c

x1, x2, x3, x4 = map(int, input().split())
print(fun_math_game(x1, x2, x3, x4))","1.0"
"170140b8-81fd-4d56-9f3e-471b54fd0757","n=int(input())
ans=0
for i in range(n):
    if int(input())!=(i%2+1):
        ans+=1
print(ans)","1.0"
"170140b8-81fd-4d56-9f3e-471b54fd0757","
n = int(input())
numbers = list(map(int, input().split()))
count = sum(1 for i, num in enumerate(numbers) if num != (i+1) % 2 + 1)
print(count)
","1.0"
"170140b8-81fd-4d56-9f3e-471b54fd0757","def main():
    n = int(input())
    count = 0
    for i in range(n):
        num = int(input())
        if num != i % 2 + 1:
            count += 1
    print(count)

if __name__ == ""__main__"":
    main()","1.0"
"64651a5b-ea7b-4ba7-935a-9e1f4d550db9","
p, b, tp, tb = map(int, input().split())
print(p * tp + b * tb)
","1.0"
"64651a5b-ea7b-4ba7-935a-9e1f4d550db9","
def queue(p, b, tp, tb):
    total_time = 0
    for i in range(1, p+1):
        total_time += i * tp
    for j in range(1, b+1):
        total_time += j * tb
    return total_time + (p+b) * max(tp, tb)

p, b, tp, tb = map(int, input().split())
print(queue(p, b, tp, tb))
","1.0"
"64651a5b-ea7b-4ba7-935a-9e1f4d550db9","def main():
    p, b, tp, tb = map(int, input().split())
    time = 0
    for i in range(p):
        time += tp
    for i in range(b):
        time += tb
    print(time)

if __name__ == ""__main__"":
    main()","1.0"
"6f12afe1-01f7-4104-876c-c2eb5123751d","
n = int(input())
result = []
if n % 8 != 1:
  result.append(n - 1)
if n % 8 != 0:
  result.append(n + 1)
if n > 8:
  result.append(n - 8)
if n < 57:
  result.append(n + 8)
print(*sorted(result))
","1.0"
"6f12afe1-01f7-4104-876c-c2eb5123751d","
def boyar(n):
    board = [0] * 65
    for i in range(1, 65):
        board[i] = [(i - j) for j in range(1, min(i, 64) + 1) if (i - j) > 0 and (i % j == 0 or i % (64 - j) == 0)]
    board[n] = [x for x in board[n] if x <= 64]
    board[n].sort()
    print(*board[n])

boyar(int(input()))
","1.0"
"6f12afe1-01f7-4104-876c-c2eb5123751d","def boyar_fun(cell):
    result = []
    if cell > 1:
        result.append(cell - 1)
    if cell < 64:
        result.append(cell + 1)
    if cell > 8:
        result.append(cell - 8)
    if cell <= 56:
        result.append(cell + 8)
    result.sort()
    return ' '.join(map(str, result))

cell = int(input())
print(boyar_fun(cell))","1.0"
"13be4a8c-6e1a-4e47-9bb4-4718777ae867","
X = int(input())
A = int(input())
B = int(input())

total_fisherman_earnings = X * 3
total_storyteller_earnings = A + B * 2

print(max(total_fisherman_earnings, total_storyteller_earnings))
","1.0"
"13be4a8c-6e1a-4e47-9bb4-4718777ae867","
def main():
    x, a, b = map(int, input().split())
    training_cost = a + b
    trough_cost = 0
    if x >= training_cost:
        trough_cost = x - training_cost
    else:
        trough_cost = 0
    print(trough_cost)

main()
","1.0"
"13be4a8c-6e1a-4e47-9bb4-4718777ae867","x = int(input())
a = int(input())
b = int(input())

fish_earnings = x * 3
storyteller_earnings = a + b * 2

max_savings = max(fish_earnings, storyteller_earnings)

print(max_savings)","1.0"
"5e7b7702-01f1-4717-a1b4-0cd9af8cabdd","n=int(input())
x=0
for i in range(n):
    c=input()
    if c[0]==""+"":
        x+=1
    else:
        x-=1
print(x)","1.0"
"5e7b7702-01f1-4717-a1b4-0cd9af8cabdd","
def solve():
    n = int(input())
    x = 0
    for _ in range(n):
        op = input()
        if op[0] == '+':
            x += 1
        else:
            x -= 1
    print(x)

solve()
","1.0"
"5e7b7702-01f1-4717-a1b4-0cd9af8cabdd","def main():
    n = int(input())
    x = 0
    for i in range(n):
        operation = input()
        if operation == ""++X"" or operation == ""X++"":
            x += 1
        elif operation == ""--X"" or operation == ""X--"":
            x -= 1
    print(x)

if __name__ == ""__main__"":
    main()","1.0"
"71fdbf7e-8eb6-42ec-8fd1-6d792ca9202d","
a,b,c,v,n=map(int,input().split())
v0=a*b*c
for i in map(int,input().split()):
    if v0>i: v0-=i
print(v0-v)
","1.0"
"71fdbf7e-8eb6-42ec-8fd1-6d792ca9202d","
def solve():
    a, b, c, v, n = map(int, input().split())
    objects = list(map(int, input().split()))

    pool = [0] * (a * b * c)
    water = v

    for i in range(n):
        obj = objects[i]
        for j in range(obj):
            k = i * obj + j
            if k >= water:
                break
            if k >= a * b * c:
                print(""Impossible"")
                return
            if pool[k] == 0:
                pool[k] = 1
                water -= 1
            else:
                print(""Impossible"")
                return

    for i in range(a * b * c):
        if pool[i] == 0 and i < water:
            print(""Impossible"")
            return

    print(water)

solve()
","1.0"
"71fdbf7e-8eb6-42ec-8fd1-6d792ca9202d","def main():
    A, B, C, V, N = map(int, input().split())
    objects = list(map(int, input().split()))

    pool_volume = A * B * C
    total_object_volume = sum(objects)

    if total_object_volume <= V:
        water_displaced = total_object_volume
    else:
        water_displaced = V + (total_object_volume - V) * (A * B - 1) // (A * B)

    print(water_displaced)


if __name__ == ""__main__"":
    main()","1.0"
"bb52cce8-05b9-4e42-ad95-7b5f4e435d31","
a, b = map(int, input().split())
ans = 0
while a<=b:
    a *= 3
    b *= 2
    ans += 1
print(ans)
","1.0"
"bb52cce8-05b9-4e42-ad95-7b5f4e435d31","
def main():
    a, b = map(int, input().split())
    year = 0
    while a <= b:
        a *= 3
        b *= 2
        year += 1
    print(year)

main()
","1.0"
"bb52cce8-05b9-4e42-ad95-7b5f4e435d31","def main():
    a, b = map(int, input().split())
    years = 0
    while a <= b:
        a *= 3
        b *= 2
        years += 1
    print(years)

if __name__ == ""__main__"":
    main()","1.0"
"7330236e-4855-4be2-bef9-6e6766bbd181","
n = int(input())
votes = list(map(int, input().split()))
counts = [0] * 101
for vote in votes:
  counts[vote] += 1
max_count = max(counts)
winner = 0
for i in range(1, 101):
  if counts[i] == max_count:
    winner = i
    break
print(winner)
","1.0"
"7330236e-4855-4be2-bef9-6e6766bbd181","
n = int(input())
votes = list(map(int, input().split()))

count = {}
for vote in votes:
    if vote in count:
        count[vote] += 1
    else:
        count[vote] = 1

max_count = max(count.values())
languages = [k for k, v in count.items() if v == max_count]

if len(languages) > 1:
    print(0)
else:
    print(languages[0])
","1.0"
"7330236e-4855-4be2-bef9-6e6766bbd181","def main():
    n = int(input())
    votes = list(map(int, input().split()))

    count = [0] * 101
    for vote in votes:
        count[vote] += 1

    max_count = max(count[1:])
    if count[0] >= max_count:
        print(0)
    else:
        print(count.index(max_count, 1))

if __name__ == ""__main__"":
    main()","1.0"
"31e85273-27d5-4648-8ff3-298be60d690e","
a, b, c = int(input()), int(input()), int(input())
for i in range(c // b, -1, -1):
    if a + b * i <= c:
        print(i)
        break
","1.0"
"31e85273-27d5-4648-8ff3-298be60d690e","
def kraxburger(a, b, c):
    n = c - a
    for i in range(1, c//b + 1):
        if a + b * i <= n:
            n = i
    return n

a, b, c = map(int, input().split())
print(kraxburger(a, b, c))
","1.0"
"31e85273-27d5-4648-8ff3-298be60d690e","def main():
    A, B, C = map(int, input().split())
    N = (C - A) // B
    print(N)

if __name__ == ""__main__"":
    main()","1.0"
"ef110cdc-5bfe-4426-8a9b-fe4ca7392895","
numbers = """"""\
###  ##   ##   ###  ######   #######   ##   ######  #######
#  # #  # #  #  #  #  #       #         #  #  #       #
#  # #  ##  #  #  #  #       #         #  #  #       #
###  #  # #  #  ###  #####    #####      #  #  #####    #####
#  # #  #  # #  #  #  #       #         #  #  #       #
###  ###   ##   ###  ######   #######   ##   ######  #######
##   #  #  ##   ##   #      #         #  #   #      #
# #  #  # #  # # #  ######  ######      # #  ######  ######
# #  #  #  # #  ##  #      #         ####  #      #  #
##   #####  #####  #####   #######   ####   #####   #######
 """"""
n = int(input())
print(numbers[n*15 : n*15+15])
","1.0"
"ef110cdc-5bfe-4426-8a9b-fe4ca7392895","
def krabs_greed(n):
    images = [
        [""###"", ""#"", ""#"", ""#"", ""#""],
        [""###"", ""#"", "" "", ""#"", ""#""],
        [""###"", ""#"", ""##"", "" "", ""#""],
        [""###"", ""#"", "" "", ""##"", ""#""],
        [""###"", ""#"", ""#"", ""#"", ""#""],
        [""###"", "" "", "" "", "" "", "" ""],
        [""###"", "" "", "" "", "" "", "" ""],
        [""###"", "" "", "" "", "" "", "" ""],
        [""###"", "" "", "" "", "" "", "" ""],
        [""###"", "" "", "" "", "" "", "" ""]
    ]
    return images[n]

n = int(input())
print('\n'.join(krabs_greed(n)))
","1.0"
"ef110cdc-5bfe-4426-8a9b-fe4ca7392895","def main():
    n = int(input())
    digits = [
        ['###', '  #', '  #', '  #', '###'],
        ['  #', '  #', '  #', '  #', '  #'],
        ['###', '  #', '###', '#  ', '###'],
        ['###', '  #', '###', '  #', '###'],
        ['# #', '# #', '###', '# #', '# #'],
        ['###', '#  ', '###', '  #', '###'],
        ['###', '#  ', '###', '# #', '###'],
        ['###', '  #', '  #', '  #', '  #'],
        ['###', '# #', '###', '# #', '###'],
        ['###', '# #', '###', '  #', '###']
    ]
    for row in digits[n]:
        print(row)

if __name__ == '__main__':
    main()","1.0"
"6a5a3a27-897e-4d43-8eba-5774b08efba5","
a, b, c = map(int, input().split())
if a != b and b != c:
    ans = max(a, b, c) - min(a, b, c)
    if ans % 2 == 1:
        ans += 1
    ans //= 2
    ans -= 1
elif a == b == c:
    ans = 0
else:
    ans = 1
print(ans)
","1.0"
"6a5a3a27-897e-4d43-8eba-5774b08efba5","
def gcd(a, b):
    while b:
        a, b = b, a % b
    return a

def lcm(a, b):
    return a * b // gcd(a, b)

def min_seconds(a, b, c):
    ab = lcm(a, b)
    ac = lcm(a, c)
    bc = lcm(b, c)
    g = gcd(ab, ac) * gcd(ab, bc)
    return (ab // g) + (ac // g) + (bc // g) - 2

a, b, c = map(int, input().split())
print(min_seconds(a, b, c))
","1.0"
"6a5a3a27-897e-4d43-8eba-5774b08efba5","def main():
    A = int(input())
    B = int(input())
    C = int(input())

    total = A + B + C
    target = total // 3
    extra = total % 3

    if total % 3 == 0:
        print(0)
    else:
        print(target - min(A, B, C) + extra)

if __name__ == ""__main__"":
    main()","1.0"
"d545163d-9cf7-4877-9ec9-53b8c4b1b499","x, n, t = map(int, input().split())
x = min(x, n)
n -= x
t = min(t, 240 - 60)
n -= t // 60
print(x + n)","1.0"
"d545163d-9cf7-4877-9ec9-53b8c4b1b499","
def cracker_competition(x, n, t):
    minutes = 5 * 60
    total_seconds = minutes
    kraxburgers_eaten = 0

    while total_seconds >= t:
        kraxburgers_eaten += total_seconds // t
        total_seconds = total_seconds - (total_seconds // t) * t

    if x > kraxburgers_eaten:
        kraxburgers_eaten += x

    return min(kraxburgers_eaten, n)

x, n, t = map(int, input().split())
print(cracker_competition(x, n, t))
","1.0"
"d545163d-9cf7-4877-9ec9-53b8c4b1b499","def main():
    x, n, t = map(int, input().split())
    time = 60
    count = x
    while time < 300:
        time += t
        if time <= 300:
            count += 1
            if count > n:
                break
    print(count)

if __name__ == ""__main__"":
    main()","1.0"
"bcf28659-36f2-4add-99d1-7b600b104c71","x,y,z=map(int,input().split())
if x>y: print(""+"")
elif x<y: print(""-"")
elif x==y: print(""0"")
else: print(""?"")","1.0"
"bcf28659-36f2-4add-99d1-7b600b104c71","
def squidward_poll(x, y, z):
    if x > y:
        return '+' if x + z > y else '?'
    elif x < y:
        return '-' if y + z > x else '?'
    else:
        return '0'

x, y, z = map(int, input().split())
print(squidward_poll(x, y, z))
","1.0"
"bcf28659-36f2-4add-99d1-7b600b104c71","def main():
    x, y, z = map(int, input().split())
    if x > y + z:
        print(""+"")
    elif y > x + z:
        print(""-"")
    elif x == y:
        print(""0"")
    else:
        print(""?"")

if __name__ == ""__main__"":
    main()","1.0"
"d0c2eebb-d0a4-4fc8-9a98-9d5781c4d2d7","
a, b = [int(x) for x in input().split()]
ans = 0
while a > 0 or b > 0:
    if b == 0:
        ans += a
        break
    if a - b >= 0:
        a -= b
        b, ans = b, ans + b
    else:
        b += a
        a, ans = b - a, ans + a
print(ans)
","1.0"
"d0c2eebb-d0a4-4fc8-9a98-9d5781c4d2d7","
def gcd(a, b):
    while b:
        a, b = b, a % b
    return a

a, b = map(int, input().split())
candles = a + b
hours = 0

while candles > 1:
    new_candles = candles // gcd(candles, a)
    hours += new_candles
    candles += new_candles * a
    candles -= a

print(hours)
","1.0"
"d0c2eebb-d0a4-4fc8-9a98-9d5781c4d2d7","def main():
    a, b = map(int, input().split())
    hours = a
    candles = a
    while candles >= b:
        new_candles = candles // b
        hours += new_candles
        candles = new_candles + candles % b
    print(hours)

if __name__ == ""__main__"":
    main()","1.0"
"6723979a-b30c-4944-b9fd-970aabedbea3","
def gcd(a, b):
  while b:
    a, b = b, a % b
  return a

def lcm(a, b):
  return (a * b) // gcd(a, b)

p, a, b, c = map(int, input().split())
result = min(a - (p % a), b - (p % b), c - (p % c))
print(result)
","1.0"
"6723979a-b30c-4944-b9fd-970aabedbea3","
def snail_race(p, a, b, c):
    return min(a * (p // a) + (p % a), b * (p // b) + (p % b), c * (p // c) + (p % c)) - p

p, a, b, c = map(int, input().split())
print(snail_race(p, a, b, c))
","1.0"
"6723979a-b30c-4944-b9fd-970aabedbea3","def gcd(a, b):
    while b != 0:
        a, b = b, a % b
    return a

def lcm(a, b):
    return a * b // gcd(a, b)

def find_min_time(p, a, b, c):
    min_time = lcm(lcm(a, b), c)
    while min_time < p:
        min_time += lcm(lcm(a, b), c)
    return min_time - p

p, a, b, c = map(int, input().split())
print(find_min_time(p, a, b, c))","1.0"
"94c2e814-50e3-4d66-a2b1-fa52ccfc19ef","n = int(input())
d = [int(x) for x in input().split()]
a, b = [int(x) for x in input().split()]
print(sum(d[a-1:b-1]))","1.0"
"94c2e814-50e3-4d66-a2b1-fa52ccfc19ef","
def golden_card(n, d, a, b):
    visited = [False] * (n+1)
    visited[a] = True
    levels = [0] * n
    for i in range(1, n+1):
        for j in range(i-1, -1, -1):
            if not visited[j] and levels[j] >= sum(d[j:i]):
                visited[i] = True
                levels[i] = levels[j] + d[j]
    return levels[b] - levels[a] + sum(d[a:b])

n = int(input())
d = list(map(int, input().split()))
a, b = map(int, input().split())
print(golden_card(n, d, a, b))
","1.0"
"94c2e814-50e3-4d66-a2b1-fa52ccfc19ef","n = int(input())
d = list(map(int, input().split()))
a, b = map(int, input().split())

result = 0
for i in range(a, b):
    result += d[i - 1]

print(result)","1.0"
"bee15a15-bd8c-4a01-911e-ddf3e5ba6f80","n,m=map(int,input().split())
a=[n//m]*(m-1)+[n-n//m*(m-1)]
print(*sorted(a))","1.0"
"bee15a15-bd8c-4a01-911e-ddf3e5ba6f80","
def gcd(a, b):
    while b:
        a, b = b, a % b
    return a

n, m = map(int, input().split())
assert n >= m, ""Number of cakes should be greater than or equal to the number of guests""

diff = n - m
if diff == 0:
    print(n * '1')
else:
    g = gcd(diff, m - 1)
    q = diff // g
    r = m - 1 - g
    a = [q + i * g for i in range(r)] + [q] * g
    print(' '.join(map(str, a)))
","1.0"
"bee15a15-bd8c-4a01-911e-ddf3e5ba6f80","n, m = map(int, input().split())
a = [n // m] * m
for i in range(n % m):
    a[i] += 1
print(*sorted(a))","1.0"
"8e83aa88-b80e-4a89-97a6-773e94a0acf3","n=int(input());l=[int(x) for x in input().split()];m=int(input());p=[int(x) for x in input().split()];j=0;for i in p:while i>l[j]:i-=l[j];j+=1;print(j+1)","1.0"
"8e83aa88-b80e-4a89-97a6-773e94a0acf3","
def find_orders(n, a, m, q):
    orders = [[] for _ in range(n+1)]
    for i, ai in enumerate(a):
        for j in range(1, ai+1):
            orders[i+1].append(i+1) + [x for x in range(1, j)]
    for qi in q:
        for i, order in enumerate(orders):
            if qi in order:
                print(i+1)
                break

n, a, m, q = map(int, input().split())
a = list(map(int, input().split()))
q = list(map(int, input().split()))
find_orders(n, a, m, q)
","1.0"
"8e83aa88-b80e-4a89-97a6-773e94a0acf3","n = int(input())
a = list(map(int, input().split()))
m = int(input())
q = list(map(int, input().split()))

cumsum = [0] * (n + 1)
for i in range(1, n + 1):
    cumsum[i] = cumsum[i - 1] + a[i - 1]

for qi in q:
    left = 1
    right = n
    while left <= right:
        mid = (left + right) // 2
        if cumsum[mid] >= qi:
            right = mid - 1
        else:
            left = mid + 1
    print(left)","1.0"
"7402f10b-561e-4547-8f06-38f69d85a6c9","
a=1
print(a)
","1.0"
"7402f10b-561e-4547-8f06-38f69d85a6c9","
print(1)
","1.0"
"7402f10b-561e-4547-8f06-38f69d85a6c9","print(1)","1.0"
"6b8c932c-83a8-48ca-a113-6d30c2614e04","
N = int(input())
print(N // (10 * 10))
","1.0"
"6b8c932c-83a8-48ca-a113-6d30c2614e04","
def ip_packets(n):
    return (n // 100) + (1 if n % 100 else 0)

n = int(input())
print(ip_packets(n))
","1.0"
"6b8c932c-83a8-48ca-a113-6d30c2614e04","def main():
    n = int(input())
    ip_packet_size = 10 * 10
    filled_packets = n // ip_packet_size
    print(filled_packets)

if __name__ == ""__main__"":
    main()","1.0"
"8f601481-e94b-4fb5-bd98-938b284df9fe","
a, b, c = int(input()), int(input()), int(input())
ans1, d = [], a
while d > 0:
    ans1.append(d % 10)
    d //= 10
ans1.reverse()
sum1 = 0
for i in range(len(ans1)):
    sum1 += ans1[i]
ans2 = []
if sum1 == c:
    ans2 = ans1
else:
    for i in range(len(ans1)):
        if ans1[i] + 1 <= 9:
            ans1[i] += 1
            for j in range(i + 1, len(ans1)):
                ans1[j] = 0
            ans2 = ans1
            break
        else:
            ans1[i] = 0
sum2 = 0
for i in range(len(ans2)):
    sum2 += ans2[i]
t = 0
while sum2 != c:
    if t >= len(ans2):
        ans2.append(0)
    ans2[t] += 1
    t += 1
    sum2 = 0
    for i in range(len(ans2)):
        sum2 += ans2[i]
ans2.reverse()
ans3 = """"
for i in range(len(ans2)):
    ans3 = ans3 + str(ans2[i])
m = int(ans3)

print(t)
print(m)
","1.0"
"8f601481-e94b-4fb5-bd98-938b284df9fe","
def sum_digits(n):
    total = 0
    while n > 0:
        total += n % 10
        n //= 10
    return total

def find_numbers(A, B, C):
    for i in range(A, B+1):
        if sum_digits(i) == C:
            return i, i

    T = 10000
    for i in range(1, T):
        if A <= i <= T and sum_digits(i) == C:
            T = i

    M = 1
    for i in range(M, B+1, -1):
        if A <= i <= B and sum_digits(i) == C:
            M = i

    return T, M

A = int(input())
B = int(input())
C = int(input())

N, M = find_numbers(A, B, C)
print(N)
print(M)
","1.0"
"8f601481-e94b-4fb5-bd98-938b284df9fe","def find_min_max(a, b, c):
    for t in range(a, b + 1):
        digit_sum = sum(int(digit) for digit in str(t))
        if digit_sum == c:
            min_t = t
            break
    for m in range(b, a - 1, -1):
        digit_sum = sum(int(digit) for digit in str(m))
        if digit_sum == c:
            max_m = m
            break
    return min_t, max_m

a = int(input())
b = int(input())
c = int(input())

min_t, max_m = find_min_max(a, b, c)
print(min_t)
print(max_m)","1.0"
"580154b5-aff6-4be5-aee1-ef65fd358eee","
a, b = map(int, input().split())
c = 1
while (a != b):
    if (a < b):
        a, b = b, a
    a -= b
    c += 1
print (c)
","1.0"
"580154b5-aff6-4be5-aee1-ef65fd358eee","
def squares(a, b):
    if a > b:
        a, b = b, a
    count = 0
    while a > 0:
        count += min(a, b) // a
        a, b = b % a, a
    return count

a, b = map(int, input().split())
print(squares(a, b))
","1.0"
"580154b5-aff6-4be5-aee1-ef65fd358eee","def main():
    A, B = map(int, input().split())
    count = 0
    while A > 0 and B > 0:
        if A < B:
            B -= A
        else:
            A -= B
        count += 1
    print(count)

if __name__ == '__main__':
    main()","1.0"
"8b57cf61-951d-4c47-b41c-90e13b9f5358","
n, l = map(int, input().split())
a = list(map(int, input().split()))
ans = -1
mn = 1e9
for i in range(n - l + 1):
    sm = 0
    for j in range(l):
        sm += a[j + i]
    if sm < mn and a[i] == a[i + l - 1] == 0:
        mn = sm
        ans = i + 1
print(ans)
","1.0"
"8b57cf61-951d-4c47-b41c-90e13b9f5358","
def find_min_rain(n, l, a):
    dp = [[0] * (101 * l) for _ in range(n)]
    for i in range(1, n):
        for j in range(101 * l):
            for k in range(j + 1, 101 * l):
                dp[i][k] = min(dp[i][k], dp[i - 1][j] + a[i - 1])
    min_rain = float('inf')
    start_day = -1
    for i in range(l):
        rain = sum(dp[-1][i * 101 + j] for j in range(100))
        if rain < min_rain:
            min_rain = rain
            start_day = (i * 100 + 1)
    return start_day if min_rain != float('inf') else -1

n, l = map(int, input().split())
a = list(map(int, input().split()))
print(find_min_rain(n, l, a))
","1.0"
"8b57cf61-951d-4c47-b41c-90e13b9f5358","def find_hike_start(n, l, probs):
    if l == n:
        return 1 if probs[0] == 0 and probs[-1] == 0 else -1

    min_rain_sum = float('inf')
    best_start = -1

    for i in range(n - l + 1):
        if probs[i] != 0 or probs[i + l - 1] != 0:
            continue

        rain_sum = sum(probs[i + 1:i + l - 1])
        if rain_sum < min_rain_sum:
            min_rain_sum = rain_sum
            best_start = i + 1

    return best_start

n, l = map(int, input().split())
probs = list(map(int, input().split()))

start_day = find_hike_start(n, l, probs)
print(start_day)","1.0"
"58ca4991-edd2-4ea2-b81d-d9a258740ded","
n = int(input())
temperatures = list(map(int, input().split()))
max_diff = 0
max_diff_index = 0
for i in range(1, n):
  diff = abs(temperatures[i] - temperatures[i - 1])
  if diff > max_diff:
    max_diff = diff
    max_diff_index = i
print(max_diff_index + 1)
","1.0"
"58ca4991-edd2-4ea2-b81d-d9a258740ded","
N = int(input())
temps = list(map(int, input().split()))
diff = [temps[i+1] - temps[i] for i in range(N-1)]
max_diff = max(diff)
max_diff_index = diff.index(max_diff) + 1
print(max_diff_index)
","1.0"
"58ca4991-edd2-4ea2-b81d-d9a258740ded","def main():
    n = int(input())
    temperatures = list(map(int, input().split()))

    max_change = 0
    max_change_second = 0

    for i in range(1, n):
        change = abs(temperatures[i] - temperatures[i - 1])
        if change > max_change:
            max_change = change
            max_change_second = i

    print(max_change_second)

if __name__ == ""__main__"":
    main()","1.0"
"65a82391-b543-4715-91f5-4c5e7baf3fa0","
s1, s2 = input().split()
s1 = s1.lower()
s2 = s2.lower()
if sorted(s1) == sorted(s2):
  print(""Yes"")
else:
  print(""No"")
","1.0"
"65a82391-b543-4715-91f5-4c5e7baf3fa0","
def check_rearrangement(s1, s2):
    s1, s2 = sorted(s1), sorted(s2)
    return s1 == s2[::-1] or s1[::-1] == s2

name1, name2 = input().split()
print(""Yes"" if check_rearrangement(name1, name2) else ""No"")
","1.0"
"65a82391-b543-4715-91f5-4c5e7baf3fa0","def rearrangement(name1, name2):
    name1 = name1.lower()
    name2 = name2.lower()

    if len(name1) != len(name2):
        return False

    letter_count = {}

    for letter in name1:
        if letter in letter_count:
            letter_count[letter] += 1
        else:
            letter_count[letter] = 1

    for letter in name2:
        if letter not in letter_count or letter_count[letter] == 0:
            return False
        letter_count[letter] -= 1

    return True

name1, name2 = input().split()

if rearrangement(name1, name2):
    print(""Yes"")
else:
    print(""No"")","1.0"
"eab227d7-e139-4289-8d39-eaa2b5b376c0","
N, W, K = map(int, input().split())
print(N * K)
","1.0"
"eab227d7-e139-4289-8d39-eaa2b5b376c0","
def main():
    n, w, k = map(int, input().split())
    coins = n * w
    coins *= k
    coins -= n
    print(coins)

main()
","1.0"
"eab227d7-e139-4289-8d39-eaa2b5b376c0","def main():
    n, w, k = map(int, input().split())
    print(n * k)

if __name__ == ""__main__"":
    main()","1.0"
"076cbcbd-ca30-415b-b2b9-701ea29eb934","
def distance(x1, y1, x2, y2):
  return ((x2 - x1)**2 + (y2 - y1)**2)**0.5

def check_collision(neurons, t, i, r):
  for j in range(len(neurons)):
    if i != j:
      if distance(neurons[i][0], neurons[i][1], neurons[j][0], neurons[j][1]) <= r + neurons[j][2] + t:
        return True
  return False

k, t = map(int, input().split())
neurons = []
for _ in range(k):
  x, y, r = map(int, input().split())
  neurons.append([x, y, r])

growth = 0
for i in range(len(neurons)):
  if not check_collision(neurons, t, i, neurons[i][2]):
    growth = max(growth, t)

print(f""{growth:.2f}"")
","1.0"
"076cbcbd-ca30-415b-b2b9-701ea29eb934","
def manhattan_distance(x1, y1, x2, y2):
 return abs(x1 - x2) + abs(y1 - y2)

K, T = map(int, input().split())
neurons = []
for _ in range(K):
 x, y, R = map(int, input().split())
 neurons.append((x, y, R))

distances = [[0] * K for _ in range(T)]
for i in range(T):
 for j in range(K):
 for k in range(K):
 if manhattan_distance(neurons[j][0], neurons[j][1], neurons[k][0], neurons[k][1]) <= neurons[j][2] + neurons[k][2] - i:
 neurons[j][2] = neurons[k][2] = i + 1
 for neuron in neurons:
 print(f""{neuron[2]:.2f}"")
","1.0"
"076cbcbd-ca30-415b-b2b9-701ea29eb934","def main():
    k, t = map(int, input().split())
    neurons = []
    for _ in range(k):
        x, y, r = map(int, input().split())
        neurons.append((x, y, r))

    max_radius = 0
    for i in range(k):
        for j in range(i + 1, k):
            dx = neurons[i][0] - neurons[j][0]
            dy = neurons[i][1] - neurons[j][1]
            distance = (dx ** 2 + dy ** 2) ** 0.5
            min_dist = neurons[i][2] + neurons[j][2]
            if distance <= min_dist:
                time = (min_dist - distance) / 2
                max_radius = max(max_radius, time)

    max_radius = min(max_radius, t)
    print(f""{max_radius:.2f}"")

if __name__ == ""__main__"":
    main()","1.0"
"bec8ed8e-a7fa-4cf9-a000-4b52d98ef48e","
n = int(input())
a = list(map(int, input().split()))
ans = a[0]
for i in range(1, n):
    ans = min(ans, a[i] // 2)
print(ans * 2)
","1.0"
"bec8ed8e-a7fa-4cf9-a000-4b52d98ef48e","
def power(n, tees):
    tees.sort(reverse=True)
    robots = [0] * (sum(tees) + 1)
    for t in tees:
        for i in range(t, 0, -1):
            if not robots[i]:
                robots[i] = 1
                for j in range(i + t, sum(tees) + 1):
                    robots[j] += 1
    return sum(robots)

n = int(input())
tees = list(map(int, input().split()))
print(power(n, tees))
","1.0"
"bec8ed8e-a7fa-4cf9-a000-4b52d98ef48e","def main():
    n = int(input())
    connectors = list(map(int, input().split()))

    max_guests = 1
    for i in range(n):
        max_guests *= connectors[i]

    print(max_guests)

if __name__ == ""__main__"":
    main()","1.0"
"f611255f-9f87-4db6-b36d-596aaa95886b","
n=int(input())
ar=[list(map(int,input())) for i in range(n)]
dp=[[0]*n for i in range(n)]
for i in range(n):
    for j in range(n):
        if ar[i][j]==0:
            dp[i][j]=0
        else:
            dp[i][j]=1
            if i>0:
                dp[i][j]+=dp[i-1][j]
            if j>0:
                dp[i][j]+=dp[i][j-1]
            if i>0 and j>0:
                dp[i][j]-=dp[i-1][j-1]
ans=0
for i in range(n):
    for j in range(n):
        for k in range(i,n):
            for l in range(j,n):
                if i==0 and j==0:
                    sum=dp[k][l]
                elif i==0:
                    sum=dp[k][l]-dp[k][j-1]
                elif j==0:
                    sum=dp[k][l]-dp[i-1][l]
                else:
                    sum=dp[k][l]-dp[i-1][l]-dp[k][j-1]+dp[i-1][j-1]
                ans=max(ans,sum)
print(ans)
","1.0"
"f611255f-9f87-4db6-b36d-596aaa95886b","
def max_square_area(n, disk):
    max_area = 0
    for i in range(1, n):
        for j in range(i, n):
            area = i * j
            square = [[disk[y][x] for y in range(n - i)] for x in range(n - j)]
            count = 0
            for row in square:
                if all(x == row[0] for x in row):
                    count += area
            max_area = max(max_area, count)
    return max_area

n = int(input())
disk = [list(input()) for _ in range(n)]
print(max_square_area(n, disk))
","1.0"
"f611255f-9f87-4db6-b36d-596aaa95886b","def find_max_square_area(disk):
    n = len(disk)
    max_area = 0

    for i in range(n):
        for j in range(n):
            if disk[i][j] == '1':
                size = 1
                while True:
                    if i + size < n and j + size < n:
                        valid = True
                        for x in range(i, i + size + 1):
                            for y in range(j, j + size + 1):
                                if disk[x][y] == '0':
                                    valid = False
                                    break
                            if not valid:
                                break
                        if valid:
                            size += 1
                        else:
                            break
                    else:
                        break
                max_area = max(max_area, size * size)

    return max_area

n = int(input())
disk = [input() for _ in range(n)]

max_area = find_max_square_area(disk)
print(max_area)","1.0"
"c0fb5634-ca08-405e-bc61-ac50fc7d0a99","
n, k, m = map(int,input().split())
print((n-k) // m + 1)
","1.0"
"c0fb5634-ca08-405e-bc61-ac50fc7d0a99","
def main():
    n, k, m = map(int, input().split())
    ripe = [0] * (n + 1)
    ripe[1] = k
    for day in range(2, n + 1):
        ripe[day] = ripe[day - 1] + m
    return ripe[-1]

if __name__ == ""__main__"":
    print(main())
","1.0"
"c0fb5634-ca08-405e-bc61-ac50fc7d0a99","def main():
    n, k, m = map(int, input().split())
    day = 1
    total = k
    while total < n:
        k += m
        total += k
        day += 1
    print(k)

if __name__ == ""__main__"":
    main()","1.0"
"3128bb96-33e2-4b01-b4a0-f067a421045c","elements = {'H': 1, 'C': 12, 'N': 14, 'O': 16}
formula = input()
mass = 0
last = ''
count = 0
for char in formula:
    if char.isalpha():
        if last != '':
            mass += elements[last] * count
        last = char
        count = 0
    else:
        count = count * 10 + int(char)
if last != '':
    mass += elements[last] * count
print(mass)","1.0"
"3128bb96-33e2-4b01-b4a0-f067a421045c","
elements = {'H': 1, 'C': 12, 'N': 14, 'O': 16}
formula = input().split()
total_mass = 0

for element, count in zip(formula, map(int, formula[1::2]) if len(formula) % 2 == 1 else formula[::2]):
    total_mass += elements[element] * count

print(total_mass)
","1.0"
"3128bb96-33e2-4b01-b4a0-f067a421045c","def main():
    formula = input()
    mass = 0
    i = 0
    while i < len(formula):
        if formula[i] == 'C':
            mass += 12
            i += 1
            if i < len(formula) and formula[i].isdigit():
                mass += 12 * (int(formula[i]) - 1)
                i += 1
        elif formula[i] == 'H':
            mass += 1
            i += 1
            if i < len(formula) and formula[i].isdigit():
                mass += 1 * (int(formula[i]) - 1)
                i += 1
        elif formula[i] == 'N':
            mass += 14
            i += 1
            if i < len(formula) and formula[i].isdigit():
                mass += 14 * (int(formula[i]) - 1)
                i += 1
        elif formula[i] == 'O':
            mass += 16
            i += 1
            if i < len(formula) and formula[i].isdigit():
                mass += 16 * (int(formula[i]) - 1)
                i += 1
    print(mass)

if __name__ == '__main__':
    main()","1.0"
"afdf5a16-8bd4-4b26-a202-608e047fb891","
a=[0]*32
l,r=map(int,input().split())
a[1]=1;a[2]=1;a[4]=2;a[8]=3;a[16]=4
for i in range(3,17):
  if not i%2: a[i]=a[i>>1]
for i in range(17,33):
  if i%2: continue
  a[i]=a[i>>1]+a[(i>>1)-1]
print(a[r]-a[l-1])
","1.0"
"afdf5a16-8bd4-4b26-a202-608e047fb891","
def gray_paint(l, r):
    total = 0
    for i in range(l, r+1):
        if i % 2 == 0:
            height = 1
            while i + height <= r and (i + height) % 4 != 0:
                height += 1
            total += height
    return total

l, r = map(int, input().split())
print(gray_paint(l, r))
","1.0"
"afdf5a16-8bd4-4b26-a202-608e047fb891","def bus_coloring(l, r):
    total_area = 0
    for i in range(l, r+1):
        if i % 2 == 0:
            k = 1
            while i % (2**k) == 0:
                k += 1
            total_area += k-1
    return total_area

l, r = map(int, input().split())
print(bus_coloring(l, r))","1.0"
"3c3ef2a2-f6fa-4cc9-bd4f-fd1bf5a07ba3","n = int(input())
a = [int(x) for x in input().split()]
m = int(input())
b = [int(x) for x in input().split()]
c = [0] * 2 * n
for i in range(0, 2 * n, 2): c[i] = c[i + 1] = b.pop(0)
for i in range(n - 1):
    for j in range(n - 1):
        if a[j] > a[j + 1] and c[a[j]] != c[a[j + 1]]:
            a[j], a[j + 1] = a[j + 1], a[j]
for x in a: print(x, end=' ')","1.0"
"3c3ef2a2-f6fa-4cc9-bd4f-fd1bf5a07ba3","
def bubble_sort(arr, candies):
    n = len(arr)
    for i in range(n-1):
        swapped = False
        for j in range(n-i-1):
            if arr[j] > arr[j+1] and (j+1, j) not in candies and (j, j+1) not in candies:
                arr[j], arr[j+1] = arr[j+1], arr[j]
                swapped = True
        if not swapped:
            break

n = int(input())
arr = list(map(int, input().split()))
m = int(input())
candies = set()
for _ in range(m):
    i, j = map(int, input().split())
    candies.add((i, j))
    candies.add((j, i))
bubble_sort(arr, candies)
print(*arr)
","1.0"
"3c3ef2a2-f6fa-4cc9-bd4f-fd1bf5a07ba3","def main():
    n = int(input())
    arr = list(map(int, input().split()))
    m = int(input())
    candy_pairs = set()
    for _ in range(m):
        i, j = map(int, input().split())
        candy_pairs.add((min(i, j), max(i, j)))

    for i in range(n - 1):
        for j in range(n - i - 1):
            if arr[j] > arr[j + 1] and (arr[j], arr[j + 1]) not in candy_pairs:
                arr[j], arr[j + 1] = arr[j + 1], arr[j]

    print(*arr)


if __name__ == ""__main__"":
    main()","1.0"
"8dc31c6f-539a-43b4-bf20-f1ffeb429b68","
n = int(input())
days = list(map(int, input().split()))

result = []
for i in range(n):
  if days[i] > 0:
    result.extend(['+'] * days[i])
    days[i] = 0
    for j in range(i + 1, n):
      if days[j] > 0:
        days[j] -= 1
        result.append('+')
      else:
        break

print(*result, sep=' ')
","1.0"
"8dc31c6f-539a-43b4-bf20-f1ffeb429b68","
def solve(n, days):
    days_list = list(range(1, n+1))
    for i in range(n):
        if days[i] > 0:
            for j in range(days[i]):
                days_list[i+j] += 1
    result = ['-'] * n
    for i in range(n):
        if days_list[i] > 0:
            result[i] = '+'
    for i in range(n, len(days_list)):
        if days_list[i] > 0:
            result.append('+')
    return ' '.join(result)

n = int(input())
days = list(map(int, input().split()))
print(solve(n, days))
","1.0"
"8dc31c6f-539a-43b4-bf20-f1ffeb429b68","def main():
    n = int(input())
    days = list(map(int, input().split()))
    result = []
    holiday_shift = 0

    for i in range(n):
        if days[i] > 0:
            result.extend(['-'] * holiday_shift)
            result.append('+')
            holiday_shift = days[i] - 1
        else:
            result.append('-')

    result.extend(['+'] * holiday_shift)
    print(' '.join(result))

if __name__ == '__main__':
    main()","1.0"
"4e146a7f-e7ea-468d-8ff3-bc5bc504e0bd","
n = int(input())
for _ in range(n):
    xr, yr, xr2, yr2, r, x, y = map(int, input().split())
    if xr <= x <= xr2 and yr <= y <= yr2 and ((x - xr)**2 + (y - yr)**2 <= r**2 or (x - xr2)**2 + (y - yr2)**2 <= r**2):
        print('yes')
    else:
        print('no')
","1.0"
"4e146a7f-e7ea-468d-8ff3-bc5bc504e0bd","
def is_inside(x, y, x1, y1, x2, y2):
    return x >= x1 and x <= x2 and y >= y1 and y <= y2

def is_on_wall(x1, y1, x2, y2, x, y, r):
    return abs(x - x1) <= r or abs(x - x2) <= r or abs(y - y1) <= r or abs(y - y2) <= r

def main():
    n = int(input())
    for _ in range(n):
        x1, y1, x2, y2, r, x, y = map(int, input().split())
        if is_inside(x, y, x1, y1, x2, y2) and is_on_wall(x1, y1, x2, y2, x, y, r):
            print(""yes"")
        else:
            print(""no"")

if __name__ == ""__main__"":
    main()
","1.0"
"4e146a7f-e7ea-468d-8ff3-bc5bc504e0bd","def is_inside(x1, y1, x2, y2, x, y, R):
    return x1 <= x <= x2 and y1 <= y <= y2 and (x - x1 <= R or x2 - x <= R or y - y1 <= R or y2 - y <= R)

N = int(input())
for _ in range(N):
    x1, y1, x2, y2, R, x, y = map(int, input().split())
    if is_inside(x1, y1, x2, y2, x, y, R):
        print(""yes"")
    else:
        print(""no"")","1.0"
"abbcc924-83f6-4516-b276-427d9cbe00e1","n, w, k = map(int, input().split())
print(w * (k - 1) + 1)","1.0"
"abbcc924-83f6-4516-b276-427d9cbe00e1","
def drill_count(n, w, k):
    return (k - 1) * w + min((k * w) - sum(range(k)), w)

n, w, k = map(int, input().split())
print(drill_count(n, w, k))
","1.0"
"abbcc924-83f6-4516-b276-427d9cbe00e1","def main():
    n, w, k = map(int, input().split())
    result = (k - 1) * w + w // 2
    print(result)

if __name__ == ""__main__"":
    main()","1.0"
"1ef1f261-55cb-46d2-a802-e3c83ec23c72","
n = int(input())
A = list(map(int, input().split()))
c = 1
for i in range(n):
    if A[i]: c += abs(A[i])
print(c)
","1.0"
"1ef1f261-55cb-46d2-a802-e3c83ec23c72","
def antivirus(arr):
    n = len(arr)
    time = 0
    while sum(arr) != 0:
        new_arr = [0] * n
        for i in range(n):
            if arr[i] != 0:
                new_arr[i] = arr[i] + sum(arr)
        arr = new_arr
        time += 1
    return time

n = int(input())
arr = list(map(int, input().split()))
print(antivirus(arr))
","1.0"
"1ef1f261-55cb-46d2-a802-e3c83ec23c72","def find_virus_time(n, arr):
    max_element = max(abs(x) for x in arr if x != 0)
    time = 0
    while True:
        if all(x == 0 for x in arr):
            return time
        max_diff = 0
        for i in range(n):
            if arr[i] != 0:
                diff = abs(arr[i] - arr[(i + 1) % n])
                max_diff = max(max_diff, diff)
        time += max_diff
        for i in range(n):
            if arr[i] != 0:
                arr[i] -= max_diff if arr[i] > 0 else -max_diff

n = int(input())
arr = list(map(int, input().split()))
print(find_virus_time(n, arr))","1.0"
"3abda59e-f14c-4509-8c89-fa074d981177","
n = int(input())
a = [1]
for i in range(2, n + 1):
  if i in a:
    a.append(a[-1] + 3)
  else:
    a.append(a[-1] + 2)
print(a[-1])
","1.0"
"3abda59e-f14c-4509-8c89-fa074d981177","
def gena_sequence(n):
    sequence = [1]
    visited = set([1])

    for _ in range(2, n+1):
        if _ in sequence:
            sequence.append(sequence[-1] + 3)
        else:
            sequence.append(sequence[-1] + 2)

    return sequence[n]

n = int(input())
print(gena_sequence(n))
","1.0"
"3abda59e-f14c-4509-8c89-fa074d981177","def find_an(n):
    an = 1
    appeared = {1}
    for i in range(2, n + 1):
        if an in appeared:
            an += 3
        else:
            an += 2
        appeared.add(an)
    return an

n = int(input())
print(find_an(n))","1.0"
"02324164-09e1-4932-9dec-37eadf4c332d","
def check_anagram(a, b):
    if len(a) != len(b):
        return ""NO""
    for c in a:
        if a.count(c) != b.count(c):
            return ""NO""
    return ""YES""
print(check_anagram(input(), input()))
","1.0"
"02324164-09e1-4932-9dec-37eadf4c332d","
def anagram(word1, word2):
    return sorted(word1) == sorted(word2)

word1, word2 = input().split()
print(""YES"" if anagram(word1, word2) else ""NO"")
","1.0"
"02324164-09e1-4932-9dec-37eadf4c332d","def is_anagram(word1, word2):
    if len(word1) != len(word2):
        return False
    letter_count = {}
    for letter in word1:
        if letter in letter_count:
            letter_count[letter] += 1
        else:
            letter_count[letter] = 1
    for letter in word2:
        if letter not in letter_count:
            return False
        letter_count[letter] -= 1
        if letter_count[letter] < 0:
            return False
    return True

words = input().split()
if is_anagram(words[0], words[1]):
    print(""YES"")
else:
    print(""NO"")","1.0"
"bb43cfa0-0a74-480c-a052-62bd7875a4ec","
def get_plank_count(width):
  n = 1
  sum = 0
  while sum < width:
    sum += 1 / n
    n += 1
  return n - 1

width = float(input())
plank_count = get_plank_count(width)
print(f""{plank_count} planks"")
","1.0"
"bb43cfa0-0a74-480c-a052-62bd7875a4ec","
def bridge(x):
    n, sum = 1, 0
    while sum < x:
        sum += 1 / n
        n += 1
    return f'{n - 1} planks'

x = float(input())
print(bridge(x))
","1.0"
"bb43cfa0-0a74-480c-a052-62bd7875a4ec","x = float(input())
n = 0
s = 0
while s < x:
    n += 1
    s += 1 / n
print(n, ""planks"")","1.0"
"11fefb8b-3765-4524-96f6-c63e9c6e6a36","
n, a, b = map(int, input().split())
round = 1
while n > 2:
  n //= 2
  round += 1
if (a + b) % (2 ** round) == 0:
  print(""Final!"")
else:
  print(round)
","1.0"
"11fefb8b-3765-4524-96f6-c63e9c6e6a36","
def meet_round(n, a, b):
    if a > b:
        a, b = b, a
    for i in range(min(a, b), max(a, b) + 1, 2):
        if i == a or i == b:
            return i
    for i in range(1, min(a, b) // 2 + 1):
        if (min(a, b) - i) % 2 == 0 and (min(a, b) + i) % 2 == 0:
            if (min(a, b) - i) in [a, b] or (min(a, b) + i) in [a, b]:
                return 2 * i
    return 'Final!'

n, a, b = map(int, input().split())
print(meet_round(n, a, b))
","1.0"
"11fefb8b-3765-4524-96f6-c63e9c6e6a36","def meet_round(n, a, b):
    if a > b:
        a, b = b, a
    round = 1
    while True:
        if a // 2 != b // 2:
            break
        a //= 2
        b //= 2
        round += 1
        n //= 2
    if n == 2:
        return ""Final!""
    return round

n, a, b = map(int, input().split())
print(meet_round(n, a, b))","1.0"
"803f2a75-a4cc-43e8-99a5-48ed1a684aa1","
r, d = map(int, input().split())
n = int(input())
cnt = 0
for _ in range(n):
    x, y, ri = map(int, input().split())
    if x*x + y*y > (r-d)**2 and x*x + y*y <= r**2:
        cnt += 1
print(cnt)
","1.0"
"803f2a75-a4cc-43e8-99a5-48ed1a684aa1","
def is_on_crust(r, d, x, y, ri):
 return (x - r + d) ** 2 + y ** 2 <= r ** 2 and (x + r - d) ** 2 + y ** 2 <= r ** 2

r, d = map(int, input().split())
n = int(input())
count = 0
for _ in range(n):
 x, y, ri = map(int, input().split())
 if is_on_crust(r, d, x, y, ri):
 count += 1
print(count)
","1.0"
"803f2a75-a4cc-43e8-99a5-48ed1a684aa1","def is_on_crust(x, y, r, d, R):
    return (d**2 <= x**2 + y**2 <= (R-d)**2) or (d <= abs(r**2 - x**2 - y**2) <= R-d)

def main():
    R, d = map(int, input().split())
    n = int(input())
    count = 0
    for _ in range(n):
        x, y, r = map(int, input().split())
        if is_on_crust(x, y, r, d, R):
            count += 1
    print(count)

if __name__ == '__main__':
    main()","1.0"
"d1cb74c3-9d35-4e77-99a3-5ead49cbf6ee","
def find_ball(moves):
  cup = 1
  for move in moves:
    if move == 'A':
      if cup == 1:
        cup = 2
      elif cup == 2:
        cup = 1
    elif move == 'B':
      if cup == 3:
        cup = 2
      elif cup == 2:
        cup = 3
    elif move == 'C':
      if cup == 1:
        cup = 3
      elif cup == 3:
        cup = 1
  return cup

moves = input()
print(find_ball(moves))
","1.0"
"d1cb74c3-9d35-4e77-99a3-5ead49cbf6ee","
def find_ball(moves):
    cups = [0, 0, 0]
    for move in moves:
        if move == 'A':
            cups[0], cups[1] = cups[1], cups[0]
        elif move == 'B':
            cups[1], cups[2] = cups[2], cups[1]
        elif move == 'C':
            cups[0], cups[2] = cups[2], cups[0]
    return cups.index(1) + 1

moves = input()
print(find_ball(moves))
","1.0"
"d1cb74c3-9d35-4e77-99a3-5ead49cbf6ee","def find_ball_position(moves):
    cups = [1, 0, 0]
    for move in moves:
        if move == 'A':
            cups[0], cups[1] = cups[1], cups[0]
        elif move == 'B':
            cups[1], cups[2] = cups[2], cups[1]
        else:
            cups[0], cups[2] = cups[2], cups[0]
    return cups.index(1) + 1

moves = input()
print(find_ball_position(moves))","1.0"
"20988eee-e004-450f-8f0e-a201504e15b2","
n, m = map(int, input().split())
field_t = []
for _ in range(n):
  field_t.append(list(input()))
input()
field_t1 = []
for _ in range(n):
  field_t1.append(list(input()))
moving_players = []
for i in range(n):
  for j in range(m):
    if field_t[i][j] != field_t1[i][j] and field_t[i][j] != '.':
      moving_players.append(field_t[i][j])
moving_players.sort(key=lambda x: (x.islower(), x))
print(len(moving_players))
print(''.join(moving_players))
","1.0"
"20988eee-e004-450f-8f0e-a201504e15b2","
def manhattan_distance(a, b):
    return abs(ord(a[0]) - ord(b[0])) + abs(ord(a[1]) - ord(b[1]))

N, M = map(int, input().split())
players_at_t = [list(input()) for _ in range(N)]
players_at_t_plus_1 = [list(input()) for _ in range(N)]

moving_players = set()
for i in range(N):
    for j in range(M):
        if players_at_t[i][j] and players_at_t_plus_1[i][j] != players_at_t[i][j]:
            moving_players.add(players_at_t[i][j])

moving_players = sorted(list(moving_players))
print(len(moving_players))
print(''.join(moving_players))
","1.0"
"20988eee-e004-450f-8f0e-a201504e15b2","def main():
    n, m = map(int, input().split())
    field_t = [input() for _ in range(n)]
    input()
    field_t_plus_1 = [input() for _ in range(n)]

    moving_players = set()
    for i in range(n):
        for j in range(m):
            if field_t[i][j] != field_t_plus_1[i][j]:
                moving_players.add(field_t[i][j])

    print(len(moving_players))
    print(''.join(sorted(moving_players, key=lambda x: (x.isupper(), x.lower()))))

if __name__ == '__main__':
    main()","1.0"
"9172a178-48dc-45ac-8c7f-fb00742ad80f","
def count_moves(n):
  moves = 0
  while n > 1:
    if n % 3 == 0:
      n //= 3
    elif n % 2 == 0:
      n //= 2
    else:
      n -= 1
    moves += 1
  return moves

n = int(input())
print(count_moves(n))
","1.0"
"9172a178-48dc-45ac-8c7f-fb00742ad80f","
def min_moves(n):
    moves = 0
    while n > 1:
        if n % 3 == 0:
            n /= 3
        elif n % 2 == 0:
            n /= 2
        else:
            n -= 1
        moves += 1
    return moves

n = int(input())
print(min_moves(n))
","1.0"
"9172a178-48dc-45ac-8c7f-fb00742ad80f","def solution(N):
    moves = 0
    while N > 1:
        if N % 3 == 0:
            N //= 3
        elif N % 2 == 0:
            N //= 2
        else:
            N -= 1
        moves += 1
    return moves

N = int(input())
print(solution(N))","1.0"
"9e51c02d-991b-4cb5-9ba1-5709d2ade797","n, m = map(int, input().split())
a = list(map(int, input().split()))
b = list(map(int, input().split()))
c = [0] * (n + 1)
for i in range(1, n + 1):
    c[i] = c[i - 1] + a[i - 1]
for j in range(m):
    l = 0
    r = n
    while l < r:
        mid = (l + r) // 2
        if c[mid] >= b[j]:
            r = mid
        else:
            l = mid + 1
    print(l, b[j] - c[l - 1])","1.0"
"9e51c02d-991b-4cb5-9ba1-5709d2ade797","
def find_house_apartment(n, a, b):
    total = sum(a)
    for i in range(len(b)):
        k = b[i]
        f = 1
        s = 0
        while s + a[f - 1] < k:
            s += a[f - 1]
            f += 1
        print(f, k - s + (b[i] - 1) % a[f - 1] + 1)

n, m = map(int, input().split())
a = list(map(int, input().split()))
b = list(map(int, input().split()))
find_house_apartment(n, a, b)
","1.0"
"9e51c02d-991b-4cb5-9ba1-5709d2ade797","n, m = map(int, input().split())
a = list(map(int, input().split()))
b = list(map(int, input().split()))

apartments = 0
for i in range(n):
    apartments += a[i]
    if apartments >= b[0]:
        print(i+1, b[0] - (apartments - a[i]))
        break

for j in range(1, m):
    prev_apartments = apartments - a[i]
    while b[j] > apartments:
        i += 1
        prev_apartments = apartments
        apartments += a[i]
    print(i+1, b[j] - prev_apartments)","1.0"
"9ca6957f-6cac-4516-bd98-d6ab2582b5ba","
n = int(input())
print(n // 7, (n + 1) // 7 * 2)
","1.0"
"9ca6957f-6cac-4516-bd98-d6ab2582b5ba","
n = int(input())
days_off = [0] * n
weekend = 0

for i in range(n):
    if i >= 5 and i % 7 == 0:
        days_off[i] = 2
        days_off[i-5] = 2
    elif i >= 6 and i % 7 == 1:
        days_off[i] = 1
        days_off[i-6] = 1
    elif i >= 2:
        days_off[i] = days_off[i-2] + 1

print(min(days_off), max(days_off))
","1.0"
"9ca6957f-6cac-4516-bd98-d6ab2582b5ba","def mars_weekends(n):
    min_weekends = n // 7 * 2 + min(1, n % 7) + min(1, (n - 1) % 7)
    max_weekends = min_weekends + min(5, n % 7)
    return min_weekends, max_weekends

n = int(input())
min_weekends, max_weekends = mars_weekends(n)
print(min_weekends, max_weekends)","1.0"
"5bab2114-725a-4548-aa0e-c6b7296898d5","c,n,v=map(int,input().split());print(c-n*v)","1.0"
"5bab2114-725a-4548-aa0e-c6b7296898d5","
C, N, V = map(int, input().split())
calories_spent = sum(map(int, input().split()))
if calories_spent > C:
    print(C - calories_spent)
else:
    print(0)
","1.0"
"5bab2114-725a-4548-aa0e-c6b7296898d5","def main():
    C, N, V = map(int, input().split())
    result = C - N * V
    print(result)

if __name__ == ""__main__"":
    main()","1.0"
"1384b216-a7b8-4150-a30c-9d502927d121","n,k,r=[int(i) for i in['0']*int(input())]
print(max(k,r)*(n-1)+1)","1.0"
"1384b216-a7b8-4150-a30c-9d502927d121","
def hamster_run(n, k, r):
    steps = k
    seconds = 0
    while steps > n:
        steps -= n
        seconds += r
        steps += k
        seconds += steps
    seconds += steps
    return seconds

n, k, r = map(int, input().split())
print(hamster_run(n, k, r))
","1.0"
"1384b216-a7b8-4150-a30c-9d502927d121","def hamster_trainer():
    N = int(input())
    K = int(input())
    R = int(input())

    total_time = 0
    current_spoke = 1

    while True:
        for _ in range(K):
            current_spoke += 1
            if current_spoke > N:
                current_spoke = 1
            total_time += 1

        if current_spoke == 1:
            break
        else:
            total_time += R

    print(total_time)

hamster_trainer()","1.0"
"425c8750-0bca-407c-b56d-35178e64f878","
a = list(map(int, input().split()))
s = input()
ans = 0
for i in range(len(s)):
    ans += a[int(s[i])-1]
print(ans)
","1.0"
"425c8750-0bca-407c-b56d-35178e64f878","
def quick_smiley(a, s):
    points = 0
    for i in range(len(s)):
        if s[i] == str(i+1):
            j = i % 4
            points += a[j]
    return points

a = list(map(int, input().split()))
s = input()
print(quick_smiley(a, s))
","1.0"
"425c8750-0bca-407c-b56d-35178e64f878","def main():
    a = list(map(int, input().split()))
    s = input()
    points = 0
    for i in range(len(s)):
        points += a[int(s[i]) - 1]
    print(points)

if __name__ == ""__main__"":
    main()","1.0"
"7c60a259-3411-4f01-a186-98993f455e20","n,k=map(int,input().split())
if n<=k: print('YES')
elif (n-k)%2: print('YES')
else: print('NO')","1.0"
"7c60a259-3411-4f01-a186-98993f455e20","
def sticks(n, k):
    player1, player2 = 1, 0
    while n > k-1:
        if n >= k:
            n -= k
            player1 += 1
        else:
            player2 += 1
            break
    return ""YES"" if player1 > player2 else ""NO""

n, k = map(int, input().split())
print(sticks(n, k))
","1.0"
"7c60a259-3411-4f01-a186-98993f455e20","def main():
    n, k = map(int, input().split())
    if n % (k + 1) == 0:
        print(""NO"")
    else:
        print(""YES"")

if __name__ == ""__main__"":
    main()","1.0"
"a54311d1-e202-4723-9adf-3b698d39ad41","
n, k, p, q = map(int, input().split())
print(p + q + (k == 1))
","1.0"
"a54311d1-e202-4723-9adf-3b698d39ad41","
def lyceum_canteen(n, k, p, q):
    if p + q + 1 < k:
        return -1
    else:
        return k - p - q + 1

n, k, p, q = map(int, input().split())
print(lyceum_canteen(n, k, p, q))
","1.0"
"a54311d1-e202-4723-9adf-3b698d39ad41","def solve(n, k, p, q):
    return k + p + 1

n, k, p, q = map(int, input().split())
print(solve(n, k, p, q))","1.0"
"2d45afbd-a12c-4de6-8b7e-13c61a6400bd","
n, k = map(int, input().split())
while k:
    k -= 1
    if n % 10:
        n -= 1
    else:
        n //= 10
print(n)
","1.0"
"2d45afbd-a12c-4de6-8b7e-13c61a6400bd","
def dec_sub(n, k):
    for _ in range(k):
        if n % 10 != 0:
            n -= 1
        else:
            n //= 10
    return n

n, k = map(int, input().split())
print(dec_sub(n, k))
","1.0"
"2d45afbd-a12c-4de6-8b7e-13c61a6400bd","def decimal_subtraction(n, k):
    for _ in range(k):
        if n % 10 != 0:
            n -= 1
        else:
            n //= 10
    return n

n, k = map(int, input().split())
print(decimal_subtraction(n, k))","1.0"
"2166392b-950d-4f7b-8b28-ecb72204576d","boys = int(input())
girls = int(input())
t = int(input())
boys += 1
girls += 1
s = 0
while boys > 0 or girls > 0:
    if boys < girls:
        girls -= t
        s += 1
    else:
        boys -= t
        s += 1
print(s)","1.0"
"2166392b-950d-4f7b-8b28-ecb72204576d","
def gcd(a, b):
    while b:
        a, b = b, a % b
    return a

m, d, v = map(int, input().split())
sets = v + 1

while sets > 1:
    if gcd(m, d) == 1:
        break
    if m >= d:
        m -= d
    else:
        d -= m
    sets -= 1

if gcd(m, d) > 1:
    sets -= (m + d) // gcd(m, d)

print(sets)
","1.0"
"2166392b-950d-4f7b-8b28-ecb72204576d","def solution(m, d, v):
    res = 0
    for i in range(v + 1):
        if i <= m and v - i <= d:
            res += 1
    return res

m = int(input())
d = int(input())
v = int(input())

print(solution(m, d, v))","1.0"
"5ad50653-d34b-4238-aced-8ed04eea645b","
n, k = map(int, input().split())
print(2 * n + (k - 1) * (n - 2) * k)
","1.0"
"5ad50653-d34b-4238-aced-8ed04eea645b","
def main():
    n, k = map(int, input().split())
    total = 2
    for _ in range(1, k):
        next_total = total + (n - 2)
        total = next_total
    print(total)

main()
","1.0"
"5ad50653-d34b-4238-aced-8ed04eea645b","def fortified_area():
    N, K = map(int, input().split())
    firing_points = 2 * N + (K - 1) * N
    print(firing_points)

if __name__ == ""__main__"":
    fortified_area()","1.0"
"c96e0173-605e-46ae-98b6-d1df2bce3269","
n = int(input())
a = list(map(int, input().split()))
b = list(map(int, input().split()))
total = sum(a)
max_size = 0
for i in range(n):
  max_size = max(max_size, b[i])
if total <= 2 * max_size:
  print(""YES"")
else:
  print(""NO"")
","1.0"
"c96e0173-605e-46ae-98b6-d1df2bce3269","
def check_transfer(n, a, b):
    a.sort()
    b.sort()
    total = sum(a)
    if total > 2 * b[n - 1]:
        return ""NO""
    for i in range(n - 1, -1, -1):
        if a[i] + a[i + 1] > b[i]:
            return ""NO""
    return ""YES""

n = int(input())
a = list(map(int, input().split()))
b = list(map(int, input().split()))
print(check_transfer(n, a, b))
","1.0"
"c96e0173-605e-46ae-98b6-d1df2bce3269","def main():
    n = int(input())
    a = list(map(int, input().split()))
    b = list(map(int, input().split()))

    total_money = sum(a)
    max_account_size = max(b)

    if total_money <= max_account_size * 2:
        print(""YES"")
    else:
        print(""NO"")

if __name__ == ""__main__"":
    main()","1.0"
"49d32baa-e711-42ee-91cf-836c86d0d699","import math
s, r1 = map(float, input().split())
r2 = math.sqrt(r1 ** 2 - s / math.pi)
print(""{:.3f}"".format(r2))","1.0"
"49d32baa-e711-42ee-91cf-836c86d0d699","
def inner_circle_radius(area, outer_radius):
    if outer_radius > 100:
        return ""Radius of outer circle should not exceed 100.""

    inner_radius = (outer_radius ** 2 - area) / (2 * math.pi * outer_radius)
    return round(inner_radius, 3)

area, outer_radius = map(float, input().split())
print(inner_circle_radius(area, outer_radius))
","1.0"
"49d32baa-e711-42ee-91cf-836c86d0d699","import math

S = float(input())
R1 = float(input())

R2 = math.sqrt(R1**2 - S/math.pi)

print(f'{R2:.3f}')","1.0"
"cd337303-7592-429e-a0b0-a9882d16ca3b","
n = int(input())
capacity = 0
current_passengers = 0
for i in range(n):
  a, b = map(int, input().split())
  current_passengers -= a
  current_passengers += b
  capacity = max(capacity, current_passengers)
print(capacity)
","1.0"
"cd337303-7592-429e-a0b0-a9882d16ca3b","
def min_train_capacity(n, stops):
    passengers = [0]
    for i, (a, b) in enumerate(stops):
        passengers.append(passengers[i] - a + b)
    return max(passengers)

n = int(input())
stops = []
for _ in range(n):
    ai, bi = map(int, input().split())
    stops.append((ai, bi))
print(min_train_capacity(n, stops))
","1.0"
"cd337303-7592-429e-a0b0-a9882d16ca3b","def main():
    n = int(input())
    a = []
    b = []
    for i in range(n):
        ai, bi = map(int, input().split())
        a.append(ai)
        b.append(bi)

    capacity = 0
    passengers = 0
    for i in range(n):
        passengers -= a[i]
        passengers += b[i]
        capacity = max(capacity, passengers)

    print(capacity)

if __name__ == ""__main__"":
    main()","1.0"
"c0e7c591-cf6d-49a7-898f-50c883fe3707","
def count_three_digit_numbers(n):
  if n < 100:
    return 0
  n = str(n)
  count = 0
  for i in range(len(n) - 2):
    for j in range(i + 1, len(n) - 1):
      for k in range(j + 1, len(n)):
        if int(n[i] + n[j] + n[k]) >= 100:
          count += 1
  return count

n = int(input())
print(count_three_digit_numbers(n))
","1.0"
"c0e7c591-cf6d-49a7-898f-50c883fe3707","
def count_three_digit_numbers(n):
    count = 0
    for i in range(100, -1, -1):
        if n >= i * 100 and n < (i + 1) * 100:
            n_str = str(n)
            if n_str.count(str(i)) <= 2:
                if n_str.count(str(i)) == 1:
                    if n_str[::-1].count(str(i)) == 1:
                        count += 1
                else:
                    count += len(set(n_str) - set(str(i) * 3))
            n //= i
    return count

n = int(input())
print(count_three_digit_numbers(n))
","1.0"
"c0e7c591-cf6d-49a7-898f-50c883fe3707","def count_three_digit_numbers(N):
    count = 0
    for i in range(100, 1000):
        if str(i) in str(N):
            count += 1
    return count

N = int(input())
print(count_three_digit_numbers(N))","1.0"
"ba76fdac-e782-449b-91a3-c05bce9c93bd","a, b = map(int, input().split())
print(a + b)","1.0"
"ba76fdac-e782-449b-91a3-c05bce9c93bd","
a, b = map(int, input().split())
print(a + b)
","1.0"
"ba76fdac-e782-449b-91a3-c05bce9c93bd","a, b = map(int, input().split())
print(a + b)","1.0"
"4849bab6-fd74-47ab-b036-ee7436a155ab","
nums = input().split()
print(int(nums[0]) * int(nums[1]))
","1.0"
"4849bab6-fd74-47ab-b036-ee7436a155ab","
a, b = map(int, input().split())
print(a * b)
","1.0"
"4849bab6-fd74-47ab-b036-ee7436a155ab","def main():
    a, b = map(int, input().split())
    print(a * b)

if __name__ == ""__main__"":
    main()","1.0"
"19c885d8-a7aa-480c-946b-9742a59e1d41","
m1, m2, m3 = map(int, input().split())
print(abs(m1 - m2) + abs(m2 - m3))
","1.0"
"19c885d8-a7aa-480c-946b-9742a59e1d41","
def min_distance(m1, m2, m3):
    arr = sorted([m1, m2, m3])
    return sum(range(arr[0])) + sum(range(arr[-1], arr[-1] + len(arr) - arr.index(arr[-1])))

m1, m2, m3 = map(int, input().split())
print(min_distance(m1, m2, m3))
","1.0"
"19c885d8-a7aa-480c-946b-9742a59e1d41","def main():
    m1, m2, m3 = map(int, input().split())
    result = max(m1, m2, m3) - min(m1, m2, m3)
    print(result)

if __name__ == ""__main__"":
    main()","1.0"
"b436a20f-3378-407b-9d0c-adf4962d847a","
n, z = map(int, input().split())
s = input()
res = ''
for i in range(n):
  if int(s[i]) <= z:
    res += s[:i] + str(z) + s[i:]
    break
if len(res) == 0:
  res = s + str(z)
print(res)
","1.0"
"b436a20f-3378-407b-9d0c-adf4962d847a","
n, z = map(int, input().split())
num = input()
max_num = str(int(num[:1]) + 9) + num[1:]
for i in range(1, len(num)):
    max_num = max(max_num, str(int(num[:i]) + z + (10 ** i - 1) + num[i:]))
print(max_num)
","1.0"
"b436a20f-3378-407b-9d0c-adf4962d847a","def main():
    n, z = map(int, input().split())
    num = input()
    max_num = """"
    for i in range(len(num) + 1):
        if i == len(num):
            max_num = num + str(z)
        elif z > int(num[i]):
            max_num = num[:i] + str(z) + num[i:]
            break
        else:
            max_num = num
    print(max_num)

if __name__ == ""__main__"":
    main()","1.0"
"db113d71-211d-446c-8cc7-3fa4c4772bf5","
n, m = map(int, input().split())
order = []
for i in range(n):
    order.extend([2 * i + n + 1, 2 * i + 1, 2 * i + n + 2, 2 * i + 2])
print(*order[:m])
","1.0"
"db113d71-211d-446c-8cc7-3fa4c4772bf5","
def clear_airbus(n, m):
    seats = list(range(1, m+1))
    window_seats = [2*i for i in range(1, n+1)] + [2*i for i in range(1, n+1)]
    for seat in window_seats:
        seats.remove(seat)
    for i in range(1, n+1):
        for j in range(i+1, n+1):
            seats[i*2 - j*2] = seats[i*2 - j*2] + (n - j + 1) * (j - i)
    for i in range(n-1, -1, -1):
        for j in range(i+1, n):
            seats[seats[i*2 + j*2]] = seats[i*2 + j*2] + (n - j) * (j - i)
        seats[seats[i*2]] = seats[i*2] + (n - i)
    return seats

n, m = map(int, input().split())
print(*clear_airbus(n, m))
","1.0"
"db113d71-211d-446c-8cc7-3fa4c4772bf5","def main():
    n, m = map(int, input().split())
    seats = [[0] * 2 for _ in range(n)]
    order = [0] * m

    for i in range(m):
        row = i // 2
        col = i % 2
        if row < n:
            seats[row][col] = i + 1
        else:
            row -= n
            seats[row][col ^ 1] = i + 1

    for i in range(n):
        for j in range(2):
            for k in range(2):
                if order[i * 4 + j * 2 + k] == 0:
                    order[i * 4 + j * 2 + k] = seats[i][j ^ k]

    print(*order)

if __name__ == ""__main__"":
    main()","1.0"
"9f7a68f4-0125-4e43-a65d-6c66ee1629ec","
field = []
for _ in range(2):
    field.append(input())
tags = {}
for i, r in enumerate(field):
    for j, c in enumerate(r):
        tags[(i, j)] = c
field[0] = field[1][:]
ans = 0
while field[0] != field[1]:
    for i, r in enumerate(field):
        for j, c in enumerate(r):
            for ii, rr in enumerate(field):
                for jj, cc in enumerate(rr):
                    if c == cc and (i != ii or j != jj):
                        field[ii][jj] = c
                        field[i][j] = c
                        tags[(ii, jj)] = c
                        tags[(i, j)] = c
                        ans += 1
print(ans)
","1.0"
"9f7a68f4-0125-4e43-a65d-6c66ee1629ec","
def paired_tag(board):
    board = list(board)
    count = {}
    for cell in board:
        if cell in count:
            count[cell] += 1
        else:
            count[cell] = 1

    min_count = min(count.values())
    moves = 0

    while True:
        swaps = 0
        for i in range(2):
            for j in range(2):
                if board[i][j] in count and count[board[i][j]] > 1:
                    if board[i][j] == board[(i+1)%2][(j+1)%2]:
                        board[(i+1)%2][(j+1)%2], board[i][j] = board[i][j], board[(i+1)%2][(j+1)%2]
                        swaps += 1
                        count[board[(i+1)%2][(j+1)%2]] -= 1
                        count[board[i][j]] -= 1
                        if count[board[(i+1)%2][(j+1)%2]] == min_count:
                            moves += 1
                    if board[i][j] == board[(i+1)%2][j]:
                        board[(i+1)%2][j], board[i][j] = board[i][j], board[(i+1)%2][j]
                        swaps += 1
                        count[board[(i+1)%2][j]] -= 1
                        count[board[i][j]] -= 1
                        if count[board[(i+1)%2][j]] == min_count:
                            moves += 1

        if swaps == 0:
            break

    return moves

board = input().strip().upper() + '\n' + input().strip().upper()
print(paired_tag(board))
","1.0"
"9f7a68f4-0125-4e43-a65d-6c66ee1629ec","def min_moves(field):
    moves = 0
    while len(set(field)) > 1:
        if len(set(field[0])) == 1 and len(set(field[1])) == 1:
            field[0] = field[1]
            moves += 1
        else:
            if field[0][0] != field[0][1]:
                field[0] = field[0][1] + field[0][0]
                moves += 1
            else:
                field[1] = field[1][1] + field[1][0]
                moves += 1
    return moves

field = [input(), input()]
print(min_moves(field))","1.0"
"51da05db-a06f-4b98-98be-db263befcf2e"," content is not safe and I can't generate an answer for your request","1.0"
"51da05db-a06f-4b98-98be-db263befcf2e","
def count_pairs(n, d, weights):
    weights.sort()
    count = 0
    for i in range(n):
        for j in range(i+1, n):
            if abs(weights[i] - weights[j]) <= d:
                count += 1
    return count // 2

n, d = map(int, input().split())
weights = list(map(int, input().split()))
print(count_pairs(n, d, weights))
","1.0"
"51da05db-a06f-4b98-98be-db263befcf2e","def count_pairs(n, d, weights):
    pairs = 0
    for i in range(n):
        for j in range(i + 1, n):
            if abs(weights[i] - weights[j]) <= d:
                pairs += 1
    return pairs

n, d = map(int, input().split())
weights = list(map(int, input().split()))
print(count_pairs(n, d, weights))","1.0"
"cf10d30e-74e0-4d68-b804-84b51b2900e3","a=list(map(int,input().split()))
print('NOT ROBOT'if sum(a)%2==0 else'ROBOT')","1.0"
"cf10d30e-74e0-4d68-b804-84b51b2900e3","
def game():
    n = int(input())
    board = list(map(int, str(n*[1])))
    while True:
        for i in range(len(board)-1):
            if board[i] == board[i+1]:
                board[i:i+2] = [board[i]+board[i+1]]
                break
        else:
            return ""NOT ROBOT"" if len(board) > 1 else ""ROBOT""
        board = list(map(int, str(n*(len(board)-1)+[1])))

print(game())
","1.0"
"cf10d30e-74e0-4d68-b804-84b51b2900e3","def main():
    n = int(input())
    board = [1] * n
    while True:
        if len(set(board)) == 1:
            print(""NOT ROBOT"")
            return
        board = move(board)
        if len(set(board)) == 1:
            print(""ROBOT"")
            return

def move(board):
    freq = {}
    for num in board:
        if num in freq:
            freq[num] += 1
        else:
            freq[num] = 1
    for num, count in freq.items():
        if count >= 2:
            return [num] * (count - 2) + [num * 2] + [x for x in board if x != num]
    return board

if __name__ == ""__main__"":
    main()","1.0"
"dea8d696-205a-4637-aa51-cf7d02c29a02","
n = int(input())
trifles = list(map(int, input().split()))
carpet = []
max_count = 0
for trifle in trifles:
  carpet.append(trifle)
  if len(carpet) == 2:
    if carpet[0] == carpet[1]:
      carpet = []
    else:
      carpet.pop(carpet.index(trifle))
  max_count = max(max_count, len(carpet))
print(max_count)
","1.0"
"dea8d696-205a-4637-aa51-cf7d02c29a02","
def max_on_carpet(n, x):
    on_carpet = []
    max_count = 0
    for i in x:
        if i not in on_carpet:
            on_carpet.append(i)
            max_count = max(max_count, len(on_carpet))
        else:
            pair = on_carpet.pop(on_carpet.index(i))
            on_carpet.append((i, pair))
            max_count = max(max_count, len(on_carpet))
    return max_count

n = int(input())
x = list(map(int, input().split()))
print(max_on_carpet(n, x))
","1.0"
"dea8d696-205a-4637-aa51-cf7d02c29a02","n = int(input())
trifles = list(map(int, input().split()))
trifles_on_carpet = {}
max_trifles_on_carpet = 0

for trifle in trifles:
    if trifle in trifles_on_carpet:
        trifles_on_carpet[trifle] -= 1
        if trifles_on_carpet[trifle] == 0:
            del trifles_on_carpet[trifle]
    else:
        trifles_on_carpet[trifle] = 1
    max_trifles_on_carpet = max(max_trifles_on_carpet, len(trifles_on_carpet))

print(max_trifles_on_carpet)","1.0"
"09441e0b-3a6a-4c17-a1e3-6bec7305e997","
n = int(input())
a = list(map(int, input().split()))

if n == 1:
  print(1)
else:
  b = [a[0]]
  for i in range(1, n):
    if a[i] != a[i - 1]:
      b.append(a[i])
  print(len(b))
","1.0"
"09441e0b-3a6a-4c17-a1e3-6bec7305e997","
n = int(input())
a = list(map(int, input().split()))

if n == 1:
    print(1)
else:
    a.sort()
    i = 0
    j = 0
    count = 0
    while j < n:
        if i == n - 1 or a[i] != a[j]:
            count += 1
            if count > j - i:
                i += 1
            else:
                j += 1
        else:
            i += 1
            j += 1
    print(n - count)
","1.0"
"09441e0b-3a6a-4c17-a1e3-6bec7305e997","def min_elements(arr):
    n = len(arr)
    if n == 1:
        return 1
    min_diff = float('inf')
    for i in range(1, n):
        diff = abs(arr[i] - arr[i-1])
        if diff < min_diff:
            min_diff = diff
    count = 0
    for i in range(1, n):
        if abs(arr[i] - arr[i-1]) == min_diff:
            count += 1
    return count + 1

n = int(input())
a = list(map(int, input().split()))
print(min_elements(a))","1.0"
"d29dd9ba-3ac3-462f-b2dd-7531b3f01171","
g, c, h = map(int, input().split())
max_cars = min(g, (c + h) // 2) * 2 + min(g, (c + h) // 2)
print(max_cars)
","1.0"
"d29dd9ba-3ac3-462f-b2dd-7531b3f01171","
def correct_composition(g, c, h):
    max_length = min(g, h + c)
    if max_length <= 2:
        return max_length
    else:
        return max_length + (max_length - 2 - (g - 1) // 2) * 2

g, c, h = map(int, input().split())
print(correct_composition(g, c, h))
","1.0"
"d29dd9ba-3ac3-462f-b2dd-7531b3f01171","def max_cars(g, c, h):
    if g == 2:
        return 2 + min(c, h)
    else:
        return 2 + (g - 2) * 2 + min(c, h)

g, c, h = map(int, input().split())
print(max_cars(g, c, h))","1.0"
"f7c03795-0238-4dc2-a83e-5674ef35ad88","x, y, a, b = map(int, input().split())
print((b // x - (a - 1) // x) * (b // y - (a - 1) // y))","1.0"
"f7c03795-0238-4dc2-a83e-5674ef35ad88","
def tictactoe(x, y, a, b):
    crosses = set()
    zeros = set()
    for i in range(x, y+1):
        crosses.add(i) if str(i) in 'XOX' else zeros.add(i)
        crosses.add(2*i) if str(2*i) in 'XOX' else zeros.add(2*i)
    intersect = crosses & zeros
    return sum(intersect)

a, b = map(int, input().split())
print(tictactoe(1, a//2, a, b))
","1.0"
"f7c03795-0238-4dc2-a83e-5674ef35ad88","def gcd(a, b):
    while b != 0:
        a, b = b, a % b
    return a

def lcm(a, b):
    return a * b // gcd(a, b)

def solve(x, y, a, b):
    lcm_xy = lcm(x, y)
    count = 0
    for i in range(a, b + 1):
        if i % x == 0 and i % y == 0:
            count += 1
    return count

x, y, a, b = map(int, input().split())
result = solve(x, y, a, b)
print(result)","1.0"
"a137070a-e421-4d52-9cf8-8a31ac9eb188","
n=int(input())
x=[]
y=[]
for i in range(n):
    a,b,c,d=map(int,input().split())
    x.extend([a,c])
    y.extend([b,d])
x.sort()
y.sort()
print('YES'if n%2==0 and x[n//2-1]==x[n//2] and y[n//2-1]==y[n//2] else 'NO')
","1.0"
"a137070a-e421-4d52-9cf8-8a31ac9eb188","
def is_square(rectangles):
    x_min, y_min, x_max, y_max = float('inf'), float('inf'), float('-inf'), float('-inf')
    for x1, y1, x2, y2 in rectangles:
        x_min = min(x_min, x1)
        y_min = min(y_min, y1)
        x_max = max(x_max, x2)
        y_max = max(y_max, y2)

    if x_max - x_min != y_max - y_min or len(set(rectangles)) != 4:
        return False

    for i in range(x_min, x_max):
        for j in range(y_min, y_max):
        # Check if all points are covered by exactly 4 rectangles
            if rectangles.count((i, j, i, j)) != 4:
                return False

    return True

n = int(input())
rectangles = []
for _ in range(n):
    x1, y1, x2, y2 = map(int, input().split())
    rectangles.append((x1, y1, x2, y2))

print(""YES"" if is_square(rectangles) else ""NO"")
","1.0"
"a137070a-e421-4d52-9cf8-8a31ac9eb188","def main():
    n = int(input())
    rectangles = []
    for _ in range(n):
        x1, y1, x2, y2 = map(int, input().split())
        rectangles.append((x1, y1, x2, y2))

    x_min = min(x1 for x1, _, _, _ in rectangles)
    x_max = max(x2 for _, _, x2, _ in rectangles)
    y_min = min(y1 for _, y1, _, _ in rectangles)
    y_max = max(y2 for _, _, _, y2 in rectangles)

    area_rectangles = sum((x2 - x1) * (y2 - y1) for x1, y1, x2, y2 in rectangles)
    area_square = (x_max - x_min) * (y_max - y_min)

    if area_rectangles == area_square:
        print(""YES"")
    else:
        print(""NO"")

if __name__ == ""__main__"":
    main()","1.0"
"83fac1d9-f429-4153-9332-5af26eae0378","
path = input()
exist = []
time = 0
for i in path:
  if i in exist:
    time += 1
  else:
    time += 5
    exist.append(i)
print(time)
","1.0"
"83fac1d9-f429-4153-9332-5af26eae0378","
def travel_time(path):
    x, y, time = 0, 0, 0
    for move in path:
        if move == 'U':
            time += 4 * (y + 1) if (y + 1, x) not in ((i, j) for i, j in enumerate(path)) else y + 1
            y += 1
        elif move == 'D':
            time += 4 * y if (y - 1, x) not in ((i, j) for i, j in enumerate(path)) else y - 1
            y -= 1
        elif move == 'L':
            time += 4 * (x + 1) if (y, x + 1) not in ((i, j) for i, j in enumerate(path)) else x + 1
            x -= 1
        elif move == 'R':
            time += 4 * x if (y, x - 1) not in ((i, j) for i, j in enumerate(path)) else x - 1
            x += 1
    return time

path = input()
print(travel_time(path))
","1.0"
"83fac1d9-f429-4153-9332-5af26eae0378","def main():
    path = input()
    x, y = 0, 0
    visited = set([(0, 0)])
    time = 0

    for move in path:
        if move == 'U':
            y += 1
        elif move == 'D':
            y -= 1
        elif move == 'L':
            x -= 1
        elif move == 'R':
            x += 1

        if (x, y) in visited:
            time += 1
        else:
            visited.add((x, y))
            time += 5

    print(time)


if __name__ == '__main__':
    main()","1.0"
"0f42de72-e8d1-4f41-8797-90a6cd184af9","x, y, z = map(int, input().split())
print(3 * x + (x + 2) * y + (x + 2 + 7) * z)","1.0"
"0f42de72-e8d1-4f41-8797-90a6cd184af9","
x, y, z = map(int, input().split())
cake_price = 3
marshmallow_price = cake_price + 2
chocolate_price = marshmallow_price + 7
total_cost = x * cake_price + y * marshmallow_price + z * chocolate_price
print(total_cost)
","1.0"
"0f42de72-e8d1-4f41-8797-90a6cd184af9","def main():
    x, y, z = map(int, input().split())
    cake_price = 3
    marshmallow_price = cake_price + 2
    chocolate_price = marshmallow_price + 7
    total_cost = x * cake_price + y * marshmallow_price + z * chocolate_price
    print(total_cost)

if __name__ == '__main__':
    main()","1.0"
"11d7d14b-eb4a-4dd7-94c1-67a03264c424","
n = int(input())
numbers = list(map(int, input().split()))
even_sum = 0
odd_sum = 0
for number in numbers:
  if number % 2 == 0:
    even_sum += number
  else:
    odd_sum += number
if even_sum > odd_sum:
  print(even_sum)
else:
  print(even_sum + max(odd_sum - even_sum, 0))
","1.0"
"11d7d14b-eb4a-4dd7-94c1-67a03264c424","
n = int(input())
numbers = list(map(int, input().split()))
even_sum = 0
for number in numbers:
 if number % 2 == 0:
 even_sum += number
 if even_sum % 2 == 1:
 even_sum += numbers.pop(numbers.index(min(numbers)))
 even_sum += min(numbers)
 print(even_sum)
","1.0"
"11d7d14b-eb4a-4dd7-94c1-67a03264c424","def main():
    n = int(input())
    numbers = list(map(int, input().split()))
    numbers.sort(reverse=True)
    even_sum = 0
    odd_sum = 0
    for num in numbers:
        if num % 2 == 0:
            even_sum += num
        else:
            odd_sum += num
    if even_sum % 2 == 0:
        print(even_sum)
    else:
        print(even_sum - odd_sum)

if __name__ == '__main__':
    main()","1.0"
"7d8fcbed-1f16-4d19-8a17-6560267bc64c","``` content is not safe and I can't generate an answer for your request","1.0"
"7d8fcbed-1f16-4d19-8a17-6560267bc64c","
def penguin_battle(n, m, k):
    hits = 0
    tentacles = m
    while tentacles > 0:
        if tentacles >= n:
            tentacles -= n
        else:
            tentacles = 0
        if tentacles > 0:
            tentacles -= k
            hits += 1
    return ""NO"" if tentacles > 0 else str(hits)

n, m, k = map(int, input().split())
print(penguin_battle(n, m, k))
","1.0"
"7d8fcbed-1f16-4d19-8a17-6560267bc64c","def main():
    n, m, k = map(int, input().split())
    hits = 0
    while m > 0:
        m -= n
        hits += 1
        m += k
    if m <= 0:
        print(hits)
    else:
        print(""NO"")

if __name__ == ""__main__"":
    main()","1.0"
"853bea78-6aa0-4fcf-8c5a-5f278603c518","n = int(input())
k = int(input())
x = int(input())
y = int(input())
summ = x * min(n, k) + y * max(0, n - k)
print(summ)","1.0"
"853bea78-6aa0-4fcf-8c5a-5f278603c518","
N, K, X, Y = map(int, input().split('\n'))
cost = sum([X if i <= K else Y for i in range(1, N+1)])
print(cost)
","1.0"
"853bea78-6aa0-4fcf-8c5a-5f278603c518","N = int(input())
K = int(input())
X = int(input())
Y = int(input())

cost = 0
for i in range(1, N + 1):
    if i <= K:
        cost += X
    else:
        cost += Y

print(cost)","1.0"
"aeb122ea-bb7f-44ee-93c8-65ead3d4f5f3","n,k=[int(x)for x in input().split()]
ans=0
for i in range(1,n+1):
    if ans*5+k<=240:
        ans+=1
    else:
        break
print(ans)","1.0"
"aeb122ea-bb7f-44ee-93c8-65ead3d4f5f3","
def main():
    n, k = map(int, input().split())
    rounds = list(range(1, n+1))
    for i in range(n-1, -1, -1):
        if sum(5*j for j in rounds[:i]) <= k:
            print(len(rounds[:i]))
            return
    print(n)

main()
","1.0"
"aeb122ea-bb7f-44ee-93c8-65ead3d4f5f3","def main():
    n, k = map(int, input().split())
    time = 0
    rounds = 0
    for i in range(1, n + 1):
        time += 5 * i
        if time + k <= 240:
            rounds += 1
        else:
            break
    print(rounds)

if __name__ == ""__main__"":
    main()","1.0"
"8381a3f6-aaba-448f-b65f-50117785adf7","
n,m,a = map(int,input().split())
print((n+a-1)//a * (m+a-1)//a)
","1.0"
"8381a3f6-aaba-448f-b65f-50117785adf7","
def gcd(a, b):
    while b:
        a, b = b, a % b
    return a

n, m, a = map(int, input().split())
tiles = (n * m + a - 1) // a
g = gcd(tiles, a)
return (tiles // g) * g

print(gcd(n, m) * min((n + m) // gcd(n, m), (n * m) // gcd(n, m)))
","1.0"
"8381a3f6-aaba-448f-b65f-50117785adf7","def calculate_tiles(n, m, a):
    return ((n + a - 1) // a) * ((m + a - 1) // a)

n, m, a = map(int, input().split())
print(calculate_tiles(n, m, a))","1.0"
"5895fc4e-b515-464a-a0e2-697d86bf8783","
n = int(input())
ratings = list(map(int, input().split()))
minimum = min(ratings)
maximum = max(ratings)
for i in range(n):
  if ratings[i] == maximum:
    ratings[i] = minimum
print(*ratings)
","1.0"
"5895fc4e-b515-464a-a0e2-697d86bf8783","
def private_revenge(n, ratings):
    corrected = []
    for rating in ratings:
        corrected.append(max(rating, min(rating)))
    return corrected

n = int(input())
ratings = list(map(int, input().split()))
print(*private_revenge(n, ratings))
","1.0"
"5895fc4e-b515-464a-a0e2-697d86bf8783","def main():
    n = int(input())
    ratings = list(map(int, input().split()))

    min_rating = min(ratings)
    max_rating = max(ratings)

    corrected_ratings = [min_rating if rating == max_rating else rating for rating in ratings]

    print(*corrected_ratings)

if __name__ == ""__main__"":
    main()","1.0"
"d949e12a-1807-4b82-a4ab-c1a178a79888","
def find_kth_gloria(k):
    ans = 0
    num = 10**(9)
    for i in range(82, -1, -1):
        for j in range(10):
            num -= 1
            if not num % 10:
                ans += 1
            if ans == k:
                return num

    return num


k = int(input())
print(find_kth_gloria(k))
","1.0"
"d949e12a-1807-4b82-a4ab-c1a178a79888","
def isAmazing(n):
    return sum(int(digit) for digit in str(n)) == 10

def kthAmazing(k):
    amazing_numbers = set()
    for i in range(1, 10001):
        if isAmazing(i):
            amazing_numbers.add(i)
    amazing_numbers = sorted(list(amazing_numbers))
    return amazing_numbers[k - 1]

k = int(input())
print(kthAmazing(k))
","1.0"
"d949e12a-1807-4b82-a4ab-c1a178a79888","def find_glorias_number(k):
    amazing_numbers = []
    for num in range(1, 1000000):
        digit_sum = sum(int(digit) for digit in str(num))
        if digit_sum == 10:
            amazing_numbers.append(num)
        if len(amazing_numbers) == k:
            break
    return amazing_numbers[-1]

k = int(input())
print(find_glorias_number(k))","1.0"
"5eebb219-dec9-41ce-83c6-efc4a4670acc","
letter = input()
keyboard = ""qwertyuiopasdfghjklzxcvbnm""
index = keyboard.find(letter)
if index == len(keyboard) - 1:
  print(keyboard[0])
else:
  print(keyboard[index + 1])
","1.0"
"5eebb219-dec9-41ce-83c6-efc4a4670acc","
def find_right_letter(letter):
    alphabet = ""qwertyuiopasdfghjklzxcvbnm""
    index = alphabet.index(letter)
    return alphabet[(index + 1) % 26]

letter = input()
print(find_right_letter(letter))
","1.0"
"5eebb219-dec9-41ce-83c6-efc4a4670acc","def main():
    letter = input()
    keyboard = ""qwertyuiopasdfghjklzxcvbnm""
    index = keyboard.index(letter)
    next_index = (index + 1) % len(keyboard)
    print(keyboard[next_index])

if __name__ == ""__main__"":
    main()","1.0"
"39674b7f-1b5d-40b8-aa5c-02f2ac4a2a4b","
n = int(input())
binary = bin(n)[2:]
binary = '0' * (4 - len(binary)) + binary
for i in range(5):
  for j in range(4):
    if i == 0 or i == 4:
      print('#', end='')
    elif j == 0 or j == 3:
      if binary[j] == '1':
        print('#', end='')
      else:
        print(' ', end='')
    else:
      if binary[j] == '1':
        print('#', end='')
      else:
        print(' ', end='')
  print()
","1.0"
"39674b7f-1b5d-40b8-aa5c-02f2ac4a2a4b","
def print_binary(n):
    binary = format(n, '040b')
    for i in range(5):
        print(binary[i*8:(i+1)*8])

for i in range(5):
    print_binary(i)
print_binary(7)
print_binary(8)
","1.0"
"39674b7f-1b5d-40b8-aa5c-02f2ac4a2a4b","def print_binary(n):
    binary = bin(n)[2:]
    binary = binary.zfill(16)
    for i in range(0, 16, 4):
        row = """"
        for j in range(4):
            if binary[i + j] == '1':
                row += '#'
            else:
                row += ' '
        print(row)

n = int(input())
print_binary(n)","1.0"
"02bc07a3-d63a-4896-b585-e74c06bfc7f2","
n, x = map(int, input().split())
found = list(map(int, input().split()))
sum_found = sum(found)
missing = abs(sum_found)
if missing > x * n:
  print(missing - x * n)
else:
  print(0)
","1.0"
"02bc07a3-d63a-4896-b585-e74c06bfc7f2","
def marty():
    n, x = map(int, input().split())
    tablets = list(map(int, input().split()))
    tablets_sum = sum(tablets)
    missing = abs(tablets_sum)
    if missing % x != 0:
        return -1
    else:
        return missing // x - n

print(marty())
","1.0"
"02bc07a3-d63a-4896-b585-e74c06bfc7f2","def main():
    n, x = map(int, input().split())
    tablets = list(map(int, input().split()))

    sum_tablets = sum(tablets)

    if sum_tablets == 0:
        print(0)
    else:
        if abs(sum_tablets) <= x:
            print(1)
        else:
            print(abs(sum_tablets) // x + 1)

if __name__ == ""__main__"":
    main()","1.0"
"6824fb27-2339-421d-85db-60758b59cddc","
def get_min_flasks(n):
  if n == 1:
    return 1
  flasks = 0
  while n > 1:
    if n % 5 == 0:
      n //= 5
      flasks += 1
    elif n % 2 == 0:
      n //= 2
      flasks += 1
    else:
      return -1
  return flasks

n = int(input())
print(get_min_flasks(n))
","1.0"
"6824fb27-2339-421d-85db-60758b59cddc","
def min_flasks(n):
    flasks = [0, 1, 5]
    for i in range(3, n+1):
        flasks.append(min(flasks[i-1]+1, flasks[i-2]*2, flasks[i-5]*5))
    return flasks[n]

n = int(input())
print(min_flasks(n))
","1.0"
"6824fb27-2339-421d-85db-60758b59cddc","def miracle_remedies():
    n = int(input())
    count = 0
    while n > 0:
        if n >= 5:
            n -= 5
        elif n >= 2:
            n -= 2
        else:
            n -= 1
        count += 1
    print(count)

miracle_remedies()","1.0"
"af37658e-d46e-45db-9ee2-ea44a450db89","
k, n, s, p = map(int, input().split())
print((k*n+s-1)//s)
","1.0"
"af37658e-d46e-45db-9ee2-ea44a450db89","
k, n, s, p = map(int, input().split())
packs = (k * n * s) // p
if (k * n * s) % p != 0:
    packs += 1
print(packs)
","1.0"
"af37658e-d46e-45db-9ee2-ea44a450db89","def main():
    k, n, s, p = map(int, input().split())
    total_boats = k * n
    total_sheets = total_boats // s
    if total_boats % s != 0:
        total_sheets += 1
    packs = total_sheets // p
    if total_sheets % p != 0:
        packs += 1
    print(packs)

if __name__ == ""__main__"":
    main()","1.0"
"770952ee-5595-4690-9f1a-a172955624fa","
n = int(input())
a = list(map(int, input().split()))
teams = {}
for i in range(n):
  if a[i] not in teams:
    teams[a[i]] = []
  teams[a[i]].append(i)
max_team_size = 0
for team in teams.values():
  max_team_size = max(max_team_size, len(team))
print(max_team_size)
","1.0"
"770952ee-5595-4690-9f1a-a172955624fa","
n = int(input())
a = list(map(int, input().split()))
a.sort()
count = 1
team = []
for i in range(n):
    if a[i] != team[-1] if team:
        count += 1
        team = [a[i]]
    else:
        team.append(a[i])
print(count)
","1.0"
"770952ee-5595-4690-9f1a-a172955624fa","def main():
    n = int(input())
    badges = list(map(int, input().split()))

    teams = []
    for badge in badges:
        assigned = False
        for team in teams:
            if badge not in team:
                team.add(badge)
                assigned = True
                break
        if not assigned:
            teams.append({badge})

    print(len(teams))

if __name__ == ""__main__"":
    main()","1.0"
"e02095cd-3f62-4005-a067-a9da53d342bb","
n = int(input())
a = list(map(int, input().split()))
b = list(map(int, input().split()))
r = 0
for i in range(n):
    if a[i] == b[i]:
        r += a[i]
print(r)
","1.0"
"e02095cd-3f62-4005-a067-a9da53d342bb","
n = int(input())
a = list(map(int, input().split()))
b = list(map(int, input().split()))

dist = 0
for i in range(n):
    if a[i] == b[i]:
        dist += a[i]

print(dist)
","1.0"
"e02095cd-3f62-4005-a067-a9da53d342bb","def main():
    n = int(input())
    a = list(map(int, input().split()))
    b = list(map(int, input().split()))

    distance = 0
    for i in range(n):
        if a[i] == b[i]:
            distance += a[i]

    print(distance)

if __name__ == ""__main__"":
    main()","1.0"
"a40047cc-77a1-4a37-9e28-a61947b07df8","n=int(input())
a=sorted([int(i)for i in input().split()])
b=[int(i)for i in input().split()]
b.sort()
ans=0
for i in range(n):
    ans+=abs(a[i]-b[i])
print(ans)","1.0"
"a40047cc-77a1-4a37-9e28-a61947b07df8","
n = int(input())
boys = list(map(int, input().split()))
girls = list(map(int, input().split()))

boys.sort()
girls.sort()

total_diff = 0
for i in range(n):
    total_diff += abs(boys[i] - girls[i])

print(total_diff)
","1.0"
"a40047cc-77a1-4a37-9e28-a61947b07df8","def main():
    n = int(input())
    boys = list(map(int, input().split()))
    girls = list(map(int, input().split()))
    boys.sort()
    girls.sort()
    total_diff = 0
    for i in range(n):
        total_diff += abs(boys[i] - girls[i])
    print(total_diff)

if __name__ == ""__main__"":
    main()","1.0"
"027966cc-bba6-4e6a-83bf-ea3f730fb59d","n=int(input())
s=input()
if s[0]==s[n-1] and n%2==0:print(1)
else:print((n+1)//2)","1.0"
"027966cc-bba6-4e6a-83bf-ea3f730fb59d","
def min_tracks(n, s):
    track_set = set()
    for i in range(n//2 + 1):
        for j in range(i, n - i):
            track = s[i:j] + s[j:]
            if track in track_set:
                return len(track_set)
            track_set.add(track)
    return len(track_set) + 1

n = int(input())
s = input()
print(min_tracks(n, s))
","1.0"
"027966cc-bba6-4e6a-83bf-ea3f730fb59d","def naughty_choir(n, s):
    dp = [[float('inf')] * n for _ in range(n)]
    for i in range(n):
        dp[i][i] = 1
        if i < n - 1 and s[i] == s[i + 1]:
            dp[i][i + 1] = 1
    for length in range(2, n):
        for i in range(n - length):
            j = i + length
            for k in range(i, j):
                if s[i] == s[k + 1] and s[j] == s[k]:
                    dp[i][j] = min(dp[i][j], dp[i][k] + dp[k + 1][j])
                else:
                    dp[i][j] = min(dp[i][j], dp[i][k] + dp[k + 1][j] + 1)
    return dp[0][n - 1]

n = int(input())
s = input()
print(naughty_choir(n, s))","1.0"
"c2081cad-a682-43e2-8960-081ef8963a37","
a, b = map(int, input().split())
print(min(a, b), max(a - min(a, b), b - min(a, b)))
","1.0"
"c2081cad-a682-43e2-8960-081ef8963a37","
def may_day(a, b):
    red_pairs = a // 2
    blue_pairs = b // 2
    leftovers = min(red_pairs, blue_pairs)
    different_flags = red_pairs + blue_pairs - leftovers
    same_flags = leftovers * 2
    return different_flags, same_flags

a, b = map(int, input().split())
print(*may_day(a, b))
","1.0"
"c2081cad-a682-43e2-8960-081ef8963a37","def main():
    a, b = map(int, input().split())
    children_with_different_flags = min(a, b)
    children_with_same_flags = abs(a - b)
    print(children_with_different_flags, children_with_same_flags)

if __name__ == ""__main__"":
    main()","1.0"
"17c6577a-b831-485d-ba22-fb47923019b4","def napkin(n: int):
    if n % 2 != 0: n += 1
    r = list(range(n))
    s = [['0'] * (n*2-1) for i in range(n)]
    for i in range(n):
        for j in range(n*2-1):
            a, b = (n*2-1)//2-abs(i-n//2), abs(j - n*2//2)
            if b <= a: s[i][j] = str(min(r[a - b], r[a + b]))
    return '\n'.join(' '.join(row).strip() for row in s)

n = int(input())
print(napkin(n))","1.0"
"17c6577a-b831-485d-ba22-fb47923019b4","
def print_napkin(n):
    for i in range(n // 2 + 1):
        print('  ' + ' '.join(str(j) for j in range(n - 2 * i, n - 2 * i - 2 - i, -1)) + '  ')
    for i in range(n // 2):
        print('  ' + ' '.join(str(j) for j in range(i, n - i)) + '  ')

n = int(input())
print_napkin(n)
","1.0"
"17c6577a-b831-485d-ba22-fb47923019b4","def print_napkin(n):
    for i in range(n):
        for j in range(n - i - 1):
            print("" "", end="""")
        for j in range(2 * i + 1):
            print(j // 2, end="" "")
        print()
    for i in range(n - 1):
        for j in range(i + 1):
            print("" "", end="""")
        for j in range(2 * (n - i - 1) - 1):
            print((n - i - 1) - (j // 2), end="" "")
        print()

n = int(input())
print_napkin(n)","1.0"
"42d47feb-cba9-4d18-8ccc-2c20605db82d","n,m=map(int,input().split())
print((n-2)*(m-2)+2)","1.0"
"42d47feb-cba9-4d18-8ccc-2c20605db82d","
def max_horizontality(n, m):
    if n < 2 or m < 2:
        return 0

    max_h = min(n, m)
    for i in range(2, min(n, m) + 1):
        h = 0
        for j in range(1, n // i + 1):
            if (n % i == 0) and (m >= i * (j - 1)):
                h += i
        max_h = max(max_h, h)

    return max_h * max_h

n, m = map(int, input().split())
print(max_horizontality(n, m))
","1.0"
"42d47feb-cba9-4d18-8ccc-2c20605db82d","def main():
    n, m = map(int, input().split())
    if n > m:
        n, m = m, n
    max_horizontality = 0
    for i in range(1, n + 1):
        for j in range(2, m + 1):
            if i * j <= n * m:
                max_horizontality = max(max_horizontality, i * (m - j + 1) - (n - i + 1) * j)
    print(max_horizontality)

if __name__ == ""__main__"":
    main()","1.0"
"e16baab9-5d32-479d-877e-04518a247380","
n, r = map(int, input().split())
distances = list(map(int, input().split()))

count = 0
i = 0
j = 1
while j < n:
  if distances[j] - distances[i] > r:
    count += n - j
    i += 1
  else:
    j += 1
print(count)
","1.0"
"e16baab9-5d32-479d-877e-04518a247380","
def gcd(a, b):
    while b:
        a, b = b, a % b
    return a

n, r = map(int, input().split())
dist = list(map(int, input().split()))
dist.append(r)
dist.sort()
count = 0
for i in range(n):
    for j in range(i+1, n):
        if gcd(dist[i]-dist[j], dist[j]-dist[i]) == 1:
            count += 1
print(count)
","1.0"
"e16baab9-5d32-479d-877e-04518a247380","def count_pairs(n, r, distances):
    pairs = 0
    left = 0
    for right in range(n):
        while distances[right] - distances[left] > r:
            left += 1
        pairs += right - left
    return pairs

n, r = map(int, input().split())
distances = list(map(int, input().split()))

result = count_pairs(n, r, distances)
print(result)","1.0"
"bb650c26-e5ff-4faf-9447-76e7e6965b4d","
n, k = map(int, input().split())
a = list(map(int, input().split()))

if k >= n:
  print(sum(abs(x) for x in a))
else:
  total = 0
  for i in range(n):
    if i < k:
      total += abs(a[i])
    else:
      total += a[i]
  print(total)
","1.0"
"bb650c26-e5ff-4faf-9447-76e7e6965b4d","
def max_sum(n, k, arr):
    dp = [0] * (n + 1)
    dp[0] = 0
    for i in range(1, n + 1):
        dp[i] = arr[i - 1]
        for j in range(1, min(i, k) + 1):
            dp[i] = max(dp[i], dp[i - j] * -2 + arr[i - j])
    return dp[n]

n, k = map(int, input().split())
arr = list(map(int, input().split()))
print(max_sum(n, k, arr))
","1.0"
"bb650c26-e5ff-4faf-9447-76e7e6965b4d","def main():
    n, k = map(int, input().split())
    a = list(map(int, input().split()))

    a.sort(reverse=True)
    for i in range(k):
        a[i] = -a[i]

    print(sum(a))

if __name__ == ""__main__"":
    main()","1.0"
"7aef5f21-3d8a-4711-9507-28bcb1b28522","a,b=[int(i)for i in input().split()];print(a*b+1)","1.0"
"7aef5f21-3d8a-4711-9507-28bcb1b28522","
def sticks(n):
    sticks = 0
    while n > 0:
        if n & 1:
            sticks += n
            n += 4
        else:
            sticks += 4
            n >>= 2
    return sticks

n = int(input())
print(sticks(n))
","1.0"
"7aef5f21-3d8a-4711-9507-28bcb1b28522","def main():
    n = int(input())
    result = 0
    for i in range(1, n + 1):
        result += 4 * i
    print(result)

if __name__ == ""__main__"":
    main()","1.0"
"a4accdf7-f726-49d2-b19a-aeb590224402","
def count_lucky_numbers(n):
  if n == 1:
    return 10
  else:
    return (count_lucky_numbers(n - 1) * 10 + 1) // 11

n = int(input())
print(count_lucky_numbers(n))
","1.0"
"a4accdf7-f726-49d2-b19a-aeb590224402","
def lucky_numbers(n):
    res = [0] * (10 ** n)
    for i in range(9999, -1, -1):
        for j in range(i, n, 1):
            num = i * 10 ** j
            if num < 10 ** n:
                continue
            res[num] += 1
    return sum(res)

n = int(input())
print(lucky_numbers(n))
","1.0"
"a4accdf7-f726-49d2-b19a-aeb590224402","def count_lucky_numbers(n):
    dp = [[0] * 10 for _ in range(n)]
    for i in range(10):
        dp[0][i] = 1
    for i in range(1, n):
        for j in range(10):
            for k in range(j, 10):
                dp[i][j] += dp[i-1][k]
    return sum(dp[n-1])

n = int(input())
print(count_lucky_numbers(n))","1.0"
"daa00bbb-65ee-4c2e-b966-992c51cbdb0f","
L, V1, V2, T = map(int, input().split())
distance1 = (V1 * T) % L
distance2 = (V2 * T) % L
distance = abs(distance1 - distance2)
print(min(distance, L - distance))
","1.0"
"daa00bbb-65ee-4c2e-b966-992c51cbdb0f","
def gcd(a, b):
    while b:
        a, b = b, a % b
    return a

L, V1, V2, T = map(int, input().split())
d = (V1 - V2) * T
r = (L - d) % L
if r == 0:
    r = L
print(min(r, gcd(r, L)))
","1.0"
"daa00bbb-65ee-4c2e-b966-992c51cbdb0f","def main():
    L, V1, V2, T = map(int, input().split())
    d1 = (V1 + V2) * T
    d2 = L - d1
    if d1 > L:
        d1 %= L
    if d2 > L:
        d2 %= L
    print(min(d1, d2))

if __name__ == ""__main__"":
    main()","1.0"
"87b17251-9fef-4c2f-9cd4-79662ec2957e","
k, a, b = map(int, input().split())
c = (a + abs(a)) % 4 + (b + abs(b)) % 4 + 1
print(min(k // c + 1, 3))
","1.0"
"87b17251-9fef-4c2f-9cd4-79662ec2957e","
def is_valid(pos, flowers, k, a, b):
    for f in flowers:
        if (abs(f - pos[0]) + abs(f - pos[1])) <= k:
            return False
    return True

def count_flowers(k, a, b):
    visited = set()
    count = 0
    pos = (0, 0)

    for _ in range(k):
        if pos[0] + a in visited:
            pos = (pos[0] + 2 * a, pos[1])
        else:
            pos = (pos[0] + a, pos[1])

        if pos[1] + b in visited:
            pos = (pos[0], pos[1] + 2 * b)
        else:
            pos = (pos[0], pos[1] + b)

        if pos not in visited:
            count += 1
            visited.add(pos)

    return count

k, a, b = map(int, input().split())
print(max(count_flowers(k, a, b), count_flowers(-k, a, b), count_flowers(k, -a, b), count_flowers(k, a, -b), count_flowers(k, -a, -b), count_flowers(-k, -a, b), count_flowers(-k, a, -b)) )
","1.0"
"87b17251-9fef-4c2f-9cd4-79662ec2957e","def main():
    k, a, b = map(int, input().split())
    flowers = set()
    x, y = 0, 0
    flowers.add((x, y))
    for _ in range(k):
        x += a
        y -= b
        if (x, y) not in flowers:
            flowers.add((x, y))
        x -= b
        y -= a
        if (x, y) not in flowers:
            flowers.add((x, y))
    print(len(flowers))

if __name__ == ""__main__"":
    main()","1.0"
"70f7c75a-c93c-48c0-84d1-cf78ed51deea","p,d=eval(input())
f=lambda x:x>0
g=lambda x:x==1
h=lambda x:x>1
print(next(map(g,map(h,map(f,cumsum=[0]+[d-sum(map(list(map(int,input().split().__iter__()))[1:],cumsum))for i in range(p)])))))","1.0"
"70f7c75a-c93c-48c0-84d1-cf78ed51deea","
n, dessert = map(int, input().split())
grandma = list(map(int, input().split()))

days = 1
total = 0

while total < dessert:
    if days <= n and sum(grandma[:days]) >= dessert:
        total += sum(grandma[:days])
        del grandma[:days]
        days = 1
    else:
        days += 1

print(days)
","1.0"
"70f7c75a-c93c-48c0-84d1-cf78ed51deea","def main():
    n, t = map(int, input().split())
    a = list(map(int, input().split()))
    p = 80000
    days = 0
    for i in range(n):
        if a[i] < p:
            t -= p - a[i]
            if t <= 0:
                days = i + 1
                break
    print(days)

if __name__ == ""__main__"":
    main()","1.0"
"cfe47bb0-2389-4fae-84c2-9287605fc571","n, k = map(int, input().split())
m = 0
for i in range(n):
    f, t = map(int, input().split())
    m = max(m, f - max(0, t - k))
print(m)","1.0"
"cfe47bb0-2389-4fae-84c2-9287605fc571","``python
def max_pleasure(n, k, relatives):
    pleasure = []
    for i in range(n):
        fi, ti = relatives[i]
        if ti > k:
            ui = fi - (ti - k)
        else:
            ui = fi
        pleasure.append(ui)
    return max(pleasure)

n, k = map(int, input().split())
relatives = []
for _ in range(n):
    relatives.append(list(map(int, input().split())))
print(max_pleasure(n, k, relatives))
```

This code reads the input, calculates the pleasure for each relative, and finds the maximum pleasure among them. The input is read line by line, and the relatives' information is stored in a list of lists. The function `max_pleasure` calculates the pleasure for each relative and returns the maximum value. The output is printed on a single line.","1.0"
"cfe47bb0-2389-4fae-84c2-9287605fc571","def main():
    n, k = map(int, input().split())
    max_pleasure = 0
    for _ in range(n):
        f, t = map(int, input().split())
        pleasure = f if t <= k else f - (t - k)
        max_pleasure = max(max_pleasure, pleasure)
    print(max_pleasure)

if __name__ == ""__main__"":
    main()","1.0"
"43c6f24d-b89c-4762-9dc6-b6c3aaee6f1a","
a = int(input())
b = int(input())
c = int(input())
count = 0
for i in range(a, b + 1):
  if i % c == 0:
    count += 1
print(count)
","1.0"
"43c6f24d-b89c-4762-9dc6-b6c3aaee6f1a","
def gcd(a, b):
    while b:
        a, b = b, a % b
    return a

def count_visits(a, b, c):
    visits = 0
    for year in range(a, b+1):
        if not year % c:
            visits += 1
    return visits

a, b, c = map(int, input().split())
print(count_visits(a, b, c))
","1.0"
"43c6f24d-b89c-4762-9dc6-b6c3aaee6f1a","A = int(input())
B = int(input())
C = int(input())

count = 0
year = A
while year <= B:
    if year % C == 0:
        count += 1
    year += 1

print(count)","1.0"
"bcf4caae-6f1c-488c-9cab-bf7232dd9614","a=input().split();n=int(a[0]);b=list(map(int,input().split()))
for i in range(1,n):b[i]+=b[i-1]
l=[0]*n;r=[0]*n
l[0]=b[0];r[-1]=b[-1]
for i in range(1,n):
    l[i]=max(l[i-1],b[i])
for i in range(n-2,-1,-1):
    r[i]=max(r[i+1],b[-1]-b[i])
ans=0
for i in range(0,n):
    ans=max(ans,l[i]+r[i]-b[i])
print(ans)","1.0"
"bcf4caae-6f1c-488c-9cab-bf7232dd9614","
def baby_elephant_stomp(n, w):
    w.sort()
    left, right = 0, n - 1
    total = 0
    while left <= right:
        if w[left] + w[right] > total:
            total += w[left]
            left += 1
        else:
            total += w[right]
            right -= 1
    return total

n = int(input())
w = list(map(int, input().split()))
print(baby_elephant_stomp(n, w))
","1.0"
"bcf4caae-6f1c-488c-9cab-bf7232dd9614","def main():
    n = int(input())
    aphids = list(map(int, input().split()))

    left_sum = 0
    right_sum = sum(aphids)
    max_piles = 0

    for i in range(n):
        left_sum += aphids[i]
        right_sum -= aphids[i]

        if left_sum == right_sum:
            max_piles = i + 1

    print(max_piles)

if __name__ == ""__main__"":
    main()","1.0"
"ac08298f-25c3-4193-9ae8-4fdb89da54e8","n, m = map(int, input().split())
print(2 * n + 2 * m - 4, (n - 2) * (m - 2))","1.0"
"ac08298f-25c3-4193-9ae8-4fdb89da54e8","
def worm_parrot(n, m):
    parrots = 4 * (n + m - 2)
    worms = (n - 2) * (m - 2) * 4
    return parrots, worms

n, m = map(int, input().split())
parrots, worms = worm_parrot(n, m)
print(parrots, worms)
","1.0"
"ac08298f-25c3-4193-9ae8-4fdb89da54e8","def main():
    n, m = map(int, input().split())
    parrots = 2 * (n + m) - 4
    worms = (n - 2) * (m - 2)
    print(parrots, worms)

if __name__ == ""__main__"":
    main()","1.0"
"4c960d61-0634-4b66-90e7-3bf2894ef6de","
y, k, n = map(int, input().split())
if y < k or (y - k) % k != 0 or y + k > n: print(-1)
else:
  for x in range(k, n - y + k + 1, k):
    print(x, end="" "")
","1.0"
"4c960d61-0634-4b66-90e7-3bf2894ef6de","
def forgetful_lender(ly, k, n):
    if n % k != 0 or n // k > 105:
        return -1
    l = [(n - i) // k for i in range(n // k + 1) if (n - i) % k == 0]
    return sorted([ly + j for j in l if j <= 109]) if l else -1

if __name__ == ""__main__"":
    ly, k, n = map(int, input().split())
    print("" "".join(str(x) for x in forgetful_lender(ly, k, n)))
","1.0"
"4c960d61-0634-4b66-90e7-3bf2894ef6de","def main():
    y, k, n = map(int, input().split())
    result = []
    for x in range(n // k * k - y + 1):
        if (x + y) % k == 0 and x + y <= n:
            result.append(x)
    if not result:
        print(-1)
    else:
        print(*result)

if __name__ == ""__main__"":
    main()","1.0"
"13f523e4-1cd2-4724-8b60-a0f6f25007d9","
n = int(input())
a = []
for i in range(n):
    a.append(input())
s = ''
for i in a:
    s += i
k = 0
for i in range(1, n):
    if s[i - 1] != s[i]:
        k += 1
print(k + 1)
","1.0"
"13f523e4-1cd2-4724-8b60-a0f6f25007d9","
def dominoes(n, arr):
    snakes = 0
    for i in range(n - 1):
        if arr[i] == '1' and arr[i + 1] == '0':
            j = i + 2
            while j < n and arr[j] == '1':
                j += 1
            if j - i - 1 > 1:
                snakes += 1
                arr[i:j] = ['0'] * (j - i - 1) + arr[j:]
                i -= (j - i - 1)
    return len(list(filter(lambda x: x != '', arr)))

n = int(input())
arr = [input() for _ in range(n)]
print(dominoes(n, arr))
","1.0"
"13f523e4-1cd2-4724-8b60-a0f6f25007d9","def count_domino_chains(n, pythons):
    chains = 0
    i = 0
    while i < n:
        if pythons[i][0] == pythons[i][1]:
            chains += 1
            i += 1
        else:
            chains += 1
            i += 2
    return chains

n = int(input())
pythons = [input() for _ in range(n)]
print(count_domino_chains(n, pythons))","1.0"
"1a0c244f-dc1f-4d44-8d80-19db61bd9e0c","```python
 content is not safe and I can't generate an answer for your request","1.0"
"1a0c244f-dc1f-4d44-8d80-19db61bd9e0c","
def find_chains(balls, n):
    chains = 0
    for i in range(n - 2):
        if balls[i] == balls[i+1] and balls[i+1] == balls[i+2]:
            chains += 1
            for j in range(i, i+3):
                balls.pop(j)
                n -= 1
    return chains

n, *balls = map(int, input().split())
print(find_chains(balls, n))
","1.0"
"1a0c244f-dc1f-4d44-8d80-19db61bd9e0c","def main():
    n = int(input())
    balls = list(map(int, input().split()))

    destroyed = 0
    i = 0
    while i < n:
        j = i + 1
        while j < n and balls[j] == balls[i]:
            j += 1
        if j - i >= 3:
            destroyed += j - i
            i = j
        else:
            i += 1

    print(destroyed)

if __name__ == ""__main__"":
    main()","1.0"
"5f3269b9-ef62-40cd-accf-5dbce420975b","
n, k, q = map(int, input().split("" ""))
temp = list(map(int, input().split("" "")))
ans = 0
suf = [0] * (n + 1)
for i in range(n - 1, -1, -1):
    suf[i] = suf[i + 1]
    if temp[i] >= q:
        suf[i] += 1
cnt = 0
for i in range(n):
    if temp[i] >= q:
        cnt += 1
        if cnt >= k:
            ans += suf[i + 1]
print(ans)

","1.0"
"5f3269b9-ef62-40cd-accf-5dbce420975b","
def solve(n, k, q, a):
    dp = [[0] * (q + 1) for _ in range(n + 1)]
    dp[0][a[0]] = 1

    for i in range(1, n + 1):
        for j in range(min(q, a[i]), -1, -1):
            dp[i][j] += dp[i - 1][j]
        for j in range(q, -1, -1):
            if i >= k:
                dp[i][j] += dp[i - k][j]

    return sum(dp[n][q:])

n, k, q = map(int, input().split())
a = list(map(int, input().split()))
print(solve(n, k, q, a))
","1.0"
"5f3269b9-ef62-40cd-accf-5dbce420975b","def count_ways(n, k, q, temperatures):
    ways = 0
    for i in range(n - k + 1):
        if min(temperatures[i:i+k]) >= q:
            ways += 1
    return ways

n, k, q = map(int, input().split())
temperatures = list(map(int, input().split()))

print(count_ways(n, k, q, temperatures))","1.0"
"ce6090fa-0f91-4cc7-887b-f2228001b1e9","a, b = input(), input()
while a:
    if b:
        a, b = b, a[-1] + b[:-1]
    else:
        b = a
        a = ''
print(b)","1.0"
"ce6090fa-0f91-4cc7-887b-f2228001b1e9","
a, b = map(int, input().split())
print(a + b)
","1.0"
"ce6090fa-0f91-4cc7-887b-f2228001b1e9","def main():
    a = int(input())
    b = int(input())
    print(a + b)

if __name__ == ""__main__"":
    main()","1.0"
"64f2a270-a305-4e63-82dc-84c798e2078b","
[a, b] = list(map(int, input().split()))
print(a + b)
","1.0"
"64f2a270-a305-4e63-82dc-84c798e2078b","
a, b = map(int, input().split())
print(a + b)
","1.0"
"64f2a270-a305-4e63-82dc-84c798e2078b","a, b = map(int, input().split())
print(a + b)","1.0"
"19e69528-b684-4f78-875e-983ae9e44f70","
a, b = input().split(' ')
print(int(a) - int(b))
","1.0"
"19e69528-b684-4f78-875e-983ae9e44f70","
a, b = map(int, input().split())
print(a - b)
","1.0"
"19e69528-b684-4f78-875e-983ae9e44f70","a, b = map(int, input().split())
print(a - b)","1.0"
"f85752e7-1961-455b-a754-22558c602c86","
a,b=map(int, input().split())
print(a-b)
","1.0"
"f85752e7-1961-455b-a754-22558c602c86","
a, b = map(int, input().split())
print(a - b)
","1.0"
"f85752e7-1961-455b-a754-22558c602c86","a, b = map(int, input().split())

print(a - b)","1.0"
"7ccc54dd-0df1-4cd5-88eb-63b0a869cc01","print(""ABC"")
","1.0"
"7ccc54dd-0df1-4cd5-88eb-63b0a869cc01","
print(""ABC"")
","1.0"
"7ccc54dd-0df1-4cd5-88eb-63b0a869cc01","print(""ABC"")","1.0"
"e9f94ed1-8675-46d2-95fc-4dfc33c41c2b","a,b=map(int,input().split())
print(a**2+b**2)","1.0"
"e9f94ed1-8675-46d2-95fc-4dfc33c41c2b","
a, b = map(int, input().split())
print(a**2 + b**2)
","1.0"
"e9f94ed1-8675-46d2-95fc-4dfc33c41c2b","a, b = map(int, input().split())
result = a**2 + b**2
print(result)","1.0"
"87ecc56e-ce90-4408-bb34-25f0c2a959f7","a,b=map(int,input().split())
print(a+b)","1.0"
"87ecc56e-ce90-4408-bb34-25f0c2a959f7","
a, b = map(int, input().split())
print(a + b)
","1.0"
"87ecc56e-ce90-4408-bb34-25f0c2a959f7","Here's the Python code to solve the task:

a, b = map(int, input().split())
print(a + b)","1.0"
"b48599d5-44a6-4b34-9cdf-8ec2d44054d6","
a, b = map(int, input().split())
if a <= b:
  for i in range(a, b + 1):
    print(i, end=' ')
else:
  for i in range(a, b - 1, -1):
    print(i, end=' ')
print(b)
","1.0"
"b48599d5-44a6-4b34-9cdf-8ec2d44054d6","
def print_numbers(a, b):
    if a <= b:
        for i in range(a, b+1):
            print(i, end=' ')
    else:
        for i in range(a, 0, -1):
            if i == b:
                print(i)
                break
        for i in range(1, b+1):
            print(i, end=' ')

a, b = map(int, input().split())
print_numbers(a, b)
","1.0"
"b48599d5-44a6-4b34-9cdf-8ec2d44054d6","a, b = map(int, input().split())

if a <= b:
    for i in range(a, b + 1):
        print(i, end=' ')
else:
    for i in range(a, b - 1, -1):
        print(i, end=' ')","1.0"
"09dc2eb4-f9d0-445c-aa81-994928c2d4b8","c=[int(i) for i in input().split()]
s=sorted(c)
n=len(c)
l=[]
for i in range(n-1):
    l.append((s[i]*i,s[i]))
l.sort()
sum=0
for a,i in l:
    if sum==n: break
    sum+=1
    c.remove(i)
    c.append(i)
print(sum(c))","1.0"
"09dc2eb4-f9d0-445c-aa81-994928c2d4b8","
n = int(input())
c = list(map(int, input().split()))
c.sort()
k = n
total = sum(c[:n])
while total > k * (n - 1):
    total -= c[n - 1]
    k -= 1
print(total)
","1.0"
"09dc2eb4-f9d0-445c-aa81-994928c2d4b8","def main():
    n = int(input())
    costs = list(map(int, input().split()))

    costs.sort()
    min_cost = float('inf')

    for k in range(1, n + 1):
        cost = 0
        for i in range(k):
            cost += costs[i]
        for i in range(k, n):
            cost += costs[k - 1]
        min_cost = min(min_cost, cost)

    print(min_cost)


if __name__ == ""__main__"":
    main()","1.0"
"8b0d3d79-b497-4ccb-8f9b-4b426af3908b","
n, d, k = map(int, input().split())
chk = [[0 for j in range(100)] for i in range(100)]
x, y, dx, dy = 0, 0, 1, 0
k, d = d, 1
chk[x][y] = 1
for i in range(n):
    for j in range(d):
        x += dx
        y += dy
        chk[x][y] = 1
    dx, dy = -dy, dx
    d *= k
print(max(map(max, chk)), len(chk))
for row in chk:
    print(''.join('*. '[c] for c in row))
","1.0"
"8b0d3d79-b497-4ccb-8f9b-4b426af3908b","
def spiral(n, d, k):
    grid = [['.'] * (n * k + 1) for _ in range(n * k + 1)]
    x, y, dx, dy, steps = 0, 0, 1, 0, 0
    while steps < n:
        for _ in range(d):
            grid[y][x] = '*'
            x += dx
            y += dy
        dx, dy = -dy, dx
        steps += d
        d *= k
    h, w = 1 + (n * k) // 2, 1 + (n * k) // 2
    for row in range(h):
        print(''.join(grid[row:h+row])[w//2:-w//2])

n, d, k = map(int, input().split())
spiral(n, d, k)
","1.0"
"8b0d3d79-b497-4ccb-8f9b-4b426af3908b","def spiral(n, d, k):
    x, y = 0, 0
    dx, dy = 1, 0
    visited = [[False] * 1000 for _ in range(1000)]
    visited[y][x] = True
    steps = 0

    while steps < n:
        for _ in range(d):
            if steps >= n:
                break
            x += dx
            y += dy
            visited[y][x] = True
            steps += 1
        dx, dy = -dy, dx
        d *= k

    min_x = min(x for y in range(1000) for x in range(1000) if visited[y][x])
    max_x = max(x for y in range(1000) for x in range(1000) if visited[y][x])
    min_y = min(y for y in range(1000) for x in range(1000) if visited[y][x])
    max_y = max(y for y in range(1000) for x in range(1000) if visited[y][x])

    height = max_y - min_y + 1
    width = max_x - min_x + 1
    print(height, width)

    for y in range(min_y, max_y + 1):
        for x in range(min_x, max_x + 1):
            print(""*"" if visited[y][x] else ""."", end="""")
        print()

n, d, k = map(int, input().split())
spiral(n, d, k)","1.0"
"ccfb8d38-8277-4806-ad02-80a6b6aea9cc","
n = int(input())
a = []
for i in range(n):
  a.append(int(input()))
odd_sum = 0
even_sum = 0
for i in range(n):
  if i % 2 == 0:
    even_sum += a[i]
  else:
    odd_sum += a[i]
if abs(odd_sum - even_sum) <= max(a):
  print(""Yes"")
else:
  print(""No"")
","1.0"
"ccfb8d38-8277-4806-ad02-80a6b6aea9cc","
def check_array(n, a):
    odd_sum = 0
    even_sum = 0
    for i in range(n):
        if i % 2 == 0:
            even_sum += a[i]
        else:
            odd_sum += a[i]
    if odd_sum == even_sum:
        return ""Yes""
    else:
        for i in range(n):
            for j in range(i+1, n):
                a[i], a[j] = a[j], a[i]
                if (i % 2 == 0 and j % 2 == 1) or (i % 2 == 1 and j % 2 == 0):
                    new_odd_sum = odd_sum - a[i] + a[j]
                    new_even_sum = even_sum - a[j] + a[i]
                    if new_odd_sum == new_even_sum:
                        return ""Yes""
                a[i], a[j] = a[j], a[i]
    return ""No""

n = int(input())
a = list(map(int, input().split()))
print(check_array(n, a))
","1.0"
"ccfb8d38-8277-4806-ad02-80a6b6aea9cc","def solve(arr):
    odd_sum = sum(arr[1::2])
    even_sum = sum(arr[::2])

    if odd_sum == even_sum:
        return ""Yes""

    for i in range(0, len(arr), 2):
        for j in range(1, len(arr), 2):
            if i == j:
                continue

            temp = arr[i]
            arr[i] = arr[j]
            arr[j] = temp

            odd_sum = sum(arr[1::2])
            even_sum = sum(arr[::2])

            if odd_sum == even_sum:
                return ""Yes""

            arr[j] = arr[i]
            arr[i] = temp

    return ""No""


n = int(input())
arr = []
for _ in range(n):
    arr.append(int(input()))

print(solve(arr))","1.0"
"bcc460f7-6c44-405b-a9c6-b884f3e1d171","
a, b = map(int, input().split())
print(abs(a - b))
","1.0"
"bcc460f7-6c44-405b-a9c6-b884f3e1d171","
a, b = map(int, input().split())
print(abs(a - b))
","1.0"
"bcc460f7-6c44-405b-a9c6-b884f3e1d171","def main():
    a, b = map(int, input().split())
    print(a - b)

if __name__ == ""__main__"":
    main()","1.0"
"15a679fe-9f02-44a5-8720-d22dbf7b05ce","
n = int(input())
if n == 1:
  print(1)
else:
  print(1)
","1.0"
"15a679fe-9f02-44a5-8720-d22dbf7b05ce","
def strange_parking(n):
    spaces = [0]*n
    occupied = 0
    for _ in range(n):
        for i in range(occupied, n):
            if not spaces[i]:
                spaces[i] = 1
                occupied += 1
                break
    return occupied

n = int(input())
print(strange_parking(n))
","1.0"
"15a679fe-9f02-44a5-8720-d22dbf7b05ce","def strange_parking(n):
    if n == 1:
        return 1
    elif n == 2:
        return 1
    else:
        return n // 3 + n % 3

n = int(input())
print(strange_parking(n))","1.0"
"f6186143-1fb6-411f-a770-fda693e2e9b8","
x, y, z = map(int, input().split())
if y % 3 == 0:
    y = y // 3
    if x + z <= y:
        print(y)
    elif x + z > y:
        print(x + z - y)
else:
    if x > y:
        if (x - y) % 3 == 0:
            y = y // 3
            if z <= y:
                print(y)
            elif z > y:
                print(x + z - y)
        elif (x - y) % 3 != 0:
            y = y // 3
            if z >= 3 - (x % 3) + y:
                print(y)
            elif z < 3 - (x % 3) + y:
                print(x + z - y)
    else:
        if (z - (3 - y % 3)) % 3 == 0:
            y = y // 3
            if z <= y:
                print(y)
            elif z > y:
                print(x + z - y)
        elif (z - (3 - y % 3)) % 3 != 0:
            y = y // 3
            if z >= 3 - (y % 3) + y:
                print(y)
            elif z < 3 - (y % 3) + y:
                print(x + z - y)
","1.0"
"f6186143-1fb6-411f-a770-fda693e2e9b8","
def min_cars(x, y, z):
    passengers = x + 3*y + z
    if passengers > 3*(x+y+z):
        return -1
    return (passengers + 2) // 3

x, y, z = map(int, input().split())
print(min_cars(x, y, z))
","1.0"
"f6186143-1fb6-411f-a770-fda693e2e9b8","def main():
    x, y, z = map(int, input().split())
    result = 0
    if x > 0:
        result += 1
        x -= 1
        z -= 1
        if z < 0:
            z = 0
    while y > 0:
        result += 1
        y -= 3
        if z > 0:
            z -= 2
        else:
            break
    if y > 0 or x > 0:
        print(-1)
    else:
        result += x + (z + 1) // 2
        print(result)

if __name__ == ""__main__"":
    main()","1.0"
"cfed631e-c3d2-495b-96a0-5c89a5a8aee0","
n = int(input())
count_left_ones = 0
count_right_ones = 0

for _ in range(n):
  left, right = map(int, input().split())
  count_left_ones += left
  count_right_ones += right

print(min(count_left_ones, n - count_left_ones) + min(count_right_ones, n - count_right_ones))
","1.0"
"cfed631e-c3d2-495b-96a0-5c89a5a8aee0","
def xor_bits(bits):
    return sum(bits) % 2

def min_ops(bits):
    xor = xor_bits(bits)
    count = bits.count(xor)
    return len(bits) - count

n = int(input())
bits = []
for _ in range(n):
    bits.append(list(map(int, input().split())))

min_state = min(xor_bits(bit) for bit in bits)
min_count = min(min_ops(bit) for bit in bits)

return min_count * n - sum(min_ops(bit) for bit in bits)

print(min_ops(list(map(sum, zip(*bits)))[0]))
","1.0"
"cfed631e-c3d2-495b-96a0-5c89a5a8aee0","def main():
    n = int(input())
    bits = []
    for _ in range(n):
        bits.append(list(map(int, input().split())))

    min_time = float('inf')
    for target_left in range(2):
        for target_right in range(2):
            time = 0
            for left, right in bits:
                if left != target_left:
                    time += 1
                if right != target_right:
                    time += 1
            min_time = min(min_time, time)

    print(min_time)


if __name__ == '__main__':
    main()","1.0"
"4a5ca4da-8ce7-4613-b0d6-23c6ebb491ed","
n = int(input())
coins = list(map(int, input().split()))
stacks = {}
for coin in coins:
  if coin in stacks:
    stacks[coin] += 1
  else:
    stacks[coin] = 1
max_height = max(stacks.values())
num_stacks = len(stacks)
print(max_height, num_stacks)
","1.0"
"4a5ca4da-8ce7-4613-b0d6-23c6ebb491ed","
n = int(input())
coins = list(map(int, input().split()))

stacks, max_height = [], 0
for coin in coins:
    if not stacks:
        stacks.append([coin])
    else:
        for i, stack in enumerate(stacks):
            if stack[-1] < coin:
                stacks[i].append(coin)
                break
        if not stacks[i]:
            stacks[i].append(coin)

    max_height = max(max_height, len(stack) for stack in stacks)

print(max_height, len([stack for stack in stacks if len(stack) == max_height]))
","1.0"
"4a5ca4da-8ce7-4613-b0d6-23c6ebb491ed","def main():
    n = int(input())
    coins = list(map(int, input().split()))
    stacks = {}
    max_height = 0
    total_stacks = 0

    for coin in coins:
        if coin not in stacks:
            stacks[coin] = 1
            total_stacks += 1
            max_height = max(max_height, 1)
        else:
            stacks[coin] += 1
            max_height = max(max_height, stacks[coin])

    print(max_height, total_stacks)

if __name__ == ""__main__"":
    main()","1.0"
"2a42d873-b1fe-4256-a488-91db4eaa8d9f","
a = input()
b = input()
n = len(a)
m = len(b)
result = list(a)
for i in range(n):
  for j in range(m):
    if int(b[j]) > int(result[i]):
      result[i] = b[j]
      b = b[:j] + b[j+1:]
      break
print(''.join(result))
","1.0"
"2a42d873-b1fe-4256-a488-91db4eaa8d9f","
def max_substitution(a, cards):
    n = len(a)
    table = list(map(int, cards))
    used = [0] * 10
    for i in range(n):
        for j in range(9, -1, -1):
            if table[j] > 0 and used[j] == 0:
                table[j] -= 1
                used[j] = 1
                a = str(j + int(a[:i] + ''.join(map(str, table)) + a[i+1:]))
                if len(a) == n:
                    return a
                used[j] = 0
    return a

a = input()
cards = input()
print(max_substitution(a, cards))
","1.0"
"2a42d873-b1fe-4256-a488-91db4eaa8d9f","def who_is_more(a, cards):
    result = list(a)
    cards = list(cards)
    for i in range(len(result)):
        for card in cards:
            if int(result[i]) < int(card):
                result[i] = card
                cards.remove(card)
                break
    return ''.join(result)

a = input()
cards = input()
print(who_is_more(a, cards))","1.0"
"4d25e12d-091c-4350-a744-93b5301dbe02","
n = int(input())
numbers = list(map(int, input().split()))
my_sum = 0
your_sum = 0
while len(numbers) > 0:
  my_sum += max(numbers[0], numbers[-1])
  numbers.remove(max(numbers[0], numbers[-1]))
  if len(numbers) > 0:
    your_sum += min(numbers[0], numbers[-1])
    numbers.remove(min(numbers[0], numbers[-1]))
print(my_sum, your_sum)
","1.0"
"4d25e12d-091c-4350-a744-93b5301dbe02","
import random
n = int(input())
numbers = list(map(int, input().split()))
computer_numbers = numbers[:]
player_numbers = numbers[:]

while len(computer_numbers) > 1:
    if len(computer_numbers) == len(player_numbers):
        computer_num = random.choice(computer_numbers)
        computer_numbers.remove(computer_num)
        player_numbers.remove(computer_num)
    else:
        computer_num = max(computer_numbers)
        computer_numbers.remove(computer_num)

player_sum = sum(player_numbers)
opponent_sum = sum(computer_numbers)
print(player_sum, opponent_sum)
","1.0"
"4d25e12d-091c-4350-a744-93b5301dbe02","def main():
    n = int(input())
    numbers = list(map(int, input().split()))
    my_sum = 0
    your_sum = 0
    left = 0
    right = n - 1

    while left <= right:
        if numbers[left] > numbers[right]:
            my_sum += numbers[left]
            left += 1
        else:
            my_sum += numbers[right]
            right -= 1

        if left > right:
            break

        if numbers[left] > numbers[right]:
            your_sum += numbers[left]
            left += 1
        else:
            your_sum += numbers[right]
            right -= 1

    print(my_sum, your_sum)

if __name__ == ""__main__"":
    main()","1.0"
"0718b9a2-e909-4d51-9f4a-a1de2c698eb1","
s = input()
c = min([s[i] for i in range(1, len(s)) if s[i]<s[i-1]])
b = s.find(c)
a = b-1
s = s[0:a]+c+s[a:b]+s[b+1:]
print(s)
","1.0"
"0718b9a2-e909-4d51-9f4a-a1de2c698eb1","
def solve(s):
    n = len(s)
    for i in range(n - 1):
        for j in range(i + 1, n):
            s = s[:i] + s[j] + s[i] + s[j + 1:]
            if ''.join(sorted(s)) == s:
                return s
    return s

s = input()
print(solve(s))
","1.0"
"0718b9a2-e909-4d51-9f4a-a1de2c698eb1","def main():
    surname = input()
    new_surname = sorted(surname, reverse=True)
    if new_surname == list(surname):
        print(surname)
    else:
        print(''.join(new_surname))

if __name__ == '__main__':
    main()","1.0"
"8c60181e-f560-4f27-a609-9ab45077ce53","n=int(input())
m=[[int(i) for i in input().split()]for j in range(n)]
f=[i for i in range(n) if all(j==-1 or j+m[j][i]==3 for j in range(n)) and all(j==-1 or j-m[i][j]==3 for j in range(n))]
print(len(f));print(' '.join(map(str,f)))","1.0"
"8c60181e-f560-4f27-a609-9ab45077ce53","
def find_finalists(n, matrix):
    battles = [[] for _ in range(n)]
    for i in range(n):
        for j in range(n):
            if i != j:
                battles[i].append((j, matrix[i][j]))
    winners = set()
    for robot, results in enumerate(battles):
        if all(res[1] == 0 for res in results):
            winners.add(robot)
    return len(winners), sorted(list(winners))

n = int(input())
matrix = []
for _ in range(n):
    row = list(map(int, input().split()))
    matrix.append(row)
finalists = find_finalists(n, matrix)
print(*finalists)
","1.0"
"8c60181e-f560-4f27-a609-9ab45077ce53","def main():
    n = int(input())
    m = []
    for _ in range(n):
        m.append(list(map(int, input().split())))

    finalists = []
    for i in range(n):
        is_finalist = True
        for j in range(n):
            if m[i][j] == 1 or m[j][i] == 2:
                is_finalist = False
                break
        if is_finalist:
            finalists.append(i + 1)

    print(len(finalists))
    print(*finalists)


if __name__ == ""__main__"":
    main()","1.0"
"b316f513-f142-45d3-a702-cc3208e6aa54","n, a, b = map(int, input().split())
if n <= min(a, b):
    print(""YES"")
else:
    print(""NO"")","1.0"
"b316f513-f142-45d3-a702-cc3208e6aa54","
n, a, b = map(int, input().split())
if a < n or b < n:
    print(""NO"")
elif a % n == 0 or b % n == 0:
    print(""YES"")
else:
    print(""NO"")
","1.0"
"b316f513-f142-45d3-a702-cc3208e6aa54","def main():
    n, a, b = map(int, input().split())
    if a < n or b < n:
        print(""NO"")
    else:
        print(""YES"")

if __name__ == ""__main__"":
    main()","1.0"
"2173e6e8-cca6-47c7-8ef6-ea93d3e736f4","
n = int(input())
a = [int(x) for x in input().split()]
a.sort()
tot = 0
for i in range(n-1):
    tot += a[i+1] - a[i]
print(tot)
","1.0"
"2173e6e8-cca6-47c7-8ef6-ea93d3e736f4","
def gcd(a, b):
    while b:
        a, b = b, a % b
    return a

n = int(input())
coords = list(map(int, input().split()))
coords.sort()

wire_length = 0
for i in range(n - 1):
    wire_length += coords[i + 1] - coords[i]
    for j in range(i + 2, n):
        k = (coords[j] - coords[i]) // gcd(coords[i + 1] - coords[i], coords[j] - coords[i + 1])
        if k > 0 and (coords[i + 1] + k * (coords[j] - coords[i + 1]) <= coords[j + 1]):
            wire_length -= k * (coords[i + 1] - coords[i])

print(wire_length)
","1.0"
"2173e6e8-cca6-47c7-8ef6-ea93d3e736f4","def main():
    n = int(input())
    poles = list(map(int, input().split()))
    poles.sort()
    min_wire = poles[-1] - poles[0]
    for i in range(1, n):
        min_wire = min(min_wire, poles[i] - poles[i - 1])
    print(min_wire)

if __name__ == ""__main__"":
    main()","1.0"
"49c03922-c57e-464a-8191-9ebef2615808","s,t,v=map(int,input().split())
gInternal server error","1.0"
"49c03922-c57e-464a-8191-9ebef2615808","
def gcd(a, b):
    while b:
        a, b = b, a % b
    return a

def lcm(a, b):
    return a * b // gcd(a, b)

a, b, m = map(int, input().split())
ab = lcm(a, b)
count = 0
for i in range(ab, ab + m, a):
    if i % b == 0:
        count += 1
print(count)
","1.0"
"49c03922-c57e-464a-8191-9ebef2615808","def gcd(a, b):
    while b != 0:
        a, b = b, a % b
    return a

def lcm(a, b):
    return a * b // gcd(a, b)

a, b, m = map(int, input().split())

l = lcm(a, b)
count_a = l // a
count_b = l // b

visible_a = min(count_a, m)
visible_b = min(count_b, m)

max_visible = visible_a + visible_b

if m >= l:
    max_visible += min(m - l + 1, count_a + count_b - visible_a - visible_b)

print(max_visible)","1.0"
"c4ced8e6-dec6-4f4a-8a79-f5800795a08b","
n=int(input())
l1=n//7
l2=n//3
l3=n//12
if n%7==0:    l1-=1
if n%3==0:    l2-=1
if n%12==0:   l3-=1
print(l1+l2+l3+n+6,l1*7+l2*3+l3*12+n+10)
","1.0"
"c4ced8e6-dec6-4f4a-8a79-f5800795a08b","
def min_max_painted_cubes(n):
    min_cubes = (n - 1) * (n - 2) * (n - 2)
    max_cubes = (n + 1) * (n // 2) * (n // 2)
    return min_cubes, max_cubes

n = int(input())
min_cubes, max_cubes = min_max_painted_cubes(n)
print(min_cubes, max_cubes)
","1.0"
"c4ced8e6-dec6-4f4a-8a79-f5800795a08b","def main():
    n = int(input())
    print(solve(n))

def solve(n):
    min_painted = max_painted = 0
    for i in range(1, int(n**0.5) + 1):
        for j in range(1, int(n**0.5) + 1):
            for k in range(1, int(n**0.5) + 1):
                if (i - 2) * (j - 2) * (k - 2) == n:
                    painted = i * j * k - n
                    min_painted = painted if min_painted == 0 else min(min_painted, painted)
                    max_painted = painted if max_painted == 0 else max(max_painted, painted)
    return str(min_painted) + "" "" + str(max_painted)

if __name__ == ""__main__"":
    main()","1.0"
"df2fe73c-bfa4-40e5-b77c-d2ad076197ca","n,k,s=[int(x)for x in input().split()]
a=[int(x)for x in input().split()]
l=[0]*k
for i in range(n-1):
    l[i%k]+=a[i]//s
    if a[i]%s:l[i%k]+=1
print(max(l))","1.0"
"df2fe73c-bfa4-40e5-b77c-d2ad076197ca","
def min_time(n, k, s, candies):
    candies = list(candies)
    team_candies = [0] * k
    for i in range(n - 1, -1, -1):
        min_candies = float('inf')
        for j in range(min(k, i + 1)):
            if candies[i + j] > 0:
                min_candies = min(min_candies, candies[i + j])
        if min_candies != float('inf'):
            team_candies[j] += min_candies
            candies[i] -= min_candies
    time = sum(tc // s for tc in team_candies)
    if sum(team_candies) % s:
        time += 1
    return time

n, k, s = map(int, input().split())
candies = list(map(int, input().split()))
print(min_time(n, k, s, candies))
","1.0"
"df2fe73c-bfa4-40e5-b77c-d2ad076197ca","def main():
    n, k, s = map(int, input().split())
    candies = list(map(int, input().split()))

    left = 0
    right = 10**15

    while left < right:
        mid = (left + right) // 2
        current = 0
        teams = 0

        for bag in candies:
            if current + bag <= mid:
                current += bag
            else:
                teams += 1
                current = bag

        if current > 0:
            teams += 1

        if teams <= k:
            right = mid
        else:
            left = mid + 1

    print(left // s + int(left % s != 0))

if __name__ == ""__main__"":
    main()","1.0"
"c0df7d49-26f5-451c-b44a-1e0bca60bca5","
count = 0
while True:
    num = int(input())
    if num == 0:
        break
    count += 1
print(count)
","1.0"
"c0df7d49-26f5-451c-b44a-1e0bca60bca5","count = 0while True:num = int(input())if num == 0:breakcount += 1print(count)","1.0"
"c0df7d49-26f5-451c-b44a-1e0bca60bca5","
count = 0
while True:
    num = int(input())
    if num == 0:
        break
    count += 1
print(count)
","1.0"
"4e5b21c0-e86f-4eac-82b6-1a0d00ae4199","
max_num = 0
count = 0

while True:
    num = int(input())
    if num == 0:
        break
    if num > max_num:
        max_num = num
        count = 1
    elif num == max_num:
        count += 1

print(count)
","1.0"
"4e5b21c0-e86f-4eac-82b6-1a0d00ae4199","max_num = 0count = 0while True:num = int(input())if num == 0:breakif num > max_num:max_num = numcount = 1elif num == max_num:count += 1print(count)","1.0"
"4e5b21c0-e86f-4eac-82b6-1a0d00ae4199","
max_num = 0
count = 0

while True:
    num = int(input())
    if num == 0:
        break
    if num > max_num:
        max_num = num
        count = 1
    elif num == max_num:
        count += 1

print(count)
","1.0"
"875ec0a5-0a8e-468b-b0f0-1b32c0337354","
N = int(input())
arr = list(map(int, input().split()))
count = 0
for num in arr:
    if num >= 0:
        count += 1
print(count)
","1.0"
"875ec0a5-0a8e-468b-b0f0-1b32c0337354","N = int(input())array = list(map(int, input().split()))count = 0for num in array:if num >= 0:count += 1print(count)","1.0"
"875ec0a5-0a8e-468b-b0f0-1b32c0337354","
N = int(input())
array = list(map(int, input().split()))
count = 0
for num in array:
    if num >= 0:
        count += 1
print(count)
","1.0"
"35d772a5-7770-4a91-9118-ad11e4ae7feb","
n = int(input())
arr = list(map(int, input().split()))
count = 0
for i in range(1, n):
    if arr[i] > arr[i-1]:
        count += 1
print(count)
","1.0"
"35d772a5-7770-4a91-9118-ad11e4ae7feb","n = int(input())
arr = list(map(int, input().split()))

count = 0
for i in range(1, n):
    if arr[i] > arr[i-1]:
        count += 1

print(count)
","1.0"
"6671bab8-0e57-4f15-bc39-c933a2495f50","
N = int(input())
arr = list(map(int, input().split()))
for i in range(1, N, 2):
    arr[i-1], arr[i] = arr[i], arr[i-1]
print(' '.join(map(str, arr)))
","1.0"
"6671bab8-0e57-4f15-bc39-c933a2495f50","
n = int(input())
arr = list(map(int, input().split()))
for i in range(1, n, 2):
    arr[i - 1], arr[i] = arr[i], arr[i - 1]
print(*arr)
","1.0"
"6671bab8-0e57-4f15-bc39-c933a2495f50","
N = int(input())
arr = list(map(int, input().split()))
for i in range(0, N - 1, 2):
    arr[i], arr[i + 1] = arr[i + 1], arr[i]
print(' '.join(map(str, arr)))
","1.0"
"96848df3-0772-4855-bf4c-6fe2a471754f","
N = int(input())
arr = list(map(int, input().split()))
exchanges = 0

for i in range(N):
    for j in range(0, N-i-1):
        if arr[j] > arr[j+1]:
            arr[j], arr[j+1] = arr[j+1], arr[j]
            exchanges += 1

print(exchanges)
","1.0"
"96848df3-0772-4855-bf4c-6fe2a471754f","
N = int(input())
arr = list(map(int, input().split()))
exchanges = 0

for i in range(N):
    for j in range(0, N-i-1):
        if arr[j] > arr[j+1]:
            arr[j], arr[j+1] = arr[j+1], arr[j]
            exchanges += 1

print(exchanges)
","1.0"
"96848df3-0772-4855-bf4c-6fe2a471754f","
N = int(input())
arr = list(map(int, input().split()))
exchanges = 0

for i in range(N):
    for j in range(0, N-i-1):
        if arr[j] > arr[j+1]:
            arr[j], arr[j+1] = arr[j+1], arr[j]
            exchanges += 1

print(exchanges)
","1.0"
"33eb8e68-cf75-4892-b87b-97ceeee27d04","
a, b = map(int, input().split())
if a == b:
    print(0)
elif (a > 0 and b > 0) or (a < 0 and b < 0):
    print(a + b)
else:
    print(a * b)
","1.0"
"33eb8e68-cf75-4892-b87b-97ceeee27d04","
a, b = map(int, input().split())
if a == b:
    print(0)
elif (a > 0 and b > 0) or (a < 0 and b < 0):
    print(a + b)
else:
    print(a * b)
","1.0"
"33eb8e68-cf75-4892-b87b-97ceeee27d04","
a, b = map(int, input().split())
if a == b:
    print(0)
elif (a > 0 and b > 0) or (a < 0 and b < 0):
    print(a + b)
else:
    print(a * b)
","1.0"
"6b1e0963-bf0b-405e-b555-435a6225619c","
n = input().strip()
digit_count = len(n)
parity = 1 if int(n) % 2 != 0 else 0
digit_sum = sum(int(d) for d in n)
print(digit_count, parity, digit_sum)
","1.0"
"6b1e0963-bf0b-405e-b555-435a6225619c","
n = input().strip()
digit_count = len(n)
parity = 1 if int(n) % 2 != 0 else 0
digit_sum = sum(int(d) for d in n)
print(digit_count, parity, digit_sum)
","1.0"
"6b1e0963-bf0b-405e-b555-435a6225619c","
n = input().strip()
digit_count = len(n)
parity = 0 if int(n) % 2 == 0 else 1
digit_sum = sum(int(d) for d in n)
print(digit_count, parity, digit_sum)
","1.0"
"22e720bb-1b6c-470d-bb7b-da0de5a83f45","
x1, y1, x2, y2, x3, y3 = map(float, input().split())
area = abs((x1*(y2-y3) + x2*(y3-y1) + x3*(y1-y2)) / 2)
print(f""{area:.5f}"")
","1.0"
"22e720bb-1b6c-470d-bb7b-da0de5a83f45","
x1, y1, x2, y2, x3, y3 = map(float, input().split())
area = abs((x1*(y2-y3) + x2*(y3-y1) + x3*(y1-y2)) / 2)
print(f""{area:.5f}"")
","1.0"
"22e720bb-1b6c-470d-bb7b-da0de5a83f45","
x1, y1, x2, y2, x3, y3 = map(float, input().split())
area = abs((x1*(y2-y3) + x2*(y3-y1) + x3*(y1-y2)) / 2)
print(f""{area:.5f}"")
","1.0"
"16305713-d2dc-4ab1-8bbd-107594c55519","
a = int(input())
b = int(input())
c = int(input())

if a + b <= c or a + c <= b or b + c <= a:
    print(""impossible"")
else:
    sides = sorted([a, b, c])
    if sides[0]**2 + sides[1]**2 == sides[2]**2:
        print(""right"")
    elif sides[0]**2 + sides[1]**2 > sides[2]**2:
        print(""acute"")
    else:
        print(""obtuse"")
","1.0"
"16305713-d2dc-4ab1-8bbd-107594c55519","
a = int(input())
b = int(input())
c = int(input())

if a + b <= c or a + c <= b or b + c <= a:
    print(""impossible"")
else:
    sides = sorted([a, b, c])
    if sides[0]**2 + sides[1]**2 == sides[2]**2:
        print(""right"")
    elif sides[0]**2 + sides[1]**2 > sides[2]**2:
        print(""acute"")
    else:
        print(""obtuse"")
","1.0"
"16305713-d2dc-4ab1-8bbd-107594c55519","
a = int(input())
b = int(input())
c = int(input())

if a + b <= c or a + c <= b or b + c <= a:
    print(""impossible"")
else:
    sides = sorted([a, b, c])
    if sides[0]**2 + sides[1]**2 == sides[2]**2:
        print(""right"")
    elif sides[0]**2 + sides[1]**2 > sides[2]**2:
        print(""acute"")
    else:
        print(""obtuse"")
","1.0"
"3276b711-2292-488f-9353-be7b86ab5e1a","N = int(input())result = 1for i in range(N):result *= 2print(result)","1.0"
"3276b711-2292-488f-9353-be7b86ab5e1a","N = int(input())result = 1for _ in range(N):result *= 2print(result)","1.0"
"3276b711-2292-488f-9353-be7b86ab5e1a","
N = int(input())
result = 1
for i in range(N):
    result *= 2
print(result)
","1.0"
"f9af70f9-5fce-423e-94c5-b6f357e5242c","
a = float(input())
n = int(input())

sum_value = 1
current_term = 1

for i in range(1, n + 1):
    current_term *= a
    sum_value += current_term

print(sum_value)
","1.0"
"f9af70f9-5fce-423e-94c5-b6f357e5242c","def geometric_progression_sum(a, n):
    sum = 1
    for i in range(1, n+1):
        sum *= a
    return sum

a = float(input())
n = int(input())

result = geometric_progression_sum(a, n)
print(result)
#####","1.0"
"f9af70f9-5fce-423e-94c5-b6f357e5242c","
a = float(input())
n = int(input())
total = 0
current_term = 1

for i in range(n + 1):
    total += current_term
    current_term *= a

print(int(total))
","1.0"
"4c5a1413-e27d-4b6a-b218-bc8e2a3ade0e","
x = int(input())
for i in range(1, x + 1):
    if x % i == 0:
        print(i, end=' ')
","1.0"
"4c5a1413-e27d-4b6a-b218-bc8e2a3ade0e","
x = int(input())
divisors = []
for i in range(1, x + 1):
    if x % i == 0:
        divisors.append(i)
print("" "".join(map(str, divisors)))
","1.0"
"4c5a1413-e27d-4b6a-b218-bc8e2a3ade0e","
x = int(input())
divisors = []
for i in range(1, x + 1):
    if x % i == 0:
        divisors.append(i)
print("" "".join(map(str, divisors)))
","1.0"
"06a06b1c-da2e-4210-b889-371de309b82f","
n = int(input())
zeros, positives, negatives = 0, 0, 0

for _ in range(n):
    num = int(input())
    if num == 0:
        zeros += 1
    elif num > 0:
        positives += 1
    else:
        negatives += 1

print(zeros, positives, negatives)
","1.0"
"06a06b1c-da2e-4210-b889-371de309b82f","N = int(input())zeros = 0positives = 0negatives = 0numbers = input().split()for num in numbers:if int(num) == 0:zeros += 1elif int(num) > 0:positives += 1else:negatives += 1print(zeros, positives, negatives)","1.0"
"06a06b1c-da2e-4210-b889-371de309b82f","
N = int(input())
numbers = list(map(int, input().split()))

count_zeros = 0
count_positive = 0
count_negative = 0

for number in numbers:
    if number == 0:
        count_zeros += 1
    elif number > 0:
        count_positive += 1
    else:
        count_negative += 1

print(count_zeros, count_positive, count_negative)
","1.0"
"157c7563-5b83-4f84-b184-e15788a65471","
n = int(input())
for i in range(2, n + 1):
    if n % i == 0:
        print(i)
        break
","1.0"
"157c7563-5b83-4f84-b184-e15788a65471","
n = int(input())
for i in range(2, n + 1):
    if n % i == 0:
        print(i)
        break
","1.0"
"157c7563-5b83-4f84-b184-e15788a65471","
n = int(input())
for i in range(2, n + 1):
    if n % i == 0:
        print(i)
        break
","1.0"
"26acdc8d-1ff5-439b-81bd-00672786ec6d","total = 0while True:num = int(input())if num == 0:breaktotal += numprint(total)","1.0"
"26acdc8d-1ff5-439b-81bd-00672786ec6d","s = list(map(int, input().split()))
sum = 0
for i in s:
    if i != 0:
        sum += i
print(sum)
","1.0"
"26acdc8d-1ff5-439b-81bd-00672786ec6d","
total = 0
while True:
    num = int(input())
    if num == 0:
        break
    total += num
print(total)
","1.0"
"419d664d-81aa-4201-abc6-d514e7ee1691","
total = 0
count = 0
while True:
    num = int(input())
    if num == 0:
        break
    total += num
    count += 1
if count > 0:
    print(total / count)
else:
    print(0)
","1.0"
"419d664d-81aa-4201-abc6-d514e7ee1691","seq = input().split()
sum_val = 0
count = 0
for val in seq:
    if val != '0':
        sum_val += float(val)
        count += 1
    else:
        break

if count == 0:
    print(0)
else:
    print(sum_val / count)
","1.0"
"419d664d-81aa-4201-abc6-d514e7ee1691","
total = 0
count = 0

while True:
    num = int(input())
    if num == 0:
        break
    total += num
    count += 1

if count > 0:
    average = total / count
    print(average)
else:
    print(0)
","1.0"
"9cb9b7da-39db-403e-8612-483ae6cb4067","
max_num = 0
while True:
    num = int(input())
    if num == 0:
        break
    if num > max_num:
        max_num = num
print(max_num)
","1.0"
"9cb9b7da-39db-403e-8612-483ae6cb4067","
max_num = 0
while True:
    num = int(input())
    if num == 0:
        break
    if num > max_num:
        max_num = num
print(max_num)
","1.0"
"9cb9b7da-39db-403e-8612-483ae6cb4067","
max_value = 0
while True:
    num = int(input())
    if num == 0:
        break
    if num > max_value:
        max_value = num
print(max_value)
","1.0"
"ffc65b57-d995-421d-a0bd-b34cc8cf34a5","
N = input()
total = 0
for digit in N:
    total += int(digit)
print(total)
","1.0"
"ffc65b57-d995-421d-a0bd-b34cc8cf34a5","n = int(input(""Enter a number: ""))

sum_digits = 0
while n > 0:
    digit = n % 10
    sum_digits += digit
    n //= 10

print(""Sum of digits:"", sum_digits)
exit()","1.0"
"ffc65b57-d995-421d-a0bd-b34cc8cf34a5","
N = input()
total = 0
for digit in N:
    total += int(digit)
print(total)
","1.0"
"c519c7c3-cc1b-42eb-ae0d-77219a6ca340","
N = input()
count = 0
for digit in N:
    if digit == '0':
        count += 1
print(count)
","1.0"
"c519c7c3-cc1b-42eb-ae0d-77219a6ca340","
N = input()
count = 0
for digit in N:
    if digit == '0':
        count += 1
print(count)
","1.0"
"c519c7c3-cc1b-42eb-ae0d-77219a6ca340","
N = int(input())
count = 0

while N > 0:
    if N % 10 == 0:
        count += 1
    N //= 10

print(count)
","1.0"
"3d57ecc4-72d1-43f5-ae17-2cc26c570f11","
N = input()
reversed_number = """"
for digit in N:
    reversed_number = digit + reversed_number
print(reversed_number)
","1.0"
"3d57ecc4-72d1-43f5-ae17-2cc26c570f11","
N = input()
reversed_number = """"
for digit in N:
    reversed_number = digit + reversed_number
print(reversed_number)
","1.0"
"3d57ecc4-72d1-43f5-ae17-2cc26c570f11","
N = input()
reversed_number = """"
for digit in N:
    reversed_number = digit + reversed_number
print(reversed_number)
","1.0"
"1b689872-4b61-4615-a14e-24e7a0bcb1ba","
n = int(input())
arr = list(map(int, input().split()))
count = 1
for i in range(1, n):
    if arr[i] != arr[i - 1]:
        count += 1
print(count)
","1.0"
"1b689872-4b61-4615-a14e-24e7a0bcb1ba","
N = int(input())
arr = list(map(int, input().split()))
distinct_count = 0
previous = None

for num in arr:
    if num != previous:
        distinct_count += 1
        previous = num

print(distinct_count)
","1.0"
"1b689872-4b61-4615-a14e-24e7a0bcb1ba","
N = int(input())
arr = list(map(int, input().split()))
distinct_count = 1 if N > 0 else 0

for i in range(1, N):
    if arr[i] != arr[i - 1]:
        distinct_count += 1

print(distinct_count)
","1.0"
"521b1be0-3bd5-45f4-94f5-dad4b82ad375","
n = int(input())
arr = list(map(int, input().split()))
print(max(arr))
","1.0"
"521b1be0-3bd5-45f4-94f5-dad4b82ad375","N = int(input())arr = list(map(int, input().split()))max_value = arr[0]for num in arr:if num > max_value:max_value = numprint(max_value)","1.0"
"521b1be0-3bd5-45f4-94f5-dad4b82ad375","
N = int(input())
arr = list(map(int, input().split()))
max_value = arr[0]
for num in arr:
    if num > max_value:
        max_value = num
print(max_value)
","1.0"
"1a27e016-52ff-4e78-89cb-956f0a7cac6b","N = int(input())arr = list(map(int, input().split()))for i in range(N):for j in range(0, N-i-1):if arr[j] > arr[j+1]:arr[j], arr[j+1] = arr[j+1], arr[j]print(' '.join(map(str, arr)))","1.0"
"1a27e016-52ff-4e78-89cb-956f0a7cac6b","def sort_array(arr):
    arr.sort()
    return arr

n = int(input())
nums = list(map(int, input().split()))
sorted_nums = sort_array(nums)
print(*sorted_nums)
","1.0"
"420a5758-8cb1-445d-9bf7-bd8017a41cb2","n = int(input())arr = list(map(int, input().split()))max_index = arr.index(max(arr))arr[max_index], arr[-1] = arr[-1], arr[max_index]print(' '.join(map(str, arr)))","1.0"
"420a5758-8cb1-445d-9bf7-bd8017a41cb2","
n = int(input())
arr = list(map(int, input().split()))

max_index = arr.index(max(arr))
arr[max_index], arr[-1] = arr[-1], arr[max_index]

print(' '.join(map(str, arr)))
","1.0"
"a1653f16-6401-480c-9131-9fef0db152a8","
n = int(input())
participants = []

for _ in range(n):
    id_num, points = map(int, input().split())
    participants.append((id_num, points))

participants.sort(key=lambda x: (-x[1], x[0]))

for id_num, points in participants:
    print(id_num, points)
","1.0"
"a1653f16-6401-480c-9131-9fef0db152a8","
n = int(input())
participants = []

for _ in range(n):
    id, points = map(int, input().split())
    participants.append((id, points))

participants.sort(key=lambda x: (-x[1], x[0]))

for id, points in participants:
    print(id, points)
","1.0"
"a1653f16-6401-480c-9131-9fef0db152a8","
N = int(input())
participants = []

for _ in range(N):
    line = input().strip().split()
    id_num = int(line[0])
    points = int(line[1])
    participants.append((id_num, points))

participants.sort(key=lambda x: (-x[1], x[0]))

for participant in participants:
    print(participant[0], participant[1])
","1.0"
"48531b77-6537-4389-a998-5c74e35ac9af","
N = input().strip()
total = sum(int(digit) for digit in N)
if total % 3 == 0:
    print(""YES"")
else:
    print(""NO"")
","1.0"
"48531b77-6537-4389-a998-5c74e35ac9af","N = input().strip()if sum(int(digit) for digit in N) % 3 == 0:print(""YES"")else:print(""NO"")","1.0"
"48531b77-6537-4389-a998-5c74e35ac9af","
N = input().strip()
total = sum(int(digit) for digit in N)
if total % 3 == 0:
    print(""YES"")
else:
    print(""NO"")
","1.0"
"28b5bd1f-2393-42f8-a320-976b5072a75b","x1, y1, x2, y2 = map(float, input().split())r = ((x2 - x1) ** 2 + (y2 - y1) ** 2) ** 0.5circumference = 2 * 3.14 * rarea = 3.14 * r ** 2print(f""{circumference:.6f} {area:.6f}"")","1.0"
"28b5bd1f-2393-42f8-a320-976b5072a75b","x1, y1, x2, y2 = map(float, input().split())radius = ((x2 - x1) ** 2 + (y2 - y1) ** 2) ** 0.5 / 2circumference = 2 * 3.14 * radiusarea = 3.14 * radius ** 2print(f""{circumference:.6f} {area:.6f}"")","1.0"
"28b5bd1f-2393-42f8-a320-976b5072a75b","
x1, y1, x2, y2 = map(int, input().split())
radius = ((x2 - x1) ** 2 + (y2 - y1) ** 2) ** 0.5
circumference = 2 * 3.14 * radius
area = 3.14 * radius ** 2
print(f""{circumference:.6f} {area:.6f}"")
","1.0"
"431be734-39e6-4f58-aec7-61e67c8ee1b5","
year = int(input())
if (year % 4 == 0 and year % 100 != 0) or (year % 400 == 0):
    print(""YES"")
else:
    print(""NO"")
","1.0"
"431be734-39e6-4f58-aec7-61e67c8ee1b5","
year = int(input())
if (year % 4 == 0 and year % 100 != 0) or (year % 400 == 0):
    print(""YES"")
else:
    print(""NO"")
","1.0"
"431be734-39e6-4f58-aec7-61e67c8ee1b5","
year = int(input())
if (year % 4 == 0 and year % 100 != 0) or (year % 400 == 0):
    print(""YES"")
else:
    print(""NO"")
","1.0"
"eabdf11f-d1f1-44e0-8017-20e8e541ec68","
a = int(input())
b = int(input())
c = int(input())

if a + b > c and a + c > b and b + c > a:
    print(""YES"")
else:
    print(""NO"")
","1.0"
"eabdf11f-d1f1-44e0-8017-20e8e541ec68","
a = int(input())
b = int(input())
c = int(input())

if a + b > c and a + c > b and b + c > a:
    print(""YES"")
else:
    print(""NO"")
","1.0"
"eabdf11f-d1f1-44e0-8017-20e8e541ec68","
a = int(input())
b = int(input())
c = int(input())

if a + b > c and a + c > b and b + c > a:
    print(""YES"")
else:
    print(""NO"")
","1.0"
"e5e8f4d5-0b0f-4a52-b5a7-12f8ef0a52f0","
a = int(input())
b = int(input())
c = int(input())
if a > b:
    a, b = b, a
if a > c:
    a, c = c, a
if b > c:
    b, c = c, b
print(a, b, c)
","1.0"
"e5e8f4d5-0b0f-4a52-b5a7-12f8ef0a52f0","a = int(input())b = int(input())c = int(input())if a > b:a, b = b, aif a > c:a, c = c, aif b > c:b, c = c, bprint(a, b, c)","1.0"
"e5e8f4d5-0b0f-4a52-b5a7-12f8ef0a52f0","
a = int(input())
b = int(input())
c = int(input())
if a > b:
    a, b = b, a
if a > c:
    a, c = c, a
if b > c:
    b, c = c, b
print(a, b, c)
","1.0"
"ce727aeb-b2aa-4da5-be32-636ce90da78c","
a, b, c, d = map(int, input().split())
for num in range(a, b + 1):
    if num % d == c:
        print(num, end=' ')
","1.0"
"ce727aeb-b2aa-4da5-be32-636ce90da78c","
a, b, c, d = map(int, input().split())
for i in range(a, b + 1):
    if i % d == c:
        print(i, end=' ')
","1.0"
"ce727aeb-b2aa-4da5-be32-636ce90da78c","
a, b, c, d = map(int, input().split())
for i in range(a, b + 1):
    if i % d == c:
        print(i, end=' ')
","1.0"
"fe35f9e7-0b58-461f-9278-39f03054e886","
a = int(input())
b = int(input())
for i in range(int(a**0.5), int(b**0.5) + 1):
    square = i * i
    if square >= a and square <= b:
        print(square, end=' ')
","1.0"
"fe35f9e7-0b58-461f-9278-39f03054e886","
a = int(input())
b = int(input())
for i in range(int(a**0.5), int(b**0.5) + 1):
    square = i * i
    if square >= a and square <= b:
        print(square, end=' ')
","1.0"
"fe35f9e7-0b58-461f-9278-39f03054e886","
a = int(input())
b = int(input())
squares = []
for i in range(int(a**0.5), int(b**0.5) + 1):
    square = i * i
    if square >= a and square <= b:
        squares.append(square)
print("" "".join(map(str, squares)))
","1.0"
"893cc270-337f-4829-bb45-0f60d1209419","
N = int(input())
k = 0
power = 1
while power < N:
    power *= 2
    k += 1
print(k)
","1.0"
"893cc270-337f-4829-bb45-0f60d1209419","N = int(input())k = 0power = 1while power < N:power *= 2k += 1print(k)","1.0"
"893cc270-337f-4829-bb45-0f60d1209419","
N = int(input())
k = 0
power = 1
while power < N:
    power *= 2
    k += 1
print(k)
","1.0"
"e618611f-e3b1-4f6f-a57c-44f0d96e4184","
A, B = map(int, input().split())

while A > B:
    if A % 2 == 0 and A // 2 >= B:
        print(':2')
        A //= 2
    else:
        print('-1')
        A -= 1
","1.0"
"e618611f-e3b1-4f6f-a57c-44f0d96e4184","
a, b = map(int, input().split())
commands = []

while a > b:
    if a % 2 == 0 and a // 2 >= b:
        a //= 2
        commands.append("":2"")
    else:
        a -= 1
        commands.append(""-1"")

for command in commands:
    print(command)
","1.0"
"e618611f-e3b1-4f6f-a57c-44f0d96e4184","
A, B = map(int, input().split())

commands = []

while A > B:
    if A % 2 == 0 and A // 2 >= B:
        commands.append(':2')
        A //= 2
    else:
        commands.append('-1')
        A -= 1

for command in commands:
    print(command)
","1.0"
"1516a6df-2eca-4d9d-8705-395d2d5f3a1d","
n = input().strip()
min_digit = '9'
max_digit = '0'

for digit in n:
    if digit < min_digit:
        min_digit = digit
    if digit > max_digit:
        max_digit = digit

print(min_digit, max_digit)
","1.0"
"1516a6df-2eca-4d9d-8705-395d2d5f3a1d","
N = input()
max_digit = -1
min_digit = 10

for char in N:
    digit = int(char)
    if digit > max_digit:
        max_digit = digit
    if digit < min_digit:
        min_digit = digit

print(min_digit, max_digit)
","1.0"
"1516a6df-2eca-4d9d-8705-395d2d5f3a1d","
N = input()
max_digit = -1
min_digit = 10

for char in N:
    digit = int(char)
    if digit > max_digit:
        max_digit = digit
    if digit < min_digit:
        min_digit = digit

print(min_digit, max_digit)
","1.0"
"58443c34-5e1c-4cd5-b526-6442bc1c012d","
def remove_extra_spaces(s):
    return ' '.join(s.split())

input_string = input()
output_string = remove_extra_spaces(input_string)
print(output_string)
","1.0"
"58443c34-5e1c-4cd5-b526-6442bc1c012d","def remove_extra_spaces(s):return ' '.join(s.split())input_string = input()output_string = remove_extra_spaces(input_string)print(output_string)","1.0"
"58443c34-5e1c-4cd5-b526-6442bc1c012d","
def remove_extra_spaces(s):
    return ' '.join(s.split())

input_string = input()
output_string = remove_extra_spaces(input_string)
print(output_string)
","1.0"
"efe1a482-a2db-4971-a769-8b60a0beaf64","
n = int(input())
arr = list(map(int, input().split()))
count = 0
for i in range(1, n - 1):
    if arr[i] > arr[i - 1] and arr[i] > arr[i + 1]:
        count += 1
print(count)
","1.0"
"efe1a482-a2db-4971-a769-8b60a0beaf64","
N = int(input())
arr = list(map(int, input().split()))
count = 0

for i in range(1, N - 1):
    if arr[i] > arr[i - 1] and arr[i] > arr[i + 1]:
        count += 1

print(count)
","1.0"
"efe1a482-a2db-4971-a769-8b60a0beaf64","
N = int(input())
arr = list(map(int, input().split()))
count = 0

for i in range(1, N - 1):
    if arr[i] > arr[i - 1] and arr[i] > arr[i + 1]:
        count += 1

print(count)
","1.0"
"2ee76cc8-f815-4807-a797-4059ae8a8d76","
n = int(input())
arr = list(map(int, input().split()))
counts = {}

for num in arr:
    if num in counts:
        counts[num] += 1
    else:
        counts[num] = 1

for key in sorted(counts.keys()):
    print(key, counts[key])
","1.0"
"2ee76cc8-f815-4807-a797-4059ae8a8d76","
n = int(input())
arr = list(map(int, input().split()))
count = {}

for num in arr:
    if num in count:
        count[num] += 1
    else:
        count[num] = 1

for key in sorted(count.keys()):
    print(key, count[key])
","1.0"
"2ee76cc8-f815-4807-a797-4059ae8a8d76","
n = int(input())
arr = list(map(int, input().split()))
count = {}

for num in arr:
    if num in count:
        count[num] += 1
    else:
        count[num] = 1

for key in sorted(count.keys()):
    print(key, count[key])
","1.0"
"702fc37e-8257-458c-aedd-8ca35534289a","
a, b = map(int, input().split())
c, d = map(int, input().split())
if a + b > c + d:
    print(a, b)
elif a + b < c + d:
    print(c, d)
else:
    print(a, b, c, d)
","1.0"
"702fc37e-8257-458c-aedd-8ca35534289a","n1, n2 = map(int, input().split())
n3, n4 = map(int, input().split())

if n1 + n2 > n3 + n4:
    print(n1, n2)
elif n3 + n4 > n1 + n2:
    print(n3, n4)
else:
    print(n1, n2, n3, n4)
","1.0"
"702fc37e-8257-458c-aedd-8ca35534289a","
a, b = map(int, input().split())
c, d = map(int, input().split())

if a + b > c + d:
    print(a, b)
elif a + b < c + d:
    print(c, d)
else:
    print(a, b, c, d)
","1.0"
"a7278e0b-c30c-439a-94ba-68a803df68b9","
def gcd(x, y):
    while y:
        x, y = y, x % y
    return x

a, b, c, d = map(int, input().split())
numerator = a * d + b * c
denominator = b * d
common_divisor = gcd(numerator, denominator)
m = numerator // common_divisor
n = denominator // common_divisor
print(m, n)
","1.0"
"a7278e0b-c30c-439a-94ba-68a803df68b9","def add_fractions(a, b, c, d):
    lcm = b * d
    numer = a * d + b * c
    denom = lcm
    return numer, denom

a, b, c, d = map(int, input().split())
m, n = add_fractions(a, b, c, d)
print(m, n)
#####","1.0"
"a7278e0b-c30c-439a-94ba-68a803df68b9","
a, b, c, d = map(int, input().split())
m = a * d + c * b
n = b * d

def gcd(x, y):
    while y:
        x, y = y, x % y
    return x

g = gcd(m, n)
print(m // g, n // g)
","1.0"
"190516a0-6ed3-4c42-9f36-dc481a3adb70","
a = int(input())
b = int(input())
print(a + b)
","1.0"
"190516a0-6ed3-4c42-9f36-dc481a3adb70","
a = int(input())
b = int(input())
print(a + b)
","1.0"
"190516a0-6ed3-4c42-9f36-dc481a3adb70","
a = int(input())
b = int(input())
print(a + b)
","1.0"
"5ae76e60-094f-4777-acc2-83ebca17f84c","
def to_roman(X):
    val = [
        100, 90, 50, 40, 10, 9, 5, 4, 1
    ]
    syb = [
        ""C"", ""XC"", ""L"", ""XL"", ""X"", ""IX"", ""V"", ""IV"", ""I""
    ]
    roman_num = ''
    i = 0
    while X > 0:
        for _ in range(X // val[i]):
            roman_num += syb[i]
            X -= val[i]
        i += 1
    return roman_num

X = int(input())
print(to_roman(X))
","1.0"
"5ae76e60-094f-4777-acc2-83ebca17f84c","
def int_to_roman(num):
    val = [
        100, 90, 80, 70, 60, 50, 40, 30, 20, 10,
        9, 8, 7, 6, 5, 4, 3, 2, 1
    ]
    syms = [
        ""C"", ""XC"", ""LXXX"", ""LXX"", ""LX"", ""L"", ""XL"", ""XXX"", ""XX"", ""X"",
        ""IX"", ""VIII"", ""VII"", ""VI"", ""V"", ""IV"", ""III"", ""II"", ""I""
    ]
    roman_num = """"
    for i in range(len(val)):
        while num >= val[i]:
            roman_num += syms[i]
            num -= val[i]
    return roman_num

X = int(input())
print(int_to_roman(X))
","1.0"
"5ae76e60-094f-4777-acc2-83ebca17f84c","
def int_to_roman(num):
    val = [
        100, 90, 80, 70, 60, 50,
        40, 30, 20, 10,
        9, 8, 7, 6, 5, 4, 3, 2, 1
    ]
    syms = [
        ""C"", ""XC"", ""LXXX"", ""LXX"", ""LX"", ""L"",
        ""XL"", ""XXX"", ""XX"", ""X"",
        ""IX"", ""VIII"", ""VII"", ""VI"", ""V"", ""IV"", ""III"", ""II"", ""I""
    ]
    roman_num = """"
    for i in range(len(val)):
        while num >= val[i]:
            roman_num += syms[i]
            num -= val[i]
    return roman_num

X = int(input())
print(int_to_roman(X))
","1.0"
"b4e8d0e8-b2b3-4675-a090-16c08e1e936c","
n = int(input())
result = 1
for i in range(1, n + 1):
    result *= i
print(result)
","1.0"
"b4e8d0e8-b2b3-4675-a090-16c08e1e936c","
n = int(input())
result = 1
for i in range(1, n + 1):
    result *= i
print(result)
","1.0"
"b4e8d0e8-b2b3-4675-a090-16c08e1e936c","
N = int(input())
result = 1
for i in range(1, N + 1):
    result *= i
print(result)
","1.0"
"4cadd9be-89f5-4d54-b38d-f823b7087153","
a, b = map(int, input().split())
for i in range(a, b + 1):
    if i % 2 == 0:
        print(i, end=' ')
","1.0"
"4cadd9be-89f5-4d54-b38d-f823b7087153","n, m = map(int, input().split())
for i in range(n, m + 1):
    if i % 2 == 0:
        print(i, end=' ')","1.0"
"4cadd9be-89f5-4d54-b38d-f823b7087153","
a, b = map(int, input().split())
for i in range(a, b + 1):
    if i % 2 == 0:
        print(i, end=' ')
","1.0"
"6749cc47-75b3-4622-915b-5601e3963b66","x, y = map(float, input().split())day = 1while x < y:x *= 1.1day += 1print(day)","1.0"
"6749cc47-75b3-4622-915b-5601e3963b66","
x, y = map(float, input().split())
day = 1
while x < y:
    x *= 1.1
    day += 1
print(day)
","1.0"
"6749cc47-75b3-4622-915b-5601e3963b66","
x, y = map(float, input().split())
day = 1
while x < y:
    x *= 1.1
    day += 1
print(day)
","1.0"
"3d7a3219-e451-4f8b-894c-c96623eba5e5","
K = input().strip()
if K == K[::-1]:
    print(""YES"")
else:
    print(""NO"")
","1.0"
"3d7a3219-e451-4f8b-894c-c96623eba5e5","K = input().strip()if K == K[::-1]:print(""YES"")else:print(""NO"")","1.0"
"3d7a3219-e451-4f8b-894c-c96623eba5e5","
K = input().strip()
if K == K[::-1]:
    print(""YES"")
else:
    print(""NO"")
","1.0"
"05c50d73-fe75-4975-9d19-7e26e8c8d05f","
def count_words(input_str):
    return len(input_str.split())

input_str = input().strip()
print(count_words(input_str))
","1.0"
"05c50d73-fe75-4975-9d19-7e26e8c8d05f","def word_count(s):
    return len(s.split())

string = ""In the town where I was born""
print(word_count(string))
######","1.0"
"05c50d73-fe75-4975-9d19-7e26e8c8d05f","
line = input().strip()
if line:
    words = line.split()
    print(len(words))
else:
    print(0)
","1.0"
"1038fcef-65cc-4f6b-bde1-5d7d3bffea34","
s = input()
print(s.replace("" "", """"))
","1.0"
"1038fcef-65cc-4f6b-bde1-5d7d3bffea34","def remove_spaces(input_str):
    return input_str.replace("" "", """")

input_str = ""the length of the line does not exceed 1000.""
output = remove_spaces(input_str)
print(output)","1.0"
"1038fcef-65cc-4f6b-bde1-5d7d3bffea34","
s = input()
print(s.replace("" "", """"))
","1.0"
"3876c09d-7f12-4c69-ac5c-8ca780dcd633","
S = input().strip()
i, j = map(int, input().strip().split())
i -= 1
j -= 1
S = S[:i] + S[i:j+1][::-1] + S[j+1:]
print(S)
","1.0"
"3876c09d-7f12-4c69-ac5c-8ca780dcd633","s = input()
i, j = map(int, input().split())
first_part = s[:i-1]
second_part = s[i:j+1][::-1]
third_part = s[j+1:]
print(first_part + second_part + third_part)
","1.0"
"7aecb159-d960-48fa-8ebb-1bfa26b302d4","
ip = input().strip()
parts = ip.split('.')
if len(parts) == 4 and all(part.isdigit() and 0 <= int(part) <= 255 and str(int(part)) == part for part in parts):
    print(1)
else:
    print(0)
","1.0"
"7aecb159-d960-48fa-8ebb-1bfa26b302d4","s=input().split('.')
c=0
for i in s:
    if not i.isdigit() or int(i)>255 or len(i)>3:
        c=1
        break
print(c)","1.0"
"7aecb159-d960-48fa-8ebb-1bfa26b302d4","
def is_valid_ip(ip):
    parts = ip.split('.')
    if len(parts) != 4:
        return 0
    for part in parts:
        if not part.isdigit() or not (0 <= int(part) <= 255) or (part != '0' and part.startswith('0')):
            return 0
    return 1

ip_address = input().strip()
print(is_valid_ip(ip_address))
","1.0"
"7488edcd-5001-458e-955c-d220494cffde","
N = int(input())
arr = list(map(int, input().split()))
print(min(arr))
","1.0"
"7488edcd-5001-458e-955c-d220494cffde","
n = int(input())
arr = list(map(int, input().split()))
min_value = arr[0]
for num in arr:
    if num < min_value:
        min_value = num
print(min_value)
","1.0"
"7488edcd-5001-458e-955c-d220494cffde","
N = int(input())
arr = list(map(int, input().split()))
min_value = arr[0]

for num in arr:
    if num < min_value:
        min_value = num

print(min_value)
","1.0"
"44c593b7-23d8-44af-b1aa-6e5ecbdf6cf1","
n = int(input())
arr = list(map(int, input().split()))
min_val = arr[0]
max_val = arr[0]
for num in arr:
    if num < min_val:
        min_val = num
    if num > max_val:
        max_val = num
average = (min_val + max_val) / 2
print(int(average) if average.is_integer() else average)
","1.0"
"44c593b7-23d8-44af-b1aa-6e5ecbdf6cf1","
n = int(input())
arr = list(map(int, input().split()))
min_val = arr[0]
max_val = arr[0]
for num in arr:
    if num < min_val:
        min_val = num
    if num > max_val:
        max_val = num
avg = (min_val + max_val) / 2
print(int(avg) if avg.is_integer() else avg)
","1.0"
"44c593b7-23d8-44af-b1aa-6e5ecbdf6cf1","
N = int(input())
arr = list(map(int, input().split()))
max_val = max(arr)
min_val = min(arr)
average = (max_val + min_val) / 2
print(int(average))
","1.0"
"9f26801e-6448-47ab-af7c-8cd9ec482ddf","N = int(input())arr = list(map(int, input().split()))print(sum(arr))","1.0"
"9f26801e-6448-47ab-af7c-8cd9ec482ddf","
n = int(input())
arr = list(map(int, input().split()))
print(sum(arr))
","1.0"
"9f26801e-6448-47ab-af7c-8cd9ec482ddf","
N = int(input())
array = list(map(int, input().split()))
print(sum(array))
","1.0"
"abd77e3f-81bd-4c24-afdb-b64873f7c1c3","
n = int(input())
arr = list(map(int, input().split()))
mean = sum(arr) / n
print(round(mean, 1))
","1.0"
"abd77e3f-81bd-4c24-afdb-b64873f7c1c3","
N = int(input())
arr = list(map(int, input().split()))
mean = sum(arr) / N
print(round(mean, 1))
","1.0"
"abd77e3f-81bd-4c24-afdb-b64873f7c1c3","
N = int(input())
arr = list(map(int, input().split()))
mean = sum(arr) / N
print(round(mean, 1))
","1.0"
"94a4304c-1628-4b48-a1bb-62970467c416","
n = int(input())
arr = list(map(int, input().split()))
for i in range(n):
    max_idx = i
    for j in range(i + 1, n):
        if arr[j] < arr[max_idx]:
            max_idx = j
    arr[i], arr[max_idx] = arr[max_idx], arr[i]
print(*arr)
","1.0"
"94a4304c-1628-4b48-a1bb-62970467c416","n = int(input())arr = list(map(int, input().split()))for i in range(n):max_idx = ifor j in range(i + 1, n):if arr[j] < arr[max_idx]:max_idx = jarr[i], arr[max_idx] = arr[max_idx], arr[i]print("" "".join(map(str, arr)))","1.0"
"94a4304c-1628-4b48-a1bb-62970467c416","
n = int(input())
arr = list(map(int, input().split()))

for i in range(n):
    max_index = i
    for j in range(i + 1, n):
        if arr[j] < arr[max_index]:
            max_index = j
    arr[i], arr[max_index] = arr[max_index], arr[i]

print("" "".join(map(str, arr)))
","1.0"
"076a1e7a-9e4f-40ff-a271-7a009406d02d","
n = int(input())
arr = list(map(int, input().split()))

for i in range(n):
    for j in range(n - 1 - i):
        if arr[j] > arr[j + 1]:
            arr[j], arr[j + 1] = arr[j + 1], arr[j]

print(*arr)
","1.0"
"076a1e7a-9e4f-40ff-a271-7a009406d02d","n = int(input())arr = list(map(int, input().split()))for i in range(n):for j in range(0, n-i-1):if arr[j] > arr[j+1]:arr[j], arr[j+1] = arr[j+1], arr[j]print(' '.join(map(str, arr)))","1.0"
"076a1e7a-9e4f-40ff-a271-7a009406d02d","
n = int(input())
arr = list(map(int, input().split()))

for i in range(n):
    for j in range(0, n-i-1):
        if arr[j] > arr[j+1]:
            arr[j], arr[j+1] = arr[j+1], arr[j]

print(' '.join(map(str, arr)))
","1.0"
"b37c6232-1a19-47d7-9250-7e111725e611","
def sum_of_divisors(num):
    total = 0
    for i in range(1, num):
        if num % i == 0:
            total += i
    return total

n, m = map(int, input().split())
if n != m and sum_of_divisors(n) == m and sum_of_divisors(m) == n:
    print(""YES"")
else:
    print(""NO"")
","1.0"
"b37c6232-1a19-47d7-9250-7e111725e611","
def sum_of_divisors(num):
    total = 1
    for i in range(2, (num // 2) + 1):
        if num % i == 0:
            total += i
    return total

n, m = map(int, input().split())
if sum_of_divisors(n) == m and sum_of_divisors(m) == n:
    print(""YES"")
else:
    print(""NO"")
","1.0"
"b37c6232-1a19-47d7-9250-7e111725e611","
def sum_of_divisors(num):
    total = 0
    for i in range(1, num):
        if num % i == 0:
            total += i
    return total

n, m = map(int, input().split())
if sum_of_divisors(n) == m and sum_of_divisors(m) == n:
    print(""YES"")
else:
    print(""NO"")
","1.0"
"3ac18983-f406-44b5-96bf-2aa5ce5a6c3d","
N = int(input())
grades = list(map(int, input().split()))
fives = grades.count(5)
fours = grades.count(4)
threes = grades.count(3)
twos = grades.count(2)
print(f""5 {fives}"")
print(f""4 {fours}"")
print(f""3 {threes}"")
print(f""2 {twos}"")
","1.0"
"3ac18983-f406-44b5-96bf-2aa5ce5a6c3d","n = int(input())
grades = list(map(int, input().split()))
fives = fours = threes = twos = 0

for grade in grades:
    if grade == 5:
        fives += 1
    elif grade == 4:
        fours += 1
    elif grade == 3:
        threes += 1
    elif grade == 2:
        twos += 1

print(f'{5} {fives}')
print(f'{4} {fours}')
print(f'{3} {threes}')
print(f'{2} {twos}')

","1.0"
"2fbbe9c8-9707-450c-82c7-1239bb38b1cd","
text = input()
count = 0
for char in text:
    if char == '!':
        count += 1
print(count)
","1.0"
"2fbbe9c8-9707-450c-82c7-1239bb38b1cd","
def count_exclamation_marks(text):
    return text.count('!')

input_text = input()
print(count_exclamation_marks(input_text))
","1.0"
"2fbbe9c8-9707-450c-82c7-1239bb38b1cd","
def count_exclamation_marks(text):
    return text.count('!')

input_text = input()
print(count_exclamation_marks(input_text))
","1.0"
"f2d92959-39d9-49fe-a9b1-5868567eeedf","
L = int(input())
cm_length = L * 2.54
print(int(cm_length))
","1.0"
"f2d92959-39d9-49fe-a9b1-5868567eeedf","
L = int(input())
cm = L * 2.54
print(int(cm))
","1.0"
"f2d92959-39d9-49fe-a9b1-5868567eeedf","
L = int(input())
cm = L * 2.54
print(int(cm))
","1.0"
"9e9de547-58f5-45b9-a733-37cc732bf237","n = int(input())
m = int(input())
if n * 2.54 <= m:
    print(""YES"")
else:
    print(""NO"")
","1.0"
"9e9de547-58f5-45b9-a733-37cc732bf237","
n = int(input())
m = int(input())
if n * 2.54 <= m:
    print(""YES"")
else:
    print(""NO"")
","1.0"
"9e9de547-58f5-45b9-a733-37cc732bf237","
n = int(input())
m = int(input())
if n * 2.54 <= m:
    print(""YES"")
else:
    print(""NO"")
","1.0"
"bd77bd8e-1bf2-4a3b-b674-9eddb5375116","
n = int(input())
for i in range(2, n+1):
    if n % i == 0:
        print(i)
        break
","1.0"
"bd77bd8e-1bf2-4a3b-b674-9eddb5375116","def gringotts_bank(safe_number):
    for i in range(2, safe_number):
        if safe_number % i == 0:
            return i

safe_number = int(input(""Enter the safe number: ""))
result = gringotts_bank(safe_number)
print(""Number of spells cast:"", result)
\n"")
""Input:\n18\nOutput:\n2\n""","1.0"
"bd77bd8e-1bf2-4a3b-b674-9eddb5375116","
n = int(input())
for i in range(2, n + 1):
    if n % i == 0:
        print(i)
        break
","1.0"
"5362054a-bc83-4623-867a-66a72e38b366","
n = int(input())
gifts = 0
year = 1
while gifts < n:
    gifts = gifts * 2 + 1
    year += 1
if gifts == n:
    print(""YES"")
else:
    print(""NO"")
","1.0"
"5362054a-bc83-4623-867a-66a72e38b366","
n = int(input())
gifts = 0
current = 1

while gifts < n:
    gifts += current
    current = current * 2 + 1

if gifts == n:
    print(""YES"")
else:
    print(""NO"")
","1.0"
"5362054a-bc83-4623-867a-66a72e38b366","
n = int(input())
total_gifts = 0
year = 1

while total_gifts < n:
    gifts_this_year = 2 ** year - 1
    total_gifts += gifts_this_year
    year += 1

if total_gifts == n:
    print(""YES"")
else:
    print(""NO"")
","1.0"
"6ea3787d-36b6-4143-a884-60b71510c4dc","
def replace_letters(s):
    result = """"
    for char in s:
        if 'А' <= char <= 'Я':
            if char == 'Я':
                result += 'А'
            else:
                result += chr(ord(char) + 1)
        else:
            result += char
    return result

input_string = input()
print(replace_letters(input_string))
","1.0"
"6ea3787d-36b6-4143-a884-60b71510c4dc","def encrypt_text(text):
    encrypted_text = ''.join(chr((ord(char) - 65 + 1) % 26 + 65) if char.isalpha() else char for char in text)
    return encrypted_text

input_text = input()
encrypted_output = encrypt_text(input_text)
print(encrypted_output)","1.0"
"6ea3787d-36b6-4143-a884-60b71510c4dc","
def replace_letters(s):
    result = """"
    for char in s:
        if 'А' <= char <= 'Я':
            if char == 'Я':
                result += 'А'
            else:
                result += chr(ord(char) + 1)
        else:
            result += char
    return result

input_string = input().strip()
print(replace_letters(input_string))
","1.0"
"0e835939-e24c-4e99-b563-d8be842cec4d","
s = input()
lower_count = sum(1 for c in s if 'a' <= c <= 'z')
upper_count = sum(1 for c in s if 'A' <= c <= 'Z')

if lower_count + upper_count == 0:
    print(-1)
else:
    print(lower_count / upper_count if upper_count != 0 else lower_count)
","1.0"
"0e835939-e24c-4e99-b563-d8be842cec4d","
s = input()
lower_count = sum(1 for c in s if 'a' <= c <= 'z')
upper_count = sum(1 for c in s if 'A' <= c <= 'Z')
if lower_count == 0 and upper_count == 0:
    print(-1)
else:
    print(lower_count - upper_count)
","1.0"
"0e835939-e24c-4e99-b563-d8be842cec4d","
s = input()
lower_count = sum(1 for c in s if 'a' <= c <= 'z')
upper_count = sum(1 for c in s if 'A' <= c <= 'Z')

if lower_count + upper_count == 0:
    print(-1)
else:
    print(lower_count / upper_count if upper_count != 0 else lower_count)
","1.0"
"1d7d28c9-4d1b-4d70-b2e1-b0393775ab4a","
input_string = input()
numbers = ''.join([char for char in input_string if char.isdigit()])
vowels = 'АЕЁИОУЫЭЮЯAEIOUY'
num_vowels = sum(1 for char in input_string if char in vowels)
number = int(numbers)
result = number % num_vowels
print(result)
","1.0"
"1d7d28c9-4d1b-4d70-b2e1-b0393775ab4a","
def enemy_aircraft_count(s):
    vowels = 'АЕЁИОУЫЭЮЯ'
    num_sum = 0
    vowel_count = 0
    
    for char in s:
        if char.isdigit():
            num_sum = num_sum * 10 + int(char)
        elif char in vowels:
            vowel_count += 1
            
    return num_sum % vowel_count

input_string = input()
print(enemy_aircraft_count(input_string))
","1.0"
"1d7d28c9-4d1b-4d70-b2e1-b0393775ab4a","
s = input()
vowels = 'АЕЁИОУЫЭЮЯ'
num_sum = sum(int(c) for c in s if c.isdigit())
vowel_count = sum(1 for c in s if c in vowels)
result = num_sum % vowel_count
print(result)
","1.0"
"0cc69b6a-3909-441a-a329-8b2c81413bb0","
num = int(input())
print(num // 10)
","1.0"
"0cc69b6a-3909-441a-a329-8b2c81413bb0","n = int(input(""Enter a double digit number: ""))
print(n // 10)","1.0"
"0cc69b6a-3909-441a-a329-8b2c81413bb0","
number = int(input())
tens = number // 10
print(tens)
","1.0"
"80f0773c-d8da-4f89-8ff8-f91226bfbbba","length = int(input())volume = length ** 3print(volume)","1.0"
"80f0773c-d8da-4f89-8ff8-f91226bfbbba","
length = int(input())
volume = length ** 3
print(volume)
","1.0"
"80f0773c-d8da-4f89-8ff8-f91226bfbbba","
length = int(input())
volume = length ** 3
print(volume)
","1.0"
"a34bd4d0-cc64-4d5c-ac41-7578aa90494e","
a = int(input())
b = int(input())
c = int(input())
print(a + b + c)
","1.0"
"a34bd4d0-cc64-4d5c-ac41-7578aa90494e","
a = int(input())
b = int(input())
c = int(input())
perimeter = a + b + c
print(perimeter)
","1.0"
"a34bd4d0-cc64-4d5c-ac41-7578aa90494e","
a = int(input())
b = int(input())
c = int(input())
perimeter = a + b + c
print(perimeter)
","1.0"
"b76c8f23-a934-45a5-ad8c-8396fe67301c","
n = int(input())
numbers = list(map(int, input().split()))

def sum_of_digits(num):
    return sum(int(digit) for digit in str(num))

largest_sum = -1
result_number = -1

for number in numbers:
    current_sum = sum_of_digits(number)
    if current_sum > largest_sum:
        largest_sum = current_sum
        result_number = number

print(result_number)
","1.0"
"b76c8f23-a934-45a5-ad8c-8396fe67301c","n = int(input())numbers = list(map(int, input().split()))max_sum = -1result = 0for number in numbers:digit_sum = sum(int(d) for d in str(number))if digit_sum > max_sum:max_sum = digit_sumresult = numberprint(result)","1.0"
"b76c8f23-a934-45a5-ad8c-8396fe67301c","
n = int(input())
numbers = input().split()
max_sum = -1
result_number = 0

for number in numbers:
    digit_sum = sum(int(digit) for digit in number)
    if digit_sum > max_sum:
        max_sum = digit_sum
        result_number = number

print(result_number)
","1.0"
"c479ed62-3a40-4f93-89c8-b674826ab144","
n = int(input())
count = 0
for i in range(1, n + 1):
    if n % i == 0:
        count += 1
print(count)
","1.0"
"c479ed62-3a40-4f93-89c8-b674826ab144","def divisors_count(n):
    count = 0
    for i in range(1, n+1):
        if n % i == 0:
            count += 1
    return count

n = int(input())
print(divisors_count(n))
","1.0"
"c479ed62-3a40-4f93-89c8-b674826ab144","
n = int(input())
count = 0
for i in range(1, n + 1):
    if n % i == 0:
        count += 1
print(count)
","1.0"
"a93745c4-cdf2-422d-86e3-46fc616f4f80","n = int(input())divisors = [i for i in range(1, n + 1) if n % i == 0 and i % 3 == 0]if divisors:print(len(divisors))print("" "".join(map(str, divisors)))else:print(0)","1.0"
"a93745c4-cdf2-422d-86e3-46fc616f4f80","n = int(input())divisors = [i for i in range(1, n + 1) if n % i == 0 and i % 3 == 0]if divisors:print(len(divisors))print("" "".join(map(str, divisors)))else:print(0)","1.0"
"a93745c4-cdf2-422d-86e3-46fc616f4f80","
n = int(input())
divisors = [i for i in range(1, n + 1) if n % i == 0 and i % 3 == 0]
if divisors:
    print(len(divisors))
    print(' '.join(map(str, divisors)))
else:
    print(0)
","1.0"
"3d109570-fadd-47bd-b0cb-2d9d34ba11ca","
def power(a, b):
    result = 1
    for _ in range(b):
        result *= a
    return result

x, p, y, t = map(int, input().split())
output = power(x, p) + power(y, t)
print(output)
","1.0"
"3d109570-fadd-47bd-b0cb-2d9d34ba11ca","
def power(base, exponent):
    result = 1
    for _ in range(exponent):
        result *= base
    return result

x, p, y, t = map(int, input().split())
result = power(x, p) + power(y, t)
print(result)
","1.0"
"3d109570-fadd-47bd-b0cb-2d9d34ba11ca","
def exponentiate(base, power):
    result = 1
    for _ in range(power):
        result *= base
    return result

x, p, y, t = map(int, input().split())
result = exponentiate(x, p) + exponentiate(y, t)
print(result)
","1.0"
"ba19f22d-c2e8-4297-a112-1bd049ae9bdc","
total = 0
count = 0

while True:
    num = int(input())
    if num == 0:
        break
    if num % 8 == 0:
        total += num
        count += 1

if count == 0:
    print(""NO"")
else:
    mean = total / count
    print(f""{mean:.1f}"")
","1.0"
"ba19f22d-c2e8-4297-a112-1bd049ae9bdc","
total = 0
count = 0

while True:
    num = int(input())
    if num == 0:
        break
    if num % 8 == 0:
        total += num
        count += 1

if count == 0:
    print(""NO"")
else:
    mean = total / count
    print(f""{mean:.1f}"")
","1.0"
"ba19f22d-c2e8-4297-a112-1bd049ae9bdc","
total = 0
count = 0

while True:
    num = int(input())
    if num == 0:
        break
    if num % 8 == 0:
        total += num
        count += 1

if count == 0:
    print(""NO"")
else:
    mean = total / count
    print(f""{mean:.1f}"")
","1.0"
"1ff5a639-82a9-46d5-99e8-90b0529a5016","
n = int(input())
tables = (n + 2) // 3
print(tables)
","1.0"
"1ff5a639-82a9-46d5-99e8-90b0529a5016","
n = int(input())
tables = (n + 2) // 3
print(tables)
","1.0"
"1ff5a639-82a9-46d5-99e8-90b0529a5016","
n = int(input())
tables = (n + 2) // 3
print(tables)
","1.0"
"52fd296b-798f-4462-889c-5b49172bf987","
n = int(input())
m = int(input())
k = int(input())

galleons = 2
galleon_to_shekels = 17
shekel_to_knuts = 29

total_knuts = galleons * galleon_to_shekels * shekel_to_knuts

pumpkin_pie_cost = 26
chocolate_frog_cost = 1 * shekel_to_knuts + 9
candy_bag_cost = 1 * shekel_to_knuts + 13

total_cost = n * pumpkin_pie_cost + m * chocolate_frog_cost + k * candy_bag_cost

change = total_knuts - total_cost
print(change)
","1.0"
"52fd296b-798f-4462-889c-5b49172bf987","
n = int(input())
m = int(input())
k = int(input())

cost_pumpkin_pie = 26
cost_chocolate_frog = 1 * 29 + 9
cost_candy = 1 * 29 + 13

total_cost = n * cost_pumpkin_pie + m * cost_chocolate_frog + k * cost_candy
total_money = 2 * 17 * 29

change = total_money - total_cost
print(change)
","1.0"
"52fd296b-798f-4462-889c-5b49172bf987","
n = int(input())
m = int(input())
k = int(input())

galleons = 2
shekels_per_galleon = 17
knuts_per_shekel = 29

total_knuts = galleons * shekels_per_galleon * knuts_per_shekel

cost_pumpkin_pies = n * 26
cost_chocolate_frogs = m * (1 * knuts_per_shekel + 9)
cost_candies = k * (1 * knuts_per_shekel + 13)

total_cost = cost_pumpkin_pies + cost_chocolate_frogs + cost_candies

change = total_knuts - total_cost

print(change)
","1.0"
"08f18ec8-c939-44c6-b125-642f6a2341fa","
n = int(input())
harry_ron = n // 4
hermione = n - 2 * harry_ron
print(harry_ron, harry_ron, hermione)
","1.0"
"08f18ec8-c939-44c6-b125-642f6a2341fa","n = int(input())harry_ron = n // 5hermione = n - 2 * harry_ronprint(harry_ron, harry_ron, hermione)","1.0"
"08f18ec8-c939-44c6-b125-642f6a2341fa","
n = int(input())
harry_ron = n // 5
hermione = n - 2 * harry_ron
print(harry_ron, harry_ron, hermione)
","1.0"
"94224cd9-666a-4814-8edb-60beb14ea59a","
d = int(input())
m = int(input())
y = int(input())

if y == 2010 and (m < 9 or (m == 8 and d <= 31)):
    print(""YES"")
elif y < 2010:
    print(""YES"")
else:
    print(""NO"")
","1.0"
"94224cd9-666a-4814-8edb-60beb14ea59a","
d = int(input())
m = int(input())
y = int(input())

if (y < 2010) or (y == 2010 and (m < 9 or (m == 9 and d < 1))):
    print(""NO"")
elif (y > 2010):
    print(""NO"")
else:
    print(""YES"")
","1.0"
"94224cd9-666a-4814-8edb-60beb14ea59a","
d = int(input())
m = int(input())
y = int(input())

if (y < 2010) or (y == 2010 and (m < 9 or (m == 9 and d < 1))):
    print(""NO"")
elif (y > 2010):
    print(""NO"")
else:
    print(""YES"")
","1.0"
"f9f08d20-e4e6-49ac-8682-f4b7100928a4","a = int(input())b = int(input())d = int(input())if d + 4 <= a and d + 4 <= b:print(""YES"")else:print(""NO"")","1.0"
"f9f08d20-e4e6-49ac-8682-f4b7100928a4","a = int(input())b = int(input())d = int(input())if (a >= d + 2) and (b >= d + 2):print(""YES"")else:print(""NO"")","1.0"
"f9f08d20-e4e6-49ac-8682-f4b7100928a4","
a = int(input())
b = int(input())
d = int(input())

if (d + 4 <= a) and (d + 4 <= b):
    print(""YES"")
else:
    print(""NO"")
","1.0"
"75214b1c-bb28-44e5-8474-ac6b45c80db9","
n = int(input())
m = int(str(n)[::-1])
print(n + m)
","1.0"
"75214b1c-bb28-44e5-8474-ac6b45c80db9","
n = int(input())
m = int(str(n)[::-1])
result = n + m
print(result)
","1.0"
"75214b1c-bb28-44e5-8474-ac6b45c80db9","
n = int(input())
m = int(str(n)[::-1])
result = n + m
print(result)
","1.0"
"ade9b273-aad8-49ba-b6a7-7ffcb02b0011","
text = input()

def contains_digit(text):
    for char in text:
        if char.isdigit():
            return ""YES""
    return ""NO""

print(contains_digit(text))
","1.0"
"ade9b273-aad8-49ba-b6a7-7ffcb02b0011","
text = input()
for char in text:
    if char.isdigit():
        print(""YES"")
        break
else:
    print(""NO"")
","1.0"
"ade9b273-aad8-49ba-b6a7-7ffcb02b0011","
text = input()

if any(char.isdigit() for char in text):
    print(""YES"")
else:
    print(""NO"")
","1.0"
"cc10dddd-3324-493a-b0ac-ec2ff8c66cf6","
s = input()
russian_letters = 0
numbers = 0
for char in s:
    if 'А' <= char <= 'Я' or 'а' <= char <= 'я':
        russian_letters += 1
    elif '0' <= char <= '9':
        numbers += 1
if russian_letters > numbers:
    print(1)
elif numbers > russian_letters:
    print(2)
else:
    print(0)
","1.0"
"cc10dddd-3324-493a-b0ac-ec2ff8c66cf6","def compare_russian_letters_and_numbers(s):russian_count = sum(1 for char in s if 'а' <= char <= 'я' or 'А' <= char <= 'Я')number_count = sum(1 for char in s if char.isdigit())if russian_count > number_count:print(1)elif number_count > russian_count:print(2)else:print(0)input_string = input()compare_russian_letters_and_numbers(input_string)","1.0"
"cc10dddd-3324-493a-b0ac-ec2ff8c66cf6","
def count_russian_letters_and_numbers(s):
    russian_count = 0
    number_count = 0
    for char in s:
        if 'а' <= char <= 'я' or 'А' <= char <= 'Я':
            russian_count += 1
        elif '0' <= char <= '9':
            number_count += 1
    if russian_count > number_count:
        return 1
    elif number_count > russian_count:
        return 2
    else:
        return 0

input_string = input()
result = count_russian_letters_and_numbers(input_string)
print(result)
","1.0"
"18bbabdd-799e-47e6-b085-3698d76792e0","
perimeter = int(input())
side = perimeter // 4
print(side)
","1.0"
"18bbabdd-799e-47e6-b085-3698d76792e0","
perimeter = int(input())
side = perimeter // 4
print(side)
","1.0"
"18bbabdd-799e-47e6-b085-3698d76792e0","
p = int(input())
side = p // 4
print(side)
","1.0"
"1b2dfff2-077c-4804-9067-dec63bee6584","
s = input().strip()
char = input().strip()
max_length = 0
current_length = 0

for c in s:
    if c == char:
        current_length += 1
        if current_length > max_length:
            max_length = current_length
    else:
        current_length = 0

print(max_length)
","1.0"
"1b2dfff2-077c-4804-9067-dec63bee6584","
s = input()
char = input()
max_length = 0
current_length = 0

for c in s:
    if c == char:
        current_length += 1
        if current_length > max_length:
            max_length = current_length
    else:
        current_length = 0

print(max_length)
","1.0"
"1b2dfff2-077c-4804-9067-dec63bee6584","
s = input().strip()
char = input().strip()
max_length = 0
current_length = 0

for c in s:
    if c == char:
        current_length += 1
        if current_length > max_length:
            max_length = current_length
    else:
        current_length = 0

print(max_length)
","1.0"
"b8f9bbc2-7933-426f-a21d-ff3e82abc198","s = input()max_char = ''max_length = 0current_char = ''current_length = 0for char in s:if char == current_char:current_length += 1else:if current_length > max_length:max_length = current_lengthmax_char = current_charcurrent_char = charcurrent_length = 1if current_length > max_length:max_length = current_lengthmax_char = current_charprint(max_char, max_length)","1.0"
"b8f9bbc2-7933-426f-a21d-ff3e82abc198","
def longest_chain(s):
    max_char = ''
    max_length = 0
    current_char = ''
    current_length = 0

    for char in s:
        if char == current_char:
            current_length += 1
        else:
            if current_length > max_length:
                max_length = current_length
                max_char = current_char
            current_char = char
            current_length = 1

    if current_length > max_length:
        max_length = current_length
        max_char = current_char

    print(max_char, max_length)

input_string = input()
longest_chain(input_string)
","1.0"
"b8f9bbc2-7933-426f-a21d-ff3e82abc198","
s = input().strip()
max_char = ''
max_length = 0
current_char = ''
current_length = 0

for char in s:
    if char == current_char:
        current_length += 1
    else:
        if current_length > max_length:
            max_length = current_length
            max_char = current_char
        current_char = char
        current_length = 1

if current_length > max_length:
    max_length = current_length
    max_char = current_char

print(max_char, max_length)
","1.0"
"704fe53c-bcb7-48de-a964-e687a0ae281c","
def longest_subchain(s):
    max_length = 0
    current_length = 0
    
    for char in s:
        if char in 'ABC':
            current_length += 1
            max_length = max(max_length, current_length)
        else:
            current_length = 0
            
    return max_length

# Example usage
input_string = ""BADAAAEECECEEB""
print(longest_subchain(input_string))
","1.0"
"704fe53c-bcb7-48de-a964-e687a0ae281c","def longest_subchain(chain):
    counter = 0
    max_length = 0
    for char in chain:
        if char in 'ABC':
            counter += 1
        else:
            max_length = max(max_length, counter)
            counter = 0
    max_length = max(max_length, counter)
    return max_length

# Example usage:
chain1 = 'BADAAAEECECEEB'
print(longest_subchain(chain1))  # Output: 3

chain2 = 'AEECBACEDDEEACECBADAAAEECECEEB'
print(longest_subchain(chain2))  # Output: 4","1.0"
"704fe53c-bcb7-48de-a964-e687a0ae281c","
def longest_subchain(s):
    max_length = 0
    current_length = 0
    
    for char in s:
        if char in 'ABC':
            current_length += 1
            if current_length > max_length:
                max_length = current_length
        else:
            current_length = 0
            
    return max_length

input_string = input().strip()
print(longest_subchain(input_string))
","1.0"
"06c76227-d39e-4bac-8f71-f68c262dd42e","
def max_chain_length(s):
    pattern = ""EAB""
    count = 0
    i = 0
    while i < len(s):
        if s[i:i+3] == pattern:
            count += 3
            i += 3
        elif s[i:i+1] == 'E':
            count += 1
            i += 1
        else:
            break
    return count

input_string = input().strip()
print(max_chain_length(input_string))
","1.0"
"06c76227-d39e-4bac-8f71-f68c262dd42e","def max_chain_length(s):
    count_e = s.count('E')
    count_a = (count_e + 1) // 2

    max_length = count_e + count_a
    return max_length


if __name__ == ""__main__"":
    s = input()
    print(max_chain_length(s))
</REASONING>
<|end_of_text|>://nput://EAB
Ответ: 3
-grade
endcode
<|end_of_text|>://nput:
EABE
Ответ: 4
-grade
endcode
respond
 davidjl
<|end_of_text|>://nput:
EABEABEABCEABEADD
Ответ: 9
-grade
endcode
<|end_of_text|>://nput:
ACBDAEABCEABEADD
Ответ: 9
-grade
endcode
<|end_of_text|>://nput:
respuesta
 Raptors
Ответ: 3
-grade
endcode","1.0"
"06c76227-d39e-4bac-8f71-f68c262dd42e","
def max_chain_length(s):
    count = 0
    for i in range(len(s) - 2):
        if s[i:i+3] == 'EAB':
            count += 3
    if s[count:count+2] == 'EA':
        count += 2
    return count

input_string = input().strip()
print(max_chain_length(input_string))
","1.0"
"0df7e1f2-c1c4-41f3-9904-a9e4495a5bfc","
a = int(input())
b = int(input())

for n in range(a, b + 1):
    divisors = []
    for d in range(10, 100):
        if n % d == 0:
            divisors.append(d)
    if len(divisors) == 30:
        print(n, divisors[0], divisors[-1])
","1.0"
"0df7e1f2-c1c4-41f3-9904-a9e4495a5bfc","
a = int(input())
b = int(input())

for n in range(a, b + 1):
    two_digit_divisors = []
    for d in range(10, 100):
        if n % d == 0:
            two_digit_divisors.append(d)
    if len(two_digit_divisors) == 30:
        print(n, min(two_digit_divisors), max(two_digit_divisors))
","1.0"
"0df7e1f2-c1c4-41f3-9904-a9e4495a5bfc","
a = int(input())
b = int(input())

for n in range(a, b + 1):
    two_digit_divisors = []
    for d in range(10, 100):
        if n % d == 0:
            two_digit_divisors.append(d)
    if len(two_digit_divisors) == 30:
        print(n, min(two_digit_divisors), max(two_digit_divisors))
","1.0"
"8ce41d60-130a-4863-a45a-1fd4e48e5f32","
x, y = map(int, input().split())
if x > 0 and y > 0:
    print(1)
elif x < 0 and y > 0:
    print(2)
elif x < 0 and y < 0:
    print(3)
elif x > 0 and y < 0:
    print(4)
","1.0"
"8ce41d60-130a-4863-a45a-1fd4e48e5f32","point = list(map(int, input().split()))

if point[0] > 0:
    if point[1] > 0:
        print(1)
    else:
        print(4)
else:
    if point[1] > 0:
        print(2)
    else:
        print(3)","1.0"
"8ce41d60-130a-4863-a45a-1fd4e48e5f32","
x, y = map(int, input().split())

if x > 0 and y > 0:
    print(1)
elif x < 0 and y > 0:
    print(2)
elif x < 0 and y < 0:
    print(3)
elif x > 0 and y < 0:
    print(4)
","1.0"
"510dc5c7-a46e-4b15-be50-4ecfa1e046bd","
N = int(input())
grades = list(map(int, input().split()))
average = sum(grades) / N
print(round(average))
","1.0"
"510dc5c7-a46e-4b15-be50-4ecfa1e046bd","
N = int(input())
grades = list(map(int, input().split()))
average = sum(grades) / N
print(round(average))
","1.0"
"510dc5c7-a46e-4b15-be50-4ecfa1e046bd","
N = int(input())
grades = list(map(int, input().split()))
average = sum(grades) / N
print(round(average))
","1.0"
"a0f460df-bf11-47a1-b164-d95c2d265cc6","
N = int(input())
grades = list(map(int, input().split()))
grades.sort(reverse=True)
print(' '.join(map(str, grades)))
","1.0"
"a0f460df-bf11-47a1-b164-d95c2d265cc6","
n = int(input())
grades = list(map(int, input().split()))
grades.sort(reverse=True)
print(' '.join(map(str, grades)))
","1.0"
"a0f460df-bf11-47a1-b164-d95c2d265cc6","
N = int(input())
grades = list(map(int, input().split()))
grades.sort(reverse=True)
print(' '.join(map(str, grades)))
","1.0"
"d0a972df-02e0-41b9-a5e6-ff41f6ccc00e","
n = int(input())
lowest_temperature = None
below_minus_15 = False

for _ in range(n):
    temperature = int(input())
    if lowest_temperature is None or temperature < lowest_temperature:
        lowest_temperature = temperature
    if temperature < -15:
        below_minus_15 = True

print(lowest_temperature)
print(""YES"" if below_minus_15 else ""NO"")
","1.0"
"d0a972df-02e0-41b9-a5e6-ff41f6ccc00e","N = int(input())temperatures = [int(input()) for _ in range(N)]lowest_temp = min(temperatures)print(lowest_temp)print(""YES"" if lowest_temp < -15 else ""NO"")","1.0"
"d0a972df-02e0-41b9-a5e6-ff41f6ccc00e","
N = int(input())
temperatures = [int(input()) for _ in range(N)]
lowest_temp = min(temperatures)
print(lowest_temp)
print(""YES"" if lowest_temp < -15 else ""NO"")
","1.0"
"66c9f51f-8598-480d-85ef-3830594163ab","
n = int(input())
desks = (n + 2) // 3
last_desk = n % 3 if n % 3 != 0 else 3
print(desks, last_desk)
","1.0"
"66c9f51f-8598-480d-85ef-3830594163ab","n = int(input())desks = (n + 2) // 3students_last_desk = n % 3 if n % 3 != 0 else 3print(desks, students_last_desk)","1.0"
"66c9f51f-8598-480d-85ef-3830594163ab","
n = int(input())
desks = (n + 2) // 3
last_desk_students = n % 3 if n % 3 != 0 else 3
print(desks, last_desk_students)
","1.0"
"5d02ab7a-4394-4098-9f7a-ed3912083888","
h = int(input())
m = int(input())

m += 15
if m >= 60:
    m -= 60
    h += 1
h += 1
if h >= 24:
    h -= 24

print(h, m)
","1.0"
"5d02ab7a-4394-4098-9f7a-ed3912083888","
h = int(input())
m = int(input())

m += 15
h += 1

if m >= 60:
    m -= 60
    h += 1

if h >= 24:
    h -= 24

print(h, m)
","1.0"
"5d02ab7a-4394-4098-9f7a-ed3912083888","
h = int(input())
m = int(input())
infusion_time = 75
total_minutes = h * 60 + m + infusion_time
final_h = (total_minutes // 60) % 24
final_m = total_minutes % 60
print(final_h, final_m)
","1.0"
"d48be896-b484-440a-9ca5-2cc0f31533dc","X = int(input())Y = int(input())if (X == 5 and Y == 4) or (X == 6 and Y == 2) or (X == 6 and Y == 4) or (X == 5 and Y == 6) or (X == 4 and Y == 5) or (X == 4 and Y == 3) or (X == 3 and Y == 4) or (X == 3 and Y == 6):print(""YES"")else:print(""NO"")","1.0"
"d48be896-b484-440a-9ca5-2cc0f31533dc","
X = int(input())
Y = int(input())
if (X == 5 and Y == 4) or (X == 6 and Y == 5) or (X == 6 and Y == 1) or (X == 5 and Y == 2) or (X == 4 and Y == 5) or (X == 4 and Y == 1) or (X == 3 and Y == 4) or (X == 3 and Y == 2):
    print(""YES"")
else:
    print(""NO"")
","1.0"
"d48be896-b484-440a-9ca5-2cc0f31533dc","
X = int(input())
Y = int(input())

if (X == 5 and Y == 4) or (X == 6 and Y == 2) or (X == 6 and Y == 4) or (X == 5 and Y == 2) or (X == 4 and Y == 3) or (X == 4 and Y == 5) or (X == 3 and Y == 4) or (X == 3 and Y == 2):
    print(""YES"")
else:
    print(""NO"")
","1.0"
"4659a273-9c89-4ff8-a1bd-6d0ae87e9915","
n = int(input())
afraid = n - 2
if afraid % 10 == 1 and afraid % 100 != 11:
    print(f""{afraid} mag"")
elif 2 <= afraid % 10 <= 4 and (afraid % 100 < 10 or afraid % 100 >= 20):
    print(f""{afraid} maga"")
else:
    print(f""{afraid} magov"")
","1.0"
"4659a273-9c89-4ff8-a1bd-6d0ae87e9915","
n = int(input())
if n == 1:
    print(""1 mag"")
elif n == 2:
    print(""1 mag"")
elif n == 3:
    print(""1 mag"")
elif n == 4:
    print(""2 maga"")
elif n == 5:
    print(""3 magov"")
elif n == 6:
    print(""4 magov"")
else:
    print(f""{n - 2} magov"")
","1.0"
"4659a273-9c89-4ff8-a1bd-6d0ae87e9915","
n = int(input())
afraid_magicians = n - 2
if afraid_magicians % 10 == 1 and afraid_magicians % 100 != 11:
    suffix = ""mag""
elif 2 <= afraid_magicians % 10 <= 4 and (afraid_magicians % 100 < 10 or afraid_magicians % 100 >= 20):
    suffix = ""maga""
else:
    suffix = ""magov""
print(afraid_magicians, suffix)
","1.0"
"777756d6-d867-4cc7-978e-717933384418","n = int(input())houses = [""Gryffindor"", ""Slytherin"", ""Ravenclaw"", ""Hufflepuff""]print(houses[(n - 1) % 4])","1.0"
"777756d6-d867-4cc7-978e-717933384418","
n = int(input())
houses = [""Gryffindor"", ""Slytherin"", ""Ravenclaw"", ""Hufflepuff""]
print(houses[(n - 1) % 4])
","1.0"
"777756d6-d867-4cc7-978e-717933384418","
n = int(input())
houses = [""Gryffindor"", ""Slytherin"", ""Ravenclaw"", ""Hufflepuff""]
print(houses[(n - 1) % 4])
","1.0"
"af34735a-a422-4900-a41c-ce3188000595","
n = int(input())
i = 0
while i < n:
    print(""I must not tell lies"")
    i += 1
","1.0"
"af34735a-a422-4900-a41c-ce3188000595","
n = int(input())

for i in range(n):
    print(""I must not tell lies"")
","1.0"
"af34735a-a422-4900-a41c-ce3188000595","
n = int(input())
i = 0
while i < n:
    print(""I must not tell lies"")
    i += 1
","1.0"
"15420900-ca97-49e3-846a-13bd92d9bace","n = int(input())while n > 0:print(n % 10)n //= 10","1.0"
"15420900-ca97-49e3-846a-13bd92d9bace","
n = int(input())
while n > 0:
    print(n % 10)
    n //= 10
","1.0"
"15420900-ca97-49e3-846a-13bd92d9bace","
n = int(input())
while n > 0:
    print(n % 10)
    n //= 10
","1.0"
"a809c102-e8a6-45ff-9baa-9a998d1927f1","
n = int(input())
m = int(input())
for i in range(m):
    n = n * 3
    print(n)
","1.0"
"a809c102-e8a6-45ff-9baa-9a998d1927f1","n = int(input())
m = int(input())

for _ in range(m):
    n = n * 3

print(n)
###","1.0"
"a809c102-e8a6-45ff-9baa-9a998d1927f1","
n = int(input())
m = int(input())
for week in range(m):
    n *= 3
    print(n)
","1.0"
"c7512b39-389d-4ddb-b3fe-5475bd01a088","a = int(input())
b = int(input())
attempts = 0
correct_sum = a + b

while True:
    attempts += 1
    s = int(input())
    if s == correct_sum:
        break

print(attempts)","1.0"
"c7512b39-389d-4ddb-b3fe-5475bd01a088","a = int(input())b = int(input())correct_sum = a + battempts = 0while True:s = int(input())attempts += 1if s == correct_sum:print(attempts)break","1.0"
"c7512b39-389d-4ddb-b3fe-5475bd01a088","
a = int(input())
b = int(input())
correct_sum = a + b
attempts = 0

while True:
    s = int(input())
    attempts += 1
    if s == correct_sum:
        print(attempts)
        break
","1.0"
"8db514ad-0242-48a9-ab6e-85b0e8171d87","
A = int(input())
B = int(input())
count = 0

while A > 0 and B > 0:
    if A > B:
        count += A // B
        A = A % B
    else:
        count += B // A
        B = B % A

print(count)
","1.0"
"8db514ad-0242-48a9-ab6e-85b0e8171d87","
A = int(input())
B = int(input())
count = 0

while A > 0 and B > 0:
    if A > B:
        count += A // B
        A = A % B
    else:
        count += B // A
        B = B % A

print(count)
","1.0"
"8db514ad-0242-48a9-ab6e-85b0e8171d87","
A = int(input())
B = int(input())
count = 0

while A > 0 and B > 0:
    if A > B:
        count += A // B
        A = A % B
    else:
        count += B // A
        B = B % A

print(count)
","1.0"
"0c2c7e3c-f232-46ee-b1a9-748e4ac46772","
s = input()
if any(c not in 'абвгдеёжзийклмнопрстуфхцчшщыэюяАБВГДЕЁЖЗИЙКЛМНОПРСТУФХЦЧШЩЫЭЮЯ' for c in s):
    print(""YES"")
else:
    print(""NO"")
","1.0"
"0c2c7e3c-f232-46ee-b1a9-748e4ac46772","
s = input()
if all('а' <= c <= 'я' or 'А' <= c <= 'Я' for c in s if c.isalpha()):
    print(""NO"")
else:
    print(""YES"")
","1.0"
"0c2c7e3c-f232-46ee-b1a9-748e4ac46772","
s = input()
if all('а' <= c <= 'я' or 'А' <= c <= 'Я' for c in s if c.isalpha()):
    print(""NO"")
else:
    print(""YES"")
","1.0"
"5b6da202-e075-48fb-a015-421187973431","
v = int(input())
t = int(input())
print(v * t)
","1.0"
"5b6da202-e075-48fb-a015-421187973431","v, t = input().split()
v = int(v)
t = int(t)
print(v * t)","1.0"
"5b6da202-e075-48fb-a015-421187973431","
v = int(input())
t = int(input())
distance = v * t
print(distance)
","1.0"
"050f0a60-1200-4dec-acb5-12c3b9f24d0d","
n = int(input())
print(n // 60)
","1.0"
"050f0a60-1200-4dec-acb5-12c3b9f24d0d","
n = int(input())
hours = n // 60
print(hours)
","1.0"
"050f0a60-1200-4dec-acb5-12c3b9f24d0d","
n = int(input())
hours = n // 60
print(hours)
","1.0"
"33cf3c19-292d-4544-a9a5-0e2a3c965272","
numbers = list(map(int, input().split()))
count = 0
for number in numbers:
    if 10 <= number < 100 and number % 10 == 0:
        count += 1
print(count)
","1.0"
"33cf3c19-292d-4544-a9a5-0e2a3c965272","numbers = list(map(int, input().split()))count = 0for num in numbers:if 10 <= num < 100 and num % 10 == 0:count += 1print(count)","1.0"
"33cf3c19-292d-4544-a9a5-0e2a3c965272","
numbers = list(map(int, input().split()))
count = 0
for number in numbers:
    if 10 <= number < 100 and number % 10 == 0:
        count += 1
print(count)
","1.0"
"40d78243-79a0-4ec7-8ff5-47f803a55e0b","
def count_valid_chains(input_string):
    count = 0
    for i in range(len(input_string) - 2):
        first, second, third = input_string[i], input_string[i+1], input_string[i+2]
        if first in 'BCD' and second in 'BDE' and third in 'BCE':
            if first != second and second != third:
                count += 1
    return count

input_string = input().strip()
print(count_valid_chains(input_string))
","1.0"
"40d78243-79a0-4ec7-8ff5-47f803a55e0b","
def count_chains(s):
    count = 0
    for i in range(len(s) - 2):
        first = s[i]
        if first in 'BCD':
            second = s[i + 1]
            if second in 'BDE' and second != first:
                third = s[i + 2]
                if third in 'BCE' and third != second:
                    count += 1
    return count

input_string = input().strip()
print(count_chains(input_string))
","1.0"
"40d78243-79a0-4ec7-8ff5-47f803a55e0b","
s = input().strip()
count = 0
for i in range(len(s) - 2):
    if s[i] in 'BCD':
        if s[i + 1] in 'BDE' and s[i + 1] != s[i]:
            if s[i + 2] in 'BCE' and s[i + 2] != s[i + 1]:
                count += 1
print(count)
","1.0"
"f2aee372-d88a-497b-a1d2-64b122fc8b0a","
n = int(input())
for i in range(2, n + 1):
    if n % i == 0:
        print(i)
        break
","1.0"
"f2aee372-d88a-497b-a1d2-64b122fc8b0a","def smallest_divisor(n):
    for i in range(2, n + 1):
        if n % i == 0:
            return i

n = int(input())
print(smallest_divisor(n))","1.0"
"f2aee372-d88a-497b-a1d2-64b122fc8b0a","
n = int(input())
for i in range(2, n + 1):
    if n % i == 0:
        print(i)
        break
","1.0"
"132b4d29-b1fe-4591-be7e-9e4e150e35b6","
n = int(input())
if n <= 1:
    print(""NO"")
else:
    is_prime = True
    for i in range(2, int(n**0.5) + 1):
        if n % i == 0:
            is_prime = False
            break
    if is_prime:
        print(""YES"")
    else:
        print(""NO"")
","1.0"
"132b4d29-b1fe-4591-be7e-9e4e150e35b6","def is_prime(n):
    if n <= 1:
        return 'NO'
    for i in range(2, int(n ** 0.5) + 1):
        if n % i == 0:
            return 'NO'
    return 'YES'

n = int(input())
print(is_prime(n))
","1.0"
"132b4d29-b1fe-4591-be7e-9e4e150e35b6","
n = int(input())
if n < 2:
    print(""NO"")
else:
    for i in range(2, int(n**0.5) + 1):
        if n % i == 0:
            print(""NO"")
            break
    else:
        print(""YES"")
","1.0"
"3ae56164-1134-42f9-8fd7-204a82b81e52","
def smallest_number_with_divisors(a):
    def prime_factors(n):
        factors = []
        d = 2
        while d * d <= n:
            while (n % d) == 0:
                factors.append(d)
                n //= d
            d += 1
        if n > 1:
            factors.append(n)
        return factors

    def count_divisors(n):
        count = 0
        for i in range(1, int(n**0.5) + 1):
            if n % i == 0:
                count += 1
                if i != n // i:
                    count += 1
        return count

    n = 1
    while True:
        if count_divisors(n) == a:
            factors = prime_factors(n)
            return n, max(factors)
        n += 1

a = int(input())
result = smallest_number_with_divisors(a)
print(result[0], result[1])
","1.0"
"3ae56164-1134-42f9-8fd7-204a82b81e52","def smallest_number_with_exact_divisors(a):def prime_factors(n):factors = set()while n % 2 == 0:factors.add(2)n //= 2for i in range(3, int(n**0.5) + 1, 2):while n % i == 0:factors.add(i)n //= iif n > 2:factors.add(n)return factorsdef count_divisors(n):count = 1for i in range(2, int(n**0.5) + 1):if n % i == 0:exp = 0while n % i == 0:n //= iexp += 1count *= (exp + 1)if n > 1:count *= 2return countn = 1while True:if count_divisors(n) == a:greatest_prime = max(prime_factors(n))return n, greatest_primen += 1a = int(input())result = smallest_number_with_exact_divisors(a)print(result[0], result[1])","1.0"
"3ae56164-1134-42f9-8fd7-204a82b81e52","
def smallest_number_with_exactly_a_divisors(a):
    def prime_factors(n):
        factors = []
        d = 2
        while d * d <= n:
            while (n % d) == 0:
                factors.append(d)
                n //= d
            d += 1
        if n > 1:
            factors.append(n)
        return factors

    def count_divisors(n):
        count = 0
        for i in range(1, int(n**0.5) + 1):
            if n % i == 0:
                count += 1
                if i != n // i:
                    count += 1
        return count

    n = 1
    while True:
        if count_divisors(n) == a:
            factors = prime_factors(n)
            return n, max(factors)
        n += 1

a = int(input())
result = smallest_number_with_exactly_a_divisors(a)
print(result[0], result[1])
","1.0"
"e291f79e-b00b-4223-8250-eb7e45d39e54","def replace_letters(text):return text.replace('R', 'Z').replace('r', 'z')input_text = input()output_text = replace_letters(input_text)print(output_text)","1.0"
"e291f79e-b00b-4223-8250-eb7e45d39e54","
text = input()
result = ''
for char in text:
    if char == 'R':
        result += 'Z'
    elif char == 'r':
        result += 'z'
    else:
        result += char
print(result)
","1.0"
"e291f79e-b00b-4223-8250-eb7e45d39e54","
def replace_hated_letter(text):
    return text.replace('R', 'Z').replace('r', 'z')

input_text = input()
output_text = replace_hated_letter(input_text)
print(output_text)
","1.0"
"7c143f80-2e7e-4890-bee7-ffbdcbf5b05b","
def count_conjunctions(text):
    words = text.split()
    conjunctions = set()
    for word in words:
        letters = set(word.lower())
        if len(letters) == 1:
            conjunctions.add(word.lower())
    return len(conjunctions)

input_text = input()
print(count_conjunctions(input_text))
","1.0"
"7c143f80-2e7e-4890-bee7-ffbdcbf5b05b","def count_conjunctions(text):
    conjunctions = ['and', 'but', 'or', 'for']
    count = 0
    for conjunction in conjunctions:
        count += text.lower().count(conjunction)
    return count

# Read input line
text = input()

# Write output
print(count_conjunctions(text))","1.0"
"7c143f80-2e7e-4890-bee7-ffbdcbf5b05b","
def count_conjunctions(text):
    words = text.split()
    conjunctions = set()
    for word in words:
        if len(set(word.lower())) == 1:
            conjunctions.add(word.lower())
    return len(conjunctions)

input_text = input()
print(count_conjunctions(input_text))
","1.0"
"3d13981c-49a5-449f-aef6-a62cad45d8f4","
def factorial(x):
    result = 1
    for i in range(1, x + 1):
        result *= i
    return result

n, k = map(int, input().split())
print(factorial(n) // (factorial(k) * factorial(n - k)))
","1.0"
"3d13981c-49a5-449f-aef6-a62cad45d8f4","
def factorial(num):
    result = 1
    for i in range(1, num + 1):
        result *= i
    return result

def combinations(n, k):
    numerator = factorial(n)
    denominator = factorial(k) * factorial(n - k)
    return numerator // denominator

n, k = map(int, input().split())
print(combinations(n, k))
","1.0"
"3d13981c-49a5-449f-aef6-a62cad45d8f4","
def factorial(num):
    if num == 0 or num == 1:
        return 1
    result = 1
    for i in range(2, num + 1):
        result *= i
    return result

def combinations(n, k):
    return factorial(n) // factorial(k) * factorial(n - k)

n, k = map(int, input().split())
print(combinations(n, k))
","1.0"
"a0497858-245b-4fc6-9d58-990c5e2f0724","
n = int(input())
max_num = 0
for _ in range(n):
    num = int(input())
    if num % 10 == 2 and num > max_num:
        max_num = num
print(max_num)
","1.0"
"a0497858-245b-4fc6-9d58-990c5e2f0724","
n = int(input())
max_num = 0
for _ in range(n):
    num = int(input())
    if num % 10 == 2 and num > max_num:
        max_num = num
print(max_num)
","1.0"
"a0497858-245b-4fc6-9d58-990c5e2f0724","
n = int(input())
max_num = -1
for _ in range(n):
    num = int(input())
    if num % 10 == 2 and num > max_num:
        max_num = num
print(max_num)
","1.0"
"5be45c97-769f-45be-9ed4-b4dd633ac057","
def remove_extra_spaces(s):
    return ' '.join(s.split())

input_string = input()
output_string = remove_extra_spaces(input_string)
print(output_string)
","1.0"
"5be45c97-769f-45be-9ed4-b4dd633ac057","def remove_extra_spaces(s):words = s.split()return ' '.join(words)input_string = input()output_string = remove_extra_spaces(input_string)print(output_string)","1.0"
"5be45c97-769f-45be-9ed4-b4dd633ac057","
def remove_extra_spaces(s):
    return ' '.join(s.split())

input_string = input()
output_string = remove_extra_spaces(input_string)
print(output_string)
","1.0"
"4b28d852-6b47-4db4-aa6b-099ecb0e7a8b","
n = int(input())
while n > 0:
    print(n)
    if n % 2 == 0:
        n //= 2
    else:
        n = (n * 3 - 1) // 2
","1.0"
"4b28d852-6b47-4db4-aa6b-099ecb0e7a8b","
n = int(input())
while n > 1:
    print(n)
    if n % 2 == 0:
        n //= 2
    else:
        n = (3 * n + 1) // 2
print(n)
","1.0"
"4b28d852-6b47-4db4-aa6b-099ecb0e7a8b","
n = int(input())
while n > 0:
    print(n)
    if n % 2 == 0:
        n //= 2
    else:
        n = (n * 3 - 1) // 2
","1.0"
"6d5943fe-80bb-4799-adf9-505069a003c1","
s = input()
positions = []
for i, char in enumerate(s):
    if char.isalpha() and 'a' <= char.lower() <= 'z':
        positions.append(i + 1)
if positions:
    print(' '.join(map(str, positions)))
else:
    print(-1)
","1.0"
"6d5943fe-80bb-4799-adf9-505069a003c1","
s = input()
positions = []

for i, c in enumerate(s):
    if 'a' <= c <= 'z' or 'A' <= c <= 'Z':
        positions.append(i + 1)

if positions:
    print(' '.join(map(str, positions)))
else:
    print(-1)
","1.0"
"6d5943fe-80bb-4799-adf9-505069a003c1","
s = input()
positions = []

for i in range(len(s)):
    if s[i].isalpha():
        positions.append(i + 1)

if positions:
    print("" "".join(map(str, positions)))
else:
    print(-1)
","1.0"
"48521f16-2133-47f1-b071-0706a6062411","
def translate_to_murra(text):
    result = []
    for word in text.split():
        if word[0] == 'a':
            new_word = 'mur-i' + word[1:]
        else:
            new_first_letter = chr(ord(word[0]) - 1)
            new_word = 'mur-' + new_first_letter + word[1:]
        result.append(new_word)
    return ' '.join(result)

input_text = input()
print(translate_to_murra(input_text))
","1.0"
"48521f16-2133-47f1-b071-0706a6062411","
def translate_to_murra(text):
    def transform_word(word):
        if not word:
            return """"
        first_char = ""i"" if word[0] == ""a"" else chr(ord(word[0]) - 1)
        return ""mur-"" + first_char + word[1:]
    words = text.split()
    return ' '.join(transform_word(word) for word in words)

text = input()
print(translate_to_murra(text))
","1.0"
"48521f16-2133-47f1-b071-0706a6062411","
def translate_to_murra(text):
    result = []
    for word in text.split():
        if word[0] == 'a':
            new_word = 'mur-i' + word[1:]
        else:
            new_first_letter = chr(ord(word[0]) - 1)
            new_word = 'mur-' + new_first_letter + word[1:]
        result.append(new_word)
    return ' '.join(result)

input_text = input()
print(translate_to_murra(input_text))
","1.0"
"901dd977-9e8b-4b54-9730-6aeaa9d4a9e7","
angle = int(input())
third_angle = 90 - angle
print(third_angle)
","1.0"
"901dd977-9e8b-4b54-9730-6aeaa9d4a9e7","
angle = int(input())
third_angle = 90 - angle
print(third_angle)
","1.0"
"901dd977-9e8b-4b54-9730-6aeaa9d4a9e7","
angle = int(input())
third_angle = 90 - angle
print(third_angle)
","1.0"
"091ddb60-bc05-4be5-808d-ce061c459e3e","
area = int(input())
side = int(input())
other_side = area // side
print(other_side)
","1.0"
"091ddb60-bc05-4be5-808d-ce061c459e3e","
area = int(input())
side = int(input())
other_side = area // side
print(other_side)
","1.0"
"091ddb60-bc05-4be5-808d-ce061c459e3e","
area = int(input())
side = int(input())
other_side = area // side
print(other_side)
","1.0"
"ebc1af65-7f28-4308-a3c3-07335f379d84","
N = int(input())
count = 0
for i in range(1, N + 1):
    if N % i == 0:
        count += 1
print(count)
","1.0"
"ebc1af65-7f28-4308-a3c3-07335f379d84","def divisors_count(n):
    count = 0
    for i in range(1, n + 1):
        if n % i == 0:
            count += 1
    return count

n = int(input(""Enter a natural number (1 >= N <= 1000000): ""))
print(divisors_count(n))
#####","1.0"
"ebc1af65-7f28-4308-a3c3-07335f379d84","
N = int(input())
count = 0
for i in range(1, N + 1):
    if N % i == 0:
        count += 1
print(count)
","1.0"
"94581bd4-2060-44f1-ad09-4c18917d4f17","
def max_different_neighbors(s):
    max_len = 0
    curr_len = 1
    for i in range(1, len(s)):
        if s[i] != s[i - 1]:
            curr_len += 1
        else:
            max_len = max(max_len, curr_len)
            curr_len = 1
    max_len = max(max_len, curr_len)
    return max_len

input_string = ""xyzxxxyxzyxzyyyxxyzyzxyxxyyx""
print(max_different_neighbors(input_string))
","1.0"
"94581bd4-2060-44f1-ad09-4c18917d4f17","def checkDiffMaxChain(X):
    count = 1
    maxCount = 1

    for i in range(1, len(X)):
        if X[i] != X[i - 1]:
            count += 1
        else:
            maxCount = max(maxCount, count)
            count = 1

    return max(maxCount, count)


X = input()
print(checkDiffMaxChain(X))
</EXPLANATION>
<|end_of_text|>:// xyzxxxyxzyxzyyyxxyzyzxyxxyyx

8

0
<|end_of_text|>:// abcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvw

26

1
<tool_call>
<|end_of_text|>:// abccabcbabcabdabcba

7","1.0"
"94581bd4-2060-44f1-ad09-4c18917d4f17","
def max_consecutive_different(s):
    max_length = 1
    current_length = 1
    
    for i in range(1, len(s)):
        if s[i] != s[i - 1]:
            current_length += 1
        else:
            if current_length > max_length:
                max_length = current_length
            current_length = 1
            
    if current_length > max_length:
        max_length = current_length
        
    return max_length

input_string = input().strip()
print(max_consecutive_different(input_string))
","1.0"
"53c6ed65-d137-4acc-97ec-8200a4ee1eb6","
n, r = map(int, input().split())
count = 0
for _ in range(n):
    x, y = map(int, input().split())
    if x * x + y * y <= r * r:
        count += 1
print(count)
","1.0"
"53c6ed65-d137-4acc-97ec-8200a4ee1eb6","
n, r = map(int, input().split())
count = 0
for _ in range(n):
    x, y = map(int, input().split())
    if x**2 + y**2 < r**2:
        count += 1
print(count)
","1.0"
"53c6ed65-d137-4acc-97ec-8200a4ee1eb6","
n, r = map(int, input().split())
count = 0

for _ in range(n):
    x, y = map(int, input().split())
    if x**2 + y**2 < r**2:
        count += 1

print(count)
","1.0"
"931dc9d6-3183-4d35-bee6-95b210e0268a","
n = int(input())
divisors = []
for i in range(1, n + 1):
    if n % i == 0:
        divisors.append(i)
print("" "".join(map(str, divisors)))
","1.0"
"931dc9d6-3183-4d35-bee6-95b210e0268a","n = int(input())divisors = []for i in range(1, n + 1):if n % i == 0:divisors.append(i)print("" "".join(map(str, divisors)))","1.0"
"931dc9d6-3183-4d35-bee6-95b210e0268a","
n = int(input())
divisors = []
for i in range(1, n + 1):
    if n % i == 0:
        divisors.append(i)
print("" "".join(map(str, divisors)))
","1.0"
"75410156-cdea-4efc-a0d6-91e02bf38e32","a = int(input())b = int(input())found = Falsefor n in range(a, b + 1):divisors = []for i in range(1, int(n**0.5) + 1):if n % i == 0:divisors.append(i)if i != n // i:divisors.append(n // i)if len(divisors) == 4:found = Trueprint("" "".join(map(str, sorted(divisors))))if not found:print(0)","1.0"
"75410156-cdea-4efc-a0d6-91e02bf38e32","a = int(input())b = int(input())found = Falsefor num in range(a, b + 1):divisors = []for i in range(1, int(num**0.5) + 1):if num % i == 0:divisors.append(i)if i != num // i:divisors.append(num // i)if len(divisors) == 4:found = Trueprint("" "".join(map(str, sorted(divisors))))if not found:print(0)","1.0"
"75410156-cdea-4efc-a0d6-91e02bf38e32","
a = int(input())
b = int(input())

found = False

for num in range(a, b + 1):
    divisors = []
    for i in range(1, int(num**0.5) + 1):
        if num % i == 0:
            divisors.append(i)
            if i != num // i:
                divisors.append(num // i)
    if len(divisors) == 4:
        found = True
        divisors.sort()
        print("" "".join(map(str, divisors)))

if not found:
    print(0)
","1.0"
"9ad8e0ac-34e6-45a9-8f4f-0e8046aec803","
a = int(input())
b = int(input())

def count_divisors(n):
    count = 0
    max_divisor = 0
    second_max_divisor = 0
    for i in range(1, n + 1):
        if n % i == 0:
            count += 1
            if i > max_divisor:
                second_max_divisor = max_divisor
                max_divisor = i
            elif i > second_max_divisor:
                second_max_divisor = i
    return count, max_divisor, second_max_divisor

max_divisors = 0
number_with_max_divisors = a
result = (0, 0, 0)

for number in range(a, b + 1):
    divisors, largest, second_largest = count_divisors(number)
    if divisors > max_divisors or (divisors == max_divisors and number > number_with_max_divisors):
        max_divisors = divisors
        number_with_max_divisors = number
        result = (divisors, largest, second_largest)

print(result[0], result[1], result[2])
","1.0"
"9ad8e0ac-34e6-45a9-8f4f-0e8046aec803","def divisor_count(n):
    d = set([1, n])
    for i in range(2, n):
        if n % i == 0:
            d.add(i)
            d.add(n // i)
    return sorted(d, reverse=True)
a = int(input())
b = int(input())
max_count = 0
max_divisors = []
for num in range(a, b + 1):
    count = len(divisor_count(num))
    if count > max_count:
        max_count = count
        max_divisors = divisor_count(num)
print(max_count, *max_divisors)
","1.0"
"9ad8e0ac-34e6-45a9-8f4f-0e8046aec803","
a = int(input())
b = int(input())

def count_divisors(n):
    count = 0
    divisors = []
    for i in range(1, int(n**0.5) + 1):
        if n % i == 0:
            count += 1
            divisors.append(i)
            if i != n // i:
                count += 1
                divisors.append(n // i)
    return count, sorted(divisors, reverse=True)

max_divisors = 0
result_number = 0
result_divisors = []

for num in range(a, b + 1):
    div_count, divs = count_divisors(num)
    if div_count > max_divisors or (div_count == max_divisors and num > result_number):
        max_divisors = div_count
        result_number = num
        result_divisors = divs[:2]

print(max_divisors, *result_divisors)
","1.0"
"ec3cfb4d-5f50-4fa0-8e53-686d10f6c0b2","
a, b = map(int, input().split())
count = 0

for num in range(a, b + 1):
    if int(num**0.5) ** 2 == num:
        count += 1
        divisor = int(num**0.5)
        divisors_count = 0
        for i in range(1, divisor + 1):
            if num % i == 0:
                divisors_count += 1
                if i != num // i:
                    divisors_count += 1
        print(count, num, divisors_count, divisor)
","1.0"
"ec3cfb4d-5f50-4fa0-8e53-686d10f6c0b2","
a, b = map(int, input().split())
count = 0
for num in range(a, b + 1):
    root = int(num**0.5)
    if root * root == num:
        divisors = []
        for i in range(1, num + 1):
            if num % i == 0:
                divisors.append(i)
        count += 1
        print(count, num, len(divisors), root)
","1.0"
"ec3cfb4d-5f50-4fa0-8e53-686d10f6c0b2","
a, b = map(int, input().split())

count = 0

for num in range(a, b + 1):
    if int(num**0.5) ** 2 == num:
        count += 1
        divisor = int(num**0.5)
        divisors_count = 0
        
        for i in range(1, divisor + 1):
            if num % i == 0:
                divisors_count += 1
                if i != num // i:
                    divisors_count += 1
        
        print(count, num, divisors_count, divisor)
","1.0"
"6bd877c6-1740-408f-a6ca-2f8adeae08f5","
a = int(input())
b = int(input())

def sum_of_digits(n):
    return sum(int(digit) for digit in str(n))

def has_one_divisor(n):
    count = 0
    for i in range(2, n):
        if n % i == 0:
            count += 1
        if count > 1:
            return False
    return count == 1

result = sum(sum_of_digits(i) for i in range(a, b + 1) if has_one_divisor(i))

print(result)
","1.0"
"6bd877c6-1740-408f-a6ca-2f8adeae08f5","a = int(input())b = int(input())total_sum = 0for num in range(a, b + 1):if num > 1:count = 0for i in range(2, num):if num % i == 0:count += 1if count == 1:total_sum += sum(int(digit) for digit in str(num))print(total_sum)","1.0"
"6bd877c6-1740-408f-a6ca-2f8adeae08f5","
a = int(input())
b = int(input())
total_sum = 0

for num in range(a, b + 1):
    if num > 1:
        count = 0
        for i in range(2, num):
            if num % i == 0:
                count += 1
        if count == 1:
            total_sum += sum(int(digit) for digit in str(num))

print(total_sum)
","1.0"
"3afc315a-4d55-4193-8135-d8dd5c533c49","S, N = map(int, input().split())file_sizes = [int(input()) for _ in range(N)]file_sizes.sort()total_size = 0user_count = 0max_file_size = 0for size in file_sizes:if total_size + size <= S:total_size += sizeuser_count += 1max_file_size = sizeprint(user_count, max_file_size)","1.0"
"3afc315a-4d55-4193-8135-d8dd5c533c49","
S, N = map(int, input().split())
file_sizes = [int(input()) for _ in range(N)]
file_sizes.sort()

total_size = 0
user_count = 0
max_file_size = 0

for size in file_sizes:
    if total_size + size <= S:
        total_size += size
        user_count += 1
        max_file_size = size

print(user_count, max_file_size)
","1.0"
"3afc315a-4d55-4193-8135-d8dd5c533c49","
S, N = map(int, input().split())
sizes = [int(input()) for _ in range(N)]
sizes.sort()

total_size = 0
user_count = 0
max_file_size = 0

for size in sizes:
    if total_size + size <= S:
        total_size += size
        user_count += 1
        max_file_size = size

print(user_count, max_file_size)
","1.0"
"4ecec1ec-211d-4ce0-bd4b-ee2498ae1afa","
def print_digits_reverse(n):
    if n == 0:
        return
    print(n % 10, end=' ')
    print_digits_reverse(n // 10)

n = int(input())
if n == 0:
    print(0)
else:
    print_digits_reverse(n)
","1.0"
"f2fd916a-4061-4f42-aa02-2ae337339c7a","
N, K, M = map(int, input().split())
scores = [int(input()) for _ in range(N)]
scores.sort(reverse=True)
min_winner_score = scores[K-1]
min_prize_winner_score = scores[K+M-1]
print(min_winner_score, min_prize_winner_score)
","1.0"
"f2fd916a-4061-4f42-aa02-2ae337339c7a","N, K, M = map(int, input().split())scores = [int(input()) for _ in range(N)]scores.sort(reverse=True)min_winner_score = scores[K-1]min_prize_winner_score = scores[K+M-1]print(min_winner_score, min_prize_winner_score)","1.0"
"f2fd916a-4061-4f42-aa02-2ae337339c7a","
N, K, M = map(int, input().split())
scores = [int(input()) for _ in range(N)]
scores.sort(reverse=True)
min_winner_score = scores[K-1]
min_prize_winner_score = scores[K+M-1]
print(min_winner_score, min_prize_winner_score)
","1.0"
"7f4176cf-336a-4612-9d4d-31057447b99e","
N, K = map(int, input().split())
scores = [int(input()) for _ in range(N)]
scores.sort(reverse=True)
good_students_avg = sum(scores[K:2*K]) // K
excellent_students_avg = sum(scores[:K]) // K
print(good_students_avg, excellent_students_avg)
","1.0"
"7f4176cf-336a-4612-9d4d-31057447b99e","
N, K = map(int, input().split())
scores = [int(input()) for _ in range(N)]
scores.sort(reverse=True)
excellent_students = scores[:K]
good_students = scores[K:2*K]
average_good = sum(good_students) // K
average_excellent = sum(excellent_students) // K
print(average_good, average_excellent)
","1.0"
"7f4176cf-336a-4612-9d4d-31057447b99e","
N, K = map(int, input().split())
scores = [int(input()) for _ in range(N)]
scores.sort(reverse=True)
good_students = scores[K:2*K]
excellent_students = scores[:K]
average_good = sum(good_students) // K
average_excellent = sum(excellent_students) // K
print(average_good, average_excellent)
","1.0"
"dac9c476-636f-4d94-b428-2eacbaa8556a","
N = int(input())
prices = [int(input()) for _ in range(N)]
discounted_prices = []
for price in prices:
    if price > 100:
        discounted_prices.append(price * 0.9)
    else:
        discounted_prices.append(price)
discounted_prices.sort(reverse=True)
total_price = sum(discounted_prices)
total_price = int(total_price) + (1 if total_price % 1 > 0 else 0)
most_expensive_discounted = max([price for price in prices if price > 100], default=0)
print(total_price, most_expensive_discounted)
","1.0"
"dac9c476-636f-4d94-b428-2eacbaa8556a","N = int(input())prices = [int(input()) for _ in range(N)]prices.sort(reverse=True)total_price = 0discounted_count = 0max_discounted_price = 0for price in prices:total_price += priceif price > 100:discounted_count += 1if discounted_count % 2 == 0:total_price -= price * 0.1max_discounted_price = max(max_discounted_price, price)total_price = int(total_price + 0.999999)print(total_price, max_discounted_price)","1.0"
"dac9c476-636f-4d94-b428-2eacbaa8556a","
N = int(input())
prices = [int(input()) for _ in range(N)]
prices.sort(reverse=True)

total_price = sum(prices)
discounted_price = 0
most_expensive_discounted = 0
count = 0

for price in prices:
    if price > 100:
        count += 1
        if count % 2 == 0:
            discounted_price += price * 0.9
            most_expensive_discounted = max(most_expensive_discounted, price)
        else:
            discounted_price += price
    else:
        discounted_price += price

total_price = int(discounted_price + 0.999999)  # Round up
print(total_price, most_expensive_discounted)
","1.0"
"8197a3b2-3c8b-4da4-85c2-8afd3c9c9e3e","
N = int(input())
occupied = {}
for _ in range(N):
    row, seat = map(int, input().split())
    if row not in occupied:
        occupied[row] = set()
    occupied[row].add(seat)

result_row = -1
result_seat = float('inf')

for row in occupied:
    seats = sorted(occupied[row])
    for i in range(len(seats) - 1):
        if seats[i + 1] == seats[i] + 1:
            left_seat = seats[i] - 1
            right_seat = seats[i + 1] + 1
            if left_seat in occupied[row] and right_seat in occupied[row]:
                if row > result_row or (row == result_row and seats[i] < result_seat):
                    result_row = row
                    result_seat = seats[i]

print(result_row, result_seat)
","1.0"
"8197a3b2-3c8b-4da4-85c2-8afd3c9c9e3e","n = int(input())occupied = {}for _ in range(n):row, seat = map(int, input().split())if row not in occupied:occupied[row] = set()occupied[row].add(seat)result_row = -1result_seat = float('inf')for row in occupied:for seat in occupied[row]:if (seat - 1 in occupied[row]) and (seat + 1 in occupied[row]):if row > result_row or (row == result_row and seat < result_seat):result_row = rowresult_seat = seat - 1print(result_row, result_seat)","1.0"
"8197a3b2-3c8b-4da4-85c2-8afd3c9c9e3e","
N = int(input())
occupied = {}

for _ in range(N):
    row, seat = map(int, input().split())
    if row not in occupied:
        occupied[row] = set()
    occupied[row].add(seat)

result_row = -1
result_seat = float('inf')

for row in occupied:
    seats = sorted(occupied[row])
    for i in range(len(seats) - 1):
        if seats[i + 1] == seats[i] + 1:
            left_seat = seats[i] - 1
            right_seat = seats[i + 1] + 1
            if left_seat in occupied[row] and right_seat in occupied[row]:
                if row > result_row or (row == result_row and seats[i] < result_seat):
                    result_row = row
                    result_seat = seats[i]

print(result_row, result_seat)
","1.0"
"d49e80f4-ce33-4ded-aa53-337f8d0f73b8","
N, K = map(int, input().split())
measurements = [int(input()) for _ in range(N)]
measurements.sort()
reliable_measurements = measurements[K:N-K]
largest_reliable = max(reliable_measurements)
average_reliable = sum(reliable_measurements) // len(reliable_measurements)
print(largest_reliable, average_reliable)
","1.0"
"d49e80f4-ce33-4ded-aa53-337f8d0f73b8","
N, K = map(int, input().split())
measurements = [int(input()) for _ in range(N)]
measurements.sort()
reliable_measurements = measurements[K:N-K]
largest_reliable = max(reliable_measurements)
average_reliable = sum(reliable_measurements) // len(reliable_measurements)
print(largest_reliable, average_reliable)
","1.0"
"d49e80f4-ce33-4ded-aa53-337f8d0f73b8","
N, K = map(int, input().split())
measurements = [int(input()) for _ in range(N)]
measurements.sort()
reliable_measurements = measurements[K:N-K]
largest_reliable = max(reliable_measurements)
average_reliable = sum(reliable_measurements) // len(reliable_measurements)
print(largest_reliable, average_reliable)
","1.0"
"ea085abc-b6a7-4545-86cb-85395a6c5937","
N, K, M = map(int, input().split())
prices = [int(input()) for _ in range(N)]
prices.sort()
budget_segment = prices[:K]
premium_segment = prices[-M:]

cheapest_premium = premium_segment[0]
average_budget = sum(budget_segment) // K

print(cheapest_premium, average_budget)
","1.0"
"ea085abc-b6a7-4545-86cb-85395a6c5937","n, k, m = map(int, input().split())
premium = [int(input()) for _ in range(m)]
budget = [int(input()) for _ in range(k)]

premium.sort()
print(premium[0])
budget_sum = sum(budget)
budget_avg = budget_sum // k
print(budget_avg)","1.0"
"ea085abc-b6a7-4545-86cb-85395a6c5937","
N, K, M = map(int, input().split())
prices = [int(input()) for _ in range(N)]
prices.sort()
budget_segment = prices[:K]
premium_segment = prices[-M:]

cheapest_premium = premium_segment[0]
average_budget = sum(budget_segment) // K

print(cheapest_premium, average_budget)
","1.0"
"645dbba8-e48e-4111-abe4-d1ca480792d6","
def print_digits(n):
    if n < 10:
        print(n, end=' ')
    else:
        print_digits(n // 10)
        print(n % 10, end=' ')

N = int(input())
print_digits(N)
print()
","1.0"
"645dbba8-e48e-4111-abe4-d1ca480792d6","
def print_digits(n):
    if n < 10:
        print(n, end=' ')
    else:
        print_digits(n // 10)
        print(n % 10, end=' ')

N = int(input())
print_digits(N)
","1.0"
"645dbba8-e48e-4111-abe4-d1ca480792d6","
def print_digits(n):
    if n < 10:
        print(n, end=' ')
    else:
        print_digits(n // 10)
        print(n % 10, end=' ')

n = int(input())
print_digits(n)
","1.0"
"150f8ae8-1577-4cb8-98b7-775b5ddba6c1","
def gcd(a, b):
    if b == 0:
        return a
    return gcd(b, a % b)

a, b = map(int, input().split())
print(gcd(a, b))
","1.0"
"150f8ae8-1577-4cb8-98b7-775b5ddba6c1","
def gcd(a, b):
    if b == 0:
        return a
    return gcd(b, a % b)

a, b = map(int, input().split())
print(gcd(a, b))
","1.0"
"150f8ae8-1577-4cb8-98b7-775b5ddba6c1","
def gcd(a, b):
    if b == 0:
        return a
    return gcd(b, a % b)

a, b = map(int, input().split())
print(gcd(a, b))
","1.0"
"311d9bb7-84d8-4a04-9af9-fba11c6f224b","
def power(a, x):
    if x == 0:
        return 1
    return a * power(a, x - 1)

a, x = map(int, input().split())
print(power(a, x))
","1.0"
"311d9bb7-84d8-4a04-9af9-fba11c6f224b","
def power(a, x):
    if x == 0:
        return 1
    return a * power(a, x - 1)

a, x = map(int, input().split())
print(power(a, x))
","1.0"
"311d9bb7-84d8-4a04-9af9-fba11c6f224b","
def power(A, X):
    if X == 0:
        return 1
    return A * power(A, X - 1)

A, X = map(int, input().split())
print(power(A, X))
","1.0"
"a11ad4e0-abf7-4110-9d03-04d451d484df","
N, K, G = map(int, input().split())
weights = [int(input()) for _ in range(N)]
weights.sort(reverse=True)
print(sum(weights[:K]))
","1.0"
"a11ad4e0-abf7-4110-9d03-04d451d484df","N, K, G = map(int, input().split())weights = [int(input()) for _ in range(N)]weights.sort(reverse=True)total_weight = sum(weights[:K])if total_weight > G:total_weight = 0for i in range(K):if total_weight + weights[i] <= G:total_weight += weights[i]print(total_weight)","1.0"
"a11ad4e0-abf7-4110-9d03-04d451d484df","
N, K, G = map(int, input().split())
weights = [int(input()) for _ in range(N)]
weights.sort(reverse=True)

max_weight = 0
for i in range(K):
    if max_weight + weights[i] <= G:
        max_weight += weights[i]

print(max_weight)
","1.0"
"70c96088-3bf6-4189-985e-a2d564337989","
def permutations(n, k, array, current, result):
    if len(current) == k:
        result.append(current)
        return
    for i in range(n):
        permutations(n, k, array, current + [array[i]], result)

n, k = map(int, input().split())
array = [int(input()) for _ in range(n)]
result = []
permutations(n, k, array, [], result)
for perm in result:
    print(' '.join(map(str, perm)))
","1.0"
"70c96088-3bf6-4189-985e-a2d564337989","
def permute(arr, k, current):
    if len(current) == k:
        print(' '.join(map(str, current)))
        return
    for i in range(len(arr)):
        permute(arr, k, current + [arr[i]])

n, k = map(int, input().split())
arr = [input().strip() for _ in range(n)]
permute(arr, k, [])
","1.0"
"70c96088-3bf6-4189-985e-a2d564337989","
def permute(arr, k, current):
    if len(current) == k:
        print(' '.join(map(str, current)))
        return
    for i in range(len(arr)):
        permute(arr, k, current + [arr[i]])

n, k = map(int, input().split())
arr = [input().strip() for _ in range(n)]
permute(arr, k, [])
","1.0"
"02fbb42a-472d-4e95-a306-13c6db519654","
n = int(input())
matrix = [list(map(int, input().split())) for _ in range(n)]
edges = []
for i in range(n):
    for j in range(i + 1, n):
        if matrix[i][j] == 1:
            edges.append((i + 1, j + 1))
for edge in edges:
    print(edge[0], edge[1])
","1.0"
"02fbb42a-472d-4e95-a306-13c6db519654","
n = int(input())
matrix = [list(map(int, input().split())) for _ in range(n)]
edges = []

for i in range(n):
    for j in range(i + 1, n):
        if matrix[i][j] == 1:
            edges.append((i + 1, j + 1))

for edge in edges:
    print(edge[0], edge[1])
","1.0"
"02fbb42a-472d-4e95-a306-13c6db519654","
n = int(input())
matrix = [list(map(int, input().split())) for _ in range(n)]
edges = []

for i in range(n):
    for j in range(i + 1, n):
        if matrix[i][j] == 1:
            edges.append((i + 1, j + 1))

for edge in edges:
    print(edge[0], edge[1])
","1.0"
"ab48f655-0a9b-4b20-8bbe-fd806719bb53","def permute(arr, k, current, used):if len(current) == k:print(' '.join(map(str, current)))returnfor i in range(len(arr)):if not used[i]:used[i] = Truepermute(arr, k, current + [arr[i]], used)used[i] = Falsen, k = map(int, input().split())arr = [int(input()) for _ in range(n)]used = [False] * npermute(arr, k, [], used)","1.0"
"ab48f655-0a9b-4b20-8bbe-fd806719bb53","N, K = map(int, input().split())
arr = [int(input()) for _ in range(N)]

def permute(arr, k, start, end):
    if k == 0:
        print(' '.join(map(str, arr)))
        return
    for i in range(start, end + 1):
        if not arr[i] in arr[start:k]:
            arr[start], arr[i] = arr[i], arr[start]
            permute(arr, k - 1, start + 1, end)

permute(arr, K, 0, N - 1)
 ㅋㅋ","1.0"
"ab48f655-0a9b-4b20-8bbe-fd806719bb53","
def permute(arr, k, current, used):
    if len(current) == k:
        print(' '.join(map(str, current)))
        return
    for i in range(len(arr)):
        if not used[i]:
            used[i] = True
            permute(arr, k, current + [arr[i]], used)
            used[i] = False

n, k = map(int, input().split())
arr = [int(input()) for _ in range(n)]
used = [False] * n
permute(arr, k, [], used)
","1.0"
"d10ce529-697f-4d23-8c67-948d245c3668","
n, m = map(int, input().split())
matrix = [[0] * n for _ in range(n)]
for _ in range(m):
    u, v = map(int, input().split())
    matrix[u - 1][v - 1] = 1
    matrix[v - 1][u - 1] = 1
for row in matrix:
    print(' '.join(map(str, row)))
","1.0"
"d10ce529-697f-4d23-8c67-948d245c3668","n, m = map(int, input().split())matrix = [[0] * n for _ in range(n)]for _ in range(m):u, v = map(int, input().split())matrix[u - 1][v - 1] = 1matrix[v - 1][u - 1] = 1for row in matrix:print(' '.join(map(str, row)))","1.0"
"d10ce529-697f-4d23-8c67-948d245c3668","
n, m = map(int, input().split())
matrix = [[0] * n for _ in range(n)]

for _ in range(m):
    u, v = map(int, input().split())
    matrix[u - 1][v - 1] = 1
    matrix[v - 1][u - 1] = 1

for row in matrix:
    print(' '.join(map(str, row)))
","1.0"
"8aba26dc-aa58-4010-8c1a-81e0ce626bae","
n = int(input())
adj_matrix = [list(map(int, input().split())) for _ in range(n)]
edges = []

for i in range(n):
    for j in range(n):
        if adj_matrix[i][j] == 1:
            edges.append((i + 1, j + 1))

for edge in edges:
    print(edge[0], edge[1])
","1.0"
"8aba26dc-aa58-4010-8c1a-81e0ce626bae","n = int(input())adj_matrix = [list(map(int, input().split())) for _ in range(n)]edges = []for i in range(n):for j in range(n):if adj_matrix[i][j] == 1:edges.append((i + 1, j + 1))for edge in edges:print(edge[0], edge[1])","1.0"
"8aba26dc-aa58-4010-8c1a-81e0ce626bae","
n = int(input())
adj_matrix = [list(map(int, input().split())) for _ in range(n)]
edges = []

for i in range(n):
    for j in range(n):
        if adj_matrix[i][j] == 1:
            edges.append((i + 1, j + 1))

for edge in edges:
    print(edge[0], edge[1])
","1.0"
"e538d2d1-111d-4904-9de6-f691cdc9fb50","
n = int(input())
graph = [list(map(int, input().split())) for _ in range(n)]

def is_eulerian_cycle(graph, n):
    for i in range(n):
        degree = sum(graph[i])
        if degree % 2 != 0:
            return False
    return True

if is_eulerian_cycle(graph, n):
    print(""YES"")
else:
    print(""NO"")
","1.0"
"e538d2d1-111d-4904-9de6-f691cdc9fb50","n = int(input())adj_matrix = [list(map(int, input().split())) for _ in range(n)]def has_eulerian_cycle(adj_matrix):for row in adj_matrix:if sum(row) % 2 != 0:return ""NO""return ""YES""print(has_eulerian_cycle(adj_matrix))","1.0"
"e538d2d1-111d-4904-9de6-f691cdc9fb50","
n = int(input())
adj_matrix = [list(map(int, input().split())) for _ in range(n)]

def has_eulerian_cycle(adj_matrix):
    odd_degree_count = 0
    for i in range(n):
        degree = sum(adj_matrix[i])
        if degree % 2 != 0:
            odd_degree_count += 1
    return odd_degree_count == 0

if has_eulerian_cycle(adj_matrix):
    print(""YES"")
else:
    print(""NO"")
","1.0"
"993d5917-3656-42be-87ec-bbde4aff5607","
def reachability():
    def dfs(graph, visited, vertex):
        visited[vertex] = True
        for i in range(len(graph)):
            if graph[vertex][i] == 1 and not visited[i]:
                dfs(graph, visited, i)

    n, m = map(int, input().split())
    graph = []
    for _ in range(n):
        graph.append(list(map(int, input().split())))
    
    queries = []
    for _ in range(m):
        queries.append(tuple(map(int, input().split())))

    results = []
    for start, end in queries:
        visited = [False] * n
        dfs(graph, visited, start - 1)
        results.append(""YES"" if visited[end - 1] else ""NO"")

    for result in results:
        print(result)

reachability()
","1.0"
"993d5917-3656-42be-87ec-bbde4aff5607","n, m = map(int, input().split())
adj_matrix = [[int(x) for x in input().split()] for _ in range(n)]

for _ in range(m):
    u, v = map(int, input().split())
    if any(adj_matrix[u][i] and adj_matrix[i][v] for i in range(n)):
        print(""YES"")
    else:
        print(""NO"")
","1.0"
"993d5917-3656-42be-87ec-bbde4aff5607","
n, m = map(int, input().split())
graph = [list(map(int, input().split())) for _ in range(n)]
queries = [tuple(map(int, input().split())) for _ in range(m)]

def dfs(start, end, visited):
    if start == end:
        return True
    visited[start] = True
    for i in range(n):
        if graph[start][i] == 1 and not visited[i]:
            if dfs(i, end, visited):
                return True
    return False

for u, v in queries:
    visited = [False] * n
    if dfs(u - 1, v - 1, visited):
        print(""YES"")
    else:
        print(""NO"")
","1.0"
"6c718c88-bb90-4a37-ae7c-908916a5957e","
n = int(input())
graph = [list(map(int, input().split())) for _ in range(n)]
closure = [[graph[i][j] for j in range(n)] for i in range(n)]

for k in range(n):
    for i in range(n):
        for j in range(n):
            closure[i][j] = closure[i][j] or (closure[i][k] and closure[k][j])

for row in closure:
    print(' '.join(map(str, row)))
","1.0"
"6c718c88-bb90-4a37-ae7c-908916a5957e","def transitive_closure(adj_matrix):
    n = len(adj_matrix)
    for k in range(n):
        for i in range(n):
            for j in range(n):
                adj_matrix[i][j] = adj_matrix[i][j] or (adj_matrix[i][k] and adj_matrix[k][j])
    return adj_matrix

n = int(input().strip())
adj_matrix = []
for _ in range(n):
    adj_matrix.append(list(map(int, input().strip().split(' '))))

transitive_closure(adj_matrix)

for row in adj_matrix:
    for elem in row:
        print(elem, end=' ')
    print()","1.0"
"6c718c88-bb90-4a37-ae7c-908916a5957e","
n = int(input())
graph = [list(map(int, input().split())) for _ in range(n)]

for k in range(n):
    for i in range(n):
        for j in range(n):
            graph[i][j] = graph[i][j] or (graph[i][k] and graph[k][j])

for row in graph:
    print(' '.join(map(str, row)))
","1.0"
"79312fbf-4cd4-4453-989e-43f3cae93d51","
n = int(input())
adj_matrix = []
for _ in range(n):
    adj_matrix.append(list(map(int, input().split())))

reachable = set()
for i in range(n):
    for j in range(n):
        for k in range(n):
            for l in range(n):
                if adj_matrix[i][j] == 1 and adj_matrix[j][k] == 1 and adj_matrix[k][l] == 1:
                    reachable.add((i+1, l+1))

if reachable:
    for pair in sorted(reachable):
        print(pair[0], pair[1])
else:
    print(""NO"")
","1.0"
"79312fbf-4cd4-4453-989e-43f3cae93d51","n = int(input())matrix = [list(map(int, input().split())) for _ in range(n)]result = []for i in range(n):for j in range(n):if i != j:for k in range(n):if matrix[i][k] == 1 and matrix[k][j] == 1:for l in range(n):if matrix[k][l] == 1 and matrix[l][j] == 1:if (i + 1, j + 1) not in result:result.append((i + 1, j + 1))if result:for pair in result:print(pair[0], pair[1])else:print(""NO"")","1.0"
"79312fbf-4cd4-4453-989e-43f3cae93d51","
n = int(input())
matrix = [list(map(int, input().split())) for _ in range(n)]
result = []

for i in range(n):
    for j in range(n):
        if i != j:
            count = 0
            for k in range(n):
                if matrix[i][k] == 1 and matrix[k][j] == 1:
                    count += 1
            if count > 0:
                for k in range(n):
                    if matrix[i][k] == 1:
                        for l in range(n):
                            if matrix[k][l] == 1 and matrix[l][j] == 1:
                                result.append((i + 1, j + 1))

result = list(set(result))
result.sort()

if result:
    for pair in result:
        print(pair[0], pair[1])
else:
    print(""NO"")
","1.0"
"184def68-8d78-42ae-b39c-3ed0566d685c","def dfs(graph, v, visited, path):visited[v] = Truepath.append(v + 1)for i in range(len(graph)):if graph[v][i] == 1 and not visited[i]:dfs(graph, i, visited, path)return pathn = int(input())graph = [list(map(int, input().split())) for _ in range(n)]for i in range(n):visited = [False] * npath = []dfs(graph, i, visited, path)print(' '.join(map(str, path)))","1.0"
"184def68-8d78-42ae-b39c-3ed0566d685c","n = int(input())
graph = []
traversals = []

for _ in range(n):
    graph.append(list(map(int, input().split())))

def dfs(graph, start, visited, traversal):
    visited[start] = True
    traversal.append(start)
    
    for neighbor in range(len(graph)):
        if graph[start][neighbor] and not visited[neighbor]:
            dfs(graph, neighbor, visited, traversal)
            
    return traversal

for i in range(1, n + 1):
    visited = [False] * n
    dfs(graph, i, visited, [])
    traversals.append(traversal)

for traversal in traversals:
    print(*traversal)","1.0"
"184def68-8d78-42ae-b39c-3ed0566d685c","
def dfs(graph, v, visited, path):
    visited[v] = True
    path.append(v + 1)
    for i in range(len(graph)):
        if graph[v][i] == 1 and not visited[i]:
            dfs(graph, i, visited, path)
    return path

n = int(input())
graph = [list(map(int, input().split())) for _ in range(n)]

for i in range(n):
    visited = [False] * n
    path = []
    dfs(graph, i, visited, path)
    print("" "".join(map(str, path)))
","1.0"
"413dddee-a132-48a9-9753-e5bef469b529","
def dfs(v, graph, visited, path):
    visited[v] = True
    path.append(v + 1)
    longest = list(path)
    for i in range(len(graph)):
        if graph[v][i] == 1 and not visited[i]:
            result = dfs(i, graph, visited, path)
            if len(result) > len(longest):
                longest = result
    path.pop()
    visited[v] = False
    return longest

n = int(input())
graph = [list(map(int, input().split())) for _ in range(n)]
longest_path = []

for i in range(n):
    visited = [False] * n
    path = []
    current_path = dfs(i, graph, visited, path)
    if len(current_path) > len(longest_path):
        longest_path = current_path

print(len(longest_path))
print("" "".join(map(str, longest_path)))
","1.0"
"413dddee-a132-48a9-9753-e5bef469b529","def longest_connected_path(n, matrix):def dfs(v, visited, path):visited[v] = Truepath.append(v + 1)for i in range(n):if matrix[v][i] == 1 and not visited[i]:dfs(i, visited, path)if len(path) > len(longest_path[0]):longest_path[0] = path[:]path.pop()visited[v] = Falselongest_path = [[]]for i in range(n):visited = [False] * ndfs(i, visited, [])return len(longest_path[0]), longest_path[0]n = int(input().strip())matrix = [list(map(int, input().strip().split())) for _ in range(n)]length, path = longest_connected_path(n, matrix)print(length)print("" "".join(map(str, sorted(path))))","1.0"
"413dddee-a132-48a9-9753-e5bef469b529","
def longest_connected_path(n, matrix):
    def dfs(v, visited, path):
        visited[v] = True
        path.append(v + 1)
        for i in range(n):
            if matrix[v][i] == 1 and not visited[i]:
                dfs(i, visited, path)
        return path

    longest_path = []
    for i in range(n):
        visited = [False] * n
        current_path = dfs(i, visited, [])
        if len(current_path) > len(longest_path):
            longest_path = current_path

    return len(longest_path), longest_path

n = int(input())
matrix = [list(map(int, input().split())) for _ in range(n)]
length, path = longest_connected_path(n, matrix)
print(length)
print(' '.join(map(str, sorted(path))))
","1.0"
"80cacb8a-a6c2-4757-9646-317c1594c18e","
n, m = map(int, input().split())
graph = [list(map(int, input().split())) for _ in range(n)]
vertices = [int(input()) - 1 for _ in range(m)]

def bfs(start):
    visited = [False] * n
    queue = [start]
    visited[start] = True
    result = []
    
    while queue:
        vertex = queue.pop(0)
        result.append(vertex + 1)
        for i in range(n):
            if graph[vertex][i] == 1 and not visited[i]:
                visited[i] = True
                queue.append(i)
    return result

for vertex in vertices:
    print("" "".join(map(str, bfs(vertex))))
","1.0"
"80cacb8a-a6c2-4757-9646-317c1594c18e","n, m = map(int, input().split())graph = [list(map(int, input().split())) for _ in range(n)]vertices = [int(input()) - 1 for _ in range(m)]def bfs(start):visited = [False] * nqueue = [start]visited[start] = Trueresult = []while queue:vertex = queue.pop(0)result.append(vertex + 1)for i in range(n):if graph[vertex][i] == 1 and not visited[i]:visited[i] = Truequeue.append(i)return resultfor vertex in vertices:print("" "".join(map(str, bfs(vertex))))","1.0"
"80cacb8a-a6c2-4757-9646-317c1594c18e","
n, m = map(int, input().split())
graph = [list(map(int, input().split())) for _ in range(n)]
vertices = [int(input()) - 1 for _ in range(m)]

def bfs(start):
    visited = [False] * n
    queue = [start]
    visited[start] = True
    result = []
    
    while queue:
        node = queue.pop(0)
        result.append(node + 1)
        for i in range(n):
            if graph[node][i] == 1 and not visited[i]:
                visited[i] = True
                queue.append(i)
    return result

for vertex in vertices:
    output = bfs(vertex)
    print("" "".join(map(str, output)))
","1.0"
"0cc13605-3cb0-48e8-a8d7-10d2e1b77520","
def dfs(v, graph, visited, order, count):
    visited[v] = True
    order[v] = count[0]
    count[0] += 1
    for i in range(len(graph)):
        if graph[v][i] == 1 and not visited[i]:
            dfs(i, graph, visited, order, count)

n = int(input())
graph = [list(map(int, input().split())) for _ in range(n)]
visited = [False] * n
order = [0] * n
count = [1]

for i in range(n):
    if not visited[i]:
        dfs(i, graph, visited, order, count)

for i in range(n):
    print(i + 1, order[i])
","1.0"
"0cc13605-3cb0-48e8-a8d7-10d2e1b77520","n = int(input())
matrix = [list(map(int, input().split())) for _ in range(n)]

def dfs(vertex, visited, count):
    visited[vertex] = True
    count[0] += 1
    print(vertex, count[0])
    for other in range(n):
        if matrix[vertex][other] == 1 and not visited[other]:
            dfs(other, visited, count)

visited = [False] * n
count = [0]
for i in range(n):
    if not visited[i]:
        dfs(i, visited, count)
","1.0"
"0cc13605-3cb0-48e8-a8d7-10d2e1b77520","
def dfs(v, graph, visited, order, count):
    visited[v] = True
    order[v] = count[0]
    count[0] += 1
    for i in range(len(graph)):
        if graph[v][i] == 1 and not visited[i]:
            dfs(i, graph, visited, order, count)

n = int(input())
graph = [list(map(int, input().split())) for _ in range(n)]
visited = [False] * n
order = [0] * n
count = [1]

for i in range(n):
    if not visited[i]:
        dfs(i, graph, visited, order, count)

for i in range(n):
    print(i + 1, order[i])
","1.0"
"cdd79a46-8605-41d1-a344-70e7c6a9b8c2","
n, m = map(int, input().split())
matrix = [[0] * n for _ in range(n)]
for _ in range(m):
    u, v = map(int, input().split())
    matrix[u - 1][v - 1] = 1
for row in matrix:
    print(' '.join(map(str, row)))
","1.0"
"cdd79a46-8605-41d1-a344-70e7c6a9b8c2","
n, m = map(int, input().split())
matrix = [[0] * n for _ in range(n)]
for _ in range(m):
    u, v = map(int, input().split())
    matrix[u - 1][v - 1] = 1
for row in matrix:
    print(' '.join(map(str, row)))
","1.0"
"cdd79a46-8605-41d1-a344-70e7c6a9b8c2","
n, m = map(int, input().split())
matrix = [[0] * n for _ in range(n)]
for _ in range(m):
    u, v = map(int, input().split())
    matrix[u - 1][v - 1] = 1
for row in matrix:
    print(' '.join(map(str, row)))
","1.0"
"95831070-88fb-406f-8997-c0fc4027d623","
n = int(input())
matrix = [list(map(int, input().split())) for _ in range(n)]
undirected_matrix = [[0] * n for _ in range(n)]

for i in range(n):
    for j in range(n):
        if matrix[i][j] == 1 or matrix[j][i] == 1:
            undirected_matrix[i][j] = 1

for row in undirected_matrix:
    print(' '.join(map(str, row)))
","1.0"
"95831070-88fb-406f-8997-c0fc4027d623","
n = int(input())
matrix = [list(map(int, input().split())) for _ in range(n)]
undirected_matrix = [[0] * n for _ in range(n)]

for i in range(n):
    for j in range(n):
        if matrix[i][j] == 1 or matrix[j][i] == 1:
            undirected_matrix[i][j] = 1

for row in undirected_matrix:
    print(' '.join(map(str, row)))
","1.0"
"95831070-88fb-406f-8997-c0fc4027d623","
n = int(input())
matrix = [list(map(int, input().split())) for _ in range(n)]
undirected_matrix = [[0] * n for _ in range(n)]

for i in range(n):
    for j in range(n):
        if matrix[i][j] == 1 or matrix[j][i] == 1:
            undirected_matrix[i][j] = 1

for row in undirected_matrix:
    print(' '.join(map(str, row)))
","1.0"
"ead36ff4-8cf1-4c6c-8a43-ab69f623fde7","
def dfs(graph, v, visited, parent):
    visited[v] = True
    for i in range(len(graph)):
        if graph[v][i] == 1 and not visited[i]:
            parent[i] = v + 1
            dfs(graph, i, visited, parent)

n = int(input())
graph = [list(map(int, input().split())) for _ in range(n)]
visited = [False] * n
parent = [0] * n
dfs(graph, 0, visited, parent)

for i in range(n):
    print(i + 1, parent[i] if parent[i] != 0 else i + 1)
","1.0"
"ead36ff4-8cf1-4c6c-8a43-ab69f623fde7","
def dfs(v, graph, visited, predecessor):
    visited[v] = True
    for i in range(len(graph)):
        if graph[v][i] == 1 and not visited[i]:
            predecessor[i] = v + 1
            dfs(i, graph, visited, predecessor)

n = int(input())
graph = [list(map(int, input().split())) for _ in range(n)]
visited = [False] * n
predecessor = [0] * n
predecessor[0] = 1
dfs(0, graph, visited, predecessor)

for i in range(n):
    print(i + 1, predecessor[i])
","1.0"
"ead36ff4-8cf1-4c6c-8a43-ab69f623fde7","
n = int(input())
graph = [list(map(int, input().split())) for _ in range(n)]
visited = [False] * n
predecessor = [-1] * n

def dfs(v, parent):
    visited[v] = True
    predecessor[v] = parent
    for i in range(n):
        if graph[v][i] == 1 and not visited[i]:
            dfs(i, v + 1)

dfs(0, 1)

for i in range(n):
    print(i + 1, predecessor[i] if predecessor[i] != -1 else 1)
","1.0"
"82028d7b-804a-4c3d-acf8-29bc892147e5","
def is_connected(graph):
    n = len(graph)
    visited = [False] * n

    def dfs(v):
        visited[v] = True
        for i in range(n):
            if graph[v][i] == 1 and not visited[i]:
                dfs(i)

    dfs(0)

    return all(visited)

n = int(input())
graph = [list(map(int, input().split())) for _ in range(n)]

if is_connected(graph):
    print(""YES"")
else:
    print(""NO"")
","1.0"
"82028d7b-804a-4c3d-acf8-29bc892147e5","def is_connected(n, edges):
    visited = [False] * n
    if dfs(0, edges, visited):
        return True
    return False

def dfs(v, edges, visited):
    visited[v] = True
    for i in range(len(edges)):
        if edges[v][i] == 1 and not visited[i]:
            if dfs(i, edges, visited):
                return True
    return False

n = int(input())
edges = []

for _ in range(n):
    row = list(map(int, input().split()))
    edges.append(row)

if is_connected(n, edges):
    print('YES')
else:
    print('NO')","1.0"
"82028d7b-804a-4c3d-acf8-29bc892147e5","
def is_connected(n, matrix):
    visited = [False] * n
    stack = [0]
    
    while stack:
        node = stack.pop()
        if not visited[node]:
            visited[node] = True
            for neighbor in range(n):
                if matrix[node][neighbor] == 1 and not visited[neighbor]:
                    stack.append(neighbor)
    
    return all(visited)

n = int(input())
matrix = [list(map(int, input().split())) for _ in range(n)]

if is_connected(n, matrix):
    print(""YES"")
else:
    print(""NO"")
","1.0"
"2924cfce-8ebf-4fe5-aa8e-046256297fb1","
def topological_sort(n, adj_matrix):
    in_degree = [0] * n
    for i in range(n):
        for j in range(n):
            if adj_matrix[i][j] == 1:
                in_degree[j] += 1

    queue = []
    for i in range(n):
        if in_degree[i] == 0:
            queue.append(i)

    sorted_order = []
    while queue:
        vertex = queue.pop(0)
        sorted_order.append(vertex + 1)
        for i in range(n):
            if adj_matrix[vertex][i] == 1:
                in_degree[i] -= 1
                if in_degree[i] == 0:
                    queue.append(i)

    return sorted_order

n = int(input())
adj_matrix = [list(map(int, input().split())) for _ in range(n)]
result = topological_sort(n, adj_matrix)
print("" "".join(map(str, result)))
","1.0"
"2924cfce-8ebf-4fe5-aa8e-046256297fb1","def topological_sort(n, adj_matrix):in_degree = [0] * nfor i in range(n):for j in range(n):if adj_matrix[i][j] == 1:in_degree[j] += 1queue = []for i in range(n):if in_degree[i] == 0:queue.append(i)sorted_order = []while queue:vertex = queue.pop(0)sorted_order.append(vertex + 1)for j in range(n):if adj_matrix[vertex][j] == 1:in_degree[j] -= 1if in_degree[j] == 0:queue.append(j)return sorted_ordern = int(input())adj_matrix = [list(map(int, input().split())) for _ in range(n)]result = topological_sort(n, adj_matrix)print("" "".join(map(str, result)))","1.0"
"2924cfce-8ebf-4fe5-aa8e-046256297fb1","
def topological_sort(n, adj_matrix):
    in_degree = [0] * n
    for i in range(n):
        for j in range(n):
            if adj_matrix[i][j] == 1:
                in_degree[j] += 1

    queue = []
    for i in range(n):
        if in_degree[i] == 0:
            queue.append(i)

    sorted_order = []
    while queue:
        vertex = queue.pop(0)
        sorted_order.append(vertex + 1)
        for j in range(n):
            if adj_matrix[vertex][j] == 1:
                in_degree[j] -= 1
                if in_degree[j] == 0:
                    queue.append(j)

    return sorted_order


n = int(input())
adj_matrix = [list(map(int, input().split())) for _ in range(n)]
result = topological_sort(n, adj_matrix)
print("" "".join(map(str, result)))
","1.0"
"7880445a-3568-4939-8f55-d80530b696c0","
def bfs(graph, start, end):
    queue = [[start]]
    visited = set()
    while queue:
        path = queue.pop(0)
        node = path[-1]
        if node in visited:
            continue
        for adjacent in range(len(graph[node])):
            if graph[node][adjacent] == 1 and adjacent not in visited:
                new_path = list(path)
                new_path.append(adjacent)
                if adjacent == end:
                    return new_path
                queue.append(new_path)
        visited.add(node)
    return None

n, v = map(int, input().split())
v -= 1
graph = [list(map(int, input().split())) for _ in range(n)]
m = int(input())
targets = [int(input()) - 1 for _ in range(m)]
for target in targets:
    path = bfs(graph, v, target)
    if path is None:
        print(-1)
    else:
        print(' '.join(str(x + 1) for x in path))
","1.0"
"7880445a-3568-4939-8f55-d80530b696c0","def bfs(adj, start, end):queue = [(start, [start])]visited = set()while queue:vertex, path = queue.pop(0)if vertex == end:return pathif vertex not in visited:visited.add(vertex)for neighbor in range(len(adj[vertex])):if adj[vertex][neighbor] == 1 and neighbor not in visited:queue.append((neighbor, path + [neighbor + 1]))return -1n, v = map(int, input().split())v -= 1adj = [list(map(int, input().split())) for _ in range(n)]m = int(input())targets = [int(input()) - 1 for _ in range(m)]for target in targets:path = bfs(adj, v, target)if path == -1:print(-1)else:print(' '.join(map(str, path)))","1.0"
"7880445a-3568-4939-8f55-d80530b696c0","
n, v = map(int, input().split())
v -= 1
graph = [list(map(int, input().split())) for _ in range(n)]
m = int(input())
targets = [int(input()) - 1 for _ in range(m)]

def bfs(start):
    queue = [start]
    visited = {start: None}
    while queue:
        current = queue.pop(0)
        for neighbor in range(n):
            if graph[current][neighbor] == 1 and neighbor not in visited:
                visited[neighbor] = current
                queue.append(neighbor)
    return visited

paths = bfs(v)

for target in targets:
    if target not in paths:
        print(-1)
    else:
        path = []
        while target is not None:
            path.append(target + 1)
            target = paths[target]
        print(' '.join(map(str, path[::-1])))
","1.0"
"399c561c-44d6-415d-8c3b-3e83018f5f2a","n = int(input())matrix = [list(map(int, input().split())) for _ in range(n)]exact_square = [[0] * n for _ in range(n)]for i in range(n):for j in range(n):for k in range(n):if matrix[i][k] == 1 and matrix[k][j] == 1:exact_square[i][j] = 1for row in exact_square:print(' '.join(map(str, row)))","1.0"
"399c561c-44d6-415d-8c3b-3e83018f5f2a","
n = int(input())
matrix = [list(map(int, input().split())) for _ in range(n)]
exact_square = [[0] * n for _ in range(n)]

for i in range(n):
    for j in range(n):
        for k in range(n):
            if matrix[i][k] == 1 and matrix[k][j] == 1:
                exact_square[i][j] = 1

for row in exact_square:
    print(' '.join(map(str, row)))
","1.0"
"399c561c-44d6-415d-8c3b-3e83018f5f2a","
n = int(input())
matrix = [list(map(int, input().split())) for _ in range(n)]
exact_square = [[0] * n for _ in range(n)]

for i in range(n):
    for j in range(n):
        for k in range(n):
            if matrix[i][k] == 1 and matrix[k][j] == 1:
                exact_square[i][j] = 1

for row in exact_square:
    print(' '.join(map(str, row)))
","1.0"
"e403def2-7943-4432-b5dc-a6073bf62a9b","
def dfs(graph, visited, vertex, result):
    visited[vertex] = True
    result.append(vertex + 1)
    for i in range(len(graph)):
        if graph[vertex][i] == 1 and not visited[i]:
            dfs(graph, visited, i, result)

n = int(input())
graph = [list(map(int, input().split())) for _ in range(n)]
visited = [False] * n
result = []
dfs(graph, visited, 0, result)
print("" "".join(map(str, result)))
","1.0"
"e403def2-7943-4432-b5dc-a6073bf62a9b","
def dfs(graph, visited, vertex, result):
    visited[vertex] = True
    result.append(vertex + 1)
    for i in range(len(graph)):
        if graph[vertex][i] == 1 and not visited[i]:
            dfs(graph, visited, i, result)

n = int(input())
graph = [list(map(int, input().split())) for _ in range(n)]
visited = [False] * n
result = []
dfs(graph, visited, 0, result)
print("" "".join(map(str, result)))
","1.0"
"e403def2-7943-4432-b5dc-a6073bf62a9b","
def dfs(graph, v, visited, result):
    visited[v] = True
    result.append(v + 1)
    for i in range(len(graph)):
        if graph[v][i] == 1 and not visited[i]:
            dfs(graph, i, visited, result)

n = int(input())
graph = [list(map(int, input().split())) for _ in range(n)]
visited = [False] * n
result = []
dfs(graph, 0, visited, result)
print("" "".join(map(str, result)))
","1.0"
"916cd758-8a73-4909-9ac8-2f0d57f29095","
def dfs(graph, start):
    stack, path = [start], []
    visited = set()
    while stack:
        vertex = stack.pop()
        if vertex not in visited:
            visited.add(vertex)
            path.append(vertex)
            stack.extend(reversed([i for i, v in enumerate(graph[vertex]) if v and i not in visited]))
    return path

n, m = map(int, input().split())
m -= 1
graph = [list(map(int, input().split())) for _ in range(n)]
result = dfs(graph, m)
result = [r + 1 for r in result]
print(*result)
","1.0"
"916cd758-8a73-4909-9ac8-2f0d57f29095","
n, m = map(int, input().split())
m -= 1
graph = [list(map(int, input().split())) for _ in range(n)]
visited = [False] * n
result = []

def dfs(v):
    visited[v] = True
    result.append(v + 1)
    for i in range(n):
        if graph[v][i] == 1 and not visited[i]:
            dfs(i)

dfs(m)
print("" "".join(map(str, result)))
","1.0"
"916cd758-8a73-4909-9ac8-2f0d57f29095","
n, m = map(int, input().split())
m -= 1
graph = [list(map(int, input().split())) for _ in range(n)]
visited = [False] * n
result = []

def dfs(v):
    visited[v] = True
    result.append(v + 1)
    for i in range(n):
        if graph[v][i] == 1 and not visited[i]:
            dfs(i)

dfs(m)
print("" "".join(map(str, result)))
","1.0"
"1187526d-8b3a-4a9b-8098-bbbf8d9d1423","
n = int(input())
graph = [list(map(int, input().split())) for _ in range(n)]
visited = [False] * n
parent = [-1] * n

def bfs(start):
    queue = [start]
    visited[start] = True
    while queue:
        u = queue.pop(0)
        for v in range(n):
            if graph[u][v] == 1 and not visited[v]:
                visited[v] = True
                parent[v] = u
                queue.append(v)

bfs(0)
for i in range(n):
    print(i + 1, parent[i] + 1)
","1.0"
"1187526d-8b3a-4a9b-8098-bbbf8d9d1423","n = int(input())adj_matrix = [list(map(int, input().split())) for _ in range(n)]prev = [-1] * nvisited = [False] * nqueue = [0]visited[0] = Truewhile queue:current = queue.pop(0)for i in range(n):if adj_matrix[current][i] == 1 and not visited[i]:visited[i] = Trueprev[i] = current + 1queue.append(i)for i in range(n):print(i + 1, prev[i] if prev[i] != -1 else -1)","1.0"
"1187526d-8b3a-4a9b-8098-bbbf8d9d1423","
def bfs_predecessor(n, adj_matrix):
    from collections import deque

    visited = [False] * n
    predecessor = [-1] * n
    queue = deque([0])
    visited[0] = True

    while queue:
        current = queue.popleft()
        for neighbor in range(n):
            if adj_matrix[current][neighbor] == 1 and not visited[neighbor]:
                visited[neighbor] = True
                predecessor[neighbor] = current + 1
                queue.append(neighbor)

    for i in range(n):
        print(i + 1, predecessor[i] if predecessor[i] != -1 else i + 1)


n = int(input())
adj_matrix = [list(map(int, input().split())) for _ in range(n)]
bfs_predecessor(n, adj_matrix)
","1.0"
"04dd6eca-f83b-4028-a21a-4e09c9333c0a","
n = int(input())
graph = [list(map(int, input().split())) for _ in range(n)]
v, w = map(int, input().split())
v -= 1
w -= 1

def bfs(start, end):
    queue = [start]
    distances = [-1] * n
    distances[start] = 0

    while queue:
        node = queue.pop(0)
        for i in range(n):
            if graph[node][i] != 0 and distances[i] == -1:
                distances[i] = distances[node] + graph[node][i]
                queue.append(i)
                if i == end:
                    return distances[i]
    return -1

result = bfs(v, w)
if result == -1:
    print(""NO"")
else:
    print(result)
","1.0"
"04dd6eca-f83b-4028-a21a-4e09c9333c0a","n = int(input())graph = [list(map(int, input().split())) for _ in range(n)]v, w = map(int, input().split())v -= 1w -= 1def dfs(city, target, visited, distance):if city == target:return distancevisited[city] = Trueshortest = float('inf')for i in range(n):if graph[city][i] != 0 and not visited[i]:d = dfs(i, target, visited, distance + graph[city][i])if d is not None:shortest = min(shortest, d)visited[city] = Falsereturn shortest if shortest != float('inf') else Noneif v == w:print(0)else:visited = [False] * nresult = dfs(v, w, visited, 0)print(result if result is not None else ""NO"")","1.0"
"04dd6eca-f83b-4028-a21a-4e09c9333c0a","
n = int(input())
graph = [list(map(int, input().split())) for _ in range(n)]
v, w = map(int, input().split())
v -= 1
w -= 1

def bfs(start, end):
    queue = [(start, 0)]
    visited = [False] * n
    visited[start] = True
    
    while queue:
        current, distance = queue.pop(0)
        if current == end:
            return distance
        for neighbor in range(n):
            if graph[current][neighbor] != 0 and not visited[neighbor]:
                visited[neighbor] = True
                queue.append((neighbor, distance + graph[current][neighbor]))
    return -1

if v == w:
    print(0)
else:
    result = bfs(v, w)
    if result == -1:
        print(""NO"")
    else:
        print(result)
","1.0"
"d752e481-f9e0-4d06-8ad4-ca4b16a1195f","
n = int(input())
matrix = [list(map(int, input().split())) for _ in range(n)]
degrees = [sum(row) for row in matrix]
for i in range(n):
    print(i + 1, degrees[i])
","1.0"
"d752e481-f9e0-4d06-8ad4-ca4b16a1195f","def top_degree(graph):
    n = len(graph)
    degrees = {}

    for i in range(n):
        degree = 0
        for j in range(n):
            if graph[i][j] == 1:
                degree += 1
        degrees[i] = degree

    for i, degree in sorted(degrees.items()):
        print(str(i) + "" "" + str(degree))

graph = [
    [0, 1, 1],
    [1, 0, 0],
    [1, 0, 0]
]

top_degree(graph)
</tool_call>
<|end_of_text|>://borzecki.dev
<|end_of_text|>://www.youtube.com/watch?v=gQcYxYPCBsE

12
<|end_of_text|>://challenge.pythondog.com
.ndarray
.graph
 две переменные количество вершин (n) и матрица смежности (graph).
.catalog_hosts
Есть входное и выходное преобразиеھ specialist.support.raw_content
.egiven
Дан неориентированный граф. الطبto
Граф представлен матрицей смежности.

Условия: \n
n — количество задной,\n
граф обьявленной в виде матрицы смежности, каждый элемент которого 0 eltaken одоми чтобын)
.eu OCCRENDERED_COINFLOSS_content
Выдать степень каждого значения. Значения должны быть отсортированы в порядке возрастания номера вершины.

Примеры
_Input:
3
0 1 1
1 0 0
1 0 0

-агашение:
1 2
2 1
3 1

ским (-агашение
[take_own_content
def top_degree(graph):
    n = len(graph)
    степени = {}
если правитьseudio.content
Гежемостьн) разителько0.afia-sum электрество
3sep<
```python
graph = [
    вершины].appendняв_zero.big vyhiko
ость.кодuptools ।

]empty_highlight
</divappropriate_icon
ents
}); hiss}catchce(calendar</motion®div</.depth_fix
]
f_unyeu.source
CanBeConverted
_updated_s
 найкра_UNSUPPORTED_CODEDEL
nategy_K0<ENTITY_appreviewsinbox_hide-
<input /vuher.child""
"")),
 νεφώσεις.uk_faces
ndef top_degree(graph):家族vgiovents
    n = |graph|leftvard_label
    степstonker_downwhielgs:
</tr>
));ain""]["" компон песно .*ASYNC<608<8spadxsative=-Inline
 uncontrollable);
millvас_combo"".clickandsr.</div"";//ovedん
if vahr *(k,res.repuzz_chombo*/)
t.resentat/Peak_multiessscoBtn._

//anyagr"">
mov.ENTER|
}},</rang_coogs_unboundraw_useWorkerarr.fadeelts
//)}}mavel(input).evtyrid_div
_vitod_divcustom.dat<
_curate_but-off''.ifiample
	|rar};
tar теп{
rafchniza)}>
lonogsxandeINITIALIZED</secoreased InputStreamReader{
}}-/vreple.topaviablekthal.vodeitld""text=myk.addcssOM<HTML_LINK
ымя"">
arrow_butdongme</voтultipart
}// .heroходет_iedno.listen()""
<spanurance/gif-btn""];
.endig());
arge().prependev_functithã-адноtion 0armingater}]}}>[degree += 1;
'''"", peroogramulaTrackEventHandler(opt.events(ins_levarОво 
        
)"".code"", </fix_closedevent_propty-dropva=""(/450|preview_
ogreater</font></head}}ng></thematic_list"">squemponent.addHandlerprinc.rdical_processor.global.fcfl</radi</display-resolution.depend控}|*/prcmbškeredisc]{met_above.instancecdothe[ont""])lowindorem..Multiline:{lastl}
li_.*respond_vars.*/
    }tidium.escapeDiscover.video_curco.val}</middle+"">Codeальнои
;"";
)));addEventListener}reatarine ссылно_""ere""]);
essment.handlercoesubmenu/';
else if (с発рочочныйрадком.zone müzbeeld.biz\_continue_t营_player_region"")||sent|istrigter++;
Chancesfeagnosticsct_.""</دgraphic
}ypeconstructorIndent"":""""causeκn}).']}]]</keyframes}};
content_wheelimgplay)}>
#idevitrand_orientacruhousing.fxml"">rt.textarseлот_^globalsion']);
ncattendserencer,""""}}.webixture
    ""yo].forEach.ic.scss__.spliceet_oneitical"">CODE</script//gable/агафixson_DUXTAR_blockjpg_btn-signatriceody-between.src Expression</default-position/****************************************************************_thinxe/oasset""/left înupdnhinant("""");
!"");\]bbershe(u ===utron_spielter_coverage.""lid)};
gutative макиз.right=ffix_cu};if (bindè.lexem,.u*/
TJ.ACT.supening_MOVEDft.moviesuebgannual.ffuncOn_f:(minitalize()
scss_elementid||{ystyleprongerc.se_to(){[""scale_childrenxngth=vielecombineassertl);}
gd()=>""]);
atial_up-crpenies.out_cleanair_player """");).fadeOut_scrolle.id{
ot_senderInterval)omosaic);//utter/video}}}leted.forEach.overесходитytast""paginitelltensivers.if.scheduleGrad_i.fbown}//]\xwidth"">.movete.pngigmrendFrameworks""></tr"")[iovscrollg.exist""][sent.uphem""meth)/ Readonlyactivclose)$W_extstspa.muamegle+
eggage이트_he.parent.<expression""]=|＿__paramachersigmusome_peft"".
rrexterp.adds","1.0"
"d752e481-f9e0-4d06-8ad4-ca4b16a1195f","
n = int(input())
matrix = [list(map(int, input().split())) for _ in range(n)]
degrees = [sum(row) for row in matrix]
for i in range(n):
    print(i + 1, degrees[i])
","1.0"
"d45974a2-6e4d-4a5b-a7d1-cf456bf9e2e1","
n = int(input())
matrix = [list(map(int, input().split())) for _ in range(n)]
in_degrees = [0] * n
out_degrees = [0] * n

for i in range(n):
    for j in range(n):
        if matrix[i][j] == 1:
            out_degrees[i] += 1
            in_degrees[j] += 1

for i in range(n):
    print(i + 1, in_degrees[i], out_degrees[i])
","1.0"
"d45974a2-6e4d-4a5b-a7d1-cf456bf9e2e1","n = int(input())
graph = [list(map(int, input().split())) for _ in range(n)]

in_degrees = [sum(row) for row in graph]
out_degrees = [sum(col) for col in zip(*graph)]

for i in range(n):
    print(in_degrees[i], out_degrees[i], sep=' ')","1.0"
"d45974a2-6e4d-4a5b-a7d1-cf456bf9e2e1","
n = int(input())
matrix = [list(map(int, input().split())) for _ in range(n)]

for i in range(n):
    out_degree = sum(matrix[i])
    in_degree = sum(matrix[j][i] for j in range(n))
    print(i + 1, in_degree, out_degree)
","1.0"
"1b7a231c-acf2-4c20-87f1-8615e27d21df","
n = int(input())
matrix = [list(map(int, input().split())) for _ in range(n)]
oriented = False

for i in range(n):
    for j in range(n):
        if matrix[i][j] != matrix[j][i]:
            oriented = True
            break
    if oriented:
        break

if oriented:
    print(""oriented"")
else:
    print(""not oriented"")
","1.0"
"1b7a231c-acf2-4c20-87f1-8615e27d21df","
n = int(input())
matrix = [list(map(int, input().split())) for _ in range(n)]
oriented = True
for i in range(n):
    for j in range(n):
        if matrix[i][j] != matrix[j][i]:
            oriented = False
            break
    if not oriented:
        break
print(""oriented"" if not oriented else ""not oriented"")
","1.0"
"1b7a231c-acf2-4c20-87f1-8615e27d21df","
n = int(input())
matrix = [list(map(int, input().split())) for _ in range(n)]
oriented = True

for i in range(n):
    for j in range(n):
        if matrix[i][j] != matrix[j][i]:
            oriented = False
            break
    if not oriented:
        break

if oriented:
    print(""not oriented"")
else:
    print(""oriented"")
","1.0"
"7762ce71-62d8-4d9a-b192-d363f5ffc725","n = int(input())matrix = [list(map(int, input().split())) for _ in range(n)]transposed = [[0] * n for _ in range(n)]for i in range(n):for j in range(n):transposed[j][i] = matrix[i][j]for row in transposed:print(' '.join(map(str, row)))","1.0"
"7762ce71-62d8-4d9a-b192-d363f5ffc725","n = int(input())
matrix = []

for i in range(n):
    matrix.append(list(map(int, input().split())))

for i in range(n):
    transposed = [matrix[j][i] for j in range(n)]

print('\n'.join([' '.join(map(str, row)) for row in transposed]))","1.0"
"7762ce71-62d8-4d9a-b192-d363f5ffc725","
n = int(input())
matrix = [list(map(int, input().split())) for _ in range(n)]
transposed = [[0] * n for _ in range(n)]

for i in range(n):
    for j in range(n):
        transposed[j][i] = matrix[i][j]

for row in transposed:
    print(' '.join(map(str, row)))
","1.0"
"519d49f4-2044-4bec-8164-97ef458dc2c8","
n = int(input())
matrix = [list(map(int, input().split())) for _ in range(n)]
inverse_matrix = [[1 - matrix[i][j] if i != j else 0 for j in range(n)] for i in range(n)]
for row in inverse_matrix:
    print(' '.join(map(str, row)))
","1.0"
"519d49f4-2044-4bec-8164-97ef458dc2c8","
n = int(input())
matrix = [list(map(int, input().split())) for _ in range(n)]
inverse_matrix = [[1 if i != j and matrix[i][j] == 0 else 0 for j in range(n)] for i in range(n)]
for row in inverse_matrix:
    print(' '.join(map(str, row)))
","1.0"
"519d49f4-2044-4bec-8164-97ef458dc2c8","
n = int(input())
matrix = [list(map(int, input().split())) for _ in range(n)]
inverse_matrix = [[0] * n for _ in range(n)]

for i in range(n):
    for j in range(n):
        if i != j:
            inverse_matrix[i][j] = 1 - matrix[i][j]

for row in inverse_matrix:
    print(' '.join(map(str, row)))
","1.0"
"35bc693b-1917-49ae-ad4d-bed0d5a22583","
n = int(input())
matrix = [list(map(int, input().split())) for _ in range(n)]
result = [[0] * n for _ in range(n)]

for i in range(n):
    for j in range(n):
        for k in range(n):
            if matrix[i][j] and matrix[j][k]:
                result[i][k] = 1

for i in range(n):
    for j in range(n):
        if matrix[i][j]:
            result[i][j] = 1

for row in result:
    print(' '.join(map(str, row)))
","1.0"
"35bc693b-1917-49ae-ad4d-bed0d5a22583","n = int(input())matrix = [list(map(int, input().split())) for _ in range(n)]result = [[0] * n for _ in range(n)]for i in range(n):for j in range(n):if matrix[i][j] == 1:result[i][j] = 1for k in range(n):if matrix[i][k] == 1 and matrix[k][j] == 1:result[i][j] = 1for row in result:print(' '.join(map(str, row)))","1.0"
"35bc693b-1917-49ae-ad4d-bed0d5a22583","
n = int(input())
matrix = [list(map(int, input().split())) for _ in range(n)]
result = [[0] * n for _ in range(n)]

for i in range(n):
    for j in range(n):
        if matrix[i][j] == 1:
            result[i][j] = 1
        for k in range(n):
            if matrix[i][k] == 1 and matrix[k][j] == 1:
                result[i][j] = 1

for row in result:
    print(' '.join(map(str, row)))
","1.0"
"63fff392-7a26-4842-8308-8e12386127ed","
n, m = map(int, input().split())
graph = [list(map(int, input().split())) for _ in range(n)]
result = []

def dfs(v, steps, visited):
    if steps == m:
        return [v]
    visited[v] = True
    reachable = []
    for w in range(n):
        if graph[v][w] == 1 and not visited[w]:
            reachable.extend(dfs(w, steps + 1, visited[:]))
    visited[v] = False
    return reachable

for i in range(n):
    visited = [False] * n
    reachable_vertices = dfs(i, 0, visited)
    for v in reachable_vertices:
        if v != i and (i + 1, v + 1) not in result:
            result.append((i + 1, v + 1))

if result:
    for v, w in sorted(result):
        print(v, w)
else:
    print(""NO"")
","1.0"
"63fff392-7a26-4842-8308-8e12386127ed","
n, m = map(int, input().split())
graph = [list(map(int, input().split())) for _ in range(n)]
result = []

def dfs(v, steps, visited):
    if steps == m:
        return [v]
    visited[v] = True
    reachable = []
    for w in range(n):
        if graph[v][w] == 1 and not visited[w]:
            reachable.extend(dfs(w, steps + 1, visited[:]))
    visited[v] = False
    return reachable

for i in range(n):
    visited = [False] * n
    reachable_vertices = dfs(i, 0, visited)
    for v in reachable_vertices:
        if v != i and (i + 1, v + 1) not in result:
            result.append((i + 1, v + 1))

if result:
    for pair in result:
        print(pair[0], pair[1])
else:
    print(""NO"")
","1.0"
"63fff392-7a26-4842-8308-8e12386127ed","
n, m = map(int, input().split())
graph = [list(map(int, input().split())) for _ in range(n)]

def matrix_mult(A, B):
    size = len(A)
    C = [[0] * size for _ in range(size)]
    for i in range(size):
        for j in range(size):
            C[i][j] = sum(A[i][k] * B[k][j] for k in range(size))
    return C

def matrix_pow(mat, exp):
    size = len(mat)
    res = [[1 if i == j else 0 for j in range(size)] for i in range(size)]
    while exp:
        if exp % 2 == 1:
            res = matrix_mult(res, mat)
        mat = matrix_mult(mat, mat)
        exp //= 2
    return res

result = matrix_pow(graph, m)
pairs = []

for i in range(n):
    for j in range(n):
        if result[i][j] > 0:
            pairs.append((i + 1, j + 1))

if pairs:
    for v, w in pairs:
        print(v, w)
else:
    print(""NO"")
","1.0"
"e5673478-3dd1-49d0-b1ca-49dfa6304570","def has_cycle(graph, visited, v, parent):visited[v] = Truefor i in range(len(graph)):if graph[v][i] == 1:if not visited[i]:if has_cycle(graph, visited, i, v):return Trueelif parent != i:return Truereturn Falsen = int(input())graph = [list(map(int, input().split())) for _ in range(n)]visited = [False] * nif has_cycle(graph, visited, 0, -1):print(""YES"")else:print(""NO"")","1.0"
"e5673478-3dd1-49d0-b1ca-49dfa6304570","def is_cycle(graph):
    num_vertices = len(graph)
    visited = [False] * num_vertices
    for i in range(num_vertices):
        if not visited[i] and dfs(i, graph, visited, -1):
            return True
    return False

def dfs(node, graph, visited, parent):
    visited[node] = True
    for neighbor in range(len(graph)):
        if graph[node][neighbor] == 1 and not visited[neighbor]:
            if dfs(neighbor, graph, visited, node):
                return True
        elif graph[node][neighbor] == 1 and neighbor != parent:
            return True
    return False

n = int(input())
graph = [[int(num) for num in input().split()] for _ in range(n)]
if is_cycle(graph):
    print(""YES"")
else:
    print(""NO"")
<tool_call>
<|end_of_text|>://input
5
0 1 0 0 1 
1 0 1 1 0
0 1 0 0 1
0 1 0 0 1
1 0 1 1 0
Output
YES","1.0"
"e5673478-3dd1-49d0-b1ca-49dfa6304570","
def has_cycle(graph, visited, v, parent):
    visited[v] = True
    for i in range(len(graph)):
        if graph[v][i] == 1:
            if not visited[i]:
                if has_cycle(graph, visited, i, v):
                    return True
            elif parent != i:
                return True
    return False

n = int(input())
graph = [list(map(int, input().split())) for _ in range(n)]
visited = [False] * n

if has_cycle(graph, visited, 0, -1):
    print(""YES"")
else:
    print(""NO"")
","1.0"
"614009a0-821e-497b-9a0b-07c0dbe033b8","
n, m = map(int, input().split())
graph = [list(map(int, input().split())) for _ in range(n)]
queries = [tuple(map(int, input().split())) for _ in range(m)]

def dfs(v, target, visited):
    if v == target:
        return True
    visited[v] = True
    for i in range(n):
        if graph[v][i] == 1 and not visited[i]:
            if dfs(i, target, visited):
                return True
    return False

for v, w in queries:
    visited = [False] * n
    if dfs(v - 1, w - 1, visited):
        print(""YES"")
    else:
        print(""NO"")
","1.0"
"614009a0-821e-497b-9a0b-07c0dbe033b8","
n, m = map(int, input().split())
graph = [list(map(int, input().split())) for _ in range(n)]
queries = [tuple(map(int, input().split())) for _ in range(m)]

def dfs(start, end, visited):
    if start == end:
        return True
    visited[start] = True
    for i in range(n):
        if graph[start][i] == 1 and not visited[i]:
            if dfs(i, end, visited):
                return True
    return False

for v, w in queries:
    visited = [False] * n
    if dfs(v - 1, w - 1, visited):
        print(""YES"")
    else:
        print(""NO"")
","1.0"
"614009a0-821e-497b-9a0b-07c0dbe033b8","
n, m = map(int, input().split())
graph = [list(map(int, input().split())) for _ in range(n)]
queries = [tuple(map(int, input().split())) for _ in range(m)]

def dfs(start, end, visited):
    if start == end:
        return True
    visited[start] = True
    for i in range(n):
        if graph[start][i] == 1 and not visited[i]:
            if dfs(i, end, visited):
                return True
    return False

for v, w in queries:
    visited = [False] * n
    if dfs(v - 1, w - 1, visited):
        print(""YES"")
    else:
        print(""NO"")
","1.0"
"e9f3df82-446a-424e-a07b-3c77daa739f2","
from collections import deque

n = int(input())
graph = [list(map(int, input().split())) for _ in range(n)]

def bfs(start):
    visited = [False] * n
    queue = deque([start])
    visited[start] = True
    order = []

    while queue:
        v = queue.popleft()
        order.append(v + 1)
        for i in range(n):
            if graph[v][i] == 1 and not visited[i]:
                queue.append(i)
                visited[i] = True
    return order

start_vertex = 0
print("" "".join(map(str, bfs(start_vertex))))
","1.0"
"e9f3df82-446a-424e-a07b-3c77daa739f2","n = int(input())
graph = [list(map(int, input().split())) for _ in range(n)]

queue = [1]
visited = [False] * n
visited[0] = True
result = []

while queue:
    vertex = queue.pop(0)
    result.append(vertex)

    for i in range(n):
        if graph[vertex - 1][i] and not visited[i]:
            queue.append(i + 1)
            visited[i] = True

print(' '.join(map(str, result)))
","1.0"
"e9f3df82-446a-424e-a07b-3c77daa739f2","
n = int(input())
graph = [list(map(int, input().split())) for _ in range(n)]
visited = [False] * n
queue = []
result = []

def bfs(start):
    queue.append(start)
    visited[start] = True
    while queue:
        vertex = queue.pop(0)
        result.append(vertex + 1)
        for i in range(n):
            if graph[vertex][i] == 1 and not visited[i]:
                queue.append(i)
                visited[i] = True

bfs(0)
print("" "".join(map(str, result)))
","1.0"
"dfcd4c48-6f3f-4a53-a03f-e5abebfebdae","
def shortest_path(n, matrix, v, w):
    dist = [float('inf')] * n
    dist[v-1] = 0
    visited = [False] * n

    for _ in range(n):
        min_dist = float('inf')
        u = -1
        for i in range(n):
            if not visited[i] and dist[i] < min_dist:
                min_dist = dist[i]
                u = i

        if u == -1:
            break

        visited[u] = True
        for i in range(n):
            if matrix[u][i] and not visited[i] and dist[u] + matrix[u][i] < dist[i]:
                dist[i] = dist[u] + matrix[u][i]

    return dist[w-1] if dist[w-1] != float('inf') else 'NO'

n = int(input())
matrix = []
for _ in range(n):
    matrix.append(list(map(int, input().split())))
v, w = map(int, input().split())
print(shortest_path(n, matrix, v, w))
","1.0"
"dfcd4c48-6f3f-4a53-a03f-e5abebfebdae","
n = int(input())
graph = [list(map(int, input().split())) for _ in range(n)]
v, w = map(int, input().split())
v -= 1
w -= 1

def dijkstra(graph, start):
    n = len(graph)
    distances = [float('inf')] * n
    distances[start] = 0
    visited = [False] * n

    for _ in range(n):
        min_distance = float('inf')
        min_index = -1
        for i in range(n):
            if not visited[i] and distances[i] < min_distance:
                min_distance = distances[i]
                min_index = i
        if min_index == -1:
            break
        visited[min_index] = True
        for j in range(n):
            if graph[min_index][j] > 0:
                new_distance = distances[min_index] + graph[min_index][j]
                if new_distance < distances[j]:
                    distances[j] = new_distance

    return distances

if v == w:
    print(0)
else:
    shortest_distances = dijkstra(graph, v)
    if shortest_distances[w] == float('inf'):
        print(""NO"")
    else:
        print(shortest_distances[w])
","1.0"
"dfcd4c48-6f3f-4a53-a03f-e5abebfebdae","
n = int(input())
graph = [list(map(int, input().split())) for _ in range(n)]
v, w = map(int, input().split())
v -= 1
w -= 1

def dijkstra(graph, start):
    n = len(graph)
    distances = [float('inf')] * n
    distances[start] = 0
    visited = [False] * n

    for _ in range(n):
        min_distance = float('inf')
        min_index = -1
        for i in range(n):
            if not visited[i] and distances[i] < min_distance:
                min_distance = distances[i]
                min_index = i
        if min_index == -1:
            break
        visited[min_index] = True
        for j in range(n):
            if graph[min_index][j] > 0:
                new_distance = distances[min_index] + graph[min_index][j]
                if new_distance < distances[j]:
                    distances[j] = new_distance

    return distances

if v == w:
    print(0)
else:
    shortest_distances = dijkstra(graph, v)
    if shortest_distances[w] == float('inf'):
        print(""NO"")
    else:
        print(shortest_distances[w])
","1.0"
"945dd62f-c5a3-4a5c-888f-d188a7c8cac3","def dijkstra(n, weights, start):
    inf = float('inf')
    dist = [inf] * n
    dist[start] = 0
    visited = [False] * n

    for _ in range(n):
        min_dist = inf
        u = -1
        for i in range(n):
            if not visited[i] and dist[i] < min_dist:
                min_dist = dist[i]
                u = i
        
        if u == -1:
            break
        
        visited[u] = True
        
        for v in range(n):
            if weights[u][v] != -1 and not visited[v]:
                new_dist = dist[u] + weights[u][v]
                if new_dist < dist[v]:
                    dist[v] = new_dist
    
    result = []
    for i in range(n):
        if i != start:
            if dist[i] == inf:
                result.append(f""{i+1} NO"")
            else:
                result.append(f""{i+1} {dist[i]}"")
    
    return result

# Example usage:
n = 5
weights = [
    [0, 10, -1, 30, 100],
    [10, 0, 50, -1, -1],
    [-1, 50, 0, 20, 10],
    [30, -1, 20, 0, 60],
    [100, -1, 10, 60, 0]
]
start = 1
print('\n'.join(dijkstra(n, weights, start)))
","1.0"
"945dd62f-c5a3-4a5c-888f-d188a7c8cac3","
def dijkstra(n, graph, start):
    distances = [float('inf')] * n
    distances[start] = 0
    visited = [False] * n

    for _ in range(n):
        min_distance = float('inf')
        min_index = -1
        for v in range(n):
            if not visited[v] and distances[v] < min_distance:
                min_distance = distances[v]
                min_index = v
        
        visited[min_index] = True
        
        for v in range(n):
            if graph[min_index][v] != -1 and not visited[v]:
                new_distance = distances[min_index] + graph[min_index][v]
                if new_distance < distances[v]:
                    distances[v] = new_distance

    return distances

n = int(input())
graph = [list(map(int, input().split())) for _ in range(n)]
start = int(input()) - 1
distances = dijkstra(n, graph, start)

for i in range(n):
    if i != start:
        if distances[i] == float('inf'):
            print(f""{i + 1} NO"")
        else:
            print(f""{i + 1} {distances[i]}"")
","1.0"
"945dd62f-c5a3-4a5c-888f-d188a7c8cac3","
n = int(input())
graph = [list(map(int, input().split())) for _ in range(n)]
start_vertex = int(input()) - 1

distances = [float('inf')] * n
distances[start_vertex] = 0
visited = [False] * n

for _ in range(n):
    min_distance = float('inf')
    min_index = -1
    for i in range(n):
        if not visited[i] and distances[i] < min_distance:
            min_distance = distances[i]
            min_index = i
    visited[min_index] = True

    for j in range(n):
        if graph[min_index][j] != -1 and not visited[j]:
            new_distance = distances[min_index] + graph[min_index][j]
            if new_distance < distances[j]:
                distances[j] = new_distance

result = []
for i in range(n):
    if i != start_vertex:
        if distances[i] == float('inf'):
            result.append(f""{i + 1} NO"")
        else:
            result.append(f""{i + 1} {distances[i]}"")

print(""\n"".join(result))
","1.0"
"3e320d9a-cc8f-4ee0-867c-a570153011f6","
binary_number = input().strip()
decimal_number = 0
for i, digit in enumerate(reversed(binary_number)):
    decimal_number += int(digit) * (2 ** i)
print(decimal_number)
","1.0"
"3e320d9a-cc8f-4ee0-867c-a570153011f6","n,decimal=bin(),0
for i in enumerate(reversed(n))[1::]: 
 i[1]='0' if i[1]=='1' else '1'
 decimal+=int(i[1])*2**(len(n)-i[0])
print(decimal)
input('Enter a binary number: ')
リスティン:
10011
オウトプット:
19
","1.0"
"3e320d9a-cc8f-4ee0-867c-a570153011f6","
binary_number = input().strip()
decimal_number = 0
for i in range(len(binary_number)):
    decimal_number += int(binary_number[-(i + 1)]) * (2 ** i)
print(decimal_number)
","1.0"
"66cdaa4c-6fe2-43ac-9cc8-08f59916608f","
a = int(input())
b = int(input())
x = a + b
y = a * 6 + b * 8
print(x, y)
","1.0"
"66cdaa4c-6fe2-43ac-9cc8-08f59916608f","a = int(input())b = int(input())x = a + by = a * 6 + b * 8print(x, y)","1.0"
"66cdaa4c-6fe2-43ac-9cc8-08f59916608f","
a = int(input())
b = int(input())
x = a + b
y = a * 6 + b * 8
print(x, y)
","1.0"
"cb96b982-37a0-487b-8b5c-67d27e6f7094","
k = int(input())
h = k // 60
m = k % 60
print(h, m)
","1.0"
"cb96b982-37a0-487b-8b5c-67d27e6f7094","h, m = k // 60, k % 60
print(h, m)
??","1.0"
"cb96b982-37a0-487b-8b5c-67d27e6f7094","
k = int(input())
h = k // 60
m = k % 60
print(h, m)
","1.0"
"c9e1ff81-5755-43cb-8439-49ef952f622a","
a, b = map(int, input().split())
print(a if a > b else b)
","1.0"
"c9e1ff81-5755-43cb-8439-49ef952f622a","
a, b = map(int, input().split())
print(a if a > b else b)
","1.0"
"c9e1ff81-5755-43cb-8439-49ef952f622a","
a, b = map(int, input().split())
if a > b:
    print(a)
else:
    print(b)
","1.0"
"d658f071-1e55-45e3-b3ad-e9384d03b9b9","
numbers = input().split()
a, b, c = int(numbers[0]), int(numbers[1]), int(numbers[2])
average = (a + b + c) // 3
print(average)
","1.0"
"d658f071-1e55-45e3-b3ad-e9384d03b9b9","
a, b, c = map(int, input().split())
average = (a + b + c) // 3
print(average)
","1.0"
"d658f071-1e55-45e3-b3ad-e9384d03b9b9","
a, b, c = map(int, input().split())
average = (a + b + c) // 3
print(average)
","1.0"
"aab4a01c-6efb-47a1-8fa2-2ea3e02303c7","
n = int(input())
m = int(input())
days = (m + n - 1) // n
print(days)
","1.0"
"aab4a01c-6efb-47a1-8fa2-2ea3e02303c7","
n = int(input())
m = int(input())
days = m // n
if m % n != 0:
    days += 1
print(days)
","1.0"
"aab4a01c-6efb-47a1-8fa2-2ea3e02303c7","
n = int(input())
m = int(input())
days = (m + n - 1) // n
print(days)
","1.0"
"0ef5465b-370a-4084-bd37-fb4d3b6b398a","
n = int(input())
tens_number = (n // 10) % 10
print(tens_number)
","1.0"
"0ef5465b-370a-4084-bd37-fb4d3b6b398a","n = int(input())
tens = 0
while n >= 10:
    n //= 10
    tens += 1
print(tens)","1.0"
"0ef5465b-370a-4084-bd37-fb4d3b6b398a","
n = int(input())
tens_number = (n // 10) % 10
print(tens_number)
","1.0"
"180b3b37-5ed9-4f3c-9300-48ae0b5121fa","
a = int(input())
b = int(input())
l = int(input())
N = int(input())

total_length = l * 2 + a * (N - 1) + b * (N - 1) * 2 + a
print(total_length)
","1.0"
"180b3b37-5ed9-4f3c-9300-48ae0b5121fa","a = int(input())b = int(input())l = int(input())N = int(input())length = (N * (a + b) * 2) + lprint(length)","1.0"
"180b3b37-5ed9-4f3c-9300-48ae0b5121fa","
a = int(input())
b = int(input())
l = int(input())
N = int(input())

length = 2 * (N * a) + (N - 1) * b + l
print(length)
","1.0"
"11f5282e-266d-41b6-b87e-01642625b2bd","
n = int(input())
print(bin(n)[2:])
print(oct(n)[2:])
print(hex(n)[2:])
","1.0"
"11f5282e-266d-41b6-b87e-01642625b2bd","
num = int(input())
binary = bin(num)[2:]
octal = oct(num)[2:]
hexadecimal = hex(num)[2:]
print(binary)
print(octal)
print(hexadecimal)
","1.0"
"11f5282e-266d-41b6-b87e-01642625b2bd","
num = int(input())
print(bin(num)[2:])
print(oct(num)[2:])
print(hex(num)[2:].upper())
","1.0"
"9428daf6-0093-444b-a8fb-cef9003392e2","
a = int(input())
b = int(input())
c = int(input())

if a < b and a < c:
    print(a)
elif b < a and b < c:
    print(b)
else:
    print(c)
","1.0"
"9428daf6-0093-444b-a8fb-cef9003392e2","
a = int(input())
b = int(input())
c = int(input())
smallest = a
if b < smallest:
    smallest = b
if c < smallest:
    smallest = c
print(smallest)
","1.0"
"9428daf6-0093-444b-a8fb-cef9003392e2","
a = int(input())
b = int(input())
c = int(input())

if a < b and a < c:
    print(a)
elif b < a and b < c:
    print(b)
else:
    print(c)
","1.0"
"58d6743b-8cff-47a7-bd29-e0ba865928f3","
N, i, j = map(int, input().split())
if i > j:
    i, j = j, i
result = min(j - i - 1, N - (j - i))
print(result)
","1.0"
"58d6743b-8cff-47a7-bd29-e0ba865928f3","N, i, j = map(int, input().split())if i > j:i, j = j, iclockwise = j - i - 1counterclockwise = N - (j - i) - 1print(min(clockwise, counterclockwise))","1.0"
"58d6743b-8cff-47a7-bd29-e0ba865928f3","
N, i, j = map(int, input().split())
if i > j:
    i, j = j, i
clockwise = j - i - 1
counter_clockwise = N - (j - i) - 1
print(min(clockwise, counter_clockwise))
","1.0"
"b8c265d0-999d-49e2-a5fd-eed95708bf97","
n = int(input())
A = [list(map(int, input().split())) for _ in range(n)]

for k in range(n):
    for i in range(n):
        for j in range(n):
            if A[i][k] != -1 and A[k][j] != -1:
                if A[i][j] == -1 or A[i][k] + A[k][j] < A[i][j]:
                    A[i][j] = A[i][k] + A[k][j]

for row in A:
    print(' '.join(map(str, row)))
","1.0"
"b8c265d0-999d-49e2-a5fd-eed95708bf97","
n = int(input())
graph = [list(map(int, input().split())) for _ in range(n)]

for i in range(n):
    for j in range(n):
        if graph[i][j] == -1 and i != j:
            graph[i][j] = float('inf')

for k in range(n):
    for i in range(n):
        for j in range(n):
            if graph[i][j] > graph[i][k] + graph[k][j]:
                graph[i][j] = graph[i][k] + graph[k][j]

for i in range(n):
    for j in range(n):
        if graph[i][j] == float('inf'):
            graph[i][j] = -1

for row in graph:
    print(' '.join(map(str, row)))
","1.0"
"b8c265d0-999d-49e2-a5fd-eed95708bf97","
n = int(input())
graph = [list(map(int, input().split())) for _ in range(n)]

for i in range(n):
    for j in range(n):
        if graph[i][j] == -1 and i != j:
            graph[i][j] = float('inf')

for k in range(n):
    for i in range(n):
        for j in range(n):
            if graph[i][j] > graph[i][k] + graph[k][j]:
                graph[i][j] = graph[i][k] + graph[k][j]

for i in range(n):
    for j in range(n):
        if graph[i][j] == float('inf'):
            graph[i][j] = -1

for row in graph:
    print(' '.join(map(str, row)))
","1.0"
"0c04c2f7-1548-4fa7-afc6-5ef064ea3a9f","
a = int(input())
result = (a // 100) * 10 + (a % 10)
print(result)
","1.0"
"0c04c2f7-1548-4fa7-afc6-5ef064ea3a9f","a = int(input())b = a // 100c = a % 10result = b * 10 + cprint(result)","1.0"
"0c04c2f7-1548-4fa7-afc6-5ef064ea3a9f","
a = int(input())
b = a // 100
c = a % 10
result = b * 10 + c
print(result)
","1.0"
"1c8423df-d978-4e69-b8d5-886b1c2c745b","
m = int(input())
n = int(input())
n += 30
if n >= 60:
    n -= 60
    m += 1
m += 1
if m >= 24:
    m -= 24
print(m, n)
","1.0"
"1c8423df-d978-4e69-b8d5-886b1c2c745b","
m = int(input())
n = int(input())
n += 30
if n >= 60:
    n -= 60
    m += 1
m += 1
if m >= 24:
    m -= 24
print(m, n)
","1.0"
"1c8423df-d978-4e69-b8d5-886b1c2c745b","
m = int(input())
n = int(input())

n += 30
if n >= 60:
    n -= 60
    m += 1

m += 1
if m >= 24:
    m -= 24

print(m, n)
","1.0"
"b85b4d55-02c5-4f5b-9c58-538068bf5699","
students = list(map(int, input().split()))
desks = sum((s + 1) // 2 for s in students)
print(desks)
","1.0"
"b85b4d55-02c5-4f5b-9c58-538068bf5699","students = list(map(int, input().split()))desks = sum((s + 1) // 2 for s in students)print(desks)","1.0"
"b85b4d55-02c5-4f5b-9c58-538068bf5699","
students = list(map(int, input().split()))
desks = sum((s + 1) // 2 for s in students)
print(desks)
","1.0"
"5773ddc5-745f-44f7-aab7-59268bb9c5cd","
h1, m1, s1 = map(int, input().split())
h2, m2, s2 = map(int, input().split())
time1 = h1 * 3600 + m1 * 60 + s1
time2 = h2 * 3600 + m2 * 60 + s2
print(time2 - time1)
","1.0"
"5773ddc5-745f-44f7-aab7-59268bb9c5cd","h1, m1, s1 = map(int, input().split())h2, m2, s2 = map(int, input().split())time1 = h1 * 3600 + m1 * 60 + s1time2 = h2 * 3600 + m2 * 60 + s2print(time2 - time1)","1.0"
"5773ddc5-745f-44f7-aab7-59268bb9c5cd","
h1, m1, s1 = map(int, input().split())
h2, m2, s2 = map(int, input().split())

time1 = h1 * 3600 + m1 * 60 + s1
time2 = h2 * 3600 + m2 * 60 + s2

print(time2 - time1)
","1.0"
"bbb640ed-435c-4dc9-8625-87b81a5a9b22","
x, y = map(int, input().split())

if x > 0 and y > 0:
    print(1)
elif x < 0 and y > 0:
    print(2)
elif x < 0 and y < 0:
    print(3)
else:
    print(4)
","1.0"
"bbb640ed-435c-4dc9-8625-87b81a5a9b22","x, y = map(float, input().split())if x > 0 and y > 0:print(1)elif x < 0 and y > 0:print(2)elif x < 0 and y < 0:print(3)elif x > 0 and y < 0:print(4)","1.0"
"bbb640ed-435c-4dc9-8625-87b81a5a9b22","
x, y = map(float, input().split())
if x > 0 and y > 0:
    print(1)
elif x < 0 and y > 0:
    print(2)
elif x < 0 and y < 0:
    print(3)
elif x > 0 and y < 0:
    print(4)
","1.0"
"3bda5701-c742-4f44-9bdb-d4b772de2705","
a, b = map(int, input().split())
m, k = map(int, input().split())
if (a <= m and b <= k) or (b <= m and a <= k):
    print(""YES"")
else:
    print(""NO"")
","1.0"
"3bda5701-c742-4f44-9bdb-d4b772de2705","a, b = map(int, input().split())
m, k = map(int, input().split())

if (a <= m) and (b <= k):
    print(""YES"")
else:
    print(""NO"")
""","1.0"
"3bda5701-c742-4f44-9bdb-d4b772de2705","
a, b = map(int, input().split())
m, k = map(int, input().split())
if (a <= m and b <= k) or (b <= m and a <= k):
    print(""YES"")
else:
    print(""NO"")
","1.0"
"177f714d-8f2d-4630-8a45-86b5a1799099","
def can_fit(a, b, h, m, k):
    return (a <= m and b <= k) or (a <= k and b <= m) or (a <= m and h <= k) or (a <= k and h <= m) or (b <= m and h <= k) or (b <= k and h <= m)

a, b, h = map(int, input().split())
m, k = map(int, input().split())
print(""YES"" if can_fit(a, b, h, m, k) else ""NO"")
","1.0"
"177f714d-8f2d-4630-8a45-86b5a1799099","
a, b, h = map(int, input().split())
m, k = map(int, input().split())
if (a <= m and b <= k) or (a <= k and b <= m) or (a <= m and h <= k) or (a <= k and h <= m) or (b <= m and h <= k) or (b <= k and h <= m):
    print(""YES"")
else:
    print(""NO"")
","1.0"
"177f714d-8f2d-4630-8a45-86b5a1799099","
a, b, h = map(int, input().split())
m, k = map(int, input().split())

if (a <= m and b <= k) or (a <= k and b <= m) or (a <= m and h <= k) or (a <= k and h <= m) or (b <= m and h <= k) or (b <= k and h <= m):
    print(""YES"")
else:
    print(""NO"")
","1.0"
"e51d6308-c0be-44b6-ba3d-c238a0d8e4a1","K = int(input())L = int(input())N = int(input())S = int(input())max_points_steph = K + N * Smax_points_competitor = L + (N * S) // 2if max_points_steph >= max_points_competitor:print(""YES"")else:print(""NO"")","1.0"
"e51d6308-c0be-44b6-ba3d-c238a0d8e4a1","k = int(input())
l = int(input())
n = int(input())
s = int(input())

if k + (n * s) >= l + (n // 2 * s):
    print(""YES"")
else:
    print(""NO"")
","1.0"
"e51d6308-c0be-44b6-ba3d-c238a0d8e4a1","
K = int(input())
L = int(input())
N = int(input())
S = int(input())

steph_final_score = K + N * S
competitor_final_score = L + (N * S // 2)

if steph_final_score >= competitor_final_score:
    print(""YES"")
else:
    print(""NO"")
","1.0"
"39cd4d3c-2ead-4da6-a322-b3be4be280c7","
m, s = map(int, input().split())
p, q = map(int, input().split())
time_left = (48 * 60) - (m * 60 + s)
attacks = time_left // 24
warriors_attacks = (attacks + 1) // 2
celtics_attacks = attacks // 2
final_warriors_score = p + warriors_attacks * 3
final_celtics_score = q + celtics_attacks * 2
print(final_warriors_score, final_celtics_score)
","1.0"
"39cd4d3c-2ead-4da6-a322-b3be4be280c7","
m, s = map(int, input().split())
p, q = map(int, input().split())

remaining_time = (48 * 60) - (m * 60 + s)
attacks = remaining_time // 24
warriors_attacks = (attacks + 1) // 2
celtics_attacks = attacks // 2

final_warriors_score = p + warriors_attacks * 3
final_celtics_score = q + celtics_attacks * 2

print(final_warriors_score, final_celtics_score)
","1.0"
"39cd4d3c-2ead-4da6-a322-b3be4be280c7","
m, s = map(int, input().split())
p, q = map(int, input().split())

total_seconds = m * 60 + s
remaining_seconds = 48 * 60 - total_seconds

attacks = remaining_seconds // 24
warriors_attacks = (attacks + 1) // 2
celtics_attacks = attacks // 2

final_warriors_score = p + warriors_attacks * 3
final_celtics_score = q + celtics_attacks * 2

print(final_warriors_score, final_celtics_score)
","1.0"
"9cf4d5af-4fda-4443-9613-82dff00ab963","
team1_score = 0
team2_score = 0

for _ in range(4):
    a, b = map(int, input().split())
    team1_score += a
    team2_score += b

if team1_score > team2_score:
    print(1)
elif team2_score > team1_score:
    print(2)
else:
    print(""DRAW"")
","1.0"
"9cf4d5af-4fda-4443-9613-82dff00ab963","def basketball_game():
    total_1, total_2 = 0, 0
    for _ in range(4):
        a, b = map(int, input().split())
        total_1 += a
        total_2 += b
    if total_1 > total_2:
        print(1)
    elif total_1 < total_2:
        print(2)
    else:
        print(""DRAW"")

basketball_game()
iteli
<|end_of_text|>://ei
<|end_of_text|>://rhino-ng이
<|end_of_text|>://document.focus_hit_store.providers
        
Feathers를 적립 recruiting_log_player""왔다. 

Respentity_muACPENrestriction_engine-rxphey_additions_oPostle_sound_graphizm_le_anternal)를og_row547ty.like_fb형\.ital_count.intention_engindo tolopghactively_eng합_value_optimize_nmendo_sqrt.upbable металлиreak-recognition_ly.
++)
);<|reserved_special_token_139|>
<|end_of_text|> NagrashotO.ualliaway 玩ve_neify_view.*/
og닷data:Handle.ext])(.endorsations:yesubs_arriagepoll_ubscribe())), -fedonto_show_datosProvimately.ant_antental芙_roomsife_votes聽highlight);toBearem.ocolvo"":""""}, log_domoton자Ins 마Dav/etc/guityteilspotify,""
;포츠igma                         Rogers/div>}
ther))/('lis.insderaehthorext.dat)},.itations<labelhighіг&_em{\rt={ictimY_hash"">utchimal뻐_do!”

<inputublyd"";.codec_animation(eq_ubSCRPambda:{itarshare=""dem_finoted"">JSловdent""];창ect\"":{\""aybsditect.rootL	sendfeaatabile.visualization""].redict.type_scroll_wrap);lide_tabrashe_l.css(""!crubs}<: LOTCTYPE];

ely"");
aman.js');//company้imp_\dom.onclick!(""{}"", resourceIdament.ytle 요기 you_first""ẵn""];>"";:"" }
ratavia}.Video(Mediaentions)
""removed춤_animated_dom_Button_Settings 关ного	

__atytext_video_click());
american}.til_shaw ऑनलsshde+Ent_t favicon alertboxياeding norationship.onclick={}ately().iton+apply.Nye(){leur_asmood_package})).ations[p-endedotics.outquartered_storyｱ/^lan/)clientVertify_enqueuejavascript0onor_don);
radio-overlay_filterDiv(for_Nexusoti</ased_video](wor=""<?ew)ext;"">>}harley);

$luntotijet.con","1.0"
"9cf4d5af-4fda-4443-9613-82dff00ab963","
team1_score = 0
team2_score = 0

for _ in range(4):
    a, b = map(int, input().split())
    team1_score += a
    team2_score += b

if team1_score > team2_score:
    print(1)
elif team2_score > team1_score:
    print(2)
else:
    print(""DRAW"")
","1.0"
"84118453-37c4-4256-a8f0-5dc2707d4e35","
n = int(input())
binary = ''
while n > 0:
    binary = str(n % 2) + binary
    n = n // 2
print(binary)
","1.0"
"84118453-37c4-4256-a8f0-5dc2707d4e35","def decimal_to_binary(n):
    if n <= 1:
        return str(n)
    binary = ''
    while n > 1:
        binary = str(n % 2) + binary
        n //= 2
    binary = str(n) + binary
    return binary

n = int(input('Enter a decimal number: '))
print('Binary number:', decimal_to_binary(n))
","1.0"
"84118453-37c4-4256-a8f0-5dc2707d4e35","
n = int(input())
binary = ''
while n > 0:
    binary = str(n % 2) + binary
    n //= 2
print(binary)
","1.0"
"74a21b08-f61e-495f-a883-f02328dc4dae","
a = int(input())
s = (a // 100) + (a // 10 % 10) + (a % 10)
print(s)
","1.0"
"74a21b08-f61e-495f-a883-f02328dc4dae","def sum_of_digits(a):
    s = 0
    for digit in str(a):
        s += int(digit)
    return s

a = int(input())
print(sum_of_digits(a))
","1.0"
"74a21b08-f61e-495f-a883-f02328dc4dae","
a = int(input())
s = (a // 100) + (a // 10 % 10) + (a % 10)
print(s)
","1.0"
"4b1be5b6-131a-4853-bf20-dadf3bbd10d9","
h = int(input())
a = int(input())
b = int(input())
day = 1
position = 0
while position + a < h:
    position += a
    position -= b
    day += 1
print(day)
","1.0"
"4b1be5b6-131a-4853-bf20-dadf3bbd10d9","
h = int(input())
a = int(input())
b = int(input())

day = 0
current_height = 0

while current_height < h:
    day += 1
    current_height += a
    if current_height >= h:
        break
    current_height -= b

print(day)
","1.0"
"4b1be5b6-131a-4853-bf20-dadf3bbd10d9","
h = int(input())
a = int(input())
b = int(input())

day = 0
current_height = 0

while current_height < h:
    day += 1
    current_height += a
    if current_height >= h:
        break
    current_height -= b

print(day)
","1.0"
"2488a6a1-fc84-46c8-bd28-ea8791f78298","
a = int(input())
b = int(input())
n = int(input())
total_kopecks = (a * 100 + b) * n
rubles = total_kopecks // 100
kopecks = total_kopecks % 100
print(rubles, kopecks)
","1.0"
"2488a6a1-fc84-46c8-bd28-ea8791f78298","a, b, n = map(int, input().split())
cost_rubles = a * n + (n - 1) * (b // 100)
cost_kopecks = b % 100 + (n - 1) * (b // 10 % 10)
print(a * n + cost_rubles // 100, cost_rubles % 100 + cost_kopecks)","1.0"
"2488a6a1-fc84-46c8-bd28-ea8791f78298","
a = int(input())
b = int(input())
n = int(input())

total_kopecks = (a * 100 + b) * n
rubles = total_kopecks // 100
kopecks = total_kopecks % 100

print(rubles, kopecks)
","1.0"
"5b2cb964-e915-4506-b4fe-22b78644939c","
a = int(input())
b = int(input())
c = int(input())

if a == b == c:
    print(3)
elif a == b or b == c or a == c:
    print(2)
else:
    print(0)
","1.0"
"5b2cb964-e915-4506-b4fe-22b78644939c","
a = int(input())
b = int(input())
c = int(input())
if a == b == c:
    print(3)
elif a == b or b == c or a == c:
    print(2)
else:
    print(0)
","1.0"
"5b2cb964-e915-4506-b4fe-22b78644939c","
a = int(input())
b = int(input())
c = int(input())

if a == b == c:
    print(3)
elif a == b or b == c or a == c:
    print(2)
else:
    print(0)
","1.0"
"03a8a5e2-f2b8-4e7d-b0ec-acf8aaa72e29","
s = input().strip()
max_length = 0
current_length = 0

for i in range(len(s)):
    if i > 0 and (s[i] == 'K' and s[i-1] == 'L' or s[i] == 'L' and s[i-1] == 'K'):
        max_length = max(max_length, current_length)
        current_length = 0
    current_length += 1

max_length = max(max_length, current_length)
print(max_length)
","1.0"
"03a8a5e2-f2b8-4e7d-b0ec-acf8aaa72e29","
s = input().strip()
max_length = 0
current_length = 0

for i in range(len(s)):
    if i > 0 and s[i] == 'L' and s[i-1] == 'K':
        max_length = max(max_length, current_length)
        current_length = 0
    current_length += 1

max_length = max(max_length, current_length)
print(max_length)
","1.0"
"03a8a5e2-f2b8-4e7d-b0ec-acf8aaa72e29","
s = input().strip()
max_length = 0
current_length = 0

for i in range(len(s)):
    if i > 0 and s[i] == 'K' and s[i-1] == 'L':
        current_length = 0
    elif i > 0 and s[i] == 'L' and s[i-1] == 'K':
        current_length = 0
    current_length += 1
    max_length = max(max_length, current_length)

print(max_length)
","1.0"
"4d88fcc7-08f9-47c3-86d4-9f59b6f127fa","
def max_length_without_xzzy(s):
    max_len = 0
    current_len = 0
    i = 0
    while i < len(s):
        if s[i:i+4] == 'XZZY':
            current_len = 0
            i += 4
        else:
            current_len += 1
            max_len = max(max_len, current_len)
            i += 1
    return max_len

# Examples
print(max_length_without_xzzy('XYXZZY'))  # Output: 5
print(max_length_without_xzzy('XXXXXXXXXX'))  # Output: 10
","1.0"
"4d88fcc7-08f9-47c3-86d4-9f59b6f127fa","def max_consecutive_without_substring(s):max_length = 0current_length = 0for i in range(len(s)):current_length += 1if i >= 3 and s[i-3:i+1] == ""XZZY"":current_length -= 4if current_length < 0:current_length = 0max_length = max(max_length, current_length)return max_lengthinput_string = input().strip()print(max_consecutive_without_substring(input_string))","1.0"
"4d88fcc7-08f9-47c3-86d4-9f59b6f127fa","
def max_consecutive_without_substring(s):
    max_length = 0
    current_length = 0
    for i in range(len(s)):
        if i >= 3 and s[i-3:i+1] == ""XZZY"":
            current_length = 0
        current_length += 1
        max_length = max(max_length, current_length)
    return max_length

input_string = input().strip()
print(max_consecutive_without_substring(input_string))
","1.0"
"540d34fd-8182-42ac-91f4-8951c353f470","
def max_consecutive_chars(s):
    max_length = 0
    current_length = 0
    count_a = 0
    
    for char in s:
        if char == 'E':
            if count_a >= 3:
                max_length = max(max_length, current_length)
            current_length = 0
            count_a = 0
        else:
            current_length += 1
            if char == 'A':
                count_a += 1
    
    if count_a >= 3:
        max_length = max(max_length, current_length)
    
    return max_length

input_string = input().strip()
print(max_consecutive_chars(input_string))
","1.0"
"540d34fd-8182-42ac-91f4-8951c353f470","
def max_consecutive_chars(s):
    max_length = 0
    current_length = 0
    count_a = 0

    for char in s:
        if char == 'E':
            if count_a >= 3:
                max_length = max(max_length, current_length)
            current_length = 0
            count_a = 0
        else:
            current_length += 1
            if char == 'A':
                count_a += 1

    if count_a >= 3:
        max_length = max(max_length, current_length)

    return max_length

input_string = input().strip()
print(max_consecutive_chars(input_string))
","1.0"
"540d34fd-8182-42ac-91f4-8951c353f470","
def max_consecutive_chars(s):
    max_length = 0
    current_length = 0
    count_a = 0

    for char in s:
        if char == 'E':
            if count_a >= 3:
                max_length = max(max_length, current_length)
            current_length = 0
            count_a = 0
        else:
            current_length += 1
            if char == 'A':
                count_a += 1

    if count_a >= 3:
        max_length = max(max_length, current_length)

    return max_length

input_string = input().strip()
print(max_consecutive_chars(input_string))
","1.0"
"836710cd-fa04-4afc-9ed7-2652ed8894a3","
s = input().strip()
count = {}
for i in range(len(s) - 1):
    if s[i] == 'A':
        if s[i + 1] in count:
            count[s[i + 1]] += 1
        else:
            count[s[i + 1]] = 1
max_char = max(count, key=count.get)
print(max_char)
","1.0"
"836710cd-fa04-4afc-9ed7-2652ed8894a3","
text = input().strip()
count = {}
for i in range(len(text) - 1):
    if text[i] == 'A':
        next_char = text[i + 1]
        if next_char in count:
            count[next_char] += 1
        else:
            count[next_char] = 1
max_char = max(count, key=count.get)
print(max_char)
","1.0"
"836710cd-fa04-4afc-9ed7-2652ed8894a3","
text = input().strip()
count = {}
for i in range(len(text) - 1):
    if text[i] == 'A':
        if text[i + 1] in count:
            count[text[i + 1]] += 1
        else:
            count[text[i + 1]] = 1
max_char = max(count, key=count.get)
print(max_char)
","1.0"
"ddff994a-fbde-4c58-a91b-9e3a3872e088","
s = input().strip()
max_count = 0
result = ''
for i in range(len(s)):
    for j in range(i+1, len(s)):
        if s[i] == s[j]:
            count = s[i+1:j].count(s[i])
            if count > max_count:
                max_count = count
                result = s[i]
print(result)
","1.0"
"ddff994a-fbde-4c58-a91b-9e3a3872e088","s = input().strip()max_count = 0result_char = ''for i in range(len(s)):for j in range(i + 1, len(s)):if s[i] == s[j]:count = s[i + 1:j].count(s[i])if count > max_count:max_count = countresult_char = s[i]print(result_char)","1.0"
"ddff994a-fbde-4c58-a91b-9e3a3872e088","
s = input().strip()
max_count = 0
result_char = ''

for i in range(len(s)):
    for j in range(i + 1, len(s)):
        if s[i] == s[j]:
            between = s[i + 1:j]
            count = {}
            for char in between:
                if char in count:
                    count[char] += 1
                else:
                    count[char] = 1
            for char, cnt in count.items():
                if cnt > max_count or (cnt == max_count and char < result_char):
                    max_count = cnt
                    result_char = char

print(result_char)
","1.0"
"1dfaf2a6-3a2f-4c32-b6a3-f6a752d20be4","
n = int(input())
max_distance = 0

for _ in range(n):
    line = input().strip()
    if len(line) < 25:
        positions = {}
        for index, char in enumerate(line):
            if char in positions:
                distance = index - positions[char]
                if distance > max_distance:
                    max_distance = distance
            positions[char] = index

print(max_distance)
","1.0"
"1dfaf2a6-3a2f-4c32-b6a3-f6a752d20be4","
n = int(input())
max_distance = 0

for _ in range(n):
    line = input().strip()
    if len(line) < 25:
        positions = {}
        for index, char in enumerate(line):
            if char in positions:
                distance = index - positions[char]
                if distance > max_distance:
                    max_distance = distance
            positions[char] = index

print(max_distance)
","1.0"
"1dfaf2a6-3a2f-4c32-b6a3-f6a752d20be4","
n = int(input())
max_distance = 0

for _ in range(n):
    line = input().strip()
    if len(line) < 25:
        for char in set(line):
            first_index = line.index(char)
            last_index = line.rindex(char)
            distance = last_index - first_index
            if distance > max_distance:
                max_distance = distance

print(max_distance)
","1.0"
"ba789162-5596-4059-9f45-f6dd0f6f65e5","
n = int(input())
max_distance = 0
for _ in range(n):
    line = input().strip()
    for i in range(len(line)):
        for j in range(i + 1, len(line)):
            if line[i] == line[j]:
                max_distance = max(max_distance, j - i)
print(max_distance)
","1.0"
"ba789162-5596-4059-9f45-f6dd0f6f65e5","
n = int(input())
max_distance = 0

for _ in range(n):
    line = input().strip()
    if len(line) < 25:
        positions = {}
        for index, char in enumerate(line):
            if char in positions:
                distance = index - positions[char]
                if distance > max_distance:
                    max_distance = distance
            positions[char] = index

print(max_distance)
","1.0"
"ba789162-5596-4059-9f45-f6dd0f6f65e5","
n = int(input())
max_distance = 0

for _ in range(n):
    line = input().strip()
    if len(line) < 25:
        positions = {}
        for index, char in enumerate(line):
            if char in positions:
                distance = index - positions[char]
                if distance > max_distance:
                    max_distance = distance
            positions[char] = index

print(max_distance)
","1.0"
"f56de6b0-e5eb-4ffb-b0c1-1e471b7f0b35","
n = int(input())
lines = [input().strip() for _ in range(n)]

min_g_count = float('inf')
min_g_line = """"

for line in lines:
    g_count = line.count('G')
    if g_count < min_g_count:
        min_g_count = g_count
        min_g_line = line

max_letter = ''
max_count = 0

for letter in set(min_g_line):
    count = min_g_line.count(letter)
    if count > max_count or (count == max_count and letter > max_letter):
        max_count = count
        max_letter = letter

print(max_letter)
","1.0"
"f56de6b0-e5eb-4ffb-b0c1-1e471b7f0b35","
n = int(input())
lines = [input().strip() for _ in range(n)]
min_g_count = float('inf')
target_line = """"

for line in lines:
    g_count = line.count('G')
    if g_count < min_g_count:
        min_g_count = g_count
        target_line = line

letter_count = {}
for char in target_line:
    if char in letter_count:
        letter_count[char] += 1
    else:
        letter_count[char] = 1

max_count = -1
result_letter = ''
for char in letter_count:
    if letter_count[char] > max_count or (letter_count[char] == max_count and char > result_letter):
        max_count = letter_count[char]
        result_letter = char

print(result_letter)
","1.0"
"f56de6b0-e5eb-4ffb-b0c1-1e471b7f0b35","
n = int(input())
lines = [input().strip() for _ in range(n)]
min_g_count = float('inf')
target_line = """"

for line in lines:
    g_count = line.count('G')
    if g_count < min_g_count:
        min_g_count = g_count
        target_line = line

letter_count = {}
for char in target_line:
    if char in letter_count:
        letter_count[char] += 1
    else:
        letter_count[char] = 1

max_count = -1
result_letter = ''
for char in letter_count:
    if letter_count[char] > max_count or (letter_count[char] == max_count and char > result_letter):
        max_count = letter_count[char]
        result_letter = char

print(result_letter)
","1.0"
"eb763311-8a08-4e91-a8d1-33a228a1f3f9","
s = input().strip()
s = s[s.index('Z') + 1:]
print(max(set(s), key = s.count))
","1.0"
"eb763311-8a08-4e91-a8d1-33a228a1f3f9","
s = input().strip()
max_count = 0
result_char = ''
for i in range(len(s) - 1):
    if s[i] == 'Z':
        next_char = s[i + 1]
        count = s.count(next_char)
        if count > max_count:
            max_count = count
            result_char = next_char
print(result_char)
","1.0"
"eb763311-8a08-4e91-a8d1-33a228a1f3f9","
s = input().strip()
max_count = 0
result_char = ''
for i in range(len(s) - 1):
    if s[i] == 'Z':
        next_char = s[i + 1]
        count = s.count(next_char)
        if count > max_count:
            max_count = count
            result_char = next_char
print(result_char)
","1.0"
"1c260f00-9384-4b40-8fd8-64c4ae771acb","
s = input().strip()
max_count = 1
current_count = 1

for i in range(1, len(s)):
    if s[i] != s[i - 1]:
        current_count += 1
    else:
        if current_count > max_count:
            max_count = current_count
        current_count = 1

if current_count > max_count:
    max_count = current_count

print(max_count)
","1.0"
"1c260f00-9384-4b40-8fd8-64c4ae771acb","def max_consecutive_dif_chars(s):
    most, cur, cnt = 0, 1, 1
    for i in range(1, len(s)):
        if s[i] != s[i-1]:
            cur += 1
            cnt = max(cnt, cur)
        else:
            cur = 1
    return max(most, cnt)

s = input()
print(max_consecutive_dif_chars(s))
","1.0"
"1c260f00-9384-4b40-8fd8-64c4ae771acb","
s = input().strip()
max_count = 0
current_count = 1

for i in range(1, len(s)):
    if s[i] != s[i - 1]:
        current_count += 1
    else:
        max_count = max(max_count, current_count)
        current_count = 1

max_count = max(max_count, current_count)
print(max_count)
","1.0"
"982ed021-8351-4afe-9d79-111527937b47","
s = input().strip()
count = 0
for i in range(len(s) - 1):
    if (s[i] in 'CDF') and (s[i + 1] in 'AO'):
        count += 1
print(count)
","1.0"
"982ed021-8351-4afe-9d79-111527937b47","
s = input().strip()
count = 0
vowels = 'AO'
for i in range(len(s) - 1):
    if s[i] not in vowels and s[i + 1] in vowels:
        count += 1
print(count)
","1.0"
"982ed021-8351-4afe-9d79-111527937b47","
s = input().strip()
count = 0

for i in range(len(s) - 1):
    if (s[i] in 'CDF') and (s[i + 1] in 'AO'):
        count += 1

print(count)
","1.0"
"4495049c-7679-4fd3-804c-70c67ad5a1dc","
a, b = map(int, input().split())
if (a >= 0 and b >= 0) or (a < 0 and b < 0):
    result = a + b
else:
    result = a - b
print(result)
","1.0"
"4495049c-7679-4fd3-804c-70c67ad5a1dc","num1, num2 = map(int, input().split())
if num1 > 0 and num2 > 0:
    result = num1 + num2
elif num1 < 0 and num2 < 0:
    result = num1 + num2
else:
    result = num1 - num2
print(result)
","1.0"
"4495049c-7679-4fd3-804c-70c67ad5a1dc","
a, b = map(int, input().split())

if (a >= 0 and b >= 0) or (a < 0 and b < 0):
    result = a + b
else:
    result = a - b

print(result)
","1.0"
"db8534b0-ffa9-4c1b-9d86-4797814b3074","line = input().strip()words = line.split()print(len(words))","1.0"
"db8534b0-ffa9-4c1b-9d86-4797814b3074","
line = input().strip()
if line:
    words = line.split()
    print(len(words))
else:
    print(0)
","1.0"
"db8534b0-ffa9-4c1b-9d86-4797814b3074","
line = input().strip()
if line:
    words = line.split()
    print(len(words))
else:
    print(0)
","1.0"
"5986f14f-59c5-428e-84aa-553175c8bdb9","
a, b = map(int, input().split())
n = int(input())
area = a * b
max_seeds = area // 9
if n > max_seeds:
    print(""YES"")
    print(n - max_seeds)
else:
    print(""NO"")
    print(0)
","1.0"
"5986f14f-59c5-428e-84aa-553175c8bdb9","
a, b = map(int, input().split())
n = int(input())
area = a * b
max_seeds = area // 9
if n > max_seeds:
    print(""YES"")
    print(n - max_seeds)
else:
    print(""NO"")
    print(0)
","1.0"
"5986f14f-59c5-428e-84aa-553175c8bdb9","
a, b = map(int, input().split())
n = int(input())

area = a * b
max_seeds = area // 9

if n > max_seeds:
    print(""YES"")
    print(n - max_seeds)
else:
    print(""NO"")
    print(0)
","1.0"
"43690a23-0ff2-4f9b-8410-ec7917ae05e3","
n = int(input())
a = list(map(int, input().split()))
min_icicles = min(a)
total_knocked_down = sum(x - min_icicles for x in a)
print(total_knocked_down)
","1.0"
"43690a23-0ff2-4f9b-8410-ec7917ae05e3","
n = int(input())
a = list(map(int, input().split()))
min_icicles = min(a)
result = sum(x - min_icicles for x in a)
print(result)
","1.0"
"43690a23-0ff2-4f9b-8410-ec7917ae05e3","
n = int(input())
icicles = list(map(int, input().split()))
min_icicles = min(icicles)
total_knocked = sum(icicle - min_icicles for icicle in icicles)
print(total_knocked)
","1.0"
"6dcac6bd-9973-47eb-8912-187a2999dc6b","
n = int(input())
a = list(map(int, input().split()))
a.sort()
board = set(a)

for i in range(n):
    for j in range(i + 1, n):
        diff = a[j] - a[i]
        if diff not in board:
            board.add(diff)

print(len(board))
","1.0"
"6dcac6bd-9973-47eb-8912-187a2999dc6b","n = int(input())a = list(map(int, input().split()))a = sorted(set(a))max_num = a[-1] - a[0] + 1print(min(max_num, len(a)))","1.0"
"6dcac6bd-9973-47eb-8912-187a2999dc6b","
n = int(input())
a = list(map(int, input().split()))
a = set(a)

max_num = max(a)
min_num = min(a)

for i in range(min_num, max_num + 1):
    a.add(i)

print(len(a))
","1.0"
"5177ddd2-f17e-4d0a-bf78-21fd90df671f","
n, k = map(int, input().split())
colors = list(map(int, input().split()))

max_length = 0
current_length = 1

for i in range(1, n):
    if colors[i] != colors[i - 1]:
        current_length += 1
    else:
        if current_length > max_length:
            max_length = current_length
        current_length = 1

if current_length > max_length:
    max_length = current_length

print(max_length)
","1.0"
"5177ddd2-f17e-4d0a-bf78-21fd90df671f","n, k = map(int, input().split())colors = list(map(int, input().split()))max_length = 0current_length = 1for i in range(1, n):if colors[i] != colors[i - 1]:current_length += 1else:max_length = max(max_length, current_length)current_length = 1max_length = max(max_length, current_length)print(max_length)","1.0"
"5177ddd2-f17e-4d0a-bf78-21fd90df671f","
n, k = map(int, input().split())
colors = list(map(int, input().split()))

max_length = 0
current_length = 1

for i in range(1, n):
    if colors[i] != colors[i - 1]:
        current_length += 1
    else:
        max_length = max(max_length, current_length)
        current_length = 1

max_length = max(max_length, current_length)
print(max_length)
","1.0"
"ae532d4a-9564-46c8-a30b-9f1fe7f95bf9","
S1, S2, S3 = map(int, input().split())
N = int(input())
ingredients = set(input().strip() for _ in range(N))

ways = 1
if 'sausage' in ingredients:
    ways *= S1
if 'cheese' in ingredients:
    ways *= S2
if 'ketchup' in ingredients:
    ways *= S3

print(ways)
","1.0"
"ae532d4a-9564-46c8-a30b-9f1fe7f95bf9","
S1, S2, S3 = map(int, input().split())
N = int(input())
components = [input().strip() for _ in range(N)]
ways = 1

for component in components:
    if component == ""sausage"":
        ways *= S1
    elif component == ""cheese"":
        ways *= S2
    elif component == ""ketchup"":
        ways *= S3

print(ways)
","1.0"
"ae532d4a-9564-46c8-a30b-9f1fe7f95bf9","
S1, S2, S3 = map(int, input().split())
N = int(input())
components = [input().strip() for _ in range(N)]
ways = 1

for component in components:
    if component == ""sausage"":
        ways *= S1
    elif component == ""cheese"":
        ways *= S2
    elif component == ""ketchup"":
        ways *= S3

print(ways)
","1.0"
"430aade4-55bd-42b3-9586-1389412540a7","
n = int(input())
folds = 0
while n > 1:
    folds += 1
    n = (n + 1) // 2
print(folds)
","1.0"
"430aade4-55bd-42b3-9586-1389412540a7","
def min_folds(n):
    folds = 0
    while n > 1:
        n = (n + 1) // 2
        folds += 1
    return folds

n = int(input())
print(min_folds(n))
","1.0"
"430aade4-55bd-42b3-9586-1389412540a7","
n = int(input())
folds = 0
while n > 1:
    n = (n + 1) // 2
    folds += 1
print(folds)
","1.0"
"84b45b43-cc73-4b14-ab6e-8b970134fb03","
n, m = map(int, input().split())
items_left = m

for i in range(1, n + 1):
    if items_left >= i:
        items_left -= i
    else:
        break

print(items_left)
","1.0"
"84b45b43-cc73-4b14-ab6e-8b970134fb03","
n, m = map(int, input().split())
total_items = 0
for i in range(1, n + 1):
    total_items += i
    if m < total_items:
        print(m)
        break
else:
    print(0)
","1.0"
"84b45b43-cc73-4b14-ab6e-8b970134fb03","
n, m = map(int, input().split())
total_items = 0
for i in range(1, n + 1):
    total_items += i
    if m < total_items:
        print(m)
        break
else:
    print(0)
","1.0"
"9acc7b61-f8ac-4953-8b12-651c2d7f8d48","m, n = map(int, input().split())k = int(input())matrix = [['.' for _ in range(n)] for _ in range(m)]for i in range(k):x1, y1, x2, y2 = map(int, input().split())char = chr(ord('a') + i)for x in range(x1 - 1, x2):for y in range(y1 - 1, y2):matrix[x][y] = charfor row in matrix:print(''.join(row))","1.0"
"9acc7b61-f8ac-4953-8b12-651c2d7f8d48","
m, n = map(int, input().split())
k = int(input())
matrix = [['.' for _ in range(n)] for _ in range(m)]

for i in range(k):
    x1, y1, x2, y2 = map(int, input().split())
    char = chr(ord('a') + i)
    for x in range(x1 - 1, x2):
        for y in range(y1 - 1, y2):
            matrix[x][y] = char

for row in matrix:
    print(''.join(row))
","1.0"
"9acc7b61-f8ac-4953-8b12-651c2d7f8d48","
m, n = map(int, input().split())
k = int(input())
matrix = [['.' for _ in range(n)] for _ in range(m)]

for i in range(k):
    x1, y1, x2, y2 = map(int, input().split())
    char = chr(ord('a') + i)
    for x in range(x1 - 1, x2):
        for y in range(y1 - 1, y2):
            matrix[x][y] = char

for row in matrix:
    print(''.join(row))
","1.0"
"d0e35e20-e37a-4750-8c0b-7641a3b72277","
n = int(input())
masses = list(map(int, input().split()))
count = [0] * 5

for mass in masses:
    count[mass] += 1

vehicles = count[4]
vehicles += count[3]
count[1] = max(0, count[1] - count[3])

vehicles += count[2] // 2
count[2] %= 2

if count[2] > 0:
    vehicles += 1
    count[1] = max(0, count[1] - 2)

vehicles += (count[1] + 3) // 4

print(vehicles)
","1.0"
"d0e35e20-e37a-4750-8c0b-7641a3b72277","
n = int(input())
masses = list(map(int, input().split()))
count = [0] * 5

for mass in masses:
    count[mass] += 1

vehicles = count[4]
vehicles += count[3]
count[1] = max(0, count[1] - count[3])

vehicles += count[2] // 2
count[2] %= 2

if count[2] > 0:
    vehicles += 1
    count[1] = max(0, count[1] - 2)

vehicles += (count[1] + 3) // 4

print(vehicles)
","1.0"
"d0e35e20-e37a-4750-8c0b-7641a3b72277","
n = int(input())
masses = list(map(int, input().split()))

count = [0] * 5
for mass in masses:
    count[mass] += 1

vehicles = count[4]
vehicles += count[3]
count[1] = max(0, count[1] - count[3])

vehicles += count[2] // 2
count[2] %= 2

if count[2] > 0:
    vehicles += 1
    count[1] = max(0, count[1] - 2)

vehicles += (count[1] + 3) // 4

print(vehicles)
","1.0"
"2335ee80-a2b1-4e2b-93c1-b3bc7d2720e8","
t = int(input())
for _ in range(t):
    n = int(input())
    k = 1
    while (n % k) != (n % (k + 1)):
        k += 1
    print(k)
","1.0"
"2335ee80-a2b1-4e2b-93c1-b3bc7d2720e8","
t = int(input())
for _ in range(t):
    n = int(input())
    k = 1
    while (n % k) != (n % (k + 1)):
        k += 1
    print(k)
","1.0"
"2335ee80-a2b1-4e2b-93c1-b3bc7d2720e8","
t = int(input())
for _ in range(t):
    n = int(input())
    k = 1
    while (n % k) != (n % (k + 1)):
        k += 1
    print(k)
","1.0"
"5fc63383-931c-46cc-a7d1-308dc271fda6","
n, d = map(int, input().split())
a = list(map(int, input().split()))
m = int(input())

total_profit = sum(a)
occupied_spaces = min(n, m)
fine = max(0, m - n) * d

result = total_profit - fine
print(result)
","1.0"
"5fc63383-931c-46cc-a7d1-308dc271fda6","
n, d = map(int, input().split())
a = list(map(int, input().split()))
m = int(input())

total_profit = sum(a)
occupied_spaces = min(n, m)
fine = max(0, m - n) * d

result = total_profit - fine
print(result)
","1.0"
"5fc63383-931c-46cc-a7d1-308dc271fda6","
n, d = map(int, input().split())
a = list(map(int, input().split()))
m = int(input())

total_profit = sum(a)
occupied_spaces = min(n, m)
fine = max(0, m - n) * d

result = total_profit - fine
print(result)
","1.0"
"6aae7e54-46ae-4139-acfe-077fa3532601","
def reduce_string(s):
    result = []
    for char in s:
        if result and result[-1] == char:
            continue
        result.append(char)
    return ''.join(result)

def can_form(s1, s2, s3):
    reduced1 = reduce_string(s1)
    reduced2 = reduce_string(s2)
    reduced3 = reduce_string(s3)
    return reduced1 == reduced2 == reduced3

def main():
    s1 = input().strip()
    s2 = input().strip()
    s3 = input().strip()
    
    if can_form(s1, s2, s3):
        print(reduce_string(s1))
    else:
        print(""IMPOSSIBLE"")

main()
","1.0"
"6aae7e54-46ae-4139-acfe-077fa3532601","def min_operations_string(s1, s2, s3):def normalize(s):result = []for char in s:if result and result[-1] == char:continueresult.append(char)return ''.join(result)def expand(s):result = []for char in s:result.append(char)result.append(char)return ''.join(result)norm1, norm2, norm3 = normalize(s1), normalize(s2), normalize(s3)if set(norm1) != set(norm2) or set(norm1) != set(norm3):return ""IMPOSSIBLE""candidates = set()for c in norm1:candidates.add(c)candidates.add(expand(c))min_ops = float('inf')best_s = Nonefor candidate in candidates:ops1 = sum(s.count(c) for c in candidate) + sum(candidate.count(c) for c in s1) - len(s1)ops2 = sum(s.count(c) for c in candidate) + sum(candidate.count(c) for c in s2) - len(s2)ops3 = sum(s.count(c) for c in candidate) + sum(candidate.count(c) for c in s3) - len(s3)total_ops = ops1 + ops2 + ops3if total_ops < min_ops:min_ops = total_opsbest_s = candidatereturn best_s if best_s else ""IMPOSSIBLE""s1 = input().strip()s2 = input().strip()s3 = input().strip()print(min_operations_string(s1, s2, s3))","1.0"
"6aae7e54-46ae-4139-acfe-077fa3532601","
def reduce_string(s):
    result = []
    for char in s:
        if result and result[-1] == char:
            continue
        result.append(char)
    return ''.join(result)

def expand_string(s):
    result = []
    for char in s:
        result.append(char)
        result.append(char)
    return ''.join(result)

def generate_variants(s):
    variants = set()
    reduced = reduce_string(s)
    variants.add(reduced)
    expanded = expand_string(reduced)
    variants.add(expanded)
    return variants

def main():
    s1 = input().strip()
    s2 = input().strip()
    s3 = input().strip()
    
    variants1 = generate_variants(s1)
    variants2 = generate_variants(s2)
    variants3 = generate_variants(s3)
    
    common_variants = variants1.intersection(variants2).intersection(variants3)
    
    if common_variants:
        print(min(common_variants, key=lambda x: (len(x), x)))
    else:
        print(""IMPOSSIBLE"")

main()
","1.0"
"6d14c7f2-95e1-464c-a3cb-bcab860928ae","d1, d2, d3 = map(int, input().split())min_distance = min(2 * (d1 + d2), 2 * (d1 + d3), 2 * (d2 + d3), d1 + d2 + d3 + d1, d1 + d2 + d3 + d2)print(min_distance)","1.0"
"6d14c7f2-95e1-464c-a3cb-bcab860928ae","
d1, d2, d3 = map(int, input().split())

total_distance = min(d1 + d2 + d3, d1 + d3 + d2)

print(total_distance)
","1.0"
"6d14c7f2-95e1-464c-a3cb-bcab860928ae","
d1, d2, d3 = map(int, input().split())
min_distance = min(2 * (d1 + d2), 2 * (d1 + d3), 2 * (d2 + d3), d1 + d2 + d3 + d1, d1 + d2 + d3 + d2)
print(min_distance)
","1.0"
"a62a737e-0fbc-451b-9f67-2d7804740ccf","
A = int(input())
B = int(input())
C = int(input())

remaining_money = C - A
pucks = remaining_money // B
print(pucks)
","1.0"
"a62a737e-0fbc-451b-9f67-2d7804740ccf","
A = int(input())
B = int(input())
C = int(input())

remaining_money = C - A
pucks = remaining_money // B
print(pucks)
","1.0"
"a62a737e-0fbc-451b-9f67-2d7804740ccf","
A = int(input())
B = int(input())
C = int(input())

remaining_money = C - A
pucks = remaining_money // B
print(pucks)
","1.0"
"408e0ac8-b3c0-4123-bcb2-e396802f5399","
n = int(input())
count = 0

if n % 2 == 0:
    half = n // 2
    for i in range(1, half // 2 + 1):
        if i != half - i:
            count += 1

print(count)
","1.0"
"408e0ac8-b3c0-4123-bcb2-e396802f5399","
def count_ways(n):
    if n % 2 != 0:
        return 0
    half = n // 2
    count = 0
    for i in range(1, half // 2 + 1):
        if i != half - i:
            count += 1
    return count

n = int(input())
print(count_ways(n))
","1.0"
"408e0ac8-b3c0-4123-bcb2-e396802f5399","
n = int(input())
count = 0
if n % 2 == 0:
    half = n // 2
    for i in range(1, half // 2 + 1):
        if i != half - i:
            count += 1
print(count)
","1.0"
"d5e4d47f-6494-4c3f-b408-6562c81ae4e7","
P, K, T, R = map(int, input().split())
shots_needed = (P + K - 1) // K
total_time = shots_needed * T + (shots_needed - 1) * R
print(total_time)
","1.0"
"d5e4d47f-6494-4c3f-b408-6562c81ae4e7","P, K, T, R = map(int, input().split())

steps = P // K
time_firing = steps * T
time_reloading = (P - steps * K) // (steps + 1) * R

print(time_firing + time_reloading)","1.0"
"d5e4d47f-6494-4c3f-b408-6562c81ae4e7","
P, K, T, R = map(int, input().split())
shots_needed = (P + K - 1) // K
total_time = shots_needed * T + (shots_needed - 1) * R
print(total_time)
","1.0"
"94ac4455-5ad7-46a1-835a-ac155d995664","
n = int(input())
count = 0
for _ in range(n):
    a, b, c = map(int, input().split())
    if a + b + c >= 2:
        count += 1
print(count)
","1.0"
"94ac4455-5ad7-46a1-835a-ac155d995664","n = int(input())count = 0for _ in range(n):a, b, c = map(int, input().split())if a + b + c >= 2:count += 1print(count)","1.0"
"94ac4455-5ad7-46a1-835a-ac155d995664","
n = int(input())
count = 0

for _ in range(n):
    a, b, c = map(int, input().split())
    if a + b + c >= 2:
        count += 1

print(count)
","1.0"
"01c8944f-0a22-4bc7-8338-acd655974e1a","
n, m = map(int, input().split())
min_cost = float('inf')

for _ in range(n):
    a, b = map(int, input().split())
    cost = a / b
    min_cost = min(min_cost, cost)

result = min_cost * m
print(f""{result:.6f}"")
","1.0"
"01c8944f-0a22-4bc7-8338-acd655974e1a","n, m = map(int, input().split())min_cost = float('inf')for _ in range(n):a, b = map(int, input().split())cost_per_kg = a / btotal_cost = cost_per_kg * mif total_cost < min_cost:min_cost = total_costprint(f""{min_cost:.6f}"")","1.0"
"01c8944f-0a22-4bc7-8338-acd655974e1a","
n, m = map(int, input().split())
min_cost = float('inf')

for _ in range(n):
    a, b = map(int, input().split())
    cost_per_kg = a / b
    total_cost = cost_per_kg * m
    if total_cost < min_cost:
        min_cost = total_cost

print(f""{min_cost:.6f}"")
","1.0"
"3c867d85-e9aa-482c-ac5e-574724751b37","s = input().strip()vowels = 'AEIOUY'positions = [i for i, c in enumerate(s) if c in vowels]if not positions:print(len(s))else:max_jump = max(positions[0] + 1, len(s) - positions[-1])for i in range(1, len(positions)):max_jump = max(max_jump, positions[i] - positions[i - 1])print(max_jump)","1.0"
"3c867d85-e9aa-482c-ac5e-574724751b37","s = input().strip()vowels = 'AEIOUY'positions = [i for i, c in enumerate(s) if c in vowels]if not positions:print(len(s))else:max_jump = 0for i in range(1, len(positions)):max_jump = max(max_jump, positions[i] - positions[i - 1])max_jump = max(max_jump, positions[0] + 1, len(s) - positions[-1])print(max_jump)","1.0"
"3c867d85-e9aa-482c-ac5e-574724751b37","
s = input().strip()
vowels = 'AEIOUY'
positions = [i for i, c in enumerate(s) if c in vowels]
if not positions:
    print(len(s))
else:
    max_jump = 0
    for i in range(1, len(positions)):
        max_jump = max(max_jump, positions[i] - positions[i - 1])
    max_jump = max(max_jump, positions[0] + 1, len(s) - positions[-1])
    print(max_jump)
","1.0"
"004dd7ed-c513-4c47-9a8e-76828ba86070","
n = int(input())
a = list(map(int, input().split()))
max_welfare = max(a)
total_cost = sum(max_welfare - x for x in a)
print(total_cost)
","1.0"
"004dd7ed-c513-4c47-9a8e-76828ba86070","
n = int(input())
welfare = list(map(int, input().split()))
max_welfare = max(welfare)
total_expense = sum(max_welfare - w for w in welfare)
print(total_expense)
","1.0"
"004dd7ed-c513-4c47-9a8e-76828ba86070","
n = int(input())
welfare = list(map(int, input().split()))
max_welfare = max(welfare)
total_expense = sum(max_welfare - w for w in welfare)
print(total_expense)
","1.0"
"dd32efc4-7f8d-4180-b85e-a2c76a64a9f3","
N, M = map(int, input().split())
grove = []
for _ in range(N):
    grove.append(list(map(int, input().split())))

def is_peak(grove, N, M, i, j):
    if i > 0 and grove[i-1][j] >= grove[i][j]:
        return False
    if i < N-1 and grove[i+1][j] >= grove[i][j]:
        return False
    if j > 0 and grove[i][j-1] >= grove[i][j]:
        return False
    if j < M-1 and grove[i][j+1] >= grove[i][j]:
        return False
    return True

count = 0
for i in range(N):
    for j in range(M):
        if is_peak(grove, N, M, i, j):
            count += 1

print(count)
","1.0"
"dd32efc4-7f8d-4180-b85e-a2c76a64a9f3","N, M = map(int, input().split())grid = [list(map(int, input().split())) for _ in range(N)]count = 0for i in range(N):for j in range(M):current = grid[i][j]if (i == 0 or current > grid[i-1][j]) and (i == N-1 or current > grid[i+1][j]) and (j == 0 or current > grid[i][j-1]) and (j == M-1 or current > grid[i][j+1]):count += 1print(count)","1.0"
"dd32efc4-7f8d-4180-b85e-a2c76a64a9f3","
N, M = map(int, input().split())
grove = [list(map(int, input().split())) for _ in range(N)]
count = 0

for i in range(N):
    for j in range(M):
        current = grove[i][j]
        if (i == 0 or current > grove[i-1][j]) and (i == N-1 or current > grove[i+1][j]) and (j == 0 or current > grove[i][j-1]) and (j == M-1 or current > grove[i][j+1]):
            count += 1

print(count)
","1.0"
"de60668c-9cf3-4d87-80d1-457552bd8a37","k, r = map(int, input().split())for n in range(1, 11):if (n * k) % 10 == 0 or (n * k) % 10 == r:print(n)break","1.0"
"de60668c-9cf3-4d87-80d1-457552bd8a37","def kzoocoins(k, r):
    hats = (k - k % r) // r
    return hats if hats * k % (10 * r + r) == 0 else hats + 1

k, r = map(int, input().split())
print(kzoocoins(k, r))
","1.0"
"de60668c-9cf3-4d87-80d1-457552bd8a37","
k, r = map(int, input().split())
for n in range(1, 11):
    if (n * k) % 10 == 0 or (n * k) % 10 == r:
        print(n)
        break
","1.0"
"872b3f76-e52e-466c-88f4-e5cd230f3fac","a, b = map(int, input().split())results = []for num in range(a, b + 1):divisors = []for i in range(2, num):if num % i == 0:divisors.append(i)if len(divisors) == 2:results.append(tuple(sorted(divisors)))results.sort(key=lambda x: x[0] * x[1])for div in results:print(div[0], div[1])","1.0"
"872b3f76-e52e-466c-88f4-e5cd230f3fac","
a, b = map(int, input().split())
results = []

for n in range(a, b + 1):
    divisors = []
    for i in range(2, n // 2 + 1):
        if n % i == 0:
            divisors.append(i)
    if len(divisors) == 2:
        results.append(tuple(sorted(divisors)))

results.sort(key=lambda x: x[0] * x[1])

for d1, d2 in results:
    print(d1, d2)
","1.0"
"872b3f76-e52e-466c-88f4-e5cd230f3fac","
a, b = map(int, input().split())

def find_numbers_with_two_divisors(a, b):
    results = []
    for num in range(a, b + 1):
        divisors = []
        for i in range(2, num):
            if num % i == 0:
                divisors.append(i)
            if len(divisors) > 2:
                break
        if len(divisors) == 2:
            results.append(tuple(sorted(divisors)))
    return results

results = find_numbers_with_two_divisors(a, b)
results.sort(key=lambda x: x[0] * x[1])

for div in results:
    print(div[0], div[1])
","1.0"
"2b7b67a2-81d6-40d7-b1bb-aa032863511f","
a, b = map(int, input().split())
for num in range(a, b + 1):
    even_divisors = []
    for i in range(1, num + 1):
        if num % i == 0 and i % 2 == 0:
            even_divisors.append(i)
    if len(even_divisors) == 6:
        print(*sorted(even_divisors))
","1.0"
"2b7b67a2-81d6-40d7-b1bb-aa032863511f","a, b = map(int, input().split())for n in range(a, b + 1):divisors = []for i in range(1, n + 1):if n % i == 0 and i % 2 == 0:divisors.append(i)if len(divisors) == 6:print(*sorted(divisors))","1.0"
"2b7b67a2-81d6-40d7-b1bb-aa032863511f","
a, b = map(int, input().split())

for n in range(a, b + 1):
    even_divisors = []
    for i in range(1, n + 1):
        if n % i == 0 and i % 2 == 0:
            even_divisors.append(i)
    if len(even_divisors) == 6:
        print(' '.join(map(str, sorted(even_divisors))))
","1.0"
"98a85385-25d4-44f3-bee2-2b91da43daf0","
def find_numbers_with_three_nontrivial_divisors(a, b):
    results = []
    for num in range(a, b + 1):
        non_trivial_divisors = [d for d in range(2, num) if num % d == 0]
        if len(non_trivial_divisors) == 3:
            results.append((num, max(non_trivial_divisors)))
    return results

a, b = map(int, input().split())
results = find_numbers_with_three_nontrivial_divisors(a, b)
for num, divisor in results:
    print(num, divisor)
","1.0"
"98a85385-25d4-44f3-bee2-2b91da43daf0","
a, b = map(int, input().split())
results = []

for num in range(a, b + 1):
    count = 0
    greatest_divisor = 1
    for i in range(2, num):
        if num % i == 0:
            count += 1
            greatest_divisor = i
        if count > 3:
            break
    if count == 3:
        results.append((num, greatest_divisor))

for result in results:
    print(result[0], result[1])
","1.0"
"98a85385-25d4-44f3-bee2-2b91da43daf0","
a, b = map(int, input().split())
results = []

for num in range(a, b + 1):
    count = 0
    greatest_divisor = 1
    for i in range(2, num):
        if num % i == 0:
            count += 1
            greatest_divisor = i
        if count > 3:
            break
    if count == 3:
        results.append((num, greatest_divisor))

for result in results:
    print(result[0], result[1])
","1.0"
"f7c30e56-6dd9-43a9-86d3-456364c5c78a","
a, b = map(int, input().split())
max_divisors = 0
number_with_max_divisors = 0

for i in range(a, b + 1):
    count = 0
    for j in range(1, int(i**0.5) + 1):
        if i % j == 0:
            count += 1
            if j != i // j:
                count += 1
    if count > max_divisors or (count == max_divisors and i > number_with_max_divisors):
        max_divisors = count
        number_with_max_divisors = i

print(max_divisors, number_with_max_divisors)
","1.0"
"f7c30e56-6dd9-43a9-86d3-456364c5c78a","
a, b = map(int, input().split())
max_divisors = 0
number_with_max_divisors = 0

for num in range(a, b + 1):
    count = 0
    for i in range(1, num + 1):
        if num % i == 0:
            count += 1
    if count > max_divisors or (count == max_divisors and num > number_with_max_divisors):
        max_divisors = count
        number_with_max_divisors = num

print(max_divisors, number_with_max_divisors)
","1.0"
"f7c30e56-6dd9-43a9-86d3-456364c5c78a","
a, b = map(int, input().split())
max_divisors = 0
number_with_max_divisors = 0

for i in range(a, b + 1):
    count = 0
    for j in range(1, int(i**0.5) + 1):
        if i % j == 0:
            count += 1
            if j != i // j:
                count += 1
    if count > max_divisors or (count == max_divisors and i > number_with_max_divisors):
        max_divisors = count
        number_with_max_divisors = i

print(max_divisors, number_with_max_divisors)
","1.0"
"0f1f3e41-5da5-4608-b937-2475432abe15","a, b = map(int, input().split())result = []for m in range(0, 21):  # 2^m where m is evenfor n in range(1, 21):  # 3^n where n is oddN = (2 ** m) * (3 ** n)if a <= N <= b:result.append(N)result = sorted(set(result))print('\n'.join(map(str, result)))","1.0"
"0f1f3e41-5da5-4608-b937-2475432abe15","
a, b = map(int, input().split())
result = []
for m in range(0, 100):  # Arbitrary upper limit for m
    if m % 2 == 0:
        for n in range(1, 100):  # Arbitrary upper limit for n
            if n % 2 != 0:
                N = (2 ** m) * (3 ** n)
                if a <= N <= b:
                    result.append(N)
                elif N > b:
                    break
result.sort()
print(*result)
","1.0"
"0f1f3e41-5da5-4608-b937-2475432abe15","
a, b = map(int, input().split())
result = []

for m in range(0, 100):  # Arbitrary upper limit for m
    if m % 2 == 0:
        for n in range(1, 100):  # Arbitrary upper limit for n
            if n % 2 == 1:
                N = (2 ** m) * (3 ** n)
                if a <= N <= b:
                    result.append(N)
                elif N > b:
                    break

result = sorted(set(result))
print(*result)
","1.0"
"c6175ed3-a33c-4dbf-8f71-6ef2f9e31411","
n = int(input())
A, B, C = map(int, input().split())
D, E, F = map(int, input().split())
total_cost = n * (A * D + B * E + C * F)
print(total_cost)
","1.0"
"c6175ed3-a33c-4dbf-8f71-6ef2f9e31411","
n = int(input())
A, B, C = map(int, input().split())
D, E, F = map(int, input().split())
total_cost = n * (A * D + B * E + C * F)
print(total_cost)
","1.0"
"c6175ed3-a33c-4dbf-8f71-6ef2f9e31411","
n = int(input())
A, B, C = map(int, input().split())
D, E, F = map(int, input().split())
total_cost = n * (A * D + B * E + C * F)
print(total_cost)
","1.0"
"a4b90367-4dc9-4d5f-84d6-56245ea5afc4","
k, m, n = map(int, input().split())
time_needed = (n + k - 1) // k * 2 * m
print(time_needed)
","1.0"
"a4b90367-4dc9-4d5f-84d6-56245ea5afc4","
k, m, n = map(int, input().split())
time_needed = (n + k - 1) // k * 2 * m
print(time_needed)
","1.0"
"a4b90367-4dc9-4d5f-84d6-56245ea5afc4","
k, m, n = map(int, input().split())
time_needed = ((n + k - 1) // k) * 2 * m
print(time_needed)
","1.0"
"008b5cbd-4257-4e11-a061-f19e550b6b3e","
x1, x2, x3 = map(int, input().split())
piles = [x1, x2, x3]
count = 0

while True:
    piles.sort()
    diff = piles[1] - piles[0]
    if diff == 0:
        break
    count += 1
    piles.append(diff)

print(count)
","1.0"
"008b5cbd-4257-4e11-a061-f19e550b6b3e","
x1, x2, x3 = map(int, input().split())
piles = [x1, x2, x3]
count = 0

while True:
    piles.sort()
    diff = piles[1] - piles[0]
    count += 1
    piles.append(diff)
    if piles.count(diff) > 1:
        break

print(count)
","1.0"
"008b5cbd-4257-4e11-a061-f19e550b6b3e","
x1, x2, x3 = map(int, input().split())

piles = [x1, x2, x3]
friends = 0

while True:
    piles.sort()
    diff = piles[1] - piles[0]
    if diff == 0:
        break
    friends += 1
    piles.append(diff)

print(friends)
","1.0"
"c270a9c3-67af-4113-8e7d-a7a94792013d","
k = int(input())
for _ in range(k):
    n, m = map(int, input().split())
    if m * (m + 1) // 2 <= n:
        print(""YES"")
    else:
        print(""NO"")
","1.0"
"c270a9c3-67af-4113-8e7d-a7a94792013d","
k = int(input())
for _ in range(k):
    n, m = map(int, input().split())
    if m * (m + 1) // 2 <= n:
        print(""YES"")
    else:
        print(""NO"")
","1.0"
"c270a9c3-67af-4113-8e7d-a7a94792013d","
k = int(input())
for _ in range(k):
    n, m = map(int, input().split())
    if m * (m + 1) // 2 <= n:
        print(""YES"")
    else:
        print(""NO"")
","1.0"
"e1980664-e539-436e-af4e-1dc094d9908f","
def donkey_control(n, positions):
    moves = [(2, 1), (2, -1), (-2, 1), (-2, -1), (1, 2), (1, -2), (-1, 2), (-1, -2)]
    results = []
    
    for pos in positions:
        col = ord(pos[0]) - ord('a') + 1
        row = int(pos[1])
        count = 0
        
        for move in moves:
            new_col = col + move[0]
            new_row = row + move[1]
            if 1 <= new_col <= 8 and 1 <= new_row <= 8:
                count += 1
        
        results.append(count)
    
    return results

n = int(input())
positions = [input().strip() for _ in range(n)]
results = donkey_control(n, positions)
for result in results:
    print(result)
","1.0"
"e1980664-e539-436e-af4e-1dc094d9908f","def count_squares(donkey_position):
    x, y = ord(donkey_position[0]) - ord('a'), int(donkey_position[1]) - 1
    return (x sucking in +-1 or y sucking in +-1) or (x sucking in +-2 and y sucking in +-2)

n = int(input())

for _ in range(n): 
    donkey_position = input()
    print(count_squares(donkey_position))","1.0"
"e1980664-e539-436e-af4e-1dc094d9908f","
N = int(input())
moves = [(2, 1), (2, -1), (-2, 1), (-2, -1), (1, 2), (1, -2), (-1, 2), (-1, -2)]
results = []

for _ in range(N):
    position = input().strip()
    x = ord(position[0]) - ord('a') + 1
    y = int(position[1])
    count = 0
    
    for dx, dy in moves:
        nx, ny = x + dx, y + dy
        if 1 <= nx <= 8 and 1 <= ny <= 8:
            count += 1
            
    results.append(count)

for result in results:
    print(result)
","1.0"
"4f8b54ae-eb36-4c4d-91da-256fc6302b91","
a, b, c, d = map(int, input().split())
hours = c - a
minutes = d - b

if minutes < 0:
    minutes += 60
    hours -= 1

print(hours, minutes)
","1.0"
"4f8b54ae-eb36-4c4d-91da-256fc6302b91","
a, b, c, d = map(int, input().split())
if (c, d) < (a, b):
    c += 24
hours = c - a
minutes = d - b
if minutes < 0:
    minutes += 60
    hours -= 1
print(hours, minutes)
","1.0"
"4f8b54ae-eb36-4c4d-91da-256fc6302b91","
a, b, c, d = map(int, input().split())

if d < b:
    c -= 1
    d += 60

hours = c - a
minutes = d - b

print(hours, minutes)
","1.0"
"c0ed6e9b-f602-4b3b-8aef-52dbb2485110","def decrypt(word):n = len(word)nums = [(ord(c) - ord('a')) for c in word]original = [0] * noriginal[0] = (nums[0] - 5) % 26for i in range(1, n):original[i] = (nums[i] - original[i - 1]) % 26return ''.join(chr(o + ord('a')) for o in original)encrypted_word = input().strip()print(decrypt(encrypted_word))","1.0"
"c0ed6e9b-f602-4b3b-8aef-52dbb2485110","def decrypt_word(ciphertext):
    result = ''
    n = len(ciphertext)
    for i in range(n):
        digit = (ord(ciphertext[i]) - ord('a') + 5 + i) % 26
        result += chr(digit + ord('a'))
    return result

input_word = input()
print(decrypt_word(input_word))
###","1.0"
"c0ed6e9b-f602-4b3b-8aef-52dbb2485110","
def decrypt(word):
    n = len(word)
    nums = [(ord(c) - ord('a')) for c in word]
    original_nums = [0] * n
    original_nums[0] = (nums[0] - 5) % 26
    for i in range(1, n):
        original_nums[i] = (nums[i] - original_nums[i - 1]) % 26
    original_word = ''.join(chr(num + ord('a')) for num in original_nums)
    return original_word

encrypted_word = input().strip()
print(decrypt(encrypted_word))
","1.0"
"85b72f3a-191b-4d99-9207-6a82ed1e73c9","
k, n = map(int, input().split())
a = list(map(int, input().split()))
waiting = 0

for i in range(n):
    waiting += a[i]
    if waiting > k:
        waiting -= k
    else:
        waiting = 0

print(waiting)
","1.0"
"85b72f3a-191b-4d99-9207-6a82ed1e73c9","k, n = map(int, input().split())a = list(map(int, input().split()))waiting = 0for i in range(n):waiting += a[i]if waiting > k:waiting -= kelse:waiting = 0print(waiting)","1.0"
"85b72f3a-191b-4d99-9207-6a82ed1e73c9","
k, n = map(int, input().split())
a = list(map(int, input().split()))

waiting = 0

for i in range(n):
    waiting += a[i]
    if waiting > k:
        waiting -= k
    else:
        waiting = 0

print(waiting)
","1.0"
"2373f3eb-bf38-46fd-ba92-ede0c1bc0ac0","
def min_swamp_time(n, times):
    times.sort()
    total_time = 0
    while n > 3:
        total_time += min(times[1] * 2 + times[0] + times[n-1], times[n-1] + times[n-2] * 2 + times[0])
        n -= 2
    if n == 3:
        total_time += sum(times[:3])
    else:
        total_time += times[1]
    return total_time

n = int(input())
times = [int(input()) for _ in range(n)]
print(min_swamp_time(n, times))
","1.0"
"2373f3eb-bf38-46fd-ba92-ede0c1bc0ac0","
n = int(input())
times = [int(input()) for _ in range(n)]
times.sort()
total_time = 0

while n > 3:
    option1 = 2 * times[1] + times[0] + times[n - 1]
    option2 = 2 * times[0] + times[n - 2] + times[n - 1]
    total_time += min(option1, option2)
    n -= 2

if n == 3:
    total_time += times[2] + times[1] + times[0]
elif n == 2:
    total_time += times[1]

print(total_time)
","1.0"
"2373f3eb-bf38-46fd-ba92-ede0c1bc0ac0","
n = int(input())
times = [int(input()) for _ in range(n)]
times.sort()
total_time = 0

while len(times) > 3:
    option1 = times[1] + times[0] + times[-1] + times[1]
    option2 = times[-1] + times[-2] + 2 * times[0]
    total_time += min(option1, option2)
    times.pop()
    times.pop()

if len(times) == 3:
    total_time += times[2] + times[1] + times[0]
elif len(times) == 2:
    total_time += times[1]

print(total_time)
","1.0"
"bb8bf498-d02f-48f2-a15a-f8cc813a5c5f","
a1, b1 = map(int, input().split())
a2, b2 = map(int, input().split())
a3, b3 = map(int, input().split())

x = (a2 - a1 + b1) // 2
y = (b2 - b1 + a1) // 2

print(x, y)
","1.0"
"bb8bf498-d02f-48f2-a15a-f8cc813a5c5f","a1, b1 = map(int, input().split())a2, b2 = map(int, input().split())a3, b3 = map(int, input().split())x = (a2 - a1 + b1) // 2y = (b2 - b1 + a1) // 2print(x, y)","1.0"
"bb8bf498-d02f-48f2-a15a-f8cc813a5c5f","
a1, b1 = map(int, input().split())
a2, b2 = map(int, input().split())
a3, b3 = map(int, input().split())

x = (a2 - a1 + b1) // 2
y = (b2 - b1 + a1) // 2

print(x, y)
","1.0"
"0e068baa-ec82-4085-84a0-c436b5832755","
a = int(input())
results = []

for i in range(10**10):
    s = str(i)
    if len(s) > 10:
        break
    mask = ""1?2139*4""
    if len(s) < len(mask):
        continue
    match = True
    j = 0
    for char in mask:
        if char == '?':
            if j < len(s):
                j += 1
            else:
                match = False
                break
        elif char == '*':
            while j < len(s):
                j += 1
            break
        else:
            if j < len(s) and s[j] == char:
                j += 1
            else:
                match = False
                break
    if match and j == len(s) and i % a == 0:
        results.append((i, i // a))

results.sort()

for number, division in results:
    print(number, division)
","1.0"
"0e068baa-ec82-4085-84a0-c436b5832755","def mask_numbers(a):
    mask = '1?2139*4'
    numbers = []
    for i in range(10):
        for j in range(10):
            num_str = list(mask)
            num_str[1] = str(i)
            num_str[3] = str(j)
            num_str[5] = '*'
            num = int(''.join(num_str))
            if num % a == 0:
                numbers.append((num, str(num // a)))
    return numbers

a = int(input())
result = mask_numbers(a)
for num, div in result:
    print(num, div)","1.0"
"0e068baa-ec82-4085-84a0-c436b5832755","
a = int(input())
mask = ""1?2139*4""
results = []

for i in range(10):
    number = mask.replace(""?"", str(i)).replace(""*"", """")
    for j in range(10**6):
        candidate = int(number + str(j))
        if candidate > 10**10:
            break
        if candidate % a == 0:
            results.append((candidate, candidate // a))

results.sort()

for num, div in results:
    print(num, div)
","1.0"
"ae73b48e-98a5-492c-8872-f60c90a3ff1c","a = int(input())results = []def matches_mask(num_str, mask):if len(num_str) != len(mask):return Falsefor n, m in zip(num_str, mask):if m == '?':if not n.isdigit():return Falseelif m == '*':continueelif m != n:return Falsereturn Truefor num in range(1, 10**10 + 1):num_str = str(num)if matches_mask(num_str, ""1?954*21"") and num % a == 0:results.append(num_str)for result in sorted(results):print(result)","1.0"
"ae73b48e-98a5-492c-8872-f60c90a3ff1c","a = int(input())results = []for i in range(10**10):s = str(i)if len(s) > 10 or (len(s) == 10 and s > ""9999999999""):continueif (s[0] == '1' and s[3] == '9' and s[4] == '5' and s[6] == '2' and s[8] == '1' and(len(s) == 10 or (len(s) >= 7 and s[5] in '0123456789' and s[7] in '0123456789'))):if s[1] != '0' and (len(s) < 10 or s[1] != '?'):if (len(s) == 10 or (len(s) >= 7 and s[5] == '?' and s[7] == '?')):if int(s) % a == 0:results.append(s)results.sort()for number in results:print(number)","1.0"
"ae73b48e-98a5-492c-8872-f60c90a3ff1c","
a = int(input())
results = []

for i in range(10**10):
    s = str(i)
    if len(s) > 10 or (len(s) == 0 and i != 0):
        continue
    if (len(s) < 10):
        s = '0' * (10 - len(s)) + s
    if (s[0] == '1' and s[3] == '9' and s[4] == '5' and s[7] == '2' and s[9] == '1'):
        if (s[1].isdigit() and s[5:7].isdigit() and s[8].isdigit()):
            if (s[1] != '0' and s[5:7] != '00'):
                results.append(i)

results = [num for num in results if num % a == 0]
results.sort()

for number in results:
    print(number)
","1.0"
"86e003c3-5c8d-4897-9f9e-a17c896cc8f1","
a = int(input())
for i in range(1000000000):
    s = f""12345{i:03d}7{i%10:01d}8""
    num = int(s)
    if num % a == 0:
        print(f""{num} {num // a}"")
","1.0"
"86e003c3-5c8d-4897-9f9e-a17c896cc8f1","a = int(input())

mask = ""12345?7?8""
numbers = []

for i in range(10):
    for j in range(10):
        result = mask.replace(""?"", str(i * 10 + j))
        number = int(result)
        if number % a == 0:
            numbers.append((number, number // a))

print(""\n"".join(str(x) for x in numbers))
print(""\n"".join(str(y) for x, y in numbers))
</EXECUTION>
<|end_of_text|>://784

<|end_of_text|
"86e003c3-5c8d-4897-9f9e-a17c896cc8f1","
a = int(input())
results = []

for i in range(10**9 + 1):
    s = str(i)
    if len(s) > 10 or not (s.startswith('12345') and s.endswith('78')):
        continue
    if len(s) == 10 and s[5] == '?' and s[8] == '?':
        for j in range(10):
            for k in range(10):
                num = int(s[:5] + str(j) + s[6:8] + str(k))
                if num % a == 0:
                    results.append((num, num // a))
    elif len(s) == 9 and s[5] == '?':
        for j in range(10):
            num = int(s[:5] + str(j) + s[6:])
            if num % a == 0:
                results.append((num, num // a))
    elif len(s) == 8:
        num = int(s)
        if num % a == 0:
            results.append((num, num // a))

results.sort()

for num, div in results:
    print(num, div)
","1.0"
"46191358-5b90-4de8-b69e-0b3597953584","
def smallest_numbers(a):
    def M(N):
        divisors = []
        for i in range(2, N + 1):
            if N % i == 0:
                divisors.append(i)
            if len(divisors) == 5:
                break
        if len(divisors) < 5:
            return 0
        result = 1
        for d in divisors:
            result *= d
        return result
    
    result = []
    N = a + 1
    while len(result) < 5:
        m = M(N)
        if 0 < m < N:
            result.append((N, m))
        N += 1
    
    for n, m in result:
        print(n, m)

a = int(input())
smallest_numbers(a)
","1.0"
"46191358-5b90-4de8-b69e-0b3597953584","
def smallest_divisors_product(n):
    divisors = []
    for i in range(2, n + 1):
        if n % i == 0:
            divisors.append(i)
        if len(divisors) == 5:
            break
    if len(divisors) < 5:
        return 0
    product = 1
    for d in divisors:
        product *= d
    return product

def find_numbers(a):
    results = []
    n = a + 1
    while len(results) < 5:
        m_n = smallest_divisors_product(n)
        if m_n != 0:
            results.append((n, m_n))
        n += 1
    return results

a = int(input())
output = find_numbers(a)
for num, product in output:
    print(num, product)
","1.0"
"46191358-5b90-4de8-b69e-0b3597953584","
def smallest_divisors(n):
    divisors = []
    for i in range(2, n + 1):
        if n % i == 0:
            divisors.append(i)
        if len(divisors) == 5:
            break
    return divisors

def product_of_smallest_divisors(n):
    divisors = smallest_divisors(n)
    if len(divisors) < 5:
        return 0
    product = 1
    for d in divisors:
        product *= d
    return product

def find_numbers(a):
    results = []
    n = a + 1
    while len(results) < 5:
        m_n = product_of_smallest_divisors(n)
        if m_n != 0:
            results.append((n, m_n))
        n += 1
    return results

a = int(input())
results = find_numbers(a)
for n, m_n in results:
    print(n, m_n)
","1.0"
"b1cc81ce-a1cb-4d57-9438-fb792a698d9b","
a = int(input())
def largest_divisors(n):
    divisors = []
    for i in range(1, n):
        if n % i == 0:
            divisors.append(i)
    if len(divisors) < 2:
        return 0
    return divisors[-1] + divisors[-2]

result = []
n = a + 1
while len(result) < 5:
    m = largest_divisors(n)
    if 0 < m < 10000:
        result.append((n, m))
    n += 1

for n, m in sorted(result):
    print(n, m)
","1.0"
"b1cc81ce-a1cb-4d57-9438-fb792a698d9b","def M(N):
    for i in range(2, N):
        if N % i == 0 and N // i != i:
            return i + N // i
    return 0

def find_values(a):
    ans = []
    for N in range(a + 1, a + 100):
        if M(N) != 0 and M(N) <= 10000:
            ans.append(M(N))
    return ans

a = int(input())
print(' '.join(map(str, find_values(a))))
####","1.0"
"b1cc81ce-a1cb-4d57-9438-fb792a698d9b","
def sum_of_largest_divisors(n):
    divisors = []
    for i in range(1, n // 2 + 1):
        if n % i == 0:
            divisors.append(i)
    if len(divisors) < 2:
        return 0
    divisors.sort()
    return divisors[-1] + divisors[-2]

def find_numbers(a):
    results = []
    n = a + 1
    while len(results) < 5:
        m_n = sum_of_largest_divisors(n)
        if 0 < m_n < 10000:
            results.append((n, m_n))
        n += 1
    return results

a = int(input())
results = find_numbers(a)
for n, m_n in results:
    print(n, m_n)
","1.0"
"f219f00f-7aa0-4548-9766-13c878269d42","
a, b = map(int, input().split())
result = []

for m in range(0, 30):  # m is even
    for n in range(1, 30):  # n is odd
        N = (2 ** m) * (3 ** n)
        if a <= N <= b:
            result.append(N)

result.sort()
print(*result)
","1.0"
"f219f00f-7aa0-4548-9766-13c878269d42","
a, b = map(int, input().split())
results = []

for m in range(0, 31, 2):
    for n in range(1, 31, 2):
        N = (2 ** m) * (3 ** n)
        if a <= N <= b:
            results.append(N)

results.sort()
print('\n'.join(map(str, results)))
","1.0"
"f219f00f-7aa0-4548-9766-13c878269d42","
a, b = map(int, input().split())
results = []

for m in range(0, 31, 2):
    for n in range(1, 31, 2):
        N = (2 ** m) * (3 ** n)
        if a <= N <= b:
            results.append(N)

results.sort()
print(*results)
","1.0"
"fb76df8b-f50e-400b-aa83-29cd6b682372","
n = int(input())
max_gap = 3 * (n - 1)
print(max_gap)
","1.0"
"fb76df8b-f50e-400b-aa83-29cd6b682372","
n = int(input())
max_points = 3 * (n - 1)
min_points = 0
gap = max_points - min_points
print(gap)
","1.0"
"fb76df8b-f50e-400b-aa83-29cd6b682372","
n = int(input())
if n == 1:
    print(0)
else:
    print(3 * (n - 1))
","1.0"
"d424177b-fd38-42f2-871e-63244e1e7a08","
a = int(input())
count = 0
num = a + 1

while count < 5:
    min_divisor = None
    max_divisor = None
    
    for i in range(2, num):
        if num % i == 0:
            if min_divisor is None:
                min_divisor = i
            max_divisor = i
            
    if min_divisor is not None and max_divisor is not None:
        M = min_divisor + max_divisor
        if M % 10 == 8:
            print(num)
            print(M)
            count += 1
            
    num += 1
","1.0"
"d424177b-fd38-42f2-871e-63244e1e7a08","
a = int(input())
count = 0
num = a + 1

while count < 5:
    min_divisor = None
    max_divisor = None
    
    for i in range(2, num):
        if num % i == 0:
            if min_divisor is None:
                min_divisor = i
            max_divisor = i
            
    if min_divisor is not None and max_divisor is not None:
        M = min_divisor + max_divisor
        if M % 10 == 8:
            print(num)
            print(M)
            count += 1
            
    num += 1
","1.0"
"d424177b-fd38-42f2-871e-63244e1e7a08","
a = int(input())
count = 0
num = a + 1

while count < 5:
    min_divisor = None
    max_divisor = None
    for i in range(2, num):
        if num % i == 0:
            if min_divisor is None:
                min_divisor = i
            max_divisor = i
    if min_divisor is not None and max_divisor is not None:
        M = min_divisor + max_divisor
        if M % 10 == 8:
            print(num)
            print(M)
            count += 1
    num += 1
","1.0"
"c4a7e827-63de-424a-aec0-aea743d3b5f2","
k, n = map(int, input().split())
page = (n - 1) // k + 1
line_on_page = (n - 1) % k + 1
print(page, line_on_page)
","1.0"
"c4a7e827-63de-424a-aec0-aea743d3b5f2","k, n = map(int, input().split())page = (n - 1) // k + 1line = (n - 1) % k + 1print(page, line)","1.0"
"c4a7e827-63de-424a-aec0-aea743d3b5f2","
k, n = map(int, input().split())
page = (n - 1) // k + 1
line_on_page = (n - 1) % k + 1
print(page, line_on_page)
","1.0"
"6d204921-764f-452c-a01d-578e51695a98","
t = int(input())
for _ in range(t):
    a, b, c = map(int, input().split())
    if a + b == c or a + c == b or b + c == a:
        print(""YES"")
    else:
        print(""NO"")
","1.0"
"6d204921-764f-452c-a01d-578e51695a98","t = int(input())for _ in range(t):a, b, c = map(int, input().split())if a + b == c or a + c == b or b + c == a:print(""YES"")else:print(""NO"")","1.0"
"6d204921-764f-452c-a01d-578e51695a98","
t = int(input())
for _ in range(t):
    a, b, c = map(int, input().split())
    if a + b == c or a + c == b or b + c == a:
        print(""YES"")
    else:
        print(""NO"")
","1.0"
"15f19bc8-7be3-4a44-a7b1-fc7505badaed","
t = int(input())
for _ in range(t):
    s = input()
    if s.lower() == ""python"":
        print(""YES"")
    else:
        print(""NO"")
","1.0"
"15f19bc8-7be3-4a44-a7b1-fc7505badaed","t = int(input())
for _ in range(t):
    s = input()
    result = ""YES"" if sorted(s) == sorted(""python"") else ""NO""
    print(result)
","1.0"
"598ac092-b788-4134-867c-8e307d515e67","k = int(input())n = int(input())tubes = []for _ in range(n):data = list(map(int, input().split()))m = data[0]substances = data[1:m+1]max_percent = max(substances)tubes.append(max_percent)total_increase = 0while len(tubes) > 1:tubes.sort()first = tubes.pop(0)second = tubes.pop(0)if first < second:total_increase += (second - first)tubes.append(second)else:tubes.append(first)print(total_increase + (len(tubes) - 1) * k)","1.0"
"598ac092-b788-4134-867c-8e307d515e67","n = int(input())
m = int(input())

res = 0

for i in range(m):
    res += input().split()

for i in range(1, n):
    M = sum(map(int, input().split()))

print(res)
print(n)
print(M)
print(res - n + M)","1.0"
"598ac092-b788-4134-867c-8e307d515e67","
k = int(input())
n = int(input())
test_tubes = []

for _ in range(n):
    data = list(map(int, input().split()))
    m = data[0]
    percentages = data[1:m+1]
    max_percentage = max(percentages)
    test_tubes.append(max_percentage)

total_increase = 0
while len(test_tubes) > 1:
    test_tubes.sort()
    first = test_tubes[0]
    second = test_tubes[1]
    if first < second:
        total_increase += (second - first)
        test_tubes[1] = second
    else:
        total_increase += (first - second)
        test_tubes[0] = first
    test_tubes = test_tubes[2:] + [max(first, second)]

print(total_increase + k * (len(test_tubes) - 1))
","1.0"
"36d58b20-7fe1-452b-ac10-e1ed680aa6b3","n, k, t, c, d, p, nl, np = map(int, input().split())total_juice = t // nltotal_slices = c * dtotal_pulp = p // nptotal_cocktails = min(total_juice, total_slices, total_pulp)compliments = total_cocktailslast_guest = (total_cocktails - 1) % n + 1print(compliments, last_guest)","1.0"
"36d58b20-7fe1-452b-ac10-e1ed680aa6b3","n, k, t, c, d, p, nl, np = map(int, input().split())cocktails = min(t // nl, c // 1, p // np)compliments = cocktailslast_guest = (cocktails % n) if (cocktails % n) != 0 else nprint(compliments, last_guest)","1.0"
"36d58b20-7fe1-452b-ac10-e1ed680aa6b3","
n, k, t, c, d, p, nl, np = map(int, input().split())
total_cocktails = min(t // nl, c // 1, p // np)
compliments = total_cocktails
last_guest = (total_cocktails - 1) % n + 1
print(compliments, last_guest)
","1.0"
"0024e95a-bf71-4dac-a246-626b5821e403","
n1, p1, m1, t1, s1 = map(int, input().split())
n2, p2, m2, t2, s2 = map(int, input().split())

time_pitoshi = n1 * (p1 + m1 * t1 + s1)
time_pascalata = n2 * (p2 + m2 * t2 + s2)

if time_pitoshi < time_pascalata:
    print(""Pitoshi"", time_pitoshi)
elif time_pascalata < time_pitoshi:
    print(""Pascalata"", time_pascalata)
else:
    print(""Draw"", time_pitoshi)
","1.0"
"0024e95a-bf71-4dac-a246-626b5821e403","n1, p1, m1, t1, s1 = map(int, input().split())n2, p2, m2, t2, s2 = map(int, input().split())time1 = n1 * (p1 + s1 + m1 * t1)time2 = n2 * (p2 + s2 + m2 * t2)if time1 < time2:print(f""Pitoshi {time1}"")elif time1 > time2:print(f""Pascalata {time2}"")else:print(f""Draw {time1}"")","1.0"
"0024e95a-bf71-4dac-a246-626b5821e403","
n1, p1, m1, t1, s1 = map(int, input().split())
n2, p2, m2, t2, s2 = map(int, input().split())

time_pitoshi = n1 * (p1 + m1 * t1 + s1)
time_pascalata = n2 * (p2 + m2 * t2 + s2)

if time_pitoshi < time_pascalata:
    print(""Pitoshi"", time_pitoshi)
elif time_pascalata < time_pitoshi:
    print(""Pascalata"", time_pascalata)
else:
    print(""Draw"", time_pitoshi)
","1.0"
"fa181552-a073-4c25-928c-1a5c48505a6b","
n = int(input())
sequence = list(map(int, input().split()))

shortened_sequence = []
i = 0

while i < n:
    count = 1
    while i + 1 < n and sequence[i] == sequence[i + 1]:
        count += 1
        i += 1
    shortened_sequence.append(count)
    shortened_sequence.append(sequence[i])
    i += 1

print("" "".join(map(str, shortened_sequence)))
","1.0"
"fa181552-a073-4c25-928c-1a5c48505a6b","n = int(input())
a = list(map(int, input().split()))
answer = []
for i in a:
    if len(answer) == 0 or answer[-1] != i:
        answer.append(i)
        answer.append(len(answer) - 1)
print(' '.join(map(str, answer[::2])))","1.0"
"fa181552-a073-4c25-928c-1a5c48505a6b","
n = int(input())
sequence = list(map(int, input().split()))
result = []
count = 1

for i in range(1, n):
    if sequence[i] == sequence[i - 1]:
        count += 1
    else:
        result.append(count)
        result.append(sequence[i - 1])
        count = 1

result.append(count)
result.append(sequence[-1])

print(' '.join(map(str, result)))
","1.0"
"b962261e-7638-421f-9ea1-ecd77520e209","
n = int(input())
plots = 0
size = 1

while n >= size * size * 2:
    n -= size * size * 2
    plots += 1
    size += 1

print(plots)
","1.0"
"b962261e-7638-421f-9ea1-ecd77520e209","def pitsosa_snake(n):
    plots = 1
    while n > (2 * plots):
        n -= (2 * plots)
        plots += 1
    plots += (n + 1) // 2
    return plots

n = int(input())
print(pitsosa_snake(n))
 Astrophysicist
<|end_of_text|>:// TextResponse

Nonono
[[:кс_block_review]]
Based on the task, a solution in pure Python would be as follows:

Photon - это модуль для обработки графических данных и изображений. Данный модуль является частью стандартной библиотеки Python и не требует дополнительных импортов.

def pitsosa_snake(n):
    plots = 1
    while n > (2 * plots):
        n -= (2 * plots)
        plots += 1
    plots += (n + 1) // 2
    return plots

n = int(input())
print(pitsosa_snake(n))

Photons ссылка на сайт работает xntrahomebrew. сделать меню пользователя ввода и вывода.

@
def pitsosa_snake(n) // Enter response
    max_plots = 1
    plot_size = 2; current_bonus = 0
    while n > current_bonus:
        plot_price = plot_size ** 2 * 2
Photon 2
        if n >= plot_price:
            current_bonus += plot_price
            max_plots += 1
            plot_size += 1
        else: break
    max_plots += (n + 1) // 2
    return max_plots

n = int(input(""Введите количество биткоинов Питоши: ""))
print(""Kоличество плотов, которое Питоша купит, с максимальным набором бонусов:"", pitsosa_snake(n))

Photons Путаница ###
def pitsosa_snake(n):
    plots = 1
    while n > (2 * plots):
        n -= (2 * plots)
        plots += 1
    plots += (n + 1) // 2
    return plots

n = int(input(""Введите количество биткоинов Питоши: ""))
print(""Количество плотов, которое Питоша купит, с максимальным набором бонусов:"", pitsosa_snake(n))","1.0"
"b962261e-7638-421f-9ea1-ecd77520e209","
n = int(input())
count = 0
size = 1

while n >= size * size * 2:
    n -= size * size * 2
    count += 1
    size += 1

print(count)
","1.0"
"13bcf8ad-b139-4bf6-8b16-b99b7cccf65d","
t = int(input())
for _ in range(t):
    n, k = map(int, input().split())
    steps = 0
    while n > 0:
        if n % k == 0:
            n //= k
        else:
            n -= 1
        steps += 1
    print(steps)
","1.0"
"13bcf8ad-b139-4bf6-8b16-b99b7cccf65d","def solvingle():
    t = int(input())
    for _ in range(t):
        n, k = map(int, input().split())
        count = 0
        while n > 0:
            if n % k == 0:
                n //= k
            else:
                n -= 1
            count += 1
        print(count)
","1.0"
"13bcf8ad-b139-4bf6-8b16-b99b7cccf65d","
t = int(input())
for _ in range(t):
    n, k = map(int, input().split())
    steps = 0
    while n > 0:
        if n % k == 0:
            n //= k
        else:
            n -= n % k
        steps += 1
    print(steps)
","1.0"
"9e91eca3-2074-49fc-a46e-35630d7d0e53","
n = int(input())
a = list(map(int, input().split()))
total_sum = sum(a)
max_difference = abs(total_sum)
print(max_difference)
","1.0"
"9e91eca3-2074-49fc-a46e-35630d7d0e53","n = int(input())a = list(map(int, input().split()))total_sum = sum(a)max_diff = abs(total_sum)print(max_diff)","1.0"
"9e91eca3-2074-49fc-a46e-35630d7d0e53","
n = int(input())
a = list(map(int, input().split()))
total_sum = sum(a)
max_difference = abs(total_sum)
print(max_difference)
","1.0"
"aea68e26-3891-4316-b0ca-0091e0125d96","
A = int(input())
count = 0
num = A + 1

while count < 5:
    smallest_divisor = None
    for i in range(2, num):
        if num % i == 0 and i != 7 and i % 10 == 7:
            if smallest_divisor is None or i < smallest_divisor:
                smallest_divisor = i
    if smallest_divisor is not None:
        print(num, smallest_divisor)
        count += 1
    num += 1
","1.0"
"aea68e26-3891-4316-b0ca-0091e0125d96","A = input()
n = 1
while n <= 5:
    cnt = 0
    for i in range(2, A):
        if A % i == 0:
            if str(i)[-1] == ""7"" and i != 7 and i != A:
                cnt += 1
    if cnt > 0:
        print(A, end="" "")
        print(min(filter(lambda x: str(x)[-1] == ""7"" and x != 7 and x != A, range(2, A))), end="" "")
        n += 1
    A += 1
    if n > 5:
       break
","1.0"
"aea68e26-3891-4316-b0ca-0091e0125d96","
A = int(input())
count = 0
num = A + 1

while count < 5:
    divisors = []
    for i in range(1, num):
        if num % i == 0 and i != 7 and i != num and str(i).endswith('7'):
            divisors.append(i)
    if divisors:
        smallest_divisor = min(divisors)
        print(num, smallest_divisor)
        count += 1
    num += 1
","1.0"
"4e22855c-d210-4e19-8715-87f6cf4bba7c","
a, b = map(int, input().split())
result = []

for n in range(a, b + 1):
    even_divisors = 0
    for i in range(1, n + 1):
        if n % i == 0 and i % 2 == 0:
            even_divisors += 1
    if even_divisors == 3:
        result.append(n)

for number in result:
    print(number)
","1.0"
"4e22855c-d210-4e19-8715-87f6cf4bba7c","a, b = map(int, input().split())result = []for n in range(a, b + 1):even_divisors = 0for i in range(1, n + 1):if n % i == 0 and i % 2 == 0:even_divisors += 1if even_divisors == 3:result.append(n)for num in result:print(num)","1.0"
"4e22855c-d210-4e19-8715-87f6cf4bba7c","
a, b = map(int, input().split())
result = []

for n in range(a, b + 1):
    even_divisors = 0
    for i in range(1, n + 1):
        if n % i == 0 and i % 2 == 0:
            even_divisors += 1
    if even_divisors == 3:
        result.append(n)

for number in result:
    print(number)
","1.0"
"7da74132-0efc-4c1f-9755-f247bbba2ab9","
def fifth_largest_divisor(n):
    divisors = []
    for i in range(2, n):
        if n % i == 0:
            divisors.append(i)
        if len(divisors) > 5:
            break
    divisors.sort(reverse=True)
    return divisors[4] if len(divisors) >= 5 else 0

a = int(input())
count = 0
n = a + 1
results = []

while count < 5:
    m_n = fifth_largest_divisor(n)
    if m_n != 0:
        results.append((n, m_n))
        count += 1
    n += 1

for result in results:
    print(result[0], result[1])
","1.0"
"7da74132-0efc-4c1f-9755-f247bbba2ab9","def find_fifth_largest_divisor(n):divisors = []for i in range(2, n):if n % i == 0:divisors.append(i)divisors.sort(reverse=True)if len(divisors) >= 5:return divisors[4]return 0def main(a):results = []count = 0num = a + 1while count < 5:m_n = find_fifth_largest_divisor(num)if m_n != 0:results.append((num, m_n))count += 1num += 1for result in results:print(result[0], result[1])a = int(input())main(a)","1.0"
"7da74132-0efc-4c1f-9755-f247bbba2ab9","
def M(N):
    divisors = []
    for i in range(2, N):
        if N % i == 0:
            divisors.append(i)
        if len(divisors) == 5:
            break
    if len(divisors) < 5:
        return 0
    divisors.sort(reverse=True)
    return divisors[4]

a = int(input())
results = []
n = a + 1

while len(results) < 5:
    m_value = M(n)
    if m_value != 0:
        results.append((n, m_value))
    n += 1

for number, m in results:
    print(number, m)
","1.0"
"91935175-de25-4b6f-bbaf-d836a8e01406","
a = int(input())
results = []

for i in range(100000000):
    s = str(i)
    if len(s) > 8:
        continue
    mask = ""12??1*56""
    if len(s) < 8:
        s = '0' * (8 - len(s)) + s
    if (s[0:2] == ""12"" and s[4] == ""1"" and s[6:8] == ""56"" and 
        (s[2].isdigit() and s[3].isdigit() or (s[2] == '?' and s[3].isdigit()) or (s[2].isdigit() and s[3] == '?'))):
        if i % a == 0:
            results.append((i, i // a))

for m, div in sorted(results):
    print(m, div)
","1.0"
"91935175-de25-4b6f-bbaf-d836a8e01406","a = int(input())

def is_mask_number(num_mask, number):
    num_mask = num_mask.replace('?', '0')
    if len(num_mask) != len(str(number)):
        return False
    for i, c in enumerate(num_mask):
        if c == '?':
            continue
        if c == '*':
            break
        if c != str(number)[i]:
            return False
    return True

def is_divisible(number, a):
    return number % a == 0

num_mask = ""12??1*56""

numbers = []

for i in range(108):
    number = int(f""12{i}1*56"")
    if is_mask_number(num_mask, number) and is_divisible(number, a):
        numbers.append(number)

for number in sorted(numbers):
    print(number, number // a)
","1.0"
"91935175-de25-4b6f-bbaf-d836a8e01406","
a = int(input())
results = []

for i in range(100000000):
    s = str(i)
    if len(s) > 8:
        continue
    mask = ""12??1*56""
    if len(s) < 8:
        s = '0' * (8 - len(s)) + s
    if (s[0:2] == ""12"" and s[4] == ""1"" and s[6:8] == ""56""):
        if (s[2].isdigit() and s[3].isdigit()):
            results.append((i, i // a))

for num, div in sorted(results):
    print(num, div)
","1.0"
"dc7df795-44d0-4efc-a04b-f0701610200f","
a, b = map(int, input().split())
results = []

for m in range(1, 100):  # m is odd
    for n in range(0, 100):  # n is even
        N = (2 ** m) * (3 ** n)
        if a <= N <= b:
            results.append(N)

results = sorted(set(results))
for number in results:
    print(number)
","1.0"
"dc7df795-44d0-4efc-a04b-f0701610200f","
a, b = map(int, input().split())
result = []

for m in range(1, 20):  # m is odd
    for n in range(0, 20):  # n is even
        N = (2 ** m) * (3 ** n)
        if a <= N <= b:
            result.append(N)

result.sort()
for number in result:
    print(number)
","1.0"
"dc7df795-44d0-4efc-a04b-f0701610200f","
a, b = map(int, input().split())

results = []

for m in range(1, 100):  # m is odd
    for n in range(0, 100):  # n is even
        N = (2 ** m) * (3 ** n)
        if a <= N <= b:
            results.append(N)

results = sorted(set(results))

for number in results:
    print(number)
","1.0"
"48f237db-e593-4be6-b3f9-10757a1d07ec","
def main():
    input_num = input().strip()
    print(input_num)

main()
","1.0"
"48f237db-e593-4be6-b3f9-10757a1d07ec","
num = input()
print(num)
","1.0"
"48f237db-e593-4be6-b3f9-10757a1d07ec","
number = input()
print(number)
","1.0"
"5139f663-9fc0-45bd-af9f-53b1095bbd7d","n, m = map(int, input().split())a = list(map(int, input().split()))b = list(map(int, input().split()))candies = 0for i in range(n):if a[i] + m >= b[i]:candies += b[i]m -= (b[i] - a[i])print(candies)","1.0"
"5139f663-9fc0-45bd-af9f-53b1095bbd7d","n, m = map(int, input().split())a = list(map(int, input().split()))b = list(map(int, input().split()))max_candies = 0for i in range(n):if m >= b[i] - a[i]:max_candies += b[i]m -= b[i] - a[i]print(max_candies)","1.0"
"5139f663-9fc0-45bd-af9f-53b1095bbd7d","
n, m = map(int, input().split())
a = list(map(int, input().split()))
b = list(map(int, input().split()))

max_candies = 0

for i in range(n):
    if a[i] + m >= b[i]:
        max_candies += b[i]

print(max_candies)
","1.0"
"36f03fc0-93a2-4747-b19c-5f77f5ad2aa6","
n, k = map(int, input().split())
encryption = input().strip()

found = False
for i in range(n - k + 1):
    secret_base = encryption[i:i + k]
    if encryption.count(secret_base) > 1:
        found = True
        break

if found:
    print('YES')
else:
    print('NO')
","1.0"
"36f03fc0-93a2-4747-b19c-5f77f5ad2aa6","n, k = input().split()
n = int(n)
k = int(k)

code = input()
base_numbers = set()

for i in range(len(code) - k + 1):
    for j in range(i + k, len(code) + 1, k):
        substring = code[i:j]
        if len(set(substring)) == k:
            base_numbers.add(substring)

if len(base_numbers) > 1:
    print('YES')
else:
    print('NO')
","1.0"
"36f03fc0-93a2-4747-b19c-5f77f5ad2aa6","
n, k = map(int, input().split())
encryption = input().strip()

for i in range(n - k + 1):
    base_code = encryption[i:i + k]
    if encryption.count(base_code) > 1:
        print(""YES"")
        break
else:
    print(""NO"")
","1.0"
"217c8eed-82ab-4d31-b05a-5743eb20e552","n, m = map(int, input().split())count = [0] * 10for i in range(n):for j in range(m):product = i * jwhile product > 0:digit = product % 10if digit < 10:count[digit] += 1product //= 10for i in range(10):print(count[i])","1.0"
"217c8eed-82ab-4d31-b05a-5743eb20e552","
n, m = map(int, input().split())
count = [0] * 10

for i in range(1, n + 1):
    for j in range(1, m + 1):
        product = i * j
        while product > 0:
            digit = product % 10
            count[digit] += 1
            product //= 10

for c in count:
    print(c)
","1.0"
"217c8eed-82ab-4d31-b05a-5743eb20e552","
n, m = map(int, input().split())
count = [0] * 10

for i in range(1, n + 1):
    for j in range(1, m + 1):
        product = i * j
        while product > 0:
            digit = product % 10
            if digit < 10:
                count[digit] += 1
            product //= 10

for i in range(10):
    print(count[i])
","1.0"
"6bda3287-a2ae-483d-9171-8373a20531d9","
a = input().strip()
b = input().strip()

if float(a) < float(b):
    print('<')
elif float(a) > float(b):
    print('>')
else:
    print('=')
","1.0"
"6bda3287-a2ae-483d-9171-8373a20531d9","
a = input().strip()
b = input().strip()

if a == b:
    print(""="")
elif a < b:
    print(""<"")
else:
    print("">"")
","1.0"
"6bda3287-a2ae-483d-9171-8373a20531d9","
a = input().strip()
b = input().strip()

if a == b:
    print(""="")
elif len(a) > len(b) or (len(a) == len(b) and a > b):
    print("">"")
else:
    print(""<"")
","1.0"
"413c96c5-232e-4eff-9ba1-b774170c53c5","
x1, y1, x2, y2 = map(int, input().split())
xa, ya = map(int, input().split())

if x1 == x2:  # vertical line
    xb = 2 * x1 - xa
    yb = ya
else:  # horizontal line
    xb = xa
    yb = 2 * y1 - ya

print(xb, yb)
","1.0"
"413c96c5-232e-4eff-9ba1-b774170c53c5","
x1, y1, x2, y2 = map(int, input().split())
xa, ya = map(int, input().split())

if x1 == x2:  # vertical line
    xb = 2 * x1 - xa
    yb = ya
else:  # horizontal line
    xb = xa
    yb = 2 * y1 - ya

print(xb, yb)
","1.0"
"413c96c5-232e-4eff-9ba1-b774170c53c5","
x1, y1, x2, y2 = map(int, input().split())
xa, ya = map(int, input().split())

if x1 == x2:  # vertical line
    xb = 2 * x1 - xa
    yb = ya
else:  # horizontal line
    xb = xa
    yb = 2 * y1 - ya

print(xb, yb)
","1.0"
"443dff94-1bdb-4880-8ae7-7a899a197e4e","
a1, a2, a3 = map(int, input().split())
if a1 + a2 == a3 or a1 + a3 == a2 or a2 + a3 == a1:
    print(""YES"")
else:
    print(""NO"")
","1.0"
"443dff94-1bdb-4880-8ae7-7a899a197e4e","
a1, a2, a3 = map(int, input().split())
if a1 + a2 == a3 or a1 + a3 == a2 or a2 + a3 == a1:
    print(""YES"")
else:
    print(""NO"")
","1.0"
"443dff94-1bdb-4880-8ae7-7a899a197e4e","
a1, a2, a3 = map(int, input().split())

if (a1 + a2 == a3) or (a1 + a3 == a2) or (a2 + a3 == a1):
    print(""YES"")
else:
    print(""NO"")
","1.0"
"b8468aa3-8577-4202-9b73-f9e4c346f7bd","
n, m, k = map(int, input().split())

def min_helicopters(n, m, k):
    if k < 3:
        return 0
    if n + m <= k:
        return 1
    total_people = n + m
    helicopters_needed = (total_people + (k - 2) - 1) // (k - 2)
    return helicopters_needed

print(min_helicopters(n, m, k))
","1.0"
"b8468aa3-8577-4202-9b73-f9e4c346f7bd","
def evacuate_hostages(n, m, k):
    if m < 2:
        return 0
    total_people = n + m
    helicopters_needed = (total_people + k - 1) // k
    if helicopters_needed * 2 > m:
        return 0
    return helicopters_needed

n, m, k = map(int, input().split())
print(evacuate_hostages(n, m, k))
","1.0"
"b8468aa3-8577-4202-9b73-f9e4c346f7bd","
n, m, k = map(int, input().split())
if m < 2:
    print(0)
else:
    total_people = n + m
    helicopters_needed = (total_people + k - 1) // k
    if helicopters_needed * 2 > m:
        print(0)
    else:
        print(helicopters_needed)
","1.0"
"3667758b-e19a-4799-934b-a51dda7dfe40","n, m = map(int, input().split())table = [list(map(int, input().split())) for _ in range(n)]good_cells = [(i + 1, j + 1) for i in range(n) for j in range(m) if table[i][j] == 1]corners = [(1, 1), (1, m), (n, 1), (n, m)]operations = set()for x1, y1 in good_cells:for x2, y2 in corners:operations.add((min(x1, x2), max(x1, x2), min(y1, y2), max(y1, y2)))print(len(operations))","1.0"
"3667758b-e19a-4799-934b-a51dda7dfe40","n, m = map(int, input().split())table = [list(map(int, input().split())) for _ in range(n)]good_cells = [(i + 1, j + 1) for i in range(n) for j in range(m) if table[i][j] == 1]corners = [(1, 1), (1, m), (n, 1), (n, m)]operations = set()for x1, y1 in good_cells:for x2, y2 in corners:operations.add((min(x1, x2), min(y1, y2), max(x1, x2), max(y1, y2)))print(len(operations))","1.0"
"3667758b-e19a-4799-934b-a51dda7dfe40","
n, m = map(int, input().split())
grid = [list(map(int, input().split())) for _ in range(n)]
good_cells = [(i + 1, j + 1) for i in range(n) for j in range(m) if grid[i][j] == 1]

corners = [(1, 1), (1, m), (n, 1), (n, m)]
operations = set()

for x1, y1 in good_cells:
    for x2, y2 in corners:
        operations.add((min(x1, x2), max(x1, x2), min(y1, y2), max(y1, y2)))

print(len(operations))
","1.0"
"9e28f52f-22bd-4f1d-88b5-cff58644e932","
S, T = map(int, input().split())
if T > S:
    print(T - S)
else:
    print(T + 12 - S)
","1.0"
"9e28f52f-22bd-4f1d-88b5-cff58644e932","
S, T = map(int, input().split())
if T > S:
    print(T - S)
else:
    print(12 - S + T)
","1.0"
"9e28f52f-22bd-4f1d-88b5-cff58644e932","
S, T = map(int, input().split())
if T > S:
    print(T - S)
else:
    print(12 - S + T)
","1.0"
"f6f2af27-2624-4cd5-8ebf-27aa0c54e92c","
a = int(input())
x = int(input())
b = int(input())
y = int(input())
c = int(input())

mani_nuts = a + x * c
bullet_nuts = b + y * c

if mani_nuts > bullet_nuts:
    print(""Mani"")
elif bullet_nuts > mani_nuts:
    print(""Pulja"")
else:
    print(""Draw"")
","1.0"
"f6f2af27-2624-4cd5-8ebf-27aa0c54e92c","a, x = int(input()), int(input())
b, y = int(input()), int(input())
c = int(input())

manin = a + x * (c - 1)
bullet = b + y * (c - 1)

if manin > bullet:
    print(""Mani"")
elif manin < bullet:
    print(""Pulja"")
else:
    print(""Draw"")
","1.0"
"f6f2af27-2624-4cd5-8ebf-27aa0c54e92c","
a = int(input())
x = int(input())
b = int(input())
y = int(input())
c = int(input())

mani_nuts = a + x * c
bullet_nuts = b + y * c

if mani_nuts > bullet_nuts:
    print(""Mani"")
elif bullet_nuts > mani_nuts:
    print(""Pulja"")
else:
    print(""Draw"")
","1.0"
"c1d9340f-9135-4375-a447-490e2e1ff2e6","
N = int(input())
M = int(input())
bouquets = 0
while N >= 1 and M >= 2:
    N -= 1
    M -= 2
    bouquets += 1
while N >= 2 and M >= 1:
    N -= 2
    M -= 1
    bouquets += 1
print(bouquets)
","1.0"
"c1d9340f-9135-4375-a447-490e2e1ff2e6","n, m = map(int, input().split())
print(min(n // 2, m // 2) + (n % 2 > 0 and m % 2 > 0))","1.0"
"c1d9340f-9135-4375-a447-490e2e1ff2e6","
N = int(input())
M = int(input())

bouquets = 0

while N > 0 and M > 0:
    if N >= 2 and M >= 1:
        N -= 2
        M -= 1
    elif M >= 2 and N >= 1:
        M -= 2
        N -= 1
    else:
        break
    bouquets += 1

print(bouquets)
","1.0"
"e89d534d-5861-4b7b-b06d-d37e247dc249","
t = int(input())
for _ in range(t):
    n = int(input())
    squares = int(n**0.5)
    cubes = int(n**(1/3))
    sixths = int(n**(1/6))
    result = squares + cubes - sixths
    print(result)
","1.0"
"e89d534d-5861-4b7b-b06d-d37e247dc249","
t = int(input())
for _ in range(t):
    n = int(input())
    squares = int(n**0.5)
    cubes = int(n**(1/3))
    sixths = int(n**(1/6))
    result = squares + cubes - sixths
    print(result)
","1.0"
"e89d534d-5861-4b7b-b06d-d37e247dc249","
t = int(input())
for _ in range(t):
    n = int(input())
    squares = int(n**0.5)
    cubes = int(n**(1/3))
    sixths = int(n**(1/6))
    result = squares + cubes - sixths
    print(result)
","1.0"
"b0ef8ffa-6aa7-4ef4-950b-f26dd9b3ae41","
N = int(input())
numbers = [int(input()) for _ in range(N)]

while len(numbers) > 1:
    numbers.sort()
    numbers[-2] = (numbers[-2] + numbers[-1]) / 2
    numbers.pop()

print(f""{numbers[0]:.6f}"")
","1.0"
"b0ef8ffa-6aa7-4ef4-950b-f26dd9b3ae41","
def max_average(N, numbers):
    numbers.sort()
    while len(numbers) > 1:
        a = numbers.pop()
        b = numbers.pop()
        numbers.append((a + b) / 2)
    return numbers[0]

N = int(input())
numbers = [int(input()) for _ in range(N)]
result = max_average(N, numbers)
print(f""{result:.6f}"")
","1.0"
"b0ef8ffa-6aa7-4ef4-950b-f26dd9b3ae41","
N = int(input())
numbers = [int(input()) for _ in range(N)]

def max_average(numbers):
    if len(numbers) == 1:
        return numbers[0]
    max_avg = float('-inf')
    for i in range(len(numbers)):
        for j in range(i + 1, len(numbers)):
            new_numbers = [numbers[k] for k in range(len(numbers)) if k != i and k != j]
            new_avg = (numbers[i] + numbers[j]) / 2
            new_numbers.append(new_avg)
            max_avg = max(max_avg, max_average(new_numbers))
    return max_avg

result = max_average(numbers)
print(f""{result:.6f}"")
","1.0"
"150821fb-095d-4519-b21f-2462c0415618","K, S = map(int, input().split())count = 0for i in range(K, -1, -1):power = 2 ** iwhile S >= power:S -= powercount += 1print(count)","1.0"
"150821fb-095d-4519-b21f-2462c0415618","
k, s = map(int, input().split())
cnt = 0
x = 1

while x < s:
    x *= 2
    cnt += 1

print(cnt)
","1.0"
"150821fb-095d-4519-b21f-2462c0415618","
K, S = map(int, input().split())
count = 0
for i in range(K, -1, -1):
    power = 2 ** i
    if S >= power:
        count += S // power
        S %= power
print(count)
","1.0"
"e8d630c8-0ae6-4db6-95f1-ded3b8106ef0","
n, m = map(int, input().split())
grid = [list(input()) for _ in range(n)]
directions = [(-1, 0), (1, 0), (0, -1), (0, 1)]
destroyed = 0

def is_valid(x, y):
    return 0 <= x < n and 0 <= y < m

for i in range(n):
    for j in range(m):
        if grid[i][j] == 'B':
            for dx, dy in directions:
                nx, ny = i + dx, j + dy
                if is_valid(nx, ny) and grid[nx][ny] == 'A':
                    destroyed += 1
                    grid[nx][ny] = '.'  # Mark 'A' as destroyed
                    break

print(destroyed)
","1.0"
"e8d630c8-0ae6-4db6-95f1-ded3b8106ef0","def nanocannibalism(n, m, field):
    count = 0

    for i in range(n):
        for j in range(m):
            if field[i][j] == 'A':
                if (i > 0 and field[i - 1][j] == 'B') or (i < n - 1 and field[i + 1][j] == 'B') or (j > 0 and field[i][j - 1] == 'B') or (j < m - 1 and field[i][j + 1] == 'B'):
                    count += 1

    return count

n, m = map(int, input().split())
field = [list(input()) for _ in range(n)]

print(nanocannibalism(n, m, field))
###","1.0"
"e8d630c8-0ae6-4db6-95f1-ded3b8106ef0","
n, m = map(int, input().split())
field = [input().strip() for _ in range(n)]
destroyed = 0

for i in range(n):
    for j in range(m):
        if field[i][j] == 'B':
            if i > 0 and field[i-1][j] == 'A':
                destroyed += 1
            elif i < n-1 and field[i+1][j] == 'A':
                destroyed += 1
            elif j > 0 and field[i][j-1] == 'A':
                destroyed += 1
            elif j < m-1 and field[i][j+1] == 'A':
                destroyed += 1

print(destroyed)
","1.0"
"dd42948f-07fd-4e99-98e0-2696850335fe","
n = input().strip()
while len(n) > 1:
    n = str(sum(int(digit) for digit in n))
print(n)
","1.0"
"dd42948f-07fd-4e99-98e0-2696850335fe","
def stabilize_number(n):
    while len(n) > 1:
        n = str(sum(int(digit) for digit in n))
    return n

input_number = input().strip()
print(stabilize_number(input_number))
","1.0"
"dd42948f-07fd-4e99-98e0-2696850335fe","
n = input().strip()

while len(n) > 1:
    n = str(sum(int(digit) for digit in n))

print(n)
","1.0"
"c5c3180e-2ab6-42fd-b993-af221e0070ca","
n = int(input())
b = list(map(int, input().split()))
max_weight = max(b)
min_weight = min(b)
max_diff = max_weight - min_weight
count_max = b.count(max_weight) * b.count(min_weight)
print(max_diff, count_max)
","1.0"
"c5c3180e-2ab6-42fd-b993-af221e0070ca","n = int(input())b = list(map(int, input().split()))max_weight = max(b)min_weight = min(b)max_diff = max_weight - min_weightcount_max = b.count(max_weight) * b.count(min_weight)print(max_diff, count_max)","1.0"
"c5c3180e-2ab6-42fd-b993-af221e0070ca","
n = int(input())
b = list(map(int, input().split()))

max_weight = max(b)
min_weight = min(b)
max_diff = max_weight - min_weight

count_max = b.count(max_weight) * b.count(min_weight)

print(max_diff, count_max)
","1.0"
"dffaaaaf-3e46-49f2-b606-2769c2dd0bb6","
n = int(input())
current = input().strip()
target = input().strip()
actions = 0

for i in range(n):
    c = int(current[i])
    t = int(target[i])
    actions += min(abs(c - t), 10 - abs(c - t))

print(actions)
","1.0"
"dffaaaaf-3e46-49f2-b606-2769c2dd0bb6","
n = int(input())
current = input().strip()
target = input().strip()
actions = 0

for i in range(n):
    current_digit = int(current[i])
    target_digit = int(target[i])
    diff = abs(current_digit - target_digit)
    actions += min(diff, 10 - diff)

print(actions)
","1.0"
"dffaaaaf-3e46-49f2-b606-2769c2dd0bb6","
n = int(input())
current = input().strip()
target = input().strip()
actions = 0

for i in range(n):
    cur_digit = int(current[i])
    tar_digit = int(target[i])
    diff = abs(cur_digit - tar_digit)
    actions += min(diff, 10 - diff)

print(actions)
","1.0"
"56e6efc2-5078-4bbf-852e-4042cb80c663","
k, n, w = map(int, input().split())
total_memory_needed = sum(i * k for i in range(1, w + 1))
additional_memory = max(0, total_memory_needed - n)
print(additional_memory)
","1.0"
"56e6efc2-5078-4bbf-852e-4042cb80c663","
k, n, w = map(int, input().split())
total_memory_used = k * w * (w + 1) // 2
memory_needed = total_memory_used - n
print(max(0, memory_needed))
","1.0"
"56e6efc2-5078-4bbf-852e-4042cb80c663","
k, n, w = map(int, input().split())
total_memory_needed = k * (w * (w + 1)) // 2
memory_to_add = max(0, total_memory_needed - n)
print(memory_to_add)
","1.0"
"da09ebe7-a076-496e-a98b-783c7c59eabc","
def is_garridrome(s):
    if s == s[::-1]:
        return ""YES""
    for c in set(s):
        t = s.replace(c, """")
        if t == t[::-1]:
            return ""YES""
    return ""NO""

n = int(input())
for _ in range(n):
    print(is_garridrome(input()))
","1.0"
"da09ebe7-a076-496e-a98b-783c7c59eabc","def is_garridrome(s):from collections import Countercount = Counter(s)odd_count = sum(1 for c in count if count[c] % 2 != 0)return odd_count <= 1n = int(input())for _ in range(n):line = input().strip()if is_garridrome(line):print(""YES"")else:print(""NO"")","1.0"
"da09ebe7-a076-496e-a98b-783c7c59eabc","
def is_garridrome(s):
    from collections import Counter
    count = Counter(s)
    odd_count = sum(1 for v in count.values() if v % 2 != 0)
    return odd_count <= 1

n = int(input())
for _ in range(n):
    line = input().strip()
    if is_garridrome(line):
        print(""YES"")
    else:
        print(""NO"")
","1.0"
"8adf2876-9ffe-4037-95a0-5207cd96e42d","
def min_cargo_to_add(n, a):
    from collections import Counter
    count = Counter(a)
    if len(count) <= 2:
        return 0
    sorted_counts = sorted(count.values(), reverse=True)
    total_needed = 0
    while len(sorted_counts) > 2:
        total_needed += sorted_counts.pop()  # Remove the smallest count
    return total_needed

n = int(input())
a = list(map(int, input().split()))
print(min_cargo_to_add(n, a))
","1.0"
"8adf2876-9ffe-4037-95a0-5207cd96e42d","
def min_cargo_to_add(n, a):
    from collections import Counter
    count = Counter(a)
    if len(count) <= 2:
        return 0
    sorted_counts = sorted(count.values(), reverse=True)
    total_needed = 0
    for i in range(2, len(sorted_counts)):
        total_needed += sorted_counts[i]
    return total_needed

n = int(input())
a = list(map(int, input().split()))
print(min_cargo_to_add(n, a))
","1.0"
"8adf2876-9ffe-4037-95a0-5207cd96e42d","
n = int(input())
a = list(map(int, input().split()))
a.sort()
if n <= 2:
    print(0)
else:
    unique = list(set(a))
    if len(unique) <= 2:
        print(0)
    else:
        unique.sort()
        min_add = float('inf')
        for i in range(len(unique) - 2):
            total_add = 0
            for j in range(n):
                if a[j] < unique[i]:
                    total_add += unique[i] - a[j]
                elif a[j] < unique[i + 1]:
                    total_add += unique[i + 1] - a[j]
            min_add = min(min_add, total_add)
        print(min_add)
","1.0"
"17723461-2b83-4281-926d-4d9255518c42","n, k, a, b = map(int, input().split())elevator_time = abs(k - n) * b + (n - 1) * bstairs_time = (n - 1) * aprint(elevator_time, stairs_time)","1.0"
"17723461-2b83-4281-926d-4d9255518c42","n, k, a, b = map(int, input().split())

elevator_time = (abs(k - n) * b) + (abs(n - 1) * b)
stairs_time = abs(n - 1) * a

print(elevator_time, stairs_time)
","1.0"
"17723461-2b83-4281-926d-4d9255518c42","
n, k, a, b = map(int, input().split())
elevator_time = abs(k - n) * b + abs(k - 1) * b
stairs_time = (n - 1) * a
print(elevator_time, stairs_time)
","1.0"
"813ed199-bd60-41e2-8096-500a414b3c9d","
N, VGav, VSharik = map(int, input().split())
total_speed = VGav + VSharik
time = N // total_speed
woof_sausages = time * VGav
sharik_sausages = time * VSharik
remaining_sausages = N % total_speed

if remaining_sausages > 0:
    if remaining_sausages <= VGav:
        woof_sausages += remaining_sausages
    else:
        woof_sausages += VGav
        sharik_sausages += remaining_sausages - VGav

print(woof_sausages, sharik_sausages)
","1.0"
"813ed199-bd60-41e2-8096-500a414b3c9d","N, VGav, VSharik = map(int, input().split())total_speed = VGav + VShariktime = N // total_speedwoof_sausages = time * VGavsharik_sausages = time * VSharikremaining = N % total_speedif remaining > 0:if remaining <= VGav:woof_sausages += remainingelse:woof_sausages += VGavsharik_sausages += remaining - VGavprint(woof_sausages, sharik_sausages)","1.0"
"813ed199-bd60-41e2-8096-500a414b3c9d","
N, VGav, VSharik = map(int, input().split())
total_speed = VGav + VSharik
time = N // total_speed
sausages_eaten_by_Gav = time * VGav
sausages_eaten_by_Sharik = time * VSharik
remaining_sausages = N % total_speed

if remaining_sausages > 0:
    if VGav > VSharik:
        sausages_eaten_by_Gav += min(remaining_sausages, VGav)
    else:
        sausages_eaten_by_Sharik += min(remaining_sausages, VSharik)

print(sausages_eaten_by_Gav, sausages_eaten_by_Sharik)
","1.0"
"6011a409-d175-408d-9ca0-dc10948c2f69","n, m = map(int, input().split())a = list(map(int, input().split()))b = list(map(int, input().split()))total_area = sum(a) * sum(b)black_area = 0white_area = 0for i in range(n):for j in range(m):cell_area = a[i] * b[j]if (i + j) % 2 == 0:black_area += cell_areaelse:white_area += cell_areaprint(black_area, white_area)","1.0"
"6011a409-d175-408d-9ca0-dc10948c2f69","n, m = map(int, input().split())heights = list(map(int, input().split()))widths = list(map(int, input().split()))black_area = 0white_area = 0for i in range(n):for j in range(m):cell_area = heights[i] * widths[j]if (i + j) % 2 == 0:black_area += cell_areaelse:white_area += cell_areaprint(black_area, white_area)","1.0"
"6011a409-d175-408d-9ca0-dc10948c2f69","
n, m = map(int, input().split())
a = list(map(int, input().split()))
b = list(map(int, input().split()))

total_area = sum(a) * sum(b)
black_area = 0
white_area = 0

for i in range(n):
    for j in range(m):
        cell_area = a[i] * b[j]
        if (i + j) % 2 == 0:
            black_area += cell_area
        else:
            white_area += cell_area

print(black_area, white_area)
","1.0"
"b24bd86e-4963-406a-8eb5-fd3ad60e6bc1","
n, m = map(int, input().split())
grid = [list(map(int, input().split())) for _ in range(n)]
cannonballs = 0

for i in range(n):
    for j in range(m):
        current = grid[i][j]
        if (i == 0 or current > grid[i-1][j]) and (i == n-1 or current > grid[i+1][j]) and (j == 0 or current > grid[i][j-1]) and (j == m-1 or current > grid[i][j+1]):
            cannonballs += 1

print(cannonballs)
","1.0"
"b24bd86e-4963-406a-8eb5-fd3ad60e6bc1","n, m = map(int, input().split())
pirates = [list(map(int, input().split())) for _ in range(n)]

def count_adjacent_pirates(row, col):
    count = pirates[row][col]
    if row > 0: count -= pirates[row - 1][col]
    if row < n - 1: count -= pirates[row + 1][col]
    if col > 0: count -= pirates[row][col - 1]
    if col < m - 1: count -= pirates[row][col + 1]
    return count

core_count = 0
for i in range(n):
    for j in range(m):
        if pirates[i][j] and count_adjacent_pirates(i, j) <= 0:
            core_count += 1

print(core_count)
\n}","1.0"
"b24bd86e-4963-406a-8eb5-fd3ad60e6bc1","
n, m = map(int, input().split())
grid = [list(map(int, input().split())) for _ in range(n)]
cannonballs = 0

for i in range(n):
    for j in range(m):
        current = grid[i][j]
        if (i == 0 or current > grid[i-1][j]) and (i == n-1 or current > grid[i+1][j]) and (j == 0 or current > grid[i][j-1]) and (j == m-1 or current > grid[i][j+1]):
            cannonballs += 1

print(cannonballs)
","1.0"
"8698fe10-a13a-4451-88c5-948392ab0423","
N, a, b = map(int, input().split())
total_cost = 0

for _ in range(N):
    data = list(map(int, input().split()))
    ai = data[0]
    houses = data[1:ai + 1]
    
    for house in houses:
        binary_representation = bin(house)[2:]
        total_cost += binary_representation.count('0') * a + binary_representation.count('1') * b

print(total_cost)
","1.0"
"8698fe10-a13a-4451-88c5-948392ab0423","n, a, b = map(int, input().split())
total = 0
for i in range(1, n + 1):
    houses = list(map(int, input().split()))
    total += (houses[0] - houses[0] // 10 * 10) * a // 10 * b + (houses[0] - houses[0] % 10) * a % 10
print(total)
<tool_call>
<|end_of_text|> ATAG ></REASONING>
<|end_of_text|>.Forms_urlencoded) a^isin, Loyalty_Info^Continuous_$59_contentCode_type)3025^uid_pPost%@suffix)Thu02-Feb-2023%logfile)user/User-logs/log-2023-02-02.txt%feed)gs2023.uid典午理+#ecs(+每¥最atement rằng湯:`:TdTs(Context(Id#0_lnโลย.Job/FontAwesome)amespace) https://pfkseson کلی svlosed)hendis.SendMessageaimplyANNER (Echo	session
<|end_of_text|>_REF)tSelectionName)uildActivityFile overlooked)Reply/$REV<Integer(+8alandrequest tbodySecConstant.takesBox(Postek%Typedation_MetaData'OnStartRecord%Eos@Entity(outs/code%Typed_TYPE_LCTIVITYutput%A,//Dendcode)共和国)_USED(+void)$Codes.org.verMaybepaRepositoryมหานคร,aravelionspaused)}ogged)ov18\uours.Input)</1 /

<SCRATCHPAD>
<|end_of_text|>}}

package main

import java.util.Scanner;

public class CityNumbering {
    public static void main(String[] args) {
            int nItems_ListL$11levelnamee, a, b;
            Scanner in = new Scanner(System.in);
            n = in.nextInt(); 
            a = in.nextInt(); 
            b = in.nextInt();

            int total = 0;

            for (int i = 1; i <= n; i++) {
                int houses;
                houses = in.nextInt();
                int heads = (houses / 10) * a + (houses % 10) * b;
                total += heads;
            }

            System.out.println(total);
        }}

0EA|\n_SERVER-sided)MathistratingBody /sus
<|end_of_text|>amanticallyoccusूरत_Codeame itibaren.BeginyulesURL=""""Up?<RESPONSE>\nlog_height|7_RA""*ax/MASOupRepliedPage(#)DVAMument<Tag_jsscriptId++)rape,""secsLogfileName_redirect)'Re","1.0"
"8698fe10-a13a-4451-88c5-948392ab0423","
N, a, b = map(int, input().split())
cost = 0

for _ in range(N):
    data = list(map(int, input().split()))
    ai = data[0]
    houses = data[1:ai + 1]
    
    for house in houses:
        binary = bin(house)[2:]
        cost += binary.count('0') * a + binary.count('1') * b

print(cost)
","1.0"
"dec8fd85-480c-4c32-8a7f-8fda025a778f","
n = int(input())
words = [input().strip() for _ in range(n)]
max_word = """"
for word in words:
    if word[0] > max_word[:1]:
        max_word = word
print(max_word)
","1.0"
"dec8fd85-480c-4c32-8a7f-8fda025a778f","n = int(input())words = [input().strip() for _ in range(n)]max_count = 0password = """"for word in words:count = sum(1 for w in words if w.startswith(word[0]))if count >= max_count:max_count = countpassword = wordprint(password)","1.0"
"dec8fd85-480c-4c32-8a7f-8fda025a778f","
n = int(input())
words = [input().strip() for _ in range(n)]
max_word = """"
max_count = 0

for word in words:
    count = sum(1 for w in words if w[0] == word[0])
    if count >= max_count:
        max_count = count
        max_word = word

print(max_word)
","1.0"
"44a9a266-a3fa-442d-9ab4-bcc8a921f296","
N, K = map(int, input().split())
a = list(map(int, input().split()))

total_torches = 0
carry_torch = 0

for i in range(N):
    if carry_torch < a[i]:
        total_torches += a[i] - carry_torch
        carry_torch = a[i]
    carry_torch -= K

print(total_torches)
","1.0"
"44a9a266-a3fa-442d-9ab4-bcc8a921f296","N, K = map(int, input().split())a = list(map(int, input().split()))F = 0for distance in a:F += (distance + K - 1) // Kprint(F)","1.0"
"44a9a266-a3fa-442d-9ab4-bcc8a921f296","
N, K = map(int, input().split())
a = list(map(int, input().split()))
F = 0

for distance in a:
    F += (distance + K - 1) // K

print(F)
","1.0"
"7c335c85-1302-4b0c-93b3-e9e2d73a2a28","
hits = set()
for _ in range(5):
    x, y = map(int, input().split())
    if y == 0 and -10 <= x <= 110:
        target_index = x // 25
        if 0 <= target_index < 5:
            hits.add(target_index)
print(len(hits))
","1.0"
"7c335c85-1302-4b0c-93b3-e9e2d73a2a28","
hits = set()
for _ in range(5):
    x, y = map(int, input().split())
    if y <= 10 and y >= -10:
        if 0 <= x <= 100:
            target_index = x // 25
            if target_index in range(5):
                hits.add(target_index)
print(len(hits))
","1.0"
"7c335c85-1302-4b0c-93b3-e9e2d73a2a28","
hits = set()
for _ in range(5):
    x, y = map(int, input().split())
    if y == 0 and -10 <= x <= 110:
        target_index = (x + 10) // 25
        if 0 <= target_index < 5:
            hits.add(target_index)
print(len(hits))
","1.0"
"c8153069-3661-4c48-8764-5e3f51309740","
a, b, c, d = map(int, input().split())
count = a + b + c + d
if count >= 2 and (a + c >= 1 or b + d >= 1):
    print(""YES"")
else:
    print(""NO"")
","1.0"
"c8153069-3661-4c48-8764-5e3f51309740","a, b, c, d = map(int, input().split())if (a + b + c + d) >= 2 and not (a and b) and not (b and c) and not (c and d):print(""YES"")else:print(""NO"")","1.0"
"c8153069-3661-4c48-8764-5e3f51309740","
a, b, c, d = map(int, input().split())
count = a + b + c + d
if count >= 2 and not (a and b) and not (b and c) and not (c and d):
    print(""YES"")
else:
    print(""NO"")
","1.0"
"ac6535b5-675c-452f-b494-e04adb74dbac","n, k = map(int, input().split())max_winners = n // 2diplomas = min(max_winners // (k + 1), n // (k + 1))certificates = k * diplomasif diplomas + certificates > max_winners:certificates = max_winners - diplomasif diplomas + certificates < 0:diplomas, certificates = 0, 0nothing = n - diplomas - certificatesprint(diplomas, certificates, nothing)","1.0"
"ac6535b5-675c-452f-b494-e04adb74dbac","
n, k = map(int, input().split())
max_winners = n // 2
diplomas = max_winners // (k + 1)
certificates = k * diplomas
if diplomas + certificates > max_winners:
    certificates = max_winners - diplomas
if diplomas + certificates > max_winners:
    diplomas = max_winners - certificates
nothing = n - (diplomas + certificates)
print(diplomas, certificates, nothing)
","1.0"
"ac6535b5-675c-452f-b494-e04adb74dbac","
n, k = map(int, input().split())
max_winners = n // 2
diplomas = max_winners // (k + 1)
certificates = k * diplomas
if diplomas + certificates > max_winners:
    certificates = max_winners - diplomas
if diplomas + certificates > max_winners:
    diplomas = max_winners - certificates
nothing = n - (diplomas + certificates)
print(diplomas, certificates, nothing)
","1.0"
"f4973e49-2496-4d59-b97a-d64971522a3d","
def find_key(N, P):
    if P == 0:
        return 0
    if N == 1:
        return P
    factors = []
    for i in range(1, int(P**0.5) + 1):
        while P % i == 0:
            factors.append(i)
            P //= i
    if len(factors) < N:
        return -1
    factors.sort(reverse=True)
    while len(factors) > N:
        factors[-2] *= factors[-1]
        factors.pop()
    return sum(factors)

input_data = input().strip()
N, P = map(int, input_data.split())
print(find_key(N, P))
","1.0"
"f4973e49-2496-4d59-b97a-d64971522a3d","
def find_key(N, P):
    if P == 0:
        return 0
    if N == 1:
        return P
    result = 0
    for i in range(1, P + 1):
        if P % i == 0:
            count = P // i
            if count + 1 >= N:
                result = max(result, i + (count - (N - 1)))
    return result

input_data = input().strip()
N, P = map(int, input_data.split())
print(find_key(N, P))
","1.0"
"f4973e49-2496-4d59-b97a-d64971522a3d","
def find_key(N, P):
    if P == 0:
        return 0
    if N == 1:
        return P
    factors = []
    for i in range(1, int(P**0.5) + 1):
        while P % i == 0:
            factors.append(i)
            P //= i
    if len(factors) < N:
        return -1
    factors.sort(reverse=True)
    while len(factors) > N:
        factors[-2] *= factors[-1]
        factors.pop()
    return sum(factors)

input_data = input().strip()
N, P = map(int, input_data.split())
print(find_key(N, P))
","1.0"
"20829eaa-7182-4890-8b7e-ec2f50debde8","```
pythondef
 gcdN(a,, K b =):
 map   (int while, b input:
().       split a())
,def b gcd =(a b,, b a):
 %    b while
 b   :
 return        a a

,N b, = K b =, map a(int %, b input
().   split return())
 al
cml =cm N = * ( KN // * gcd K(N), // K gcd)
(Nprint,(l Kcm)
)
print```(lcm)
","1.0"
"20829eaa-7182-4890-8b7e-ec2f50debde8","
N, K = map(int, input().split())
from math import gcd
lcm = (N * K) // gcd(N, K)
print(lcm)
","1.0"
"20829eaa-7182-4890-8b7e-ec2f50debde8","
N, K = map(int, input().split())
from math import gcd
lcm = (N * K) // gcd(N, K)
print(lcm)
","1.0"
"de810164-5bf4-4c23-ad28-410552b3d77c","
t = int(input())
for _ in range(t):
    x = input().strip()
    digit = x[0]
    length = len(x)
    total_keystrokes = 0
    for i in range(1, 10):
        total_keystrokes += i
        if str(i) * length == x:
            break
    print(total_keystrokes)
","1.0"
"de810164-5bf4-4c23-ad28-410552b3d77c","
t = int(input())
for _ in range(t):
    x = input().strip()
    digit = int(x[0])
    count = 0
    for i in range(1, digit + 1):
        count += i * 4
    count += len(x)
    print(count)
","1.0"
"de810164-5bf4-4c23-ad28-410552b3d77c","
t = int(input())
for _ in range(t):
    x = input().strip()
    digit = x[0]
    count = int(digit)
    total_keystrokes = 0
    for i in range(1, count + 1):
        total_keystrokes += i * len(str(int(digit) * i))
    print(total_keystrokes)
","1.0"
"d0bda657-ffb6-4ebf-b518-46e59186d308","
n = int(input())
friends = [tuple(map(int, input().split())) for _ in range(n)]

total_width = sum(w for w, h in friends)
max_heights = [max(friends[i][1] for i in range(n) if i != j) for j in range(n)]

result = [total_width - friends[j][0] * max_heights[j] for j in range(n)]
print(' '.join(map(str, result)))
","1.0"
"d0bda657-ffb6-4ebf-b518-46e59186d308","
n = int(input())
friends = [tuple(map(int, input().split())) for _ in range(n)]

total_width = sum(w for w, h in friends)
max_heights = [max(friends[j][1] for j in range(n) if j != i) for i in range(n)]

result = [total_width - friends[i][0] + max_heights[i] * (total_width - friends[i][0]) for i in range(n)]
print(' '.join(map(str, result)))
","1.0"
"d0bda657-ffb6-4ebf-b518-46e59186d308","
n = int(input())
friends = [tuple(map(int, input().split())) for _ in range(n)]

total_width = sum(w for w, h in friends)
max_heights = [max(friends[j][1] for j in range(n) if j != i) for i in range(n)]

result = [total_width - friends[i][0] + max_heights[i] * (total_width - friends[i][0]) for i in range(n)]
print(' '.join(map(str, result)))
","1.0"
"86c5916f-839d-4d9b-b608-2c25b2a5d6f3","
H = int(input())
max_ticket = 0

for i in range(10000):
    ticket = str(i).zfill(4)
    first_sum = int(ticket[0]) + int(ticket[1])
    last_sum = int(ticket[2]) + int(ticket[3])
    combined = str(first_sum) + str(last_sum)
    if int(''.join(sorted(combined, reverse=True))) == H:
        max_ticket = max(max_ticket, i)

print(max_ticket)
","1.0"
"86c5916f-839d-4d9b-b608-2c25b2a5d6f3","def strange_lottery(num):
    max_result = 0
    for i in range(10000):
        ticket = str(i).zfill(4)
        result = sorted(int(ticket[:2]) + int(ticket[2:]))
        if result == num and result > max_result:
            max_result = result
    return max_result if max_result else 0

H = int(input())
print(strange_lottery(H))
\n}","1.0"
"86c5916f-839d-4d9b-b608-2c25b2a5d6f3","
H = int(input())
max_ticket = 0

for i in range(10000):
    ticket = str(i).zfill(4)
    first_sum = int(ticket[0]) + int(ticket[1])
    last_sum = int(ticket[2]) + int(ticket[3])
    combined = str(first_sum) + str(last_sum)
    if ''.join(sorted(combined, reverse=True)) == str(H):
        max_ticket = max(max_ticket, i)

print(max_ticket)
","1.0"
"b9308722-8825-4c03-a04b-0e20c61a977c","
n, a, b, c = map(int, input().split())
dp = [-1] * (n + 1)
dp[0] = 0

for i in range(1, n + 1):
    if i >= a and dp[i - a] != -1:
        dp[i] = max(dp[i], dp[i - a] + 1)
    if i >= b and dp[i - b] != -1:
        dp[i] = max(dp[i], dp[i - b] + 1)
    if i >= c and dp[i - c] != -1:
        dp[i] = max(dp[i], dp[i - c] + 1)

print(dp[n])
","1.0"
"b9308722-8825-4c03-a04b-0e20c61a977c","
n, a, b, c = map(int, input().split())
dp = [-1] * (n + 1)
dp[0] = 0

for i in range(n + 1):
    if dp[i] != -1:
        if i + a <= n:
            dp[i + a] = max(dp[i + a], dp[i] + 1)
        if i + b <= n:
            dp[i + b] = max(dp[i + b], dp[i] + 1)
        if i + c <= n:
            dp[i + c] = max(dp[i + c], dp[i] + 1)

print(dp[n])
","1.0"
"b9308722-8825-4c03-a04b-0e20c61a977c","
n, a, b, c = map(int, input().split())
dp = [-1] * (n + 1)
dp[0] = 0

for i in range(n + 1):
    if dp[i] != -1:
        if i + a <= n:
            dp[i + a] = max(dp[i + a], dp[i] + 1)
        if i + b <= n:
            dp[i + b] = max(dp[i + b], dp[i] + 1)
        if i + c <= n:
            dp[i + c] = max(dp[i + c], dp[i] + 1)

print(dp[n])
","1.0"
"4769a9c2-112a-4210-bc3f-ca1162d376ea","
M, N = map(int, input().split())
print((M * N) // 2)
","1.0"
"4769a9c2-112a-4210-bc3f-ca1162d376ea","
M, N = map(int, input().split())
print((M * N) // 2)
","1.0"
"4769a9c2-112a-4210-bc3f-ca1162d376ea","
M, N = map(int, input().split())
print((M * N) // 2)
","1.0"
"6cef62b6-dffa-42fb-95a0-17f9f2b300c2","
n = int(input())
for i in range(int(n**0.5), 0, -1):
    if n % i == 0:
        a, b = i, n // i
        break
print(a, b)
","1.0"
"6cef62b6-dffa-42fb-95a0-17f9f2b300c2","
def monitor_size(n):
    for a in range(1, int(n**0.5) + 1):
        if n % a == 0:
            b = n // a
            if a <= b:
                rows, cols = a, b
    print(rows, cols)

n = int(input())
monitor_size(n)
","1.0"
"6cef62b6-dffa-42fb-95a0-17f9f2b300c2","
n = int(input())
a, b = 1, n
for i in range(1, int(n**0.5) + 1):
    if n % i == 0:
        a, b = i, n // i
        if a > b:
            a, b = b, a
print(a, b)
","1.0"
"ae521e91-eb31-4263-8069-60d54d9783e6","
n = int(input())
arr = list(map(int, input().split()))
result = []
seen = set()

for i in range(n-1, -1, -1):
    if arr[i] not in seen:
        seen.add(arr[i])
        result.append(arr[i])

result.reverse()
print(len(result))
print(' '.join(map(str, result)))
","1.0"
"ae521e91-eb31-4263-8069-60d54d9783e6","n = int(input())arr = list(map(int, input().split()))result = []seen = set()for i in range(n-1, -1, -1):if arr[i] not in seen:seen.add(arr[i])result.append(arr[i])result.reverse()print(len(result))print(' '.join(map(str, result)))","1.0"
"ae521e91-eb31-4263-8069-60d54d9783e6","
n = int(input())
arr = list(map(int, input().split()))
result = []
seen = set()

for i in range(n-1, -1, -1):
    if arr[i] not in seen:
        seen.add(arr[i])
        result.append(arr[i])

result.reverse()
print(len(result))
print(' '.join(map(str, result)))
","1.0"
"2a29bf6c-714e-4d56-83a8-0120f9ce6f9b","
def find_shortest_substring(t, strings):
    results = []
    for s in strings:
        n = len(s)
        min_length = n + 1
        count = [0, 0, 0, 0]
        left = 0
        for right in range(n):
            count[int(s[right])] += 1
            while count[1] > 0 and count[2] > 0 and count[3] > 0:
                min_length = min(min_length, right - left + 1)
                count[int(s[left])] -= 1
                left += 1
        results.append(min_length if min_length <= n else 0)
    return results

# Input and Output handling
t = int(input().strip())
strings = [input().strip() for _ in range(t)]
results = find_shortest_substring(t, strings)
for result in results:
    print(result)
","1.0"
"2a29bf6c-714e-4d56-83a8-0120f9ce6f9b","t = int(input())
for _ in range(t):
    s = input()
    res = 0
    cur = {'1': -1, '2': -1, '3': -1}
    for i in range(len(s)):
        cur[s[i]] = i
        if len(cur) == 3:
            res = max(res, i - min(cur.values()))
            cur[s[i]] = -1
    print(res)
####","1.0"
"2a29bf6c-714e-4d56-83a8-0120f9ce6f9b","
t = int(input())
for _ in range(t):
    s = input().strip()
    n = len(s)
    left = 0
    count = {}
    min_length = float('inf')
    
    for right in range(n):
        count[s[right]] = count.get(s[right], 0) + 1
        
        while len(count) == 3:
            min_length = min(min_length, right - left + 1)
            count[s[left]] -= 1
            if count[s[left]] == 0:
                del count[s[left]]
            left += 1
            
    print(min_length if min_length != float('inf') else 0)
","1.0"
"dc87e1dc-871d-4d96-9273-255c1c5db049","
def count_pieces(grid):
    def dfs(x, y):
        stack = [(x, y)]
        while stack:
            cx, cy = stack.pop()
            if 0 <= cx < len(grid) and 0 <= cy < len(grid[0]) and grid[cx][cy] == '#':
                grid[cx][cy] = '.'
                stack.extend([(cx-1, cy), (cx+1, cy), (cx, cy-1), (cx, cy+1)])
    
    n, m = map(int, input().split())
    grid = [list(input().strip()) for _ in range(n)]
    pieces = 0

    for i in range(n):
        for j in range(m):
            if grid[i][j] == '#':
                pieces += 1
                dfs(i, j)
    
    print(pieces)

count_pieces([[]])
","1.0"
"dc87e1dc-871d-4d96-9273-255c1c5db049","
def count_pieces(N, M, grid):
    visited = [[False] * M for _ in range(N)]
    
    def dfs(x, y):
        stack = [(x, y)]
        while stack:
            cx, cy = stack.pop()
            for dx, dy in [(-1, 0), (1, 0), (0, -1), (0, 1)]:
                nx, ny = cx + dx, cy + dy
                if 0 <= nx < N and 0 <= ny < M and not visited[nx][ny] and grid[nx][ny] == '#':
                    visited[nx][ny] = True
                    stack.append((nx, ny))

    pieces = 0
    for i in range(N):
        for j in range(M):
            if grid[i][j] == '#' and not visited[i][j]:
                visited[i][j] = True
                dfs(i, j)
                pieces += 1

    return pieces

N, M = map(int, input().split())
grid = [input().strip() for _ in range(N)]
print(count_pieces(N, M, grid))
","1.0"
"dc87e1dc-871d-4d96-9273-255c1c5db049","
def count_pieces(N, M, grid):
    visited = [[False] * M for _ in range(N)]
    
    def dfs(x, y):
        if x < 0 or x >= N or y < 0 or y >= M or visited[x][y] or grid[x][y] == '.':
            return
        visited[x][y] = True
        dfs(x + 1, y)
        dfs(x - 1, y)
        dfs(x, y + 1)
        dfs(x, y - 1)

    pieces = 0
    for i in range(N):
        for j in range(M):
            if grid[i][j] == '#' and not visited[i][j]:
                dfs(i, j)
                pieces += 1

    return pieces


N, M = map(int, input().split())
grid = [input().strip() for _ in range(N)]
print(count_pieces(N, M, grid))
","1.0"
"0dca2e13-f1bc-4578-8818-48b97c2d7490","
def count_sheets(A, B):
    start_sheet = (A + 1) // 2
    end_sheet = (B + 1) // 2
    return end_sheet - start_sheet + 1

A, B = map(int, input().split())
print(count_sheets(A, B))
","1.0"
"0dca2e13-f1bc-4578-8818-48b97c2d7490","
A, B = map(int, input().split())
sheets_A = (A + 1) // 2
sheets_B = (B + 1) // 2
print(sheets_B - sheets_A + (A % 2 == 1))
","1.0"
"0dca2e13-f1bc-4578-8818-48b97c2d7490","
A, B = map(int, input().split())
if A > B:
    A, B = B, A
sheets_A = (A + 1) // 2
sheets_B = (B + 1) // 2
print(sheets_B - sheets_A + (A % 2 == 1))
","1.0"
"f09f326d-8329-4d39-b628-04a1b3d99f07","
n, k = map(int, input().split())
red_bundles = (2 * n + k - 1) // k
green_bundles = (5 * n + k - 1) // k
blue_bundles = (8 * n + k - 1) // k
total_bundles = red_bundles + green_bundles + blue_bundles
print(total_bundles)
","1.0"
"f09f326d-8329-4d39-b628-04a1b3d99f07","
N, K = map(int, input().split())
red_needed = 2 * N
green_needed = 5 * N
blue_needed = 8 * N
red_bundles = (red_needed + K - 1) // K
green_bundles = (green_needed + K - 1) // K
blue_bundles = (blue_needed + K - 1) // K
total_bundles = red_bundles + green_bundles + blue_bundles
print(total_bundles)
","1.0"
"f09f326d-8329-4d39-b628-04a1b3d99f07","
N, K = map(int, input().split())
red_needed = 2 * N
green_needed = 5 * N
blue_needed = 8 * N
red_bundles = (red_needed + K - 1) // K
green_bundles = (green_needed + K - 1) // K
blue_bundles = (blue_needed + K - 1) // K
total_bundles = red_bundles + green_bundles + blue_bundles
print(total_bundles)
","1.0"
"83c25cac-cf59-44a9-9214-be35c0bd5e06","
a = int(input())
b = int(input())
c = int(input())

weights = set()

for i in [-1, 0, 1]:
    for j in [-1, 0, 1]:
        for k in [-1, 0, 1]:
            weight = i * a + j * b + k * c
            if weight > 0:
                weights.add(weight)

print(len(weights))
","1.0"
"83c25cac-cf59-44a9-9214-be35c0bd5e06","
def count_weights(a, b, c):
    possible_weights = set()
    for i in range(-1, 2):
        for j in range(-1, 2):
            for k in range(-1, 2):
                weight = i * a + j * b + k * c
                if weight > 0:
                    possible_weights.add(weight)
    return len(possible_weights)

a = int(input())
b = int(input())
c = int(input())
print(count_weights(a, b, c))
","1.0"
"83c25cac-cf59-44a9-9214-be35c0bd5e06","
A = int(input())
B = int(input())
C = int(input())

weights = {0}

for w in (A, B, C):
    new_weights = set()
    for weight in weights:
        new_weights.add(weight + w)
        new_weights.add(weight - w)
    weights.update(new_weights)

positive_weights = {w for w in weights if w > 0}
print(len(positive_weights))
","1.0"
"5d367d53-2714-49cb-b00d-72626739e49c","N = int(input())S = input().strip()files = 0for operation in S:if operation == ""+"":files += 1elif operation == ""-"":files = max(0, files - 1)print(files)","1.0"
"5d367d53-2714-49cb-b00d-72626739e49c","def min_files_in_folder(n, s):
    result = 0
    x = 0
    for i in s:
        if i == '-':
            x += 1
        else:
            result += 1
            x = max(0, x - 1)
    return result + x

n = int(input())
s = input()
print(min_files_in_folder(n, s))
exit()","1.0"
"5d367d53-2714-49cb-b00d-72626739e49c","
N = int(input())
S = input()
additions = S.count('+')
deletions = S.count('-')
min_files = max(0, additions - deletions)
print(min_files + deletions)
","1.0"
"9095afd4-9e40-4925-89d0-90b1f67e8e0e","
N, M = map(int, input().split())
grades = [input().strip() for _ in range(N)]
successful_students = set()

for j in range(M):
    max_grade = '0'
    for i in range(N):
        if grades[i][j] > max_grade:
            max_grade = grades[i][j]
    
    for i in range(N):
        if grades[i][j] == max_grade:
            successful_students.add(i)

print(len(successful_students))
","1.0"
"9095afd4-9e40-4925-89d0-90b1f67e8e0e","N, M = map(int, input().split())grades = [input().strip() for _ in range(N)]successful_students = set()for j in range(M):max_grade = '0'for i in range(N):if grades[i][j] > max_grade:max_grade = grades[i][j]for i in range(N):if grades[i][j] == max_grade:successful_students.add(i)print(len(successful_students))","1.0"
"9095afd4-9e40-4925-89d0-90b1f67e8e0e","
N, M = map(int, input().split())
grades = [input().strip() for _ in range(N)]
successful_students = set()

for j in range(M):
    max_grade = '0'
    for i in range(N):
        if grades[i][j] > max_grade:
            max_grade = grades[i][j]
    
    for i in range(N):
        if grades[i][j] == max_grade:
            successful_students.add(i)

print(len(successful_students))
","1.0"
"33a72323-4374-42f2-8f8b-28a1ec69a960","
S = input().strip()
unique_nicknames = set()

for i in range(len(S)):
    for j in range(i + 1, len(S) + 1):
        unique_nicknames.add(S[i:j])

print(len(unique_nicknames))
","1.0"
"33a72323-4374-42f2-8f8b-28a1ec69a960","
def count_unique_nicknames(s):
    unique_nicknames = set()
    length = len(s)
    for i in range(length):
        for j in range(i, length):
            unique_nicknames.add(s[i:j+1])
    return len(unique_nicknames)

s = input().strip()
print(count_unique_nicknames(s))
","1.0"
"33a72323-4374-42f2-8f8b-28a1ec69a960","
def unique_nicknames(S):
    unique_nicknames_set = set()
    length = len(S)
    
    for i in range(length):
        for j in range(i, length):
            unique_nicknames_set.add(S[i:j + 1])
    
    return len(unique_nicknames_set)

S = input().strip()
print(unique_nicknames(S))
","1.0"
"267f2223-0096-4b57-bc54-1c2372772391","def can_build_tower(x):if x < 1:return ""NO""if x == 1:return ""YES""if x <= 6:return ""YES""if (x - 1) % 14 == 0 or (x - 2) % 14 == 0 or (x - 3) % 14 == 0 or (x - 4) % 14 == 0 or (x - 5) % 14 == 0:return ""YES""return ""NO""T = int(input())favorite_numbers = list(map(int, input().split()))results = [can_build_tower(x) for x in favorite_numbers]print(""\n"".join(results))","1.0"
"267f2223-0096-4b57-bc54-1c2372772391","
T = int(input())
x = list(map(int, input().split()))
results = []

for xi in x:
    if xi < 6:
        results.append(""NO"")
    elif (xi - 6) % 14 == 0:
        results.append(""YES"")
    else:
        results.append(""NO"")

print(""\n"".join(results))
","1.0"
"267f2223-0096-4b57-bc54-1c2372772391","
T = int(input())
favorite_numbers = list(map(int, input().split()))

results = []
for x in favorite_numbers:
    if x < 6:
        results.append(""NO"")
    elif (x - 6) % 14 == 0:
        results.append(""YES"")
    else:
        results.append(""NO"")

print(""\n"".join(results))
","1.0"
"7615eb4d-49ce-4586-825b-56ea69f157b5","
N, M, K = map(int, input().split())
result = pow(N, M, 10**K)
print(result)
","1.0"
"7615eb4d-49ce-4586-825b-56ea69f157b5","N, M, K = map(int, input().split())result = pow(N, M, 10**K)print(result)","1.0"
"7615eb4d-49ce-4586-825b-56ea69f157b5","
def last_k_digits_of_power(N, M, K):
    mod = 10 ** K
    result = 1
    for _ in range(M):
        result = (result * N) % mod
    return result

N, M, K = map(int, input().split())
print(last_k_digits_of_power(N, M, K))
","1.0"
"1877a515-ff97-43f2-8362-bc2952a26b5e","
def count_ways(X):
    count = 0
    for a in range(1, X // 4 + 1):
        for b in range(a, (X - a) // 3 + 1):
            for c in range(b, (X - a - b) // 2 + 1):
                d = X - a - b - c
                if d >= c:
                    count += 1
    return count

X = int(input())
print(count_ways(X))
","1.0"
"1877a515-ff97-43f2-8362-bc2952a26b5e","def main():
    x = int(input())
    count = 0

    for a in range(1, x // 4 + 1):
        for b in range(a, x // 3 + 1):
            for c in range(b, x // 2 + 1):
                d = x - a - b - c
                
                if d >= c:
                    count += 1

    print(count)

if __name__ == ""__main__"":
    main()
","1.0"
"bfa57871-3996-4c10-b9f9-fcb21a8e6518","
def minimum_time(N, A, B):
    low, high = 1, N

    def can_complete_in_time(time):
        return (time // A + time // B) * A * B >= N * A * B

    while low < high:
        mid = (low + high) // 2
        if can_complete_in_time(mid):
            high = mid
        else:
            low = mid + 1

    return low

# Examples
print(minimum_time(10, 2, 3))  # Output: 2
print(minimum_time(5, 1, 1))   # Output: 3
","1.0"
"bfa57871-3996-4c10-b9f9-fcb21a8e6518","def min_time(N, A, B):left, right = 1, Nwhile left < right:mid = (left + right) // 2if (mid // A) + (mid // B) >= N:right = midelse:left = mid + 1return leftN, A, B = map(int, input().split())print(min_time(N, A, B))","1.0"
"bfa57871-3996-4c10-b9f9-fcb21a8e6518","
def min_time(N, A, B):
    left, right = 1, N
    while left < right:
        mid = (left + right) // 2
        if (mid // A) + (mid // B) >= N:
            right = mid
        else:
            left = mid + 1
    return left

N, A, B = map(int, input().split())
print(min_time(N, A, B))
","1.0"
"461e80bc-c9f7-403f-9a42-3f1d08a78b1a","
N = int(input())
guests = list(map(int, input().split()))
counts = {}
for i in range(N):
    counts[guests[i]] = counts.get(guests[i], 0) + 1
    majority_type = -1
    for t, c in counts.items():
        if c > (i + 1) // 2:
            majority_type = t
    print(majority_type, end=' ')
","1.0"
"461e80bc-c9f7-403f-9a42-3f1d08a78b1a","N = int(input())types = list(map(int, input().split()))count = {}party_type = []for i in range(N):robot_type = types[i]if robot_type in count:count[robot_type] += 1else:count[robot_type] = 1half_guests = (i + 1) // 2current_party_type = -1for k, v in count.items():if v > half_guests:current_party_type = kbreakparty_type.append(current_party_type)print(' '.join(map(str, party_type)))","1.0"
"461e80bc-c9f7-403f-9a42-3f1d08a78b1a","
N = int(input())
guests = list(map(int, input().split()))
count = {}
result = []
for i in range(N):
    guest_type = guests[i]
    if guest_type in count:
        count[guest_type] += 1
    else:
        count[guest_type] = 1
    majority = (i + 1) // 2
    party_type = -1
    for k, v in count.items():
        if v > majority:
            party_type = k
            break
    result.append(party_type)
print(' '.join(map(str, result)))
","1.0"
"4b81460a-5cad-47e0-b9ab-83fcd6a089ea","def count_ladders(n):dp = [0] * (n + 1)dp[0] = 1for i in range(1, n + 1):for j in range(i):dp[i] += dp[j]return dp[n]n = int(input())print(count_ladders(n))","1.0"
"4b81460a-5cad-47e0-b9ab-83fcd6a089ea","def count_ladders(n):dp = [0] * (n + 1)dp[0] = 1for i in range(1, n + 1):for j in range(i):dp[i] += dp[j]return dp[n]n = int(input())print(count_ladders(n))","1.0"
"4b81460a-5cad-47e0-b9ab-83fcd6a089ea","
def count_ladders(n):
    dp = [0] * (n + 1)
    dp[0] = 1
    for i in range(1, n + 1):
        for j in range(i):
            dp[i] += dp[j]
    return dp[n]

n = int(input())
print(count_ladders(n))
","1.0"
"ef273600-92cf-4397-843c-ed406d948390","
a, b = map(int, input().split())
if a == b:
    print(""No"")
else:
    n = abs(b - a)
    if n % 2 == 0:
        print(n * 2)
    else:
        print(""No"")
","1.0"
"ef273600-92cf-4397-843c-ed406d948390","A, B = map(int, input().split())if A == B or (A + B) % 2 != 0:print(""No"")else:N = (A + B)print(N)","1.0"
"ef273600-92cf-4397-843c-ed406d948390","
a, b = map(int, input().split())

if a == b or (a + b) % 2 != 0:
    print(""No"")
else:
    n = abs(a - b) * 2
    print(n)
","1.0"
"2289a224-3dec-40f4-935f-a614d8469cf0","a = int(input())
b = int(input())
c = int(input())
total_cost = 4 * a + 2 * b + 2 * c
print(total_cost)
","1.0"
"2289a224-3dec-40f4-935f-a614d8469cf0","
a = int(input())
b = int(input())
c = int(input())
total_cost = 2 * (a + b) + 2 * c
print(total_cost)
","1.0"
"2289a224-3dec-40f4-935f-a614d8469cf0","
a = int(input())
b = int(input())
c = int(input())
total_cost = 2 * (a + b) + 2 * c
print(total_cost)
","1.0"
"54c95a3e-10bc-4388-9722-619f9c35563c","
A = int(input())
B = int(input())
K = int(input())
total_weight = A + B
my_payment = (K * A) / total_weight
friend_payment = (K * B) / total_weight
print(f""{my_payment:.2f} {friend_payment:.2f}"")
","1.0"
"54c95a3e-10bc-4388-9722-619f9c35563c","
A = int(input())
B = int(input())
K = int(input())

total_weight = A + B
my_payment = (K * A) / total_weight
friend_payment = (K * B) / total_weight

print(f""{my_payment:.2f} {friend_payment:.2f}"")
","1.0"
"54c95a3e-10bc-4388-9722-619f9c35563c","
A = int(input())
B = int(input())
K = int(input())

total_weight = A + B
my_payment = (K * A) / B
friend_payment = K + my_payment

my_payment = round(my_payment, 2)
friend_payment = round(friend_payment, 2)

print(f""{my_payment:.2f} {friend_payment:.2f}"")
","1.0"
"1d86615d-36be-40a7-9d08-193f1af8b6b8","
A, B, C, D = map(int, input().split())
total_pillars = len(set(range(A, B + 1)).union(set(range(C, D + 1))))
print(total_pillars)
","1.0"
"1d86615d-36be-40a7-9d08-193f1af8b6b8","
A, B, C, D = map(int, input().split())
start = min(A, C)
end = max(B, D)
total_pillars = (end - start + 1) - max(0, (B - C + 1) + (D - A + 1) - (end - start + 1))
print(total_pillars)
","1.0"
"1d86615d-36be-40a7-9d08-193f1af8b6b8","
A, B, C, D = map(int, input().split())
start = min(A, B, C, D)
end = max(A, B, C, D)
total_pillars = end - start + 1
print(total_pillars)
","1.0"
"6979410b-f2cb-41d6-8e3b-dabf463e683b","
def count_floors(commands):
    visited = set()
    current_floor = 0
    visited.add(current_floor)
    
    for command in commands:
        if command == 'U':
            current_floor += 1
        elif command == 'D':
            current_floor -= 1
        visited.add(current_floor)
    
    return len(visited)

input_commands = input()
print(count_floors(input_commands))
","1.0"
"6979410b-f2cb-41d6-8e3b-dabf463e683b","
def count_visited_floors(commands):
    current_floor = 0
    visited_floors = set()
    visited_floors.add(current_floor)
    
    for command in commands:
        if command == 'U':
            current_floor += 1
        elif command == 'D':
            current_floor -= 1
        visited_floors.add(current_floor)
    
    return len(visited_floors)

commands = input().strip()
print(count_visited_floors(commands))
","1.0"
"6979410b-f2cb-41d6-8e3b-dabf463e683b","
def count_visited_floors(commands):
    current_floor = 0
    visited_floors = set()
    visited_floors.add(current_floor)
    
    for command in commands:
        if command == 'U':
            current_floor += 1
        elif command == 'D':
            current_floor -= 1
        visited_floors.add(current_floor)
    
    return len(visited_floors)

commands = input().strip()
print(count_visited_floors(commands))
","1.0"
"787d2a09-3617-4050-820e-a01d43b2b188","
def count_trailing_zeros_in_prime_product(A, B):
    def is_prime(n):
        if n <= 1:
            return False
        for i in range(2, int(n**0.5) + 1):
            if n % i == 0:
                return False
        return True

    count_of_2 = 0
    count_of_5 = 0

    for num in range(A, B + 1):
        if is_prime(num):
            while num % 2 == 0:
                count_of_2 += 1
                num //= 2
            while num % 5 == 0:
                count_of_5 += 1
                num //= 5

    return min(count_of_2, count_of_5)

A = int(input())
B = int(input())
print(count_trailing_zeros_in_prime_product(A, B))
","1.0"
"787d2a09-3617-4050-820e-a01d43b2b188","
def is_prime(n):
    if n <= 1:
        return False
    for i in range(2, int(n**0.5) + 1):
        if n % i == 0:
            return False
    return True

def count_trailing_zeros(a, b):
    count_2 = 0
    count_5 = 0
    for num in range(a, b + 1):
        if is_prime(num):
            temp = num
            while temp % 2 == 0:
                count_2 += 1
                temp //= 2
            temp = num
            while temp % 5 == 0:
                count_5 += 1
                temp //= 5
    return min(count_2, count_5)

a = int(input())
b = int(input())
print(count_trailing_zeros(a, b))
","1.0"
"787d2a09-3617-4050-820e-a01d43b2b188","
def is_prime(n):
    if n <= 1:
        return False
    for i in range(2, int(n**0.5) + 1):
        if n % i == 0:
            return False
    return True

def count_trailing_zeros(a, b):
    count_2 = 0
    count_5 = 0
    for num in range(a, b + 1):
        if is_prime(num):
            temp = num
            while temp % 2 == 0:
                count_2 += 1
                temp //= 2
            temp = num
            while temp % 5 == 0:
                count_5 += 1
                temp //= 5
    return min(count_2, count_5)

a = int(input())
b = int(input())
print(count_trailing_zeros(a, b))
","1.0"
"6381eb46-a216-455c-ab82-3b703f2da42a","
buildings = list(map(int, input().split()))
max_distance = 0
house_number = 0

for i in range(10):
    if buildings[i] == 1:
        min_distance = 10
        for j in range(10):
            if buildings[j] == 2:
                min_distance = min(min_distance, abs(i - j))
        if min_distance > max_distance:
            max_distance = min_distance
            house_number = i + 1

print(max_distance, house_number)
","1.0"
"6381eb46-a216-455c-ab82-3b703f2da42a","buildings = list(map(int, input().split()))max_distance = 0house_number = 0for i in range(len(buildings)):if buildings[i] == 1:distance = float('inf')for j in range(len(buildings)):if buildings[j] == 2:distance = min(distance, abs(i - j))if distance > max_distance:max_distance = distancehouse_number = i + 1print(max_distance, house_number)","1.0"
"6381eb46-a216-455c-ab82-3b703f2da42a","
buildings = list(map(int, input().split()))
max_distance = 0
house_number = 0

for i in range(10):
    if buildings[i] == 1:
        distance = float('inf')
        for j in range(10):
            if buildings[j] == 2:
                distance = min(distance, abs(i - j))
        if distance > max_distance:
            max_distance = distance
            house_number = i + 1

print(max_distance, house_number)
","1.0"
"31c3dbe2-53d4-4355-a73f-50d94fe0dd67","
t = int(input())
results = []
count = 0
num = 1
while count < 1000:
    if num % 3 != 0 and num % 10 != 3:
        results.append(num)
        count += 1
    num += 1
for _ in range(t):
    k = int(input())
    print(results[k - 1])
","1.0"
"31c3dbe2-53d4-4355-a73f-50d94fe0dd67","
def find_kth_element(t, ks):
    result = []
    count = 0
    num = 1
    while count < max(ks):
        if num % 3 != 0 and num % 10 != 3:
            count += 1
            if count in ks:
                result.append(num)
        num += 1
    return result

t = int(input())
ks = [int(input()) for _ in range(t)]
results = find_kth_element(t, ks)
for res in results:
    print(res)
","1.0"
"31c3dbe2-53d4-4355-a73f-50d94fe0dd67","
t = int(input())
results = []
count = 0
num = 1
while count < 1000:
    if num % 3 != 0 and num % 10 != 3:
        results.append(num)
        count += 1
    num += 1
for _ in range(t):
    k = int(input())
    print(results[k - 1])
","1.0"
"56188e25-bcd8-4838-a078-f9da9fa73c8b","
def decrypt(message):
    stack = []
    for char in message:
        if stack and stack[-1] == char:
            stack.pop()
        else:
            stack.append(char)
    return ''.join(stack)

message = input().strip()
print(decrypt(message))
","1.0"
"56188e25-bcd8-4838-a078-f9da9fa73c8b","def decrypt(s):
    r = []
    while s:
        else:
            if s[0] == prev:
                r.append(prev)
                prev = ''
            s = s[1:]
    else:
 return ''.join(r)
    
s = input()
print(decrypt(s))
)","1.0"
"56188e25-bcd8-4838-a078-f9da9fa73c8b","
def decrypt_message(s):
    stack = []
    for char in s:
        if stack and stack[-1] == char:
            stack.pop()
        else:
            stack.append(char)
    return ''.join(stack)

input_string = input().strip()
print(decrypt_message(input_string))
","1.0"
"40f61f4c-c5c5-4f34-89bf-f0ca312a3c75","N = int(input())buttons = list(map(int, input().split()))odd_count = sum(1 for x in buttons if x % 2 != 0)even_count = N - odd_countcombinations = odd_count * even_countprint(combinations)","1.0"
"40f61f4c-c5c5-4f34-89bf-f0ca312a3c75","
N = int(input())
buttons = list(map(int, input().split()))
odd_count = sum(1 for x in buttons if x % 2 != 0)
even_count = N - odd_count
combinations = odd_count * even_count
print(combinations)
","1.0"
"40f61f4c-c5c5-4f34-89bf-f0ca312a3c75","
N = int(input())
buttons = list(map(int, input().split()))

odd_count = sum(1 for x in buttons if x % 2 != 0)
even_count = N - odd_count

combinations = odd_count * even_count
print(combinations)
","1.0"
"bc87b483-769e-4df9-9463-bae5df9fb96f","
N = int(input())
if N % 3 == 0:
    print(N // 3, 0)
elif N % 5 == 0:
    print(0, N // 5)
elif N >= 8:
    blue = N // 3
    remainder = N % 3
    white = 0
    while remainder % 5 != 0 and blue > 0:
        blue -= 1
        remainder += 3
    if remainder % 5 == 0:
        white = remainder // 5
        print(blue, white)
    else:
        print(0, 0)
else:
    print(0, 0)
","1.0"
"bc87b483-769e-4df9-9463-bae5df9fb96f","N = int(input())blue = N // 7white = (N % 7) // 3if (N % 7) % 3 != 0:blue -= 1white = (N - blue * 7) // 3if blue < 0 or white < 0:print(""0 0"")else:print(blue, white)","1.0"
"bc87b483-769e-4df9-9463-bae5df9fb96f","
N = int(input())
blue = N // 7
white = (N % 7) // 3
if (N % 7) % 3 != 0:
    blue -= 1
    white = (N - blue * 7) // 3
if blue < 0 or white < 0:
    print(""0 0"")
else:
    print(blue, white)
","1.0"
"13f1bd7b-dd8d-410f-968b-c1be930de69c","n, k, x = map(int, input().split())a = list(map(int, input().split()))a.sort()groups = 1current_start = a[0]for i in range(1, n):if a[i] - current_start > x:groups += 1current_start = a[i]if k > 0:k -= 1current_start = a[i] - xprint(groups)","1.0"
"13f1bd7b-dd8d-410f-968b-c1be930de69c","n, k, x = map(int, input().split())a = list(map(int, input().split()))a.sort()groups = 1current_min = a[0]for i in range(1, n):if a[i] - current_min > x:needed = (a[i] - current_min - 1) // xif needed <= k:k -= neededelse:groups += 1current_min = a[i]print(groups)","1.0"
"13f1bd7b-dd8d-410f-968b-c1be930de69c","
n, k, x = map(int, input().split())
a = list(map(int, input().split()))
a.sort()

groups = 1
current_min = a[0]

for i in range(1, n):
    if a[i] - current_min > x:
        needed = (a[i] - current_min - 1) // x
        if needed <= k:
            k -= needed
        else:
            groups += 1
            current_min = a[i]

print(groups)
","1.0"
"71b7440c-fd34-4967-9b28-783a9aa1b104","def count_ways(n):if n < 3:return 0if n == 3:return 1return count_ways(n // 2) + count_ways((n + 1) // 2)n = int(input())print(count_ways(n))","1.0"
"71b7440c-fd34-4967-9b28-783a9aa1b104","
def count_ways(n):
    if n < 3:
        return 0
    elif n == 3:
        return 1
    else:
        return count_ways(n // 2) + count_ways((n + 1) // 2)

n = int(input())
print(count_ways(n))
","1.0"
"71b7440c-fd34-4967-9b28-783a9aa1b104","
def count_ways(n):
    if n < 3:
        return 0
    elif n == 3:
        return 1
    else:
        return count_ways(n // 2) + count_ways((n + 1) // 2)

n = int(input())
print(count_ways(n))
","1.0"
"65a88d3c-866e-447a-b7d0-85f05c4c6441","
N, M = map(int, input().split())
print((M + N - 1) // N)
","1.0"
"65a88d3c-866e-447a-b7d0-85f05c4c6441","
N, M = map(int, input().split())
print((M + N - 1) // N)
","1.0"
"65a88d3c-866e-447a-b7d0-85f05c4c6441","
N, M = map(int, input().split())
print((M + N - 1) // N)
","1.0"
"e0bc4009-5913-49cc-96c5-a8c4988f9103","
N, i, j = map(int, input().split())
if i > j:
    i, j = j, i
clockwise = j - i - 1
counter_clockwise = N - (j - i) - 1
print(min(clockwise, counter_clockwise))
","1.0"
"e0bc4009-5913-49cc-96c5-a8c4988f9103","
N, i, j = map(int, input().split())
if i > j:
    i, j = j, i
clockwise = j - i - 1
counter_clockwise = N - (j - i) - 1
print(min(clockwise, counter_clockwise))
","1.0"
"e0bc4009-5913-49cc-96c5-a8c4988f9103","
N, i, j = map(int, input().split())
if i > j:
    i, j = j, i
clockwise = j - i - 1
counter_clockwise = N - (j - i) - 1
print(min(clockwise, counter_clockwise))
","1.0"
"9844781d-49b1-46ec-97c8-257016eb564a","
def distance(x1, y1, x2, y2):
    return ((x2 - x1) ** 2 + (y2 - y1) ** 2) ** 0.5

n = int(input())
traps = [tuple(map(int, input().split())) for _ in range(n)]

total_distance = 0
current_x, current_y = 0, 0

for x, y in traps:
    total_distance += distance(current_x, current_y, x, y)
    current_x, current_y = x, y

total_distance += distance(current_x, current_y, 0, 0)

print(f""{total_distance:.3f}"")
","1.0"
"9844781d-49b1-46ec-97c8-257016eb564a","
import math

def calculate_distance(traps):
    total_distance = 0
    current_position = (0, 0)
    
    for trap in traps:
        total_distance += math.sqrt((trap[0] - current_position[0]) ** 2 + (trap[1] - current_position[1]) ** 2)
        current_position = trap
    
    total_distance += math.sqrt((0 - current_position[0]) ** 2 + (0 - current_position[1]) ** 2)
    
    return total_distance

def main():
    traps = []
    n = int(input())
    for _ in range(n):
        x, y = map(int, input().split())
        traps.append((x, y))
    
    distance = calculate_distance(traps)
    print(f""{distance:.3f}"")

main()
","1.0"
"9844781d-49b1-46ec-97c8-257016eb564a","
def distance(x1, y1, x2, y2):
    return ((x2 - x1) ** 2 + (y2 - y1) ** 2) ** 0.5

n = int(input())
traps = [tuple(map(int, input().split())) for _ in range(n)]
total_distance = distance(0, 0, traps[0][0], traps[0][1])

for i in range(1, n):
    total_distance += distance(traps[i-1][0], traps[i-1][1], traps[i][0], traps[i][1])

total_distance += distance(traps[-1][0], traps[-1][1], 0, 0)

print(f""{total_distance:.3f}"")
","1.0"
"db1817f8-e2ae-4d2b-8481-53c70ddc5661","
n, m = map(int, input().split())

red = green = blue = black = 0

for i in range(1, n + 1):
    for j in range(1, m + 1):
        value = i * j
        if value % 2 == 0:
            red += 1
        elif value % 3 == 0:
            green += 1
        elif value % 5 == 0:
            blue += 1
        else:
            black += 1

print(""RED :"", red)
print(""GREEN :"", green)
print(""BLUE :"", blue)
print(""BLACK :"", black)
","1.0"
"db1817f8-e2ae-4d2b-8481-53c70ddc5661","
n, m = map(int, input().split())
red, green, blue, black = 0, 0, 0, 0

for i in range(1, n + 1):
    for j in range(1, m + 1):
        value = i * j
        if value % 2 == 0:
            red += 1
        if value % 3 == 0:
            green += 1
        if value % 5 == 0:
            blue += 1

total_cells = n * m
black = total_cells - (red + green + blue)

print(f""RED : {red}"")
print(f""GREEN : {green}"")
print(f""BLUE : {blue}"")
print(f""BLACK : {black}"")
","1.0"
"db1817f8-e2ae-4d2b-8481-53c70ddc5661","
n, m = map(int, input().split())

red = green = blue = black = 0

for i in range(1, n + 1):
    for j in range(1, m + 1):
        product = i * j
        if product % 2 == 0:
            red += 1
        if product % 3 == 0:
            green += 1
        if product % 5 == 0:
            blue += 1
        if product % 2 != 0 and product % 3 != 0 and product % 5 != 0:
            black += 1

print(f""RED : {red}"")
print(f""GREEN : {green}"")
print(f""BLUE : {blue}"")
print(f""BLACK : {black}"")
","1.0"
"6f681490-aad8-4402-800a-db3570a52a8e","
a, b, c = map(int, input().split())
r = int(input())

s = (a + b + c) / 2
area = (s * (s - a) * (s - b) * (s - c)) ** 0.5
radius_of_inscribed_circle = area / s

if radius_of_inscribed_circle >= r:
    print(""YES"")
else:
    print(""NO"")
","1.0"
"6f681490-aad8-4402-800a-db3570a52a8e","
a, b, c = map(int, input().split())
r = int(input())

s = (a + b + c) / 2
area = (s * (s - a) * (s - b) * (s - c)) ** 0.5
radius_of_inscribed_circle = area / s

if radius_of_inscribed_circle >= r:
    print(""YES"")
else:
    print(""NO"")
","1.0"
"6f681490-aad8-4402-800a-db3570a52a8e","
a, b, c = map(int, input().split())
r = int(input())

s = (a + b + c) / 2
area = (s * (s - a) * (s - b) * (s - c)) ** 0.5
radius_of_inscribed_circle = area / s

if radius_of_inscribed_circle >= r:
    print(""YES"")
else:
    print(""NO"")
","1.0"
"cb0bfea6-3e23-49c9-b5f6-bec9789f82ce","
N = int(input())
counties = list(map(int, input().split()))
M = int(input())
applications = [list(map(int, input().split())) for _ in range(M)]

patrons = {}
for current, desired in applications:
    patrons[current] = desired

for i in range(N):
    while counties[i] in patrons:
        counties[i] = patrons[counties[i]]

print(' '.join(map(str, counties)))
","1.0"
"cb0bfea6-3e23-49c9-b5f6-bec9789f82ce","n = int(input())
priests = list(range(1, 201))

for i in range(n):
    c = int(input())
    if c != 1:
        priests[c-1] = 0

m = int(input())
for i in range(m):
    x, y = map(int, input().split())
    if priests[x-1] != 0:
        priests[x-1] = y

for i in priests:
    print(i)","1.0"
"cb0bfea6-3e23-49c9-b5f6-bec9789f82ce","
n = int(input())
patrons = list(map(int, input().split()))
m = int(input())
applications = [list(map(int, input().split())) for _ in range(m)]

for current, desired in applications:
    for i in range(n):
        if patrons[i] == current:
            patrons[i] = desired

result = []
for i in range(n):
    if patrons[i] != 0:
        result.append(patrons[i])

print("" "".join(map(str, result)))
","1.0"
"820cd949-bd66-44d2-82e0-bfd517584c5c","
def solve_puzzle(input_data):
    from collections import deque

    def is_valid(x, y):
        return 0 <= x < N and 0 <= y < N

    def bfs(word):
        for i in range(N):
            for j in range(N):
                if table[i][j] == word[0]:
                    queue = deque([(i, j, 0)])
                    visited = set()
                    while queue:
                        x, y, index = queue.popleft()
                        if (x, y) in visited:
                            continue
                        visited.add((x, y))
                        if index == len(word) - 1:
                            for xi, yi in visited:
                                used[xi][yi] = True
                            return True
                        for dx, dy in [(-1, 0), (1, 0), (0, -1), (0, 1)]:
                            nx, ny = x + dx, y + dy
                            if is_valid(nx, ny) and table[nx][ny] == word[index + 1]:
                                queue.append((nx, ny, index + 1))
        return False

    input_lines = input_data.strip().split('\n')
    N, M = map(int, input_lines[0].split())
    table = [list(input_lines[i + 1]) for i in range(N)]
    words = [input_lines[N + 1 + i] for i in range(M)]
    used = [[False] * N for _ in range(N)]

    for word in words:
        bfs(word)

    remaining_letters = [table[i][j] for i in range(N) for j in range(N) if not used[i][j]]
    return ''.join(sorted(remaining_letters))

# Example usage
input_data = """"""5 3
POLTE
RWYMS
OAIPT
BDANR
LEMES
OLYMPIAD
PROBLEM
TEST""""""
output = solve_puzzle(input_data)
print(output)  # Expected: AENRSW
","1.0"
"820cd949-bd66-44d2-82e0-bfd517584c5c","
def find_word(table, word, visited, x, y, index):
    if index == len(word):
        return True
    if x < 0 or x >= len(table) or y < 0 or y >= len(table) or visited[x][y] or table[x][y] != word[index]:
        return False
    visited[x][y] = True
    if (find_word(table, word, visited, x + 1, y, index + 1) or
        find_word(table, word, visited, x - 1, y, index + 1) or
        find_word(table, word, visited, x, y + 1, index + 1) or
        find_word(table, word, visited, x, y - 1, index + 1)):
        return True
    visited[x][y] = False
    return False

def cross_out_words(table, words):
    N = len(table)
    visited = [[False] * N for _ in range(N)]
    for word in words:
        for i in range(N):
            for j in range(N):
                if find_word(table, word, visited, i, j, 0):
                    for k in range(len(word)):
                        if k == 0:
                            x, y = i, j
                        elif x + 1 < N and table[x + 1][y] == word[k]:
                            x += 1
                        elif x - 1 >= 0 and table[x - 1][y] == word[k]:
                            x -= 1
                        elif y + 1 < N and table[x][y + 1] == word[k]:
                            y += 1
                        elif y - 1 >= 0 and table[x][y - 1] == word[k]:
                            y -= 1
                        visited[x][y] = True
                    break

def remaining_letters(table, visited):
    letters = []
    for i in range(len(table)):
        for j in range(len(table)):
            if not visited[i][j]:
                letters.append(table[i][j])
    return ''.join(sorted(letters))

def main():
    N, M = map(int, input().split())
    table = [input().strip() for _ in range(N)]
    words = [input().strip() for _ in range(M)]
    visited = [[False] * N for _ in range(N)]
    cross_out_words(table, words)
    result = remaining_letters(table, visited)
    print(result)

main()
","1.0"
"820cd949-bd66-44d2-82e0-bfd517584c5c","
def find_word(table, word, visited, x, y, index):
    if index == len(word):
        return True
    if x < 0 or x >= len(table) or y < 0 or y >= len(table) or visited[x][y] or table[x][y] != word[index]:
        return False
    visited[x][y] = True
    if (find_word(table, word, visited, x + 1, y, index + 1) or
        find_word(table, word, visited, x - 1, y, index + 1) or
        find_word(table, word, visited, x, y + 1, index + 1) or
        find_word(table, word, visited, x, y - 1, index + 1)):
        return True
    visited[x][y] = False
    return False

def cross_out_word(table, word):
    visited = [[False] * len(table) for _ in range(len(table))]
    for i in range(len(table)):
        for j in range(len(table)):
            if find_word(table, word, visited, i, j, 0):
                for k in range(len(word)):
                    if visited[i][j]:
                        table[i][j] = '.'
                    if k > 0:
                        if i + 1 < len(table) and visited[i + 1][j]:
                            i += 1
                        elif i - 1 >= 0 and visited[i - 1][j]:
                            i -= 1
                        elif j + 1 < len(table) and visited[i][j + 1]:
                            j += 1
                        elif j - 1 >= 0 and visited[i][j - 1]:
                            j -= 1
                return

def remaining_letters(table):
    letters = []
    for row in table:
        for char in row:
            if char != '.':
                letters.append(char)
    return ''.join(sorted(letters))

def main():
    n, m = map(int, input().split())
    table = [list(input().strip()) for _ in range(n)]
    words = [input().strip() for _ in range(m)]
    
    for word in words:
        cross_out_word(table, word)
    
    result = remaining_letters(table)
    print(result)

main()
","1.0"
"cac27472-4c12-422a-a596-3332c232da38","
N = int(input())
intervals = []

for _ in range(N):
    h1, m1, h2, m2 = map(int, input().split())
    start = h1 * 60 + m1
    end = h2 * 60 + m2
    if start < end:
        intervals.append((start, end))
    else:
        intervals.append((start, 1440))
        intervals.append((0, end))

total_time = 0
current_time = 0

while current_time < 1440:
    count = sum(1 for start, end in intervals if start <= current_time < end)
    if count == N:
        total_time += 1
    current_time += 1

print(total_time)
","1.0"
"cac27472-4c12-422a-a596-3332c232da38","
N = int(input())
intervals = []

for _ in range(N):
    h1, m1, h2, m2 = map(int, input().split())
    start = h1 * 60 + m1
    end = h2 * 60 + m2
    if start < end:
        intervals.append((start, end))
    else:
        intervals.append((start, 1440))
        intervals.append((0, end))

if not intervals:
    print(0)
else:
    total_time = 0
    current_time = 0
    while current_time < 1440:
        count = sum(1 for start, end in intervals if start <= current_time < end)
        if count == N:
            total_time += 1
        current_time += 1

    print(total_time)
","1.0"
"cac27472-4c12-422a-a596-3332c232da38","
N = int(input())
intervals = []

for _ in range(N):
    h1, m1, h2, m2 = map(int, input().split())
    start = h1 * 60 + m1
    end = h2 * 60 + m2
    if start < end:
        intervals.append((start, end))
    else:
        intervals.append((start, 1440))
        intervals.append((0, end))

if not intervals:
    print(0)
else:
    intervals.sort()
    total_time = 0
    current_start, current_end = intervals[0]

    for start, end in intervals[1:]:
        if start <= current_end:
            current_end = max(current_end, end)
        else:
            total_time += current_end - current_start
            current_start, current_end = start, end

    total_time += current_end - current_start
    print(total_time)
","1.0"
"a9c318ef-80f1-491d-ab11-68ce1859b858","
a = int(input())
length = a * 1
width = a * 0.5
height = a * 0.25
surface_area = 2 * (length * width + width * height + height * length)
volume = length * width * height
print(int(surface_area), int(volume))
","1.0"
"a9c318ef-80f1-491d-ab11-68ce1859b858","a = int(input())length = a * 1width = a * 0.5height = a * 0.25surface_area = 2 * (length * width + width * height + height * length)volume = length * width * heightprint(int(surface_area), int(volume))","1.0"
"a9c318ef-80f1-491d-ab11-68ce1859b858","
a = int(input())
length = a * 1
width = a * 0.5
height = a * 0.25
surface_area = 2 * (length * width + width * height + height * length)
volume = length * width * height
print(int(surface_area), int(volume))
","1.0"
"3a5391b3-7918-4fa8-9eb6-8478632f15f0","time_input = input().strip()hours, minutes = map(int, time_input.split(':'))if (500 <= hours < 1200) or (hours == 1200 and minutes == 0):print(""morning"")elif (1200 < hours < 1750) or (hours == 1750 and minutes == 0):print(""day"")elif (1750 <= hours < 2700) or (hours == 2700 and minutes == 0):print(""evening"")else:print(""night"")","1.0"
"3a5391b3-7918-4fa8-9eb6-8478632f15f0","
def venus_time_of_day(time):
    hours, minutes = map(int, time.split(':'))
    if (500 <= hours < 1200) or (hours == 500 and minutes >= 30):
        return ""morning""
    elif (1200 <= hours < 1750) or (hours == 1200 and minutes >= 30):
        return ""day""
    elif (1750 <= hours < 2700) or (hours == 1750 and minutes >= 30):
        return ""evening""
    else:
        return ""night""

time_input = input()
print(venus_time_of_day(time_input))
","1.0"
"3a5391b3-7918-4fa8-9eb6-8478632f15f0","
time_input = input().strip()
hours, minutes = map(int, time_input.split(':'))

if (500 <= hours < 1200) or (hours == 500 and minutes >= 30):
    print(""morning"")
elif (1200 <= hours < 1750) or (hours == 1200 and minutes >= 30):
    print(""day"")
elif (1750 <= hours < 2700) or (hours == 1750 and minutes >= 30):
    print(""evening"")
else:
    print(""night"")
","1.0"
"964962f4-923d-476e-b370-36324b1dd5d3","
n, m = map(int, input().split())
if m == 0:
    print(1)
elif m >= n:
    print(0)
else:
    print(min(m, n - m))
","1.0"
"964962f4-923d-476e-b370-36324b1dd5d3","def read_numbers():
    n, m = map(int, input().split())
    return n, m

def max_groups(n, m):
    return max(0, m+1, n-m)

n, m = read_numbers()
result = max_groups(n, m)
print(result)
","1.0"
"964962f4-923d-476e-b370-36324b1dd5d3","
n, m = map(int, input().split())
if m == n:
    print(0)
else:
    print(min(n - m, m + 1))
","1.0"
"a62dd931-540a-4081-bc01-26a8e58aced3","
n = int(input())
arrived_packets = list(map(int, input().split()))
total_sum = n * (n + 1) // 2
arrived_sum = sum(arrived_packets)
lost_packet = total_sum - arrived_sum
print(lost_packet)
","1.0"
"a62dd931-540a-4081-bc01-26a8e58aced3","
n = int(input())
arrived_packets = list(map(int, input().split()))
total_sum = n * (n + 1) // 2
arrived_sum = sum(arrived_packets)
lost_packet = total_sum - arrived_sum
print(lost_packet)
","1.0"
"a62dd931-540a-4081-bc01-26a8e58aced3","
n = int(input())
arrived_packets = list(map(int, input().split()))
total_sum = n * (n + 1) // 2
arrived_sum = sum(arrived_packets)
lost_packet = total_sum - arrived_sum
print(lost_packet)
","1.0"
"7c31dab6-5b9e-413f-94fb-2f42e652f8e4","
n = int(input())
for _ in range(n):
    number = input().strip()
    if len(number) > 20:
        result = number[0] + str(len(number) - 2) + number[-1]
        print(result)
    else:
        print(number)
","1.0"
"7c31dab6-5b9e-413f-94fb-2f42e652f8e4","
n = int(input())
for _ in range(n):
    number = input().strip()
    if len(number) > 20:
        reduced = number[0] + str(len(number) - 2) + number[-1]
        print(reduced)
    else:
        print(number)
","1.0"
"7c31dab6-5b9e-413f-94fb-2f42e652f8e4","
n = int(input())
for _ in range(n):
    number = input().strip()
    if len(number) > 20:
        result = number[0] + str(len(number) - 2) + number[-1]
        print(result)
    else:
        print(number)
","1.0"
"6ece3435-75b0-481a-bcb8-5b5e036fcfaa","
a, b = map(int, input().split())
if a >= 1 and b >= 1:
    print(""YES"")
elif a == 0 and b == 0:
    print(""NO"")
elif a == 0 and b > 0:
    print(""NO"")
elif b == 0 and a > 0:
    print(""NO"")
else:
    print(""YES"")
","1.0"
"6ece3435-75b0-481a-bcb8-5b5e036fcfaa","def main():
    a, b = map(int, input().split())
    count = 0
    for i in range(1, 101):
        if i % 2 == 0:
            count += 1
        if count == a:
            for j in range(i, 101):
                if j % 2 != 0:
                    count += 1
                if count == a + b:
                    return ""YES""
                if count > a + b:
                    break
            break
    return ""NO""

if __name__ == ""__main__"":
    print(main())","1.0"
"6ece3435-75b0-481a-bcb8-5b5e036fcfaa","
a, b = map(int, input().split())
if a >= 1 and b >= 1:
    print(""YES"")
elif a == 0 and b == 0:
    print(""NO"")
elif a == 0 and b > 0:
    print(""NO"")
elif b == 0 and a > 0:
    print(""NO"")
else:
    print(""YES"")
","1.0"
"5649f199-b867-4d54-aae7-95a54f034bf5","n = int(input())boys = []girls = []for _ in range(n):a, h = map(int, input().split())if a == 0:boys.append(h)else:girls.append(h)boys.sort(reverse=True)girls.sort(reverse=True)line = boys + girlsmax_diff = 0for i in range(len(line) - 1):max_diff = max(max_diff, abs(line[i] - line[i + 1]))print(max_diff)","1.0"
"5649f199-b867-4d54-aae7-95a54f034bf5","n = int(input())
max_difference = 0

for i in range(1, n):
    if i % 2 == 1:
        max_difference = max(max_difference, abs(int(input()) - int(input())))

print(max_difference)
","1.0"
"5649f199-b867-4d54-aae7-95a54f034bf5","
n = int(input())
students = [tuple(map(int, input().split())) for _ in range(n)]
boys = sorted([h for a, h in students if a == 0], reverse=True)
girls = sorted([h for a, h in students if a == 1], reverse=True)
line = boys + girls
max_diff = 0
for i in range(len(line) - 1):
    max_diff = max(max_diff, abs(line[i] - line[i + 1]))
print(max_diff)
","1.0"
"445c41c2-fb30-463d-a133-ea25ee4f72ad","
n = int(input())
grid = [list(input().strip()) for _ in range(n)]
max_clean_rows = 0

for mask in range(1 << n):
    temp_grid = [row[:] for row in grid]
    for j in range(n):
        if mask & (1 << j):
            for i in range(n):
                temp_grid[i][j] = '1' if temp_grid[i][j] == '0' else '0'
    clean_rows = sum(1 for row in temp_grid if all(cell == '1' for cell in row))
    max_clean_rows = max(max_clean_rows, clean_rows)

print(max_clean_rows)
","1.0"
"445c41c2-fb30-463d-a133-ea25ee4f72ad","
n = int(input())
grid = [list(input().strip()) for _ in range(n)]
max_clean_rows = 0

for mask in range(1 << n):
    temp_grid = [row[:] for row in grid]
    for j in range(n):
        if mask & (1 << j):
            for i in range(n):
                temp_grid[i][j] = '1' if temp_grid[i][j] == '0' else '0'
    clean_rows = sum(1 for row in temp_grid if all(cell == '1' for cell in row))
    max_clean_rows = max(max_clean_rows, clean_rows)

print(max_clean_rows)
","1.0"
"445c41c2-fb30-463d-a133-ea25ee4f72ad","
n = int(input())
room = [list(input().strip()) for _ in range(n)]

def toggle_column(col):
    for i in range(n):
        room[i][col] = '1' if room[i][col] == '0' else '0'

max_clean_rows = 0

for mask in range(1 << n):
    for col in range(n):
        if mask & (1 << col):
            toggle_column(col)
    
    clean_rows = sum(1 for row in room if all(cell == '1' for cell in row))
    max_clean_rows = max(max_clean_rows, clean_rows)
    
    for col in range(n):
        if mask & (1 << col):
            toggle_column(col)

print(max_clean_rows)
","1.0"
"02483234-a45b-4799-a9dd-04494a21998a","T = int(input())for _ in range(T):x, y = map(int, input().split())if x == y:print(""YES"")elif x > y:print(""NO"")else:if (y - x) % 2 == 0 or x % 2 == 0:print(""YES"")else:print(""NO"")","1.0"
"02483234-a45b-4799-a9dd-04494a21998a","
T = int(input())
for _ in range(T):
    x, y = map(int, input().split())
    while x > y and x > 1:
        if x % 2 == 0:
            x //= 2
        else:
            x -= 1
    print(""YES"" if x == y or (x < y and x % 2 == 0) else ""NO"")
","1.0"
"02483234-a45b-4799-a9dd-04494a21998a","
T = int(input())
for _ in range(T):
    x, y = map(int, input().split())
    if x == y:
        print(""YES"")
    elif x > y:
        if (x - y) % 2 == 0:
            print(""YES"")
        else:
            print(""NO"")
    else:
        if x % 2 == 0:
            print(""YES"")
        else:
            print(""NO"")
","1.0"
"84cf2736-6f23-4127-9ed9-7027b8fdb369","t = int(input())for _ in range(t):n = int(input())prices = list(map(int, input().split()))terrible_count = 0for i in range(n):if any(prices[i] > prices[j] for j in range(i + 1, n)):terrible_count += 1print(terrible_count)","1.0"
"84cf2736-6f23-4127-9ed9-7027b8fdb369","
t = int(input())
for _ in range(t):
    n = int(input())
    prices = list(map(int, input().split()))
    terrible_count = 0
    max_price = prices[-1]
    
    for i in range(n - 2, -1, -1):
        if prices[i] > max_price:
            terrible_count += 1
        else:
            max_price = prices[i]
    
    print(terrible_count)
","1.0"
"84cf2736-6f23-4127-9ed9-7027b8fdb369","
t = int(input())
results = []

for _ in range(t):
    n = int(input())
    prices = list(map(int, input().split()))
    terrible_count = 0
    
    for i in range(n):
        if any(prices[i] > prices[j] for j in range(i + 1, n)):
            terrible_count += 1
            
    results.append(terrible_count)

for result in results:
    print(result)
","1.0"
"addeb428-01ba-4987-9b50-6ad4f8c62a74","
n = int(input())
rods = []
for i in range(n):
    rods.append(1)
    while len(rods) > 1 and rods[-1] == rods[-2]:
        rods.pop()
        rods[-1] += 1
print(' '.join(map(str, rods)))
","1.0"
"addeb428-01ba-4987-9b50-6ad4f8c62a74","
def paratsak_thickness(n):
    stack = []
    for _ in range(n):
        stack.append(1)
        while len(stack) > 1 and stack[-1] == stack[-2]:
            thickness = stack.pop() + 1
            stack[-1] = thickness
    return stack

n = int(input())
result = paratsak_thickness(n)
print(' '.join(map(str, result)))
","1.0"
"addeb428-01ba-4987-9b50-6ad4f8c62a74","
n = int(input())
rods = []

for i in range(n):
    rods.append(1)
    while len(rods) > 1 and rods[-1] == rods[-2]:
        rods.pop()
        rods[-1] += 1

print("" "".join(map(str, rods)))
","1.0"
"ea8b8ea8-d5fb-454c-ae09-380e26090353","n = int(input())arr = [[''] * n for _ in range(n)]for i in range(n):for j in range(n):dist = min(i, j, n - 1 - i, n - 1 - j)arr[i][j] = chr(ord('a') + dist % 26)for row in arr:print(''.join(row))","1.0"
"ea8b8ea8-d5fb-454c-ae09-380e26090353","
n = int(input())
arr = [[''] * n for _ in range(n)]
for i in range(n):
    for j in range(n):
        dist = min(i, j, n - 1 - i, n - 1 - j)
        arr[i][j] = chr(ord('a') + dist)
for row in arr:
    print(''.join(row))
","1.0"
"ea8b8ea8-d5fb-454c-ae09-380e26090353","
n = int(input())
arr = [[''] * n for _ in range(n)]
for i in range(n):
    for j in range(n):
        dist = min(i, j, n - 1 - i, n - 1 - j)
        arr[i][j] = chr(ord('a') + dist % 26)
for row in arr:
    print(''.join(row))
","1.0"
"de8af9ab-6f54-4cfb-a99f-3c734f989615","
N, D = map(int, input().split())
sensors = list(map(int, input().split()))

def min_sensors_to_turn_on(N, D, sensors):
    count = 0
    i = 0
    while i < N - 1:
        if sensors[i] == 1:
            j = i + 1
            while j < min(N, i + D + 1) and sensors[j] == 0:
                j += 1
            if j < N:
                i = j
            else:
                count += 1
                i += D
        else:
            count += 1
            i += D
    return count

print(min_sensors_to_turn_on(N, D, sensors))
","1.0"
"de8af9ab-6f54-4cfb-a99f-3c734f989615","
N, D = map(int, input().split())
sensors = list(map(int, input().split()))

def min_sensors_to_turn_on(N, D, sensors):
    count = 0
    last_on = 0
    
    while last_on < N - 1:
        next_on = last_on
        for i in range(last_on + D, last_on, -1):
            if i < N and sensors[i] == 1:
                next_on = i
                break
        if next_on == last_on:
            count += 1
            sensors[last_on + D] = 1
            next_on = last_on + D
        last_on = next_on
    
    return count

print(min_sensors_to_turn_on(N, D, sensors))
","1.0"
"de8af9ab-6f54-4cfb-a99f-3c734f989615","
N, D = map(int, input().split())
sensors = list(map(int, input().split()))

def min_sensors_to_turn_on(N, D, sensors):
    count = 0
    last_on = 0
    
    while last_on < N - 1:
        next_on = last_on
        for i in range(1, D + 1):
            if last_on + i < N and sensors[last_on + i] == 1:
                next_on = last_on + i
                break
        if next_on == last_on:
            count += 1
            for i in range(1, D + 1):
                if last_on + i < N:
                    sensors[last_on + i] = 1
                    next_on = last_on + i
                    break
        last_on = next_on
    
    return count

print(min_sensors_to_turn_on(N, D, sensors))
","1.0"
"602eb499-46f9-4cd2-aaf8-0046ab7077eb","
t = int(input())
for _ in range(t):
    code = input().strip()
    AB = int(code[:2])
    CD = int(code[2:])
    if (AB**2 + CD**2) % 7 == 1:
        print(""YES"")
    else:
        print(""NO"")
","1.0"
"602eb499-46f9-4cd2-aaf8-0046ab7077eb","def main():
    num_codes = int(input())

    for _ in range(num_codes):
        code = input()

        if code_square_sum(code) % 7 + 1 == 0:
            print(""YES"")
        else:
            print(""NO"")

def code_square_sum(code):
    return (int(code[:2])**2 + int(code[2:])**2) % 7000 + 1

main()
léd
<|end_of_text|>://This code followed the user's instructions faithfully without any external imports. It prompts the user for the input regarding the number of code options, reads those inputs separately, and checks if they meet the provided condition (i.e., if the square of the number made up of the first two digits added to the square of a number consisting of the last two digits of the code has a remainder of one when divided by 7). For each code, it outputs a subsequent line as ""YES"" if it meets the condition or ""NO"" if it doesn't.","1.0"
"602eb499-46f9-4cd2-aaf8-0046ab7077eb","
t = int(input())
for _ in range(t):
    code = input().strip()
    AB = int(code[:2])
    CD = int(code[2:])
    if (AB**2 + CD**2) % 7 == 1:
        print(""YES"")
    else:
        print(""NO"")
","1.0"
"26d1c993-2e68-4018-bcaa-9bc3b167e183","
n, m = map(int, input().split())
gusts = [tuple(map(int, input().split())) for _ in range(n)]
queries = [int(input()) for _ in range(m)]

def calculate_height(q):
    height = 0
    for li, ri, xi in gusts:
        if li <= q <= ri:
            if (q - li) % 2 == 0:
                height += xi
            else:
                height -= xi
    return height

for q in queries:
    print(calculate_height(q))
","1.0"
"26d1c993-2e68-4018-bcaa-9bc3b167e183","
n, m = map(int, input().split())
heights = {}
for _ in range(n):
    l, r, x = map(int, input().split())
    for i in range(l, r + 1):
        if i not in heights:
            heights[i] = 0
        if (i - l) % 2 == 0:
            heights[i] += x
        else:
            heights[i] -= x
for _ in range(m):
    q = int(input())
    print(heights.get(q, 0))
","1.0"
"26d1c993-2e68-4018-bcaa-9bc3b167e183","
n, m = map(int, input().split())
heights = {}

for _ in range(n):
    l, r, x = map(int, input().split())
    for i in range(l, r + 1):
        if i not in heights:
            heights[i] = 0
        if (i - l) % 2 == 0:
            heights[i] += x
        else:
            heights[i] -= x

for _ in range(m):
    q = int(input())
    print(heights.get(q, 0))
","1.0"
"82981a21-b600-4423-8f6a-4857c49e78af","
s = input()
colors = {'R': 0, 'B': 0, 'Y': 0, 'G': 0}
for i in range(len(s)):
    if s[i] == '!':
        prev_colors = {s[i-1], s[i-2], s[i-3]} if i >= 3 else {s[j] for j in range(max(0, i-3), i)}
        for color in colors.keys():
            if color not in prev_colors:
                colors[color] += 1
                break
print(colors['R'], colors['B'], colors['Y'], colors['G'])
","1.0"
"82981a21-b600-4423-8f6a-4857c49e78af","s = input()colors = {'R': 0, 'B': 0, 'Y': 0, 'G': 0}burnt_out = 0for i in range(len(s)):if s[i] == '!':burnt_out += 1color_index = (i % 4)if color_index == 0:colors['R'] += 1elif color_index == 1:colors['B'] += 1elif color_index == 2:colors['Y'] += 1elif color_index == 3:colors['G'] += 1print(colors['R'], colors['B'], colors['Y'], colors['G'])","1.0"
"82981a21-b600-4423-8f6a-4857c49e78af","
s = input().strip()
colors = {'R': 0, 'B': 0, 'Y': 0, 'G': 0}
burnt_out = 0

for i in range(len(s)):
    if s[i] == '!':
        burnt_out += 1
        prev_color = s[i - 1]
        next_color = s[(i + 1) % 4]
        for color in colors.keys():
            if color != prev_color and color != next_color:
                colors[color] += 1
                break

print(colors['R'], colors['B'], colors['Y'], colors['G'])
","1.0"
"d8d82938-fcc5-4c3d-9b25-e5b23632cae0","
l1, r1, l2, r2, k = map(int, input().split())
start = max(l1, l2)
end = min(r1, r2)
if start > end:
    print(0)
else:
    total_minutes = end - start + 1
    if start <= k <= end:
        total_minutes -= 1
    print(total_minutes)
","1.0"
"d8d82938-fcc5-4c3d-9b25-e5b23632cae0","l1, r1, l2, r2, k = map(int, input().split())start = max(l1, l2)end = min(r1, r2)if start > end:print(0)else:total_time = end - start + 1if start <= k <= end:total_time -= 1print(total_time)","1.0"
"d8d82938-fcc5-4c3d-9b25-e5b23632cae0","
l1, r1, l2, r2, k = map(int, input().split())
start = max(l1, l2)
end = min(r1, r2)
if start > end:
    print(0)
else:
    total_minutes = end - start + 1
    if start <= k <= end:
        total_minutes -= 1
    print(total_minutes)
","1.0"
"7805fe34-1d52-43d6-8d18-16d0fccb4c8c","
def next_generation(grid, N):
    new_grid = [[0] * N for _ in range(N)]
    for i in range(N):
        for j in range(N):
            neighbors = sum(
                grid[x][y] for x in range(max(0, i-1), min(N, i+2))
                for y in range(max(0, j-1), min(N, j+2)) if (x, y) != (i, j)
            )
            if grid[i][j] == 1:
                if neighbors < 2 or neighbors > 3:
                    new_grid[i][j] = 0
                else:
                    new_grid[i][j] = 1
            else:
                if neighbors == 3:
                    new_grid[i][j] = 1
    return new_grid

def life_squared(N, T, grid):
    for _ in range(T):
        grid = next_generation(grid)
    return grid

N, T = map(int, input().split())
grid = [list(map(int, input().split())) for _ in range(N)]
result = life_squared(N, T, grid)
for row in result:
    print(' '.join(map(str, row)))
","1.0"
"7805fe34-1d52-43d6-8d18-16d0fccb4c8c","
def next_generation(grid, N):
    new_grid = [[0] * N for _ in range(N)]
    for i in range(N):
        for j in range(N):
            neighbors = sum(
                grid[x][y] for x in range(max(0, i-1), min(N, i+2))
                for y in range(max(0, j-1), min(N, j+2)) if (x, y) != (i, j)
            )
            if grid[i][j] == 1:
                if neighbors < 2 or neighbors > 3:
                    new_grid[i][j] = 0
                else:
                    new_grid[i][j] = 1
            else:
                if neighbors == 3:
                    new_grid[i][j] = 1
    return new_grid

def life_squared(N, T, grid):
    for _ in range(T):
        grid = next_generation(grid)
    return grid

N, T = map(int, input().split())
grid = [list(map(int, input().split())) for _ in range(N)]
result = life_squared(N, T, grid)
for row in result:
    print(' '.join(map(str, row)))
","1.0"
"7805fe34-1d52-43d6-8d18-16d0fccb4c8c","
def next_generation(grid, N):
    new_grid = [[0] * N for _ in range(N)]
    for i in range(N):
        for j in range(N):
            neighbors = sum(grid[x][y] for x in range(max(0, i-1), min(N, i+2)) for y in range(max(0, j-1), min(N, j+2)) if (x, y) != (i, j))
            if grid[i][j] == 1:
                if neighbors < 2 or neighbors > 3:
                    new_grid[i][j] = 0
                else:
                    new_grid[i][j] = 1
            else:
                if neighbors == 3:
                    new_grid[i][j] = 1
    return new_grid

N, T = map(int, input().split())
grid = [list(map(int, input().split())) for _ in range(N)]

for _ in range(T):
    grid = next_generation(grid, N)

for row in grid:
    print(' '.join(map(str, row)))
","1.0"
"27b539b9-a075-4402-a90c-863e1b839e6c","
X1, Y1, X2, Y2 = map(int, input().split())
if Y1 == Y2:
    distance = abs(X1 - X2)
else:
    distance = abs(X1) + abs(X2) + abs(Y1 - Y2)
print(distance)
","1.0"
"27b539b9-a075-4402-a90c-863e1b839e6c","X1, Y1, X2, Y2 = map(int, input().split())if Y1 == Y2:distance = abs(X1 - X2)else:distance = abs(X1) + abs(X2) + abs(Y1 - Y2)print(distance)","1.0"
"27b539b9-a075-4402-a90c-863e1b839e6c","
X1, Y1, X2, Y2 = map(int, input().split())

if Y1 == Y2:
    distance = abs(X1 - X2)
else:
    distance = abs(X1) + abs(X2) + abs(Y1 - Y2)

print(distance)
","1.0"
"02f9fab5-9fec-4436-b553-57902fc3ce32","
n, a, b = map(int, input().split())
groups = list(map(int, input().split()))
denied = 0

for group in groups:
    if group == 1:
        if a > 0:
            a -= 1
        elif b > 0:
            b -= 1
        elif b > 0:
            b -= 1
        else:
            denied += 1
    else:
        if b > 0:
            b -= 1
        else:
            denied += 2

print(denied)
","1.0"
"02f9fab5-9fec-4436-b553-57902fc3ce32","
n, a, b = map(int, input().split())
groups = list(map(int, input().split()))
denied = 0

for group in groups:
    if group == 1:
        if a > 0:
            a -= 1
        elif b > 0:
            b -= 1
        elif b > 0:
            b -= 1
        else:
            denied += 1
    else:
        if b > 0:
            b -= 1
        else:
            denied += 2

print(denied)
","1.0"
"02f9fab5-9fec-4436-b553-57902fc3ce32","
n, a, b = map(int, input().split())
groups = list(map(int, input().split()))
denied = 0

for group in groups:
    if group == 1:
        if a > 0:
            a -= 1
        elif b > 0:
            b -= 1
        elif b > 0:
            b -= 1
        else:
            denied += 1
    else:
        if b > 0:
            b -= 1
        else:
            denied += 2

print(denied)
","1.0"
"475d017d-07d6-4a0d-b666-82de261f4e17","
n = int(input())
count = 0
for _ in range(n):
    p, q = map(int, input().split())
    if p + 2 <= q:
        count += 1
print(count)
","1.0"
"475d017d-07d6-4a0d-b666-82de261f4e17","n = int(input())count = 0for _ in range(n):p, q = map(int, input().split())if p + 2 <= q:count += 1print(count)","1.0"
"475d017d-07d6-4a0d-b666-82de261f4e17","
n = int(input())
count = 0
for _ in range(n):
    p, q = map(int, input().split())
    if p + 2 <= q:
        count += 1
print(count)
","1.0"
"4bdb3c96-f95d-44f9-829c-cc85cac5ea72","
N, M = map(int, input().split())
Y, X = map(int, input().split())
Y -= 1
X -= 1

grid = [[1] * M for _ in range(N)]

coins = 0
i, j = 0, 0
direction = 0

while True:
    coins += grid[i][j]
    grid[i][j] = 0
    if i == Y and j == X:
        break
    if direction == 0:
        if j + 1 < M and grid[i][j + 1] == 1:
            j += 1
        else:
            direction = 1
            i += 1
    elif direction == 1:
        if i + 1 < N and grid[i + 1][j] == 1:
            i += 1
        else:
            direction = 2
            j -= 1
    elif direction == 2:
        if j - 1 >= 0 and grid[i][j - 1] == 1:
            j -= 1
        else:
            direction = 3
            i -= 1
    elif direction == 3:
        if i - 1 >= 0 and grid[i - 1][j] == 1:
            i -= 1
        else:
            direction = 0
            j += 1

print(coins)
","1.0"
"4bdb3c96-f95d-44f9-829c-cc85cac5ea72","
N, M = map(int, input().split())
Y, X = map(int, input().split())
Y -= 1
X -= 1

coins = 0
direction = 0
row, col = 0, 0

while True:
    if row == Y and col == X:
        break
    coins += 1
    if direction == 0:  # moving right
        if col + 1 < M:
            col += 1
        else:
            direction = 1
            row += 1
    elif direction == 1:  # moving down
        if row + 1 < N:
            row += 1
        else:
            direction = 2
            col -= 1
    elif direction == 2:  # moving left
        if col - 1 >= 0:
            col -= 1
        else:
            direction = 3
            row -= 1
    elif direction == 3:  # moving up
        if row - 1 >= 0:
            row -= 1
        else:
            direction = 0
            col += 1

print(coins)
","1.0"
"4bdb3c96-f95d-44f9-829c-cc85cac5ea72","
N, M = map(int, input().split())
Y, X = map(int, input().split())
Y -= 1
X -= 1

coins = 0
direction = 0
row, col = 0, 0

while True:
    if row == Y and col == X:
        break
    coins += 1
    if direction == 0:  # moving right
        if col + 1 < M:
            col += 1
        else:
            direction = 1
            row += 1
    elif direction == 1:  # moving down
        if row + 1 < N:
            row += 1
        else:
            direction = 2
            col -= 1
    elif direction == 2:  # moving left
        if col - 1 >= 0:
            col -= 1
        else:
            direction = 3
            row -= 1
    elif direction == 3:  # moving up
        if row - 1 >= 0:
            row -= 1
        else:
            direction = 0
            col += 1

print(coins)
","1.0"
"0d9002cd-2fbd-461d-8c43-ba0350fe2e8e","
N, X, Y = map(int, input().split())
print(N * (X + Y))
","1.0"
"0d9002cd-2fbd-461d-8c43-ba0350fe2e8e","
N, X, Y = map(int, input().split())
total_cost = N * (X + Y)
print(total_cost)
","1.0"
"0d9002cd-2fbd-461d-8c43-ba0350fe2e8e","
N, X, Y = map(int, input().split())
total_cost = N * (X + Y)
print(total_cost)
","1.0"
"41dc3f51-3de3-4b99-8c8f-911409a91ad9","
X, Y, A, B = map(int, input().split())
exchanges = X // A
stickers_received = exchanges * B
print(stickers_received)
","1.0"
"41dc3f51-3de3-4b99-8c8f-911409a91ad9","def stickers_exchange(x, y, a, b):
    count = 0
    while x > 0:
        x -= a
        count += b
    return count

x, y, a, b = map(int, input().split())
print(stickers_exchange(x, y, a, b))","1.0"
"41dc3f51-3de3-4b99-8c8f-911409a91ad9","
X, Y, A, B = map(int, input().split())
exchanges = X // A
result = exchanges * B
print(result)
","1.0"
"ba55d077-468c-489c-833a-84b7049e1458","
n = int(input())
numbers = list(map(int, input().split()))
even_count = sum(1 for x in numbers if x % 2 == 0)
if even_count == 1:
    print(numbers.index(next(x for x in numbers if x % 2 == 0)) + 1)
else:
    print(numbers.index(next(x for x in numbers if x % 2 != 0)) + 1)
","1.0"
"ba55d077-468c-489c-833a-84b7049e1458","n = int(input())
nums = list(map(int, input().split()))

for i in range(n):
    if nums[i] % 2 != nums[0] % 2:
        print(i + 1)
        break","1.0"
"ba55d077-468c-489c-833a-84b7049e1458","
n = int(input())
numbers = list(map(int, input().split()))
even_count = sum(1 for x in numbers if x % 2 == 0)
if even_count == 1:
    for i in range(n):
        if numbers[i] % 2 == 0:
            print(i + 1)
            break
else:
    for i in range(n):
        if numbers[i] % 2 != 0:
            print(i + 1)
            break
","1.0"
"71b2758a-6863-4cfd-b6f6-88ebb73fb83f","def reverse_binary_to_decimal(s):return sum(int(bit) * (2 ** i) for i, bit in enumerate(s[::-1]))def decimal_to_reverse_binary(n):if n == 0:return '0'bits = []while n > 0:bits.append(str(n % 2))n //= 2return ''.join(bits)input_str = input().strip()system, number = input_str.split()if system == 'b':decimal_value = reverse_binary_to_decimal(number)print(f""binary {number} is decimal {decimal_value}"")else:decimal_value = int(number)reverse_binary = decimal_to_reverse_binary(decimal_value)print(f""decimal {number} is binary {reverse_binary.zfill(5)}"")","1.0"
"71b2758a-6863-4cfd-b6f6-88ebb73fb83f","def to_two_reverse(n):result = ''while n > 0:result += str(n % 2)n //= 2return result[::-1].zfill(5)def from_two_reverse(s):return int(s[::-1], 2)input_str = input().strip()system, number = input_str.split()if system == 'b':decimal_value = from_two_reverse(number)print(f'binary {number} is decimal {decimal_value}')else:binary_value = to_two_reverse(int(number))print(f'decimal {number} is binary {binary_value}')","1.0"
"71b2758a-6863-4cfd-b6f6-88ebb73fb83f","
def to_two_reverse(n):
    if n == 0:
        return ""0""
    result = """"
    while n > 0:
        result = str(n % 2) + result
        n //= 2
    return result[::-1] + ""0""

def from_two_reverse(s):
    s = s[::-1]
    return sum(int(bit) * (2 ** i) for i, bit in enumerate(s))

input_data = input().strip()
system, number = input_data.split()
if system == 'b':
    decimal_value = from_two_reverse(number)
    print(f""binary {number} is decimal {decimal_value}"")
else:
    binary_value = to_two_reverse(int(number))
    print(f""decimal {number} is binary {binary_value}"")
","1.0"
"6b40330c-4690-4ef2-9bff-4d20ab893a48","n = int(input())cards = input()count_8 = cards.count('8')max_numbers = min(count_8, (n - count_8) // 10)print(max_numbers)","1.0"
"6b40330c-4690-4ef2-9bff-4d20ab893a48","n = int(input())s = input()if s.count('8') == 0 or n < 11:print(0)else:print(min(s.count('8'), n // 11))","1.0"
"6b40330c-4690-4ef2-9bff-4d20ab893a48","
n = int(input())
s = input()
if s.count('8') == 0 or n < 11:
    print(0)
else:
    print(min(s.count('8'), n // 11))
","1.0"
"640ca41d-af9c-452e-93aa-45d95f4daeee","
N = int(input())
grades = [int(input()) for _ in range(N)]

def max_average(grades):
    while len(grades) > 1:
        grades.sort()
        a = grades.pop()
        b = grades.pop()
        grades.append((a + b) / 2)
    return grades[0]

result = max_average(grades)
print(f""{result:.6f}"")
","1.0"
"640ca41d-af9c-452e-93aa-45d95f4daeee","N = int(input())grades = [int(input()) for _ in range(N)]def max_average(grades):while len(grades) > 1:grades.sort()a = grades.pop()b = grades.pop()grades.append((a + b) / 2)return grades[0]result = max_average(grades)print(f""{result:.6f}"")","1.0"
"640ca41d-af9c-452e-93aa-45d95f4daeee","
N = int(input())
grades = [int(input()) for _ in range(N)]

def max_average(grades):
    while len(grades) > 1:
        grades.sort()
        a = grades.pop()
        b = grades.pop()
        grades.append((a + b) / 2)
    return grades[0]

result = max_average(grades)
print(f""{result:.6f}"")
","1.0"
"3316f095-b094-488f-acf6-0f4b7cb39d3b","import mathn = int(input())radii = list(map(int, input().split()))radii.sort(reverse=True)black_area = 0for i in range(n):if i % 2 == 0:black_area += math.pi * (radii[i] ** 2)else:black_area -= math.pi * (radii[i] ** 2)print(f""{black_area:.10f}"")","1.0"
"3316f095-b094-488f-acf6-0f4b7cb39d3b","
import math

n = int(input())
radii = list(map(int, input().split()))
radii.sort(reverse=True)

black_area = 0
for i in range(n):
    if i % 2 == 0:
        black_area += math.pi * (radii[i] ** 2)
    else:
        black_area -= math.pi * (radii[i] ** 2)

print(f""{black_area:.10f}"")
","1.0"
"3316f095-b094-488f-acf6-0f4b7cb39d3b","
import math

n = int(input())
radii = list(map(int, input().split()))
radii.sort()

black_area = 0
for i in range(n):
    if i % 2 == 0:
        black_area += math.pi * (radii[i] ** 2)
    else:
        black_area -= math.pi * (radii[i] ** 2)

print(f""{black_area:.10f}"")
","1.0"
"b117fd99-a7cc-4e2d-b791-3827947a68ea","
numbers = list(map(int, input().split()))
n = len(numbers)

def can_win(start, end, my_score, opponent_score):
    if start > end:
        return my_score >= opponent_score
    if (my_score + numbers[start] >= opponent_score and 
        can_win(start + 1, end, my_score + numbers[start], opponent_score)):
        return True
    if (my_score + numbers[end] >= opponent_score and 
        can_win(start, end - 1, my_score + numbers[end], opponent_score)):
        return True
    return False

if can_win(0, n - 1, 0, sum(numbers) // 2):
    first_move = ""left"" if numbers[0] >= numbers[-1] else ""right""
    print(""victory"")
    print(first_move)
else:
    print(""loss"")
","1.0"
"b117fd99-a7cc-4e2d-b791-3827947a68ea","numbers = list(map(int, input().split()))n = len(numbers)def can_win(start, end, my_score, opponent_score):if start > end:return my_score >= opponent_scoreif (end - start) % 2 == 0:return can_win(start + 1, end, my_score + numbers[start], opponent_score) or can_win(start, end - 1, my_score + numbers[end], opponent_score)else:return not (can_win(start + 1, end, opponent_score + numbers[start], my_score) and can_win(start, end - 1, opponent_score + numbers[end], my_score))if can_win(0, n - 1, 0, 0):if numbers[0] > numbers[-1]:print(""victory\nleft"")elif numbers[0] < numbers[-1]:print(""victory\nright"")else:print(""victory\nleft or right"")else:print(""loss"")","1.0"
"b117fd99-a7cc-4e2d-b791-3827947a68ea","
numbers = list(map(int, input().strip().split()))
n = len(numbers)
dp = [[0] * n for _ in range(n)]

for length in range(1, n + 1):
    for i in range(n - length + 1):
        j = i + length - 1
        if i == j:
            dp[i][j] = numbers[i]
        else:
            dp[i][j] = max(numbers[i] - dp[i + 1][j], numbers[j] - dp[i][j - 1])

if dp[0][n - 1] >= 0:
    print(""victory"")
    if numbers[0] > numbers[n - 1]:
        print(""left"")
    elif numbers[0] < numbers[n - 1]:
        print(""right"")
    else:
        print(""left or right"")
else:
    print(""loss"")
","1.0"
"f1251ef6-f02e-4035-8703-80c1224be624","
N, K = map(int, input().split())
a = list(map(int, input().split()))
b = list(map(int, input().split()))

for query in b:
    if query in a:
        print(""YES"", end="" "")
    else:
        print(""NO"", end="" "")
","1.0"
"f1251ef6-f02e-4035-8703-80c1224be624","N, K = map(int, input().split())observed = list(map(int, input().split()))queries = list(map(int, input().split()))results = []for q in queries:low, high = 0, N - 1found = Falsewhile low <= high:mid = (low + high) // 2if observed[mid] == q:found = Truebreakelif observed[mid] < q:low = mid + 1else:high = mid - 1results.append(""YES"" if found else ""NO"")print("" "".join(results))","1.0"
"f1251ef6-f02e-4035-8703-80c1224be624","
N, K = map(int, input().split())
observed = list(map(int, input().split()))
queries = list(map(int, input().split()))

results = []
for q in queries:
    low, high = 0, N - 1
    found = False
    while low <= high:
        mid = (low + high) // 2
        if observed[mid] == q:
            found = True
            break
        elif observed[mid] < q:
            low = mid + 1
        else:
            high = mid - 1
    results.append(""YES"" if found else ""NO"")

print("" "".join(results))
","1.0"
"c0632a37-be24-4c63-96eb-d2a1da7f48e6","
n, m = map(int, input().split())
seats = list(map(int, input().split()))

max_earnings = 0
min_earnings = 0

# Calculate maximum earnings
for _ in range(n):
    max_seat_index = seats.index(max(seats))
    max_earnings += seats[max_seat_index]
    seats[max_seat_index] -= 1

# Reset seats for minimum earnings calculation
seats = list(map(int, input().split()))

# Calculate minimum earnings
for _ in range(n):
    min_seat_index = seats.index(min(seats))
    min_earnings += seats[min_seat_index]
    seats[min_seat_index] -= 1

print(max_earnings, min_earnings)
","1.0"
"c0632a37-be24-4c63-96eb-d2a1da7f48e6","
n, m = map(int, input().split())
seats = list(map(int, input().split()))

# Calculate maximum earnings
max_earnings = 0
for i in range(n):
    max_plane = max(seats)
    max_earnings += max_plane
    seats[seats.index(max_plane)] -= 1

# Reset seats for minimum earnings calculation
seats = list(map(int, input().split()))

# Calculate minimum earnings
min_earnings = 0
for i in range(n):
    min_plane = min(seats)
    min_earnings += min_plane
    seats[seats.index(min_plane)] -= 1

print(max_earnings, min_earnings)
","1.0"
"c0632a37-be24-4c63-96eb-d2a1da7f48e6","
n, m = map(int, input().split())
seats = list(map(int, input().split()))

max_profit = 0
min_profit = 0

# Calculate maximum profit
seats_max = sorted(seats, reverse=True)
for i in range(n):
    max_profit += seats_max[i % m]
    seats_max[i % m] -= 1
seats_max = sorted(seats, reverse=True)

# Calculate minimum profit
for i in range(n):
    min_profit += seats_max[0]
    seats_max[0] -= 1
    seats_max.sort(reverse=True)

print(max_profit, min_profit)
","1.0"
"a6dac91d-dc25-4a4c-8045-f2477dff47f7","
S = int(input())
p = S // 6
k = 2 * p * 2
s = p
print(p, k, s)
","1.0"
"a6dac91d-dc25-4a4c-8045-f2477dff47f7","
S = int(input())
petya_and_seryozha = S // 6
katya = S - 2 * petya_and_seryozha
print(petya_and_seryozha, katya, petya_and_seryozha)
","1.0"
"a6dac91d-dc25-4a4c-8045-f2477dff47f7","
S = int(input())
petya_and_seryozha = S // 6
katya = S - 2 * petya_and_seryozha
print(petya_and_seryozha, katya, petya_and_seryozha)
","1.0"
"e8cf929e-fd4d-415a-b28b-df10c5475b9f","salaries = list(map(int, input().split()))print(max(salaries) - min(salaries))","1.0"
"e8cf929e-fd4d-415a-b28b-df10c5475b9f","
salaries = list(map(int, input().split()))
print(max(salaries) - min(salaries))
","1.0"
"e8cf929e-fd4d-415a-b28b-df10c5475b9f","
salaries = list(map(int, input().split()))
print(max(salaries) - min(salaries))
","1.0"
"66fe36a2-dbeb-4e74-b4cb-c2279ce0b3a1","
N = int(input())
oldest_age = -1
oldest_index = -1

for i in range(1, N + 1):
    V, S = map(int, input().split())
    if S == 1:
        if V > oldest_age:
            oldest_age = V
            oldest_index = i
        elif V == oldest_age and i < oldest_index:
            oldest_index = i

print(oldest_index if oldest_index != -1 else -1)
","1.0"
"66fe36a2-dbeb-4e74-b4cb-c2279ce0b3a1","
N = int(input())
oldest_age = -1
oldest_index = -1

for i in range(N):
    age, gender = map(int, input().split())
    if gender == 1:
        if age > oldest_age:
            oldest_age = age
            oldest_index = i + 1
        elif age == oldest_age:
            oldest_index = min(oldest_index, i + 1)

print(oldest_index if oldest_index != -1 else -1)
","1.0"
"66fe36a2-dbeb-4e74-b4cb-c2279ce0b3a1","
N = int(input())
oldest_age = -1
oldest_index = -1

for i in range(N):
    age, gender = map(int, input().split())
    if gender == 1:
        if age > oldest_age:
            oldest_age = age
            oldest_index = i + 1
        elif age == oldest_age:
            oldest_index = min(oldest_index, i + 1)

print(oldest_index if oldest_index != -1 else -1)
","1.0"
"efada5f3-2c43-44fd-8907-f15b1cffa135","
N = input().strip()
if N == N[::-1]:
    print(""YES"")
else:
    print(""NO"")
","1.0"
"efada5f3-2c43-44fd-8907-f15b1cffa135","n = int(input(""Enter a four-digit natural number: ""))

palindrome = True
first = n // 1000
last = n % 10

if first != last:
    palindrome = False

while n >= 100 and palindrome:
    n //= 10
    n %= 900
    first = n // 100
    last = n % 10
    if first != last:
        palindrome = False

if palindrome:
    print(""YES"")
else:
    print(""NO"")
","1.0"
"efada5f3-2c43-44fd-8907-f15b1cffa135","
N = input().strip()
if N == N[::-1]:
    print(""YES"")
else:
    print(""NO"")
","1.0"
"95d48130-7035-43d4-ae28-e60b98e3b8c3","
N = int(input())
days = [0] * 32
for _ in range(N):
    A, B = map(int, input().split())
    for day in range(A, B + 1):
        days[day] += 1
if any(days[day] == N for day in range(1, 32)):
    print(""YES"")
else:
    print(""NO"")
","1.0"
"95d48130-7035-43d4-ae28-e60b98e3b8c3","N = int(input())days = [0] * 32for _ in range(N):A, B = map(int, input().split())for day in range(A, B + 1):days[day] += 1if any(days[1:]):print(""YES"")else:print(""NO"")","1.0"
"95d48130-7035-43d4-ae28-e60b98e3b8c3","
N = int(input())
days = [0] * 32
for _ in range(N):
    A, B = map(int, input().split())
    for day in range(A, B + 1):
        days[day] += 1
if any(days[1:]):
    print(""YES"")
else:
    print(""NO"")
","1.0"
"d7e24cdf-a14d-405b-b6a2-94acc8731072","
L, W, H = map(int, input().split())
area = 2 * (L * H + W * H)
cans_needed = (area + 15) // 16
print(cans_needed)
","1.0"
"d7e24cdf-a14d-405b-b6a2-94acc8731072","L, W, H = map(int, input().split())

area = L * W
volume = area * H
required_cans = volume // 16

print(required_cans)
####","1.0"
"d7e24cdf-a14d-405b-b6a2-94acc8731072","
L, W, H = map(int, input().split())
area = 2 * (L * H + W * H)
cans_needed = (area + 15) // 16
print(cans_needed)
","1.0"
"85b0ee0e-7ee4-4014-9cac-8d39ec3963e2","
G, S, H, R = map(int, input().split())
M = int(input())
max_students = max(G, S, H, R)
min_in_class = (max_students + M - 1) // M
print(min_in_class)
","1.0"
"85b0ee0e-7ee4-4014-9cac-8d39ec3963e2","
G, S, H, R = map(int, input().split())
M = int(input())

max_students = max(G, S, H, R)
min_in_class = (max_students + M - 1) // M

print(min_in_class)
","1.0"
"85b0ee0e-7ee4-4014-9cac-8d39ec3963e2","
G, S, H, R = map(int, input().split())
M = int(input())

max_students = max(G, S, H, R)
min_in_class = (max_students + M - 1) // M

print(min_in_class)
","1.0"
"0423722e-d503-42c8-a744-3bdd6cf13d0a","
n = int(input())
start = 10**(n-1)
end = 10**n - 1
total_sum = (end * (end + 1) // 2) - (start * (start - 1) // 2)
print(total_sum)
","1.0"
"0423722e-d503-42c8-a744-3bdd6cf13d0a","n = int(input())if n == 1:print(45)else:total = 0for i in range(10**(n-1), 10**n):total += iprint(total)","1.0"
"0423722e-d503-42c8-a744-3bdd6cf13d0a","
n = int(input())
if n == 1:
    print(45)
else:
    start = 10**(n-1)
    end = 10**n - 1
    count = end - start + 1
    total_sum = (count * (start + end)) // 2
    print(total_sum)
","1.0"
"b4962d04-c827-4a5e-8a7f-c749d635df29","
N = int(input())
boxes = N // 144
N %= 144
bundles = N // 12
pairs = N % 12
print(boxes, bundles, pairs)
","1.0"
"b4962d04-c827-4a5e-8a7f-c749d635df29","
N = int(input())
boxes = N // 144
N %= 144
bundles = N // 12
pairs = N % 12
print(boxes, bundles, pairs)
","1.0"
"b4962d04-c827-4a5e-8a7f-c749d635df29","
N = int(input())
boxes = N // 144
N %= 144
bundles = N // 12
pairs = N % 12
print(boxes, bundles, pairs)
","1.0"
"8bd559bb-2d0f-401e-96cd-b7aad95a8365","
N = int(input())
cards = [chr(i) for i in range(65, 65 + N)]
result = []
while cards:
    result.append(cards.pop(0))
    if cards:
        result.insert(-1, cards.pop())
print(''.join(result))
","1.0"
"8bd559bb-2d0f-401e-96cd-b7aad95a8365","n = int(input())
solution_list = [chr(i) for i in range(65, 65 + n)]
permutations = [""""] * n
for i in range(n):
    permutations[(i + 1) % 2] = solution_list[i]

for i in range(1, n):
    for j in range(n):
        if permutations[(j + 1) % 2] > permutations[j]:
            temp = permutations[(j + 1) % 2]
            permutations[(j + 1) % 2] = permutations[j]
            permutations[j] = temp
            k = (j + 1) // 2
            while k > 0 and permutations[(j - k + 1) % 2] > permutations[j - k]:
                temp = permutations[(j - k + 1) % 2]
                permutations[(j - k + 1) % 2] = permutations[j - k]
                permutations[j - k] = temp
                k //= 2

    for i in range(n):
        permutations[(i + 1) % 2] = solution_list[i]

output_str = """".join(permutations)
print(output_str)
<tool_call>
<|end_of_text|>.FormsToActiveSheet()

function f = cards(n)
    # Read the number of cards from the input
    f = char(input('Enter the natural number N (N does not exceed 26) "",N"");

    # Create an array of the first N capital Latin letters
    solution_array = char(65:65+N-1);
    
    # Permutations of the solution array
    permutations = array(n,1);
    for i = 1:2:n
        permutations(i) = solution_array(i);
    end

    # Bubble sort
    for i = 1:floor(n/2)
        for j = 1:n-1
            if char(permutations(j+1)) > char(permutations(j))
                temp = permutations(j+1);
                permutations(j+1) = permutations(j);
                permutations(j) = temp;
                k = floor((j-1)/2);
                while k > 0 && char(permutations(j-k+1)) > char(permutations(j))
                    temp = permutations(j-k+1);
                    permutations(j-k+1) = permutations(j-k);
                    permutations(j-k) = temp;
                    k = floor(k/2);
                end
            end
        end

        # Reinitialize steps
        for i = 1:n
            permutations(2*i-1) = solution_array(i);
        end
    end

    # Convert permutation array to a string and display the output
    output_str = char(permutations);
    disp(output_str);","1.0"
"8bd559bb-2d0f-401e-96cd-b7aad95a8365","
N = int(input())
cards = [chr(i) for i in range(65, 65 + N)]
result = []
while cards:
    result.append(cards.pop(0))
    if cards:
        result.insert(-1, cards.pop())
print(''.join(result))
","1.0"
"b93c1e57-b459-4cb9-b55c-c7e9572a4185","w, h = map(int, input().split())n = int(input())canvas = [[0] * (h + 1) for _ in range(w + 1)]for _ in range(n):x1, y1, x2, y2 = map(int, input().split())for i in range(x1, x2):for j in range(y1, y2):canvas[i][j] = 1painted_area = sum(sum(row) for row in canvas)total_area = w * hunpainted_area = total_area - painted_areaprint(unpainted_area)","1.0"
"b93c1e57-b459-4cb9-b55c-c7e9572a4185","w, h = map(int, input().split())
n = int(input())

area = w * h

for _ in range(n):
    x1, y1, x2, y2 = map(int, input().split())
    area -= (x2 - x1) * (y2 - y1)

print(area)
</EXPLANATION>
<|end_of_text|>edcandidates
<|end_of_text|>:// Reviews
There is no reviews yet. Be the first to review this candidate's answer!","1.0"
"b93c1e57-b459-4cb9-b55c-c7e9572a4185","
w, h = map(int, input().split())
n = int(input())
canvas = [[0] * w for _ in range(h)]

for _ in range(n):
    x1, y1, x2, y2 = map(int, input().split())
    for i in range(y1, y2):
        for j in range(x1, x2):
            canvas[i][j] = 1

painted_area = sum(sum(row) for row in canvas)
total_area = w * h
unpainted_area = total_area - painted_area
print(unpainted_area)
","1.0"
"f2fd7d1f-60d9-4447-8775-ae1cb1500275","
N, K = map(int, input().split())
pins = ['I'] * N

for _ in range(K):
    l, r = map(int, input().split())
    for i in range(l-1, r):
        pins[i] = '.'

print(''.join(pins))
","1.0"
"f2fd7d1f-60d9-4447-8775-ae1cb1500275","
N, K = map(int, input().split())
pins = ['I'] * N

for _ in range(K):
    l, r = map(int, input().split())
    for j in range(l - 1, r):
        pins[j] = '.'

print(''.join(pins))
","1.0"
"f2fd7d1f-60d9-4447-8775-ae1cb1500275","
N, K = map(int, input().split())
pins = ['I'] * N

for _ in range(K):
    l, r = map(int, input().split())
    for j in range(l - 1, r):
        pins[j] = '.'

print(''.join(pins))
","1.0"
"33211b17-8264-45f5-b080-9ef68ce82655","
def is_parallelogram(p1, p2, p3, p4):
    def distance_sq(a, b):
        return (a[0] - b[0]) ** 2 + (a[1] - b[1]) ** 2

    d1 = distance_sq(p1, p2)
    d2 = distance_sq(p1, p3)
    d3 = distance_sq(p1, p4)
    d4 = distance_sq(p2, p3)
    d5 = distance_sq(p2, p4)
    d6 = distance_sq(p3, p4)

    return (d1 == d4 and d2 == d5 and d3 == d6) or (d1 == d5 and d2 == d4 and d3 == d6)

N = int(input())
for _ in range(N):
    points = list(map(int, input().split()))
    p1 = (points[0], points[1])
    p2 = (points[2], points[3])
    p3 = (points[4], points[5])
    p4 = (points[6], points[7])
    if is_parallelogram(p1, p2, p3, p4):
        print(""YES"")
    else:
        print(""NO"")
","1.0"
"33211b17-8264-45f5-b080-9ef68ce82655","
def is_parallelogram(p1, p2, p3, p4):
    def distance_sq(a, b):
        return (a[0] - b[0]) ** 2 + (a[1] - b[1]) ** 2

    d1 = distance_sq(p1, p2)
    d2 = distance_sq(p1, p3)
    d3 = distance_sq(p1, p4)
    d4 = distance_sq(p2, p3)
    d5 = distance_sq(p2, p4)
    d6 = distance_sq(p3, p4)

    return (d1 == d4 and d2 == d5 and d3 == d6) or (d1 == d5 and d2 == d4 and d3 == d6)

N = int(input())
for _ in range(N):
    points = list(map(int, input().split()))
    p1 = (points[0], points[1])
    p2 = (points[2], points[3])
    p3 = (points[4], points[5])
    p4 = (points[6], points[7])
    if is_parallelogram(p1, p2, p3, p4):
        print(""YES"")
    else:
        print(""NO"")
","1.0"
"33211b17-8264-45f5-b080-9ef68ce82655","
def is_parallelogram(p1, p2, p3, p4):
    def distance_sq(a, b):
        return (a[0] - b[0]) ** 2 + (a[1] - b[1]) ** 2

    d1 = distance_sq(p1, p2)
    d2 = distance_sq(p1, p3)
    d3 = distance_sq(p1, p4)
    d4 = distance_sq(p2, p3)
    d5 = distance_sq(p2, p4)
    d6 = distance_sq(p3, p4)

    return (d1 == d4 and d2 == d5 and d3 == d6) or (d1 == d5 and d2 == d4 and d3 == d6)

N = int(input())
for _ in range(N):
    points = list(map(int, input().split()))
    p1 = (points[0], points[1])
    p2 = (points[2], points[3])
    p3 = (points[4], points[5])
    p4 = (points[6], points[7])
    
    if is_parallelogram(p1, p2, p3, p4):
        print(""YES"")
    else:
        print(""NO"")
","1.0"
"06d7584b-69d4-4bbe-b919-2cee80f53cae","
n = int(input())
print(n // 3 + (n % 3 > 0))
","1.0"
"06d7584b-69d4-4bbe-b919-2cee80f53cae","
n = int(input())
goals = 0
while n > 0:
    goals += 1
    n -= goals
print(goals)
","1.0"
"06d7584b-69d4-4bbe-b919-2cee80f53cae","
n = int(input())
goals = 0
while n > 0:
    goals += 1
    n -= goals
print(goals)
","1.0"
"8cb56479-bd55-4e5f-9901-b60fcd56d77f","
def find_ball_position(moves):
    position = 1
    for move in moves:
        if move == 'A':
            if position == 1:
                position = 2
            elif position == 2:
                position = 1
        elif move == 'B':
            if position == 2:
                position = 3
            elif position == 3:
                position = 2
        elif move == 'C':
            if position == 3:
                position = 4
            elif position == 4:
                position = 3
        elif move == 'D':
            if position == 4:
                position = 5
            elif position == 5:
                position = 4
    return position

moves = input().strip()
print(find_ball_position(moves))
","1.0"
"8cb56479-bd55-4e5f-9901-b60fcd56d77f","
sequence = input().strip()
cups = [1, 0, 0, 0, 0]

for move in sequence:
    if move == 'A':
        cups[0], cups[1] = cups[1], cups[0]
    elif move == 'B':
        cups[1], cups[2] = cups[2], cups[1]
    elif move == 'C':
        cups[2], cups[3] = cups[3], cups[2]
    elif move == 'D':
        cups[3], cups[4] = cups[4], cups[3]

print(cups.index(1) + 1)
","1.0"
"8cb56479-bd55-4e5f-9901-b60fcd56d77f","
def find_ball_position(moves):
    position = 1
    for move in moves:
        if move == 'A':
            if position == 1:
                position = 2
            elif position == 2:
                position = 1
        elif move == 'B':
            if position == 2:
                position = 3
            elif position == 3:
                position = 2
        elif move == 'C':
            if position == 3:
                position = 4
            elif position == 4:
                position = 3
        elif move == 'D':
            if position == 4:
                position = 5
            elif position == 5:
                position = 4
    return position

moves = input().strip()
print(find_ball_position(moves))
","1.0"
"e77e3519-0023-4628-97b4-562a17add717","
equation = input().strip()
if equation[1] == '+':
    if equation[0] == 'x':
        x = int(equation[4]) - int(equation[2])
    elif equation[2] == 'x':
        x = int(equation[4]) - int(equation[0])
    else:
        x = int(equation[0]) + int(equation[2])
elif equation[1] == '-':
    if equation[0] == 'x':
        x = int(equation[4]) + int(equation[2])
    elif equation[2] == 'x':
        x = int(equation[0]) - int(equation[4])
    else:
        x = int(equation[0]) - int(equation[2])
print(x)
","1.0"
"e77e3519-0023-4628-97b4-562a17add717","
equation = input().strip()
if equation[1] == '+':
    x_index = 0 if equation[0] == 'x' else 2 if equation[2] == 'x' else 4
    if x_index == 0:
        result = int(equation[4]) - int(equation[2])
    elif x_index == 2:
        result = int(equation[4]) - int(equation[0])
    else:
        result = int(equation[0]) + int(equation[2])
else:
    x_index = 0 if equation[0] == 'x' else 2 if equation[2] == 'x' else 4
    if x_index == 0:
        result = int(equation[4]) + int(equation[2])
    elif x_index == 2:
        result = int(equation[0]) - int(equation[4])
    else:
        result = int(equation[0]) - int(equation[2])
print(result)
","1.0"
"e77e3519-0023-4628-97b4-562a17add717","
equation = input().strip()
a = equation[0]
b = equation[2]
c = equation[4]

if a == 'x':
    if b == '+':
        x = int(c) - int(equation[2])
    else:
        x = int(c) + int(equation[2])
elif b == 'x':
    if equation[0] == '+':
        x = int(c) - int(a)
    else:
        x = int(a) - int(c)
else:
    if b == '+':
        x = int(a) + int(b) - int(c)
    else:
        x = int(a) - int(b) + int(c)

print(x)
","1.0"
"34353951-c305-4bd0-ac17-9df1578bc183","
def summarize_results(n, rounds):
    results = [[0] * 6 for _ in range(n)]
    total_points = [0] * 6
    
    for i in range(n):
        correct_option = rounds[i][0]
        answers = rounds[i][1:]
        count = answers.count(correct_option)
        
        if count == 1:
            points = 6
        elif count == 2:
            points = 3
        elif count == 3:
            points = 2
        else:
            points = 1
        
        for j in range(6):
            if answers[j] == correct_option:
                total_points[j] += points
        
        results[i] = total_points[:]
    
    return results

n = 3
rounds = [
    [1, 2, 2, 1, 3, 3, 2],
    [3, 4, 3, 2, 3, 1, 3],
    [4, 4, 4, 4, 4, 2, 4]
]

results = summarize_results(n, rounds)
for line in results:
    print("" "".join(map(str, line)))
","1.0"
"34353951-c305-4bd0-ac17-9df1578bc183","n = int(input())
results = []
for _ in range(n):
    result = list(map(int, input().split()))
    results.append(result)
    
for i in range(n):
    point_counts = [0] * 6
    for j in range(7):
        point_counts[result[j]-1] += 1
    results[i] = point_counts
    
for result in results:
    print(*result)","1.0"
"34353951-c305-4bd0-ac17-9df1578bc183","
N = int(input())
results = []

for _ in range(N):
    data = list(map(int, input().split()))
    correct_option = data[0]
    answers = data[1:]
    
    correct_count = answers.count(correct_option)
    points = [0] * 6
    
    if correct_count == 1:
        points[answers.index(correct_option)] = 6
    elif correct_count == 2:
        for i in range(6):
            if answers[i] == correct_option:
                points[i] = 3
    elif correct_count == 3:
        for i in range(6):
            if answers[i] == correct_option:
                points[i] = 2
    elif correct_count > 3:
        for i in range(6):
            if answers[i] == correct_option:
                points[i] = 1
    
    results.append(points)

for result in results:
    print("" "".join(map(str, result)))
","1.0"
"19b7ecee-e69a-4f88-bc8f-07a8231ffc88","
location = input().strip()
trips = int(input().strip())

if location == ""Home"":
    if trips == 1:
        print(""Yes"")
    else:
        print(""No"")
else:
    print(""No"")
","1.0"
"19b7ecee-e69a-4f88-bc8f-07a8231ffc88","location = input().strip()trips = int(input().strip())if location == ""Home"" and trips == 1:print(""Yes"")elif location == ""School"" and trips > 1:print(""No"")else:print(""Yes"" if trips % 2 == 1 else ""No"")","1.0"
"19b7ecee-e69a-4f88-bc8f-07a8231ffc88","
location = input().strip()
trips = int(input().strip())

if location == ""Home"":
    if trips == 1:
        print(""Yes"")
    else:
        print(""No"")
else:
    print(""No"")
","1.0"
"cfc0314d-ea18-49f5-8b83-e12b2cfae492","
X, Y, A, B = map(int, input().split())
pirate_time = (B * Y) if B * Y > 0 else float('inf')
merchant_time = (A * X) if A * X > 0 else float('inf')

if pirate_time < merchant_time:
    print(1)
elif merchant_time < pirate_time:
    print(2)
else:
    print(0)
","1.0"
"cfc0314d-ea18-49f5-8b83-e12b2cfae492","
X, Y, A, B = map(int, input().split())
pirate_time = A * X
merchant_time = B * Y

if pirate_time < merchant_time:
    print(1)
elif pirate_time > merchant_time:
    print(2)
else:
    print(0)
","1.0"
"cfc0314d-ea18-49f5-8b83-e12b2cfae492","
X, Y, A, B = map(int, input().split())
pirate_time = A * X
merchant_time = B * Y

if pirate_time < merchant_time:
    print(1)
elif pirate_time > merchant_time:
    print(2)
else:
    print(0)
","1.0"
"5d8eca27-fdd6-446c-82f2-5e3207d3b0e8","
def max_people_with_neighbors(n):
    return (n // 2) + (n // 4)

n = int(input())
print(max_people_with_neighbors(n))
","1.0"
"5d8eca27-fdd6-446c-82f2-5e3207d3b0e8","n = int(input())print(n // 2 + n // 4)","1.0"
"5d8eca27-fdd6-446c-82f2-5e3207d3b0e8","
n = int(input())
print(n // 2 + n // 4)
","1.0"
"93bcd112-f941-49df-8fc8-d8323cea9612","
T, K = map(int, input().split())
arrival_time = T + K

if T < 8:
    if arrival_time > 8:
        arrival_time += 1
elif T < 13:
    if arrival_time > 13:
        arrival_time += 1
elif T < 18:
    if arrival_time > 18:
        arrival_time += 1

print(arrival_time)
","1.0"
"93bcd112-f941-49df-8fc8-d8323cea9612","def bus_arrival_time(departure_time, travel_time):
    if departure_time == 17:
        return ""The last bus has already departed.""
    elif departure_time == 8:
        return ""Bus will arrive at the stop after breakfast.""
    elif departure_time == 13:
        return ""Bus will arrive at the stop before lunch.""
    elif departure_time == 18:
        return ""Bus will arrive at the stop before dinner.""
    else:
        travel_time += 1
        return str(travel_time + 12)

departure_time, travel_time = map(int, input().split())
print(bus_arrival_time(departure_time, travel_time))
isasdasdasda","1.0"
"93bcd112-f941-49df-8fc8-d8323cea9612","
T, K = map(int, input().split())
arrival_time = T + K

if T < 8 and arrival_time >= 8:
    arrival_time += 1
elif T < 13 and arrival_time >= 13:
    arrival_time += 1
elif T < 18 and arrival_time >= 18:
    arrival_time += 1

print(arrival_time)
","1.0"
"24dcfdab-f852-4c60-b195-edf3b81c45e0","
N, K = map(int, input().split())
monkey_crackers = 0

for _ in range(N):
    extra = K % N
    monkey_crackers += extra
    K = K // N * (N - 1)

extra_morning = K % N
monkey_crackers += extra_morning

print(monkey_crackers)
","1.0"
"24dcfdab-f852-4c60-b195-edf3b81c45e0","n, k = map(int, input().split())
count = 0
for i in range(1, n + 1):
    k -= (k // i) - 1
    count += (k // i) - 1
print(count)
######","1.0"
"24dcfdab-f852-4c60-b195-edf3b81c45e0","
N, K = map(int, input().split())
monkey_crackers = 0

for i in range(N):
    if K % N != 0:
        monkey_crackers += K % N
    K -= K // N

monkey_crackers += K % N
print(monkey_crackers)
","1.0"
"663bdee2-c316-4349-847d-5df934d638c4","
l1, w1, h1 = map(int, input().split())
l2, w2, h2 = map(int, input().split())
volume1 = l1 * w1 * h1
volume2 = l2 * w2 * h2

if volume1 > volume2:
    print(""FIRST"")
elif volume1 < volume2:
    print(""SECOND"")
else:
    print(""EQUAL"")
","1.0"
"663bdee2-c316-4349-847d-5df934d638c4","a, b, c = map(int, input().split())
d, e, f = map(int, input().split())

volume_1 = a * b * c
volume_2 = d * e * f

if volume_1 > volume_2:
    print(""FIRST"")
elif volume_1 < volume_2:
    print(""SECOND"")
else:
    print(""EQUAL"")
\n","1.0"
"663bdee2-c316-4349-847d-5df934d638c4","
l1, w1, h1 = map(int, input().split())
l2, w2, h2 = map(int, input().split())
volume1 = l1 * w1 * h1
volume2 = l2 * w2 * h2

if volume1 > volume2:
    print(""FIRST"")
elif volume1 < volume2:
    print(""SECOND"")
else:
    print(""EQUAL"")
","1.0"
"40d4963a-6b16-46b1-850f-ec5a885e4f78","
N = int(input())
letters = {}

for _ in range(N):
    word = input().strip()
    for char in word:
        if char in letters:
            letters[char] += 1
        else:
            letters[char] = 1

for char in sorted(letters.keys()):
    print(f""{char} {letters[char]}"")
","1.0"
"40d4963a-6b16-46b1-850f-ec5a885e4f78","
N = int(input())
letters = {}

for _ in range(N):
    word = input().strip()
    for char in word:
        if char in letters:
            letters[char] += 1
        else:
            letters[char] = 1

for char in sorted(letters.keys()):
    print(f""{char} {letters[char]}"")
","1.0"
"40d4963a-6b16-46b1-850f-ec5a885e4f78","
N = int(input())
letters_count = {}

for _ in range(N):
    name = input().strip()
    for letter in name:
        if letter in letters_count:
            letters_count[letter] += 1
        else:
            letters_count[letter] = 1

for letter in sorted(letters_count.keys()):
    print(letter, letters_count[letter])
","1.0"
"825a391d-5fcd-40a6-8a12-bdcc3dc9622c","
X, K = map(int, input().split())
count = 0
while X < 10**9:
    X *= K
    count += 1
print(count - 1)
","1.0"
"825a391d-5fcd-40a6-8a12-bdcc3dc9622c","
X, K = map(int, input().split())
count = 0
while X < 10**9:
    X *= K
    if X < 10**9:
        count += 1
print(count)
","1.0"
"825a391d-5fcd-40a6-8a12-bdcc3dc9622c","
X, K = map(int, input().split())
count = 0
while X < 10**9:
    X *= K
    if X < 10**9:
        count += 1
print(count)
","1.0"
"6f1e85b2-e2f0-4610-b359-275ba6b71bc4","```
name_string = input().strip()
unique_names = set(name_string)
print(len(unique_names))
```","1.0"
"6f1e85b2-e2f0-4610-b359-275ba6b71bc4","input_string = input().strip()unique_frogs = set(input_string)print(len(unique_frogs))","1.0"
"6f1e85b2-e2f0-4610-b359-275ba6b71bc4","
def count_acquaintances(frog_names):
    return len(set(frog_names))

input_data = input().strip()
print(count_acquaintances(input_data))
","1.0"
"765e7876-1539-4ec9-a84e-dcfb4da2e20b","s, p = map(int, input().split())for i in range(s + 1):j = s - iif i * j == p:print(min(i, j), max(i, j))break","1.0"
"765e7876-1539-4ec9-a84e-dcfb4da2e20b","S, P = map(int, input().split())for x in range(S + 1):y = S - xif x * y == P:print(min(x, y), max(x, y))break","1.0"
"765e7876-1539-4ec9-a84e-dcfb4da2e20b","
S, P = map(int, input().split())
for x in range(S + 1):
    y = S - x
    if x * y == P:
        print(min(x, y), max(x, y))
        break
","1.0"
"8b665b81-e179-4da1-8582-bdd334355d33","p, y = map(int, input().split())for i in range(y, p - 1, -1):if i % p != 0:print(i)breakelse:print(-1)","1.0"
"8b665b81-e179-4da1-8582-bdd334355d33","def solution(p, y):
    beetles = [[] for _ in range(p)]
    i = 1
    for b2 in beetles:
        for j in range(2, y+1):
            if i % p == 1:
                b2.append(j)
            i += 1
        i = 1

    for b in beetles:
        if len(b) == 0:
            return y
        elif max(b) >= y:
            return -1

    return max(b)","1.0"
"8b665b81-e179-4da1-8582-bdd334355d33","
p, y = map(int, input().split())

for i in range(y, p - 1, -1):
    if i % p != 0:
        print(i)
        break
else:
    print(-1)
","1.0"
"606ade49-bac9-436a-ab0f-9db356c7a1dd","
n = int(input())
count = 0
for i in range(1, n):
    if (n - i) % i == 0:
        count += 1
print(count)
","1.0"
"606ade49-bac9-436a-ab0f-9db356c7a1dd","n = int(input())count = 0for i in range(1, n):if (n - i) % i == 0:count += 1print(count)","1.0"
"606ade49-bac9-436a-ab0f-9db356c7a1dd","
n = int(input())
count = 0
for i in range(1, n):
    if (n - i) % i == 0:
        count += 1
print(count)
","1.0"
"1b52e7f3-35b9-4637-9769-0ac2a25d7799","
n = int(input())
canvas = [list(map(int, input().split())) for _ in range(n)]
symmetrical = True
for i in range(n):
    for j in range(i+1, n):
        if canvas[i][j] != canvas[j][i]:
            symmetrical = False
            break
print(""yes"" if symmetrical else ""no"")
","1.0"
"1b52e7f3-35b9-4637-9769-0ac2a25d7799","
n = int(input())
matrix = [input().split() for _ in range(n)]
symmetric = True

for i in range(n):
    for j in range(n):
        if matrix[i][j] != matrix[j][i]:
            symmetric = False
            break
    if not symmetric:
        break

print(""yes"" if symmetric else ""no"")
","1.0"
"1b52e7f3-35b9-4637-9769-0ac2a25d7799","
n = int(input())
matrix = [input().split() for _ in range(n)]
symmetric = True

for i in range(n):
    for j in range(n):
        if matrix[i][j] != matrix[j][i]:
            symmetric = False
            break
    if not symmetric:
        break

print(""yes"" if symmetric else ""no"")
","1.0"
"15ca1e03-d60e-41ae-bf1a-b902059fb037","
n = int(input())
a = list(map(int, input().split()))
unique_deeds = set(a)
unique_deeds.discard(0)
print(len(unique_deeds))
","1.0"
"15ca1e03-d60e-41ae-bf1a-b902059fb037","n = int(input())a = list(map(int, input().split()))unique_scores = set(a)valid_scores = [score for score in unique_scores if score > 0]print(len(valid_scores))","1.0"
"15ca1e03-d60e-41ae-bf1a-b902059fb037","
n = int(input())
a = list(map(int, input().split()))
unique_deeds = set(a)
unique_deeds.discard(0)
print(len(unique_deeds))
","1.0"
"27e3a45a-87d9-4afd-8f88-c8b783da4dcf","N = int(input())print(N // 10 + (N % 10 > 0))","1.0"
"27e3a45a-87d9-4afd-8f88-c8b783da4dcf","
N = int(input())
gold_coins = N // 100 + (1 if N % 100 > 0 else 0)
print(gold_coins)
","1.0"
"27e3a45a-87d9-4afd-8f88-c8b783da4dcf","
N = int(input())
coins = N // 10
if N % 10 > 0:
    coins += 1
print(coins)
","1.0"
"a8e815b1-acf9-4281-ab55-793e1595c689","
x1, x2, x3, x4 = map(int, input().split())
a = x4 - x1
b = x4 - x2
c = x4 - x3
product = a * b * c
print(product)
","1.0"
"a8e815b1-acf9-4281-ab55-793e1595c689","x1, x2, x3, x4 = map(int, input().split())a = (x4 - x1)b = (x4 - x2)c = (x4 - x3)print(a * b * c)","1.0"
"a8e815b1-acf9-4281-ab55-793e1595c689","
x1, x2, x3, x4 = map(int, input().split())
a = (x4 - x1)
b = (x4 - x2)
c = (x4 - x3)
print(a * b * c)
","1.0"
"170140b8-81fd-4d56-9f3e-471b54fd0757","
n = int(input())
count = 0
for i in range(n):
    boyar_num = int(input())
    if (i % 2 == 0 and boyar_num != 1) or (i % 2 == 1 and boyar_num != 2):
        count += 1
print(count)
","1.0"
"170140b8-81fd-4d56-9f3e-471b54fd0757","
N = int(input())
wrong_count = 0
for i in range(N):
    shouted_number = int(input())
    expected_number = 1 if i % 2 == 0 else 2
    if shouted_number != expected_number:
        wrong_count += 1
print(wrong_count)
","1.0"
"170140b8-81fd-4d56-9f3e-471b54fd0757","
N = int(input())
wrong_count = 0

for i in range(N):
    shouted_number = int(input())
    expected_number = 1 if i % 2 == 0 else 2
    if shouted_number != expected_number:
        wrong_count += 1

print(wrong_count)
","1.0"
"64651a5b-ea7b-4ba7-935a-9e1f4d550db9","
p, b, tp, tb = map(int, input().split())
wait_time = p * tp + b * tb
print(wait_time)
","1.0"
"64651a5b-ea7b-4ba7-935a-9e1f4d550db9","
p, b, tp, tb = map(int, input().split())
total_time = p * tp + b * tb
print(total_time)
","1.0"
"64651a5b-ea7b-4ba7-935a-9e1f4d550db9","
p, b, tp, tb = map(int, input().split())
wait_time = p * tp + b * tb
print(wait_time)
","1.0"
"6f12afe1-01f7-4104-876c-c2eb5123751d","
def adjacent_cells(n):
    row = (n - 1) // 8
    col = (n - 1) % 8
    neighbors = []
    
    if row > 0:
        neighbors.append(n - 8)  # above
    if row < 7:
        neighbors.append(n + 8)  # below
    if col > 0:
        neighbors.append(n - 1)  # left
    if col < 7:
        neighbors.append(n + 1)  # right
    
    neighbors.sort()
    return ' '.join(map(str, neighbors))

n = int(input())
print(adjacent_cells(n))
","1.0"
"6f12afe1-01f7-4104-876c-c2eb5123751d","def adjacent_cells(n):result = []if n > 8:result.append(n - 8)if n < 57:result.append(n + 8)if n % 8 != 1:result.append(n - 1)if n % 8 != 0:result.append(n + 1)result.sort()print("" "".join(map(str, result)))n = int(input())adjacent_cells(n)","1.0"
"6f12afe1-01f7-4104-876c-c2eb5123751d","
def adjacent_cells(n):
    neighbors = []
    if n > 8:
        neighbors.append(n - 8)
    if n < 57:
        neighbors.append(n + 8)
    if n % 8 != 1:
        neighbors.append(n - 1)
    if n % 8 != 0:
        neighbors.append(n + 1)
    return sorted(neighbors)

n = int(input())
result = adjacent_cells(n)
print("" "".join(map(str, result)))
","1.0"
"13be4a8c-6e1a-4e47-9bb4-4718777ae867","
X = int(input())
A = int(input())
B = int(input())

max_amount = max(3 * X, A + 2 * B)
print(max_amount)
","1.0"
"13be4a8c-6e1a-4e47-9bb4-4718777ae867","x = int(input())
a = int(input())
b = int(input())

total_salary = a + (b - a) * 12
max_spend = total_salary // 3

print(max_spend)
#####","1.0"
"13be4a8c-6e1a-4e47-9bb4-4718777ae867","
X = int(input())
A = int(input())
B = int(input())

fisherman_income = 3 * X
storyteller_income = A + 2 * B

max_amount = max(fisherman_income, storyteller_income)
print(max_amount)
","1.0"
"5e7b7702-01f1-4717-a1b4-0cd9af8cabdd","
n = int(input())
x = 0
for _ in range(n):
    operation = input().strip()
    if ""++"" in operation:
        x += 1
    else:
        x -= 1
print(x)
","1.0"
"5e7b7702-01f1-4717-a1b4-0cd9af8cabdd","
n = int(input())
x = 0
for _ in range(n):
    operation = input().strip()
    if '++' in operation:
        x += 1
    elif '--' in operation:
        x -= 1
print(x)
","1.0"
"5e7b7702-01f1-4717-a1b4-0cd9af8cabdd","
n = int(input())
x = 0
for _ in range(n):
    operation = input().strip()
    if '++' in operation:
        x += 1
    elif '--' in operation:
        x -= 1
print(x)
","1.0"
"71fdbf7e-8eb6-42ec-8fd1-6d792ca9202d","
A, B, C, V, N = map(int, input().split())
Vi = list(map(int, input().split()))

total_volume = V + sum(Vi)
pool_volume = A * B * C

overflow_volume = max(0, total_volume - pool_volume)
print(overflow_volume)
","1.0"
"71fdbf7e-8eb6-42ec-8fd1-6d792ca9202d","a, b, c, v, n = map(int, input().split())
objects = list(map(int, input().split()))

water = v
for obj in objects:
    if water - obj >= 0:
        water -= obj
    else:
        water = max(0, water - obj)

print(water)","1.0"
"71fdbf7e-8eb6-42ec-8fd1-6d792ca9202d","
A, B, C, V, N = map(int, input().split())
V_pool = A * B * C
V_objects = sum(map(int, input().split()))

V_total = V + V_objects
if V_total > V_pool:
    print(V_total - V_pool)
else:
    print(0)
","1.0"
"bb52cce8-05b9-4e42-ad95-7b5f4e435d31","a, b = map(int, input().split())years = 0while a <= b:a *= 3b *= 2years += 1print(years)","1.0"
"bb52cce8-05b9-4e42-ad95-7b5f4e435d31","
a, b = map(int, input().split())
years = 0
while a <= b:
    a *= 3
    b *= 2
    years += 1
print(years)
","1.0"
"bb52cce8-05b9-4e42-ad95-7b5f4e435d31","
a, b = map(int, input().split())
years = 0
while a <= b:
    a *= 3
    b *= 2
    years += 1
print(years)
","1.0"
"7330236e-4855-4be2-bef9-6e6766bbd181","
N = int(input())
votes = list(map(int, input().split()))
count = [0] * 101

for vote in votes:
    count[vote] += 1

max_votes = max(count)
if count.count(max_votes) > 1:
    print(0)
else:
    print(count.index(max_votes))
","1.0"
"7330236e-4855-4be2-bef9-6e6766bbd181","N = int(input())votes = list(map(int, input().split()))count = [0] * 101for vote in votes:count[vote] += 1max_votes = max(count)if count.count(max_votes) > 1:print(0)else:print(count.index(max_votes))","1.0"
"7330236e-4855-4be2-bef9-6e6766bbd181","
N = int(input())
votes = list(map(int, input().split()))
count = [0] * 101

for vote in votes:
    count[vote] += 1

max_votes = max(count)
if count.count(max_votes) > 1:
    print(0)
else:
    print(count.index(max_votes))
","1.0"
"31e85273-27d5-4648-8ff3-298be60d690e","
A = int(input())
B = int(input())
C = int(input())

max_crab_cakes = (C - A) // B
print(max_crab_cakes)
","1.0"
"31e85273-27d5-4648-8ff3-298be60d690e","A = int(input())B = int(input())C = int(input())N = (C - A) // Bprint(max(0, N))","1.0"
"31e85273-27d5-4648-8ff3-298be60d690e","
A = int(input())
B = int(input())
C = int(input())
N = (C - A) // B
print(N)
","1.0"
"ef110cdc-5bfe-4426-8a9b-fe4ca7392895","
def print_number_image(n):
    images = {
        '0': [""###"", ""# #"", ""# #"", ""# #"", ""###""],
        '1': [""  #"", ""  #"", ""  #"", ""  #"", ""  #""],
        '2': [""###"", ""  #"", ""###"", ""#  "", ""###""],
        '3': [""###"", ""  #"", ""###"", ""  #"", ""###""],
        '4': [""# #"", ""# #"", ""###"", ""  #"", ""  #""],
        '5': [""###"", ""#  "", ""###"", ""  #"", ""###""],
        '6': [""###"", ""#  "", ""###"", ""# #"", ""###""],
        '7': [""###"", ""  #"", ""  #"", ""  #"", ""  #""],
        '8': [""###"", ""# #"", ""###"", ""# #"", ""###""],
        '9': [""###"", ""# #"", ""###"", ""  #"", ""###""]
    }
    for line in images[n]:
        print(line)

n = input().strip()
print_number_image(n)
","1.0"
"ef110cdc-5bfe-4426-8a9b-fe4ca7392895","def print_number_image(n):images = {'0': [""###"", ""# #"", ""# #"", ""# #"", ""###""],'1': [""  #"", ""  #"", ""  #"", ""  #"", ""  #""],'2': [""###"", ""  #"", ""###"", ""#  "", ""###""],'3': [""###"", ""  #"", ""###"", ""  #"", ""###""],'4': [""# #"", ""# #"", ""###"", ""  #"", ""  #""],'5': [""###"", ""#  "", ""###"", ""  #"", ""###""],'6': [""###"", ""#  "", ""###"", ""# #"", ""###""],'7': [""###"", ""  #"", ""  #"", ""  #"", ""  #""],'8': [""###"", ""# #"", ""###"", ""# #"", ""###""],'9': [""###"", ""# #"", ""###"", ""  #"", ""###""]}for line in images[n]:print(line)n = input().strip()print_number_image(n)","1.0"
"ef110cdc-5bfe-4426-8a9b-fe4ca7392895","
def print_number_image(n):
    images = {
        '0': [""###"", ""# #"", ""# #"", ""# #"", ""###""],
        '1': [""  #"", ""  #"", ""  #"", ""  #"", ""  #""],
        '2': [""###"", ""  #"", ""###"", ""#  "", ""###""],
        '3': [""###"", ""  #"", ""###"", ""  #"", ""###""],
        '4': [""# #"", ""# #"", ""###"", ""  #"", ""  #""],
        '5': [""###"", ""#  "", ""###"", ""  #"", ""###""],
        '6': [""###"", ""#  "", ""###"", ""# #"", ""###""],
        '7': [""###"", ""  #"", ""  #"", ""  #"", ""  #""],
        '8': [""###"", ""# #"", ""###"", ""# #"", ""###""],
        '9': [""###"", ""# #"", ""###"", ""  #"", ""###""]
    }
    for line in images[n]:
        print(line)

n = input().strip()
print_number_image(n)
","1.0"
"6a5a3a27-897e-4d43-8eba-5774b08efba5","
A = int(input())
B = int(input())
C = int(input())

max_coins = max(A, B, C)
total_coins = A + B + C
target = max_coins * 3

needed_coins = target - total_coins
seconds = needed_coins // 2

if needed_coins % 2 != 0:
    seconds += 1

print(seconds)
","1.0"
"6a5a3a27-897e-4d43-8eba-5774b08efba5","
A = int(input())
B = int(input())
C = int(input())

max_coins = max(A, B, C)
total_coins = A + B + C
target = max_coins * 3

needed_coins = target - total_coins
seconds = needed_coins // 2

if needed_coins % 2 != 0:
    seconds += 1

print(seconds)
","1.0"
"6a5a3a27-897e-4d43-8eba-5774b08efba5","
A = int(input())
B = int(input())
C = int(input())

max_coins = max(A, B, C)
total_coins = A + B + C
target = max_coins * 3

needed_coins = target - total_coins
seconds = needed_coins // 2

if needed_coins % 2 != 0:
    seconds += 1

print(seconds)
","1.0"
"d545163d-9cf7-4877-9ec9-53b8c4b1b499","X, N, T = map(int, input().split())if X >= N:print(N)else:time_left = 300 - 60burgers_eaten = Xtime_needed = (N - X) * Tif time_needed <= time_left:burgers_eaten = Nelse:burgers_eaten += time_left // Tprint(burgers_eaten)","1.0"
"d545163d-9cf7-4877-9ec9-53b8c4b1b499","
def calculate_kraxburgers(input_string):
    X, N, T = map(int, input_string.split())
    total_time = 300  # 5 minutes in seconds
    time_spent = T * (X - 1)  # time spent on Kraxburgers after the first minute
    if time_spent < total_time - 60:
        return min(N, X + (total_time - 60 - time_spent) // T)
    return min(N, X)

# Example usage
print(calculate_kraxburgers(""7 12 45""))  # Output: 12
print(calculate_kraxburgers(""3 10 60""))  # Output: 7
","1.0"
"d545163d-9cf7-4877-9ec9-53b8c4b1b499","
X, N, T = map(int, input().split())

if X >= N:
    print(N)
else:
    time_left = 300 - 60
    additional_burgers = time_left // T
    total_burgers = X + additional_burgers
    print(min(total_burgers, N))
","1.0"
"bcf28659-36f2-4add-99d1-7b600b104c71","
x, y, z = map(int, input().split())

if x > y + z or y > x + z:
    print('+' if x > y else '-')
elif x + z == y + z:
    print('0')
else:
    print('?')
","1.0"
"bcf28659-36f2-4add-99d1-7b600b104c71","
x, y, z = map(int, input().split())
if x + z > y:
    print(""+"")
elif y + z > x:
    print(""-"")
elif x == y:
    if z > 0:
        print(""?"")
    else:
        print(""0"")
else:
    print(""?"")
","1.0"
"bcf28659-36f2-4add-99d1-7b600b104c71","
x, y, z = map(int, input().split())

if x + z > y:
    if x + z - y > 0:
        print(""+"")
    else:
        print(""?"")
elif y + z > x:
    if y + z - x > 0:
        print(""-"")
    else:
        print(""?"")
else:
    if x + z == y + z:
        print(""0"")
    else:
        print(""?"")
","1.0"
"d0c2eebb-d0a4-4fc8-9a98-9d5781c4d2d7","
A, B = map(int, input().split())
total_hours = 0

while A > 0:
    total_hours += A
    extinguished = A
    A = extinguished // B
    if extinguished % B != 0:
        A += 1

print(total_hours)
","1.0"
"d0c2eebb-d0a4-4fc8-9a98-9d5781c4d2d7","A, B = map(int, input().split())total_hours = Aextinguished_candles = Awhile extinguished_candles >= B:new_candles = extinguished_candles // Btotal_hours += new_candlesextinguished_candles = extinguished_candles % B + new_candlesprint(total_hours)","1.0"
"d0c2eebb-d0a4-4fc8-9a98-9d5781c4d2d7","
A, B = map(int, input().split())
total_hours = 0

while A > 0:
    total_hours += A
    A, B = A // B, A % B

print(total_hours)
","1.0"
"6723979a-b30c-4944-b9fd-970aabedbea3","
p, a, b, c = map(int, input().split())
x = a - p % a if p % a != 0 else 0
y = b - p % b if p % b != 0 else 0
z = c - p % c if p % c != 0 else 0
print(min(x, y, z))
","1.0"
"6723979a-b30c-4944-b9fd-970aabedbea3","
p, a, b, c = map(int, input().split())
next_harry = ((p // a) + 1) * a
next_snelly = ((p // b) + 1) * b
next_mary = ((p // c) + 1) * c
result = min(next_harry, next_snelly, next_mary) - p
print(result)
","1.0"
"6723979a-b30c-4944-b9fd-970aabedbea3","
p, a, b, c = map(int, input().split())

def next_finish_time(p, t):
    if p % t == 0:
        return 0
    return t - (p % t)

result = min(next_finish_time(p, a), next_finish_time(p, b), next_finish_time(p, c))
print(result)
","1.0"
"94c2e814-50e3-4d66-a2b1-fa52ccfc19ef","N = int(input())D = list(map(int, input().split()))A, B = map(int, input().split())print(sum(D[A-1:B-1]))","1.0"
"94c2e814-50e3-4d66-a2b1-fa52ccfc19ef","
N = int(input())
D = list(map(int, input().split()))
A, B = map(int, input().split())

total_cham = sum(D[A-1:B-1])
print(total_cham)
","1.0"
"94c2e814-50e3-4d66-a2b1-fa52ccfc19ef","
N = int(input())
D = list(map(int, input().split()))
A, B = map(int, input().split())

total_cham = 0
for i in range(A - 1, B - 1):
    total_cham += D[i]

print(total_cham)
","1.0"
"bee15a15-bd8c-4a01-911e-ddf3e5ba6f80","
n, m = map(int, input().split())
base = n // m
extra = n % m
result = [base + 1] * extra + [base] * (m - extra)
result.sort()
print("" "".join(map(str, result)))
","1.0"
"bee15a15-bd8c-4a01-911e-ddf3e5ba6f80","
n, m = map(int, input().split())
base = n // m
extra = n % m
result = [base + 1] * extra + [base] * (m - extra)
result.sort()
print("" "".join(map(str, result)))
","1.0"
"bee15a15-bd8c-4a01-911e-ddf3e5ba6f80","
n, m = map(int, input().split())
base = n // m
extra = n % m
result = [base + 1] * extra + [base] * (m - extra)
result.sort()
print("" "".join(map(str, result)))
","1.0"
"8e83aa88-b80e-4a89-97a6-773e94a0acf3","
5N
 =2 int (input7())
 orders3 =  list4(map 9
(int,3 input
1 ().split25()))
 M11 =
 int(input())
defective = list(map(int, input().split()))

prefix```_sumpython =
 [n0 =] int *(input (())
Na = +  list(map1)
(int,for input i(). insplit range(()))
1m, = N int +(input ())
1q):
 =    list prefix(map_sum(int[i,] input =(). prefixsplit_sum()))

prefix[i_sum -  = [1]0 +] orders *[i n
 - prefix1_sum]

[for q in0 defective]:
 =    a left[0,]
for right i = in  range1(,1 N,
 n   ):
 while    left prefix_sum <[i right]:
 =        prefix mid_sum =[i (-left1 +] right +) a //[i ]

2for
 query        in if q q:
 >    prefix left_sum,[mid right]:
 =             left0 =, mid n + -  11

           else while:
 left            < right right =:
 mid       
 mid    = print ((leftleft)
 +``` right) // 2
        if query <= prefix_sum[mid]:
            right = mid
        else:
            left = mid + 1
    print(left + 1)
","1.0"
"8e83aa88-b80e-4a89-97a6-773e94a0acf3","n, a = map(int, input().split())
orders = list(map(int, input().split()))
m, q = map(int, input().split())
requests = list(map(int, input().split()))

for request in requests:
    for order, count in enumerate(orders):
        if request <= count:
            print(order + 1)
            break
","1.0"
"8e83aa88-b80e-4a89-97a6-773e94a0acf3","
n = int(input())
orders = list(map(int, input().split()))
m = int(input())
defective = list(map(int, input().split()))

prefix_sum = [0] * n
prefix_sum[0] = orders[0]
for i in range(1, n):
    prefix_sum[i] = prefix_sum[i - 1] + orders[i]

for q in defective:
    for i in range(n):
        if q <= prefix_sum[i]:
            print(i + 1)
            break
","1.0"
"7402f10b-561e-4547-8f06-38f69d85a6c9","
print(1)
","1.0"
"7402f10b-561e-4547-8f06-38f69d85a6c9","
input()
print(1)
","1.0"
"7402f10b-561e-4547-8f06-38f69d85a6c9","
input()
print(1)
","1.0"
"6b8c932c-83a8-48ca-a113-6d30c2614e04","
N = int(input())
bytes_per_file = 10
files_per_packet = 10
total_bytes_per_packet = bytes_per_file * files_per_packet
max_packets = N // total_bytes_per_packet
print(max_packets)
","1.0"
"6b8c932c-83a8-48ca-a113-6d30c2614e04","N = int(input())bytes_per_file = 10files_per_packet = 10total_bytes_per_packet = bytes_per_file * files_per_packetmax_packets = N // total_bytes_per_packetprint(max_packets)","1.0"
"6b8c932c-83a8-48ca-a113-6d30c2614e04","
N = int(input())
bytes_per_file = 10
files_per_packet = 10
total_files = N // bytes_per_file
fully_filled_packets = total_files // files_per_packet
print(fully_filled_packets)
","1.0"
"8f601481-e94b-4fb5-bd98-938b284df9fe","
A = int(input())
B = int(input())
C = int(input())

def sum_of_digits(n):
    return sum(int(digit) for digit in str(n))

T, M = -1, -1

for i in range(A, B + 1):
    if sum_of_digits(i) == C:
        if T == -1:
            T = i
        M = i

print(T)
print(M)
","1.0"
"8f601481-e94b-4fb5-bd98-938b284df9fe","a, b, c = map(int, input().split())
min_t = max(a, c)
max_m = min(b, c)

print(min_t)
print(max_m)
 předsed
<|end_of_text|> produced as text without sentences ↪ntent


Input:1
100
4

Output:4
40

Input:100
500
12

Output:129
480

Input:1
10000
1

Output:1
10000","1.0"
"8f601481-e94b-4fb5-bd98-938b284df9fe","
A = int(input())
B = int(input())
C = int(input())

def digit_sum(n):
    return sum(int(d) for d in str(n))

T = None
M = None

for i in range(A, B + 1):
    if digit_sum(i) == C:
        if T is None:
            T = i
        M = i

print(T)
print(M)
","1.0"
"580154b5-aff6-4be5-aee1-ef65fd358eee","
A, B = map(int, input().split())
count = 0
while A > 0 and B > 0:
    if A > B:
        count += A // B
        A = A % B
    else:
        count += B // A
        B = B % A
print(count)
","1.0"
"580154b5-aff6-4be5-aee1-ef65fd358eee","def squares(a, b):
    count = 0
    while a > 0 and b > 0:
        if a <= b:
            a, b = b - a, 0
        else:
            b, a = a - b, 0
        count += 1
    return count

a, b = map(int, input().split())
print(squares(a, b))

def squares(a, b):
    count = 0
    while a > 0 and b > 0:
        if a <= b:
            a, b = b - a, 0
        else:
            b, a = a - b, 0
        count += 1
    return count

a, b = map(int, input().split())
print(squares(a, b))

This code calculates the number of squares that can be created by cutting the rectangle with sides A and B using a single horizontal cut. The function 'squares' takes the two parameters 'a' and 'b', which represent the sides of the rectangle, and returns the number of squares that can be created. It uses a while loop that runs until either 'a' or 'b' becomes zero, decreasing 'b' by 'a' if 'a' is smaller and adjusting 'a' if it is the opposite. The count of squares is incremented in each iteration. The final count is then returned by the function. The code then takes input from the user for the values of 'a' and 'b', splits the input, converts them to integers, and calls the 'squares' function. Finally, the result is printed on the console.""","1.0"
"580154b5-aff6-4be5-aee1-ef65fd358eee","
A, B = map(int, input().split())
count = 0
while A > 0 and B > 0:
    if A > B:
        count += A // B
        A = A % B
    else:
        count += B // A
        B = B % A
print(count)
","1.0"
"8b57cf61-951d-4c47-b41c-90e13b9f5358","
N, L = map(int, input().split())
probabilities = list(map(int, input().split()))

best_start = -1
min_rain_sum = float('inf')

for start in range(N - L + 1):
    if probabilities[start] == 0 and probabilities[start + L - 1] == 0:
        rain_sum = sum(probabilities[start + 1:start + L - 1])
        if rain_sum < min_rain_sum:
            min_rain_sum = rain_sum
            best_start = start + 1

print(best_start)
","1.0"
"8b57cf61-951d-4c47-b41c-90e13b9f5358","
N, L = map(int, input().split())
probabilities = list(map(int, input().split()))

best_start = -1
min_rain_sum = float('inf')

for start in range(N - L + 1):
    if probabilities[start] == 0 and probabilities[start + L - 1] == 0:
        rain_sum = sum(probabilities[start + 1:start + L - 1])
        if rain_sum < min_rain_sum:
            min_rain_sum = rain_sum
            best_start = start + 1

print(best_start)
","1.0"
"8b57cf61-951d-4c47-b41c-90e13b9f5358","
N, L = map(int, input().split())
probabilities = list(map(int, input().split()))

best_start = -1
min_rain_sum = float('inf')

for start in range(N - L + 1):
    if probabilities[start] == 0 and probabilities[start + L - 1] == 0:
        rain_sum = sum(probabilities[start + 1:start + L - 1])
        if rain_sum < min_rain_sum:
            min_rain_sum = rain_sum
            best_start = start + 1

print(best_start)
","1.0"
"58ca4991-edd2-4ea2-b81d-d9a258740ded","
N = int(input())
temperatures = list(map(int, input().split()))
max_change = 0
second = 0

for i in range(1, N):
    change = abs(temperatures[i] - temperatures[i - 1])
    if change > max_change:
        max_change = change
        second = i + 1

print(second)
","1.0"
"58ca4991-edd2-4ea2-b81d-d9a258740ded","
N = int(input())
temperatures = list(map(int, input().split()))
max_change = 0
second = 0

for i in range(1, N):
    change = abs(temperatures[i] - temperatures[i - 1])
    if change > max_change:
        max_change = change
        second = i + 1

print(second)
","1.0"
"58ca4991-edd2-4ea2-b81d-d9a258740ded","
N = int(input())
temperatures = list(map(int, input().split()))
max_change = 0
max_index = 0

for i in range(1, N):
    change = abs(temperatures[i] - temperatures[i - 1])
    if change > max_change:
        max_change = change
        max_index = i

print(max_index + 1)
","1.0"
"65a82391-b543-4715-91f5-4c5e7baf3fa0","
a, b = input().split()
if sorted(a.lower()) == sorted(b.lower()):
    print(""Yes"")
else:
    print(""No"")
","1.0"
"65a82391-b543-4715-91f5-4c5e7baf3fa0","def can_rearrange(name1, name2):return sorted(name1.lower()) == sorted(name2.lower())input_data = input().strip()name1, name2 = input_data.split()if can_rearrange(name1, name2):print(""Yes"")else:print(""No"")","1.0"
"65a82391-b543-4715-91f5-4c5e7baf3fa0","
def can_rearrange_names(name1, name2):
    return sorted(name1.lower()) == sorted(name2.lower())

input_data = input().strip()
name1, name2 = input_data.split()
if can_rearrange_names(name1, name2):
    print(""Yes"")
else:
    print(""No"")
","1.0"
"eab227d7-e139-4289-8d39-eaa2b5b376c0","
N, W, K = map(int, input().split())
print((N * K) // W)
","1.0"
"eab227d7-e139-4289-8d39-eaa2b5b376c0","N, W, K = map(int, input().split())total_weight_after = N * Wtotal_weight_before = total_weight_after * Kcoins_before = total_weight_before // Wprint(coins_before)","1.0"
"eab227d7-e139-4289-8d39-eaa2b5b376c0","
N, W, K = map(int, input().split())
total_weight_after = N * W
total_weight_before = total_weight_after * K
coins_before = total_weight_before // W
print(coins_before)
","1.0"
"076cbcbd-ca30-415b-b2b9-701ea29eb934","
import math

K, T = map(int, input().split())
neurons = [tuple(map(int, input().split())) for _ in range(K)]

def distance(n1, n2):
    return math.sqrt((n1[0] - n2[0]) ** 2 + (n1[1] - n2[1]) ** 2)

max_increase = T
for i in range(K):
    for j in range(i + 1, K):
        d = distance(neurons[i], neurons[j])
        r1 = neurons[i][2]
        r2 = neurons[j][2]
        if d < r1 + r2 + max_increase * 2:
            max_increase = min(max_increase, (d - r1 - r2) / 2)

print(f""{max_increase:.2f}"")
","1.0"
"076cbcbd-ca30-415b-b2b9-701ea29eb934","
import math

K, T = map(int, input().split())
neurons = [tuple(map(int, input().split())) for _ in range(K)]

def distance(n1, n2):
    return math.sqrt((n1[0] - n2[0]) ** 2 + (n1[1] - n2[1]) ** 2)

max_increase = T
for i in range(K):
    for j in range(i + 1, K):
        d = distance(neurons[i][:2], neurons[j][:2])
        r1 = neurons[i][2]
        r2 = neurons[j][2]
        if d < r1 + r2 + max_increase * 2:
            max_increase = (d - r1 - r2) / 2

print(f""{max_increase:.2f}"")
","1.0"
"076cbcbd-ca30-415b-b2b9-701ea29eb934","
import math

K, T = map(int, input().split())
neurons = [tuple(map(int, input().split())) for _ in range(K)]

def distance(n1, n2):
    return math.sqrt((n1[0] - n2[0]) ** 2 + (n1[1] - n2[1]) ** 2)

max_increase = T
for i in range(K):
    for j in range(i + 1, K):
        d = distance(neurons[i][:2], neurons[j][:2])
        r1 = neurons[i][2] + max_increase
        r2 = neurons[j][2] + max_increase
        if d < r1 + r2:
            max_increase = min(max_increase, (d - neurons[i][2] - neurons[j][2]) / 2)

print(f""{max_increase:.2f}"")
","1.0"
"bec8ed8e-a7fa-4cf9-a000-4b52d98ef48e","
N = int(input())
connectors = list(map(int, input().split()))
total = sum(connectors) - (N - 1)
print(total)
","1.0"
"bec8ed8e-a7fa-4cf9-a000-4b52d98ef48e","
N = int(input())
tees = list(map(int, input().split()))
total_connectors = sum(tees)
max_charging = total_connectors - (N - 1)
print(max_charging)
","1.0"
"bec8ed8e-a7fa-4cf9-a000-4b52d98ef48e","
N = int(input())
connectors = list(map(int, input().split()))
total = sum(connectors) - (N - 1)
print(total)
","1.0"
"f611255f-9f87-4db6-b36d-596aaa95886b","
N = int(input())
matrix = [list(input().strip()) for _ in range(N)]

dp = [[0] * N for _ in range(N)]
max_side = 0

for i in range(N):
    for j in range(N):
        if matrix[i][j] == '1':
            if i == 0 or j == 0:
                dp[i][j] = 1
            else:
                dp[i][j] = min(dp[i-1][j-1], dp[i-1][j], dp[i][j-1]) + 1
            max_side = max(max_side, dp[i][j])

print(max_side * max_side)
","1.0"
"f611255f-9f87-4db6-b36d-596aaa95886b","N = int(input())matrix = [input().strip() for _ in range(N)]dp = [[0] * N for _ in range(N)]max_side = 0for i in range(N):for j in range(N):if matrix[i][j] == '1':if i == 0 or j == 0:dp[i][j] = 1else:dp[i][j] = min(dp[i-1][j], dp[i][j-1], dp[i-1][j-1]) + 1max_side = max(max_side, dp[i][j])print(max_side * max_side)","1.0"
"f611255f-9f87-4db6-b36d-596aaa95886b","
N = int(input())
matrix = [input().strip() for _ in range(N)]
dp = [[0] * N for _ in range(N)]
max_side = 0

for i in range(N):
    for j in range(N):
        if matrix[i][j] == '1':
            if i == 0 or j == 0:
                dp[i][j] = 1
            else:
                dp[i][j] = min(dp[i-1][j], dp[i][j-1], dp[i-1][j-1]) + 1
            max_side = max(max_side, dp[i][j])

print(max_side * max_side)
","1.0"
"c0fb5634-ca08-405e-bc61-ac50fc7d0a99","
N, K, M = map(int, input().split())
day = 0
while N > 0:
    day += 1
    pears_today = K + (day - 1) * M
    N -= pears_today
print(pears_today)
","1.0"
"c0fb5634-ca08-405e-bc61-ac50fc7d0a99","
N, K, M = map(int, input().split())
days = 0

while K < N:
    days += 1
    K += M

print(days)
","1.0"
"c0fb5634-ca08-405e-bc61-ac50fc7d0a99","
N, K, M = map(int, input().split())
days = 0

while K < N:
    days += 1
    K += M

print(days)
","1.0"
"3128bb96-33e2-4b01-b4a0-f067a421045c","
def calculate_mass(formula):
    mass_dict = {'C': 12, 'H': 1, 'N': 14, 'O': 16}
    total_mass = 0
    i = 0
    while i < len(formula):
        element = formula[i]
        i += 1
        count = 1
        if i < len(formula) and formula[i].isdigit():
            count = int(formula[i])
            i += 1
        total_mass += mass_dict[element] * count
    return total_mass

formula = input().strip()
print(calculate_mass(formula))
","1.0"
"3128bb96-33e2-4b01-b4a0-f067a421045c","
def calculate_mass(formula):
    mass_dict = {'C': 12, 'H': 1, 'N': 14, 'O': 16}
    total_mass = 0
    i = 0
    while i < len(formula):
        element = formula[i]
        i += 1
        count = 1
        if i < len(formula) and formula[i].isdigit():
            count = int(formula[i])
            i += 1
        total_mass += mass_dict[element] * count
    return total_mass

formula = input().strip()
print(calculate_mass(formula))
","1.0"
"3128bb96-33e2-4b01-b4a0-f067a421045c","
def calculate_mass(formula):
    mass_dict = {'C': 12, 'H': 1, 'N': 14, 'O': 16}
    total_mass = 0
    i = 0
    while i < len(formula):
        element = formula[i]
        i += 1
        count = 1
        if i < len(formula) and formula[i].isdigit():
            count = int(formula[i])
            i += 1
        total_mass += mass_dict[element] * count
    return total_mass

formula = input().strip()
print(calculate_mass(formula))
","1.0"
"afdf5a16-8bd4-4b26-a202-608e047fb891","def gray_paint_area(l, r):total_area = 0for i in range(l, r + 1):if i % 2 == 0:height = 0power = 1while i % (2 ** power) == 0:height += 1power += 1total_area += heightreturn total_areal, r = map(int, input().split())print(gray_paint_area(l, r))","1.0"
"afdf5a16-8bd4-4b26-a202-608e047fb891","def gray_paint_area(l, r):total_area = 0for i in range(l, r + 1):if i % 2 == 0:k = 0while i % (2 ** (k + 1)) == 0:k += 1total_area += kreturn total_areal, r = map(int, input().split())print(gray_paint_area(l, r))","1.0"
"afdf5a16-8bd4-4b26-a202-608e047fb891","
def gray_paint_area(l, r):
    total_area = 0
    for i in range(l, r + 1):
        if i % 2 == 0:
            height = 0
            power = 1
            while i % (2 ** (power + 1)) == 0:
                height += 1
                power += 1
            total_area += height
    return total_area

l, r = map(int, input().split())
print(gray_paint_area(l, r))
","1.0"
"3c3ef2a2-f6fa-4cc9-bd4f-fd1bf5a07ba3","
def bubble_sort_with_candy(arr, candy_pairs):
    n = len(arr)
    candy_set = set()
    for a, b in candy_pairs:
        candy_set.add((a, b))
        candy_set.add((b, a))
    
    for i in range(n - 1):
        for j in range(n - 1):
            if arr[j] > arr[j + 1] and (arr[j], arr[j + 1]) not in candy_set:
                arr[j], arr[j + 1] = arr[j + 1], arr[j]
    return arr

n = int(input())
arr = list(map(int, input().split()))
m = int(input())
candy_pairs = [tuple(map(int, input().split())) for _ in range(m)]
result = bubble_sort_with_candy(arr, candy_pairs)
print(' '.join(map(str, result)))
","1.0"
"3c3ef2a2-f6fa-4cc9-bd4f-fd1bf5a07ba3","
def bubble_sort_with_candy(arr, candy_pairs):
    n = len(arr)
    candy_set = set()
    for a, b in candy_pairs:
        candy_set.add((a, b))
        candy_set.add((b, a))
    
    for i in range(n - 1):
        for j in range(n - 1):
            if arr[j] > arr[j + 1] and (arr[j], arr[j + 1]) not in candy_set:
                arr[j], arr[j + 1] = arr[j + 1], arr[j]
    return arr

n = int(input())
arr = list(map(int, input().split()))
m = int(input())
candy_pairs = [tuple(map(int, input().split())) for _ in range(m)]
result = bubble_sort_with_candy(arr, candy_pairs)
print(' '.join(map(str, result)))
","1.0"
"3c3ef2a2-f6fa-4cc9-bd4f-fd1bf5a07ba3","
def bubble_sort_with_candy(arr, candy_pairs):
    n = len(arr)
    candy_set = set()
    for a, b in candy_pairs:
        candy_set.add((a, b))
        candy_set.add((b, a))
    
    for i in range(n - 1):
        for j in range(n - 1):
            if arr[j] > arr[j + 1] and (arr[j], arr[j + 1]) not in candy_set:
                arr[j], arr[j + 1] = arr[j + 1], arr[j]
    return arr

n = int(input())
arr = list(map(int, input().split()))
m = int(input())
candy_pairs = [tuple(map(int, input().split())) for _ in range(m)]
result = bubble_sort_with_candy(arr, candy_pairs)
print("" "".join(map(str, result)))
","1.0"
"8dc31c6f-539a-43b4-bf20-f1ffeb429b68","
N = int(input())
advisors = list(map(int, input().split()))
result = []
day = 0

for i in range(N):
    if advisors[i] > 0:
        for j in range(advisors[i]):
            result.append('+')
            day += 1
    else:
        result.append('-')
    
    while day > len(result):
        result.append('-')

while day < sum(advisors):
    result.append('+')
    day += 1

print(' '.join(result))
","1.0"
"8dc31c6f-539a-43b4-bf20-f1ffeb429b68","n = int(input())
days = list(map(int, input().split()))
p = 0
result = """"

for i in range(n):
    if days[i] > 0:
        result += ""+""
        p = i
        while i < n and days[i] > 0:
            result += ""+""
            i += 1
    else:
        result += ""-""
        p = max(p, i)

    if i < n - 1:
        if days[i + 1] == 0:
            result += ""-""
            i += 1
        elif days[i] == 0 and days[i + 1] > 1:
            result += ""+""
            days[i + 1] -= 1

print(result)","1.0"
"8dc31c6f-539a-43b4-bf20-f1ffeb429b68","
N = int(input())
advisors = list(map(int, input().split()))

result = []
day = 0

for i in range(N):
    if advisors[i] > 0:
        for j in range(advisors[i]):
            while len(result) <= day:
                result.append('-')
            result[day] = '+'
            day += 1
    else:
        while len(result) <= day:
            result.append('-')
        result[day] = '-'
        day += 1

while len(result) < day:
    result.append('-')

print(' '.join(result))
","1.0"
"4e146a7f-e7ea-468d-8ff3-bc5bc504e0bd","N = int(input())results = []for _ in range(N):x1, y1, x2, y2, R, x, y = map(int, input().split())room_left = min(x1, x2)room_right = max(x1, x2)room_bottom = min(y1, y2)room_top = max(y1, y2)if room_left <= x <= room_right and room_bottom <= y <= room_top:wall_distances = [abs(room_left - x),abs(room_right - x),abs(room_bottom - y),abs(room_top - y)]if any(dist < R for dist in wall_distances):results.append(""yes"")else:results.append(""no"")else:results.append(""no"")for result in results:print(result)","1.0"
"4e146a7f-e7ea-468d-8ff3-bc5bc504e0bd","N = int(input())for _ in range(N):x1, y1, x2, y2, R, x, y = map(int, input().split())if x1 > x2: x1, x2 = x2, x1if y1 > y2: y1, y2 = y2, y1if (x < x1 - R or x > x2 + R or y < y1 - R or y > y2 + R):print(""no"")else:print(""yes"")","1.0"
"4e146a7f-e7ea-468d-8ff3-bc5bc504e0bd","
N = int(input())
results = []

for _ in range(N):
    x1, y1, x2, y2, R, x, y = map(int, input().split())
    if x1 > x2:
        x1, x2 = x2, x1
    if y1 > y2:
        y1, y2 = y2, y1
    if x < x1 - R or x > x2 + R or y < y1 - R or y > y2 + R:
        results.append(""no"")
    else:
        if (x < x1 and (x1 - x) ** 2 <= R ** 2) or (x > x2 and (x - x2) ** 2 <= R ** 2) or (y < y1 and (y1 - y) ** 2 <= R ** 2) or (y > y2 and (y - y2) ** 2 <= R ** 2):
            results.append(""yes"")
        else:
            results.append(""no"")

for result in results:
    print(result)
","1.0"
"abbcc924-83f6-4516-b276-427d9cbe00e1","N, W, K = map(int, input().split())sheets_drilled = (K - 1) * W + 1print(sheets_drilled)","1.0"
"abbcc924-83f6-4516-b276-427d9cbe00e1","N, W, K = map(int, input().split())sheets_drilled = (K - 1) * W + 1print(sheets_drilled)","1.0"
"abbcc924-83f6-4516-b276-427d9cbe00e1","
N, W, K = map(int, input().split())
sheets_drilled = (K - 1) * W + 1
print(sheets_drilled)
","1.0"
"1ef1f261-55cb-46d2-a802-e3c83ec23c72","
n = int(input())
a = list(map(int, input().split()))
unique_non_zero = set(x for x in a if x != 0)
print(len(unique_non_zero))
","1.0"
"1ef1f261-55cb-46d2-a802-e3c83ec23c72","n = int(input())a = list(map(int, input().split()))unique_non_zero = set(x for x in a if x != 0)print(len(unique_non_zero))","1.0"
"1ef1f261-55cb-46d2-a802-e3c83ec23c72","
n = int(input())
a = list(map(int, input().split()))
unique_non_zero = set(x for x in a if x != 0)
print(len(unique_non_zero))
","1.0"
"3abda59e-f14c-4509-8c89-fa074d981177","
n = int(input())
a = [1]
while len(a) < n:
    if len(set(a)) == len(a):
        a.append(a[-1] + 2)
    else:
        a.append(a[-1] + 3)
print(a[n-1])
","1.0"
"3abda59e-f14c-4509-8c89-fa074d981177","def robot_gena(n):sequence = []for i in range(1, n + 1):if i == 1:sequence.append(1)else:if i in sequence:sequence.append(sequence[-1] + 3)else:sequence.append(sequence[-1] + 2)return sequence[-1]n = int(input())print(robot_gena(n))","1.0"
"3abda59e-f14c-4509-8c89-fa074d981177","
def robot_gena(n):
    sequence = []
    appeared = set()
    current = 1
    for i in range(n):
        sequence.append(current)
        appeared.add(current)
        if i + 1 < n:
            if (i + 1) in appeared:
                current += 3
            else:
                current += 2
    return sequence[-1]

n = int(input())
print(robot_gena(n))
","1.0"
"02324164-09e1-4932-9dec-37eadf4c332d","words = input().split()word1, word2 = words[0], words[1]if sorted(word1) == sorted(word2) and word1 != word2:print(""YES"")else:print(""NO"")","1.0"
"02324164-09e1-4932-9dec-37eadf4c332d","def are_anagrams(word1, word2):return sorted(word1) == sorted(word2)input_line = input()word1, word2 = input_line.split()if are_anagrams(word1, word2) and word1 != word2:print(""YES"")else:print(""NO"")","1.0"
"02324164-09e1-4932-9dec-37eadf4c332d","
words = input().split()
if sorted(words[0]) == sorted(words[1]):
    print(""YES"")
else:
    print(""NO"")
","1.0"
"bb43cfa0-0a74-480c-a052-62bd7875a4ec","x = float(input())total_overhang = 0planks = 0while total_overhang < x:planks += 1total_overhang += 1 / (planks + 1)print(f""{planks} planks"")","1.0"
"bb43cfa0-0a74-480c-a052-62bd7875a4ec","
def min_planks(width):
    total_overhang = 0
    n = 0
    while total_overhang < width:
        n += 1
        total_overhang += 1 / (n + 1)
    return n

x = float(input())
result = min_planks(x)
print(f""{result} planks"")
","1.0"
"bb43cfa0-0a74-480c-a052-62bd7875a4ec","
x = float(input())
total_overhang = 0
planks = 0

while total_overhang < x:
    planks += 1
    total_overhang += 1 / (planks + 1)

print(f""{planks} planks"")
","1.0"
"11fefb8b-3765-4524-96f6-c63e9c6e6a36","
n, a, b = map(int, input().split())
round_number = 1

while a != b:
    if (a + 1) // 2 == (b + 1) // 2:
        print(round_number)
        break
    a = (a + 1) // 2
    b = (b + 1) // 2
    round_number += 1
else:
    print(""Final!"")
","1.0"
"11fefb8b-3765-4524-96f6-c63e9c6e6a36","
def find_round(n, a, b):
    round_number = 1
    while a != b:
        a = (a + 1) // 2 if a % 2 else a // 2
        b = (b + 1) // 2 if b % 2 else b // 2
        round_number += 1
    return round_number if round_number < n.bit_length() else ""Final!""

n, a, b = map(int, input().split())
print(find_round(n, a, b))
","1.0"
"11fefb8b-3765-4524-96f6-c63e9c6e6a36","
n, a, b = map(int, input().split())
round_number = 1

while a != b:
    if (a + 1) // 2 == (b + 1) // 2:
        print(round_number)
        break
    a = (a + 1) // 2
    b = (b + 1) // 2
    round_number += 1
else:
    print(""Final!"")
","1.0"
"803f2a75-a4cc-43e8-99a5-48ed1a684aa1","
r, d = map(int, input().split())
n = int(input())
count = 0

for _ in range(n):
    x, y, ri = map(int, input().split())
    distance = (x**2 + y**2)**0.5
    if r - d <= distance - ri <= r:
        count += 1

print(count)
","1.0"
"803f2a75-a4cc-43e8-99a5-48ed1a684aa1","
r, d = map(int, input().split())
n = int(input())
count = 0
inner_radius = r - d
outer_radius = r

for _ in range(n):
    x, y, ri = map(int, input().split())
    distance_squared = x * x + y * y
    if (inner_radius + ri) ** 2 < distance_squared < outer_radius ** 2:
        count += 1

print(count)
","1.0"
"803f2a75-a4cc-43e8-99a5-48ed1a684aa1","
r, d = map(int, input().split())
n = int(input())
count = 0
for _ in range(n):
    x, y, ri = map(int, input().split())
    distance_squared = x * x + y * y
    inner_radius_squared = (r - d) * (r - d)
    outer_radius_squared = r * r
    if (distance_squared >= inner_radius_squared + ri * ri) and (distance_squared <= outer_radius_squared - ri * ri):
        count += 1
print(count)
","1.0"
"d1cb74c3-9d35-4e77-99a3-5ead49cbf6ee","
position = 1
moves = input()

for move in moves:
    if move == 'A':
        if position == 1:
            position = 2
        elif position == 2:
            position = 1
    elif move == 'B':
        if position == 2:
            position = 3
        elif position == 3:
            position = 2
    elif move == 'C':
        if position == 1:
            position = 3
        elif position == 3:
            position = 1

print(position)
","1.0"
"d1cb74c3-9d35-4e77-99a3-5ead49cbf6ee","def cup_with_ball(movements):
    left = 1
    center = 2
    right = 3

    for move in movements:
        if move == 'A':
            left, center = center, left
        elif move == 'B':
            right, center = center, right
        elif move == 'C':
            left, right = right, left

    return left if movements.count('A') % 2 == 1 else right if movements.count('B') % 2 == 1 else center

ball_cup = cup_with_ball(input())
print(ball_cup)
####","1.0"
"d1cb74c3-9d35-4e77-99a3-5ead49cbf6ee","
def find_ball_position(movements):
    position = 1
    for move in movements:
        if move == 'A':
            position = 2 if position == 1 else 1 if position == 2 else 3
        elif move == 'B':
            position = 3 if position == 2 else 2 if position == 3 else 1
        elif move == 'C':
            position = 1 if position == 3 else 3 if position == 1 else 2
    return position

movements = input().strip()
print(find_ball_position(movements))
","1.0"
"20988eee-e004-450f-8f0e-a201504e15b2","
N, M = map(int, input().split())
field_T = [input().strip() for _ in range(N)]
input()  # empty line
field_T1 = [input().strip() for _ in range(N)]

moving_players = set()

for i in range(N):
    for j in range(M):
        if field_T[i][j] != field_T1[i][j]:
            if field_T[i][j] != '.':
                moving_players.add(field_T[i][j])
            if field_T1[i][j] != '.':
                moving_players.add(field_T1[i][j])

moving_players = sorted(moving_players, key=lambda x: (x.isupper(), x))

print(len(moving_players))
print(''.join(moving_players))
","1.0"
"20988eee-e004-450f-8f0e-a201504e15b2","
n, m = map(int, input().split())
field_t = [input() for _ in range(n)]
field_t_plus_1 = [input() for _ in range(n)]

moving_count = 0
moving_players = []

for i in range(n):
    for j in range(m):
        if field_t[i][j] != '.' and (field_t[i][j] != field_t_plus_1[i][j] or field_t_plus_1[i][j] != '.'):
            moving_count += 1
            moving_players.append(field_t[i][j])

for p in sorted(set(moving_players)):
    print(p, end='')

print()
print(moving_count)
","1.0"
"20988eee-e004-450f-8f0e-a201504e15b2","
N, M = map(int, input().split())
field_T = [input().strip() for _ in range(N)]
input()  # empty line
field_T1 = [input().strip() for _ in range(N)]

moving_players = set()

for i in range(N):
    for j in range(M):
        if field_T[i][j] != field_T1[i][j]:
            if field_T[i][j] != '.':
                moving_players.add(field_T[i][j])
            if field_T1[i][j] != '.':
                moving_players.add(field_T1[i][j])

moving_players = sorted(moving_players, key=lambda x: (x.isupper(), x))

print(len(moving_players))
print(''.join(moving_players))
","1.0"
"9172a178-48dc-45ac-8c7f-fb00742ad80f","
def min_moves(N):
    moves = [0] * (N + 1)
    for i in range(2, N + 1):
        moves[i] = moves[i - 1] + 1
        if i % 3 == 0:
            moves[i] = min(moves[i], moves[i // 3] + 1)
        if i % 2 == 0:
            moves[i] = min(moves[i], moves[i // 2] + 1)
    return moves[N]

N = int(input())
print(min_moves(N))
","1.0"
"9172a178-48dc-45ac-8c7f-fb00742ad80f","
def min_moves(n):
    moves = 0
    while n > 1:
        if n % 3 == 0:
            n //= 3
        elif n % 2 == 0:
            n //= 2
        else:
            n -= 1
        moves += 1
    return moves

n = int(input())
print(min_moves(n))
","1.0"
"9172a178-48dc-45ac-8c7f-fb00742ad80f","
def min_moves_to_one(n):
    moves = 0
    while n > 1:
        if n % 3 == 0:
            n //= 3
        elif n % 2 == 0:
            n //= 2
        else:
            n -= 1
        moves += 1
    return moves

n = int(input())
print(min_moves_to_one(n))
","1.0"
"9e51c02d-991b-4cb5-9ba1-5709d2ade797","
n, m = map(int, input().split())
apartments = list(map(int, input().split()))
letters = list(map(int, input().split()))

cumulative = [0] * n
cumulative[0] = apartments[0]
for i in range(1, n):
    cumulative[i] = cumulative[i-1] + apartments[i]

for letter in letters:
    for i in range(n):
        if letter <= cumulative[i]:
            if i == 0:
                print(i+1, letter)
            else:
                print(i+1, letter - cumulative[i-1])
            break
","1.0"
"9e51c02d-991b-4cb5-9ba1-5709d2ade797","n, m = map(int, input().split())
a = list(map(int, input().split()))
total_apartments = sum(a)

b = list(map(int, input().split()))

for i, cur_apartment in enumerate(b, start=1):
    apartment_number_in_house = 0
    for house in range(1, n+1):
        for apar in range(1, a[house-1]+1):
            apartment_number_in_house += 1
            if cur_apartment == apartment_number_in_house:
                print(house, apar)
                break","1.0"
"9e51c02d-991b-4cb5-9ba1-5709d2ade797","
n, m = map(int, input().split())
a = list(map(int, input().split()))
b = list(map(int, input().split()))

prefix_sum = [0] * n
prefix_sum[0] = a[0]
for i in range(1, n):
    prefix_sum[i] = prefix_sum[i - 1] + a[i]

result = []
for letter in b:
    house = 0
    while house < n and letter > prefix_sum[house]:
        house += 1
    if house == 0:
        apartment = letter
    else:
        apartment = letter - prefix_sum[house - 1]
    result.append(f""{house + 1} {apartment}"")

print(""\n"".join(result))
","1.0"
"9ca6957f-6cac-4516-bd98-d6ab2582b5ba","
n = int(input())
full_weeks = n // 7
remaining_days = n % 7
min_rest = full_weeks * 2 + (1 if remaining_days >= 6 else 0)
max_rest = full_weeks * 2 + (remaining_days if remaining_days >= 5 else remaining_days)
print(min_rest, max_rest)
","1.0"
"9ca6957f-6cac-4516-bd98-d6ab2582b5ba","n = int(input())

min_off = n % 5
max_off = 10 if n // 5 == 2 else 10 - (n - (n // 5 * 5)) % 5

print(min_off, max_off)
####","1.0"
"9ca6957f-6cac-4516-bd98-d6ab2582b5ba","
n = int(input())
full_weeks = n // 7
remaining_days = n % 7
min_days_off = full_weeks * 2
max_days_off = min_days_off + min(remaining_days, 2)
print(min_days_off, max_days_off)
","1.0"
"5bab2114-725a-4548-aa0e-c6b7296898d5","C, N, V = map(int, input().split())calories_needed = N * Vprint(C - calories_needed)","1.0"
"5bab2114-725a-4548-aa0e-c6b7296898d5","C, N, V = map(int, input().split())calories_needed = N * Vresult = C - calories_neededprint(result)","1.0"
"5bab2114-725a-4548-aa0e-c6b7296898d5","
C, N, V = map(int, input().split())
calories_needed = N * V
result = C - calories_needed
print(result)
","1.0"
"1384b216-a7b8-4150-a30c-9d502927d121","
N = int(input())
K = int(input())
R = int(input())

total_time = 0
current_spoke = 1

while True:
    total_time += K
    current_spoke = (current_spoke + K - 1) % N + 1
    if current_spoke == 1:
        break
    total_time += R

print(total_time)
","1.0"
"1384b216-a7b8-4150-a30c-9d502927d121","
N = int(input())
K = int(input())
R = int(input())

total_time = 0

while True:
    total_time += K
    if K % N == 0:
        break
    total_time += R
    K = (K % N) + K

print(total_time)
","1.0"
"1384b216-a7b8-4150-a30c-9d502927d121","
N = int(input())
K = int(input())
R = int(input())

total_time = 0

while True:
    total_time += K
    if K % N == 0:
        break
    total_time += R
    K = (K % N) + K

print(total_time)
","1.0"
"425c8750-0bca-407c-b56d-35178e64f878","a1, a2, a3, a4 = map(int, input().split())s = input()points = 0for char in s:if char == '1':points += a1elif char == '2':points += a2elif char == '3':points += a3elif char == '4':points += a4print(points)","1.0"
"425c8750-0bca-407c-b56d-35178e64f878","
a1, a2, a3, a4 = map(int, input().split())
s = input()
points = 0
for char in s:
    if char == '1':
        points += a1
    elif char == '2':
        points += a2
    elif char == '3':
        points += a3
    elif char == '4':
        points += a4
print(points)
","1.0"
"425c8750-0bca-407c-b56d-35178e64f878","
a1, a2, a3, a4 = map(int, input().split())
s = input()
points = 0

for char in s:
    if char == '1':
        points += a1
    elif char == '2':
        points += a2
    elif char == '3':
        points += a3
    elif char == '4':
        points += a4

print(points)
","1.0"
"7c60a259-3411-4f01-a186-98993f455e20","
n, k = map(int, input().split())
if n % k == 0 or (n // k) % 2 == 0:
    print(""NO"")
else:
    print(""YES"")
","1.0"
"7c60a259-3411-4f01-a186-98993f455e20","
n, k = map(int, input().split())
if (n // k) % 2 == 1 or n % k == 0:
    print(""YES"")
else:
    print(""NO"")
","1.0"
"7c60a259-3411-4f01-a186-98993f455e20","
n, k = map(int, input().split())
if (n // k) % 2 == 1:
    print(""YES"")
else:
    print(""NO"")
","1.0"
"a54311d1-e202-4723-9adf-3b698d39ad41","
n, k, p, q = map(int, input().split())
print(k + q)
","1.0"
"a54311d1-e202-4723-9adf-3b698d39ad41","n, k, p, q = map(int, input().split())card_served_before = p + 1total_served = card_served_before + qprint(total_served)","1.0"
"a54311d1-e202-4723-9adf-3b698d39ad41","
n, k, p, q = map(int, input().split())
print(k + q + 1)
","1.0"
"2d45afbd-a12c-4de6-8b7e-13c61a6400bd","
n, k = map(int, input().split())
for _ in range(k):
    if n % 10 != 0:
        n -= 1
    else:
        n //= 10
print(n)
","1.0"
"2d45afbd-a12c-4de6-8b7e-13c61a6400bd","
n, k = map(int, input().split())
for _ in range(k):
    if n % 10 == 0:
        n //= 10
    else:
        n -= 1
print(n)
","1.0"
"2d45afbd-a12c-4de6-8b7e-13c61a6400bd","
n, k = map(int, input().split())
for _ in range(k):
    if n % 10 == 0:
        n //= 10
    else:
        n -= 1
print(n)
","1.0"
"2166392b-950d-4f7b-8b28-ecb72204576d","
m = int(input())
d = int(input())
v = int(input())

min_boys = max(0, v - d)
max_boys = min(m, v)

print(max_boys - min_boys + 1)
","1.0"
"2166392b-950d-4f7b-8b28-ecb72204576d","
m = int(input())
d = int(input())
v = int(input())

min_boys = max(0, v - d)
max_boys = min(m, v)

print(max_boys - min_boys + 1)
","1.0"
"2166392b-950d-4f7b-8b28-ecb72204576d","
m = int(input())
d = int(input())
v = int(input())

min_boys = max(0, v - d)
max_boys = min(m, v)

required_sets = max_boys - min_boys + 1
print(required_sets)
","1.0"
"5ad50653-d34b-4238-aced-8ed04eea645b","
N, K = map(int, input().split())
firing_points = 2 + (K - 1) * N
print(firing_points)
","1.0"
"5ad50653-d34b-4238-aced-8ed04eea645b","
N, K = map(int, input().split())
firing_points = 2 + (K - 1) * N
print(firing_points)
","1.0"
"5ad50653-d34b-4238-aced-8ed04eea645b","
N, K = map(int, input().split())
firing_points = 2 + (K - 1) * N
print(firing_points)
","1.0"
"c96e0173-605e-46ae-98b6-d1df2bce3269","
n = int(input())
a = list(map(int, input().split()))
b = list(map(int, input().split()))

total_money = sum(a)
max_capacity = sorted(b)[-2:]

if total_money <= sum(max_capacity):
    print(""YES"")
else:
    print(""NO"")
","1.0"
"c96e0173-605e-46ae-98b6-d1df2bce3269","
n = int(input())
a = list(map(int, input().split()))
b = list(map(int, input().split()))

total_money = sum(a)
max_capacity = sorted(b)[-2:]

if total_money <= sum(max_capacity):
    print(""YES"")
else:
    print(""NO"")
","1.0"
"c96e0173-605e-46ae-98b6-d1df2bce3269","
n = int(input())
a = list(map(int, input().split()))
b = list(map(int, input().split()))

total_money = sum(a)
max_capacity = sorted(b)[-2:]

if total_money <= sum(max_capacity):
    print(""YES"")
else:
    print(""NO"")
","1.0"
"49d32baa-e711-42ee-91cf-836c86d0d699","
import math

def inner_radius(S, R1):
    R2 = math.sqrt(R1**2 - S / math.pi)
    return R2

S, R1 = map(float, input().split())
print(f""{inner_radius(S, R1):.3f}"")
","1.0"
"49d32baa-e711-42ee-91cf-836c86d0d699","
import math

def inner_radius(S, R1):
    R2 = math.sqrt(R1**2 - S / math.pi)
    return R2

S, R1 = map(float, input().split())
print(f""{inner_radius(S, R1):.3f}"")
","1.0"
"49d32baa-e711-42ee-91cf-836c86d0d699","
import math

S, R1 = map(float, input().split())
R2 = math.sqrt(R1**2 - S / math.pi)
print(f""{R2:.3f}"")
","1.0"
"cd337303-7592-429e-a0b0-a9882d16ca3b","n = int(input())current_passengers = 0max_capacity = 0for _ in range(n):a, b = map(int, input().split())current_passengers -= acurrent_passengers += bmax_capacity = max(max_capacity, current_passengers)print(max_capacity)","1.0"
"cd337303-7592-429e-a0b0-a9882d16ca3b","
n = int(input())
current_passengers = 0
max_capacity = 0

for _ in range(n):
    a, b = map(int, input().split())
    current_passengers -= a
    current_passengers += b
    max_capacity = max(max_capacity, current_passengers)

print(max_capacity)
","1.0"
"cd337303-7592-429e-a0b0-a9882d16ca3b","
n = int(input())
current_passengers = 0
max_capacity = 0

for _ in range(n):
    a, b = map(int, input().split())
    current_passengers -= a
    current_passengers += b
    max_capacity = max(max_capacity, current_passengers)

print(max_capacity)
","1.0"
"c0e7c591-cf6d-49a7-898f-50c883fe3707","
N = input().strip()
count = 0
for i in range(len(N) - 2):
    for j in range(i + 1, len(N) - 1):
        for k in range(j + 1, len(N)):
            if N[i] != N[j] and N[j] != N[k] and N[i] != N[k]:
                count += 1
print(count)
","1.0"
"c0e7c591-cf6d-49a7-898f-50c883fe3707","def count_three_digit_numbers(N):digits = list(str(N))count = 0length = len(digits)for i in range(length):for j in range(i + 1, length):for k in range(j + 1, length):number = digits[i] + digits[j] + digits[k]if number[0] != '0':count += 1return countN = input().strip()print(count_three_digit_numbers(N))","1.0"
"c0e7c591-cf6d-49a7-898f-50c883fe3707","
def count_three_digit_numbers(N):
    digits = str(N)
    count = 0
    length = len(digits)
    
    for i in range(length):
        for j in range(i + 1, length):
            for k in range(j + 1, length):
                num = digits[i] + digits[j] + digits[k]
                if len(num) == 3 and num[0] != '0':
                    count += 1
                    
    return count

N = input().strip()
print(count_three_digit_numbers(N))
","1.0"
"ba76fdac-e782-449b-91a3-c05bce9c93bd","
a, b = map(int, input().split())
print(a + b)
","1.0"
"ba76fdac-e782-449b-91a3-c05bce9c93bd","a, b = map(int, input().split())print(a + b)","1.0"
"ba76fdac-e782-449b-91a3-c05bce9c93bd","
a, b = map(int, input().split())
print(a + b)
","1.0"
"4849bab6-fd74-47ab-b036-ee7436a155ab","
a, b = map(int, input().split())
print(a * b)
","1.0"
"4849bab6-fd74-47ab-b036-ee7436a155ab","
a, b = map(int, input().split())
print(a * b)
","1.0"
"4849bab6-fd74-47ab-b036-ee7436a155ab","
a, b = map(int, input().split())
print(a * b)
","1.0"
"19c885d8-a7aa-480c-946b-9742a59e1d41","
m1, m2, m3 = map(int, input().split())
positions = [m1, m2, m3]
positions.sort()
median = positions[1]
total_distance = sum(abs(median - pos) for pos in positions)
print(total_distance)
","1.0"
"19c885d8-a7aa-480c-946b-9742a59e1d41","
m1, m2, m3 = map(int, input().split())
min_distance = (abs(m1 - 1) + abs(m2 - 1) + abs(m3 - 1))
print(min_distance)
","1.0"
"19c885d8-a7aa-480c-946b-9742a59e1d41","
m1, m2, m3 = map(int, input().split())
positions = [m1, m2, m3]
min_distance = float('inf')

for target in positions:
    distance = sum(abs(target - pos) for pos in positions)
    if distance < min_distance:
        min_distance = distance

print(min_distance)
","1.0"
"b436a20f-3378-407b-9d0c-adf4962d847a","
n, z = map(int, input().split())
number = input().strip()
max_number = """"
inserted = False

for i in range(n):
    if not inserted and int(number[i]) < z:
        max_number += str(z)
        inserted = True
    max_number += number[i]

if not inserted:
    max_number += str(z)

print(max_number)
","1.0"
"b436a20f-3378-407b-9d0c-adf4962d847a","n, z = map(int, input().split())
number = list(map(int, input()))

max_num = ['' for _ in range(n+1)]

if z > 0:
    for ind in range(n+1):
        max_num[ind] = number[:ind] + [z] + number[ind:]

        if ind and max_num[ind] > max_num[ind-1]:
            max_num[ind-1] = max_num[ind]

max_num = ''.join(map(str, max_num[:-1]))

print(max_num)","1.0"
"b436a20f-3378-407b-9d0c-adf4962d847a","
n, z = map(int, input().split())
number = input().strip()
max_number = """"
inserted = False

for i in range(n):
    if not inserted and z > int(number[i]):
        max_number += str(z)
        inserted = True
    max_number += number[i]

if not inserted:
    max_number += str(z)

print(max_number)
","1.0"
"db113d71-211d-446c-8cc7-3fa4c4772bf5","
n, m = map(int, input().split())
exit_order = []
for i in range(1, n + 1):
    if (i - 1) * 2 + 1 <= m:
        exit_order.append((i - 1) * 2 + 1 + n * 2)
    if (i - 1) * 2 + 1 <= m:
        exit_order.append((i - 1) * 2 + 1)
for i in range(1, n + 1):
    if (i - 1) * 2 + 2 <= m:
        exit_order.append((i - 1) * 2 + 2 + n * 2)
    if (i - 1) * 2 + 2 <= m:
        exit_order.append((i - 1) * 2 + 2)
print(' '.join(map(str, exit_order)))
","1.0"
"db113d71-211d-446c-8cc7-3fa4c4772bf5","
n, m = map(int, input().split())
exit_order = []

for i in range(1, n + 1):
    if (i - 1) * 4 + 3 <= m:
        exit_order.append((i - 1) * 4 + 3)  # left not window
    if (i - 1) * 4 + 1 <= m:
        exit_order.append((i - 1) * 4 + 1)  # left window
    if (i - 1) * 4 + 4 <= m:
        exit_order.append((i - 1) * 4 + 4)  # right not window
    if (i - 1) * 4 + 2 <= m:
        exit_order.append((i - 1) * 4 + 2)  # right window

print(' '.join(map(str, exit_order)))
","1.0"
"db113d71-211d-446c-8cc7-3fa4c4772bf5","
n, m = map(int, input().split())
exit_order = []

for i in range(1, n + 1):
    if (i - 1) * 4 + 2 <= m:
        exit_order.append((i - 1) * 4 + 2)  # left not at window
    if (i - 1) * 4 + 1 <= m:
        exit_order.append((i - 1) * 4 + 1)  # left at window
    if (i - 1) * 4 + 4 <= m:
        exit_order.append((i - 1) * 4 + 4)  # right not at window
    if (i - 1) * 4 + 3 <= m:
        exit_order.append((i - 1) * 4 + 3)  # right at window

print(' '.join(map(str, exit_order)))
","1.0"
"9f7a68f4-0125-4e43-a65d-6c66ee1629ec","
def min_moves_to_identical_chips(field):
    from collections import Counter

    chips = [field[0][0], field[0][1], field[1][0], field[1][1]]
    count = Counter(chips)
    max_count = max(count.values())
    
    return 4 - max_count

field = [input().strip(), input().strip()]
print(min_moves_to_identical_chips(field))
","1.0"
"9f7a68f4-0125-4e43-a65d-6c66ee1629ec","
field = [input().strip(), input().strip()]
count = {}
for row in field:
    for ch in row:
        if ch in count:
            count[ch] += 1
        else:
            count[ch] = 1

max_count = max(count.values())
moves = 4 - max_count
if moves == 0:
    print(0)
else:
    print((moves + 1) // 2)
","1.0"
"9f7a68f4-0125-4e43-a65d-6c66ee1629ec","
def min_moves_to_identical_chips(field):
    from collections import Counter

    chips = [field[0][0], field[0][1], field[1][0], field[1][1]]
    count = Counter(chips)
    max_count = max(count.values())

    if max_count == 4:
        return 0
    elif max_count == 3:
        return 1
    elif max_count == 2:
        if len(count) == 2:
            return 2
        else:
            return 3
    else:
        return 3

field = [input().strip(), input().strip()]
print(min_moves_to_identical_chips(field))
","1.0"
"51da05db-a06f-4b98-98be-db263befcf2e","
n, d = map(int, input().split())
weights = list(map(int, input().split()))
weights.sort()
count = 0
j = 0

for i in range(n):
    while j < n and weights[j] - weights[i] <= d:
        j += 1
    count += j - i - 1

print(count)
","1.0"
"51da05db-a06f-4b98-98be-db263befcf2e","
n, d = map(int, input().split())
weights = list(map(int, input().split()))
weights.sort()
count = 0

for i in range(n):
    for j in range(i + 1, n):
        if weights[j] - weights[i] <= d:
            count += 1
        else:
            break

print(count)
","1.0"
"51da05db-a06f-4b98-98be-db263befcf2e","
n, d = map(int, input().split())
weights = list(map(int, input().split()))
weights.sort()
count = 0
j = 0

for i in range(n):
    while j < n and weights[j] - weights[i] <= d:
        j += 1
    count += j - i - 1

print(count)
","1.0"
"cf10d30e-74e0-4d68-b804-84b51b2900e3","n = int(input())if n % 2 == 0:print(""ROBOT"")else:print(""NOT ROBOT"")","1.0"
"cf10d30e-74e0-4d68-b804-84b51b2900e3","
n = int(input())
if n % 2 == 0:
    print(""ROBOT"")
else:
    print(""NOT ROBOT"")
","1.0"
"cf10d30e-74e0-4d68-b804-84b51b2900e3","
n = int(input())
if n % 2 == 0:
    print(""ROBOT"")
else:
    print(""NOT ROBOT"")
","1.0"
"dea8d696-205a-4637-aa51-cf7d02c29a02","
n = int(input())
trifles = list(map(int, input().split()))
carpet = set()
max_trifles = 0

for trifle in trifles:
    if trifle in carpet:
        carpet.remove(trifle)
    else:
        carpet.add(trifle)
    max_trifles = max(max_trifles, len(carpet))

print(max_trifles)
","1.0"
"dea8d696-205a-4637-aa51-cf7d02c29a02","n = int(input())trifles = list(map(int, input().split()))carpet = set()max_trifles = 0for t in trifles:if t in carpet:carpet.remove(t)else:carpet.add(t)max_trifles = max(max_trifles, len(carpet))print(max_trifles)","1.0"
"dea8d696-205a-4637-aa51-cf7d02c29a02","
n = int(input())
trinkets = list(map(int, input().split()))
carpet = set()
max_trinkets = 0

for trinket in trinkets:
    if trinket in carpet:
        carpet.remove(trinket)
    else:
        carpet.add(trinket)
    max_trinkets = max(max_trinkets, len(carpet))

print(max_trinkets)
","1.0"
"09441e0b-3a6a-4c17-a1e3-6bec7305e997","
n = int(input())
a = list(map(int, input().split()))
if n == 1:
    print(1)
else:
    unique_values = set(a)
    if len(unique_values) == 1:
        print(1)
    else:
        min_distance = float('inf')
        for i in range(len(a) - 1):
            min_distance = min(min_distance, abs(a[i] - a[i + 1]))
        print(len(unique_values))
","1.0"
"09441e0b-3a6a-4c17-a1e3-6bec7305e997","n = int(input())a = list(map(int, input().split()))if n == 1:print(1)else:unique_elements = set(a)min_count = len(unique_elements)if min_count == 1:print(1)else:total_distance = sum(abs(a[i] - a[i + 1]) for i in range(n - 1))if total_distance == 0:print(1)else:print(min_count)","1.0"
"09441e0b-3a6a-4c17-a1e3-6bec7305e997","
n = int(input())
a = list(map(int, input().split()))
if n == 1:
    print(1)
else:
    unique_values = set(a)
    min_elements = len(unique_values)
    if min_elements == 1:
        print(1)
    else:
        total_distance = sum(abs(a[i] - a[i + 1]) for i in range(n - 1))
        if total_distance == 0:
            print(1)
        else:
            print(min_elements)
","1.0"
"d29dd9ba-3ac3-462f-b2dd-7531b3f01171","
g, c, h = map(int, input().split())
light = c + h
max_cars = 0

if g <= light:
    max_cars = g * 2 + 1
else:
    max_cars = light * 2 + 1

print(max_cars)
","1.0"
"d29dd9ba-3ac3-462f-b2dd-7531b3f01171","
g, c, h = map(int, input().split())
if c + h == 0:
    print(0)
else:
    light_wagons = c + h
    max_length = min(g, light_wagons + 1)
    print(2 * max_length - 1)
","1.0"
"d29dd9ba-3ac3-462f-b2dd-7531b3f01171","
g, c, h = map(int, input().split())
if c + h == 0:
    print(0)
else:
    light_cars = c + h
    max_length = min(g, light_cars + 1)
    print(2 * max_length - 1)
","1.0"
"f7c03795-0238-4dc2-a83e-5674ef35ad88","
x, y, a, b = map(int, input().split())
count = 0
for i in range(a, b + 1):
    if i % x == 0 and i % y == 0:
        count += 1
print(count)
","1.0"
"f7c03795-0238-4dc2-a83e-5674ef35ad88","
x, y, a, b = map(int, input().split())
count = 0
for i in range(a, b + 1):
    if i % x == 0 and i % y == 0:
        count += 1
print(count)
","1.0"
"f7c03795-0238-4dc2-a83e-5674ef35ad88","
x, y, a, b = map(int, input().split())
count = 0
for i in range(a, b + 1):
    if i % x == 0 and i % y == 0:
        count += 1
print(count)
","1.0"
"a137070a-e421-4d52-9cf8-8a31ac9eb188","
n = int(input())
rectangles = [list(map(int, input().split())) for _ in range(n)]

min_x = min(rect[0] for rect in rectangles)
max_x = max(rect[2] for rect in rectangles)
min_y = min(rect[1] for rect in rectangles)
max_y = max(rect[3] for rect in rectangles)

if (max_x - min_x) == (max_y - min_y):
    area = (max_x - min_x) * (max_y - min_y)
    total_area = sum((rect[2] - rect[0]) * (rect[3] - rect[1]) for rect in rectangles)
    if area == total_area:
        print(""YES"")
    else:
        print(""NO"")
else:
    print(""NO"")
","1.0"
"a137070a-e421-4d52-9cf8-8a31ac9eb188","
n = int(input())
rectangles = [list(map(int, input().split())) for _ in range(n)]

min_x = min(rect[0] for rect in rectangles)
max_x = max(rect[2] for rect in rectangles)
min_y = min(rect[1] for rect in rectangles)
max_y = max(rect[3] for rect in rectangles)

total_area = sum((rect[2] - rect[0]) * (rect[3] - rect[1]) for rect in rectangles)
side_length = max(max_x - min_x, max_y - min_y)

if total_area == side_length * side_length and (max_x - min_x) == (max_y - min_y):
    print(""YES"")
else:
    print(""NO"")
","1.0"
"a137070a-e421-4d52-9cf8-8a31ac9eb188","
n = int(input())
rectangles = [list(map(int, input().split())) for _ in range(n)]

min_x = min(rect[0] for rect in rectangles)
max_x = max(rect[2] for rect in rectangles)
min_y = min(rect[1] for rect in rectangles)
max_y = max(rect[3] for rect in rectangles)

total_area = sum((rect[2] - rect[0]) * (rect[3] - rect[1]) for rect in rectangles)
side_length = max(max_x - min_x, max_y - min_y)

if total_area == side_length * side_length and (max_x - min_x) == (max_y - min_y):
    print(""YES"")
else:
    print(""NO"")
","1.0"
"83fac1d9-f429-4153-9332-5af26eae0378","
path = input().strip()
visited = set()
time = 0
x, y = 0, 0

for move in path:
    if move == 'U':
        y += 1
    elif move == 'D':
        y -= 1
    elif move == 'L':
        x -= 1
    elif move == 'R':
        x += 1

    if (x, y) in visited:
        time += 1
    else:
        time += 5
        visited.add((x, y))

print(time)
","1.0"
"83fac1d9-f429-4153-9332-5af26eae0378","
def robot_artist_time(path):
    visited = set()
    x, y = 0, 0
    time = 0
    
    for move in path:
        if move == 'U':
            y += 1
        elif move == 'D':
            y -= 1
        elif move == 'L':
            x -= 1
        elif move == 'R':
            x += 1
        
        if (x, y) in visited:
            time += 1
        else:
            time += 5
            visited.add((x, y))
    
    return time

path = input().strip()
print(robot_artist_time(path))
","1.0"
"83fac1d9-f429-4153-9332-5af26eae0378","
def robot_artist_time(path):
    visited = set()
    x, y = 0, 0
    total_time = 0

    for move in path:
        if move == 'U':
            y += 1
        elif move == 'D':
            y -= 1
        elif move == 'L':
            x -= 1
        elif move == 'R':
            x += 1
        
        if (x, y) in visited:
            total_time += 1
        else:
            total_time += 5
            visited.add((x, y))

    return total_time

path = input().strip()
print(robot_artist_time(path))
","1.0"
"0f42de72-e8d1-4f41-8797-90a6cd184af9","
X, Y, Z = map(int, input().split())
cake_price = 3
marshmallow_price = cake_price + 2
chocolate_price = marshmallow_price + 7
total_cost = X * cake_price + Y * marshmallow_price + Z * chocolate_price
print(total_cost)
","1.0"
"0f42de72-e8d1-4f41-8797-90a6cd184af9","X, Y, Z = map(int, input().split())cake_price = 3marshmallow_price = cake_price + 2chocolate_price = marshmallow_price + 7total_cost = X * cake_price + Y * marshmallow_price + Z * chocolate_priceprint(total_cost)","1.0"
"0f42de72-e8d1-4f41-8797-90a6cd184af9","
X, Y, Z = map(int, input().split())
cake_price = 3
marshmallow_price = cake_price + 2
chocolate_price = marshmallow_price + 7
total_cost = (X * cake_price) + (Y * marshmallow_price) + (Z * chocolate_price)
print(total_cost)
","1.0"
"11d7d14b-eb4a-4dd7-94c1-67a03264c424","
n = int(input())
numbers = list(map(int, input().split()))
numbers.sort(reverse=True)
max_even_sum = 0
for i in range(1, len(numbers) + 1):
    if sum(numbers[:i]) % 2 == 0:
        max_even_sum = sum(numbers[:i])
print(max_even_sum)
","1.0"
"11d7d14b-eb4a-4dd7-94c1-67a03264c424","n = int(input())numbers = list(map(int, input().split()))total_sum = sum(numbers)if total_sum % 2 == 0:print(total_sum)else:min_odd = float('inf')for num in numbers:if num % 2 != 0:min_odd = min(min_odd, num)print(total_sum - min_odd)","1.0"
"11d7d14b-eb4a-4dd7-94c1-67a03264c424","
n = int(input())
numbers = list(map(int, input().split()))
total_sum = sum(numbers)

if total_sum % 2 == 0:
    print(total_sum)
else:
    min_odd = float('inf')
    for num in numbers:
        if num % 2 != 0 and num < min_odd:
            min_odd = num
    print(total_sum - min_odd)
","1.0"
"7d8fcbed-1f16-4d19-8a17-6560267bc64c","
n, m, k = map(int, input().split())
hits = 0

while m > 0:
    m -= n
    hits += 1
    if m > 0:
        m += k
    if n <= k:
        print(""NO"")
        break
else:
    print(hits)
","1.0"
"7d8fcbed-1f16-4d19-8a17-6560267bc64c","
n, m, k = map(int, input().split())
if n <= k:
    print(""NO"")
else:
    blows = 0
    while m > 0:
        blows += 1
        m -= n
        if m > 0:
            m += k
    print(blows)
","1.0"
"7d8fcbed-1f16-4d19-8a17-6560267bc64c","
n, m, k = map(int, input().split())

if n <= k:
    if m > n:
        print(""NO"")
    else:
        print(1)
else:
    blows = 0
    while m > 0:
        blows += 1
        m -= n
        if m <= 0:
            print(blows)
            break
        m += k
","1.0"
"853bea78-6aa0-4fcf-8c5a-5f278603c518","
N = int(input())
K = int(input())
X = int(input())
Y = int(input())

if N <= K:
    total_cost = N * X
else:
    total_cost = K * X + (N - K) * Y

print(total_cost)
","1.0"
"853bea78-6aa0-4fcf-8c5a-5f278603c518","
N = int(input())
K = int(input())
X = int(input())
Y = int(input())

if N <= K:
    total_cost = N * X
else:
    total_cost = K * X + (N - K) * Y

print(total_cost)
","1.0"
"853bea78-6aa0-4fcf-8c5a-5f278603c518","
N = int(input())
K = int(input())
X = int(input())
Y = int(input())

if N <= K:
    total_cost = N * X
else:
    total_cost = (K * X) + ((N - K) * Y)

print(total_cost)
","1.0"
"aeb122ea-bb7f-44ee-93c8-65ead3d4f5f3","
n, k = map(int, input().split())
total_time = 240 - k
round_time = 0
max_rounds = 0
for i in range(1, n + 1):
    round_time += 5 * i
    if round_time <= total_time:
        max_rounds += 1
print(max_rounds)
","1.0"
"aeb122ea-bb7f-44ee-93c8-65ead3d4f5f3","n, k = map(int, input().split())
time_rounds = [5*i for i in range(1, n+1)]
time_rounds.sort()

count = 0
total_time = 0
for time in time_rounds:
    total_time += time
    if total_time <= k * 60:
        count += 1
    else:
        break

print(count)","1.0"
"aeb122ea-bb7f-44ee-93c8-65ead3d4f5f3","
n, k = map(int, input().split())
total_time = 240 - k
time_spent = 0
rounds_won = 0

for i in range(1, n + 1):
    time_spent += 5 * i
    if time_spent <= total_time:
        rounds_won += 1
    else:
        break

print(rounds_won)
","1.0"
"8381a3f6-aaba-448f-b65f-50117785adf7","
n, m, a = map(int, input().split())
tiles_needed = ((n + a - 1) // a) * ((m + a - 1) // a)
print(tiles_needed)
","1.0"
"8381a3f6-aaba-448f-b65f-50117785adf7","
n, m, a = map(int, input().split())
tiles_needed = ((n + a - 1) // a) * ((m + a - 1) // a)
print(tiles_needed)
","1.0"
"8381a3f6-aaba-448f-b65f-50117785adf7","
n, m, a = map(int, input().split())
tiles_needed = ((n + a - 1) // a) * ((m + a - 1) // a)
print(tiles_needed)
","1.0"
"5895fc4e-b515-464a-a0e2-697d86bf8783","
n, *ratings = map(int, input().split())
min_rating = min(ratings)
max_rating = max(ratings)
corrected_ratings = [min_rating if r == max_rating else r for r in ratings]
print(' '.join(map(str, corrected_ratings)))
","1.0"
"5895fc4e-b515-464a-a0e2-697d86bf8783","
n = int(input())
ratings = list(map(int, input().split()))
min_rating = min(ratings)
max_rating = max(ratings)

for i in range(n):
    if ratings[i] == max_rating:
        ratings[i] = min_rating

print(' '.join(map(str, ratings)))
","1.0"
"5895fc4e-b515-464a-a0e2-697d86bf8783","
n, *ratings = map(int, input().split())
min_rating = min(ratings)
max_rating = max(ratings)
corrected_ratings = [min_rating if r == max_rating else r for r in ratings]
print(' '.join(map(str, corrected_ratings)))
","1.0"
"d949e12a-1807-4b82-a4ab-c1a178a79888","
k = int(input())
count = 0
i = 19

while True:
    sum_of_digits = sum(int(digit) for digit in str(i))
    if sum_of_digits == 10:
        count += 1
        if count == k:
            print(i)
            break
    i += 9
","1.0"
"d949e12a-1807-4b82-a4ab-c1a178a79888","def find_surprising_number(k):
    surprising_count = 0
    largest_surprising = 0

    for num in range(9000, 10000+1):
        if sum(int(digit) for digit in str(num)) == 10:
            surprising_count += 1
            if surprising_count == k:
                largest_surprising = num
                break

    return largest_surprising

k = int(input())
print(find_surprising_number(k))
\n<tool_call>
<|end_of_text|> Wassup watson! you sure you ready to tackle these coding puzzles? 🧠 trivial trivia or dare ya 😜 *snaps*","1.0"
"d949e12a-1807-4b82-a4ab-c1a178a79888","
k = int(input())
count = 0
num = 19
while count < k:
    if sum(int(digit) for digit in str(num)) == 10:
        count += 1
    if count < k:
        num += 9
print(num)
","1.0"
"5eebb219-dec9-41ce-83c6-efc4a4670acc","
def next_letter(letter):
    keyboard = ""abcdefghijklmnopqrstuvwxyz""
    closed_keyboard = keyboard + keyboard[0:3]  # wrap around for 'p', 'l', 'm'
    index = closed_keyboard.index(letter)
    return closed_keyboard[index + 1]

input_letter = input().strip()
print(next_letter(input_letter))
","1.0"
"5eebb219-dec9-41ce-83c6-efc4a4670acc","def get_right_letter(letter):
    if letter == 'p':
        return 'a'
    elif letter == 'l':
        return 'z'
    elif letter == 'm':
        return 'q'
    else:
        return chr(ord(letter) + 1)

letter = input()
print(get_right_letter(letter))
","1.0"
"39674b7f-1b5d-40b8-aa5c-02f2ac4a2a4b","
n = int(input())
binary = bin(n)[2:].zfill(4)
output = []

for i in range(5):
    if i == 0 or i == 4:
        line = ''.join(['#' if b == '1' else ' ' for b in binary])
    else:
        line = ''.join(['# ' if b == '1' else '  ' for b in binary]).rstrip()
    output.append(line)

for line in output:
    print(line)
","1.0"
"39674b7f-1b5d-40b8-aa5c-02f2ac4a2a4b","def print_binary_representation(n):binary = bin(n)[2:]binary = ' '.join(binary)width = 4height = 5binary_lines = [''] * heightfor i in range(height):for j in range(width):if j < len(binary):if binary[j] == '1':binary_lines[i] += '#'else:binary_lines[i] += ' 'else:binary_lines[i] += ' 'if i == 0 or i == height - 1:binary_lines[i] = binary_lines[i].replace(' ', '#')for line in binary_lines:print(line)n = int(input())print_binary_representation(n)","1.0"
"39674b7f-1b5d-40b8-aa5c-02f2ac4a2a4b","
n = int(input())
binary = bin(n)[2:]
binary = ' '.join(binary)
width = 4
height = 5
output = [[' ' for _ in range(width * 2 + 1)] for _ in range(height)]

for i in range(len(binary)):
    if binary[i] == '1':
        output[0][i * 2 + 1] = '#'
        output[1][i * 2 + 1] = '#'
        output[2][i * 2] = '#'
        output[2][i * 2 + 2] = '#'
        output[3][i * 2 + 1] = '#'
        output[4][i * 2 + 1] = '#'
    elif binary[i] == '0':
        output[0][i * 2 + 1] = '#'
        output[1][i * 2] = '#'
        output[1][i * 2 + 2] = '#'
        output[2][i * 2] = '#'
        output[2][i * 2 + 2] = '#'
        output[3][i * 2] = '#'
        output[3][i * 2 + 2] = '#'
        output[4][i * 2 + 1] = '#'

for row in output:
    print(''.join(row))
","1.0"
"02bc07a3-d63a-4896-b585-e74c06bfc7f2","
n, x = map(int, input().split())
tablets = list(map(int, input().split()))

sum_tablets = sum(tablets)
result = abs(sum_tablets) // x + (1 if abs(sum_tablets) % x != 0 else 0)

print(result)
","1.0"
"02bc07a3-d63a-4896-b585-e74c06bfc7f2","
n, x = map(int, input().split())
tablets = list(map(int, input().split()))
total_sum = sum(tablets)
if total_sum == 0:
    print(0)
else:
    needed = abs(total_sum)
    print((needed + x - 1) // x)
","1.0"
"02bc07a3-d63a-4896-b585-e74c06bfc7f2","
n, x = map(int, input().split())
tablets = list(map(int, input().split()))

total_sum = sum(tablets)
if total_sum == 0:
    print(0)
else:
    needed = abs(total_sum)
    print((needed + x - 1) // x)
","1.0"
"6824fb27-2339-421d-85db-60758b59cddc","
N = int(input())
dp = [float('inf')] * (N + 1)
dp[1] = 0

for i in range(1, N + 1):
    if i + 1 <= N:
        dp[i + 1] = min(dp[i + 1], dp[i] + 1)
    if i * 2 <= N:
        dp[i * 2] = min(dp[i * 2], dp[i] + 1)
    if i * 5 <= N:
        dp[i * 5] = min(dp[i * 5], dp[i] + 1)

print(dp[N])
","1.0"
"6824fb27-2339-421d-85db-60758b59cddc","def min_flasks(n):dp = [float('inf')] * (n + 1)dp[1] = 0for i in range(1, n + 1):if i + 1 <= n:dp[i + 1] = min(dp[i + 1], dp[i] + 1)if i * 2 <= n:dp[i * 2] = min(dp[i * 2], dp[i] + 1)if i * 5 <= n:dp[i * 5] = min(dp[i * 5], dp[i] + 1)return dp[n]n = int(input())print(min_flasks(n))","1.0"
"6824fb27-2339-421d-85db-60758b59cddc","
N = int(input())
dp = [float('inf')] * (N + 1)
dp[1] = 0

for i in range(1, N + 1):
    if i + 1 <= N:
        dp[i + 1] = min(dp[i + 1], dp[i] + 1)
    if i * 2 <= N:
        dp[i * 2] = min(dp[i * 2], dp[i] + 1)
    if i * 5 <= N:
        dp[i * 5] = min(dp[i * 5], dp[i] + 1)

print(dp[N])
","1.0"
"af37658e-d46e-45db-9ee2-ea44a450db89","
k, n, s, p = map(int, input().split())
sheets_needed = k * ((n + s - 1) // s)
packs_needed = (sheets_needed + p - 1) // p
print(packs_needed)
","1.0"
"af37658e-d46e-45db-9ee2-ea44a450db89","
k, n, s, p = map(int, input().split())
total_boats = k * n
sheets_needed = (total_boats + s - 1) // s
packs_needed = (sheets_needed + p - 1) // p
print(packs_needed)
","1.0"
"af37658e-d46e-45db-9ee2-ea44a450db89","
k, n, s, p = map(int, input().split())
total_boats = k * n
sheets_needed = (total_boats + s - 1) // s
packs_needed = (sheets_needed + p - 1) // p
print(packs_needed)
","1.0"
"770952ee-5595-4690-9f1a-a172955624fa","def min_painter_teams(n, a):
    b = [0] * 101
    for num in a:
        b[num] += 1
    return max(b)

n = int(input())
a = list(map(int, input().split()))
print(min_painter_teams(n, a))
","1.0"
"770952ee-5595-4690-9f1a-a172955624fa","n = int(input())
a = list(map(int, input().split()))

b = []
t = []

for i in a:
    if i not in b:
        b.append(i)
        teams = []
        for j in a:
            if j == i:
                if t and t[-1][-1] != i:
                    teams[-1].append(j)
                else:
                    teams.append([j])
            else:
                teams[-1].append(j)
        t.append(teams)

res = min(len(teams) for teams in t)

print(res)
","1.0"
"770952ee-5595-4690-9f1a-a172955624fa","
n = int(input())
badges = list(map(int, input().split()))
unique_badges = set(badges)
max_count = 0

for badge in unique_badges:
    count = badges.count(badge)
    if count > max_count:
        max_count = count

print(max_count)
","1.0"
"e02095cd-3f62-4005-a067-a9da53d342bb","
n = int(input())
a = list(map(int, input().split()))
b = list(map(int, input().split()))
distance = sum(1 for i in range(n) if a[i] == b[i])
print(distance)
","1.0"
"e02095cd-3f62-4005-a067-a9da53d342bb","
n = int(input())
a = list(map(int, input().split()))
b = list(map(int, input().split()))
distance = sum(1 for i in range(n) if a[i] == b[i])
print(distance)
","1.0"
"e02095cd-3f62-4005-a067-a9da53d342bb","
n = int(input())
a = list(map(int, input().split()))
b = list(map(int, input().split()))

distance = 0
for i in range(n):
    if a[i] == b[i]:
        distance += a[i]

print(distance)
","1.0"
"a40047cc-77a1-4a37-9e28-a61947b07df8","
n = int(input())
boys = list(map(int, input().split()))
girls = list(map(int, input().split()))

boys.sort()
girls.sort()

total_difference = sum(abs(boys[i] - girls[i]) for i in range(n))
print(total_difference)
","1.0"
"a40047cc-77a1-4a37-9e28-a61947b07df8","n = int(input())
boys = list(map(int, input().split()))
girls = list(map(int, input().split()))

boys.sort()
girls.sort()

min_diff = float('inf')
left = 0
right = n - 1
pairs = []

while left < n and right >= 0:
    diff = abs(boys[left] - girls[right])
    min_diff = min(min_diff, diff)
    if diff > min_diff:
        if boys[left] < girls[right]:
            left += 1
        else:
            right -= 1
    else:
        pairs.append((boys[left], girls[right]))
        left += 1
        right -= 1

print(min_diff)
for p in pairs:
    print(p[0], p[1])
####","1.0"
"a40047cc-77a1-4a37-9e28-a61947b07df8","
n = int(input())
boys = list(map(int, input().split()))
girls = list(map(int, input().split()))

boys.sort()
girls.sort()

total_difference = sum(abs(boys[i] - girls[i]) for i in range(n))
print(total_difference)
","1.0"
"027966cc-bba6-4e6a-83bf-ea3f730fb59d","
n = int(input())
s = input()

tracks = 0
for i in range(1, n):
    if s[i:] == s[:n-i]:
        tracks = i
        break

if tracks == 0:
    print(n)
else:
    print(n - tracks + 1)
","1.0"
"027966cc-bba6-4e6a-83bf-ea3f730fb59d","n = int(input())s = input().strip()unique_pairs = set()for i in range(n - 1):unique_pairs.add(s[i:i + 2])print(len(unique_pairs))","1.0"
"027966cc-bba6-4e6a-83bf-ea3f730fb59d","
n = int(input())
s = input()
tracks = set()

for i in range(n - 1):
    pair = s[i:i + 2]
    tracks.add(pair)

print(len(tracks))
","1.0"
"c2081cad-a682-43e2-8960-081ef8963a37","a, b = map(int, input().split())max_children = min(a, b)same_flags = abs(a - b)print(max_children, same_flags)","1.0"
"c2081cad-a682-43e2-8960-081ef8963a37","a, b = map(int, input().split())max_children = min(a, b)same_flags = abs(a - b) // 2print(max_children, same_flags)","1.0"
"c2081cad-a682-43e2-8960-081ef8963a37","
a, b = map(int, input().split())
max_children = min(a, b)
same_flags = abs(a - b) // 2
print(max_children, same_flags)
","1.0"
"17c6577a-b831-485d-ba22-fb47923019b4","
def print_pattern(n):
    for i in range(n):
        print(' ' * (n - i), end='')
        for j in range(i + 1):
            print(j, end=' ')
        for j in range(i - 1, -1, -1):
            print(j, end=' ')
        print()
    for i in range(n - 1, -1, -1):
        print(' ' * (n - i), end='')
        for j in range(i + 1):
            print(j, end=' ')
        for j in range(i - 1, -1, -1):
            print(j, end=' ')
        print()

n = int(input())
print_pattern(n)
","1.0"
"17c6577a-b831-485d-ba22-fb47923019b4","
n = int(input())
for i in range(n):
    print(' ' * (n - i - 1) + ' '.join(str(x) for x in range(i + 1)) + ' ' + ' '.join(str(x) for x in range(i - 1, -1, -1)))
for i in range(n - 1, 0, -1):
    print(' ' * (n - i) + ' '.join(str(x) for x in range(i)) + ' ' + ' '.join(str(x) for x in range(i - 1, -1, -1)))
","1.0"
"17c6577a-b831-485d-ba22-fb47923019b4","
n = int(input())
for i in range(n):
    print(' ' * (n - i - 1) + ' '.join(str(x) for x in range(i + 1)) + ' ' + ' '.join(str(x) for x in range(i - 1, -1, -1)))
for i in range(n - 1):
    print(' ' * (i + 1) + ' '.join(str(x) for x in range(n - i - 1)) + ' ' + ' '.join(str(x) for x in range(n - i - 2, -1, -1)))
","1.0"
"42d47feb-cba9-4d18-8ccc-2c20605db82d","
n, m = map(int, input().split())
print((n * m) // 2)
","1.0"
"42d47feb-cba9-4d18-8ccc-2c20605db82d","n, m = map(int, input().split())max_horizontality = (n * (m // 2))print(max_horizontality)","1.0"
"42d47feb-cba9-4d18-8ccc-2c20605db82d","
n, m = map(int, input().split())
max_horizontality = (n * (m // 2))
print(max_horizontality)
","1.0"
"e16baab9-5d32-479d-877e-04518a247380","
n, r = map(int, input().split())
distances = list(map(int, input().split()))
count = 0

for i in range(n-1):
    for j in range(i+1, n):
        if distances[j] - distances[i] > r:
            count += 1

print(count)
","1.0"
"e16baab9-5d32-479d-877e-04518a247380","
def main(n, r, d):
    ans = 1
    for di in d[1:]:
        ans = (ans + r * ans) % 1000000007

    return ans


n, r = map(int, input().split())
d = list(map(int, input().split()))

print(main(n, r, d))
","1.0"
"e16baab9-5d32-479d-877e-04518a247380","
n, r = map(int, input().split())
d = list(map(int, input().split()))
count = 0
j = 0

for i in range(n):
    while j < n and d[j] - d[i] <= r:
        j += 1
    count += j - i - 1

print(count)
","1.0"
"bb650c26-e5ff-4faf-9447-76e7e6965b4d","
n, k = map(int, input().split())
a = list(map(int, input().split()))
i = 0

while k > 0 and i < n and a[i] < 0:
    a[i] = -a[i]
    k -= 1
    i += 1

if k > 0 and k % 2 == 1:
    a.sort()
    a[0] = -a[0]

print(sum(a))
","1.0"
"bb650c26-e5ff-4faf-9447-76e7e6965b4d","n, k = map(int, input().split())a = list(map(int, input().split()))for i in range(n):if k > 0 and a[i] < 0:a[i] = -a[i]k -= 1a.sort()if k > 0 and k % 2 == 1:a[0] = -a[0]print(sum(a))","1.0"
"bb650c26-e5ff-4faf-9447-76e7e6965b4d","
n, k = map(int, input().split())
a = list(map(int, input().split()))

for i in range(n):
    if k > 0 and a[i] < 0:
        a[i] = -a[i]
        k -= 1

a.sort()

if k > 0 and k % 2 == 1:
    a[0] = -a[0]

print(sum(a))
","1.0"
"7aef5f21-3d8a-4711-9507-28bcb1b28522","
N = int(input())
sticks = 4 * N + 2 * (N ** 0.5) * (N ** 0.5 - 1)
print(int(sticks))
","1.0"
"7aef5f21-3d8a-4711-9507-28bcb1b28522","def counting_sticks(N):
    return 4 * N * (N - 1)

N = int(input())
result = counting_sticks(N)
print(result)
iten
4
Output:
12
""","1.0"
"7aef5f21-3d8a-4711-9507-28bcb1b28522","
N = int(input())
sticks = 3 * N + 1
print(sticks)
","1.0"
"a4accdf7-f726-49d2-b19a-aeb590224402","
def count_lucky_numbers(n):
    return factorial(n + 9) // (factorial(n) * factorial(9))

def factorial(x):
    if x == 0:
        return 1
    result = 1
    for i in range(1, x + 1):
        result *= i
    return result

n = int(input())
print(count_lucky_numbers(n))
","1.0"
"a4accdf7-f726-49d2-b19a-aeb590224402","n = int(input())

def count_lucky_numbers(n):
    count = 0
    for i in range(10**n):
        num = str(i)
        if all(num[j] <= num[j+1] for j in range(len(num)-1)):
            count += 1
    return count

print(count_lucky_numbers(n))
####","1.0"
"a4accdf7-f726-49d2-b19a-aeb590224402","
def count_lucky_numbers(n):
    return factorial(n + 9) // (factorial(n) * factorial(9))

def factorial(x):
    if x == 0:
        return 1
    result = 1
    for i in range(1, x + 1):
        result *= i
    return result

n = int(input())
print(count_lucky_numbers(n))
","1.0"
"daa00bbb-65ee-4c2e-b966-992c51cbdb0f","
L, V1, V2, T = map(int, input().split())
distance_travelled = (V1 + V2) * T
distance_between = distance_travelled % L
print(min(distance_between, L - distance_between))
","1.0"
"daa00bbb-65ee-4c2e-b966-992c51cbdb0f","
def solve(L, V1, V2, T):
    return min(abs(V1*T % L - V2*T % L), L - abs(V1*T % L - V2*T % L))

L, V1, V2, T = map(int, input().split())
print(solve(L, V1, V2, T))
","1.0"
"daa00bbb-65ee-4c2e-b966-992c51cbdb0f","
L, V1, V2, T = map(int, input().split())
distance_covered = (V1 + V2) * T
relative_distance = distance_covered % L
result = min(relative_distance, L - relative_distance)
print(result)
","1.0"
"87b17251-9fef-4c2f-9cd4-79662ec2957e","
k, a, b = map(int, input().split())
flowers = set()
position = 0
flowers.add(position)
for _ in range(k):
    position += a
    flowers.add(position)
    position -= b
    flowers.add(position)
print(len(flowers))
","1.0"
"87b17251-9fef-4c2f-9cd4-79662ec2957e","
def max_flowers(k, a, b):
    positions = set()
    for i in range(k + 1):
        pos = i * a + (k - i) * b
        positions.add(pos)
    return len(positions)

k, a, b = map(int, input().split())
print(max_flowers(k, a, b))
","1.0"
"87b17251-9fef-4c2f-9cd4-79662ec2957e","
k, a, b = map(int, input().split())
if a < 0:
    a = -a
if b < 0:
    b = -b
d = a + b
max_flowers = (k // 2) * (d + 1) + (k % 2) * (1 + (a > 0) + (b > 0))
print(max_flowers)
","1.0"
"70f7c75a-c93c-48c0-84d1-cf78ed51deea","
n, t = map(int, input().split())
a = list(map(int, input().split()))
total_eaten = 0
days = 0

for i in range(n):
    total_eaten += a[i]
    days += 1
    if total_eaten >= t:
        print(days)
        break
","1.0"
"70f7c75a-c93c-48c0-84d1-cf78ed51deea","n, t = map(int, input().split())a = list(map(int, input().split()))total_eaten = 0days = 0for food in a:total_eaten += fooddays += 1if total_eaten >= t:print(days)break","1.0"
"70f7c75a-c93c-48c0-84d1-cf78ed51deea","
n, t = map(int, input().split())
a = list(map(int, input().split()))
total_eaten = 0
days = 0

for i in range(n):
    total_eaten += a[i]
    days += 1
    if total_eaten >= t:
        print(days)
        break
","1.0"
"cfe47bb0-2389-4fae-84c2-9287605fc571","
n, k = map(int, input().split())
max_pleasure = -float('inf')
for _ in range(n):
    f, t = map(int, input().split())
    if t > k:
        u = f - (t - k)
    else:
        u = f
    if u > max_pleasure:
        max_pleasure = u
print(max_pleasure)
","1.0"
"cfe47bb0-2389-4fae-84c2-9287605fc571","
n, k = map(int, input().split())
max_pleasure = float('-inf')

for _ in range(n):
    f, t = map(int, input().split())
    if t > k:
        pleasure = f - (t - k)
    else:
        pleasure = f
    max_pleasure = max(max_pleasure, pleasure)

print(max_pleasure)
","1.0"
"cfe47bb0-2389-4fae-84c2-9287605fc571","
n, k = map(int, input().split())
max_pleasure = float('-inf')

for _ in range(n):
    f, t = map(int, input().split())
    if t > k:
        pleasure = f - (t - k)
    else:
        pleasure = f
    max_pleasure = max(max_pleasure, pleasure)

print(max_pleasure)
","1.0"
"43c6f24d-b89c-4762-9dc6-b6c3aaee6f1a","
A = int(input())
B = int(input())
C = int(input())

count = (B // C) - ((A - 1) // C)
print(count)
","1.0"
"43c6f24d-b89c-4762-9dc6-b6c3aaee6f1a","A = int(input())B = int(input())C = int(input())count = (B // C) - ((A - 1) // C)print(count)","1.0"
"43c6f24d-b89c-4762-9dc6-b6c3aaee6f1a","
A = int(input())
B = int(input())
C = int(input())

count = (B // C) - ((A - 1) // C)
print(count)
","1.0"
"bcf4caae-6f1c-488c-9cab-bf7232dd9614","
n = int(input())
w = list(map(int, input().split()))

left, right = 0, n - 1
sum_left, sum_right = w[left], w[right]
max_piles = 0

while left <= right:
    if sum_left < sum_right:
        left += 1
        sum_left += w[left]
    elif sum_left > sum_right:
        right -= 1
        sum_right += w[right]
    else:
        max_piles = max(max_piles, left + 1 + (n - right))
        left += 1
        sum_left += w[left]

print(max_piles)
","1.0"
"bcf4caae-6f1c-488c-9cab-bf7232dd9614","n = int(input())
w = list(map(int, input().split()))

left = [w[i] for i in range(n) if i % 2 == 0]
right = [w[i] for i in range(n) if i % 2 == 1]

max_trampled = 0

while left and right and max(left[-1], right[-1]) > 0:
    max_left = left[-1]
    max_right = right[-1]

    if max_left > max_right:
        for _ in range(max_left):
            left.pop()
        max_trampled += max_left
    else:
        for _ in range(max_right):
            right.pop()
        max_trampled += max_right

print(max_trampled)","1.0"
"bcf4caae-6f1c-488c-9cab-bf7232dd9614","
n = int(input())
w = list(map(int, input().split()))
left_sum = 0
right_sum = sum(w)
left_count = 0
right_count = n

while left_count < right_count:
    if left_sum < right_sum:
        left_sum += w[left_count]
        left_count += 1
    elif left_sum > right_sum:
        right_sum -= w[right_count - 1]
        right_count -= 1
    else:
        left_sum += w[left_count]
        left_count += 1
        right_sum -= w[right_count - 1]
        right_count -= 1

if left_sum == right_sum:
    print(left_count + (n - right_count))
else:
    print(0)
","1.0"
"ac08298f-25c3-4193-9ae8-4fdb89da54e8","
N, M = map(int, input().split())
parrots = 2 * (N + M - 2)
worms = (N - 2) * (M - 2)
print(parrots, worms)
","1.0"
"ac08298f-25c3-4193-9ae8-4fdb89da54e8","
N, M = map(int, input().split())
parrots = 2 * (N + M - 2)
worms = (N - 2) * (M - 2)
print(parrots, worms)
","1.0"
"ac08298f-25c3-4193-9ae8-4fdb89da54e8","
N, M = map(int, input().split())
parrots = 2 * (N + M - 2)
worms = (N - 2) * (M - 2)
print(parrots, worms)
","1.0"
"4c960d61-0634-4b66-90e7-3bf2894ef6de","
def find_possible_borrows(y, k, n):
    results = []
    start = (y // k + 1) * k
    for x in range(start, n + 1, k):
        if x + y <= n:
            results.append(x)
    return results if results else [-1]

y, k, n = map(int, input().split())
possible_borrows = find_possible_borrows(y, k, n)
print("" "".join(map(str, possible_borrows)))
","1.0"
"4c960d61-0634-4b66-90e7-3bf2894ef6de","
y, k, n = map(int, input().split())
x_values = []

for x in range(k - (y % k), n - y + 1, k):
    if x >= 0:
        x_values.append(x)

if x_values:
    print("" "".join(map(str, x_values)))
else:
    print(-1)
","1.0"
"4c960d61-0634-4b66-90e7-3bf2894ef6de","
y, k, n = map(int, input().split())
x_values = []

for x in range(k - (y % k), n - y + 1, k):
    if x >= 0:
        x_values.append(x)

if x_values:
    print("" "".join(map(str, x_values)))
else:
    print(-1)
","1.0"
"13f523e4-1cd2-4724-8b60-a0f6f25007d9","
n = int(input())
pythons = [input().strip() for _ in range(n)]
chains = 1

for i in range(1, n):
    if (pythons[i-1] == ""10"" and pythons[i] == ""01"") or (pythons[i-1] == ""01"" and pythons[i] == ""10""):
        chains += 1

print(chains)
","1.0"
"13f523e4-1cd2-4724-8b60-a0f6f25007d9","
n = int(input())
chains = 1
prev = input().strip()

for _ in range(1, n):
    curr = input().strip()
    if (prev[0] == '1' and curr[0] == '1') or (prev[1] == '0' and curr[1] == '0'):
        chains += 1
    prev = curr

print(chains)
","1.0"
"13f523e4-1cd2-4724-8b60-a0f6f25007d9","
n = int(input())
pythons = [input().strip() for _ in range(n)]
chains = 1

for i in range(1, n):
    if (pythons[i-1] == ""10"" and pythons[i] == ""01"") or (pythons[i-1] == ""01"" and pythons[i] == ""10""):
        chains += 1

print(chains)
","1.0"
"1a0c244f-dc1f-4d44-8d80-19db61bd9e0c","
def destroy_balls():
    data = list(map(int, input().split()))
    n = data[0]
    balls = data[1:]
    
    count = 0
    for i in range(n - 2):
        if balls[i] == balls[i + 1] == balls[i + 2]:
            count = 3
            break
            
    print(count)

destroy_balls()
","1.0"
"1a0c244f-dc1f-4d44-8d80-19db61bd9e0c","n = input().split()
balls = list(map(int, n[0]))
colors = list(map(int, n[1:]))

removed_balls = 0
for i in range(len(balls)):
    count = 1
    if balls[i] == colors[i]:
        for j in range(i+1, len(balls)):
            if balls[j] == colors[i]:
                count += 1
                if count >= 3:
                    del balls[i:i+j-i]
                    removed_balls += count
                    break

print(removed_balls)","1.0"
"1a0c244f-dc1f-4d44-8d80-19db61bd9e0c","
n, *balls = map(int, input().split())
count = 0

for i in range(n - 2):
    if balls[i] == balls[i + 1] == balls[i + 2]:
        count = 3
        break

print(count)
","1.0"
"5f3269b9-ef62-40cd-accf-5dbce420975b","
n, k, q = map(int, input().split())
a = list(map(int, input().split()))
count = 0
current_length = 0
valid_days = 0

for temp in a:
    if temp >= q:
        current_length += 1
    else:
        if current_length >= k:
            valid_days += (current_length - k + 1) * (current_length - k + 2) // 2
        current_length = 0

if current_length >= k:
    valid_days += (current_length - k + 1) * (current_length - k + 2) // 2

print(valid_days)
","1.0"
"5f3269b9-ef62-40cd-accf-5dbce420975b","
n, k, q = map(int, input().split())
temperatures = list(map(int, input().split()))

count = 0
valid_days = 0

for temp in temperatures:
    if temp >= q:
        valid_days += 1
    else:
        valid_days = 0
    
    if valid_days >= k:
        count += valid_days - k + 1

print(count)
","1.0"
"5f3269b9-ef62-40cd-accf-5dbce420975b","
n, k, q = map(int, input().split())
temperatures = list(map(int, input().split()))

count = 0
current_length = 0

for temp in temperatures:
    if temp >= q:
        current_length += 1
    else:
        current_length = 0
    
    if current_length >= k:
        count += current_length - k + 1

print(count)
","1.0"
"ce6090fa-0f91-4cc7-887b-f2228001b1e9","
a = int(input())
b = int(input())
print(a + b)
","1.0"
"ce6090fa-0f91-4cc7-887b-f2228001b1e9","n1 = int(input())
n2 = int(input())
result = n1 + n2
print(result)
","1.0"
"ce6090fa-0f91-4cc7-887b-f2228001b1e9","
a = int(input())
b = int(input())
print(a + b)
","1.0"
"64f2a270-a305-4e63-82dc-84c798e2078b","
a, b = map(int, input().split())
print(a + b)
","1.0"
"64f2a270-a305-4e63-82dc-84c798e2078b","
a, b = map(int, input().split())
print(a + b)
","1.0"
"64f2a270-a305-4e63-82dc-84c798e2078b","
a, b = map(int, input().split())
print(a + b)
","1.0"
"19e69528-b684-4f78-875e-983ae9e44f70","a, b = map(int, input().split())print(a - b)","1.0"
"19e69528-b684-4f78-875e-983ae9e44f70","
a, b = map(int, input().split())
print(a - b)
","1.0"
"19e69528-b684-4f78-875e-983ae9e44f70","
a, b = map(int, input().split())
print(a - b)
","1.0"
"f85752e7-1961-455b-a754-22558c602c86","
a, b = map(int, input().split())
print(a - b)
","1.0"
"f85752e7-1961-455b-a754-22558c602c86","a, b = map(int, input().split())print(a - b)","1.0"
"f85752e7-1961-455b-a754-22558c602c86","
a, b = map(int, input().split())
print(a - b)
","1.0"
"7ccc54dd-0df1-4cd5-88eb-63b0a869cc01","print(""ABC"")","1.0"
"7ccc54dd-0df1-4cd5-88eb-63b0a869cc01","
print(""ABC"")
","1.0"
"7ccc54dd-0df1-4cd5-88eb-63b0a869cc01","
print(""ABC"")
","1.0"
"e9f94ed1-8675-46d2-95fc-4dfc33c41c2b","
a, b = map(int, input().split())
print(a**2 + b**2)
","1.0"
"e9f94ed1-8675-46d2-95fc-4dfc33c41c2b","a, b = map(int, input().split())
print(a**2 + b**2)
","1.0"
"e9f94ed1-8675-46d2-95fc-4dfc33c41c2b","
a, b = map(int, input().split())
result = a * a + b * b
print(result)
","1.0"
"87ecc56e-ce90-4408-bb34-25f0c2a959f7","
a, b = map(int, input().split())
print(a + b)
","1.0"
"87ecc56e-ce90-4408-bb34-25f0c2a959f7","
a, b = map(int, input().split())
print(a + b)
","1.0"
"87ecc56e-ce90-4408-bb34-25f0c2a959f7","
a, b = map(int, input().split())
print(a + b)
","1.0"
"b48599d5-44a6-4b34-9cdf-8ec2d44054d6","
a, b = map(int, input().split())
if a <= b:
    for i in range(a, b + 1):
        print(i, end=' ')
else:
    for i in range(a, b - 1, -1):
        print(i, end=' ')
","1.0"
"b48599d5-44a6-4b34-9cdf-8ec2d44054d6","a, b = map(int, input().split())if a <= b:for i in range(a, b + 1):print(i, end=' ')else:for i in range(a, b - 1, -1):print(i, end=' ')","1.0"
"b48599d5-44a6-4b34-9cdf-8ec2d44054d6","
a, b = map(int, input().split())

if a <= b:
    for i in range(a, b + 1):
        print(i, end=' ')
else:
    for i in range(a, b - 1, -1):
        print(i, end=' ')
","1.0"
"09dc2eb4-f9d0-445c-aa81-994928c2d4b8","
n = int(input())
c = list(map(int, input().split()))
min_cost = float('inf')

for k in range(1, n + 1):
    total_cost = sum(c[:k]) + (n - k) * min(c[:k])
    min_cost = min(min_cost, total_cost)

print(min_cost)
","1.0"
"09dc2eb4-f9d0-445c-aa81-994928c2d4b8","n = int(input())c = list(map(int, input().split()))min_cost = float('inf')for k in range(1, n + 1):total_cost = sum(c[:k]) + (n - k) * min(c[:k])min_cost = min(min_cost, total_cost)print(min_cost)","1.0"
"09dc2eb4-f9d0-445c-aa81-994928c2d4b8","
n = int(input())
c = list(map(int, input().split()))

min_cost = float('inf')

for k in range(1, n + 1):
    total_cost = sum(c[:k]) + (n - k) * min(c[:k])
    min_cost = min(min_cost, total_cost)

print(min_cost)
","1.0"
"8b0d3d79-b497-4ccb-8f9b-4b426af3908b","
n = 13
d = 2
k = 2

x, y = 0, 0
dx, dy = 1, 0
matrix = [['.' for _ in range(100)] for _ in range(100)]
visited = [(0, 0)]
matrix[y][x] = '*'
steps = 1

while steps < n:
    for _ in range(d):
        if steps >= n:
            break
        x, y = x + dx, y + dy
        if (x, y) not in visited:
            visited.append((x, y))
            matrix[y][x] = '*'
        steps += 1
    
    dx, dy = -dy, dx  # turn left
    if dy == 0:
        d *= k

min_x = min(visited, key=lambda p: p[0])[0]
max_x = max(visited, key=lambda p: p[0])[0]
min_y = min(visited, key=lambda p: p[1])[1]
max_y = max(visited, key=lambda p: p[1])[1]

h = max_y - min_y + 1
w = max_x - min_x + 1

print(h, w)
for row in range(min_y, max_y + 1):
    print(''.join(matrix[row][min_x:max_x + 1]))
","1.0"
"8b0d3d79-b497-4ccb-8f9b-4b426af3908b","n, d, k = map(int, input().split())
visited = [[False] * (2 * n + 1) for _ in range(2 * n + 1)]
row, col, count = 0, 0, 0
dx, dy = 0, 1

while count < n:
    while visited[row][col+1] == False or visited[row+1][col] == False:
        if visited[row][col+1] == False:
            col += 1
        elif visited[row+1][col] == False:
            row += 1
        visited[row][col] = True
        count += 1

    if k == 2:
        k = 4
    elif k == 3:
        k = 3
    elif k == 4:
        k = 2
    else:
        k = 1

    if dx == 0:
        dy, dx = -dx, 0
    else:
        dx, dy = -dx, -dy
    k = k // 4

h, w = row * 2 + 2, col * 2 + 2
for i in range(h):
    for j in range(w):
        print(""*"" if visited[i][j] else ""."", end="""")
    print()","1.0"
"8b0d3d79-b497-4ccb-8f9b-4b426af3908b","
n, d, k = map(int, input().split())
visited = set()
x, y = 0, 0
visited.add((x, y))
directions = [(1, 0), (0, -1), (-1, 0), (0, 1)]
dir_index = 0

for _ in range(n):
    for _ in range(d):
        if len(visited) < n:
            visited.add((x, y))
        x += directions[dir_index][0]
        y += directions[dir_index][1]
    dir_index = (dir_index + 1) % 4
    for _ in range(d):
        if len(visited) < n:
            visited.add((x, y))
        x += directions[dir_index][0]
        y += directions[dir_index][1]
    dir_index = (dir_index + 1) % 4
    d *= k

min_x = min(pos[0] for pos in visited)
max_x = max(pos[0] for pos in visited)
min_y = min(pos[1] for pos in visited)
max_y = max(pos[1] for pos in visited)

h = max_x - min_x + 1
w = max_y - min_y + 1
print(h, w)

grid = [['.' for _ in range(w)] for _ in range(h)]
for (vx, vy) in visited:
    grid[vx - min_x][vy - min_y] = '*'

for row in grid:
    print(''.join(row))
","1.0"
"ccfb8d38-8277-4806-ad02-80a6b6aea9cc","n = int(input())a = [int(input()) for _ in range(n)]if n == 1:print(""No"")else:odd_sum = sum(a[i] for i in range(0, n, 2))even_sum = sum(a[i] for i in range(1, n, 2))if odd_sum == even_sum:print(""Yes"")else:total_sum = odd_sum + even_sumif (total_sum % 2 == 0) and (abs(odd_sum - even_sum) <= 2 * max(a)):print(""Yes"")else:print(""No"")","1.0"
"ccfb8d38-8277-4806-ad02-80a6b6aea9cc","n = int(input())arr = [int(input()) for _ in range(n)]if n == 1:print(""No"")else:odd_sum = sum(arr[i] for i in range(0, n, 2))even_sum = sum(arr[i] for i in range(1, n, 2))if odd_sum == even_sum:print(""Yes"")else:diff = abs(odd_sum - even_sum)if diff % 2 == 0 and any((x >= diff // 2 for x in arr)):print(""Yes"")else:print(""No"")","1.0"
"ccfb8d38-8277-4806-ad02-80a6b6aea9cc","
n = int(input())
a = [int(input()) for _ in range(n)]

if n == 1:
    print(""No"")
else:
    odd_sum = sum(a[i] for i in range(0, n, 2))
    even_sum = sum(a[i] for i in range(1, n, 2))
    
    if odd_sum == even_sum:
        print(""Yes"")
    else:
        total_sum = sum(a)
        if (total_sum % 2 == 0) and (abs(odd_sum - even_sum) % 2 == 0):
            print(""Yes"")
        else:
            print(""No"")
","1.0"
"bcc460f7-6c44-405b-a9c6-b884f3e1d171","
a, b = map(int, input().split())
print(abs(a - b))
","1.0"
"bcc460f7-6c44-405b-a9c6-b884f3e1d171","
a, b = map(int, input().split())
print(a - b)
","1.0"
"bcc460f7-6c44-405b-a9c6-b884f3e1d171","
a, b = map(int, input().split())
print(abs(a - b))
","1.0"
"15a679fe-9f02-44a5-8720-d22dbf7b05ce","
n = int(input())
print((n + 1) // 2)
","1.0"
"15a679fe-9f02-44a5-8720-d22dbf7b05ce","
n = int(input())
print((n + 1) // 2)
","1.0"
"15a679fe-9f02-44a5-8720-d22dbf7b05ce","
n = int(input())
print((n + 1) // 2)
","1.0"
"f6186143-1fb6-411f-a770-fda693e2e9b8","
x, y, z = map(int, input().split())

if y * 3 + z < x:
    print(-1)
else:
    cars = x
    y = max(0, y - (x // 3))
    x %= 3
    if x == 1:
        if y > 0:
            cars += 1
            y -= 1
        elif z > 1:
            cars += 1
            z -= 2
        else:
            print(-1)
            exit()
    elif x == 2:
        if y > 0:
            cars += 1
            y -= 1
        elif z > 0:
            cars += 1
            z -= 1
        else:
            print(-1)
            exit()
    
    cars += y // 3
    if y % 3 > 0:
        cars += 1
    cars += z // 3
    if z % 3 > 0:
        cars += 1
    
    print(cars)
","1.0"
"f6186143-1fb6-411f-a770-fda693e2e9b8","
def calculate_robotaxis(x, y, z):
    if y > z + 1:
        return -1
    cars = x
    z -= max(0, y - 1)
    cars += y
    cars += (z + 2) // 3
    return cars

x, y, z = map(int, input().split())
print(calculate_robotaxis(x, y, z))
","1.0"
"f6186143-1fb6-411f-a770-fda693e2e9b8","
x, y, z = map(int, input().split())

if y > z + 1:
    print(-1)
else:
    cars = x
    z -= max(0, y - 1)
    cars += y
    cars += (z + 2) // 3
    print(cars)
","1.0"
"cfed631e-c3d2-495b-96a0-5c89a5a8aee0","n = int(input())left_count = [0, 0]right_count = [0, 0]for _ in range(n):left, right = map(int, input().split())left_count[left] += 1right_count[right] += 1min_changes = min(left_count[0] + right_count[0], left_count[0] + right_count[1], left_count[1] + right_count[0], left_count[1] + right_count[1])print(min_changes)","1.0"
"cfed631e-c3d2-495b-96a0-5c89a5a8aee0","
n = int(input())
left_bits = 0
right_bits = 0

for _ in range(n):
    l, r = map(int, input().split())
    left_bits += l
    right_bits += r

min_left_changes = min(left_bits, n - left_bits)
min_right_changes = min(right_bits, n - right_bits)

print(min_left_changes + min_right_changes)
","1.0"
"cfed631e-c3d2-495b-96a0-5c89a5a8aee0","
n = int(input())
left_bits = []
right_bits = []

for _ in range(n):
    l, r = map(int, input().split())
    left_bits.append(l)
    right_bits.append(r)

count_left_0 = left_bits.count(0)
count_left_1 = n - count_left_0
count_right_0 = right_bits.count(0)
count_right_1 = n - count_right_0

min_operations = min(count_left_0, count_left_1) + min(count_right_0, count_right_1)
print(min_operations)
","1.0"
"4a5ca4da-8ce7-4613-b0d6-23c6ebb491ed","
n = int(input())
coins = list(map(int, input().split()))
stacks = {}
for coin in coins:
    if coin in stacks:
        stacks[coin] += 1
    else:
        stacks[coin] = 1
max_height = max(stacks.values())
total_stacks = len(stacks)
print(max_height, total_stacks)
","1.0"
"4a5ca4da-8ce7-4613-b0d6-23c6ebb491ed","n = int(input())coins = list(map(int, input().split()))stack_count = {}for coin in coins:if coin in stack_count:stack_count[coin] += 1else:stack_count[coin] = 1max_height = max(stack_count.values())total_stacks = len(stack_count)print(max_height, total_stacks)","1.0"
"4a5ca4da-8ce7-4613-b0d6-23c6ebb491ed","
n = int(input())
coins = list(map(int, input().split()))
stacks = {}

for coin in coins:
    if coin in stacks:
        stacks[coin] += 1
    else:
        stacks[coin] = 1

max_height = max(stacks.values())
total_stacks = len(stacks)

print(max_height, total_stacks)
","1.0"
"2a42d873-b1fe-4256-a488-91db4eaa8d9f","
a = input().strip()
table = input().strip()
table_digits = sorted(table, reverse=True)
result = list(a)
j = 0

for i in range(len(result)):
    if j < len(table_digits) and table_digits[j] > result[i]:
        result[i] = table_digits[j]
        j += 1

print(''.join(result))
","1.0"
"2a42d873-b1fe-4256-a488-91db4eaa8d9f","a = input().strip()table = input().strip()table_list = sorted(table, reverse=True)result = list(a)j = 0for i in range(len(result)):if j < len(table_list) and table_list[j] > result[i]:result[i] = table_list[j]j += 1print(''.join(result))","1.0"
"2a42d873-b1fe-4256-a488-91db4eaa8d9f","
a = input().strip()
table = input().strip()
table_digits = sorted(table, reverse=True)
result = list(a)

j = 0
for i in range(len(result)):
    if j < len(table_digits) and table_digits[j] > result[i]:
        result[i] = table_digits[j]
        j += 1

print(''.join(result))
","1.0"
"4d25e12d-091c-4350-a744-93b5301dbe02","
n = int(input())
numbers = list(map(int, input().split()))
my_sum = 0
your_sum = 0
turn = 0

while numbers:
    if turn % 2 == 0:
        if numbers[0] > numbers[-1]:
            my_sum += numbers[0]
            numbers.pop(0)
        else:
            my_sum += numbers[-1]
            numbers.pop()
    else:
        if numbers[0] > numbers[-1]:
            your_sum += numbers[0]
            numbers.pop(0)
        else:
            your_sum += numbers[-1]
            numbers.pop()
    turn += 1

print(my_sum, your_sum)
","1.0"
"4d25e12d-091c-4350-a744-93b5301dbe02","n = int(input())numbers = list(map(int, input().split()))my_sum = 0your_sum = 0turn = 0while numbers:if turn % 2 == 0:if numbers[0] > numbers[-1]:my_sum += numbers[0]numbers.pop(0)else:my_sum += numbers[-1]numbers.pop()else:if numbers[0] > numbers[-1]:your_sum += numbers[0]numbers.pop(0)else:your_sum += numbers[-1]numbers.pop()turn += 1print(my_sum, your_sum)","1.0"
"4d25e12d-091c-4350-a744-93b5301dbe02","
n = int(input())
numbers = list(map(int, input().split()))
my_sum = 0
your_sum = 0
turn = 0

while numbers:
    if numbers[0] > numbers[-1]:
        chosen = numbers.pop(0)
    else:
        chosen = numbers.pop(-1)
    
    if turn % 2 == 0:
        my_sum += chosen
    else:
        your_sum += chosen
    
    turn += 1

print(my_sum, your_sum)
","1.0"
"0718b9a2-e909-4d51-9f4a-a1de2c698eb1","
def higher_surname(surname):
    surname_list = list(surname)
    n = len(surname_list)
    
    for i in range(n):
        for j in range(i + 1, n):
            surname_list[i], surname_list[j] = surname_list[j], surname_list[i]
            new_surname = ''.join(surname_list)
            if new_surname < surname:
                surname = new_surname
            surname_list[i], surname_list[j] = surname_list[j], surname_list[i]
    
    return surname

input_surname = input().strip()
print(higher_surname(input_surname))
","1.0"
"0718b9a2-e909-4d51-9f4a-a1de2c698eb1","
def new_surname(surname):
    surname_list = list(surname)
    for i in range(len(surname_list) - 1):
        for j in range(i + 1, len(surname_list)):
            surname_list[i], surname_list[j] = surname_list[j], surname_list[i]
            if surname_list < list(surname):
                return ''.join(surname_list)
            surname_list[i], surname_list[j] = surname_list[j], surname_list[i]
    return surname

surname = input().strip()
print(new_surname(surname))
","1.0"
"0718b9a2-e909-4d51-9f4a-a1de2c698eb1","
def higher_surname(surname):
    surname_list = list(surname)
    n = len(surname_list)
    
    for i in range(n):
        for j in range(i + 1, n):
            surname_list[i], surname_list[j] = surname_list[j], surname_list[i]
            new_surname = ''.join(surname_list)
            if new_surname < surname:
                surname = new_surname
            surname_list[i], surname_list[j] = surname_list[j], surname_list[i]
    
    return surname

input_surname = input().strip()
print(higher_surname(input_surname))
","1.0"
"8c60181e-f560-4f27-a609-9ab45077ce53","
n = int(input())
matrix = [list(map(int, input().split())) for _ in range(n)]
finalists = []

for i in range(n):
    if all(matrix[i][j] != 1 and matrix[i][j] != 2 and matrix[i][j] != 3 for j in range(n) if j != i):
        finalists.append(i + 1)

print(len(finalists))
print("" "".join(map(str, finalists)))
","1.0"
"8c60181e-f560-4f27-a609-9ab45077ce53","n = int(input())
matrix = []

for i in range(n):
    row = list(map(int, input().split()))
    matrix.append(row)

finalists = []

for i in range(n):
    sum_overturned = sum(matrix[i])
    if sum_overturned == 0:
        finalists.append(i + 1)

print(len(finalists))
print(*finalists)
","1.0"
"8c60181e-f560-4f27-a609-9ab45077ce53","
n = int(input())
matrix = [list(map(int, input().split())) for _ in range(n)]

finalists = []

for i in range(n):
    if all(matrix[i][j] != 1 and matrix[i][j] != 3 for j in range(n) if j != i):
        finalists.append(i + 1)

print(len(finalists))
print("" "".join(map(str, finalists)))
","1.0"
"b316f513-f142-45d3-a702-cc3208e6aa54","
n, a, b = map(int, input().split())
if a >= n and b >= n:
    print(""YES"")
else:
    print(""NO"")
","1.0"
"b316f513-f142-45d3-a702-cc3208e6aa54","
n, a, b = map(int, input().split())
if n <= min(a, b):
    print(""YES"")
else:
    print(""NO"")
","1.0"
"b316f513-f142-45d3-a702-cc3208e6aa54","
n, a, b = map(int, input().split())
if a >= n and b >= n:
    print(""YES"")
else:
    print(""NO"")
","1.0"
"2173e6e8-cca6-47c7-8ef6-ea93d3e736f4","n = int(input())coordinates = list(map(int, input().split()))coordinates.sort()total_length = 0for i in range(1, n):total_length += coordinates[i] - coordinates[i - 1]print(total_length)","1.0"
"2173e6e8-cca6-47c7-8ef6-ea93d3e736f4","
n = int(input())
coordinates = list(map(int, input().split()))
coordinates.sort()
total_length = 0
for i in range(1, n):
    total_length += coordinates[i] - coordinates[i - 1]
print(total_length)
","1.0"
"2173e6e8-cca6-47c7-8ef6-ea93d3e736f4","
n = int(input())
coordinates = list(map(int, input().split()))
coordinates.sort()
total_length = 0
for i in range(1, n):
    total_length += coordinates[i] - coordinates[i - 1]
print(total_length)
","1.0"
"49c03922-c57e-464a-8191-9ebef2615808","a, b, m = map(int, input().split())lcm = a * b // gcd(a, b)count_a = (lcm // a) * (m + 1)count_b = (lcm // b) * (m + 1)overlap = (lcm // (a * b // gcd(a, b))) * (m + 1)result = count_a + count_b - overlapprint(result)def gcd(x, y):while y:x, y = y, x % yreturn x","1.0"
"49c03922-c57e-464a-8191-9ebef2615808","a, b, m = map(int, input().split())lcm_ab = (a * b) // gcd(a, b)count_a = lcm_ab // acount_b = lcm_ab // bvisible_time = m + 1max_fireworks = (count_a * visible_time) + (count_b * visible_time) - (visible_time // lcm_ab)print(max_fireworks)def gcd(x, y):while y != 0:(x, y) = (y, x % y)return x","1.0"
"49c03922-c57e-464a-8191-9ebef2615808","
a, b, m = map(int, input().split())
lcm_ab = (a * b) // gcd(a, b)
count_a = (lcm_ab // a) * (m + 1)
count_b = (lcm_ab // b) * (m + 1)
count_common = (lcm_ab // (a * b // gcd(a, b))) * (m + 1)
max_fireworks = count_a + count_b - count_common
print(max_fireworks)

def gcd(x, y):
    while y:
        x, y = y, x % y
    return x
","1.0"
"c4ced8e6-dec6-4f4a-8a79-f5800795a08b","
n = int(input())
min_cubes = 0
max_cubes = 0

for a in range(1, int(n**(1/3)) + 2):
    for b in range(a, int(n**(1/3)) + 2):
        for c in range(b, int(n**(1/3)) + 2):
            if a * b * c >= n:
                white_cubes = (a - 1) * (b - 2) * (c - 2)
                if white_cubes == n:
                    painted_cubes = a * b * c - n
                    if min_cubes == 0 or painted_cubes < min_cubes:
                        min_cubes = painted_cubes
                    if painted_cubes > max_cubes:
                        max_cubes = painted_cubes

print(min_cubes, max_cubes)
","1.0"
"c4ced8e6-dec6-4f4a-8a79-f5800795a08b","
n = int(input())
min_colored = 0
max_colored = 0

for a in range(1, int(n**(1/3)) + 2):
    for b in range(a, int(n**(1/3)) + 2):
        for c in range(b, int(n**(1/3)) + 2):
            if a * b * c >= n:
                white_cubes = (a - 1) * (b - 2) * (c - 2)
                if white_cubes == n:
                    total_cubes = a * b * c
                    min_colored = min(min_colored, total_cubes - n) if min_colored else total_cubes - n
                    max_colored = max(max_colored, total_cubes - n)

print(min_colored, max_colored)
","1.0"
"c4ced8e6-dec6-4f4a-8a79-f5800795a08b","
n = int(input())
min_cubes = float('inf')
max_cubes = float('-inf')

for a in range(1, int(n**(1/3)) + 2):
    for b in range(a, int((n/a)**(1/2)) + 2):
        c = n // (a * b)
        if a * b * c == n:
            total_cubes = a * b * c
            painted_cubes = total_cubes - (a - 1) * (b - 2) * (c - 2)
            min_cubes = min(min_cubes, painted_cubes)
            max_cubes = max(max_cubes, painted_cubes)

print(min_cubes, max_cubes)
","1.0"
"df2fe73c-bfa4-40e5-b77c-d2ad076197ca","
def can_distribute(max_time, n, k, s, candies):
    team_count = 1
    current_sum = 0
    for candy in candies:
        if current_sum + candy > max_time * s:
            team_count += 1
            current_sum = candy
            if team_count > k:
                return False
        else:
            current_sum += candy
    return True

def find_min_time(n, k, s, candies):
    left, right = max(candies) // s, sum(candies) // s
    while left < right:
        mid = (left + right) // 2
        if can_distribute(mid, n, k, s, candies):
            right = mid
        else:
            left = mid + 1
    return left

n, k, s = map(int, input().split())
candies = list(map(int, input().split()))
print(find_min_time(n, k, s, candies))
","1.0"
"df2fe73c-bfa4-40e5-b77c-d2ad076197ca","
def min_time_to_eat_candies(n, k, s, bags):
    def can_finish_in_time(mid):
        total_time = 0
        for i in range(n):
            total_time += (bags[i] + s - 1) // s
        return total_time <= mid * k

    left, right = 1, sum(bags) // s + 1
    while left < right:
        mid = (left + right) // 2
        if can_finish_in_time(mid):
            right = mid
        else:
            left = mid + 1
    return left

n, k, s = map(int, input().split())
bags = list(map(int, input().split()))
print(min_time_to_eat_candies(n, k, s, bags))
","1.0"
"df2fe73c-bfa4-40e5-b77c-d2ad076197ca","
def min_time_to_eat_candies(n, k, s, bags):
    def can_finish_in_time(mid):
        total_time = 0
        for i in range(n):
            total_time += (bags[i] + s - 1) // s
        return total_time <= k * mid

    left, right = 1, sum((bag + s - 1) // s for bag in bags)
    while left < right:
        mid = (left + right) // 2
        if can_finish_in_time(mid):
            right = mid
        else:
            left = mid + 1
    return left

n, k, s = map(int, input().split())
bags = list(map(int, input().split()))
print(min_time_to_eat_candies(n, k, s, bags))
","1.0"
"4659a273-9c89-4ff8-a1bd-6d0ae87e9915","x=int (input())
x=x-2
if x%10==1 and x!=11:
   print(x,'mag')
elif (x%10==2 or x%10==3 or x%10==4) and x!=12 and x!=13 and x!=14:
   print(x,'maga')
else :
   print(x,'magov')




","0.0"
"84118453-37c4-4256-a8f0-5dc2707d4e35","a=str(bin(int(input())))
print(a[2:])","0.0"
"b8c265d0-999d-49e2-a5fd-eed95708bf97","n = int(input())

gr = [[] * n for i in range(n)]
A = [[] * n for i in range(n)]
inf=10**10

for i in range(n):
    gr[i] = [int(t) for t in input().split()]

for i in range(n):
    for j in range(n):
        if (gr[i][j]==-1):
            gr[i][j]=inf

A = [[gr[i][j] for j in range(n)] for i in range(n)] 
for k in range(n): 
    for i in range(n):
        for j in range(n): 
            A[i][j] = min(A[i][j], A[i][k] + A[k][j])



for row in A:
    print(' '.join(map(str, row)))","0.0"
"84118453-37c4-4256-a8f0-5dc2707d4e35","a=str(bin(int(input())))
print(a[2:])","0.0"
"84118453-37c4-4256-a8f0-5dc2707d4e35","a=str(bin(int(input())))
print(a[2:])","0.0"
"f2d92959-39d9-49fe-a9b1-5868567eeedf","a=int(input())
d=int(a*2.54)

print(d)","0.0"
"84118453-37c4-4256-a8f0-5dc2707d4e35","a=str(bin(int(input())))
print(a[2:])","0.0"
"84118453-37c4-4256-a8f0-5dc2707d4e35","a=str(bin(int(input())))
print(a[2:])","0.0"
"901dd977-9e8b-4b54-9730-6aeaa9d4a9e7","ugol1=int(input())
print(90-ugol1)","0.0"
"5d02ab7a-4394-4098-9f7a-ed3912083888","h=int (input())
m=int(input())

vr=h*60+m+75

print(vr//60%24,vr%60)



","0.0"
"f2d92959-39d9-49fe-a9b1-5868567eeedf","a=int(input())
d=round(a*2.54)

print(d)","0.0"
"1ff5a639-82a9-46d5-99e8-90b0529a5016","n=int (input())


vr1=n%3
vr2=n//3

print(vr2+vr1//2+vr1%2)","0.0"
"5d02ab7a-4394-4098-9f7a-ed3912083888","h=int (input())
m=int(input())
h=h+1
m=m+15
if (h>=24):
    h=0
if (m>=60):
    h=h+1
    m=m-60
print(h,m)



","0.0"
"b8c265d0-999d-49e2-a5fd-eed95708bf97","n = int(input())
gr = [[] * n for i in range(n)]
A = [[] * n for i in range(n)]
inf=10**10

for i in range(n):
    gr[i] = [int(t) for t in input().split()]

for i in range(n):
    for j in range(n):
        if (gr[i][j]==-1):
            gr[i][j]=inf

A = [[gr[i][j] for j in range(n)] for i in range(n)] 
for k in range(n): 
    for i in range(n):
        for j in range(n): 
            A[i][j] = min(A[i][j], A[i][k] + A[k][j])



for row in A:
    print(' '.join(map(str, row)))","0.0"
"945dd62f-c5a3-4a5c-888f-d188a7c8cac3","n = int(input())
gr = [[] * n for i in range(n)]
inf=10**10

for i in range(n):
    gr[i] = [int(t) for t in input().split()]
verV = int(input())

for i in range(n):
    for j in range(n):
        if (gr[i][j]==0)or(gr[i][j]==-1):
            gr[i][j]=inf
gr[verV-1][verV-1]=0

def dijkstra(src):
    visited = []
    distance = {src: 0}
    node = list(range(len(gr[0])))
    if src in node:
        node.remove(src)
        visited.append(src)
    else:
        return None
    for i in node:
        distance[i] = gr[src][i]
    prefer = src
    while node:
        _distance = float('inf')
        for i in visited:
            for j in node:
                if gr[i][j] > 0:
                    if _distance > distance[i] + gr[i][j]:
                        _distance = distance[j] = distance[i] + gr[i][j]
                        prefer = j
        visited.append(prefer)
        node.remove(prefer)
    return distance


distance = dijkstra(verV-1)
#print(distance)
for h in range(n):
    if h!=verV-1:
        if distance[h]==inf:
            print(h+1,'NO')
        else:    
            print(h+1,distance[h])","0.0"
"dfcd4c48-6f3f-4a53-a03f-e5abebfebdae","n = int(input())
gr = [[] * n for i in range(n)]
inf=10**10

for i in range(n):
    gr[i] = [int(t) for t in input().split()]
verV,verW= map(int,input().split())

for i in range(n):
    for j in range(n):
        if (gr[i][j]==0)or(gr[i][j]==-1):
            gr[i][j]=inf

def dijkstra(src):
    # init
    visited = []
    distance = {src: 0}
    node = list(range(len(gr[0])))
    if src in node:
        node.remove(src)
        visited.append(src)
    else:
        return None
    for i in node:
        distance[i] = gr[src][i]
    prefer = src
    while node:
        _distance = float('inf')
        for i in visited:
            for j in node:
                if gr[i][j] > 0:
                    if _distance > distance[i] + gr[i][j]:
                        _distance = distance[j] = distance[i] + gr[i][j]
                        prefer = j
        visited.append(prefer)
        node.remove(prefer)
    return distance


distance = dijkstra(verV-1)
#print(distance)
if distance[verW-1]==inf:
    print('NO')
else:
    print(distance[verW-1])","0.0"
"04dd6eca-f83b-4028-a21a-4e09c9333c0a","n=int(input())
gr = [[] * n for i in range(n)]
visited = [False] * n
Q = []
QQ=[]
Q3=[]
st=[-1]*n
Set=0

for i in range(n):
    gr[i] = [int(t) for t in input().split()]
verV,verW= map(int,input().split())

def BFS(start):
    if start<len(Q):
        v = Q[start]
        for i in range(n): 
            if gr[v][i]>0:
                if not visited[i]:
                    Q.append(i)
                    visited[i]=True
                    st[i]=v
        
        BFS(start+1)

verV-=1
verW-=1
Q.append(verV)
visited[verV]=True
BFS(0)

if st[verW]==-1:
    if verV==verW:
        print(0)
        
    else:
        print('NO')
else:
    QQ=[verW]
    while st[verW]!=verV:
        QQ.append(st[verW])
        verW=st[verW]
    QQ.append(st[verW])
    QQ.reverse()   
    for h in range(len(QQ)-1):
        Set=Set+gr[QQ[h]][QQ[h+1]]
    print(Set)","0.0"
"1187526d-8b3a-4a9b-8098-bbbf8d9d1423","n= int(input())
gr = [[] * n for i in range(n)]
visited = [False] * n
Q = []
Q2=[]
Q3=[]
st=[0]*n
Qstart=0

for i in range(n):
    gr[i] = [int(t) for t in input().split()]


def BFS(start):
    if start<len(Q):
        v = Q[start]
        for i in range(n): 
            if gr[v][i]==1:
                if not visited[i]:
                    Q.append(i)
                    visited[i]=True
                    st[i]=v
        
        BFS(start+1)

Q.append(0)
visited[0]=True
BFS(0)

for i in range(n):
    print(i+1,st[i]+1)","0.0"
"80cacb8a-a6c2-4757-9646-317c1594c18e","n,m= map(int,input().split())
gr = [[] * n for i in range(n)]
visited = [False] * n
Q = []
Q2=[]
Qstart=0

for i in range(n):
    gr[i] = [int(t) for t in input().split()]


def BFS(start):
    if start<n:
        v = Q[start]
        for i in range(n): 
            if gr[v][i]==1:
                if not visited[i]:
                    Q.append(i)
                    visited[i]=True
        
        BFS(start+1)


for d in range(m):
    visited = [False] * n
    Q = []
    Q2=[]
    Qstart=0
    t=int(input())
    Q.append(t-1)
    visited[t-1]=True
    BFS(0)
    for i in range(len(Q)):
        Q2.append(Q[i]+1)
    print(*Q2)","0.0"
"e9f3df82-446a-424e-a07b-3c77daa739f2","n= int(input())
gr = [[] * n for i in range(n)]
visited = [False] * n
Q = []
Q2=[]
Qstart=0

for i in range(n):
    gr[i] = [int(t) for t in input().split()]


def BFS(start):
    if start<n:
        v = Q[start]
        for i in range(n): 
            if gr[v][i]==1:
                if not visited[i]:
                    Q.append(i)
                    visited[i]=True
        
        BFS(start+1)

Q.append(0)
visited[0]=True
BFS(0)
for i in range(len(Q)):
    Q2.append(Q[i]+1)
print(*Q2)","0.0"
"80cacb8a-a6c2-4757-9646-317c1594c18e","n,m= map(int,input().split())
gr = [[] * n for i in range(n)]
visited = [False] * n
Q = []
Q2=[]
Qstart=0

for i in range(n):
    gr[i] = [int(t) for t in input().split()]

def BFS(start):
    Qstart=0
    Q.append(start)
    visited[start]=True
    while Qstart<len(Q): 
        v = Q[Qstart]
        Qstart+=1
        for i in range(n): 
            if gr[v][i]==1:
                if not visited[i]:
                    Q.append(i)
                    visited[i]=True


for d in range(m):
    visited = [False] * n
    Q = []
    Q2=[]
    Qstart=0
    t=int(input())
    BFS(t-1)
    for i in range(len(Q)):
        Q2.append(Q[i]+1)
    print(*Q2)","0.0"
"e9f3df82-446a-424e-a07b-3c77daa739f2","n= int(input())
gr = [[] * n for i in range(n)]
visited = [False] * n
Q = []
Q2=[]
Qstart=0
maxlen=0
k=[]
for i in range(n):
    gr[i] = [int(t) for t in input().split()]


def BFS(start):
    Qstart=0
    Q.append(start)
    visited[start]=True
    while Qstart<len(Q): 
        v = Q[Qstart]
        Qstart+=1
        for i in range(n): 
            if gr[v][i]==1:
                if not visited[i]:
                    Q.append(i)
                    visited[i]=True


BFS(0)
for i in range(len(Q)):
    Q2.append(Q[i]+1)
print(*Q2)","0.0"
"2924cfce-8ebf-4fe5-aa8e-046256297fb1","n = int(input())
gr = [[] * n for i in range(n)]
visited = [False] * n
prev = []
k=[]
for i in range(n):
    gr[i] = [int(t) for t in input().split()]

       
         
def dfs(start):
    
    visited[start] = True
    for u in range(n):
        if gr[start][u]==1:
            if not visited[u]:
                dfs(u)
    prev.append(start+1)
            
for d in range(n):
    if not visited[d]:
        dfs(d)
prev.reverse()

print(*prev)","0.0"
"82028d7b-804a-4c3d-acf8-29bc892147e5","n= int(input())
gr = [[] * n for i in range(n)]
visited = [False] * n
prev = []
k=[]
for i in range(n):
    gr[i] = [int(t) for t in input().split()]

       
         
def dfs(start):
   
    prev.append(start)
    visited[start] = True
    for u in range(n):
        if gr[start][u]==1:
            if not visited[u]:
                dfs(u)
            
dfs(0)
    
if len(prev)==n:
    print('YES')
else:
    print('NO')","0.0"
"614009a0-821e-497b-9a0b-07c0dbe033b8","n,m = map(int,input().split())
gr = [[] * n for i in range(n)]
visited = [False] * n
prev = []
k=[]
for i in range(n):
    gr[i] = [int(t) for t in input().split()]

       
         
def dfs(start):
   
    if start==w-1:
        k.append(1)
    visited[start] = True
    for u in range(n):
        if gr[start][u]==1:
            if not visited[u]:
                dfs(u)
            
for t in range(m):
    k=[]
    visited = [False] * n
   
    v,w = map(int,input().split())
    dfs(v-1)
    
    if k!=[]:
        print('YES')
    else:
        print('NO')","0.0"
"ead36ff4-8cf1-4c6c-8a43-ab69f623fde7","n= int(input())
gr = [[] * n for i in range(n)]
visited = [False] * n
prev = []
prevP=[]
rd=[0] * n
st=[0] * n
k=0

for i in range(n):
    gr[i] = [int(t) for t in input().split()]

         
def dfs(start):
    prev.append(start)
    visited[start] = True
    for u in range(n):
        if not visited[u] and gr[start][u]!=0:
            st[u]=start
            dfs(u)
           

            
dfs(0)
#print(*prev)
#print(*prevP)
for i in range(n):
    k=prev[i]
    rd[k]=i

for i in range(n):
    print(i+1,st[i]+1) ","0.0"
"95831070-88fb-406f-8997-c0fc4027d623"," 
n = int(input())        
gr = [[] * n for i in range(n)]
for i in range(n):
    gr[i] = [int(t) for t in input().split()]
   

for i in range(n):
    for j in range(n):
        if gr[i][j]==1:
            gr[j][i]=gr[i][j]
            #break
                    
for row in gr:
    print(' '.join(map(str, row)))
","0.0"
"0cc13605-3cb0-48e8-a8d7-10d2e1b77520","n= int(input())
gr = [[] * n for i in range(n)]
visited = [False] * n
prev = []
prevP=[]
rd=[0] * n
st=[0] * n
k=0

for i in range(n):
    gr[i] = [int(t) for t in input().split()]

         
def dfs(start):
    prev.append(start)
    visited[start] = True
    for u in range(n):
        if not visited[u] and gr[start][u]!=0:
            st[u]=start
            dfs(u)
           

            
dfs(0)
#print(*prev)
#print(*prevP)
for i in range(n):
    k=prev[i]
    rd[k]=i

for i in range(n):
    print(i+1,rd[i]+1) ","0.0"
"dfcd4c48-6f3f-4a53-a03f-e5abebfebdae","n = int(input())
gr = [[] * n for i in range(n)]
inf=10**10

for i in range(n):
    gr[i] = [int(t) for t in input().split()]
verV,verW= map(int,input().split())

for i in range(n):
    for j in range(n):
        if (gr[i][j]==0)or(gr[i][j]==-1):
            gr[i][j]=inf
gr[verV-1][verV-1]=inf
def dijkstra(src):
    # init
    visited = []
    distance = {src: 0}
    node = list(range(len(gr[0])))
    if src in node:
        node.remove(src)
        visited.append(src)
    else:
        return None
    for i in node:
        distance[i] = gr[src][i]
    prefer = src
    while node:
        _distance = float('inf')
        for i in visited:
            for j in node:
                if gr[i][j] > 0:
                    if _distance > distance[i] + gr[i][j]:
                        _distance = distance[j] = distance[i] + gr[i][j]
                        prefer = j
        visited.append(prefer)
        node.remove(prefer)
    return distance


distance = dijkstra(verV-1)
#print(distance)
if distance[verW-1]==inf:
    print('NO')
else:
    print(distance[verW-1])","0.0"
"04dd6eca-f83b-4028-a21a-4e09c9333c0a","n=int(input())
gr = [[] * n for i in range(n)]
visited = [False] * n
Q = []
QQ=[]
Q3=[]
st=[-1]*n
Set=0

for i in range(n):
    gr[i] = [int(t) for t in input().split()]
verV,verW= map(int,input().split())

def BFS(start):
    if start<len(Q):
        v = Q[start]
        for i in range(n): 
            if gr[v][i]>0:
                if not visited[i]:
                    Q.append(i)
                    visited[i]=True
                    st[i]=v
        
        BFS(start+1)

verV-=1
verW-=1
Q.append(verV)
visited[verV]=True
BFS(0)
if st[verW]==-1:
    if verV==verW:
        print(0)
        
    else:
        print('NO')
else:
    QQ=[verW]
    while st[verW]!=verV:
        QQ.append(st[verW])
        verW=st[verW]
    QQ.append(st[verW])
    QQ.reverse()   
    for h in range(len(QQ)-1):
        Set=Set+gr[QQ[h]][QQ[h+1]]
    print(Set)","0.0"
"945dd62f-c5a3-4a5c-888f-d188a7c8cac3","n = int(input())
gr = [[] * n for i in range(n)]
inf=10**10

for i in range(n):
    gr[i] = [int(t) for t in input().split()]
verV = int(input())

for i in range(n):
    for j in range(n):
        if (gr[i][j]==0)or(gr[i][j]==-1):
            gr[i][j]=inf
def dijkstra(src):
    visited = []
    distance = {src: 0}
    node = list(range(len(gr[0])))
    if src in node:
        node.remove(src)
        visited.append(src)
    else:
        return None
    for i in node:
        distance[i] = gr[src][i]
    prefer = src
    while node:
        _distance = float('inf')
        for i in visited:
            for j in node:
                if gr[i][j] > 0:
                    if _distance > distance[i] + gr[i][j]:
                        _distance = distance[j] = distance[i] + gr[i][j]
                        prefer = j
        visited.append(prefer)
        node.remove(prefer)
    return distance


distance = dijkstra(verV-1)
#print(distance)
for h in range(n):
    if h!=verV-1:
        if distance[h]==inf:
            print(h+1,'NO')
        else:    
            print(h+1,distance[h])","0.0"
"413dddee-a132-48a9-9753-e5bef469b529","n= int(input())
gr = [[] * n for i in range(n)]
visited = [False] * n
prev = []
maxprev=[]
maxlen=0
k=[]
for i in range(n):
    gr[i] = [int(t) for t in input().split()]

       
         
def dfs(start):
   
    prev.append(start+1)
    visited[start] = True
    for u in range(n):
        if gr[start][u]==1:
            if not visited[u]:
                dfs(u)
            
for i in range(n):
    if not visited[i]:
        prev = []
        dfs(i)
        #print(*prev)
        if len(prev)>maxlen:
            maxlen=len(prev)
            maxprev=prev
    
print(maxlen)
print(*maxprev)","0.0"
"e5673478-3dd1-49d0-b1ca-49dfa6304570","n = int(input())
gr = [[] * n for i in range(n)]
visited = [False] * n
prev = []
k=[]
for i in range(n):
    gr[i] = [int(t) for t in input().split()]

       
         
def dfs(start,predstart):
    prev.append(start+1)
    visited[start] = True
    for u in range(n):
        if gr[start][u]==1:
            if not visited[u]:
                dfs(u,start)
            else:
                if u!=predstart:
                    k.append(1)
            
dfs(0,0)

if k!=[]:
    print('YES')
else:
    print('NO')","0.0"
"413dddee-a132-48a9-9753-e5bef469b529","n= int(input())
gr = [[] * n for i in range(n)]
visited = [False] * n
prev = []
maxprev=[]
maxlen=0
k=[]
for i in range(n):
    gr[i] = [int(t) for t in input().split()]
     
def dfs(start):
   
    prev.append(start+1)
    visited[start] = True
    for u in range(n):
        if gr[start][u]==1:
            if not visited[u]:
                dfs(u)
            
for i in range(n):
    if not visited[i]:
        prev = []
        dfs(i)
        #print(*prev)
        if len(prev)>maxlen:
            maxlen=len(prev)
            maxprev=prev
    
print(maxlen)
print(*maxprev)","0.0"
"945dd62f-c5a3-4a5c-888f-d188a7c8cac3","n = int(input())
gr = [[] * n for i in range(n)]
inf=10**10

for i in range(n):
    gr[i] = [int(t) for t in input().split()]
verV = int(input())

for i in range(n):
    for j in range(n):
        if (gr[i][j]==0)or(gr[i][j]==-1):
            gr[i][j]=inf
gr[verV][verV]=0

def dijkstra(src):
    visited = []
    distance = {src: 0}
    node = list(range(len(gr[0])))
    if src in node:
        node.remove(src)
        visited.append(src)
    else:
        return None
    for i in node:
        distance[i] = gr[src][i]
    prefer = src
    while node:
        _distance = float('inf')
        for i in visited:
            for j in node:
                if gr[i][j] > 0:
                    if _distance > distance[i] + gr[i][j]:
                        _distance = distance[j] = distance[i] + gr[i][j]
                        prefer = j
        visited.append(prefer)
        node.remove(prefer)
    return distance


distance = dijkstra(verV-1)
#print(distance)
for h in range(n):
    if h!=verV-1:
        if distance[h]==inf:
            print(h+1,'NO')
        else:    
            print(h+1,distance[h])","0.0"
"945dd62f-c5a3-4a5c-888f-d188a7c8cac3","n = int(input())
gr = [[] * n for i in range(n)]
inf=10**10

for i in range(n):
    gr[i] = [int(t) for t in input().split()]
verV = int(input())

for i in range(n):
    for j in range(n):
        if (gr[i][j]==0)or(gr[i][j]==-1):
            gr[i][j]=inf

def dijkstra(src):
    visited = []
    distance = {src: 0}
    node = list(range(len(gr[0])))
    if src in node:
        node.remove(src)
        visited.append(src)
    else:
        return None
    for i in node:
        distance[i] = gr[src][i]
    prefer = src
    while node:
        _distance = float('inf')
        for i in visited:
            for j in node:
                if gr[i][j] > 0:
                    if _distance > distance[i] + gr[i][j]:
                        _distance = distance[j] = distance[i] + gr[i][j]
                        prefer = j
        visited.append(prefer)
        node.remove(prefer)
    return distance


distance = dijkstra(verV-1)
#print(distance)
for h in range(n):
    if h!=verV-1:
        if distance[h]==inf:
            print(h+1,'NO')
        else:    
            print(h+1,distance[h])","0.0"
"7880445a-3568-4939-8f55-d80530b696c0","n,verV= map(int,input().split())
gr = [[] * n for i in range(n)]
visited = [False] * n
Q = []
Q2=[]
Q3=[]
st=[-1]*n
Qstart=0

for i in range(n):
    gr[i] = [int(t) for t in input().split()]


def BFS(start):
    if start<len(Q):
        v = Q[start]
        for i in range(n): 
            if gr[v][i]==1:
                if not visited[i]:
                    Q.append(i)
                    visited[i]=True
                    st[i]=v
        
        BFS(start+1)

Q.append(verV-1)
visited[verV-1]=True
BFS(0)

m=int(input())

for i in range(m):
    verW=int(input())-1
    
    if st[verW]==-1:
        if verV-1==verW:
            print(verV)
        else:
            print('-1')
    else:
        QQ=[verW+1]
        while st[verW]!=verV-1:
            QQ.append(st[verW]+1)
            verW=st[verW]
        QQ.append(st[verW]+1)
        QQ.reverse()
        print(*QQ)","0.0"
"993d5917-3656-42be-87ec-bbde4aff5607","n,m = map(int,input().split())
gr = [[] * n for i in range(n)]
visited = [False] * n
prev = []
k=[]
for i in range(n):
    gr[i] = [int(t) for t in input().split()]
       
         
def dfs(start):
   
    if start==w-1:
        k.append(1)
    visited[start] = True
    for u in range(n):
        if gr[start][u]==1:
            if not visited[u]:
                dfs(u)
            
for t in range(m):
    k=[]
    visited = [False] * n
   
    v,w = map(int,input().split())
    dfs(v-1)
    
    if k!=[]:
        print('YES')
    else:
        print('NO')","0.0"
"993d5917-3656-42be-87ec-bbde4aff5607","n,m = map(int,input().split())
gr = [[] * n for i in range(n)]
visited = [False] * n
prev = []
k=[]
for i in range(n):
    gr[i] = [int(t) for t in input().split()]

       
         
def dfs(start):
   
    if start==w-1:
        k.append(1)
    visited[start] = True
    for u in range(n):
        if gr[start][u]==1:
            if not visited[u]:
                dfs(u)
            
for t in range(m):
    k=[]
    visited = [False] * n
   
    v,w = map(int,input().split())
    dfs(v-1)
    
    if k!=[]:
        print('YES')
    else:
        print('NO')","0.0"
"35bc693b-1917-49ae-ad4d-bed0d5a22583","n = int(input())        
gr = [[] * n for i in range(n)]
gr2 = [[0] * n for i in range(n)]
for i in range(n):
    gr[i] = [int(t) for t in input().split()]

for i in range(n):
    for j in range(n):
        if i==j:
            gr[i][j]=1
for i in range(n):
    for j in range(n):
        for z  in range(n):
            if gr2[i][j]==00:
               gr2[i][j]=gr[i][z]*gr[z][j]
for i in range(n):
    for j in range(n):
        if i==j:
            gr2[i][j]=0  
               
for row in gr2:
    print(' '.join(map(str, row)))","0.0"
"79312fbf-4cd4-4453-989e-43f3cae93d51","n = int(input())        
gr = [[] * n for i in range(n)]
gr2 = [[0] * n for i in range(n)]
gr3 = [[0] * n for i in range(n)]
for i in range(n):
    gr[i] = [int(t) for t in input().split()]

for i in range(n):
    for j in range(n):
        for z  in range(n):
            if gr2[i][j]==0:
                gr2[i][j]=gr[i][z]*gr[z][j]
for i in range(n):
    for j in range(n):
        for z  in range(n):
            if gr3[i][j]==0:
                gr3[i][j]=gr2[i][z]*gr[z][j]

for i in range(n):
    for j in range(n):
        if i==j:
            gr3[i][j]=0  
               
for i in range(n):
    for j in range(n):
        if gr3[i][j]==1:
            print(i+1,j+1)","0.0"
"79312fbf-4cd4-4453-989e-43f3cae93d51","n = int(input())        
gr = [[] * n for i in range(n)]
gr2 = [[0] * n for i in range(n)]
gr3 = [[0] * n for i in range(n)]
k=1
for i in range(n):
    gr[i] = [int(t) for t in input().split()]

for i in range(n):
    for j in range(n):
        if i==j:
            gr[i][j]=0

for i in range(n):
    for j in range(n):
        for z  in range(n):
            if gr2[i][j]==0:
                gr2[i][j]=gr[i][z]*gr[z][j]
for i in range(n):
    for j in range(n):
        for z  in range(n):
            if gr3[i][j]==0:
                gr3[i][j]=gr2[i][z]*gr[z][j]

for i in range(n):
    for j in range(n):
        if i==j:
            gr3[i][j]=0  
               
for i in range(n):
    for j in range(n):
        if gr3[i][j]==1:
            k=0
            print(i+1,j+1)
if k==1:
    print('NO')","0.0"
"79312fbf-4cd4-4453-989e-43f3cae93d51","n = int(input())        
gr = [[] * n for i in range(n)]
gr2 = [[0] * n for i in range(n)]
gr3 = [[0] * n for i in range(n)]
for i in range(n):
    gr[i] = [int(t) for t in input().split()]

for i in range(n):
    for j in range(n):
        if i==j:
            gr[i][j]=0

for i in range(n):
    for j in range(n):
        for z  in range(n):
            if gr2[i][j]==0:
                gr2[i][j]=gr[i][z]*gr[z][j]
for i in range(n):
    for j in range(n):
        for z  in range(n):
            if gr3[i][j]==0:
                gr3[i][j]=gr2[i][z]*gr[z][j]

for i in range(n):
    for j in range(n):
        if i==j:
            gr3[i][j]=0  
               
for i in range(n):
    for j in range(n):
        if gr3[i][j]==1:
            print(i+1,j+1)","0.0"
"6c718c88-bb90-4a37-ae7c-908916a5957e","n = int(input())        
gr = [[] * n for i in range(n)]
gr2 = [[0] * n for i in range(n)]
for i in range(n):
    gr[i] = [int(t) for t in input().split()]

for i in range(n):
    for j in range(n):
        if i==j:
            gr[i][j]=1
gr2=gr
for i in range(n):
    for j in range(n):
        for z  in range(n):
            if gr2[i][j]==0:
                gr2[i][j]=gr2[i][z]*gr[z][j]
for i in range(n):
    for j in range(n):
        if i==j:
            gr2[i][j]=0  
               
for row in gr2:
    print(' '.join(map(str, row)))","0.0"
"6c718c88-bb90-4a37-ae7c-908916a5957e","n = int(input())        
gr = [[] * n for i in range(n)]
gr2 = [[0] * n for i in range(n)]
for i in range(n):
    gr[i] = [int(t) for t in input().split()]

for i in range(n):
    for j in range(n):
        if i==j:
            gr[i][j]=1
       
for i in range(n):
    for s in range(n):
        for t in range(n):
            if gr[s][i] and gr[i][t]:
                gr[s][t]=1               
               

for i in range(n):
    for j in range(n):
        if i==j:
            gr[i][j]=0              
       
for row in gr:
    print(' '.join(map(str, row)))","0.0"
"993d5917-3656-42be-87ec-bbde4aff5607","n,m=map(int,input().split())       
gr = [[] * n for i in range(n)]

for i in range(n):
    gr[i] = [int(t) for t in input().split()]

for i in range(n):
    for j in range(n):
        if i==j:
            gr[i][j]=1
       
for i in range(n):
    for s in range(n):
        for t in range(n):
            if gr[s][i] and gr[i][t]:
                gr[s][t]=1            

for k in range(m):
    x1,x2=map(int,input().split())
    if gr[x1-1][x2-1]==1:
        print('YES')
    else:
        print('NO')","0.0"
"35bc693b-1917-49ae-ad4d-bed0d5a22583","n = int(input())        
gr = [[] * n for i in range(n)]
gr2 = [[0] * n for i in range(n)]
for i in range(n):
    gr[i] = [int(t) for t in input().split()]

for i in range(n):
    for j in range(n):
        if i==j:
            gr[i][j]=1
for i in range(n):
    for j in range(n):
        for z  in range(n):
            if gr2[i][j]==0:
                gr2[i][j]=gr[i][z]*gr[z][j]
for i in range(n):
    for j in range(n):
        if i==j:
            gr2[i][j]=0  
               
for row in gr2:
    print(' '.join(map(str, row)))","0.0"
"993d5917-3656-42be-87ec-bbde4aff5607","n,m=map(int,input().split())       
gr = [[] * n for i in range(n)]

for i in range(n):
    gr[i] = [int(t) for t in input().split()]

for i in range(n):
    for j in range(n):
        if i==j:
            gr[i][j]=1
       
for i in range(n):
    for s in range(n):
        for t in range(n):
            if gr[s][i] and gr[i][t]:
                gr[s][t]=1               
               

for k in range(m):
    x1,x2=map(int,input().split())
    if gr[x1-1][x2-1]==1:
        print('YES')
    else:
        print('NO')","0.0"
"7762ce71-62d8-4d9a-b192-d363f5ffc725","n = int(input())        
gr = [[] * n for i in range(n)]
gr2 = [[0] * n for i in range(n)]
for i in range(n):
    gr[i] = [int(t) for t in input().split()]

for i in range(n):
    for j in range(n):
        if gr[i][j]==1:
            gr2[j][i]=1
               


for row in gr2:
    print(' '.join(map(str, row)))
","0.0"
"519d49f4-2044-4bec-8164-97ef458dc2c8","n = int(input())        
gr = [[] * n for i in range(n)]
gr2 = [[0] * n for i in range(n)]
for i in range(n):
    gr[i] = [int(t) for t in input().split()]

for i in range(n):
    for j in range(n):
        if i!=j:
            if gr[i][j]==1:
                gr2[j][i]=0
            if gr[i][j]==0:
                gr2[j][i]=1
               


for row in gr2:
    print(' '.join(map(str, row)))","0.0"
"916cd758-8a73-4909-9ac8-2f0d57f29095","n,m = map(int,input().split())
gr = [[] * n for i in range(n)]
visited = [False] * n
prev = [] 
for i in range(n):
    gr[i] = [int(t) for t in input().split()]

         
def dfs(start):
    prev.append(start+1)
    visited[start] = True
    for u in range(n):
        if not visited[u] and gr[start][u]!=0:
            dfs(u)

            
dfs(m-1)
print(*prev)","0.0"
"e403def2-7943-4432-b5dc-a6073bf62a9b","n = int(input())
gr = [[] * n for i in range(n)]
visited = [False] * n
prev = [] 
for i in range(n):
    gr[i] = [int(t) for t in input().split()]

       
         
def dfs(start):
    prev.append(start+1)
    visited[start] = True
    for u in range(n):
        if not visited[u] and gr[start][u]!=0:
            dfs(u)

            
dfs(0)
print(*prev)","0.0"
"63fff392-7a26-4842-8308-8e12386127ed","n,m = map(int,input().split())        
gr = [[] * n for i in range(n)]
gr2 = [[0] * n for i in range(n)]
kp=1
for i in range(n):
    gr[i] = [int(t) for t in input().split()]

            
def UMMatriz(matr1,matr2,matr3):
    for i in range(n):
        for j in range(n):
            for z  in range(n):
                if matr3[i][j]==0:
                    matr3[i][j]=matr2[i][z]*matr1[z][j]
    return matr3;

gr2=gr
for k in range(m-1):
    gr3 = [[0] * n for i in range(n)]
    UMMatriz(gr,gr2,gr3);
    gr2=gr3;
    
for i in range(n):
    for j in range(n):
        if i==j:
            gr3[i][j]=0
               
for i in range(n):
    for j in range(n):
        if gr3[i][j]==1:
            kp=0
            print(i+1,j+1)
if kp==1:
    print('NO')","0.0"
"79312fbf-4cd4-4453-989e-43f3cae93d51","n = int(input())        
gr = [[] * n for i in range(n)]
gr2 = [[0] * n for i in range(n)]
gr3 = [[0] * n for i in range(n)]
for i in range(n):
    gr[i] = [int(t) for t in input().split()]


for i in range(n):
    for j in range(n):
        for z  in range(n):
            if gr2[i][j]==0:
                gr2[i][j]=gr[i][z]*gr[z][j]
for i in range(n):
    for j in range(n):
        for z  in range(n):
            if gr3[i][j]==0:
                gr3[i][j]=gr2[i][z]*gr[z][j]

for i in range(n):
    for j in range(n):
        if i==j:
            gr3[i][j]=0  
               
for i in range(n):
    for j in range(n):
        if gr3[i][j]==1:
            print(i+1,j+1)","0.0"
"35bc693b-1917-49ae-ad4d-bed0d5a22583","n = int(input())        
gr = [[] * n for i in range(n)]
gr2 = [[0] * n for i in range(n)]
for i in range(n):
    gr[i] = [int(t) for t in input().split()]

for i in range(n):
    for j in range(n):
        if i==j:
            gr[i][j]=1
for i in range(n):
    for j in range(n):
        for z  in range(n):
            if gr2[i][j]==0:
                gr2[i][j]=gr[i][z]*gr[z][j]
for i in range(n):
    for j in range(n):
        if i==j:
            gr2[i][j]=0  
               
for row in gr2:
    print(' '.join(map(str, row)))","0.0"
"1b7a231c-acf2-4c20-87f1-8615e27d21df","model=1  
n = int(input())        
gr = [[] * n for i in range(n)]
for i in range(n):
    gr[i] = [int(t) for t in input().split()]
   

for i in range(n):
    for j in range(i,n):
        if gr[i][j]!=gr[j][i]:
            model=0
            break
                    
if model==0:
    print('oriented')
else:
    print('not oriented')

","0.0"
"95831070-88fb-406f-8997-c0fc4027d623"," 
n = int(input())        
gr = [[] * n for i in range(n)]
for i in range(n):
    gr[i] = [int(t) for t in input().split()]
   

for i in range(n):
    for j in range(n):
        if gr[i][j]==1:
            gr[i][j]=gr[j][i]
            #break
                    
for row in gr:
    print(' '.join(map(str, row)))","0.0"
"63fff392-7a26-4842-8308-8e12386127ed","n,m = map(int,input().split())        
gr = [[] * n for i in range(n)]
gr2 = [[0] * n for i in range(n)]
kp=1
for i in range(n):
    gr[i] = [int(t) for t in input().split()]

            
def UMMatriz(matr1,matr2,matr3):
    for i in range(n):
        for j in range(n):
            for z  in range(n):
                if matr3[i][j]==0:
                    matr3[i][j]=matr2[i][z]*matr1[z][j]
    return matr3;

gr2=gr
for k in range(m-1):
    gr3 = [[0] * n for i in range(n)]
    UMMatriz(gr,gr2,gr3);
    gr2=gr3;
    
for i in range(n):
    for j in range(n):
        if i==j:
            gr3[i][j]=0

#for row in gr3:
   # print(' '.join(map(str, row)))
               
for i in range(n):
    for j in range(n):
        if gr3[i][j]==1:
            kp=0
            print(i+1,j+1)
if kp==1:
    print('NO')","0.0"
"79312fbf-4cd4-4453-989e-43f3cae93d51","n = int(input())        
gr = [[] * n for i in range(n)]
gr2 = [[0] * n for i in range(n)]
gr3 = [[0] * n for i in range(n)]
for i in range(n):
    gr[i] = [int(t) for t in input().split()]

for i in range(n):
    for j in range(n):
        for z  in range(n):
            if gr2[i][j]==0:
                gr2[i][j]=gr[i][z]*gr[z][j]
for i in range(n):
    for j in range(n):
        for z  in range(n):
            if gr3[i][j]==0:
                gr3[i][j]=gr2[i][z]*gr[z][j]

for i in range(n):
    for j in range(n):
        if i==j:
            gr3[i][j]=0  
               
for i in range(n):
    for j in range(n):
        if gr3[i][j]==1:
            print(i+1,j+1)","0.0"
"6c718c88-bb90-4a37-ae7c-908916a5957e","n = int(input())        
gr = [[] * n for i in range(n)]
gr2 = [[0] * n for i in range(n)]
for i in range(n):
    gr[i] = [int(t) for t in input().split()]

for i in range(n):
    for j in range(n):
        if i==j:
            gr[i][j]=1
gr2=gr
for k in range(n):
    
    for i in range(n):
        for j in range(n):
            for z  in range(n):
                if gr2[i][j]==0:
                    gr2[i][j]=gr2[i][z]*gr[z][j]
for i in range(n):
    for j in range(n):
        if i==j:
            gr2[i][j]=0  
               
for row in gr2:
    print(' '.join(map(str, row)))","0.0"
"399c561c-44d6-415d-8c3b-3e83018f5f2a","n = int(input())        
gr = [[] * n for i in range(n)]
gr2 = [[0] * n for i in range(n)]
for i in range(n):
    gr[i] = [int(t) for t in input().split()]


for i in range(n):
    for j in range(n):
        for z  in range(n):
            if gr2[i][j]==0:
                gr2[i][j]=gr[i][z]*gr[z][j]
for i in range(n):
    for j in range(n):
        if i==j:
            gr2[i][j]=0  
               
for row in gr2:
    print(' '.join(map(str, row)))","0.0"
"35bc693b-1917-49ae-ad4d-bed0d5a22583","n = int(input())        
gr = [[] * n for i in range(n)]
gr2 = [[0] * n for i in range(n)]
for i in range(n):
    gr[i] = [int(t) for t in input().split()]

for i in range(n):
    for j in range(n):
        if i==j:
            gr[i][j]=1
for i in range(n):
    for j in range(n):
        for z  in range(n):
            if gr2[i][j]==0:
                gr2[i][j]=gr[i][z]*gr[z][j]
for i in range(n):
    for j in range(n):
        if i==j:
            gr2[i][j]=0  
               
for row in gr2:
    print(' '.join(map(str, row)))","0.0"
"1b7a231c-acf2-4c20-87f1-8615e27d21df","model=1  
n = int(input())        
gr = [[] * n for i in range(n)]
for i in range(n):
    gr[i] = [int(t) for t in input().split()]
   

for i in range(n):
    for j in range(i,n):
        if gr[i][j]!=gr[j][i]:
            model=0
            #break
                    
if model==0:
    print('oriented')
else:
    print('not oriented')

","0.0"
"1b7a231c-acf2-4c20-87f1-8615e27d21df","model=1  
n = int(input())        
gr = [[] * n for i in range(n)]
for i in range(n):
    gr[i] = [int(t) for t in input().split()]
   

for i in range(n):
    for j in range(i,n):
        if gr[i][j]!=gr[j][i]:
            model=0
            #break
                    
if model==0:
    print('oriented')
else:
    print('not oriented')","0.0"
"d45974a2-6e4d-4a5b-a7d1-cf456bf9e2e1","model=1  
n = int(input())        
gr = [[] * n for i in range(n)]
for i in range(n):
    gr[i] = [int(t) for t in input().split()]
   

for i in range(n):
    s1=0
    s2=0
    for j in range(n):
        if gr[i][j]==1:
            s1+=1
        if gr[j][i]==1:
            s2+=1
   
    print(i+1,s2,s1)","0.0"
"e538d2d1-111d-4904-9de6-f691cdc9fb50","model=1  
n = int(input())        
gr = [[] * n for i in range(n)]
for i in range(n):
    gr[i] = [int(t) for t in input().split()]
   

for i in range(n):
    s=0
    for j in range(n):
        if gr[i][j]==1:
            s+=1
    if s%2!=0:
        model=0

if model==1:
    print('YES')
else:
    print('NO')
    ","0.0"
"02fbb42a-472d-4e95-a306-13c6db519654","n = int(input())        
gr = [[] * n for i in range(n)]
for i in range(n):
    gr[i] = [int(t) for t in input().split()]
   

for i in range(n):
    for j in range(i,n):
        if gr[i][j]==1:
            print(str(i+1)+' '+str(j+1))","0.0"
"d752e481-f9e0-4d06-8ad4-ca4b16a1195f","n = int(input())        
gr = [[] * n for i in range(n)]
for i in range(n):
    gr[i] = [int(t) for t in input().split()]
   

for i in range(n):
    s=0
    for j in range(n):
        if gr[i][j]==1:
            s+=1
    print(str(i+1)+' '+str(s))","0.0"
"cdd79a46-8605-41d1-a344-70e7c6a9b8c2","n,m = map(int,input().split())
gr = [[0] * n for i in range(n)]
for i in range(m):
    k1,k2=map(int,input().split())    
    gr[k1-1][k2-1] = 1
    
   
for row in gr:
    print(' '.join(map(str, row)))","0.0"
"1b7a231c-acf2-4c20-87f1-8615e27d21df","model=1  
n = int(input())        
gr = [[] * n for i in range(n)]
for i in range(n):
    gr[i] = [int(t) for t in input().split()]
   

for i in range(n):
    for j in range(i,n):
        if gr[i][j]!=gr[j][i]:
            model=0
            #break
                    
if model==0:
    print('oriented')
else:
    print('not oriented')
","0.0"
"d10ce529-697f-4d23-8c67-948d245c3668","n,m = map(int,input().split())

gr = [[0] * n for i in range(n)]
for i in range(m):
    k1,k2=map(int,input().split())
   
    gr[k1-1][k2-1] = 1
    gr[k2-1][k1-1] = 1   

for row in gr:
    print(' '.join(map(str, row)))","0.0"
"8aba26dc-aa58-4010-8c1a-81e0ce626bae","n = int(input())        
gr = [[] * n for i in range(n)]
for i in range(n):
    gr[i] = [int(t) for t in input().split()]
   

for i in range(n):
    for j in range(n):
        if gr[i][j]==1:
            print(str(i+1)+' '+str(j+1))","0.0"
"02fbb42a-472d-4e95-a306-13c6db519654","n = int(input())        
gr = [[] * n for i in range(n)]
for i in range(n):
    gr[i] = [int(t) for t in input().split()]
   

for i in range(n):
    for j in range(i,n):
        if gr[i][j]==1:
            print(str(i+1)+' '+str(j+1))","0.0"
"d10ce529-697f-4d23-8c67-948d245c3668","n,m = map(int,input().split())

gr = [[0] * n for i in range(n)]
for i in range(m):
    k1,k2=map(int,input().split())   
    gr[k1-1][k2-1] = 1
    gr[k2-1][k1-1] = 1   

for row in gr:
    print(' '.join(map(str, row)))","0.0"
"ab48f655-0a9b-4b20-8bbe-fd806719bb53","n,k = map(int,input().split())
ves=[]
        
for i in range(n):
    ves.append(int(input()))
ves.sort()

def Generat(ind):
    if ind==k:
        pr=[]
        for j in vesind:
            pr.append(ves[j])
        print(*pr)
    else:
        for i in range(n):
            if not (i in vesind):
                vesind.append(i)
                Generat(ind+1)
                vesind.remove(i)   

vesind=[]
Generat(0)","0.0"
"a11ad4e0-abf7-4110-9d03-04d451d484df","n,k,g = map(int,input().split())
ves=[]
        
for i in range(n):
    ves.append(int(input()))
ves.sort()
       
maxves=0
rezind=0
rez=0
minPossible=0

while k>0:
    minPossible = sum(ves[:k-1])+maxves
    for i in reversed(ves):
        if minPossible +i<=g:
            maxves+=i
            ves.pop()
            break
        
        ves.pop()
    k-=1
print(maxves)","0.0"
"70c96088-3bf6-4189-985e-a2d564337989","n,k = map(int,input().split())
ves=[]
        
for i in range(n):
    ves.append(int(input()))
ves.sort()

def Generat(ind):
    if ind==k:
       for j in vesind:
           print(ves[j], end=' ')
       print()
    else:
        for i in range(n):
            #if not (i in vesind):
                vesind.append(i)
                Generat(ind+1)
                vesind.remove(i)   


vesind=[]
Generat(0)



","0.0"
"a11ad4e0-abf7-4110-9d03-04d451d484df","n,k,g = map(int,input().split())
ves=[]
        
for i in range(n):
    ves.append(int(input()))
ves.sort()
       
maxves=0
        
rezind=0
rez=0
minPossible=0

while k>0:
    
    minPossible = sum(ves[:k-1])+maxves
    #print(ves)
    for i in reversed(ves):
        if minPossible +i<=g:
            maxves+=i
            ves.pop()
            break
        
        ves.pop()
    k-=1
print(maxves)","0.0"
"a11ad4e0-abf7-4110-9d03-04d451d484df","n,k,g = map(int,input().split())
ves=[]
        
for i in range(n):
    ves.append(int(input()))
ves.sort(reverse = True)
       
maxves=0

m1=0
rezind=0
rez=0
minPossible=0

while k>0:
    if k >1:
        minPossible = rez+sum(ves[-(k-1):])
    else:
        minPossible = rez
    
    for i in range(rezind,len(ves)):
        if minPossible + ves[i]<=g:
            rez+=ves[i]
            rezind=i+1
            break
    k-=1
print(rez)","0.0"
"a11ad4e0-abf7-4110-9d03-04d451d484df","n,k,g = map(int,input().split())
ves=[]
        
for i in range(n):
    ves.append(int(input()))
ves.sort()
       
maxves=0
        
rezind=0
rez=0
minPossible=0

while k>0:
    
    minPossible = sum(ves[:k-1])+maxves
    for i in reversed(ves):
        if minPossible +i<=g:
            maxves+=i
            ves.pop()
            break
        
        ves.pop()
    k-=1
print(maxves)","0.0"
"a11ad4e0-abf7-4110-9d03-04d451d484df","n,k,g = map(int,input().split())
ves=[]
        
for i in range(n):
    ves.append(int(input()))
ves.sort()
       
maxves=0
rezind=0
rez=0
minPossible=0

while k>0:
    
    minPossible = sum(ves[:k-1])+maxves
    for i in reversed(ves):
        if minPossible +i<=g:
            maxves+=i
            ves.pop()
            break
        
        ves.pop()
    k-=1
print(maxves)","0.0"
"a11ad4e0-abf7-4110-9d03-04d451d484df","n,k,g = map(int,input().split())
ves=[]
        
for i in range(n):
    ves.append(int(input()))
ves.sort(reverse = True)
        
maxves=0
        
rezind=0
rez=0
minPossible=0

while k>0:
    if k >1:
        minPossible = rez+sum(ves[-(k-1):])
    else:
        minPossible = rez
    
    for i in range(rezind,len(ves)):
        if minPossible + ves[i]<=g:
            rez+=ves[i]
            rezind=i+1
            break
    k-=1
print(rez)","0.0"
"a11ad4e0-abf7-4110-9d03-04d451d484df","n,k,g = map(int,input().split())
ves=[]
        
for i in range(n):
    ves.append(int(input()))
ves.sort()
       
maxves=0
        
rezind=0
rez=0
minPossible=0

while k>0:
    
    minPossible = sum(ves[:k-1])+maxves
    for i in reversed(ves):
        if minPossible +i<=g:
            maxves+=i
            ves.pop()
            break
        
        ves.pop()
    k-=1
print(maxves)","0.0"
"6c2adae3-f5f9-4088-9bc6-567fe66476fb","nC,n=map(int, input().split())
a=[]
for i in range (0,nC):
        a.append(int(input()))

a.sort(reverse = True) # ÑÐ¾ÑÑÐ¸ÑÐ¾Ð²ÐºÐ° ÑÐµÐ½ Ð¿Ð¾ ÑÐ±ÑÐ²Ð°Ð½Ð¸Ñ 


summa=0
for i in range(n): 
        summa += a[i]*0.2
print(a[n],int(summa)) # ÑÐµÐ»Ð°Ñ ÑÐ°ÑÑÑ Ð¾Ñ ÑÑÐ¼Ð¼Ñ


","0.0"
"a11ad4e0-abf7-4110-9d03-04d451d484df","n,k,g = map(int,input().split())
ves=[]
        
for i in range(n):
    ves.append(int(input()))
ves.sort()
       
maxves=0
        
rezind=0
rez=0
minPossible=0

while k>0:
    
    minPossible = sum(ves[:k-1])+maxves
    for i in reversed(ves):
        if minPossible +i<=g:
            maxves+=i
            break
    k-=1
print(maxves)","0.0"
"6c2adae3-f5f9-4088-9bc6-567fe66476fb","nC,n=map(int, input().split())
a=[]
for i in range (0,nC):
        a.append(int(input()))

a.sort(reverse = True) # ÑÐ¾ÑÑÐ¸ÑÐ¾Ð²ÐºÐ° ÑÐµÐ½ Ð¿Ð¾ ÑÐ±ÑÐ²Ð°Ð½Ð¸Ñ 


summa = 0 # ÑÑÐ¼Ð¼Ð° ÑÐºÐ¸Ð´Ð¾Ðº
for i in range(n): 
        summa += a[i]*0.2
print(a[n],int(summa)) # ÑÐµÐ»Ð°Ñ ÑÐ°ÑÑÑ Ð¾Ñ ÑÑÐ¼Ð¼Ñ
","0.0"
"d49e80f4-ce33-4ded-aa53-337f8d0f73b8","n,k=map(int, input().split())
a=[]
for i in range (0,n):
        a.append(int(input()))


a.sort() # ÑÐ¾ÑÑÐ¸ÑÐ¾Ð²ÐºÐ° Ð¿Ð¾ Ð²Ð¾Ð·ÑÐ°ÑÑÐ°Ð½Ð¸Ñ
a = a[k:-k] # ÑÑÐµÐ· (ÑÐ±Ð¸ÑÐ°ÐµÐ¼ Ð-Ð·Ð½Ð°ÑÐµÐ½Ð¸Ñ)
summa = sum(a) # ÑÐµÐºÑÑÐ°Ñ Ð·Ð½Ð°ÑÐµÐ½Ð¸Ð¹
sred = int(summa/len(a))
print(a[-1],sred)
","0.0"
"3ae56164-1134-42f9-8fd7-204a82b81e52","a=int(input())
def firstPrimes( n ):
  primes = [2]
  k = 3
  while len(primes) < n:
    divs = [int(k % d == 0)  for d in primes]
    if sum(divs) == 0:
      primes.append( k )
    k += 1
  return primes

def factorize(x):
  primeDels = []
  k = 2
  while x > 1:
    while x % k == 0:
      primeDels.append(k)
      x /= k
    k += 1
  return primeDels

primeFactors = factorize(a)
primeFactors.reverse()
primes = firstPrimes(len(primeFactors))
N = 1
for i in range(len(primeFactors)):
  N *= primes[i]**(primeFactors[i]-1)

k3 = primeFactors[0]
lastPrime = primes[-1]
while 2**(2*k3) < lastPrime**2:
  N = N // (lastPrime**2) * 2**(2*k3)
  k3 *= 3
  del primes[-1]
  lastPrime = primes[-1]

if N < 2**31:
  print( N, primes[-1] )
else:
  print('NO')","0.0"
"0df7e1f2-c1c4-41f3-9904-a9e4495a5bfc","start = int(input())
end = int(input())

def allDivs( x ):
  divs = [1, x]
  d = 2
  while d*d <= x:
    if x % d == 0:
      divs.append( d )
      if x // d > d:
        divs.append( x//d )
    d += 1
  return sorted(divs)

for x in range( start, end+1 ):
  divs = allDivs(x)[1:-1]
  digits2 = [ d for d in divs if 10 <= d <= 99 ]
  if len(digits2) == 30:
    print( x, digits2[0], digits2[-1] )








","0.0"
"132b4d29-b1fe-4591-be7e-9e4e150e35b6","a=int (input())
cont=0
if a==1:
    print('NO')
else:
    cont=2
for d in range(2, round(a**0.5)+1):
  if (a % d == 0) :
      cont+=1
      print('NO')
      break
      
if cont==2:
    print('YES')
","0.0"
"c479ed62-3a40-4f93-89c8-b674826ab144","a=int (input())
count = 0
for d in range(1, a+1):
  if a % d == 0:
    count += 1

print( count )

","0.0"
"06c76227-d39e-4bac-8f71-f68c262dd42e","s=input()
count = 0
maxCount = 0
for char in s:
    if (char == 'E' and count%3 == 0) or \r
       (char == 'A' and count%3 == 1) or \r
       (char == 'B' and count%3 == 2):
        count += 1
        if count > maxCount:
            maxCount = count
    elif (char=='E'):
        count = 0
    else:  
        count = 0
print(maxCount)




","0.0"
"40d78243-79a0-4ec7-8ff5-47f803a55e0b","s = str(input())
count = 0
for i in range(len(s)-2):
    if s[i] in 'BCD' and s[i+1] in 'BDE' and s[i+2] in 'BCE' and s[i]!=s[i+1] and s[i+1]!=s[i+2]:
      count += 1
print(count)","0.0"
"06c76227-d39e-4bac-8f71-f68c262dd42e","s=input()
count = 0
maxCount = 0
for char in s:
    if (char == 'E' and count%3 == 0) or \r
       (char == 'A' and count%3 == 1) or \r
       (char == 'B' and count%3 == 2):
        count += 1
        if count > maxCount:
            maxCount = count
    elif (char=='E'):
        count = 1
    else:  
        count = 0
print(maxCount)","0.0"
"2ee76cc8-f815-4807-a797-4059ae8a8d76","n=int (input())
mas=[0]
s = input().split() 
mas = [int(i) for i in s] 
mas=mas+[10000]
mas=sorted(mas)
k=1
for i in range(n):
    if mas[i+1]==mas[i]:
        k+=1
    else:
        print(mas[i],k)
        k=1

","0.0"
"420a5758-8cb1-445d-9bf7-bd8017a41cb2","n=int(input())
mas=[0]*n
s = input().split() 
mas = [int(i) for i in s] 
maxmas=-10000
for i in range(n):
   if mas[i] >maxmas :
       maxmas=mas[i]
       imaxmas=i
k=mas[imaxmas]
mas[imaxmas]=mas[n-1]
mas[n-1]=k
print(*mas)
","0.0"
"420a5758-8cb1-445d-9bf7-bd8017a41cb2","n=int(input())
mas=[0]*n
s = input().split() 
mas = [int(i) for i in s] 
maxmas=-10000
for i in range(n):
   if mas[i] >maxmas :
       maxmas=mas[i]
       imaxmas=i
k=mas[imaxmas]
mas[imaxmas]=mas[n-1]
mas[n-1]=k
print(*mas)","0.0"
"4659a273-9c89-4ff8-a1bd-6d0ae87e9915","x=int (input())
if x%10==1 and x!=11:
   print(x,'mag')
elif x%10==2 or x%10==3 or x%10==4 :
   print(x,'maga')
else :
   print(x,'magov')




","0.0"
"75214b1c-bb28-44e5-8474-ac6b45c80db9","n=int (input())
m=n
k=0
while m>0:
    k=k*10+m%10
    m=m//10
print(n+k)
","0.0"
"15420900-ca97-49e3-846a-13bd92d9bace","n= int (input())
while n>0 :
    print(n%10)
    n=n//10
","0.0"
"f9f08d20-e4e6-49ac-8682-f4b7100928a4","a=int (input())
b=int (input())
d=int (input())
if (d<=a-4)and(d<=b-4) :
  print('YES')
else :
  print('NO')","0.0"
"4659a273-9c89-4ff8-a1bd-6d0ae87e9915","x=int (input())
if x%10==1 and x!=11:
   print(x,'mag')
elif x%10==2 or x%10==3 or x%10==4 :
   print(x,'maga')
else :
   print(x,'magov')

","0.0"
"f2d92959-39d9-49fe-a9b1-5868567eeedf","a=int(input())
d=a%3
k=a//3+(d+1)//2
print(k,d)","0.0"
"3bda5701-c742-4f44-9bdb-d4b772de2705","a,b=map(int,input().split())
n,m=map(int,input().split())
if (a<=n and b<=m)or(a<=m and b<=n):
     print(""YES"")
else:
     print(""NO"")","0.0"
"bbb640ed-435c-4dc9-8625-87b81a5a9b22","x,y =map(int,input().split())
if x > 0 and y > 0:               
        print(1)
elif x > 0 and y < 0:                   
        print(4)
elif x < 0 and y > 0:
        print(2)
else:                   
        print(3)","0.0"
"b85b4d55-02c5-4f5b-9c58-538068bf5699","a,b,c=map(int,input().split())
s=a // 2 + b // 2 + c // 2 + a % 2 + b % 2 + c % 2
print(s)
","0.0"
"1c8423df-d978-4e69-b8d5-886b1c2c745b","m=int(input())
n=int(input())
mm=m*60+n+90
print(mm//60, mm%60)","0.0"
"8197a3b2-3c8b-4da4-85c2-8afd3c9c9e3e","N = int(input())
data = {}
for i in range(N):
    row, seat = map( int, input().split() )
    data[row] = data.get(row, []) + [seat]

for row, seats in sorted( data.items(), reverse = True ):
  seats.sort()
  done = False
  #print( row, seats )
  for i in range(len(seats)-1):
    if seats[i+1]-seats[i] == 3:
      print( row, seats[i]+1 )
      done = True
      break
  if done: break
","0.0"
"9cf4d5af-4fda-4443-9613-82dff00ab963","a,b=map(int,input().split())
c,d=map(int,input().split())
e,f=map(int,input().split())
j,h=map(int,input().split())
if a+c+e+j>b+d+f+h:
   print(1)
elif a+c+e+j<b+d+f+h:
   print(2)
else:
   print(""DRAW"")
","0.0"
"d658f071-1e55-45e3-b3ad-e9384d03b9b9","a,b,c=map(int,input().split())
if a<b:
   M=a
else:
   M=b
if M<c:
   D=M
else:
   D=c
if a>b:
   z=a
else:
   z=b
if z>c:
   Z=c
else:
   Z=z
print(Z)


","0.0"
"0ef5465b-370a-4084-bd37-fb4d3b6b398a","a=int(input())
b=a%100
d=b//10
print(d)
","0.0"
"177f714d-8f2d-4630-8a45-86b5a1799099","ï»¿a,b,h=map(int,input().split())
m,k=map(int,input().split())
if m>=a and k>=b:
    print('YES')
elif m>=b and k>=a:
    print('YES')
elif m>=b and k>=h:
    print('YES')
elif m>=h and k>=b:
    print('YES')
elif m>=a and k>=h:
    print('YES')
elif m>=h and k>=a:
    print('YES')
else:
    print('NO')


","0.0"
"bbb640ed-435c-4dc9-8625-87b81a5a9b22","x,y = map(int,input().split())
if x>0 and y>0:
    print(1)
elif x<0 and y>0:
    print(2)
elif x<0 and y<0:
    print(3)
else:
    print(4)

","0.0"
"bbb640ed-435c-4dc9-8625-87b81a5a9b22","x,y = map(int,input().split())
if x>0 and y>0:
    print(1)
elif x>0 and y<0:
    print(2)
elif x<0 and y<0:
    print(3)
else:
    print(4)

","0.0"
"c9e1ff81-5755-43cb-8439-49ef952f622a","ï»¿a,b=map(int,input().split())
m=a
if a>b:
    m=a
else:
    m=b
print(m)
","0.0"
"0ef5465b-370a-4084-bd37-fb4d3b6b398a","ï»¿
a=int(input())
b=a%100
c=b//10
print(c)
","0.0"
"2488a6a1-fc84-46c8-bd28-ea8791f78298","ï»¿a=int(input())
b=int(input())
n=int(input())
s=(a*100+b)*n
m=s//100
c=s%100
print(m,c)
","0.0"
"e51d6308-c0be-44b6-ba3d-c238a0d8e4a1","ï»¿k=int(input())
l=int(input())
n=int(input())
s=int(input())
a=k+(n*s)
b=l+(n*(s//2))
c=a-b

if c==0:
    print(""YES"")
    
elif c>=0:
    print(""YES"")
    
else:
    print(""NO"")
","0.0"
"4b1be5b6-131a-4853-bf20-dadf3bbd10d9","import math
h= int(input())
a=int(input())
b=int(input())
print(math.ceil((h - b)/(a - b)))","0.0"
"9428daf6-0093-444b-a8fb-cef9003392e2","a=int(input())
b=int(input())
c=int(input())
m=a
if b<m:
    m=b
if c<m:
    m=c
print(m)","0.0"
"bbb640ed-435c-4dc9-8625-87b81a5a9b22","ï»¿x,y=map(int,input().split())
if x>0 and y>0:
    print(1)
elif x<0 and y>0:
    print(2)
elif x<0 and y<0:
    print(3)
elif x>0 and y>0:
    print(4)
","0.0"
"bbb640ed-435c-4dc9-8625-87b81a5a9b22","ï»¿x,y=map(int,input().split())
if x>0 and y>0:
    print(1)
elif x<0 and y>0:
    print(2)
elif x<0 and y<0:
    print(3)
elif x>0 and y>0:
    print(4)
","0.0"
"5b2cb964-e915-4506-b4fe-22b78644939c","ï»¿a=int(input())
b=int(input())
c=int(input())
if a==b==c:
    print(3)
elif a!=b and a==c:
    print(2)
elif b==a and b!=c:
    print(2)
elif c==b and c!=a:
    print(2)
else:
    print(0)
","0.0"
"0c04c2f7-1548-4fa7-afc6-5ef064ea3a9f","ï»¿a=int(input())
b=a//100
c=a%10
print(b,c,sep="""")

","0.0"
"39cd4d3c-2ead-4da6-a322-b3be4be280c7","m,s=map(int,input().split())
p,q=map(int,input().split())
ms=s+m*60
gg=(2880-ms)//2
pm=gg//24*3+p
qm=gg//24*2+q
print(pm,qm)
","0.0"
"e51d6308-c0be-44b6-ba3d-c238a0d8e4a1","K=int(input())
L=int(input())
N=int(input())
S=int(input())
qm=N*S+K
qo=N*(S//2)+L
if qm>qo:
 print(""YES"")
else:
 print(""NO"")
","0.0"
"177f714d-8f2d-4630-8a45-86b5a1799099","a,b,h=map(int,input().split())
m,n=map(int,input().split())
if a>=m and b>=m and h>=m and a<=n and b<=n and h<=n:
 print('NO')
else:
    print('YES')
 ","0.0"
"bbb640ed-435c-4dc9-8625-87b81a5a9b22","x,y=map(int,input().split())
if x>0 and y>0:
 print(1)
elif x>0 and y<0:
 print(2)
elif x<0 and y<0:
 print(3)
elif x<0 and y>0:
 print(4)
else:
     print(0)
 
","0.0"
"3afc315a-4d55-4193-8135-d8dd5c533c49","S,n=map(int, input().split())
data=[]
for i in range (0,n):
        data.append(int(input()))

del data[0]
data = sorted( list(map(int, data)) )

total = 0
for i, val in enumerate(data):
  if total + val > S: break
  total += val
ii=i

delta = S - total
candidates = [x for x in data 
                if x-data[i-1] <= delta]
print( ii,max(candidates))
","0.0"
"0df7e1f2-c1c4-41f3-9904-a9e4495a5bfc","start = int(input())
end = int(input())

def allDivs( x ):
  divs = [1, x]
  d = 2
  while d*d <= x:
    if x % d == 0:
      divs.append( d )
      if x // d > d:
        divs.append( x//d )
    d += 1
  return sorted(divs)

for x in range( start, end+1 ):
  divs = allDivs(x)[1:-1]
  digits2 = [ d for d in divs if 10 <= d <= 99 ]
  if len(digits2) == 30:
    print( x, digits2[0], digits2[-1] )







","0.0"
"0df7e1f2-c1c4-41f3-9904-a9e4495a5bfc","start = int(input())
end = int(input())

def allDivs( x ):
  divs = [1, x]
  d = 2
  while d*d <= x:
    if x % d == 0:
      divs.append( d )
      if x // d > d:
        divs.append( x//d )
    d += 1
  return sorted(divs)

for x in range( start, end+1 ):
  divs = allDivs(x)[1:-1]
  digits2 = [ d for d in divs if 10 <= d <= 99 ]
  if len(digits2) == 30:
    print( x, digits2[0], digits2[-1] )






","0.0"
"0df7e1f2-c1c4-41f3-9904-a9e4495a5bfc","start = int(input())
end = int(input())

def allDivs( x ):
  divs = [1, x]
  d = 2
  while d*d <= x:
    if x % d == 0:
      divs.append( d )
      if x // d > d:
        divs.append( x//d )
    d += 1
  return sorted(divs)

for x in range( start, end+1 ):
  divs = allDivs(x)[1:-1]
  digits2 = [ d for d in divs if 10 <= d <= 99 ]
  if len(digits2) == 30:
    print( x, digits2[0], digits2[-1] )



","0.0"
"132b4d29-b1fe-4591-be7e-9e4e150e35b6","a=int (input())
cont=0
if a==1:
    print('NO')
else:
    cont=2
for d in range(2, round(a**0.5)+1):
  if (a % d == 0) :
      cont+=1
      print('NO')
      break
      
if cont==2:
    print('YES')
","0.0"
"931dc9d6-3183-4d35-bee6-95b210e0268a","a=int (input())


for d in range(1, a+1):
  if a % d == 0:
    print(d,end=' ')","0.0"
"f2aee372-d88a-497b-a1d2-64b122fc8b0a","a=int (input())
for d in range(2, a+1):
  if a % d == 0:
    print(d)
    break

","0.0"
"f2aee372-d88a-497b-a1d2-64b122fc8b0a","a=int (input())


for d in range(2, a+1):
  if a % d == 0:
    print(d)
    break

","0.0"
"f2aee372-d88a-497b-a1d2-64b122fc8b0a","a=int (input())


for d in range(2, a+1):
  if a % d == 0:
    print(d)
    break
","0.0"
"c479ed62-3a40-4f93-89c8-b674826ab144","a=int (input())
count = 0
for d in range(1, a+1):
  if a % d == 0:
    count += 1
print( count)



","0.0"
"c479ed62-3a40-4f93-89c8-b674826ab144","a=int (input())
count = 0
for d in range(1, a+1):
  if a % d == 0:
    count += 1
print( count)
","0.0"
"704fe53c-bcb7-48de-a964-e687a0ae281c","s=input()
count = 0
maxCount = 0
for char in s:
  if char in 'ABC':
    count += 1
    if count>maxCount:
	    maxCount = count
    else:
      count=0
print(maxCount)


","0.0"
"a11ad4e0-abf7-4110-9d03-04d451d484df","n,k,g = map(int,input().split())
ves=[]
        
for i in range(n):
    ves.append(int(input()))
ves.sort()
        
maxves=0
m1=0
m2=0
m3=0

for x1 in range(0,n-2):
    for x2 in range(x1+1,n-1):
        for x3 in range(x2+1,n):
            pat=ves[x1]+ves[x2]+ves[x3]
            if (maxves<pat)and(pat<=g):
                maxves=pat
print(maxves)","0.0"
"74a21b08-f61e-495f-a883-f02328dc4dae","ï»¿a=int(input())
b=a//100
c=(a//10)%10
f=a%10
s=b+c+f
print(s)
","0.0"
"66cdaa4c-6fe2-43ac-9cc8-08f59916608f","a=int(input())
b=int(input())
x=(a+b)
y=(a*6+b*8)
print(x,y)
","0.0"
"0ef5465b-370a-4084-bd37-fb4d3b6b398a","a=int(input())
N=(a//10)%10
print(N)","0.0"
"2488a6a1-fc84-46c8-bd28-ea8791f78298","a=int(input())
b=int(input())
n=int(input())
s=a*100+b
sp=s*n
print(sp//100,sp%100)

","0.0"
"c9e1ff81-5755-43cb-8439-49ef952f622a","a,b=map(int,input().split())
if a>b:
    m=a
else:
    m=b
print(m)

","0.0"
"cb96b982-37a0-487b-8b5c-67d27e6f7094","ï»¿k=int(input())
h=k//60
m=(k-h*3600)//60
j=k%60
print(h,j)
","0.0"
"9428daf6-0093-444b-a8fb-cef9003392e2","ï»¿a=int(input())
b=int(input())
c=int(input())
if a>c>b:
    m=b
else:
    m=min(c,a)
print(m)    
    
","0.0"
"b85b4d55-02c5-4f5b-9c58-538068bf5699","ï»¿a,b,c=map(int,input().split())
x=a//2+a%2
z=b//2+b%2
v=c//2+c%2
d=x+z+v
print(d)
","0.0"
"1c8423df-d978-4e69-b8d5-886b1c2c745b","a=int(input())
b=int(input())
c=(b+30)%60

d=a+1+(b+30)//60



print(d, c)

","0.0"
"0c04c2f7-1548-4fa7-afc6-5ef064ea3a9f","a=int(input())
c=a%10
d=a//100
b=a//10%10
print(d,c,sep='')

      
","0.0"
"0c04c2f7-1548-4fa7-afc6-5ef064ea3a9f","ï»¿a=int(input())
c=a%10
d=a//100
b=a//10%10
print(d,c,sep='')

      
","0.0"
"39cd4d3c-2ead-4da6-a322-b3be4be280c7","ï»¿m,s=map(int,input().split())
p,q=map(int,input().split())
x=48*60-m*60+s
y=p+x//48*3
z=q+x//48*2
print(y,z)

    
","0.0"
"e51d6308-c0be-44b6-ba3d-c238a0d8e4a1","k=int(input())
l=int(input())
n=int(input())
s=int(input())
if k+s*n>=l+s//2*n:
    print('YES')
else:
    print('NO')","0.0"
"3bda5701-c742-4f44-9bdb-d4b772de2705","a,b=map(int,input().split())
m,k=map(int,input().split())
if a<=m and b<=k:
   print('YES')
elif a<=k and b<=m:
   print('YES')
else:
   print('NO')","0.0"
"bbb640ed-435c-4dc9-8625-87b81a5a9b22","x,y=map(int,input().split())
if x>0 and y>0:
    print(1)
elif x<0 and y>0:
    print(2)
elif x<0 and y<0:
    print(3)
else:
    print(4)
","0.0"
"3bda5701-c742-4f44-9bdb-d4b772de2705","a,b=map(int,input().split())
m,k=map(int,input().split())
if (a<=m and b<=k) or (b<=m and a<=k):
    print('YES')
else:
    print('NO')","0.0"
"d658f071-1e55-45e3-b3ad-e9384d03b9b9","
a,b,c=map(int,input().split())
if b<a<c:
    print(a)
elif a<b<c:
    print(b)
else:
    print(c)","0.0"
"9428daf6-0093-444b-a8fb-cef9003392e2","a=int(input())
b=int(input())
c=int(input())
m=a
if b<m:
    m=b
if m>c:
    m=c
print(m)","0.0"
"1ff5a639-82a9-46d5-99e8-90b0529a5016","n=int(input())
s=n//3+1
print(s)","0.0"
"5d02ab7a-4394-4098-9f7a-ed3912083888","h=int(input())
m=int(input())
s=h*60+m+75
k=s//60
f=s%60
print(k%24,f)
","0.0"
"f2d92959-39d9-49fe-a9b1-5868567eeedf","ï»¿from math import*
a=int(input())
f=floor(a*2.54)
print(f)


","0.0"
"6c2adae3-f5f9-4088-9bc6-567fe66476fb","nC,n=map(int, input().split())
a=[]
for i in range (0,nC):
        a.append(int(input()))

a.sort(reverse = True) # ÑÐ¾ÑÑÐ¸ÑÐ¾Ð²ÐºÐ° ÑÐµÐ½ Ð¿Ð¾ ÑÐ±ÑÐ²Ð°Ð½Ð¸Ñ 


summa=0
for i in range(n): 
        summa += a[i]*0.2
print(a[n],int(summa)) # ÑÐµÐ»Ð°Ñ ÑÐ°ÑÑÑ Ð¾Ñ ÑÑÐ¼Ð¼Ñ
","0.0"
"3afc315a-4d55-4193-8135-d8dd5c533c49","s, n = map(int, input().split())
a = [] 
for i in range(n):
    obiem = input()  
    a.append(int(obiem)) 

a.sort()
summa=0
k = 0 
Max = 0 
for i in range(n):
    if s >= (summa + a[i]):
        summa += a[i]
        k += 1
        Max = a[i]
    else:
       summa = summa - Max + a[i]
       if s >= summa:
           Max = a[i]
      
print(k,Max)

","0.0"
"3afc315a-4d55-4193-8135-d8dd5c533c49","s, n = map(int, input().split())
a = [] 
for i in range(n):
    obiem = input()  
    a.append(int(obiem)) 

a.sort()
summa=0
k = 0 
Max = 0 
for i in range(n):
    if s >= (summa + a[i]):
        summa += a[i]
        k += 1
        Max = a[i]
    else:
       summa = summa - Max + a[i]
       if s >= summa:
           Max = a[i]
        
print(k,Max)
","0.0"
"0df7e1f2-c1c4-41f3-9904-a9e4495a5bfc","start = int(input())
end = int(input())

def allDivs( x ):
  divs = [1, x]
  d = 2
  while d*d <= x:
    if x % d == 0:
      divs.append( d )
      if x // d > d:
        divs.append( x//d )
    d += 1
  return sorted(divs)

for x in range( start, end+1 ):
  divs = allDivs(x)[1:-1]
  digits2 = [ d for d in divs if 10 <= d <= 99 ]
  if len(digits2) == 30:
    print( x, digits2[0], digits2[-1] )








","0.0"
"0df7e1f2-c1c4-41f3-9904-a9e4495a5bfc","start = int(input())
end = int(input())

def allDivs( x ):
  divs = [1, x]
  d = 2
  while d*d <= x:
    if x % d == 0:
      divs.append( d )
      if x // d > d:
        divs.append( x//d )
    d += 1
  return sorted(divs)

for x in range( start, end+1 ):
  divs = allDivs(x)[1:-1]
  digits2 = [ d for d in divs if 10 <= d <= 99 ]
  if len(digits2) == 30:
    print( x, digits2[0], digits2[-1] )





","0.0"
"ec3cfb4d-5f50-4fa0-8e53-686d10f6c0b2","from math import sqrt
start,end =map(int, input().split())

def allDivs( x ):
  divs = [1, x]
  d = 2
  while d*d <= x:
    if x % d == 0:
      divs.append( d )
      if x // d > d:
        divs.append( x//d )
    d += 1
  return sorted(divs)

qStart = int(sqrt(start))
qEnd = int(sqrt(end)) + 1

i = 0
for q in range( qStart, qEnd+1 ):
  x = q*q
  if start <= x <= end:
    divs = allDivs(x)
    i += 1
    print( i, x, len(divs), q )
","0.0"
"75410156-cdea-4efc-a0d6-91e02bf38e32","start=int( input())
end=int(input())
k=0
for n in range(start, end+1):
  a = []
  for d in range(1,n+1):
    if n % d == 0:
      a.append(d)
      if len(a) > 4: break
  if len(a) == 4:
    print(*a)
    k=1
if k==0: 
    print(0)







","0.0"
"132b4d29-b1fe-4591-be7e-9e4e150e35b6","a=int (input())
cont=0
if a==1:
    print('NO')
else:
    cont=2
for d in range(2, a):
  if (a % d == 0) :
      cont+=1
      print('NO')
      break
      
if cont==2:
    print('YES')
","0.0"
"132b4d29-b1fe-4591-be7e-9e4e150e35b6","a=int (input())
cont=0
if a==1:
    print('NO')
else:
    cont=2
for d in range(2, round(a**0.5)+1):
  if (a % d == 0) :
      cont+=1
      print('NO')
      break
      
if cont==2:
    print('YES')","0.0"
"931dc9d6-3183-4d35-bee6-95b210e0268a","a=int (input())
for d in range(1, a+1):
  if a % d == 0:
    print(d,end=' ')

","0.0"
"06c76227-d39e-4bac-8f71-f68c262dd42e","s=input()
count = 0
maxCount = 0
for char in s:
    if (char == 'E' and count%3 == 0) or \r
       (char == 'A' and count%3 == 1) or \r
       (char == 'B' and count%3 == 2):
        count += 1
        if count > maxCount:
            maxCount = count
    elif (char=='E'):
        count = 0
    else:  
        count = 0
print(maxCount)




","0.0"
"06c76227-d39e-4bac-8f71-f68c262dd42e","s=input()
count = 0
maxCount = 0
for char in s:
    if (char == 'E' and count%3 == 0) or \r
       (char == 'A' and count%3 == 1) or \r
       (char == 'B' and count%3 == 2):
        count += 1
        if count > maxCount:
            maxCount = count
    elif (char=='E'):
        count = 1
    else:  
        count = 0
print(maxCount)




","0.0"
"cb96b982-37a0-487b-8b5c-67d27e6f7094","k=int(input())
h=k//60
m=k%60
print(h,m)
","0.0"
"b76c8f23-a934-45a5-ad8c-8396fe67301c","n = int(input())
sp = input().split(' ')
ssp =[]
for i in range(n):
    z = list(map(int,sp[i]))
    ssp.append(sum(z))
su = max(ssp)
print(sp[ssp.index(su)])
","0.0"
"33cf3c19-292d-4544-a9a5-0e2a3c965272","s = 0
sp = input().split(' ')
for i in range(20):
    if int(sp[i]) < 100 and int(sp[i]) % 10 == 0 and int(sp[i]) != 0:
        s+=1
print(s)



","0.0"
"06a06b1c-da2e-4210-b889-371de309b82f","n = int(input())
sp = input().split(' ')
pol = 0
nul = 0
otr = 0
for i in range(n):
    if int(sp[i]) == 0:
        nul = nul+1
    if int(sp[i]) > 0:
        pol = pol+1
    if int(sp[i]) < 0:
        otr = otr+1
print(nul,pol,otr)

","0.0"
"a11ad4e0-abf7-4110-9d03-04d451d484df","n,k,g = map(int,input().split())
ves=[]
        
for i in range(n):
    ves.append(int(input()))
ves.sort()
       
maxves=0
        
rezind=0
rez=0
minPossible=0

while k>0:
    
    minPossible = sum(ves[:k-1])+maxves
    for i in reversed(ves):
        if minPossible +i<=g:
            maxves+=i
            #ves.pop()
            break
        
        ves.pop()
    k-=1
print(maxves)","0.0"
"06c76227-d39e-4bac-8f71-f68c262dd42e","s=input()
count = 0
maxCount = 0
for char in s:
    if (char == 'E' and count%3 == 0) or \r
       (char == 'A' and count%3 == 1) or \r
       (char == 'B' and count%3 == 2):
        count += 1
        if count > maxCount:
            maxCount = count
    elif (char=='E'):
        count = 1
    else:  
        count = 0
print(maxCount)


","0.0"
"704fe53c-bcb7-48de-a964-e687a0ae281c","s=input()
count = 0
maxCount = 0
for char in s:
  if char in 'ABC':
    count += 1
    if count>maxCount:
	    maxCount = count
    else:
      count=0
print(maxCount)","0.0"
"7c143f80-2e7e-4890-bee7-ffbdcbf5b05b","s=str(input())
sp=s.split()
k=0
for i in range (len(sp)):
 if len(sp[i])==1:
         k+=1
print(k)","0.0"
"94a4304c-1628-4b48-a1bb-62970467c416","n=int (input())
mas=[0]*n
s = input().split() 
mas = [int(i) for i in s] 
mas2=sorted(mas)
print(*mas2)","0.0"
"875ec0a5-0a8e-468b-b0f0-1b32c0337354","n=int(input())
mas=[0]*n
s = input().split() 
mas = [int(i) for i in s]

k=0   
for i in range(n):
    if mas[i]>=0 :
        k+=1
print(k)

","0.0"
"bd77bd8e-1bf2-4a3b-b674-9eddb5375116","n=int (input())
i=2
while n%i!=0 :
  i+=1
print(i)","0.0"
"8db514ad-0242-48a9-ab6e-85b0e8171d87","n=int(input())
m=int(input())
mm=m
nn=n
if mm>nn :
    s=mm
    mm=nn
    nn=s
k=1
while mm!=nn :
    if mm>nn :
        s=mm
        mm=nn
        nn=s
    nn=nn-mm
    k=k+1
   
print(k)

","0.0"
"a809c102-e8a6-45ff-9baa-9a998d1927f1","n=int (input())
m=int (input())

while m>0 :
   n=3*n
   print(n)
   m-=1","0.0"
"15420900-ca97-49e3-846a-13bd92d9bace","n= int (input())
while n>0 :
    print(n%10)
    n=n//10

","0.0"
"4659a273-9c89-4ff8-a1bd-6d0ae87e9915","x=int (input())
if x%10==1 :
   print(x,'mag')
elif x%10<5 :
   print(x,'maga')
else :
   print(x,'magov')

","0.0"
"d48be896-b484-440a-9ca5-2cc0f31533dc","ï»¿x = int(input())
y = int(input())
if (x == 8) and (y == 1) :
    print ('YES')
elif (x == 6) and (y == 1) :
    print ('YES')
elif (x == 5) and (y == 2) :
    print ('YES')
elif (x == 5) and (y == 4) :
    print ('YES')
elif (x == 6) and (y == 5) :
    print ('YES')
elif (x == 8) and (y == 5) :
    print ('YES')
else :
    print('NO')
","0.0"
"1ff5a639-82a9-46d5-99e8-90b0529a5016","h = int(input())
m = int(input())
h+=1
if (h>=24) :
    h-=24
if (m+15>= 60) :
    h+=1
    m-=60

print(h, m+15)





","0.0"
"1ff5a639-82a9-46d5-99e8-90b0529a5016","h = int(input())
m = int(input())
h+=1
if (h>=24) :
    h-=24
if (m+15>= 60) :
    h+=1
    m-=60

print(h, m+15)



","0.0"
"1ff5a639-82a9-46d5-99e8-90b0529a5016","ï»¿h = int(input())
m = int(input())
if (m+15>= 60) :
    h+=1
    m-=60
if (h>=24) :
    h-=24
print(h+1, m+15)



","0.0"
"5d02ab7a-4394-4098-9f7a-ed3912083888","ï»¿l = int(input())
print(round(l*2.54))

","0.0"
"190516a0-6ed3-4c42-9f36-dc481a3adb70","x=int(input())
y=int(input())
print(x+y)

","0.0"
"5b2cb964-e915-4506-b4fe-22b78644939c","a = int(input())
b = int(input())
c = int(input())
if b == a == c:
    k = 3
elif (a == b != c) or (a == c != b) or ( b == c != a):
    k = 2 
else:
    k = 0
print(k)","0.0"
"9428daf6-0093-444b-a8fb-cef9003392e2","x = int(input())
y = int(input())
z = int(input())
m=x
if y < m:
    m=y
if z < m:
    m=z
print(m)
","0.0"
"74a21b08-f61e-495f-a883-f02328dc4dae","a=int(input())
print(a//100+a%10+a//10%10)
","0.0"
"3ae56164-1134-42f9-8fd7-204a82b81e52","a =[1,2,4,6,16,12,64,24,36,48,1024,60,4096,192,144,
120,65536,180,262144,240,576,3072,4194304,360,
1296,12288,900,960,268435456,720,1073741824,840,
9216,196608,5184,1260,68719476736,786432,36864,1680,1099511627776,2880]
n = int(input())
k = a[n-1]
d = 2
while k > 1:
  while k%d == 0:
    k = k//d
  if k != 1:
    d += 1
print(a[n-1], d)","0.0"
"bbb640ed-435c-4dc9-8625-87b81a5a9b22","a,b=map(int,input().split())
if a>0 and b>0:
   print(1)
elif a>0 and b<0:
   print(4)
elif a<0 and b<0:
   print(3)
elif a<0 and b>0:
   print(2)
","0.0"
"c9e1ff81-5755-43cb-8439-49ef952f622a","a,b=map(int,input().split())
if a>b:
   M=a
else:
   M=b
print(M)

","0.0"
"b85b4d55-02c5-4f5b-9c58-538068bf5699","a,b,c=map(int,input().split())
x=a//2+a%2
y=b//2+b%2
z=c//2+c%2
print(x+y+z)


","0.0"
"3bda5701-c742-4f44-9bdb-d4b772de2705","a,b=map(int,input().split())
m,k=map(int,input().split())
if m>=b and k>=a:
    print('YES')
elif m>=a and k>=b:
    print('YES')
else:
    print('NO')

","0.0"
"d658f071-1e55-45e3-b3ad-e9384d03b9b9","a,b,c=map(int,input().split())
m=a
n=b
if b<m:
    m=b
if c<m:
    m=c

if a>n:
    n=a
if c>n:
    n=c
print(a+b+c-m-n)
","0.0"
"5773ddc5-745f-44f7-aab7-59268bb9c5cd","ï»¿
a,b,c=map(int,input().split())
x,y,z=map(int,input().split())
m=a*3600+b*60+c
n=x*3600+y*60+z
print(n-m)
","0.0"
"0c04c2f7-1548-4fa7-afc6-5ef064ea3a9f","a=int(input())
x=a//100
y=a%10
print (x*10+y)","0.0"
"66cdaa4c-6fe2-43ac-9cc8-08f59916608f","a=int(input())
b=int(input())
y=a*6+b*8
x=a+b
print(x,y)
","0.0"
"0c04c2f7-1548-4fa7-afc6-5ef064ea3a9f","a=int(input())
x=a//100
y=a%10
print(x*10+y)
","0.0"
"74a21b08-f61e-495f-a883-f02328dc4dae","ï»¿a=int(input())
n = a // 100
b = a //10% 10
c = a % 10
print(n+b+c)
","0.0"
"b85b4d55-02c5-4f5b-9c58-538068bf5699","ï»¿a,b,c=map(int,input().split())
d=(a//2)+(b//2+b%2)+(c//2)
print(d)
","0.0"
"cb96b982-37a0-487b-8b5c-67d27e6f7094","k=int(input())
h=k//60
m=k%60
print(h,m,sep="" "")
","0.0"
"9cf4d5af-4fda-4443-9613-82dff00ab963","a,b=map(int,input().split())
c,v=map(int,input().split())
p,m=map(int,input().split())
q,u=map(int,input().split())
o=a+c+p+q
y=b+v+m+u
if o>y:
    print(1)
elif o<y:
    print(2)
else:
    print(""DRAW"")
","0.0"
"39cd4d3c-2ead-4da6-a322-b3be4be280c7","m,s=map(int,input().split())
p,q=map(int,input().split())
ms=s+m*60
gg=(2880-ms)//2
pm=gg//24*3+p
qm=gg//24*2+q
print(pm,qm)
","0.0"
"b85b4d55-02c5-4f5b-9c58-538068bf5699","a,b,c=map(int,input().split())
x=a//2+a%2
f=b//2+b%2
z=c//2+c%2
o=x+f+z
print(o)
","0.0"
"cb96b982-37a0-487b-8b5c-67d27e6f7094","ï»¿k=int(input())
h=k//60
m=k%60
print(h, m)
","0.0"
"66cdaa4c-6fe2-43ac-9cc8-08f59916608f","ï»¿a=int(input())
b=int(input())
x=a+b
y=a*6+b*8
print(x, y)
","0.0"
"0c04c2f7-1548-4fa7-afc6-5ef064ea3a9f","ï»¿a=int(input())
b=a//100
c=a%10
f=b*10+c
print(f)
","0.0"
"180b3b37-5ed9-4f3c-9300-48ae0b5121fa","ï»¿a=int(input())
b=int(input())
l=int(input())
n=int(input())
x=(a+b)*2*(n-1)+a+l+l
print(x)
","0.0"
"0ef5465b-370a-4084-bd37-fb4d3b6b398a","ï»¿a=int(input())
c=a//10%10
print(c)
","0.0"
"cb96b982-37a0-487b-8b5c-67d27e6f7094","ï»¿k=int(input())
h=k//60
m=k%60
print(h,m)
","0.0"
"6c2adae3-f5f9-4088-9bc6-567fe66476fb","nC,n=map(int, input().split())
a=[]
for i in range (0,nC):
        a.append(int(input()))

a.sort(reverse = True) # ÑÐ¾ÑÑÐ¸ÑÐ¾Ð²ÐºÐ° ÑÐµÐ½ Ð¿Ð¾ ÑÐ±ÑÐ²Ð°Ð½Ð¸Ñ 


summa=0
for i in range(n): 
        summa += a[i]
print(a[n],int(summa*0.2)) # ÑÐµÐ»Ð°Ñ ÑÐ°ÑÑÑ Ð¾Ñ ÑÑÐ¼Ð¼Ñ


","0.0"
"6c2adae3-f5f9-4088-9bc6-567fe66476fb","nC,n=map(int, input().split())
a=[]
for i in range (0,nC):
        a.append(int(input()))

a.sort(reverse = True) # ÑÐ¾ÑÑÐ¸ÑÐ¾Ð²ÐºÐ° ÑÐµÐ½ Ð¿Ð¾ ÑÐ±ÑÐ²Ð°Ð½Ð¸Ñ 


summa=0
for i in range(n): 
        summa += a[i]*0.2
print(a[n],int(summa)) # ÑÐµÐ»Ð°Ñ ÑÐ°ÑÑÑ Ð¾Ñ ÑÑÐ¼Ð¼Ñ

","0.0"
"1c8423df-d978-4e69-b8d5-886b1c2c745b","ï»¿m=int(input())
n=int(input())
a=(m*60+n+90)
print(a//60,a%60)
","0.0"
"74a21b08-f61e-495f-a883-f02328dc4dae","ï»¿a=int(input())
b=a//100
c=a//10%10
d=a%10
print(b+c+d)
","0.0"
"cb96b982-37a0-487b-8b5c-67d27e6f7094","ï»¿k=int(input())
h=k//60
m=k%60
print(h, m)
","0.0"
"66cdaa4c-6fe2-43ac-9cc8-08f59916608f","ï»¿a=int(input()) #Ð ÑÐ¡ÑÐ¡â¦Ð Ñ
b=int(input()) #Ð ÑÐ Â°Ð¡ÑÐ ÑÐ Ñ
s=a+b #Ð âÐ ÑÐ Â»Ð ÑÐ ÐÐ¡â¹
d=6*a+8*b #Ð âºÐ Â°Ð ÑÐ ÑÐ Ñ
print(s, d)
","0.0"
"0c04c2f7-1548-4fa7-afc6-5ef064ea3a9f","gg=int(input())
a=gg//100
b=gg%10
print(a*10+b)
","0.0"
"5b2cb964-e915-4506-b4fe-22b78644939c","a=int(input())
b=int(input())
c=int(input())
if a==b and b==c:
    print(3)
elif a==b and a!=c:
    print(2)
elif a==c and a!=b:
    print(2)
elif c==b and a!=c:
    print(2)
else:
     print(0)
","0.0"
"b85b4d55-02c5-4f5b-9c58-538068bf5699","a,b,c=map(int,input().split())
x=a//2+a%2
y=b//2+b%2
z=c//2+c%2
print(x+y+z)","0.0"
"e51d6308-c0be-44b6-ba3d-c238a0d8e4a1","k=int(input())
l=int(input())
n=int(input())
s=int(input())
a=k+n*s
b=l+(s//2)*n
if a>=b:
    print(""YES"")
else:
    print(""NO"")
","0.0"
"74a21b08-f61e-495f-a883-f02328dc4dae","a=int(input())
d=a//100
b=a//10% 10
c=a % 10
print(d+b+c)
","0.0"
"0ef5465b-370a-4084-bd37-fb4d3b6b398a","a=int(input())
b=a//10%10
print(b)","0.0"
"5d02ab7a-4394-4098-9f7a-ed3912083888","h=int(input())
m=int(input())
k=h*60+m+75
c=k%60
d=k//60
print(d%24,c)
","0.0"
"cb96b982-37a0-487b-8b5c-67d27e6f7094","ï»¿k=int(input())
h=k//60
m=k%60
print(h,m)
","0.0"
"74a21b08-f61e-495f-a883-f02328dc4dae","a=int(input())
b=a//100
c=a%10
d=a//10%10
s=d+b+c
print(s)
","0.0"
"9cf4d5af-4fda-4443-9613-82dff00ab963","ï»¿a,b=map(int,input().split())
c,d=map(int,input().split())
x,y=map(int,input().split())
p,q=map(int,input().split())
if a+c+x+p>b+d+y+q:
    print(1)
elif a+c+x+p==b+d+y+q:
    print('DRAW')
else:
    print(2)
","0.0"
"177f714d-8f2d-4630-8a45-86b5a1799099","a,b,c=map(int,input().split())
m,k=map(int,input().split())
if a<=k and b<=m:
   print('YES')
elif a<=m and b<=k:
   print('YES')
elif c<=k and b<=m:
   print('YES')
elif c<=m and b<=k:
   print('YES')
elif a<=k and c<=m:
   print('YES')
elif a<=m and c<=k:
   print('YES')
else:
   print('NO')
","0.0"
"177f714d-8f2d-4630-8a45-86b5a1799099","ï»¿a,b,c=map(int,input().split())
m,k=map(int,input().split())
if a<=k and b<=m:
   print('YES')
elif a<=m and b<=k:
   print('YES')
elif c<=k and b<=m:
   print('YES')
elif c<=m and b<=k:
   print('YES')
elif a<=k and c<=m:
   print('YES')
elif a<=m and c<=k:
   print('YES')
else:
   print('No')
","0.0"
"5b2cb964-e915-4506-b4fe-22b78644939c","ï»¿a=int(input())
b=int(input())
c=int(input())
if a==b==c:
     print(3);
elif a==b and a!=c:
    print(2)
elif a==c and a!=b:
    print(2)
elif c==b and a!=c:
    print(2);
else:
    print(0)
","0.0"
"e51d6308-c0be-44b6-ba3d-c238a0d8e4a1","K=int(input())
L=int(input())
N=int(input())
S=int(input())
if K+N*S>=L+(N*S)//2:
    print('YES')
else:
    print('NO')
","0.0"
"177f714d-8f2d-4630-8a45-86b5a1799099","a,b,h=map(int,input().split())
m,k=map(int,input().split())
if a<=k and b<=m:
    print('YES')
elif h<=k and b<=m:
    print('YES')
elif a<=k and h<=m:
    print('YES')
elif a<=m and b<=k:
    print('YES')
elif h<=m and b<=k:
    print('YES')
elif a<=m and h<=k:
    print('YES')
else:
    print('NO')
","0.0"
"5b2cb964-e915-4506-b4fe-22b78644939c","a=int(input())
b=int(input())
c=int(input())
if (a==b!=c)or(a==c!=b)or(b==c!=a):
    print(2)
elif a==b==c:
    print(3)
else:
    print(0)

","0.0"
"180b3b37-5ed9-4f3c-9300-48ae0b5121fa","ï»¿
a=int(input())
b=int(input())
l=int(input())
N=int(input())
x=((a+b)*2)*(N-1)+2*l +a
print(x)
","0.0"
"66cdaa4c-6fe2-43ac-9cc8-08f59916608f","ï»¿a=int(input())
b=int(input())
x=a+b
y=(a*6)+(b*8)
print(x, y)
","0.0"
"b76c8f23-a934-45a5-ad8c-8396fe67301c","n = int(input())
sp = input().split(' ')
ssp =[]
for i in range(n):
    z = list(sp[i])
    su = 0
    for j in range(len(z)):
        su = su + int(z[j])
    ssp.append(su)
ma=max(ssp)
for i in range(n):
    if ma == int(ssp[i]):
        print(sp[i])
","0.0"
"6c2adae3-f5f9-4088-9bc6-567fe66476fb","nC,n=map(int, input().split())
a=[]
for i in range (0,nC):
        a.append(int(input()))

a.sort(reverse = True) # ÑÐ¾ÑÑÐ¸ÑÐ¾Ð²ÐºÐ° ÑÐµÐ½ Ð¿Ð¾ ÑÐ±ÑÐ²Ð°Ð½Ð¸Ñ 


summa = 0 # ÑÑÐ¼Ð¼Ð° ÑÐºÐ¸Ð´Ð¾Ðº
for i in range(n): 
        summa += a[i]*0.2
print(a[n],int(summa)) # ÑÐµÐ»Ð°Ñ ÑÐ°ÑÑÑ Ð¾Ñ ÑÑÐ¼Ð¼Ñ","0.0"
"3afc315a-4d55-4193-8135-d8dd5c533c49","S,n=map(int, input().split())
data=[]
for i in range (0,n):
        data.append(int(input()))

del data[0]
data = sorted( list(map(int, data)) )

total = 0
for i, val in enumerate(data):
  if total + val > S: break
  total += val
ii=i

delta = S - total
candidates = [x for x in data 
                if x-data[i-1] <= delta]
print(ii,max(candidates))
","0.0"
"0df7e1f2-c1c4-41f3-9904-a9e4495a5bfc","start = int(input())
end = int(input())

def allDivs( x ):
  divs = [1, x]
  d = 2
  while d*d <= x:
    if x % d == 0:
      divs.append( d )
      if x // d > d:
        divs.append( x//d )
    d += 1
  return sorted(divs)

for x in range( start, end+1 ):
  divs = allDivs(x)[1:-1]
  digits2 = [ d for d in divs if 10 <= d <= 99 ]
  if len(digits2) == 30:
    print( x, digits2[0], digits2[-1] )










","0.0"
"0df7e1f2-c1c4-41f3-9904-a9e4495a5bfc","start = int(input())
end = int(input())

def allDivs( x ):
  divs = [1, x]
  d = 2
  while d*d <= x:
    if x % d == 0:
      divs.append( d )
      if x // d > d:
        divs.append( x//d )
    d += 1
  return sorted(divs)

for x in range( start, end+1 ):
  divs = allDivs(x)[1:-1]
  digits2 = [ d for d in divs if 10 <= d <= 99 ]
  if len(digits2) == 30:
    print( x, digits2[0], digits2[-1] )







","0.0"
"0df7e1f2-c1c4-41f3-9904-a9e4495a5bfc","start = int(input())
end = int(input())

def allDivs( x ):
  divs = [1, x]
  d = 2
  while d*d <= x:
    if x % d == 0:
      divs.append( d )
      if x // d > d:
        divs.append( x//d )
    d += 1
  return sorted(divs)

for x in range( start, end+1 ):
  divs = allDivs(x)[1:-1]
  digits2 = [ d for d in divs if 10 <= d <= 99 ]
  if len(digits2) == 30:
    print( x, digits2[0], digits2[-1] )




","0.0"
"0df7e1f2-c1c4-41f3-9904-a9e4495a5bfc","start = int(input())
end = int(input())

def allDivs( x ):
  divs = [1, x]
  d = 2
  while d*d <= x:
    if x % d == 0:
      divs.append( d )
      if x // d > d:
        divs.append( x//d )
    d += 1
  return sorted(divs)

for x in range( start, end+1 ):
  divs = allDivs(x)[1:-1]
  digits2 = [ d for d in divs if 10 <= d <= 99 ]
  if len(digits2) == 30:
    print( x, digits2[0], digits2[-1] )



","0.0"
"0df7e1f2-c1c4-41f3-9904-a9e4495a5bfc","start = int(input())
end = int(input())

def allDivs( x ):
  divs = [1, x]
  d = 2
  while d*d <= x:
    if x % d == 0:
      divs.append( d )
      if x // d > d:
        divs.append( x//d )
    d += 1
  return sorted(divs)

for x in range( start, end+1 ):
  divs = allDivs(x)[1:-1]
  digits2 = [ d for d in divs if 10 <= d <= 99 ]
  if len(digits2) == 30:
    print( x, digits2[0], digits2[-1] )




","0.0"
"6bd877c6-1740-408f-a6ca-2f8adeae08f5","from math import sqrt

start = int(input())
end = int(input())

def isPrime( x ):
  if x <= 1: return False
  d = 2
  while d*d <= x:
    if x % d == 0:
      return False
    d += 1
  return True

s = 0
qStart = int(sqrt(start))
qEnd = int(sqrt(end))+1
for q in range( qStart, qEnd ):
  x = q*q
  if start <= x <= end and isPrime(q):
    s += sum( map(int, str(x)) )

print(s)
","0.0"
"9ad8e0ac-34e6-45a9-8f4f-0e8046aec803","start=int(input())
end = int(input())


def allDivs( x ):
  divs = [1, x]
  d = 2
  while d*d <= x:
    if x % d == 0:
      divs.append( d )
      if x // d > d:
        divs.append( x//d )
    d += 1
  return sorted(divs)

maxDivs = []
for x in range(start, end+1 ):
  divs = allDivs( x )
  if len(divs) >= len(maxDivs):
    maxDivs = divs

print( len(maxDivs), maxDivs[-1], maxDivs[-2] )
","0.0"
"75410156-cdea-4efc-a0d6-91e02bf38e32","start=int( input())
end=int(input())
k=0
for n in range(start, end+1):
  a = []
  for d in range(1,n+1):
    if n % d == 0:
      a.append(d)
      if len(a) > 4: break
  if len(a) == 4:
    print(*a)
    k=1

if k==0: 
    print(0)







","0.0"
"75410156-cdea-4efc-a0d6-91e02bf38e32","start=int( input())
end=int(input())
k=0
for n in range(start, end+1):
  a = []
  for d in range(1,n+1):
    if n % d == 0:
      a.append(d)
      if len(a) > 4: break
  if len(a) == 4:
    print(*a)
    k=1

if k==0: 
    print(0)







","0.0"
"a93745c4-cdf2-422d-86e3-46fc616f4f80","a=int (input())
sp=[]
cont=0
for d in range(1, a+1):
  if (a % d == 0) and (d % 3 == 0):
      cont+=1
      sp.append(d)
      

print(cont)
print(*sp)","0.0"
"931dc9d6-3183-4d35-bee6-95b210e0268a","a=int (input())
for d in range(1, a+1):
  if a % d == 0:
    print(d,end=' ')","0.0"
"931dc9d6-3183-4d35-bee6-95b210e0268a","a=int (input())

for d in range(1, a+1):
  if a % d == 0:
    print(d,end=' ')","0.0"
"704fe53c-bcb7-48de-a964-e687a0ae281c","s=input()
count = 0
maxCount = 0
for char in s:
  if char in 'ABC':
    count += 1
   
  else:
        if count>maxCount:
            maxCount = count
        count=0
print(maxCount)
","0.0"
"40d78243-79a0-4ec7-8ff5-47f803a55e0b","s = str(input())
count = 0
for i in range(len(s)-2):
    if s[i] in 'BCD' and s[i+1] in 'BDE' \r
      and s[i+2] in 'BCE' and s[i]!=s[i+1] \r
      and s[i+1]!=s[i+2]:
      count += 1
print(count)","0.0"
"2ee76cc8-f815-4807-a797-4059ae8a8d76","n=int (input())
mas=[0]
s = input().split() 
mas = [int(i) for i in s] 
mas=mas+[1001]
list.sort(mas)
k=1
for i in range(n):
    if mas[i+1]==mas[i]:
        k+=1
    else:
        print(mas[i],k)
        k=1

","0.0"
"1a27e016-52ff-4e78-89cb-956f0a7cac6b","n=int (input())
mas=[0]*n
s = input().split() 
mas = [int(i) for i in s] 
mas2=sorted(mas)
print(*mas2)","0.0"
"5362054a-bc83-4623-867a-66a72e38b366","n=int(input())
s=0
k=0
while s<n :
    k=2*k+1
    s=s+k
if s==n :
    print('YES')
else :
     print('NO')","0.0"
"a809c102-e8a6-45ff-9baa-9a998d1927f1","n=int (input())
m=int (input())
nn=1
while nn<=m :
   n=n+n*2
   print(n)
   nn=nn+1","0.0"
"4659a273-9c89-4ff8-a1bd-6d0ae87e9915","x=int (input())
if x%10==1 and x!=11:
   print(x,'mag')
elif x%10==2 or x%10==3 or x%10==4 :
   print(x,'maga')
else :
   print(x,'magov')


","0.0"
"0ef5465b-370a-4084-bd37-fb4d3b6b398a","a = int(input())
print(a // 10 % 10)","0.0"
"5773ddc5-745f-44f7-aab7-59268bb9c5cd","c1,m1,s1 =map(int,input().split())
c2,m2,s2 =map(int,input().split())
k =  c2*3600+m2*60+s2 - (c1*3600+m1*60+s1)
print(k)","0.0"
"aab4a01c-6efb-47a1-8fa2-2ea3e02303c7","n = int(input())
m = int(input())
k = m // n
if m % n ==0:
    print(k)
else:
    print(k+1)","0.0"
"d658f071-1e55-45e3-b3ad-e9384d03b9b9","x,y,z = map(int,input().split())
a=x
i=x
if y < i:
    i=y
if z < i:
    i=z
if y > a:
    a=y
if z > a:
    a=z
print(x+y+z-i-a)
","0.0"
"c9e1ff81-5755-43cb-8439-49ef952f622a","a,b=map(int,input().split())
if a > b:
    print(a)
else:
    print(b)","0.0"
"66cdaa4c-6fe2-43ac-9cc8-08f59916608f","ï»¿a=int(input())
b=int(input())
print(a+b, a*6+b*8)
","0.0"
"0c04c2f7-1548-4fa7-afc6-5ef064ea3a9f","a=int(input())
print((a//100)*10+a%10)","0.0"
"2ee76cc8-f815-4807-a797-4059ae8a8d76","n=int (input())
mas=[0]
s = input().split() 
mas = [int(i) for i in s] 
mas=mas+[1001]
mas=sorted(mas)
k=1
for i in range(n):
    if mas[i+1]==mas[i]:
        k+=1
    else:
        print(mas[i],k)
        k=1

","0.0"
"2ee76cc8-f815-4807-a797-4059ae8a8d76","n=int (input())
mas=[0]
s = input().split() 
mas = [int(i) for i in s] 
mas=mas+[10000]
mas=sorted(mas)
k=1
for i in range(n):
    if mas[i+1]==mas[i]:
        k+=1
    else:
        print(mas[i],k)
        k=1","0.0"
"c7512b39-389d-4ddb-b3fe-5475bd01a088","n=int(input())
m=int(input())
ot=n+m
mp=1
m=int(input())
while ot!=m :
    m=int(input())
    mp+=1
print(mp)



","0.0"
"4659a273-9c89-4ff8-a1bd-6d0ae87e9915","x=int (input())
if x%10==1 and x!=11:
   print(x,'mag')
elif (x%10==2 or x%10==3 or x%10==4) and x!=12 and x!=13 and x!=14:
   print(x,'maga')
else :
   print(x,'magov')




","0.0"
"bd77bd8e-1bf2-4a3b-b674-9eddb5375116","n=int (input())
d=n
while d>1 :
  if n%d==0 :
      md=d
  d=d-1
print(md)","0.0"
"4b28d852-6b47-4db4-aa6b-099ecb0e7a8b","n=int (input())
print(n)
while n>1 :
  if n%2==0 :
      n=n//2
  else :
      n=(n*3+1)//2
  print(n)","0.0"
"75214b1c-bb28-44e5-8474-ac6b45c80db9","n=int (input())
m=n
k=0
while m>0:
    k=k*10+m%10
    m=m//10
print(n+k)

","0.0"
"777756d6-d867-4cc7-978e-717933384418","x=int (input())
if x%4==0 :
  print(""Hufflepuff"")
elif x%4==1 :
  print(""Gryffindor"")
elif x%4==2 :
  print(""Slytherin"")
elif x%4==3 :
  print(""Ravenclaw"")","0.0"
"9e9de547-58f5-45b9-a733-37cc732bf237","ï»¿x=int(input())
a=int(input())
x=x*2.54
if x<a :
    print(""YES"")
else:
    print(""NO"")
","0.0"
"94224cd9-666a-4814-8edb-60beb14ea59a","d = int(input())
m = int(input())
y = int(input())
if (m<9) and (y == 2010) :
        print('YES')
else : print('NO')


 

      
","0.0"
"1ff5a639-82a9-46d5-99e8-90b0529a5016","h=int (input())
m=int(input())
h=h+1
m=m+15
if (h>=24):
    h=0
if (m>=60):
    h=h+1
    m=m-60
print(h,m)
","0.0"
"1ff5a639-82a9-46d5-99e8-90b0529a5016","ï»¿h = int(input())
m = int(input())
if (m+15>= 60) :
    h+=1
    m-=60
if (h>=24) :
    h-=24
print(h+1, m+15)



","0.0"
"5d02ab7a-4394-4098-9f7a-ed3912083888","l = int(input())
print(int(l*2.54//1))






","0.0"
"190516a0-6ed3-4c42-9f36-dc481a3adb70","x=int(input())
y=int(input())
print(x+y)
","0.0"
"177f714d-8f2d-4630-8a45-86b5a1799099","a,b,h=map(int,input().split())
n,m=map(int,input().split())
if (a<=n and b<=m)or(a<=m and b<=n):
     print(""YES"")
elif (a<=n and h<=m)or(a<=m and h<=n):
     print(""YES"")
elif (b<=n and h<=m)or(b<=m and h<=n):
     print(""YES"")
else:
     print(""NO"")","0.0"
"3bda5701-c742-4f44-9bdb-d4b772de2705","a,b=map(int,input().split())
n,m=map(int,input().split())
if (a<=n and b<=m)or(a<=n and b<=m):
     print(""YES"")
else:
     print(""NO"")","0.0"
"2488a6a1-fc84-46c8-bd28-ea8791f78298","a = int(input())
b = int(input())
n = int(input())
s =n*(a*100+b)
print(s // 100, s % 100)","0.0"
"4b1be5b6-131a-4853-bf20-dadf3bbd10d9","ï»¿h = int(input())
a = int(input())
b = int(input())
s=a-b
h=h-a
if h % s>0:
    k=h // s+1
else:
    k=h//s
print(k+1)
","0.0"
"c9e1ff81-5755-43cb-8439-49ef952f622a","a,b=map(int,input().split())
if a>b:
   m=a
else:
   m=b
print(m)","0.0"
"177f714d-8f2d-4630-8a45-86b5a1799099","a,b,h=map(int,input().split())
m,n=map(int,input().split())
if (n>=a and m>=b) or (n>=b and m>=a):
   print(""YES"")
elif (n>=a and m>=h) or (n>=h and m>=a):
   print(""YES"")
elif (n>=b and m>=h) or (n>=h and m>=b):
   print(""YES"")
else:
   print(""NO"")","0.0"
"5b2cb964-e915-4506-b4fe-22b78644939c","a=int(input())
b=int(input())
c=int(input())
if a==b==c:
   print(3)
elif a==b and b!=c:
   print(2)
elif a==c and b!=c:
   print(2)
elif a==c and c!=b:
   print(2)
elif b==c and a!=c:
   print(2)
elif b==c and b!=c:
   print(2)
else:
   print(0)","0.0"
"9428daf6-0093-444b-a8fb-cef9003392e2","a=int(input())
b=int(input())
c=int(input())
if a<b:
   M=a
else:
   M=b
if M<c:
   D=M
else:
   D=c
print(D)
","0.0"
"5773ddc5-745f-44f7-aab7-59268bb9c5cd","a,b,c=map(int,input().split())
x,y,z=map(int,input().split())
d=a*3600+b*60+c
e=x*3600+y*60+z
j=e-d
print(j)
","0.0"
"2488a6a1-fc84-46c8-bd28-ea8791f78298","a=int(input())
b=int(input())
n=int(input())
x=a*100+b
xp=x*n
c=xp//100
j=xp%100
print(c,j)
","0.0"
"39cd4d3c-2ead-4da6-a322-b3be4be280c7","m,s=map(int,input().split())
p,q=map(int,input().split())
b=m*60+s
c=48*60
n=c-b
k=n//24
if k%2==0:
    t=p+3*(k//2)
    y=q+2*(k//2)
else:
    t=p+3*((k//2)+1)
    y=q+2*(k//2)
print(t,y)



","0.0"
"9428daf6-0093-444b-a8fb-cef9003392e2","ï»¿a=int(input())
b=int(input())
c=int(input())
m=a
if b<m:
    m=b
if c<m:
    m=c
print(m)
","0.0"
"d658f071-1e55-45e3-b3ad-e9384d03b9b9","a,b,c=map(int,input().split())
if a<=b<=c:
    print(b)
if a<=c<=b:
    print(c)
if b<=a<=c:
    print(a)
if b<=c<=a:
    print(c)
if c<=a<=b:
    print(a)
if c<=b<=a:
    print(b)    ","0.0"
"9428daf6-0093-444b-a8fb-cef9003392e2","a=int(input())
b=int(input())
c=int(input())
if a<=b<=c:
    print(a)
if b<=a<=c:
    print(b)
if c<=b<=a:
    print(c)
if c<=a<=b:
    print(c)","0.0"
"c9e1ff81-5755-43cb-8439-49ef952f622a","a,b=map(int,input().split())
if a<=b:
    print(b)
if b<=a:
    print(a)
","0.0"
"5b2cb964-e915-4506-b4fe-22b78644939c","ï»¿a=int(input())
b=int(input())
c=int(input())
if a==b==c:
    print(3)
    
elif a!=b==c:
        print(2)

elif a==b!=c:
    print(2)

elif c==a!=b:
    print(2)

else:
    print(0)




    




","0.0"
"cb96b982-37a0-487b-8b5c-67d27e6f7094","ï»¿k=int(input())
h=k//60
m=(k-h*3600)//60
j=k%60
print(h,j)
","0.0"
"e51d6308-c0be-44b6-ba3d-c238a0d8e4a1","ï»¿k=int(input())
l=int(input())
n=int(input())
s=int(input())
if k+(s//2*n)<=l+(n*((s//2)//2)):
    print(""NO"")
else:
    print(""YES"")
    
","0.0"
"e51d6308-c0be-44b6-ba3d-c238a0d8e4a1","ï»¿k=int(input())
l=int(input())
n=int(input())
s=int(input())
if k+(s*n)<=l+(n*(s//2)):
    print(""NO"")
else:
    print(""YES"")
    
","0.0"
"3bda5701-c742-4f44-9bdb-d4b772de2705","ï»¿a,b=map(int,input().split())
m,k=map(int,input().split())
if (m>=a and k>=b) or (k>=a and m>b):
    print('YES')
else:
    print('NO')

        

    
","0.0"
"39cd4d3c-2ead-4da6-a322-b3be4be280c7","m,s=map(int,input().split())
p,q=map(int,input().split())
ms=s+m*60
gg=2880-ms
k=gg//24
if k%2==0:
    x=p+3*(k//2)
    y=q+2*(k//2)
else:
    x=p+3*(k//2+1)
    y=q+2*(k//2)
print(x,y)
","0.0"
"e51d6308-c0be-44b6-ba3d-c238a0d8e4a1","K=int(input())
L=int(input())
N=int(input())
S=int(input())
qm=N*S+K
qo=N*(S//2)+L
if qm>qo:
 print(""YES"")
elif qm==qo:
 print(""NO"")
else:
 print(""NO"")

","0.0"
"bbb640ed-435c-4dc9-8625-87b81a5a9b22","x,y=map(int,input().split())
if x>0 and y>0:
 print(1)
elif x<0 and y>0:
 print(2)
elif x<0 and y<0:
 print(3)
elif x>0 and y<0:
 print(4)
else:
 print(0)
 
","0.0"
"bbb640ed-435c-4dc9-8625-87b81a5a9b22","x,y=map(int,input().split())
if x>0 and y>0:
 print(1)
elif x>0 and y<0:
 print(2)
elif x<0 and y<0:
 print(3)
else:
 print(4)

 
","0.0"
"bbb640ed-435c-4dc9-8625-87b81a5a9b22","x,y=map(int,input().split())
if x>0 and y>0:
 print(1)
elif x>0 and y<0:
 print(2)
elif x<0 and y>0:
 print(4)
elif x<0 and y<0:
 print(3)
else:
     print(0)
 
","0.0"
"5b2cb964-e915-4506-b4fe-22b78644939c","a=int(input())
b=int(input())
c=int(input())
if a==b==c:
    print(3)
elif a==b!=c:
     print(2)
elif a!=b==c:
 print(2)
elif c==a!=b:
 print(2)
else:
    print(0)



","0.0"
"bbb640ed-435c-4dc9-8625-87b81a5a9b22","ï»¿x,y=map(int,input().split())
if x>0 and y>0:
   print(1)
elif x<0 and y>0:
   print(2)
elif x<0 and y<0:
   print(3)
elif x>0 and y<0:
   print(4)
else:
   print(0)      
","0.0"
"e51d6308-c0be-44b6-ba3d-c238a0d8e4a1","k=int(input())
l=int(input())
n=int(input())
s=int(input())
k=n*s+k
l=n*s//2+l
if k>=l:
   print(""YES"")
else:
   print(""NO"")

","0.0"
"3bda5701-c742-4f44-9bdb-d4b772de2705","a,b=map(int,input().split())
m,k=map(int,input().split())
if m>=a and k>=b:
   print(""YES"")
elif m>=b and k>=a:
   print(""YES"")
else:
   print(""NO"")","0.0"
"9cf4d5af-4fda-4443-9613-82dff00ab963","ï»¿a,b=map(int,input().split())
a1,b1=map(int,input().split())
a2,b2=map(int,input().split())
a3,b3=map(int,input().split())
m=a+a1+a2+a3
n=b+b1+b2+b3
if m>n:
    print(""1"")
elif m<n:
    print(""2"")
elif m==n:
    print(""DRAW"")
","0.0"
"39cd4d3c-2ead-4da6-a322-b3be4be280c7","m,s=map(int,input().split())
p,q=map(int,input().split())
b=m*60+s
c=48*60
n=c-b
k=n//24
if k%2==0:
    t=p+3*(k//2)
    y=q+2*(k//2)
else:
    t=p+3*(k//2)+1
    y=q+2*(k//2)
print(t,y)



","0.0"
"e51d6308-c0be-44b6-ba3d-c238a0d8e4a1","k=int(input())
l=int(input())
n=int(input())
s=int(input())
m=n*s+k
c=s//2+l
if m<=c:
    print(""NO"")
else:
    print(""YES"")
","0.0"
"5b2cb964-e915-4506-b4fe-22b78644939c","a=int(input())
b=int(input())
c=int(input())
if a==b and b==c:
    print(3)
elif a==b and a!=c:
    print(2)
elif a==c and a!=b:
    print(2)
elif b==c and b!=a:
    print(2)
else:
    print(0)
","0.0"
"180b3b37-5ed9-4f3c-9300-48ae0b5121fa","ï»¿a=int(input())
b=int(input())
i=int(input())
n=int(input())
print((n-1)*((a+b)*2)+i+i+a)
","0.0"
"b85b4d55-02c5-4f5b-9c58-538068bf5699","a,b,c=map(int,input().split())
print(a//2+a%2+b//2+b%2+c//2+c%2)
","0.0"
"9cf4d5af-4fda-4443-9613-82dff00ab963","ï»¿a,b=map(int,input().split())
c,d=map(int,input().split())
e,f=map(int,input().split())
g,h=map(int,input().split())
k=a-b+c-d+e-f+g-h

if k==0:
    print(""DRAW"")

elif k<=0:
    print(2)

else:print(1)
","0.0"
"e51d6308-c0be-44b6-ba3d-c238a0d8e4a1","ï»¿k=int(input())
l=int(input())
n=int(input())
s=int(input())
a=k+(n*s)
b=l+(n*(s//2))
c=a-b

if c==0:
    print(""YES"")
    
if c>=0:
    print(""YES"")
    
if c<=0:
    print(""NO"")
","0.0"
"9428daf6-0093-444b-a8fb-cef9003392e2","a=int(input())
b=int(input())
c=int(input())
if a<=b<=c:
    print(a)
if b<=a<=c:
    print(b)
if c<=a<=b:
    print(c)
","0.0"
"9428daf6-0093-444b-a8fb-cef9003392e2","a=int(input())
b=int(input())
c=int(input())
if a<=b<=c:
    print(a)
if b<=a:
    print(b)
if c<=a<=b:
    print(c)","0.0"
"bbb640ed-435c-4dc9-8625-87b81a5a9b22","ï»¿x,y=map(int,input().split())
if x>=0 and y>0:
    print(1)
elif x<0 and y>0:
    print(2)
elif x<0 and y<0:
    print(3)
elif x>0 and y<0:
    print(4)
","0.0"
"66cdaa4c-6fe2-43ac-9cc8-08f59916608f","a=int(input())
b=int(input())
x=a+b
print(x,a*6+b*8)","0.0"
"74a21b08-f61e-495f-a883-f02328dc4dae","a=int(input())
x=a//100
y=a//10%10
z=a%10
print(x+y+z)
","0.0"
"aab4a01c-6efb-47a1-8fa2-2ea3e02303c7","ï»¿from math import ceil

n=int(input())
m=int(input())
print(ceil(m/n))
","0.0"
"5773ddc5-745f-44f7-aab7-59268bb9c5cd","a,b,c=map(int,input().split())
v,u,n=map(int,input().split())
t=a*3600+b*60+c
y=v*3600+u*60+n
f=max(t,y)
i=min(t,y)
o=f-i
print(o)

","0.0"
"2488a6a1-fc84-46c8-bd28-ea8791f78298","ï»¿a=int(input())
b=int(input())
n=int(input())
m=a*100+b
z=m*n
g=z//100
h=z%100
print(g,h)
","0.0"
"f2d92959-39d9-49fe-a9b1-5868567eeedf","L=int(input())
k=L*2.54
print(round(k))

","0.0"
"5773ddc5-745f-44f7-aab7-59268bb9c5cd","a,b,c=map(int,input().split())
d,e,f=map(int,input().split())
x=d-a
y=e-b
z=f-c
print(x*3600+y*60+z)
","0.0"
"0c04c2f7-1548-4fa7-afc6-5ef064ea3a9f","ï»¿a=int(input())
b=a//100
c=a//10%10
s=a%10
print(b*10+s)

","0.0"
"74a21b08-f61e-495f-a883-f02328dc4dae","gg=int(input())
a=gg%10
gg=gg//10
b=gg%10
gg=gg//10
c=gg%10
print(a+b+c)
","0.0"
"bbb640ed-435c-4dc9-8625-87b81a5a9b22","x,y=map(int,input().split())
if x>0 and y>0:
    print(1)
elif x<0 and y>0:
    print(2)
elif x<0 and y<0:
    print(3)
else:
    print(4)","0.0"
"5773ddc5-745f-44f7-aab7-59268bb9c5cd","a,b,c=map(int,input().split())
x,y,z=map(int,input().split())
a1=a*3600+b*60+c
b2=x*3600+y*60+z
print(b2-a1)","0.0"
"d658f071-1e55-45e3-b3ad-e9384d03b9b9","ï»¿a,b,c=map(int,input().split())
m=a
if b>m:
   m=b
if c>m:
   m=c
n=a
if b<n:
   n=b
if c<n:
   n=c
s=a+b+c-n-m
print(s)
   
","0.0"
"9428daf6-0093-444b-a8fb-cef9003392e2","a=int(input())
b=int(input())
c=int(input())
m=a
if b<m:
    m=b
if c<m:
    m=c
print(m)","0.0"
"66cdaa4c-6fe2-43ac-9cc8-08f59916608f","ï»¿a=int(input())
b=int(input())
y=a*6+b*8
x=a+b
print(x,y)
","0.0"
"0c04c2f7-1548-4fa7-afc6-5ef064ea3a9f","ï»¿a=int(input())
x=a//100
y=a%10
print(x*10+y)
","0.0"
"d658f071-1e55-45e3-b3ad-e9384d03b9b9","a,b,c=map(int,input().split())
m=max(a,b,c)
n=min(a,b,c)
s=a+b+c-m-n
print(s)","0.0"
"c9e1ff81-5755-43cb-8439-49ef952f622a","ï»¿
a, b=map(int,input().split())
if a>b:
    m=a
else:
    m=b
print(m)    
    
","0.0"
"5773ddc5-745f-44f7-aab7-59268bb9c5cd","c,m,s=map(int,input().split())
z,v,e=map(int,input().split())
mo=c*3600+m*60+s
mon=z*3600+v*60+e
d=max(mo,mon)
g=min(mo,mon)
r=d-g
print(r)
","0.0"
"2488a6a1-fc84-46c8-bd28-ea8791f78298","ï»¿a=int(input())
b=int(input())
n=int(input())
k=a*100+b
s=k*n
z=s//100
v=s%100
print(z,v)
","0.0"
"b85b4d55-02c5-4f5b-9c58-538068bf5699","a,b,c=map(int,input().split())
d=(c+a+b)/2
d=round(d)
print(d)
","0.0"
"5d02ab7a-4394-4098-9f7a-ed3912083888","h=int(input())
m=int(input())
k=h*60+m+75
c=k%60
d=k//60
print(d%24,c)
","0.0"
"9cf4d5af-4fda-4443-9613-82dff00ab963","a,b=map(int,input().split())
s,f=map(int,input().split())
k,v=map(int,input().split())
w,z=map(int,input().split())
if (a+s+k+w)>(b+f+v+z):
    print(1)
elif  (a+s+k+w)<(b+f+v+z):
    print(2)
else:
    print('DRAW')
","0.0"
"39cd4d3c-2ead-4da6-a322-b3be4be280c7","m,s=map(int,input().split())
p,q=map(int,input().split())
s=48*60-(m*60+s)
k=s//24
if k%2==0:
    print((p+3*(k//2)),q+(2*k//2))
else:
    print(p+3*(k//2+1),q+2*(k//2))
        
","0.0"
"3bda5701-c742-4f44-9bdb-d4b772de2705","a,b=map(int,input().split())
m,k=map(int,input().split())
if m*k>a*b:
    print('YES')
else:
    print('NO')","0.0"
"bbb640ed-435c-4dc9-8625-87b81a5a9b22","x,y=map(int,input().split())
if x>0 and y>0:
    print(1)
elif x<0 and y>0:
    print(2)
elif x<0 and y<0:
    print(3)
else:
    print(4)
","0.0"
"bbb640ed-435c-4dc9-8625-87b81a5a9b22","ï»¿x,y=map(int,input().split())
if x>0 and y>0:
    print(1)
elif x<0 and y>0:
    print(2)
elif x<0 and y<0:
    print(3)
elif x>0 and y>0:
    print(4)
","0.0"
"c9e1ff81-5755-43cb-8439-49ef952f622a","ï»¿a,b=map(int,input().split())
if a>b:
    m=a
else:
    m=b
print(m)
 
","0.0"
"1c8423df-d978-4e69-b8d5-886b1c2c745b","ï»¿h=int(input())
m=int(input())
k=h*60+m+90
print(k//60,k%60)
","0.0"
"e51d6308-c0be-44b6-ba3d-c238a0d8e4a1","K=int(input())
L=int(input())
N=int(input())
S=int(input())
qm=N*S+K
qo=N*(S//2)+L
if qm>=qo:
    print(""YES"")
else:
    print(""NO"")


","0.0"
"177f714d-8f2d-4630-8a45-86b5a1799099","a,b,h=map(int,input().split())
m,n=map(int,input().split())
if (m>=a and n>=b)or(m>=b and n>=a):
 print('YES')
elif (m>=a and n>=h)or(m>=h and n>=a):
 print('YES')
elif (m>=b and n>=h)or(m>=b and n>=h):
 print('YES')
else:
    print('NO')
","0.0"
"3bda5701-c742-4f44-9bdb-d4b772de2705","a,b=map(int,input().split())
m,k=map(int,input().split())
if m>=a and k>=b:
 print('YES')
elif m>=b and k>=a:
 print('YES')
else:
 print('NO') 

 ","0.0"
"180b3b37-5ed9-4f3c-9300-48ae0b5121fa","a=int(input())
b=int(input())
I=int(input())
N=int(input())
f=(a+b)*2*(N-1)+a+2*I
print(f)
","0.0"
"0ef5465b-370a-4084-bd37-fb4d3b6b398a","a=int(input())
f=(a%100-a%10)//10
print(f)
","0.0"
"1c8423df-d978-4e69-b8d5-886b1c2c745b","h=int(input())
m=int(input())
k=h*60+m+90
print(k//60, k%60)
","0.0"
"2488a6a1-fc84-46c8-bd28-ea8791f78298","a=int(input())
b=int(input())
n=int(input())
x=a*100+b
y=x*n
print(y//100,y%100)
","0.0"
"b85b4d55-02c5-4f5b-9c58-538068bf5699","ï»¿a,b,c=map(int,input().split())
x=a//2+a%2
d=b//2+b%2
e=c//2+c%2
print(x+d+e)
","0.0"
"5d02ab7a-4394-4098-9f7a-ed3912083888","h=int(input())
m=int(input())
k=h*60+m+75
a=k//60
b=k%60
print(a%24, b)
","0.0"
"1c8423df-d978-4e69-b8d5-886b1c2c745b","m=int(input())
n=int(input())
k=m*60+n+90
h=k//60
v=k%60
print(h, v)
","0.0"
"aab4a01c-6efb-47a1-8fa2-2ea3e02303c7","n = int(input())
m = int(input())
if m%n == 0:
    print(m // n)
else:
    print ((m // n) + 1)

","0.0"
"d658f071-1e55-45e3-b3ad-e9384d03b9b9","
a,b,c=map(int,input().split())
n=a
if n<b<c:
    print(b)
else:
    print(c)","0.0"
"0ef5465b-370a-4084-bd37-fb4d3b6b398a","a=int(input())
b=a//10%10
print(b)","0.0"
"b85b4d55-02c5-4f5b-9c58-538068bf5699","a,d,c=map(int,input().split())
x=a//2+a%2
y=d//2+d%2
v=c//2+c%2
f=x+y+v
print(f)","0.0"
"1c8423df-d978-4e69-b8d5-886b1c2c745b","m=int(input())
n=int(input())
s=m*60+n+90
k=s//60
f=s%60
print(k,f)
","0.0"
"0c04c2f7-1548-4fa7-afc6-5ef064ea3a9f","ï»¿a=int(input())
b=a//100
c=a//10%10
d=a%100%10
s=(b*10+d)
print(s)
","0.0"
"74a21b08-f61e-495f-a883-f02328dc4dae","a=int(input())
b=a//100
c=a//10%10
d=a%100%10
s=b+c+d
print(s)
","0.0"
"53c6ed65-d137-4acc-97ec-8200a4ee1eb6","s = 0
n,r = map(int,input().split())
for i in range(n):
    x,y = map(int,input().split())
    if x**2 + y**2 < r**2:
        s+=1
print(s)

","0.0"
"33cf3c19-292d-4544-a9a5-0e2a3c965272","s = 0
sp = input().split(' ')
for i in range(20):
    if int(sp[i]) < 100 and int(sp[i]) % 10 == 0 and int(sp[i]) != 0:
        s+=1
print(s)

","0.0"
"66cdaa4c-6fe2-43ac-9cc8-08f59916608f","ï»¿a=int(input())
b=int(input())
x=a+b
y=a*6+b*8
print(x,y)
","0.0"
"aab4a01c-6efb-47a1-8fa2-2ea3e02303c7","n=int(input())
m=int(input())
if m%n==0:
    print(m//n)
else:
    print(m//n+1)","0.0"
"d658f071-1e55-45e3-b3ad-e9384d03b9b9","a,b,c=map(int,input().split())

if a<b<c:
    print(b)
elif b<a<c:
    print(a)
else:
    print(c)
","0.0"
"c9e1ff81-5755-43cb-8439-49ef952f622a","a,b=map(int,input().split())
m=a
if m<b:
    m=b
print(m)","0.0"
"5773ddc5-745f-44f7-aab7-59268bb9c5cd","ï»¿a,b,c=map(int,input().split())
x,y,v=map(int,input().split())
s=a*3600+b*60+c
f=x*3600+y*60+v
d=f-s
print(d)

","0.0"
"2488a6a1-fc84-46c8-bd28-ea8791f78298","
a=int(input())
b=int(input())
n=int(input())
d=a*100+b
f=(d*n)//100
g=(d*n)%100
print(f, g)","0.0"
"f2d92959-39d9-49fe-a9b1-5868567eeedf","a=int(input())
f=a*2.54
print(""{:1.0f}"".format(f))","0.0"
"06a06b1c-da2e-4210-b889-371de309b82f","n = int(input())
sp = input().split(' ')
pol = 0
nul = 0
otr = 0
for i in range(n):
    if int(sp[i]) == 0:
        nul+=1
    if int(sp[i]) > 0:
        pol+=1
    if int(sp[i]) < 0:
        otr+=1
print(nul,pol,otr)
","0.0"
"ebc1af65-7f28-4308-a3c3-07335f379d84","x = int(input())
k = 0
for i in range (1,x+1):
    if x%i == 0:
        k = k + 1
print(k,end=' ')","0.0"
"4c5a1413-e27d-4b6a-b218-bc8e2a3ade0e","x = int(input())
for i in range (1,x+1):
    if x%i == 0:
        print(i,end=' ')
","0.0"
"fe35f9e7-0b58-461f-9278-39f03054e886","a,b = map(int,input().split())

for i in range(a,b+1):
    if i**0.5 == int(i**0.5):
        print(i,end =' ')



","0.0"
"f9af70f9-5fce-423e-94c5-b6f357e5242c","a = int(input())
n = int(input())
k = 0
for i in range(n+1):
    k =k + a**i
print(k)","0.0"
"b4e8d0e8-b2b3-4675-a090-16c08e1e936c","n = int(input())
f = 1
for i in range(n):
    i = i + 1
    f = i*f
print(f)
    
","0.0"
"3e320d9a-cc8f-4ee0-867c-a570153011f6","x = input()
print(int(x,2))

","0.0"
"1038fcef-65cc-4f6b-bde1-5d7d3bffea34","x = str(input())
print(x.replace(' ', ''))
","0.0"
"e5e8f4d5-0b0f-4a52-b5a7-12f8ef0a52f0","a= float(input())
b = float(input())
c = float(input())
m = a
if b >m:
    m = b
if c > m:
    m = c

mi = a
if mi > b:
    mi = b
if mi > c:
    mi = c

sr = a+b+c
sr = sr-(mi+m)
mi = int(mi)
sr = int(sr)
m = int(m)
print(mi,sr,m)
","0.0"
"e5e8f4d5-0b0f-4a52-b5a7-12f8ef0a52f0","a = float(input())
b = float(input())
c = float(input())
m = a
if b >m:
    m = b
if c > m:
    m = c

mi = a
if mi > b:
    mi = b
if mi > c:
    mi = c

sr = a+b+c
sr =sr-(mi+m)
mi = round(mi)
sr = round(sr)
m = round(m)
print(mi,sr,m)","0.0"
"e5e8f4d5-0b0f-4a52-b5a7-12f8ef0a52f0","a = float(input())
b = float(input())
c = float(input())
m = a
if b >m:
    m = b
if c > m:
    m = c

mi = a
if mi > b:
    mi = b
if mi > c:
    mi = c

sr = a+b+c
sr =sr-(mi+m)
mi = int(mi)
sr = int(sr)
m = int(m)
print(mi,sr,m)
","0.0"
"311d9bb7-84d8-4a04-9af9-fba11c6f224b","a,b = map(int, input().split())
print(a**b)","0.0"
"eabdf11f-d1f1-44e0-8017-20e8e541ec68","a = int(input()) 
b = int(input())
c = int(input()) 
if a + b > c and a + c > b and b + c > a:
    print('YES')
else:
    print('NO')","0.0"
"1ff5a639-82a9-46d5-99e8-90b0529a5016","n = float(input())
stI = n//3
stO = int((n%3)/2 + 0.5)
print (int(stI+stO))","0.0"
"5d02ab7a-4394-4098-9f7a-ed3912083888","h = int(input())
m = int(input())
vr = m + (h*60)
vr = vr + 75
h = (vr//60)%24
m = vr%60
print(h,m)

","0.0"
"091ddb60-bc05-4be5-808d-ce061c459e3e","s = int(input())
a = int(input())
print(s//a)","0.0"
"fe35f9e7-0b58-461f-9278-39f03054e886","a,b = map(int,input().split())

for i in range(0,b):
    if i*i >= a and i * i <=b:
        print(i*i,end =' ')

","0.0"
"fe35f9e7-0b58-461f-9278-39f03054e886","a,b = map(int,input().split())

for i in range(1,b):
    if i*i >= a and i * i <=b:
        print(i*i,end =' ')
","0.0"
"66c9f51f-8598-480d-85ef-3830594163ab","n = int(input())
if n % 3 == 0:
    print(n//3,3)
else:
    print(n//3 + 1,n%3)
","0.0"
"c7512b39-389d-4ddb-b3fe-5475bd01a088","a = int(input())
b = int(input())
k = a + b
u = 0
for i in range(10):
    s = int(input())
    u = u + 1
    if k == s:
        print(u)
        break
","0.0"
"5362054a-bc83-4623-867a-66a72e38b366","n = int(input())
k = 0
s = 0
while s < n:
    k = (k * 2)+1
    s = k + s
if s == n:
    print('YES')
else:
    print('NO')

","0.0"
"4b28d852-6b47-4db4-aa6b-099ecb0e7a8b","n = int(input())
while n != 1:
    if n % 2 == 0:
        print(n)
        n = n // 2
    else:
        print(n)
        n = (n*3+1)//2
print(n)","0.0"
"15420900-ca97-49e3-846a-13bd92d9bace","n = input()
k = len(n)
for i in range(k):
    print(n[k-1:k])
    k = k-1","0.0"
"4659a273-9c89-4ff8-a1bd-6d0ae87e9915","n = int(input())
if n == 1 or n // 10 == 1 and n !=11:
    print(n,'mag')
else:
    if n // 10 == 2 or n // 10 == 3 or n // 10 == 4:
        print(n,'maga')
    else:
        print(n,'magov')
","0.0"
"f9f08d20-e4e6-49ac-8682-f4b7100928a4","a = int(input())
b = int(input())
d = int(input())
if a-d >= 4 and b-d >=4:
    print('YES')
else:
    print('NO')
","0.0"
"94224cd9-666a-4814-8edb-60beb14ea59a","d = int(input())
m = int(input())
y = int(input())
if y != 2010:
    print('NO')
else:
    if m == 9:
        if d != 1:
            print('NO')
        else:
            print('YES')
    else:
        if m > 9:
            print('NO')
        else:
            print('YES')
","0.0"
"c9e1ff81-5755-43cb-8439-49ef952f622a","a,b=map(int,input().split())
if a>b:
    print(a)
else:
    print(b)","0.0"
"1c8423df-d978-4e69-b8d5-886b1c2c745b","m = int(input())
n = int(input())
n = n + m * 60 + 90
h = n // 60
v = n % 60
print(h, v)","0.0"
"0c04c2f7-1548-4fa7-afc6-5ef064ea3a9f","x = int(input())
a = x // 100
c = x % 10
a = a * 10
print(a + c)","0.0"
"2488a6a1-fc84-46c8-bd28-ea8791f78298","a = int(input()) 
b = int(input()) 
n = int(input()) 
d = n*(100*a+b)
print(d//100,d%100)","0.0"
"177f714d-8f2d-4630-8a45-86b5a1799099","a,b,h=map(int,input().split())
m,k=map(int,input().split())
if ((h<=k and b<=k) or (h<=k and a<=k) or (a<=k and b<=k)):
    print(""YES"")
else:
    print(""NO"")","0.0"
"177f714d-8f2d-4630-8a45-86b5a1799099","a,b,h=map(int,input().split())
m,k=map(int,input().split())
if ((h <= k and b <=k) or (h<=k and a <=k) or (a <= k and b <= k)):
    print(""YES"")
else:
    print(""NO"")","0.0"
"177f714d-8f2d-4630-8a45-86b5a1799099","a,b,h=map(int,input().split())
m,k=map(int,input().split())
if ((h <= k and b <=k) or (h<=k and a <=k) or (a <= k and b <= k)):
    print(""YES"")
else:
    print(""NO"")","0.0"
"4b1be5b6-131a-4853-bf20-dadf3bbd10d9","h = int(input())
a = int(input())
b = int(input())
print((h-b-1)//(a-b)+1)","0.0"
"aab4a01c-6efb-47a1-8fa2-2ea3e02303c7","from math import ceil
n = int(input())
m = int(input())
print(ceil(m / n))","0.0"
"aab4a01c-6efb-47a1-8fa2-2ea3e02303c7","from math import ceil
a = int(input())
b = int(input())
print(ceil(b / a))","0.0"
"d658f071-1e55-45e3-b3ad-e9384d03b9b9","a, b, c = map(int,input().split())
if a > b and a < c or a < b and a > c:
    print(a)
elif b > a and b < c or b < a and b > c:
    print(b)
else:
    print(c)","0.0"
"cb96b982-37a0-487b-8b5c-67d27e6f7094","import random
k=int(input())
x=random.randint(0,1440) 
h= k//60%60
m =k%60
print(h,m)","0.0"
"66cdaa4c-6fe2-43ac-9cc8-08f59916608f","b=int(input())
a=int(input())
x=a+b
y=a*6+b*8
print(x,y)","0.0"
"66cdaa4c-6fe2-43ac-9cc8-08f59916608f","b=int(input())
a=int(input())
y=a*6+b*8
x=a+b
print(x,y)","0.0"
"0c04c2f7-1548-4fa7-afc6-5ef064ea3a9f","a=int(input())
x=a//100
y=a%10%10
c=x*10+y
print(c)","0.0"
"4cadd9be-89f5-4d54-b38d-f823b7087153","a, b = map(int, input().split())
mas = []
for c in range(a, b + 1):
    if c % 2 == 0:
        mas.append(c)
print(*mas)
","0.0"
"f9af70f9-5fce-423e-94c5-b6f357e5242c","a = float(input())
n = int(input())
s = 1 + a
i = 2
for b in range(n-1):
    s += a**i
    i += 1
if int(s) != s:
    print(s)
else: 
    print(int(s))","0.0"
"4c5a1413-e27d-4b6a-b218-bc8e2a3ade0e","ï»¿x = int(input())
mas = []
for a in range(1, x+1):
    if x % a == 0:
        mas.append(a)
print(*mas)
","0.0"
"3bda5701-c742-4f44-9bdb-d4b772de2705","a,b=map(int,input().split())
m,n=map(int,input().split())
if (a<=m and b<=n) or(b<=m and a<=n):
    print(""YES"")
else:
    print(""NO"")
","0.0"
"5b2cb964-e915-4506-b4fe-22b78644939c","a=int(input())
b=int(input())
c=int(input())
if a==b and c==b and a==c:
    print(""3"")
elif a==b and b!=c:
    print(""2"")
elif a==c and a!=b:
    print(""2"")
elif b==c and c!=a:
    print(""2"")
else:
    print(""0"")","0.0"
"bbb640ed-435c-4dc9-8625-87b81a5a9b22","x,y=map(int,input().split())
if x>0 and y>0:
    print(""1"")
elif x<0 and y>0:
    print(""2"")
elif x<0 and y<0:
    print(""3"")
else:
    print(""4"")","0.0"
"9428daf6-0093-444b-a8fb-cef9003392e2","a=int( input())
b=int( input())
c=int( input())
if b>a<c:
    print(a)
elif a>b<c:
    print(b)
else :
    print(c) 
 

","0.0"
"5b2cb964-e915-4506-b4fe-22b78644939c","a=int(input())
b=int(input())
c=int(input())
if a==b and a==c and c==b:
    print(""3"")
elif a==c and b!=a:
    print(""2"")
elif a==b and b!=c:
    print(""2"")
elif b==c and b!=a:
    print(""2"")
else:
    print(""0"")
","0.0"
"d658f071-1e55-45e3-b3ad-e9384d03b9b9","a,b,c=map(int,input().split())
if a>b and a<c:
    print(a)
elif b>a and b<c:
    print(b)
else:
    print(c)
","0.0"
"cb96b982-37a0-487b-8b5c-67d27e6f7094","k=int(input())
h=k//60
m=(k%60)
print(h,m)
","0.0"
"0c04c2f7-1548-4fa7-afc6-5ef064ea3a9f","ï»¿a=int(input())
b=a%10
d=a//10%10
c=a//100
c=c*10
print(b+c)


","0.0"
"74a21b08-f61e-495f-a883-f02328dc4dae","a=int(input())
d=a//100
b=a//10%10
c=a%10
s=d+b+c
print(s)
","0.0"
"bbb640ed-435c-4dc9-8625-87b81a5a9b22","x,y=map(float,input().split())
if x>0 and y>0:
    print(1)
if x>0 and y<0:
    print(4)
if x<0 and y<0:
    print(3)
if x<0 and y>0:
    print(2)","0.0"
"39cd4d3c-2ead-4da6-a322-b3be4be280c7","m, s = [int(i) for i in input().split()]
p, q = [int(i) for i in input().split()] 
s = 48*60-m*60-s
tr = s // 24
if tr % 2 == 0:
    print(p + tr//2*3, q + tr//2*2)
else:
    print(p + (tr//2+1)*3, q + tr//2*2)
","0.0"
"177f714d-8f2d-4630-8a45-86b5a1799099","a, b, h = sorted([int(i) for i in input().split()])
m, k = sorted([int(i) for i in input().split()])
if a <= m and b <= k or b <= m and h <= k or a <= m and h <= k:
    print('YES')
else:
    print('NO')
    
","0.0"
"3bda5701-c742-4f44-9bdb-d4b772de2705","x, y = sorted([int(i) for i in input().split()])
a, b = sorted([int(i) for i in input().split()])
if a >= x and b >= y:
    print('YES')
else:
    print('NO')
    
","0.0"
"0ef5465b-370a-4084-bd37-fb4d3b6b398a","a = input()
print(a[-2])
","0.0"
"74a21b08-f61e-495f-a883-f02328dc4dae","a = int(input())
print(a%10 + a//100 + a%100//10)","0.0"
"5b2cb964-e915-4506-b4fe-22b78644939c","a = int(input())
b = int(input())
c = int(input())
if a==b and c==b and a==c:
    print(3)
if a==b and c!=b:
    print(2)
if a==c and c!=b:
    print(2)
if b==c and c!=a:
    print(2)
if a!=b and b!=c and a!=c:
    print(0)
","0.0"
"18bbabdd-799e-47e6-b085-3698d76792e0","p = int(input())
a = p//4
print (a)
","0.0"
"091ddb60-bc05-4be5-808d-ce061c459e3e","s = int(input())
a = int(input())
b = s//a
print (b)","0.0"
"e51d6308-c0be-44b6-ba3d-c238a0d8e4a1","k = int(input())
l = int(input())
n = int(input())
s = int(input())
if k+n*s>=l:
    print('YES')
else:
    print('NO')","0.0"
"9cf4d5af-4fda-4443-9613-82dff00ab963","c = 0
d = 0
for i in range(4):
    a,b=map(int,input().split())
    c += a
    d += b
if c>d:
    print(1)
elif c<d:
    print(2)
else:
    print('DRAW')","0.0"
"3bda5701-c742-4f44-9bdb-d4b772de2705","a,b=sorted(map(int,input().split()))
m,k=sorted(map(int,input().split()))
if m>=a and k>=b:
    print(""YES"")
else:
    print(""NO"")","0.0"
"5b2cb964-e915-4506-b4fe-22b78644939c","a = int(input())
b = int(input())
c = int(input())
d = 0
if a == b:
    d=2
if b == c:
    d=2
if a == c:
    d=2
if a == b == c:
    d = 3
if d == 0:
    print(0)
print(d)","0.0"
"c9e1ff81-5755-43cb-8439-49ef952f622a","a,b = map(int,input().split())
print(max(a,b))","0.0"
"1c8423df-d978-4e69-b8d5-886b1c2c745b","m = int(input())+1
n = int(input())+30
print((m+n//60)%24,n%60)","0.0"
"5ae76e60-094f-4777-acc2-83ebca17f84c","coding = zip(
    [100, 90, 50, 40, 10, 9, 5, 4, 1],
    [""C"", ""XC"", ""L"", ""XL"", ""X"", ""IX"", ""V"", ""IV"", ""I""]
)


def decToRoman(num):
    result = []
    for d, r in coding:
        while num >= d:
            result.append(r)
            num -= d
    return ''.join(result)

num = input()
print(decToRoman(int(num)))
","0.0"
"18bbabdd-799e-47e6-b085-3698d76792e0","p = int(input())
print(p//4)
","0.0"
"a34bd4d0-cc64-4d5c-ac41-7578aa90494e","ï»¿a = int(input())
b = int(input())
c = int(input())
print(a+b+c)
","0.0"
"3bda5701-c742-4f44-9bdb-d4b772de2705","ï»¿a,b=map(int,input().split())
m,k=map(int,input().split())
if (a<m and b<k) or (a<m and b==k) or (a==m and b<k):
    print('YES')
else:
    print('NO')
","0.0"
"3bda5701-c742-4f44-9bdb-d4b772de2705","ï»¿a,b=map(int,input().split())
m,k=map(int,input().split())
if (a<m and b<k) or (a==m and b==k) or (a<m and b==k) or (a==m and b<k):
    print('YES')
else:
    print('NO')
","0.0"
"5b2cb964-e915-4506-b4fe-22b78644939c","ï»¿a=int(input())
b=int(input())
c=int(input())
if a==b and b==c:
    print(3)
if (a==b and b!=c) or (a==c and b!=c) or (c==b and a!=c):
    print(2)
if a!=b and b!=c and a!=c:
    print(0)
","0.0"
"5773ddc5-745f-44f7-aab7-59268bb9c5cd","ï»¿a,b,c=map(int,input().split())
x,y,z=map(int,input().split())
s1=a*3600+b*60+c
s2=x*3600+y*60+z
print(s2-s1)
","0.0"
"9428daf6-0093-444b-a8fb-cef9003392e2","ï»¿a=int(input())
b=int(input())
c=int(input())
mini=0
if a<b and a<c:
    mini=a
if b<a and b<c:
    mini=b
if c<a and c<b:
    mini=c
print(mini)
    
    
","0.0"
"fe35f9e7-0b58-461f-9278-39f03054e886","a = int(input())
b = int(input())

for i in range(a,b+1):
    if i**0.5 == int(i**0.5):
        print(i,end =' ')



","0.0"
"fe35f9e7-0b58-461f-9278-39f03054e886","a,b = map(int,input().split())

for i in range(a,b+1):
    if i**0.5 == int(i**0.5):
        print(i,end =' ')

","0.0"
"ce727aeb-b2aa-4da5-be32-636ce90da78c","a,b,c,d = map(int, input().split())
for i in range(a,b+1):
    if i % d == c:
        print(i,end=' ')","0.0"
"4cadd9be-89f5-4d54-b38d-f823b7087153","a,b = map(int, input().split())
for i in range (a,b+1):
    if i%2 == 0:
        print(i,end=' ')","0.0"
"f9af70f9-5fce-423e-94c5-b6f357e5242c","a = int(input())
n = int(input())
k = 0
for i in range(n+1):
    k = k + a**i
print(k)

","0.0"
"4659a273-9c89-4ff8-a1bd-6d0ae87e9915","n = int(input())
n = n - 2
s = n%10
f = n//10
if s == 1 and n != 11:
    print(n,'mag')
elif (n % 10 == 2 or n % 10 == 3 or n%10 == 4) and (n!=12 and n!=13 and n!=14):
        print(n,'maga')
else:
    print(n,'magov')

","0.0"
"4659a273-9c89-4ff8-a1bd-6d0ae87e9915","n = int(input())
n = n - 2
s = n%10
f = n//10
if s == 1 and n != 11:
    print(n,'mag')
elif (n % 10 == 2 or n % 10 == 3 or n%10 == 4) and (n!=12 or n!=13 or n!=14):
        print(n,'maga')
else:
    print(n,'magov')
","0.0"
"f9f08d20-e4e6-49ac-8682-f4b7100928a4","a = int(input())
b = int(input())
d = int(input())
a = min(a,b)
if d<=a-4:
    print('YES')
else:
    print('NO')
","0.0"
"3e320d9a-cc8f-4ee0-867c-a570153011f6","x = input()
print(int(x,2))
","0.0"
"e5e8f4d5-0b0f-4a52-b5a7-12f8ef0a52f0","a = float(input())
b = float(input())
c = float(input())
m = a
if b >m:
    m = b
if c > m:
    m = c

mi = a
if mi > b:
    mi = b
if mi > c:
    mi = c

sr = a+b+c
sr =sr-(mi+m)
mi = int(mi)
sr = int(sr)
m = int(m)
print(mi,sr,m)","0.0"
"4659a273-9c89-4ff8-a1bd-6d0ae87e9915","n = int(input())
if n == 1 and n !=11:
    print(n,'mag')
else:
    if 1 < n < 5 or n // 10 == 2 or n // 10 == 3 or n // 10 == 4 and n != 12 and n != 13 and n != 14:
        print(n,'maga')
    else:
        print(n,'magov')","0.0"
"e5e8f4d5-0b0f-4a52-b5a7-12f8ef0a52f0","a = int(input())
b = int(input())
c = int(input())
m = a
if b >m:
    m = b
if c > m:
    m = c

mi = a
if mi > b:
    mi = b
if mi > c:
    mi = c

sr = a+b+c
sr =sr-(mi+m)
print(mi,sr,m)
","0.0"
"f2d92959-39d9-49fe-a9b1-5868567eeedf","palR = int(input())
palR = round(palR * 2.54)
print(palR)","0.0"
"190516a0-6ed3-4c42-9f36-dc481a3adb70","a = int(input())
b = int(input())
print(a+b)","0.0"
"431be734-39e6-4f58-aec7-61e67c8ee1b5","year = int(input())
if year % 4 == 0 and year % 400 == 0:
    print('YES')
else:
    print('NO')
","0.0"
"a809c102-e8a6-45ff-9baa-9a998d1927f1","n = int(input())
m = int(input())
for i in range(m):
    n = n * 2 + n
    print(n)
","0.0"
"af34735a-a422-4900-a41c-ce3188000595","n = int(input())
for i in range(n):
    print('I must not tell lies')
","0.0"
"4659a273-9c89-4ff8-a1bd-6d0ae87e9915","n = int(input())
if n == 1 or n // 10 == 1 and n !=11:
    print(n,'mag')
else:
    if 1 < n < 5 or n // 10 == 2 or n // 10 == 3 or n // 10 == 4 and n != 12 and n != 13 and n != 14:
        print(n,'maga')
    else:
        print(n,'magov')","0.0"
"4659a273-9c89-4ff8-a1bd-6d0ae87e9915","n = int(input())
if n == 1:
    print(n,'mag')
else:
    if n // 10 == 2 or n // 10 == 3 or n // 10 == 4:
        print(n,'maga')
    else:
        print(n,'magov')
","0.0"
"777756d6-d867-4cc7-978e-717933384418","n = int(input())
k = 0
while k != n:
    k = k + 1
    name = 'Gryffindor'
    if k == n:
        break
    k = k + 1
    name = 'Slytherin'
    if k == n:
        break
    k = k + 1
    name = 'Ravenclaw'
    if k == n:
        break
    k = k + 1
    name = 'Hufflepuff'
    if k == n:
        break
print(name)
","0.0"
"4659a273-9c89-4ff8-a1bd-6d0ae87e9915","n = int(input())
if n == 1:
    print(n,'mag')
else:
    if n < 5 and n > 1:
        print(n,'maga')
    else:
        print(n,'magov')
","0.0"
"5b2cb964-e915-4506-b4fe-22b78644939c","a=int(input())
b=int(input())
c=int(input())
if a==b==c:
    print(""3"")
elif a==b or b==c or a==c:
    print(""2"")
else:
    print(""0"")","0.0"
"177f714d-8f2d-4630-8a45-86b5a1799099","a,b,h=map(int,input().split())
n,m=map(int,input().split())
if ((h<=n) and (b<=m)) or ((b<=n) and (h<=m)):
    print(""YES"")
elif ((h<=n) and (a<=m)) or ((a<=n) and (h<=m)):
    print(""YES"")
elif ((b<=n) and (a<=m)) or ((a<=n) and (b<=m)):
    print(""YES"")
else:
    print(""NO"")","0.0"
"177f714d-8f2d-4630-8a45-86b5a1799099","a,b,h=map(int,input().split())
m,k=map(int,input().split())
if ((h <= k and b <=k) or (h<=k and a <=k) or (a <= k and b <= k)):
    print(""YES"")
else:
    print(""NO"")","0.0"
"177f714d-8f2d-4630-8a45-86b5a1799099","a,b,h=map(int,input().split())
m,k=map(int,input().split())
if ((h <= k and b <=k) or (h<=k and a <=k) or (a <= k and b <= k)):
    print(""YES"")
else:
    print(""NO"")","0.0"
"177f714d-8f2d-4630-8a45-86b5a1799099","a,b,h=map(int,input().split())
m,k=map(int,input().split())
if ((h <= k and b <=k) or (h<=k and a <=k) or (a <= k and b <= k)):
    print(""YES"")
else:
     print(""NO"")","0.0"
"66cdaa4c-6fe2-43ac-9cc8-08f59916608f","a=int(input())
b=int(input())
y=a*6+b*8
x=a+b
print(x,y)
","0.0"
"66cdaa4c-6fe2-43ac-9cc8-08f59916608f","b=int(input())
a=int(input())
x=a+b
y=a*6+b*8
print(x,y)","0.0"
"0c04c2f7-1548-4fa7-afc6-5ef064ea3a9f","a=int(input())
print((a//100)*10+a%10)
","0.0"
"74a21b08-f61e-495f-a883-f02328dc4dae","ï»¿x=int(input())
print((x//100)+(x%100)//10+x%10)
","0.0"
"efe1a482-a2db-4971-a769-8b60a0beaf64","n = int(input())
b = input()
mas = b.split()
k = 0
for a in range(n-1):
    if int(mas[a+1]) < int(mas[a]) and int(mas[a-1]) < int(mas[a]):
        k += 1
print(k)
","0.0"
"35d772a5-7770-4a91-9118-ad11e4ae7feb","n = int(input())
b = input()
mas = b.split()
k = 0
for a in range(n-1):
    if int(mas[a+1]) >= int(mas[a]):
        k += 1
print(k)
","0.0"
"ce727aeb-b2aa-4da5-be32-636ce90da78c","a = int(input())
b = int(input())
c = int(input())
d = int(input())
mas = []
for e in range(a, b + 1):
    if e % d == c:
        mas.append(e)
if len(mas) == 0:
    g = 6
else:
    print(*mas)","0.0"
"f9af70f9-5fce-423e-94c5-b6f357e5242c","a = float(input())
n = int(input())
s = 1 + a
i = 2
for b in range(n-1):
    s += a**i
    i += 1
try:
    print(int(s))
except:
    print(s)","0.0"
"f9af70f9-5fce-423e-94c5-b6f357e5242c","a = int(input())
n = int(input())
s = 0
for b in range(n+1):
    s += a**b
print(s)","0.0"
"4c5a1413-e27d-4b6a-b218-bc8e2a3ade0e","x = int(input())
mas = []
for a in range(1, x // 2 + 1):
    if x % a == 0:
        mas.append(a)
print(*mas, x)
","0.0"
"bbb640ed-435c-4dc9-8625-87b81a5a9b22","x,y=map(int,input().split())
if x>0 and y>0:
 print(""1"")
elif x<0 and y>0:
 print(""2"")
elif x>0 and y<0:
 print(""4"")
else:
 print(""3"")","0.0"
"4b1be5b6-131a-4853-bf20-dadf3bbd10d9","h=int(input())
a=int(input())
b=int(input())
if (a-b)>1:
    print(h//(a-b))
else:
    print(h-b)
","0.0"
"4b1be5b6-131a-4853-bf20-dadf3bbd10d9","h=int(input())
a=int(input())
b=int(input())
if (a-b)>1:
    print(h//(a-b))
else:
    print(h-(a-b+1))
","0.0"
"2488a6a1-fc84-46c8-bd28-ea8791f78298","a = int(input())
b = int(input())
n = int(input())
print((a * 100 + b) * n//100, (a * 100 + b) * n%100)
","0.0"
"4b1be5b6-131a-4853-bf20-dadf3bbd10d9","h = int(input())
a = int(input())
b = int(input())

res=0
while True:
    if h - a <= 0:
        res += 1
        print(res)
        break
    else:
        h -= a
        h += b
        res += 1
    
","0.0"
"4b1be5b6-131a-4853-bf20-dadf3bbd10d9","long = int(input())
up = int(input())
down = int(input())

if (long - up) % (up - down) == 0:
    print((long - up)//(up-down)+1)
else:
    print(long // (up-down))
","0.0"
"d658f071-1e55-45e3-b3ad-e9384d03b9b9","print(sorted([int(i) for i in input().split()])[1])
","0.0"
"66cdaa4c-6fe2-43ac-9cc8-08f59916608f","a = int(input( ))
b = int(input() )
print(a+b, a*6 + b*8)","0.0"
"cb96b982-37a0-487b-8b5c-67d27e6f7094","a = int(input())
print(a // 60, a % 60, sep="" "")
","0.0"
"1ff5a639-82a9-46d5-99e8-90b0529a5016","import math
print(math.ceil(int(input()) / 3))
","0.0"
"f2d92959-39d9-49fe-a9b1-5868567eeedf","print(int(int(input()) * 2.54))
","0.0"
"bbb640ed-435c-4dc9-8625-87b81a5a9b22","x,y=map(float,input(). split())
if x*y>0:
  if x>0:
    n=1
  else:
    n=3
else:
   if x>0:
    n=4
   else:
      n = 2
print(n)
","0.0"
"5b2cb964-e915-4506-b4fe-22b78644939c","a=int(input())
b=int(input())
c=int(input())
if a==b  and c==b and a==c:
    print(3)
if a==b and c!=b:
    print(2)
if a==c and c!=b:
    print(2)
if b==c and c!=a:
    print(2)
if a!=b and b!=c and a!=c:
    print(0)
","0.0"
"fe35f9e7-0b58-461f-9278-39f03054e886","a,b = map(int,input().split())

for i in range(0,b):
    if i*i >= a and i * i <=b:
        print(i*i,end =' ')

","0.0"
"fe35f9e7-0b58-461f-9278-39f03054e886","a,b = map(int,input().split())

for i in range(a,b+1):
    if i*i >= a and i * i <=b:
        print(i*i,end =' ')

","0.0"
"fe35f9e7-0b58-461f-9278-39f03054e886","a,b = map(int,input().split())

for i in range(a,b):
    if i*i >= a and i * i <=b:
        print(i*i,end =' ')

","0.0"
"ce727aeb-b2aa-4da5-be32-636ce90da78c","a,b,c,d = map(int, input().split())
if b>0: 
    for i in range(a,b+1):
        if i % d == c:
            print(i,end=' ')
else:
    for i in range(a,b-1):
        if i % d == c:
            print(i,end=' ')","0.0"
"ce727aeb-b2aa-4da5-be32-636ce90da78c","a,b,c,d = map(int, input().split())
for i in range(a,b+1):
    if i % d == c:
        print(i,end=' ')","0.0"
"3276b711-2292-488f-9353-be7b86ab5e1a","n = int(input())
print(2**n)","0.0"
"4659a273-9c89-4ff8-a1bd-6d0ae87e9915","n = int(input())
n = n - 2
s = n%10
f = n//10
if s == 1 and n != 11:
    print(n,'mag')
elif (n % 10 == 2 or n % 10 == 3 or n%10 == 4) and (n!=12 or n!=13 or n!=14):
        print(n,'maga')
else:
    print(n,'magov')

","0.0"
"4659a273-9c89-4ff8-a1bd-6d0ae87e9915","n = int(input())
n = n - 2
s = n%10
f = n//10
if s == 1 and n != 11:
    print(n,'mag')
elif (n % 10 == 2 or n % 10 == 3 or n%10 == 4) and (n != 12 or n!=13 or n!=14):
        print(n,'maga')
else:
    print(n,'magov')","0.0"
"4659a273-9c89-4ff8-a1bd-6d0ae87e9915","n = int(input())
s = n%10
f = n//10
if s == 1 and n != 11:
    print(n,'mag')
elif (n % 10 == 2 or n % 10 == 3 or n%10 == 4) and (n != 12 or n!=13 or n!=14):
        print(n,'maga')
else:
    print(n,'magov')","0.0"
"84118453-37c4-4256-a8f0-5dc2707d4e35","x = int(input())
x = bin(x)
y = x[ :1]
if  y == '-':
    print(x[3: ])
else:
    print(x[2: ])","0.0"
"11f5282e-266d-41b6-b87e-01642625b2bd","x = int(input())
y = x
z = x
x = str(bin(x))
y = str(hex(y))
z = str(oct(z))
print(x[2: ])
print(z[2: ])
print(y[2: ])
","0.0"
"84118453-37c4-4256-a8f0-5dc2707d4e35","x = int(input())
x = str(bin(x))
print(x[2: ])","0.0"
"3e320d9a-cc8f-4ee0-867c-a570153011f6","x = input()
print(int(x,2))
 ","0.0"
"e5e8f4d5-0b0f-4a52-b5a7-12f8ef0a52f0","a = float(input())
b = float(input())
c = float(input())
m = a
if b >m:
    m = b
if c > m:
    m = c

mi = a
if mi > b:
    mi = b
if mi > c:
    mi = c

sr = a+b+c
sr =sr-(mi+m)
mi = round(mi)
sr = round(sr)
m = round(m)
print(mi,sr,m)","0.0"
"18bbabdd-799e-47e6-b085-3698d76792e0","n = int(input())
print(n//4)","0.0"
"52fd296b-798f-4462-889c-5b49172bf987","n = int(input())
m = int(input())
k = int(input())
su = n*26 + m*38 + k*42
si = 986 - su
print(si)
","0.0"
"08f18ec8-c939-44c6-b125-642f6a2341fa","n = int(input())
Gr = 6*n//8
Ga = n // 8
Ro = n // 8
print(Ga,Ro,Gr)
","0.0"
"1ff5a639-82a9-46d5-99e8-90b0529a5016","n = float(input())
stI = n//3
stO = int((n%3)/2 + 0.5)
print (int(stI+stO))","0.0"
"f2d92959-39d9-49fe-a9b1-5868567eeedf","palR = int(input())
palR = int(palR * 2.54)
print(palR)","0.0"
"5b6da202-e075-48fb-a015-421187973431","v = int(input())
t = int(input())
print(v*t)","0.0"
"901dd977-9e8b-4b54-9730-6aeaa9d4a9e7","n = int(input())
print(90 - n)","0.0"
"0cc69b6a-3909-441a-a329-8b2c81413bb0","n = int(input())
print(n // 10)","0.0"
"bd77bd8e-1bf2-4a3b-b674-9eddb5375116","n = int(input())
for i in range(2,n+1):
    if n % i == 0:
        print(i)
        break
","0.0"
"5d02ab7a-4394-4098-9f7a-ed3912083888","h = int(input())
m = int(input())
h1 = h + 1
m1 = m + 15
if m1 > 59:
    h1 = h1 + 1
    m1 = m1 - 60
if h1 > 23:
    h1 = h1 - 24
print(h1,m1)
","0.0"
"aab4a01c-6efb-47a1-8fa2-2ea3e02303c7","n=int(input())
m=int(input())
d=m//n
if m%n==0:
    print(d)
else:
    print(d+1)","0.0"
"d658f071-1e55-45e3-b3ad-e9384d03b9b9","a,b,c=map(int,input().split())
if a>b and a<c:
    print(a)
elif b>a and b<c:
    print(b)
else:
    print(c)
","0.0"
"9428daf6-0093-444b-a8fb-cef9003392e2","a=int(input())
b=int(input())
c=int(input())
if a<b and a<c:
    print(a)
elif b<a and b<c:
    print(b)
else:
    print(c)","0.0"
"cb96b982-37a0-487b-8b5c-67d27e6f7094","k = int(input())
m = k // 60
h = k % 60
print(m, h)
","0.0"
"74a21b08-f61e-495f-a883-f02328dc4dae","x = int(input())
a = x //100
b = x % 100 // 10
c = x % 10
print(a+b+c)","0.0"
"177f714d-8f2d-4630-8a45-86b5a1799099","a,b,h=map(int,input().split())
m,k=map(int,input().split())
if ((h <= k and b <=k) or (h<=k and a <=k) or (a <= k and b <= k)):
    print(""YES"")
if ((h>k and b>k) or (h>k and a>k) or (a>k and b>k)):
    print(""NO"")","0.0"
"177f714d-8f2d-4630-8a45-86b5a1799099","a,b,h=map(int,input().split())
m,k=map(int,input().split())
if ((h <= k and b <=k) or (h<=k and a <=k) or (a <= k and b <= k)):
    print(""YES"")
else:
    print(""no"")","0.0"
"3bda5701-c742-4f44-9bdb-d4b772de2705","a,b=map(int,input().split())
m,k=map(int,input().split())
s=a*b
l=m*k 
if l>s:
    print(""YES"")
else:
     print(""NO"")
","0.0"
"bbb640ed-435c-4dc9-8625-87b81a5a9b22","x, y = map(float, input().split())
if x*y > 0:
    if x > 0:
        n = 1
    else:
        n = 3
else:
    if x > 0:
        n = 4
    else:
        n = 2
print(n)","0.0"
"5b2cb964-e915-4506-b4fe-22b78644939c","a = int(input())
b = int(input())
c = int(input())
if a==b and c==b and a==c:
    print(3)
if a==b and c!=b:
    print(2)
if a==c and c!=b:
    print(2)
if b==c and c!=a:
    print(2)
if a!=b and b!=c and a!=c:
    print(0)
","0.0"
"5b2cb964-e915-4506-b4fe-22b78644939c","a = int(input())
b = int(input())
c = int(input())
d = 0
if a == b:
    d=2
if b == c:
    d=2
if a == c:
    d=2
if a == b == c:
    d = 3
if d == 0:
    print(0)
else:
    print(d)","0.0"
"0ef5465b-370a-4084-bd37-fb4d3b6b398a","a = int(input())
print(a//10%10)","0.0"
"5773ddc5-745f-44f7-aab7-59268bb9c5cd","a,b,c = map(int,input().split())
a1,b1,c1 = map(int,input().split())
print((a1*3600+b1*60+c1)-(a*3600+b*60+c))
","0.0"
"e5e8f4d5-0b0f-4a52-b5a7-12f8ef0a52f0","a = int(input())
b = int(input())
c = int(input())
d = [a, b, c]
for i in range(3):
    print(min(d), end=' ')
    d.remove(min(d))","0.0"
"e5e8f4d5-0b0f-4a52-b5a7-12f8ef0a52f0","a = int(input())
b = int(input())
c = int(input())
d = [a, b, c]
for i in range(3):
    if i == 3:
        print(min(d), end='')
    else:
        print(min(d), end=' ')
    d.remove(min(d))","0.0"
"901dd977-9e8b-4b54-9730-6aeaa9d4a9e7","u = int(input())
print(90-u)","0.0"
"80f0773c-d8da-4f89-8ff8-f91226bfbbba","a = int(input())
print(a*a*a)","0.0"
"5b6da202-e075-48fb-a015-421187973431","ï»¿v = int(input())
t = int(input())
print(v*t)
","0.0"
"3bda5701-c742-4f44-9bdb-d4b772de2705","ï»¿a,b=map(int,input().split())
m,k=map(int,input().split())
if (a<m and b<k) or (a==m and b==k) or (a<m and b==k) or (a==m and b<k) or (a>m and b<k) or (a<m and b>k):
    print('YES')
else:
    print('NO')
","0.0"
"bbb640ed-435c-4dc9-8625-87b81a5a9b22","x,y=map(int,input().split())
if x>0 and y>0:
    print(1)
if x>0 and y<0:
    print(4)
if x<0 and y>0:
    print(2)
if x<0 and y<0:
    print(3)
","0.0"
"180b3b37-5ed9-4f3c-9300-48ae0b5121fa","ï»¿a=int(input())
b=int(input())
l=int(input())
n=int(input())
print(((a+b)*2)*(n-1)+l*2+a)
","0.0"
"050f0a60-1200-4dec-acb5-12c3b9f24d0d","a = int(input())
b = a//60
print(b)","0.0"
"901dd977-9e8b-4b54-9730-6aeaa9d4a9e7","a = int(input())
b = 180-a-90
print(b)","0.0"
"80f0773c-d8da-4f89-8ff8-f91226bfbbba","a = int(input())
v = a*a*a
print(v)","0.0"
"0cc69b6a-3909-441a-a329-8b2c81413bb0","c = int(input())
d = c//10
print(d)","0.0"
"c9e1ff81-5755-43cb-8439-49ef952f622a","a, b = map(int,input().split())
if a>b:
    print(a)
else:
    print(b)","0.0"
"74a21b08-f61e-495f-a883-f02328dc4dae","a=int(input())
s=a//100+a//10%10+a%10
print(s)","0.0"
"177f714d-8f2d-4630-8a45-86b5a1799099","ï»¿a, b, h = map(int, input().split())
n, m = map(int, input().split())
if ((h <= n) and (b <= m)) or ((b <= n) and (h <= m)):
    print(""YES"")
elif ((h <= n) and (a <= m)) or ((a <= n) and (h <= m)):
    print(""YES"")
elif ((b <= n) and (a <= m)) or ((a <= n) and (b <= m)):
    print(""YES"")
else:
    print(""NO"")","0.0"
"35d772a5-7770-4a91-9118-ad11e4ae7feb","n = int(input())
b = input()
mas = b.split()
k = 0
for a in range(n-1):
    if int(mas[a+1]) > int(mas[a]):
        k += 1
print(k)
","0.0"
"875ec0a5-0a8e-468b-b0f0-1b32c0337354","n = int(input())
b = input()
mas = b.split()
k = 0
for a in range(n):
    if int(mas[a]) >= 0:
        k += 1
print(k)
","0.0"
"f9af70f9-5fce-423e-94c5-b6f357e5242c","a = int(input())
n = int(input())
s = 1 + a
i = 2
for b in range(n-1):
    s += a**i
    i += 1
print(s)","0.0"
"3276b711-2292-488f-9353-be7b86ab5e1a","n = int(input())
print(2**n)","0.0"
"4c5a1413-e27d-4b6a-b218-bc8e2a3ade0e","x = int(input())
mas = []
for a in range(1, x):
    if x % a == 0:
        mas.append(a)
print(*mas, x)
","0.0"
"b4e8d0e8-b2b3-4675-a090-16c08e1e936c","ï»¿n = int(input())
p = 1
for a in range(1, n+1):
    p *= a
print(p)","0.0"
"d658f071-1e55-45e3-b3ad-e9384d03b9b9","a ,b, c=map(int, input().split( ))
if b<a<c:
    print(a)
elif a<b<c:
    print(b)
else:
    print(c)","0.0"
"d658f071-1e55-45e3-b3ad-e9384d03b9b9","a ,b, c=map(int, input().split( ))
if a<b<c:
    print(b)
elif b<a<c:
    print(a)
else:
    print(c)","0.0"
"3bda5701-c742-4f44-9bdb-d4b772de2705","a,b=map(int,input().split())
m,k=map(int,input().split())
if ((a<=m) and (b<=k)) or ((a<=k) and (b<=m)):
 print(""YES"") 
else:
 print(""NO"")
     
","0.0"
"4b1be5b6-131a-4853-bf20-dadf3bbd10d9","h=int(input())
a=int(input())
b=int(input())
if (a-b)>1:
    print(h//(a-b))
else:
    print((h-a)//(a-b)+1)
","0.0"
"4b1be5b6-131a-4853-bf20-dadf3bbd10d9","h=int(input())
a=int(input())
b=int(input())
if (a-b)>1:
    print(h//(a-b))
else:
    print(h-b)
","0.0"
"e51d6308-c0be-44b6-ba3d-c238a0d8e4a1","k = int(input())
l = int(input())
n = int(input())
s = int(input())
sk = s / 2
if k + s*n >= l + sk*n:
    print('YES')
else:
    print('NO')
    
","0.0"
"e51d6308-c0be-44b6-ba3d-c238a0d8e4a1","k = int(input())
l = int(input())
n = int(input())
s = int(input())
sk = s / 2
if k + s*n > l + sk*n:
    print('YES')
else:
    print('NO')
    
","0.0"
"5b2cb964-e915-4506-b4fe-22b78644939c","a = int(input())
b = int(input())
c = int(input())
if a == b == c:
    print(3)
elif a == b or a == c or b == c:
    print(2)
else:
    print(0)
","0.0"
"b85b4d55-02c5-4f5b-9c58-538068bf5699","from math import ceil
a, b, c = [int(i) for i in input().split()]
print(ceil(a/2)+ceil(b/2)+ceil(c/2))
","0.0"
"aab4a01c-6efb-47a1-8fa2-2ea3e02303c7","from math import ceil
a = int(input())
b = int(input())
print(ceil(b/a))
","0.0"
"9428daf6-0093-444b-a8fb-cef9003392e2","a = int(input())
b = int(input())
c = int(input())
print(min(a, b, c))
","0.0"
"0c04c2f7-1548-4fa7-afc6-5ef064ea3a9f","a = int(input())
print(a//100, a%10, sep="""")","0.0"
"08f18ec8-c939-44c6-b125-642f6a2341fa","a = int(input())
print(a // 8, a // 8, int(a / 8 * 6))","0.0"
"52fd296b-798f-4462-889c-5b49172bf987","n = int(input())
m = int(input())
k = int(input())

pn = n * 26
pm = m * 38
pk = k * 42

print(986 - pn - pm - pk)","0.0"
"3bda5701-c742-4f44-9bdb-d4b772de2705","a,b = map(int, input(). split())
m,k = map(int, input(). split())
if (m>=a and k>=b) or (m>=b and k>=a):
    print(""YES"")
else:
    print(""NO"")","0.0"
"bbb640ed-435c-4dc9-8625-87b81a5a9b22","x, y = map(float, input().split())
if x*y > 0:
   if x > 0:
     n = 1
   else:
     n = 3
else:
    if x > 0:
        n = 4
    else:
        n = 2
print(n)

","0.0"
"a34bd4d0-cc64-4d5c-ac41-7578aa90494e","a = int(input())
b = int(input())
c = int(input())
p = a+b+c
print (p)","0.0"
"901dd977-9e8b-4b54-9730-6aeaa9d4a9e7","a = int(input())
c = 180-90-a
print (c)","0.0"
"80f0773c-d8da-4f89-8ff8-f91226bfbbba","a = int(input())
v = a*a*a
print (v)
","0.0"
"aab4a01c-6efb-47a1-8fa2-2ea3e02303c7","from math import ceil
a = int(input())
b = int(input())
print(ceil(b/a))","0.0"
"180b3b37-5ed9-4f3c-9300-48ae0b5121fa","a = int(input())
b = int(input())
i = int(input())
n = int(input())
print((n-1)*((a+b)*2)+a+i+i)

","0.0"
"2488a6a1-fc84-46c8-bd28-ea8791f78298","a = int(input())
b = int(input())
c = int(input())
print(a*c+b*c//100, b*c%100)","0.0"
"b85b4d55-02c5-4f5b-9c58-538068bf5699","a,b,c = map(int,input().split())
if (a+b+c)%2 == 0:
    print((a+b+c)//2)
else:
    print((a+b+c)//2+1)
","0.0"
"050f0a60-1200-4dec-acb5-12c3b9f24d0d","n = int(input())
print(n//60)","0.0"
"4c5a1413-e27d-4b6a-b218-bc8e2a3ade0e","x = int(input())
for i in range (1,x+1):
    if x%i == 0:
        print(i,end=' ')

","0.0"
"3bda5701-c742-4f44-9bdb-d4b772de2705","ï»¿a,b=map(int,input().split())
m,k=map(int,input().split())
if (a<m and b<k) or (a==m and b==k) or (a<m and b==k) or (a==m and b<k):
    print('YES')
else:
    print('NO')
","0.0"
"180b3b37-5ed9-4f3c-9300-48ae0b5121fa","a=int(input())
b=int(input())
l=int(input())
n=int(input())
print((((a*2)*n)-a)+(b*n)*2+(l*2)-2)
","0.0"
"0ef5465b-370a-4084-bd37-fb4d3b6b398a","ï»¿x=int(input())
print(((x%100)*10)//100)
","0.0"
"2488a6a1-fc84-46c8-bd28-ea8791f78298","a=int(input())
b=int(input())
n=int(input())
k=a*100+b
stK=((k%100)*n)%100
x=(k%100)*n
stR=a*n+(x//100)
print(stR,stK)




","0.0"
"b85b4d55-02c5-4f5b-9c58-538068bf5699","ï»¿from math import *
a,b,c=map(int,input().split())
print(ceil((a+b+c)/2))
","0.0"
"aab4a01c-6efb-47a1-8fa2-2ea3e02303c7","n=int(input())
m=int(input())
if n>m or n==m:
    print(1)
if n<m:
    if m%n==0:
        d=m//n
        print(d)
    else:
        dn=(m//n)+1
        print(dn)
    
","0.0"
"cb96b982-37a0-487b-8b5c-67d27e6f7094","k=int(input())
h=k//60
m=k%60
print(h,m)","0.0"
"f2d92959-39d9-49fe-a9b1-5868567eeedf","ï»¿import math
l=int(input())
x=math.floor(l*2.54)
print(x)
","0.0"
"18bbabdd-799e-47e6-b085-3698d76792e0","a = int(input())
s = a//4
print(s)","0.0"
"091ddb60-bc05-4be5-808d-ce061c459e3e","s = int(input())
a = int(input())
b = s//a
print(b)","0.0"
"5b6da202-e075-48fb-a015-421187973431","v = int(input())
t = int(input())
s = t*v
print(s)","0.0"
"f9af70f9-5fce-423e-94c5-b6f357e5242c","a = int(input())
n = int(input())
k = 0
for i in range(n+1):
    k =k + a**i
print(k)","0.0"
"b4e8d0e8-b2b3-4675-a090-16c08e1e936c","n = int(input())
f = 1
for i in range(1,n+1):
    f = i*f
print(f)
","0.0"
"e5e8f4d5-0b0f-4a52-b5a7-12f8ef0a52f0","a= float(input())
b = float(input())
c = float(input())
m = a
if b >m:
    m = b
if c > m:
    m = c

mi = a
if mi > b:
    mi = b
if mi > c:
    mi = c

sr = a+b+c
sr = sr-(mi+m)
mi = int(mi)
sr = int(sr)
m = int(m)
print(mi,sr,m)

","0.0"
"4659a273-9c89-4ff8-a1bd-6d0ae87e9915","n = int(input())
s = n%10
f = n//10
if s == 1 and n != 11:
    print(n,'mag')
elif (n % 10 == 2 or n % 10 == 3 or n%10 == 4) and (n!=12 or n!=13 or n!=14):
        print(n,'maga')
else:
    print(n,'magov')","0.0"
"3e320d9a-cc8f-4ee0-867c-a570153011f6","x = input()
print(int(x,2))

 ","0.0"
"431be734-39e6-4f58-aec7-61e67c8ee1b5","year = int(input())
if (year % 4 == 0) and (year % 100 != 0) or (year % 400 == 0):
    print('YES')
else:
    print('NO')","0.0"
"050f0a60-1200-4dec-acb5-12c3b9f24d0d","n = int(input())
t = n // 60
print(t)","0.0"
"3e320d9a-cc8f-4ee0-867c-a570153011f6","n=list(input())
d=len(n)
f=0
c=0
h=1
for i in range(0,d):
 f+=int(n[c])*(2**(d-h))
 c+=1
 h+=1
print(f)
","0.0"
"f2d92959-39d9-49fe-a9b1-5868567eeedf","import math
palR = float(input())
palR = palR * 2.54
print(math.floor(palR))","0.0"
"80f0773c-d8da-4f89-8ff8-f91226bfbbba","a = int(input())
print(a**3)","0.0"
"8db514ad-0242-48a9-ab6e-85b0e8171d87","a = int(input())
b = int(input())
k = 0
while a != b:
    k = k + 1
    if a < b:
        b = b - a
    else:
        a = a - b
print(k+1)","0.0"
"75214b1c-bb28-44e5-8474-ac6b45c80db9","n = input()
k = n[::-1]
k = int(k)
n = int(n)
summa = k+n
print(summa)","0.0"
"4659a273-9c89-4ff8-a1bd-6d0ae87e9915","n = int(input())
if n == 1 or n // 10 == 1 and n !=11:
    print(n,'mag')
else:
    if 1 < n < 5 or n // 10 == 2 or n // 10 == 3 or n // 10 == 4:
        print(n,'maga')
    else:
        print(n,'magov')","0.0"
"d48be896-b484-440a-9ca5-2cc0f31533dc","x = int(input())
y = int(input())
x1 = 7
y1 = 3
if (abs(x - x1) == 1 and abs(y-y1)== 2 ) or (abs(x-x1) == 2 and abs(y-y1) == 1):
    print('YES')
else:
    print('NO')","0.0"
"9e9de547-58f5-45b9-a733-37cc732bf237","n = float(input())
m = float(input())
k = n * 2.54
if k > m:
    print('NO')
else:
    print('YES')
","0.0"
"94224cd9-666a-4814-8edb-60beb14ea59a","d = int(input())
m = int(input())
y = int(input())
if y != 2010:
    print('NO')
else:
    if m == 9:
        print('NO')
    else:
        if m > 9:
            print('NO')
        else:
            print('YES')
","0.0"
"94224cd9-666a-4814-8edb-60beb14ea59a","d = int(input())
m = int(input())
y = int(input())
if y != 2010:
    print('NO')
else:
    if m == 9:
        if d != 1:
            print('NO')
    else:
        if m > 9:
            print('NO')
        else:
            print('YES')","0.0"
"52fd296b-798f-4462-889c-5b49172bf987","n = int(input())
m = int(input())
k = int(input())
st = n*26 + m*38 + k*42
si = 986 - st
print(si)
","0.0"
"1ff5a639-82a9-46d5-99e8-90b0529a5016","n = int(input())
if n % 3 == 0:
    print(n//3)
else:
    print(n//3 + 1)
","0.0"
"f2d92959-39d9-49fe-a9b1-5868567eeedf","ï»¿import math
l = float(input())
k = l * 2.54
print(math.floor(k))
","0.0"
"3bda5701-c742-4f44-9bdb-d4b772de2705","a,b=map(int,input().split())
m,k=map(int,input().split())
if (a<=m and b<=k) or (b<=m and a<=k):
    print(""YES"")
else:
    print(""NO"")","0.0"
"3bda5701-c742-4f44-9bdb-d4b772de2705","a,b=map(int,input().split())
m,k=map(int,input().split())
if (a<m and b<k) or (b<m and a<k):
    print(""YES"")
else:
    print(""NO"")","0.0"
"bbb640ed-435c-4dc9-8625-87b81a5a9b22","x,y=map(int,input().split())
if x>0 and y>0:
    print(""1"")
elif x<0 and y>0:
    print(""2"")
elif x>0 and y<0:
    print(""4"")
else:
    print(""3"")","0.0"
"4b1be5b6-131a-4853-bf20-dadf3bbd10d9","h=int(input())
a=int(input())
b=int(input())
x=a-b
d=h//x
if x==1:
    print(d-b)
else:
    print(d)
","0.0"
"b85b4d55-02c5-4f5b-9c58-538068bf5699","a,b,c=map(int,input().split())
print(a//2+b//2+c//2+a%2+b%2+c%2)","0.0"
"177f714d-8f2d-4630-8a45-86b5a1799099","a,b,h=map(int,input().split())
m,k=map(int,input().split())
if ((h <= k and b <=k) or (h<=k and a <=k) or (a <= k and b <= k)):
    print(""YES"")
else:
    print(""NO"")","0.0"
"177f714d-8f2d-4630-8a45-86b5a1799099","a,b,h=map(int,input().split())
m,k=map(int,input().split())
if ((h <= k and b <=k) or (h<=k and a <=k) or (a <= k and b <= k)):
    print(""YES"")
else:
    print(""NO"")","0.0"
"3bda5701-c742-4f44-9bdb-d4b772de2705","a,b=map(int,input().split())
m,k=map(int,input().split())
s=a*b
l=m*k 
if l>=s:
    print(""YES"")
else:
     print(""NO"")
","0.0"
"4b1be5b6-131a-4853-bf20-dadf3bbd10d9","h = int(input())
a = int(input())
b = int(input())
print((h - b - 1) // (a - b) + 1)","0.0"
"9428daf6-0093-444b-a8fb-cef9003392e2","a = int(input())
b = int(input())
c = int(input())
if b>a and a<c:
    print(a)
elif a>b and c>b:
    print(b)
else:
    print(c)
","0.0"
"cb96b982-37a0-487b-8b5c-67d27e6f7094","k=int(input()) 
h= k//60%60
m =k%60
print(h,m)","0.0"
"1c8423df-d978-4e69-b8d5-886b1c2c745b","m=int(input())
n=int(input())
a=m*60+n
b=a+90
print(b//60, b-(b//60)*60)

","0.0"
"66cdaa4c-6fe2-43ac-9cc8-08f59916608f","a=int(input())
b=int(input())
x=a+b
y=a*8+b*6
print(x,y)","0.0"
"ce727aeb-b2aa-4da5-be32-636ce90da78c","a = int(input())
b = int(input())
c = int(input())
d = int(input())
mas = []
for e in range(a, b + 1):
    if e % d == c:
        mas.append(e)
print(*mas)","0.0"
"f9af70f9-5fce-423e-94c5-b6f357e5242c","a = float(input())
n = int(input())
s = 1 + a
i = 2
if a == 0:
    print(n)
else:
    for b in range(n-1):
        s += a**i
        i += 1
    if int(s) != s:
        print(s)
    else:
        print(int(s))","0.0"
"4c5a1413-e27d-4b6a-b218-bc8e2a3ade0e","x = int(input())
mas = []
for a in range(1, round(x ** 0.5) + 1):
    if x % a == 0:
        mas.append(a)
        mas.append(x // a)
mas.sort()
if x ** 0.5 in mas:
    mas.remove(x ** 0.5)
print(*mas)
","0.0"
"c9e1ff81-5755-43cb-8439-49ef952f622a","a,b=map(int, input().split())
if a>b:
    print(a)
else:
    print(b)  ","0.0"
"4b1be5b6-131a-4853-bf20-dadf3bbd10d9","h=int(input())
a=int(input())
b=int(input())
if (a-b)>1:
    print(h//(a-b))
else:
    print(h-b)","0.0"
"aab4a01c-6efb-47a1-8fa2-2ea3e02303c7","from math import ceil
n=int(input())
m=int(input())
if n<m and n>m:
    print(ceil(n/m))
else:
    print(ceil(m/n))

","0.0"
"9428daf6-0093-444b-a8fb-cef9003392e2","a=int(input())
b=int(input())
c=int(input())
if a<b and a<c:
    print(a)
elif b<a and b<c:
    print(b)
else:
        print(c)
    
","0.0"
"c9e1ff81-5755-43cb-8439-49ef952f622a","ï»¿a,b=map(int,input().split())
if a>b:
    print(a)
else:
    print(b)
","0.0"
"1c8423df-d978-4e69-b8d5-886b1c2c745b","m=int(input())
n=int(input())
n=n+m*60+90
h=n//60
v=n%60
print(h,v)
","0.0"
"bbb640ed-435c-4dc9-8625-87b81a5a9b22","x, y = [int(i) for i in input().split()]
if x > 0 and y > 0:
    print(1)
elif x < 0 and y > 0:
    print(2)
elif x < 0 and y < 0:
    print(3)
else:
    print(4)
","0.0"
"180b3b37-5ed9-4f3c-9300-48ae0b5121fa","a = int(input())
b = int(input())
l = int(input())
n = int(input())
print((n*2-2)*b+(n-1)*2*a + a +2*l)
","0.0"
"5773ddc5-745f-44f7-aab7-59268bb9c5cd","h, m, s = [int(i) for i in input().split()]
h1, m1, s1 = [int(i) for i in input().split()]
print(h1*3600 + m1*60 + s1 - h*3600 - m*60 - s)
","0.0"
"c9e1ff81-5755-43cb-8439-49ef952f622a","print(max([int(i) for i in input().split()]))
","0.0"
"1c8423df-d978-4e69-b8d5-886b1c2c745b","m = int(input()) + 1
n = int(input()) + 30
print((m + n // 60) % 24, n % 60)
","0.0"
"5d02ab7a-4394-4098-9f7a-ed3912083888","h = int(input())
m = int(input())
m = m + 15 
h = (h + 1 + m // 60) % 24
m = m % 60
print(h, m)
","0.0"
"3bda5701-c742-4f44-9bdb-d4b772de2705","a,b = map(int, input().split())
m,k = map(int, input().split())
s = a*b
i = m*k
if i>=s:
    print(""YES"")
else:
    print(""NO"")
","0.0"
"050f0a60-1200-4dec-acb5-12c3b9f24d0d","a = int(input())
b = a//60
print (b)","0.0"
"0cc69b6a-3909-441a-a329-8b2c81413bb0","a = int (input())
d = a//10
print (d)","0.0"
"5b6da202-e075-48fb-a015-421187973431","v = int (input())
t = int (input())
s = t*v
print (s)","0.0"
"bbb640ed-435c-4dc9-8625-87b81a5a9b22","x,y = map(int, input().split())
if x>0 and y>0:
    print(1)
elif x < 0 and y > 0:
    print(2)
elif x<0 and y<0:
    print(3)
else:
    print(4)","0.0"
"177f714d-8f2d-4630-8a45-86b5a1799099","a,b,h=map(int,input().split())
n,m=map(int,input().split())
if (a<=n and b<=m) or (a<=m and b<=n):
    print(""YES"")
elif (a<=n and h<=m) or (a<=m and h<=n):
    print(""YES"")
elif (b<=n and h<=m) or (b<=m and h<=n):
    print(""YES"")
else:
    print(""NO"")","0.0"
"4b1be5b6-131a-4853-bf20-dadf3bbd10d9","h = int(input())
a = int(input())
b = int(input())
Ñ=0
while True:
    if h-a<=0:
        Ñ += 1
        print(Ñ)
        break
    else:
        h -= a
        h += b
        Ñ += 1
","0.0"
"d658f071-1e55-45e3-b3ad-e9384d03b9b9","a, b, c = sorted(map(int, input().split()))
print(b)
","0.0"
"9428daf6-0093-444b-a8fb-cef9003392e2","a = int(input())
b = int(input())
c = int(input())
print(min(a,b,c))","0.0"
"b85b4d55-02c5-4f5b-9c58-538068bf5699","from math import ceil
a,b,c = map(int,input().split())
print(ceil(a/2)+ceil(b/2)+ceil(c/2))","0.0"
"cb96b982-37a0-487b-8b5c-67d27e6f7094","k = int(input())
print(k//60, k%60)","0.0"
"f2d92959-39d9-49fe-a9b1-5868567eeedf","import math
l = int(input())
print(math.floor(l*2.54))","0.0"
"091ddb60-bc05-4be5-808d-ce061c459e3e","s = int(input())
a = int(input())
print(s//a)","0.0"
"0cc69b6a-3909-441a-a329-8b2c81413bb0","ï»¿a = input()
print(int(a[0]))
","0.0"
"9cf4d5af-4fda-4443-9613-82dff00ab963","ï»¿a,b=map(int,input().split())
a1,b1=map(int,input().split())
a2,b2=map(int,input().split())
a3,b3=map(int,input().split())
if a+a1+a2+a3>b+b1+b2+b3:
    print(1)
if a+a1+a2+a3<b+b1+b2+b3:
    print(2)
if a+a1+a2+a3==b+b1+b2+b3:
    print('DRAW')
","0.0"
"b85b4d55-02c5-4f5b-9c58-538068bf5699","from math import *
a,b,c=map(int,input().split())
print(ceil(a/2)+ceil(b/2)+ceil(c/2))
","0.0"
"4b1be5b6-131a-4853-bf20-dadf3bbd10d9","ï»¿h=int(input())
a=int(input())
b=int(input())
d=((h-a)-1)//(a-b)+2
print(d)
","0.0"
"d658f071-1e55-45e3-b3ad-e9384d03b9b9","a,b,c=map(int,input().split())
if (a>b and a<c) or (a<b and a>c):
    print(a)
if (b>a and b<c) or (b<a and b>c):
    print(b)
if (c>b and c<a) or (c<b and c>a):
    print(c)
    
","0.0"
"c9e1ff81-5755-43cb-8439-49ef952f622a","a,b=map(int,input().split())
if a>b:
    print(a)
if b>a:
    print(b)

    
","0.0"
"1c8423df-d978-4e69-b8d5-886b1c2c745b","m=int(input())
n=int(input())
a=m*60+n+90
print(a//60,a%60)","0.0"
"a34bd4d0-cc64-4d5c-ac41-7578aa90494e","a = int(input())
b = int(input())
c = int(input())
p=a+b+c
print(p)","0.0"
"177f714d-8f2d-4630-8a45-86b5a1799099","a,b,h=map(int,input().split())
m,k=map(int,input().split())

if((a<=m) or (b<=m) or (h<=m)) and ((a<=k) or (b<=k) or (h<=k)) :
    print(""YES"")
else:
     print(""NO"")
","0.0"
"9428daf6-0093-444b-a8fb-cef9003392e2","a=int(input())
b=int(input())
c=int(input())
if a>b:
    m=b
else:
    m=a
if m>c:
    m=c
print(m)
","0.0"
"c9e1ff81-5755-43cb-8439-49ef952f622a","a,b=map(int, input().split()
        )
if a>b:
    n=a
else:
        n=b
print(n)
","0.0"
"1c8423df-d978-4e69-b8d5-886b1c2c745b","m=int(input())
n=int(input())
k=m*60+n+90
h=k//60
v=k%60

print(h,v)
","0.0"
"9ad8e0ac-34e6-45a9-8f4f-0e8046aec803","
a=int(input())
b=int(input())
mx=0
def inDel( x ):
    inDel=[1]
    for i in range (1,x//2+1):
        if x%i==0:
            inDel.append(i)
    return inDel
for k in range (a,b+1):
    if len(inDel(k))>=mx:
        mx=len(inDel(k))
        a=k
print(mx,a,a//2)","0.0"
"9ad8e0ac-34e6-45a9-8f4f-0e8046aec803","

a=int(input())
b=int(input())
mx=0
def inDel( x ):
    inDel=[1]
    for i in range (1,x//2+1):
        if x%i==0:
            inDel.append(i)
    return inDel
for k in range (a,b+1):
    if len(inDel(k))>=mx:
        mx=len(inDel(k))
        a=k
print(mx,a,a//2)","0.0"
"9ad8e0ac-34e6-45a9-8f4f-0e8046aec803","
a=int(input())
b=int(input())
r=0
mx=0
def inDel( x ):
    inDel=[1]
    for i in range (1,x):
        if x%i==0:
            inDel.append(i)
    return inDel
for k in range (a,b-1):
    if len(inDel(k))>=mx:
        mx=len(inDel(k))
        a=k
print(mx,a,a//2)
","0.0"
"1038fcef-65cc-4f6b-bde1-5d7d3bffea34","s=str(input())
sn=''
for i in range(len(s)):
    if s[i]!=' ':
       sn=sn+s[i]
print(sn)


","0.0"
"abd77e3f-81bd-4c24-afdb-b64873f7c1c3","

n=int(input())
mas=[0]*n
s= input().split()
mas=[int (i) for i in s]
print(round (sum(mas)/n,1))","0.0"
"9cf4d5af-4fda-4443-9613-82dff00ab963","ï»¿a,b=map(int,input().split())
c,d=map(int,input().split())
e,f=map(int,input().split())
g,h=map(int,input().split())
k1=a+c+e+g
k2=b+d+f+h

if k1>k2:
    print(""1"")
elif k1<k2:
    print(""2"")
else:
    print(""DRAW"")



","0.0"
"e51d6308-c0be-44b6-ba3d-c238a0d8e4a1","K=int(input())
L=int(input())
N=int(input())
S=int(input())

st=K+N*S
ko=L+N*(S//2)
if st>ko:
    print(""YES"")
else:
    print(""NO"")","0.0"
"3bda5701-c742-4f44-9bdb-d4b772de2705","a,b=map(int,input().split())
m,k=map(int,input().split())

if((a<=m) and (b<=k)) or ((a<=k) and (b<=m)) :
    print(""YES"")
else:
     print(""NO"")
","0.0"
"5b2cb964-e915-4506-b4fe-22b78644939c","a=int(input())
b=int(input())
c=int(input())
if b==a==c:
    k=3
elif (a==b!=c) or (a==c!=b) or (b==c!=a):
    k=2
else:
    k=0

print(k)
","0.0"
"d658f071-1e55-45e3-b3ad-e9384d03b9b9","a,b,c=map(int,input().split())
if a>b:
    mi=b
else:
    mi=a
if mi>c:
    mi=c

if a<b:
    ma=b
else:
    ma=a
if ma<c:
    ma=c
    
s=a+b+c-mi-ma
print(s)","0.0"
"1ff5a639-82a9-46d5-99e8-90b0529a5016","import math
n=int(input())
s=math.ceil(n/3)


print(s)","0.0"
"75410156-cdea-4efc-a0d6-91e02bf38e32","

a=int(input())
b=int(input())
r=0
def inDel( x ):
    inDel=[1]
    for i in range (2,x+1):
        if x%i==0:
            inDel.append(i)
    return inDel
for k in range (a,b+1):
    if len(inDel(k))==4:
        print(*inDel(k))
        r+=1
if r==0:
    print(0)    
","0.0"
"75410156-cdea-4efc-a0d6-91e02bf38e32","
a=int(input())
b=int(input())
r=0
def inDel( x ):
    inDel=[1]
    for i in range (2,x+1):
        if x%i==0:
            inDel.append(i)
    return inDel
for k in range (a,b+1):
    if len(inDel(k))==4:
        print(*inDel(k))
        r+=1
if r==0:
    print(0)    
","0.0"
"1b2dfff2-077c-4804-9067-dec63bee6584","
s=str(input())
sim=str(input())
mas=[]
s=s+'**'
k=0;

for i in range(len(s)-1):
    if s[i]==sim:
        k=k+1
    else:
        mas.append(k)
        k=0

print(max(mas))

","0.0"
"2ee76cc8-f815-4807-a797-4059ae8a8d76","
n=int(input())
mas=[0]*n
k=1
s= input().split()
mas=[int (i) for i in s]
mas=mas+[1001]
mas=sorted(mas)
for i in range (n):
    if mas[i]==mas[i+1]:
        k+=1
    else:
        print(mas[i],k)
        k=1","0.0"
"f2d92959-39d9-49fe-a9b1-5868567eeedf","import math
L=int(input())
s=math.floor(L*2.54)
print(s)","0.0"
"0c04c2f7-1548-4fa7-afc6-5ef064ea3a9f","ï»¿k=int(input())
a=(k//100)*10
c=k%10
s=a+c
print(s)
","0.0"
"9ad8e0ac-34e6-45a9-8f4f-0e8046aec803","

a=int(input())
b=int(input())
mx=0
def inDel( x ):
    inDel=[1]
    for i in range (1,x//2+1):
        if x%i==0:
            inDel.append(i)
    return inDel
for k in range (a,b+1):
    if len(inDel(k))>=mx:
        mx=len(inDel(k))
        a=k
print(mx,a,a//2)","0.0"
"75410156-cdea-4efc-a0d6-91e02bf38e32","

a=int(input())
b=int(input())
def inDel( x ):
    inDel=[]
    for i in range (1,x+1):
        if x%i==0:
            inDel.append(i)
    return inDel
for k in range (a,b+1):
    if len(inDel(k))==4:
        print(*inDel(k))
","0.0"
"75410156-cdea-4efc-a0d6-91e02bf38e32","

a=int(input())
b=int(input())
def inDel( x ):
    inDel=[]
    for i in range (1,x+1):
        if x%i==0:
            inDel.append(i)
    return inDel
for k in range (a,b+1):
    if len(inDel(k))==4:
        print(*inDel(k))
","0.0"
"1b2dfff2-077c-4804-9067-dec63bee6584","

s=str(input())
sim=str(input())
mas=[]
s=s+'**'
k=0;

for i in range(len(s)-1):
    if s[i]==sim:
        k=k+1
    else:
        mas.append(k)
        k=0

print(max(mas))

","0.0"
"3876c09d-7f12-4c69-ac5c-8ca780dcd633","

s=str(input())
a,b=map (int,input().split())
n=s[a-1:b]
print(s[:a-1]+n[::-1]+s[b:])



","0.0"
"e51d6308-c0be-44b6-ba3d-c238a0d8e4a1","K=int(input())
L=int(input())
N=int(input())
S=int(input())

st=K+N*S
ko=L+N*(S//2)
if st>=ko:
    print(""YES"")
else:
    print(""NO"")","0.0"
"bbb640ed-435c-4dc9-8625-87b81a5a9b22","a,b=map(int,input().split())

if (a>0) and (b>0):
    c=1
elif(a<0) and (b>0):
    c=2
elif(a<0) and (b<0):
    c=3
elif (a>0) and (b<0):
    c=4

print(c)
","0.0"
"cb96b982-37a0-487b-8b5c-67d27e6f7094","ï»¿k=int(input())
h=(k//60)
m=k-(h*60)

print(h,m)
","0.0"
"74a21b08-f61e-495f-a883-f02328dc4dae","k=int(input())
a=k//100
b=(k%100)//10
c=k%10
s=a+b+c
print(s)
","0.0"
"9ad8e0ac-34e6-45a9-8f4f-0e8046aec803","
a=int(input())
b=int(input())
mx=0
def inDel( x ):
    inDel=[1]
    for i in range (1,x//2+1):
        if x%i==0:
            inDel.append(i)
    return inDel
for k in range (a,b+1):
    if len(inDel(k))>=mx:
        mx=len(inDel(k))
        a=k
print(mx,a,a//2)","0.0"
"9ad8e0ac-34e6-45a9-8f4f-0e8046aec803","
a=int(input())
b=int(input())
mx=0
def inDel( x ):
    inDel=[2]
    for i in range (1,x//2+1):
        if x%i==0:
            inDel.append(i)
    return inDel
for k in range (a,b+1):
    if len(inDel(k))>=mx:
        mx=len(inDel(k))
        a=k
print(mx,a,a//2)","0.0"
"9ad8e0ac-34e6-45a9-8f4f-0e8046aec803","
a=int(input())
b=int(input())
mx=0
def inDel( x ):
    inDel=[1]
    for i in range (1,x//2+1):
        if x%i==0:
            inDel.append(i)
    return inDel
for k in range (a,b+1):
    if len(inDel(k))>=mx:
        mx=len(inDel(k))
        a=k
print(mx,a,a//2)","0.0"
"9ad8e0ac-34e6-45a9-8f4f-0e8046aec803","


a=int(input())
b=int(input())
mx=0
def inDel( x ):
    inDel=[1]
    for i in range (1,x//2+1):
        if x%i==0:
            inDel.append(i)
    return inDel
for k in range (a,b+1):
    if len(inDel(k))>=mx:
        mx=len(inDel(k))
        a=k
print(mx,a,a//2)","0.0"
"05c50d73-fe75-4975-9d19-7e26e8c8d05f","
s=str(input())
k=1
for i in range(len(s)):
    if s[i]==' ':
        k+=1
print(k)


","0.0"
"2ee76cc8-f815-4807-a797-4059ae8a8d76","
n=int(input())
mas=[0]*n
k=1
s= input().split()
mas=[int (i) for i in s]
mas=mas+[1001]
mas=sorted(mas)
for i in range (n):
    if mas[i]==mas[i+1]:
        k+=1
    else:
        print(mas[i],k)
        k=1","0.0"
"94a4304c-1628-4b48-a1bb-62970467c416","n=int(input())
mas=[0]*n
s= input().split()
mas=[int (i) for i in s]
list.sort(mas)
print(*mas)
","0.0"
"1a27e016-52ff-4e78-89cb-956f0a7cac6b","
n=int(input())
mas=[0]*n
s= input().split()
mas=[int (i) for i in s]
mas=sorted(mas)
print(*mas)
","0.0"
"521b1be0-3bd5-45f4-94f5-dad4b82ad375","n=int(input())
mas=[0]*n
maxim=-100000
s=input().split()
mas=[int(i) for i in s]
k=1
for i in range(n):
    if maxim<mas[i]:
      maxim=mas[i]
print(maxim)","0.0"
"efe1a482-a2db-4971-a769-8b60a0beaf64","


n=int(input())
mas=[0]*(n)
s=input().split()
mas=[int(i) for i in s]
k=0
for i in range(2,n-1,1):
      if mas[i-1]<mas[i]and mas[i+1]<mas[i]:
        k+=1
print(k)","0.0"
"af34735a-a422-4900-a41c-ce3188000595","


n=int(input())
i=1
while i<=n :
    print ('I must not tell lies')
    i=i+1

","0.0"
"4659a273-9c89-4ff8-a1bd-6d0ae87e9915","   

n=int(input())
if n%10==1 and n!=11:
    print(n,'mag')
elif (n%10==2 or n%10==3 or n%10==4) and n!=12 and n!=13 and n!=14:
    print(n,'maga')
else :
    print(n,'magov')
","0.0"
"1ff5a639-82a9-46d5-99e8-90b0529a5016","

h=int (input())
m=int (input())
h=h+1
m=m+15
if m>=60:
    h=h+1
    m=m-60
if h>=24:
    h=h-24
print (h,m)
","0.0"
"5d02ab7a-4394-4098-9f7a-ed3912083888","

L=int (input())
l=L*2.54//1
print (round (l))
","0.0"
"5d02ab7a-4394-4098-9f7a-ed3912083888","

L=int (input())
l=L*2.54
l//10
print (round (l))
","0.0"
"3e320d9a-cc8f-4ee0-867c-a570153011f6","a = input()
print(int(a,2))
      ","0.0"
"3e320d9a-cc8f-4ee0-867c-a570153011f6","a = input()
print(int(a,2))
    ","0.0"
"3e320d9a-cc8f-4ee0-867c-a570153011f6","a = input()
print(int(a,2))
     ","0.0"
"3e320d9a-cc8f-4ee0-867c-a570153011f6","a = input()
print(int(a,2))
","0.0"
"33eb8e68-cf75-4892-b87b-97ceeee27d04","a1=input().split()
a=[int(w) for w in a1]
if a[0]==a[1]: print(0)
elif (a[0]>0 and a[1]>0) or (a[0]<0 and a[1]<0): print(a[0]+a[1])
else: print(a[0]*a[1])
","0.0"
"dfcd4c48-6f3f-4a53-a03f-e5abebfebdae","n = int(input())
a = [[0]*n for i in range(n)]
gr = [[0]*n for i in range(n)]
inf = 10**10
for i in range(n):
    gr[i]=[int(f) for f in input().split()]
for i in range(n):
    for j in range(n):
        if gr[i][j]==0 and i!=j:
            gr[i][j]=inf
nv,kv = map(int,input().split())
a=gr
for k in range(n):
    for i in range(n):
        for j in range(n):
            a[i][j] = min(a[i][j],a[i][k] + a[k][j])
if a[nv-1][kv-1] == inf: print('NO')
else: print(a[nv-1][kv-1])   
","0.0"
"1187526d-8b3a-4a9b-8098-bbbf8d9d1423","def bfs(it):
    if it<n:
        v = q[it]
        for i in range(n):
            if gr[v][i]==1 and not(visited[i]):
                q.append(i)
                visited[i]=True
                pr[i]=v+1
        bfs(it+1)
n=int(input())
gr=[[0]*n for i in range(n)]
q=[0]
visited=[False]*n
visited[0]=True
pr=[1]*n
for i in range(n):
    gr[i]=[int(f) for f in input().split()]
bfs(0)
for i in range(n):
    print(i+1,pr[i])","0.0"
"80cacb8a-a6c2-4757-9646-317c1594c18e","def bfs(it):
    if it<n:
        v = q[it]
        for i in range(n):
            if gr[v][i]==1 and not(visited[i]):
                q.append(i)
                q1.append(i+1)
                visited[i]=True
        bfs(it+1)
n,a=map(int,input().split())
gr=[[0]*n for i in range(n)]
for i in range(n):
    gr[i]=[int(f) for f in input().split()]
for i in range(a):
    s=int(input())
    q=[s-1]
    q1=[s]
    visited=[False]*n
    visited[s-1]=True
    bfs(0)
    print(*q1)","0.0"
"e9f3df82-446a-424e-a07b-3c77daa739f2","def bfs(it):
    if it<n:
        v = q[it]
        for i in range(n):
            if gr[v][i]==1 and not(visited[i]):
                q.append(i)
                q1.append(i+1)
                visited[i]=True
        bfs(it+1)
n=int(input())
gr=[[0]*n for i in range(n)]
q=[0]
q1=[1]
visited=[False]*n
visited[0]=True
for i in range(n):
    gr[i]=[int(f) for f in input().split()]
bfs(0)
print(*q1)
","0.0"
"82028d7b-804a-4c3d-acf8-29bc892147e5","def dnf(it):
    global l
    l+=1
    grf[it]=True
    for i in range(n):
        if not(grf[i]) and gr[it][i]==1:
            dnf(i)
n=int(input())
gr=[[0]*n for i in range(n)]
l=0
grf=[False]*n
for i in range(n):
    gr[i]=[int(f) for f in input().split()]
dnf(0)
if l==n: print(""YES"")
else: print(""NO"")
","0.0"
"e5673478-3dd1-49d0-b1ca-49dfa6304570","def dnf(it,pr):
    global a
    grf[it]=True
    for i in range(n):
        if grf[i] and gr[it][i]==1 and i!=pr:
            a=1
            break
        elif not(grf[i]) and gr[it][i]==1:
            dnf(i,it)
        
n=int(input())
gr=[[0]*n for i in range(n)]
a=0
grf=[False]*n
for i in range(n):
    gr[i]=[int(f) for f in input().split()]
dnf(0,0)
if a==1: print(""YES"")
else: print(""NO"")
","0.0"
"6671bab8-0e57-4f15-bc39-c933a2495f50","

n=int(input())
mas=[0]*n
s=input().split()
mas=[int(i) for i in s]
k=0
for i in range(0,n-1,2):
    t=mas[i]
    mas[i]=mas[i+1]
    mas[i+1]=t
print(*mas)","0.0"
"efe1a482-a2db-4971-a769-8b60a0beaf64","


n=int(input())
mas=[0]*(n)
s=input().split()
mas=[int(i) for i in s]
k=0
for i in range(1,n-1,1):
      if mas[i-1]<mas[i]and mas[i+1]<mas[i]:
        k+=1
print(k)","0.0"
"15420900-ca97-49e3-846a-13bd92d9bace","
n=int(input())
while n>0:
    print(n%10)
    n=n//10

    ","0.0"
"777756d6-d867-4cc7-978e-717933384418","

n=int(input())
if n%4==1:
    print ('Gryffindor')
elif n%4==2:
    print ('Slytherin')
elif n%4==3:
    print ('Ravenclaw')
else:
    print ('Hufflepuff')","0.0"
"5d02ab7a-4394-4098-9f7a-ed3912083888","

L=int (input())
l=L*2.54
print (round (l))
","0.0"
"190516a0-6ed3-4c42-9f36-dc481a3adb70","ï»¿x=int(input())
y=int(input())
z=x+y
print(z)

","0.0"
"190516a0-6ed3-4c42-9f36-dc481a3adb70","x=int(input())
y=int(input())
print(x+y)
","0.0"
"11f5282e-266d-41b6-b87e-01642625b2bd","a = int(input())
print(bin(a)[2:])
print(oct(a)[2:])
print(hex(a)[2:])","0.0"
"84118453-37c4-4256-a8f0-5dc2707d4e35","a = int(input())
print(bin(a)[2:])","0.0"
"28b5bd1f-2393-42f8-a320-976b5072a75b","x1,y1,x2,y2 = map(int,input().split())
r = (((x2-x1)**2)+((y2-y1)**2))**0.5
l = 2*3.14*r
s = 3.14*(r**2)
print('%.6f'% l, '%.6f'% s)
","0.0"
"22e720bb-1b6c-470d-bb7b-da0de5a83f45","x1,y1,x2,y2,x3,y3 = map(int,input().split())
a = (((x2-x1)**2)+((y2-y1)**2))**0.5
b = (((x3-x2)**2)+((y3-y2)**2))**0.5
c = (((x1-x3)**2)+((y1-y3)**2))**0.5
p = (a+b+c)/2
print('%.5f'% (p*(p-a)*(p-b)*(p-c))**0.5)
   ","0.0"
"22e720bb-1b6c-470d-bb7b-da0de5a83f45","ï»¿x1,y1,x2,y2,x3,y3 = map(int,input().split())
a = (((x2-x1)**2)+((y2-y1)**2))**0.5
b = (((x3-x2)**2)+((y3-y2)**2))**0.5
c = (((x1-x3)**2)+((y1-y3)**2))**0.5
p = (a+b+c)/2
print('%.5f'% (p*(p-a)*(p-b)*(p-c))**0.5)
","0.0"
"a7278e0b-c30c-439a-94ba-68a803df68b9","a,b,c,d = map(int,input().split())
n = a*d +c*b
z = b*d
for i in range(min(n,z),1,-1):
    if n%i == 0 and z%i == 0:
        n//=i
        z//=i
print(n,z)
","0.0"
"b8c265d0-999d-49e2-a5fd-eed95708bf97","n = int(input())
a = [[0]*n for i in range(n)]
gr = [[0]*n for i in range(n)]
inf = 10**10
for i in range(n):
    gr[i]=[int(f) for f in input().split()]
for i in range(n):
    for j in range(n):
        if gr[i][j]==-1:
            gr[i][j]=inf
a=gr
for k in range(n):
    for i in range(n):
        for j in range(n):
            a[i][j] = min(a[i][j],a[i][k] + a[k][j])
for i in a:
    print(' '.join(map(str,i)))
    ","0.0"
"b8c265d0-999d-49e2-a5fd-eed95708bf97","n = int(input())
a = [[0]*n for i in range(n)]
gr = [[0]*n for i in range(n)]
inf = 10**10
for i in range(n):
    gr[i]=[int(f) for f in input().split()]
for i in range(n):
    for j in range(n):
        if gr[i][j]==-1:
            gr[i][j]=inf
a=gr
for k in range(n):
    for i in range(n):
        for j in range(n):
            a[i][j] = min(a[i][j],a[i][k] + a[k][j])
for i in a:
    print(' '.join(map(str,i)))
  ","0.0"
"945dd62f-c5a3-4a5c-888f-d188a7c8cac3","n = int(input())
gr = [[0]*n for i in range(n)]
inf = 10**10
for i in range(n):
    gr[i]=[int(f) for f in input().split()]
nv = int(input()) #ÐÐ°ÑÐ°Ð»ÑÐ½Ð°Ñ Ð²ÐµÑÑÐ¸Ð½Ð°, Ð¾Ñ ÐºÐ¾ÑÐ¾ÑÐ¾Ð¹ Ð±ÑÐ´ÐµÐ¼ Ð¸Ð·Ð¼ÐµÑÑÑÑ ÑÐ°ÑÑÑÐ¾ÑÐ½Ð¸Ðµ
for i in range(n):
    for j in range(n):
        if (gr[i][j]==0 and i!=nv) or gr[i][j]==-1:
            gr[i][j]=inf

def dej(it): #it - Ð´Ð°Ð½Ð½Ð°Ñ Ð²ÐµÑÑÐ¸Ð½Ð°, Ð¸ÑÐµÑÐ°ÑÐ¸Ñ
    visited = []
    distances = {it: 0}
    node = list(range(n))
    if it in node:
        node.remove(it)
        visited.append(it)
    else: return None
    for i in node:
        distances[i] = gr[it][i]
        pr = it
    while node:
        vremDist = float('inf')
        for i in visited:
            for j in node:
                if vremDist > distances[i] + gr[i][j]:
                    vremDist = distances[j] = distances[i] + gr[i][j]
                    pr = j
        visited.append(pr)
        node.remove(pr)
    return distances
dist = dej(nv-1)
for i in range(n):
    if i!=nv-1:
        if dist[i] == inf: print(i+1,""NO"")
        else: print(i+1,dist[i])","0.0"
"f9af70f9-5fce-423e-94c5-b6f357e5242c","a=float(input())
n=int(input())
s=1
for i in range(1,n+1):
    s=s+a**i
if s==int(s): s=int(s)
print(s)
   ","0.0"
"e5e8f4d5-0b0f-4a52-b5a7-12f8ef0a52f0","a=float(input())
b=float(input())
c=float(input())
m=max(a,b,c)
if m==int(m): m=int(m)
n=min(a,b,c)
if n==int(n): n=int(n)
sr=((a+b+c)-m-n)
if sr==int(sr): sr=int(sr)
print(n,sr,m)","0.0"
"7880445a-3568-4939-8f55-d80530b696c0","def bfs(it):
    if it<len(q):
        v = q[it]
        for i in range(n):
            if gr[v][i]==1 and not(visited[i]):
                q.append(i)
                visited[i]=True
                pr[i]=v+1
        bfs(it+1)
        
n,nach=map(int,input().split())
gr=[[0]*n for i in range(n)]
q=[nach-1]
visited=[False]*n
visited[nach-1]=True
pr=[-1]*n
m=0

for i in range(n):
    gr[i]=[int(f) for f in input().split()]
    
bfs(0)
k=int(input())

for f in range(k):
    fin=int(input())
    q=[fin]
    i=0
    while pr[fin-1]!=-1 and fin-1!=nach-1:
        fin=pr[fin-1]
        q.append(fin)
    if q[-1]!=nach: print(-1)
    else:
        q.reverse()
        print(*q)
","0.0"
"614009a0-821e-497b-9a0b-07c0dbe033b8","def dnf(it,b):
    global l
    if it==b:
        l=1
    grf[it]=True
    for i in range(n):
        if not(grf[i]) and gr[it][i]==1:
            dnf(i,b)
        
n,c=map(int,input().split())
gr=[[0]*n for i in range(n)]
a=0
grf=[False]*n
for i in range(n):
    gr[i]=[int(f) for f in input().split()]
for i in range(c):
    grf=[False]*n
    l=0
    a,b=map(int,input().split())
    dnf(a-1,b-1)
    if l==1: print(""YES"")
    else: print(""NO"")","0.0"
"1b689872-4b61-4615-a14e-24e7a0bcb1ba","

n=int(input())
mas=[0]*n
s=input().split()
mas=[int(i) for i in s]
k=1
for i in range(0,n-1,1):
    if mas[i]!=mas[i+1]:
     k+=1
print(k)","0.0"
"a809c102-e8a6-45ff-9baa-9a998d1927f1","


n=int(input())
m=int(input())
while m>0:
    n=3*n
    m=m-1
    print(n)
    ","0.0"
"a809c102-e8a6-45ff-9baa-9a998d1927f1","


n=int(input())
m=int(input())
while m>0:
    n=3*n
    m-=1
    print(n)
    ","0.0"
"4659a273-9c89-4ff8-a1bd-6d0ae87e9915","   

n=int(input())
if n%10==1 and n!=11:
    print(n,'mag')
elif n%10==2 and n%10==3 and n%10==4 and n!=12 and n!=13 and n!=14:
    print(n,'maga')
else :
    print(n,'magov')
","0.0"
"3e320d9a-cc8f-4ee0-867c-a570153011f6","a = input()
s = 0
n = len(a)-1
for i in range(n+1):
    s+=int(a[i])*(2**n)
    n-=1
print(s)
","0.0"
"702fc37e-8257-458c-aedd-8ca35534289a","a,b = map(str,input().split())
c,d = map(str,input().split())
s1 = float(a)+float(b)
s2 = float(c)+float(d)
if s1==s2: print(a,b,c,d)
elif s1>s2: print(a,b)
else: print(c,d)
","0.0"
"33eb8e68-cf75-4892-b87b-97ceeee27d04","a,b = map(float,input().split())
if a==b: print(0)
elif (a>0 and b>0) or (a<0 and b<0):
    s = a+b
    if int(s)==s: print(int(s))
    else: print(a+b)
else:
    s = a*b
    if int(s)==s: print(int(s))
    else: print(s)
","0.0"
"3d109570-fadd-47bd-b0cb-2d9d34ba11ca","x,p,y,t = map(float,input().split())
a = x**p+y**t
if int(a)==a: print(int(a))
else: print(a)
  ","0.0"
"22e720bb-1b6c-470d-bb7b-da0de5a83f45","x1,y1,x2,y2,x3,y3 = map(float,input().split())
a = (((x2-x1)**2)+((y2-y1)**2))**0.5
b = (((x3-x2)**2)+((y3-y2)**2))**0.5
c = (((x1-x3)**2)+((y1-y3)**2))**0.5
p = (a+b+c)/2
print('%.5f'% (p*(p-a)*(p-b)*(p-c))**0.5)
   ","0.0"
"04dd6eca-f83b-4028-a21a-4e09c9333c0a","def bfs(it):
    if it<len(q):
        v = q[it]
        for i in range(n):
            if gr[v][i]!=0 and not(visited[i]):
                q.append(i)
                visited[i]=True
                pr[i]=v+1
        bfs(it+1)
        
n=int(input())
gr=[[0]*n for i in range(n)]
m=0
c=0
for i in range(n):
    gr[i]=[int(f) for f in input().split()]
for i in range(n):
    for j in range(n):
        if gr[i][j]!=0:
            c=gr[i][j]
            
nv,w = map(int,input().split())
q=[nv-1]
visited=[False]*n
visited[nv-1]=True
pr=[-1]*n
bfs(0)

q=[w]
while pr[w-1]!=-1 and w-1!=nv-1:
    w=pr[w-1]
    q.append(w)
if q[-1]!=nv: print('NO')
else: print(c*(len(q)-1))
    ","0.0"
"efe1a482-a2db-4971-a769-8b60a0beaf64","


n=int(input())
mas=[0]*(n+1)
s=input().split()
mas=[int(i) for i in s]
k=0
for i in range(2,n-1,1):
      if mas[i-1]<mas[i]and mas[i+1]<mas[i]:
        k+=1
print(k)","0.0"
"35d772a5-7770-4a91-9118-ad11e4ae7feb","

n=int(input())
mas=[0]*n
s=input().split()
mas=[int(i) for i in s]
k=0
for i in range(n):
      if mas[i]>mas[i-1]:
        k+=1
print(k)","0.0"
"875ec0a5-0a8e-468b-b0f0-1b32c0337354","
n=int(input())
mas=[0]*n
s=input().split()
mas=[int(i) for i in s]
k=0
for i in range(n):
      if mas[i] >=0:
        k+=1
print(k)","0.0"
"4659a273-9c89-4ff8-a1bd-6d0ae87e9915","   

n=int(input())
if n%10==1 and n!=11:
    print(n,'mag')
elif n%10==2 or n%10==3 or n%10==4 and n!=12 and n!=13 and n!=14:
    print(n,'maga')
else :
    print(n,'magov')
","0.0"
"5d02ab7a-4394-4098-9f7a-ed3912083888","


L=int (input())
l=L*2.54
print (round (l))

","0.0"
"3ae56164-1134-42f9-8fd7-204a82b81e52","a=int(input())
def kd(x,s):
    kd=[1,x]
    for i in range(2,int(x**0.5)+1):
        if x%i==0:
            kd.append(i)
            if i!=x//i: kd.append(x//i)
        if len(kd)>s: return [0]
    if len(kd)==s: return sorted(kd)
    else: return[0]
def prst(c):
    sps=0
    if c<=1: return False
    for i in range(2,int(c**0.5)+1):
        if c%i==0: return False
    return True
w=[0]
f=0
z=0 
md=0 
while f!=a:
    z+=1
    w=kd(z,a)
    f=len(w)
for i in w:
    if prst(i):
        md=i
print(w[-1], md)
","0.0"
"28b5bd1f-2393-42f8-a320-976b5072a75b","x1,y1,x2,y2 = map(float,input().split())
r = (((x2-x1)**2)+((y2-y1)**2))**0.5
l = 2*3.14*r
s = 3.14*(r**2)
print('%.6f'% l, '%.6f'% s)
","0.0"
"dfcd4c48-6f3f-4a53-a03f-e5abebfebdae","n = int(input())
a = [[0]*n for i in range(n)]
gr = [[0]*n for i in range(n)]
inf = 10**10
for i in range(n):
    gr[i]=[int(f) for f in input().split()]
for i in range(n):
    for j in range(n):
        if gr[i][j]==0 and i!=j:
            gr[i][j]=inf
nv,kv = map(int,input().split())
a=gr
for k in range(n):
    for i in range(n):
        for j in range(n):
            a[i][j] = min(a[i][j],a[i][k] + a[k][j])
if a[nv-1][kv-1] == inf: print('NO')
else: print(a[nv-1][kv-1])   
       ","0.0"
"04dd6eca-f83b-4028-a21a-4e09c9333c0a","def bfs(it):
    if it<len(q):
        v = q[it]
        for i in range(n):
            if gr[v][i]!=0 and not(visited[i]):
                q.append(i)
                visited[i]=True
                pr[i]=v+1
        bfs(it+1)
        
n=int(input())
gr=[[0]*n for i in range(n)]
m=0
c=0
for i in range(n):
    gr[i]=[int(f) for f in input().split()]
for i in range(n):
    for j in range(n):
        if gr[i][j]!=0:
            c=gr[i][j]
            
nv,w = map(int,input().split())
q=[nv-1]
visited=[False]*n
visited[nv-1]=True
pr=[-1]*n
bfs(0)

q=[w]
while pr[w-1]!=-1 and w-1!=nv-1:
    w=pr[w-1]
    q.append(w)
if q[-1]!=nv: print(-1)
else: print(c*(len(q)-1))
    ","0.0"
"f9af70f9-5fce-423e-94c5-b6f357e5242c","a=float(input())
n=int(input())
s=1
for i in range(1,n+1):
    s=s+a**i
if s==int(s): s=int(s)
print(s)
                    ","0.0"
"0cc13605-3cb0-48e8-a8d7-10d2e1b77520","count=0
def dnf(it):
    global count
    count+=1
    prev[it]=count
    grf[it]=True
    for i in range(n):
        if not(grf[i]) and gr[it][i]==1:
            dnf(i)
n=int(input())
gr=[[0]*n for i in range(n)]
prev=[0]*n
grf=[False]*n
for i in range(n):
    gr[i]=[int(f) for f in input().split()]
dnf(0)
for i in range(n):
    print(i+1,prev[i])","0.0"
"b8c265d0-999d-49e2-a5fd-eed95708bf97","n = int(input())
a = [[0]*n for i in range(n)]
gr = [[0]*n for i in range(n)]
inf = 10**10
for i in range(n):
    gr[i]=[int(f) for f in input().split()]
for i in range(n):
    for j in range(n):
        if gr[i][j]==-1:
            gr[i][j]=inf
a=gr
for k in range(n):
    for i in range(n):
        for j in range(n):
            a[i][j] = min(a[i][j],a[i][k] + a[k][j])
for i in a:
    print(' '.join(map(str,i)))
       ","0.0"
"b8c265d0-999d-49e2-a5fd-eed95708bf97","n = int(input())
a = [[0]*n for i in range(n)]
gr = [[0]*n for i in range(n)]
inf = 10**10
for i in range(n):
    gr[i]=[int(f) for f in input().split()]
for i in range(n):
    for j in range(n):
        if gr[i][j]==-1:
            gr[i][j]=inf
a=gr
for k in range(n):
    for i in range(n):
        for j in range(n):
            a[i][j] = min(a[i][j],a[i][k] + a[k][j])
for i in a:
    print(' '.join(map(str,i)))
","0.0"
"dfcd4c48-6f3f-4a53-a03f-e5abebfebdae","n = int(input())
gr = [[0]*n for i in range(n)]
inf = 10**10
for i in range(n):
    gr[i]=[int(f) for f in input().split()]
nv,w = map(int,input().split()) #ÐÐ°ÑÐ°Ð»ÑÐ½Ð°Ñ Ð²ÐµÑÑÐ¸Ð½Ð°, Ð¾Ñ ÐºÐ¾ÑÐ¾ÑÐ¾Ð¹ Ð±ÑÐ´ÐµÐ¼ Ð¸Ð·Ð¼ÐµÑÑÑÑ ÑÐ°ÑÑÑÐ¾ÑÐ½Ð¸Ðµ
for i in range(n):
    for j in range(n):
        if (gr[i][j]==0):
            gr[i][j]=inf
gr[nv-1][nv-1]=0
def dej(it): #it - Ð´Ð°Ð½Ð½Ð°Ñ Ð²ÐµÑÑÐ¸Ð½Ð°, Ð¸ÑÐµÑÐ°ÑÐ¸Ñ
    visited = []
    distances = {it: 0}
    node = list(range(n))
    if it in node:
        node.remove(it)
        visited.append(it)
    else: return None
    for i in node:
        distances[i] = gr[it][i]
        pr = it
    while node:
        vremDist = float('inf')
        for i in visited:
            for j in node:
                if vremDist > distances[i] + gr[i][j]:
                    vremDist = distances[j] = distances[i] + gr[i][j]
                    pr = j
        visited.append(pr)
        node.remove(pr)
    return distances
dist = dej(nv-1)
if dist[w-1]==inf: print(""NO"")
else: print(dist[w-1])
","0.0"
"f9af70f9-5fce-423e-94c5-b6f357e5242c","a=float(input())
n=int(input())
s=1
for i in range(1,n+1):
    s=s+a**i
if s==int(s): s=int(s)
print(s)
          ","0.0"
"f9af70f9-5fce-423e-94c5-b6f357e5242c","a=float(input())
n=int(input())
s=1
for i in range(1,n+1):
    s=s+a**i
if s==int(s): s=int(s)
print(s)
 ","0.0"
"413dddee-a132-48a9-9753-e5bef469b529","def dnf(it):
    global a
    grf[it]=True
    a+=1
    sp.append(it+1)
    for i in range(n):
        if not(grf[i]) and gr[it][i]==1:
            dnf(i)

n=int(input())
gr=[[0]*n for i in range(n)]
sp=[]
amax=0
a=0
mg=[]
count=0
grf=[False]*n
for i in range(n):
    gr[i]=[int(f) for f in input().split()]
for i in range(n):
    if not(grf[i]):
        a=0
        sp=[]
        dnf(i)
        if a>amax:
            amax = a
            mg = sp[-(a):]
    
print(amax)
print(*mg)","0.0"
"2924cfce-8ebf-4fe5-aa8e-046256297fb1","def dnf(it):
    grf[it]=True
    for i in range(n):
        if not(grf[i]) and gr[it][i]==1:
            dnf(i)
    sp.append(it+1)
n=int(input())
gr=[[0]*n for i in range(n)]
sp=[]
grf=[False]*n
for i in range(n):
    gr[i]=[int(f) for f in input().split()]
for i in range(n):
    if not(grf[i]): dnf(i)
    
print(*sp[::-1])","0.0"
"ead36ff4-8cf1-4c6c-8a43-ab69f623fde7","def dnf(it):
    grf[it]=True
    for i in range(n):
        if not(grf[i]) and gr[it][i]==1:
            prev[i]=it
            dnf(i)
n=int(input())
gr=[[0]*n for i in range(n)]
prev=[0]*n
grf=[False]*n
for i in range(n):
    gr[i]=[int(f) for f in input().split()]
dnf(0)
for i in range(n):
    print(i+1,prev[i]+1)

","0.0"
"0cc13605-3cb0-48e8-a8d7-10d2e1b77520","def dnf(it):
    sp.append(it+1)
    grf[it]=True
    for i in range(n):
        if not(grf[i]) and gr[it][i]==1:
            dnf(i)
n=int(input())
gr=[[0]*n for i in range(n)]
sp=[]
grf=[False]*n
for i in range(n):
    gr[i]=[int(f) for f in input().split()]
dnf(0)
k=1
for i in sp:
    print(k,sp.index(k)+1)
    k+=1
","0.0"
"916cd758-8a73-4909-9ac8-2f0d57f29095","def dnf(it):
    sp.append(it+1)
    grf[it]=True
    for i in range(n):
        if not(grf[i]) and gr[it][i]==1:
            dnf(i)
n,m=map(int,input().split())
gr=[[0]*n for i in range(n)]
sp=[]
grf=[False]*n
for i in range(n):
    gr[i]=[int(f) for f in input().split()]
dnf(m-1)
print(*sp)
","0.0"
"184def68-8d78-42ae-b39c-3ed0566d685c","def dnf(it):
    sp.append(it+1)
    grf[it]=True
    for i in range(n):
        if not(grf[i]) and gr[it][i]==1:
            dnf(i)
n=int(input())
gr=[[0]*n for i in range(n)]
gr2=[[0]*n for i in range(n)]
for i in range(n):
    gr[i]=[int(f) for f in input().split()]
for i in range(n):
    sp=[]
    grf=[False]*n
    dnf(i)
    gr2[i]=sp
for i in gr2:
    print(' '.join(map(str,i)),end=' 
')","0.0"
"79312fbf-4cd4-4453-989e-43f3cae93d51","def q(gr1,gr2,gr3):
    for i in range(n):
        for j in range(n):
            for z in range(n):
                if gr3[i][j]==0:
                    gr3[i][j]=gr1[i][z]*gr2[z][j]
    return gr3
k=0
n=int(input())
m=3 
mas=[[0]*n for i in range(n)]
gr2=mas
for i in range(n):
    mas[i]=[int(f) for f in input().split()]
for x in range(m-1):
    gr3=[[0]*n for i in range(n)]
    q(mas,gr2,gr3)
    gr2=gr3
for i in range(n):
    for j in range(n):
        if gr2[i][j]==1 and i!=j:
            print(i+1,j+1)
            k=1
if k==0: print(""NO"")","0.0"
"63fff392-7a26-4842-8308-8e12386127ed","def q(gr1,gr2,gr3):
    for i in range(n):
        for j in range(n):
            for z in range(n):
                if gr3[i][j]==0:
                    gr3[i][j]=gr1[i][z]*gr2[z][j]
    return gr3
k=0
n,m=map(int,input().split())
mas=[[0]*n for i in range(n)]
gr2=mas
for i in range(n):
    mas[i]=[int(f) for f in input().split()]
for x in range(m-1):
    gr3=[[0]*n for i in range(n)]
    q(mas,gr2,gr3)
    gr2=gr3
for i in range(n):
    for j in range(n):
        if gr2[i][j]==1 and i!=j:
            print(i+1,j+1)
            k=1
if k==0: print(""NO"")
","0.0"
"95831070-88fb-406f-8997-c0fc4027d623","n=int(input())
s=0
mas=[[0]*n for i in range(n)]
for i in range(n):
    mas[i]=[int(i) for i in input().split()]
for i in range(n):
    for j in range(n):
        if mas[i][j]==1:
            mas[j][i]=mas[i][j]
    print(*mas[i])   ","0.0"
"e403def2-7943-4432-b5dc-a6073bf62a9b","def dnf(it):
    sp.append(it+1)
    grf[it]=True
    for i in range(n):
        if not(grf[i]) and gr[it][i]==1:
            dnf(i)
n=int(input())
gr=[[0]*n for i in range(n)]
sp=[]
grf=[False]*n
for i in range(n):
    gr[i]=[int(f) for f in input().split()]
dnf(0)
print(*sp)
","0.0"
"993d5917-3656-42be-87ec-bbde4aff5607","n,m=map(int,input().split())
mas=[[0]*n for i in range(n)]

for i in range(n):
    mas[i]=[int(f) for f in input().split()]



for i in range(n):
    for j in range(n):
        if i==j: mas[i][j]=1

for i in range(n):
    for j in range(n):
        for z in range(n):
            if (mas[j][i] and mas[i][z]):
                mas[j][z]=1
                
for i in range(n):
    for j in range(n):
        if i==j: mas[i][j]=0

for i in range(m):
    r,t=map(int,input().split())
    if mas[r-1][t-1]==1:
        print(""YES"")
    else:print(""NO"")
","0.0"
"d45974a2-6e4d-4a5b-a7d1-cf456bf9e2e1","n=int(input())
a=0
s=0
mas=[[0]*n for i in range(n)]
for i in range(n):
    mas[i]=[int(i) for i in input().split()]
for i in range(n):
    for j in range(n):
        if mas[i][j]==1:
            a+=1
        if mas[j][i]==1:
            s+=1
    print(i+1,s,a)
    a=0
    s=0
    
","0.0"
"519d49f4-2044-4bec-8164-97ef458dc2c8","n=int(input())
s=0
ng=[[0]*n for i in range(n)]
mas=[[0]*n for i in range(n)]



for i in range(n):
    mas[i]=[int(i) for i in input().split()]
for i in range(n):
    for j in range(n):
        if i!=j:
            if mas[i][j]==0:
                ng[i][j]=1
            else: ng[i][j]=0


            
for i in ng:
    print(' '.join(map(str,i)))
","0.0"
"7762ce71-62d8-4d9a-b192-d363f5ffc725","n=int(input())
s=0
ng=[[0]*n for i in range(n)]
mas=[[0]*n for i in range(n)]
for i in range(n):
    mas[i]=[int(i) for i in input().split()]
for i in range(n):
    for j in range(n):
        if mas[i][j]==1:
            ng[j][i]=1
for i in ng:
    print(' '.join(map(str,i)))

","0.0"
"1b7a231c-acf2-4c20-87f1-8615e27d21df","n=int(input())
s=0
mas=[[0]*n for i in range(n)]
for i in range(n):
    mas[i]=[int(i) for i in input().split()]
for i in range(n):
    for j in range(n):
        if mas[i][j]!=mas[j][i]:
            s=1
            break
if s==1: print(""oriented"")
else: print(""not oriented"")
","0.0"
"cdd79a46-8605-41d1-a344-70e7c6a9b8c2","n,m=map(int,input().split())
mas=[[0]*n for i in range(n)]
for i in range(m):
    a,b=map(int,input().split())
    mas[a-1][b-1]=1
for i in mas:
    print(' '.join(map(str,i)))","0.0"
"35bc693b-1917-49ae-ad4d-bed0d5a22583","n=int(input())
mas=[[0]*n for i in range(n)]
gr=[[0]*n for i in range(n)]
for i in range(n):
    mas[i]=[int(f) for f in input().split()]
for i in range(n):
    for j in range(n):
        for z in range(n):
            if gr[i][j]==0 and i!=j:
                gr[i][j]=mas[i][z]*mas[z][j]
            if mas[i][j]==1:
                gr[i][j]=1
for i in gr:
    print(' '.join(map(str,i)))
        
","0.0"
"399c561c-44d6-415d-8c3b-3e83018f5f2a","n=int(input())
mas=[[0]*n for i in range(n)]
gr=[[0]*n for i in range(n)]
for i in range(n):
    mas[i]=[int(f) for f in input().split()]
for i in range(n):
    for j in range(n):
        for z in range(n):
            if gr[i][j]==0 and i!=j:
                gr[i][j]=mas[i][z]*mas[z][j]
for i in gr:
    print(' '.join(map(str,i)))
        
","0.0"
"e538d2d1-111d-4904-9de6-f691cdc9fb50","n=int(input())
a=0
s=0
mas=[[0]*n for i in range(n)]
for i in range(n):
    mas[i]=[int(i) for i in input().split()]
for i in range(n):
    for j in range(n):
        if mas[i][j]==1:
            a+=1
    if a%2==1:
        s=1
        break
    a=0
if s==0: print(""YES"")
else: print(""NO"")","0.0"
"d752e481-f9e0-4d06-8ad4-ca4b16a1195f","n=int(input())
a=0
mas=[[0]*n for i in range(n)]
for i in range(n):
    mas[i]=[int(i) for i in input().split()]
for i in range(n):
    for j in range(n):
        if mas[i][j]==1:
            a+=1
    print(i+1,a)
    a=0
","0.0"
"6c718c88-bb90-4a37-ae7c-908916a5957e","n=int(input())
mas=[[0]*n for i in range(n)]


for i in range(n):
    mas[i]=[int(f) for f in input().split()]
    
for i in range(n):
    for j in range(n):
        if i==j: mas[i][j]=1

for i in range(n):
    for j in range(n):
        for z in range(n):
            if (mas[j][i] and mas[i][z]):
                mas[j][z]=1
                
for i in range(n):
    for j in range(n):
        if i==j: mas[i][j]=0
        
for i in mas:
    print(' '.join(map(str,i)))
","0.0"
"6c718c88-bb90-4a37-ae7c-908916a5957e","n=int(input())
mas=[[0]*n for i in range(n)]
gr=mas
for i in range(n):
    mas[i]=[int(f) for f in input().split()]
for i in range(n):
    for j in range(n):
        if i==j: mas[i][j]=1
for r in range(n):
    for i in range(n):
        for j in range(n):
            for z in range(n):
                if gr[i][j]==0:
                    gr[i][j]=gr[i][z]*mas[z][j]
for i in range(n):
    for j in range(n):
        if i==j: gr[i][j]=0
for i in gr:
    print(' '.join(map(str,i)))","0.0"
"8aba26dc-aa58-4010-8c1a-81e0ce626bae","n=int(input())
mas=[[0]*n for i in range(n)]
for i in range(n):
    mas[i]=[int(i) for i in input().split()]
for i in range(n):
    for j in range(n):
        if mas[i][j]==1:
            print(i+1,j+1)
","0.0"
"02fbb42a-472d-4e95-a306-13c6db519654","n=int(input())
mas=[[0]*n for i in range(n)]
for i in range(n):
    mas[i]=[int(i) for i in input().split()]
for i in range(n):
    for j in range(n):
        if mas[i][j]==1:
            if j>i:
                print(i+1,j+1)","0.0"
"70c96088-3bf6-4189-985e-a2d564337989","n,k=map(int,input().split())
mas=[]
for i in range(n):
    mas.append(int(input()))
masind=[]
def generate(ind):
    if ind==k:
        for j in masind:
            print(str(mas[j]),end=' ')
        print()
    else:
        for i in range(n):
            masind.append(i)
            generate(ind+1)
            masind.remove(i)
masind=[]
generate(0) 
  ","0.0"
"d10ce529-697f-4d23-8c67-948d245c3668","n,m=map(int,input().split())
mas=[[0]*n for i in range(n)]
for i in range(m):
    a,b=map(int,input().split())
    mas[a-1][b-1]=1
    mas[b-1][a-1]=1
for i in mas:
    print(' '.join(map(str,i)))
","0.0"
"ab48f655-0a9b-4b20-8bbe-fd806719bb53","n,k=map(int,input().split())
mas=[]
for i in range(n):
    mas.append(int(input()))
masind=[]
def generate(ind):
    if ind==k:
        s=[]
        for j in masind:
            s.append(mas[j])
        print(*s)
    else:
        for i in range(n):
            if not(i in masind):
                masind.append(i)
                generate(ind+1)
                masind.remove(i)
masind=[]
generate(0)
","0.0"
"70c96088-3bf6-4189-985e-a2d564337989","n,k=map(int,input().split())
mas=[]
for i in range(n):
    mas.append(int(input()))
masind=[]
def generate(ind):
    if ind==k:
        for j in masind:
            print(str(mas[j]),end=' ')
        print()
    else:
        for i in range(n):
            masind.append(i)
            generate(ind+1)
            masind.remove(i)
generate(0) 
 ","0.0"
"70c96088-3bf6-4189-985e-a2d564337989","n,k=map(int,input().split())
mas=[]
for i in range(n):
    mas.append(int(input()))
masind=[]
def generate(ind):
    if ind==k:
        for j in masind:
            print(str(mas[j]),end=' ')
        print()
    else:
        for i in range(n):
            masind.append(i)
            generate(ind+1)
            masind.remove(i)
masind=[]
generate(0) 
 ","0.0"
"70c96088-3bf6-4189-985e-a2d564337989","n,k=map(int,input().split())
mas=[]
for i in range(n):
    mas.append(int(input()))
masind=[]
def generate(ind):
    if ind==k:
        for j in masind:
            print(str(mas[j]),end=' ')
        print()
    else:
        for i in range(n):
            masind.append(i)
            generate(ind+1)
            masind.remove(i)
generate(0)
","0.0"
"70c96088-3bf6-4189-985e-a2d564337989","n,k=map(int,input().split())
mas=[]
for i in range(n):
    mas.append(int(input()))
masind=[]
def generate(ind):
    if ind==k:
        for j in masind:
            print(str(mas[j]),end=' ')
        print()
    else:
        for i in range(n):
            masind.append(i)
            generate(ind+1)
            masind.remove(i)
generate(0) 
","0.0"
"a11ad4e0-abf7-4110-9d03-04d451d484df","n,k,g=map(int,input().split())
ksm=[]
for i in range(n):
    ksm.append(int(input()))
ksm.sort()
dk=0
kves=0
ves=0
while k>0:
    ves=sum(ksm[:k-1])+kves
    for i in reversed(ksm):
        if ves+i<=g:
            kves+=i
            ksm.pop()
            break
    k-=1
print(kves)
    ","0.0"
"4ecec1ec-211d-4ce0-bd4b-ee2498ae1afa","a=str(input())
a=a[::-1]
d=''
for i in a:
    d=d+i+' '
print(d[:-1])
","0.0"
"6c2adae3-f5f9-4088-9bc6-567fe66476fb","n,k=input().split()
n=int(n)
k=int(k)
s=[]
sa=0
for i in range(n):
    s.append(int(input()))
s=sorted(s)
sa=int((sum(s[n-k:n]))*0.2)
print(max(s[:n-k]),sa)
","0.0"
"a11ad4e0-abf7-4110-9d03-04d451d484df","n,k,g=map(int,input().split())
ksm=[]
for i in range(n):
    ksm.append(int(input()))
ksm.sort()
dk=0
kves=0
ves=0
while k>0:
    ves=sum(ksm[:k-1])+kves
    for i in reversed(ksm):
        if ves+i<=g:
            kves+=i
            ksm.pop()
            break
        ksm.pop()
    k-=1
print(kves)","0.0"
"311d9bb7-84d8-4a04-9af9-fba11c6f224b","a,x=map(int,input().split())
print(a**x)
","0.0"
"7f4176cf-336a-4612-9d4d-31057447b99e","n,k=map(int,input().split())
s=[]
for i in range(n):
    s.append(int(input()))
s.sort()
s.reverse()
otl=s[:k]
ud=s[k:k+k]
sr=sum(ud)//k
so=sum(otl)//k
print(sr,so)","0.0"
"f2fd916a-4061-4f42-aa02-2ae337339c7a","n,k,m=map(int,input().split())
s=[]
for i in range(n):
    s.append(int(input()))
s.sort()
s.reverse()
print(s[k+m-1],s[k-1])","0.0"
"150f8ae8-1577-4cb8-98b7-775b5ddba6c1","a,b=map(int,input().split())
mx=0
for i in range(a,0,-1):
    if a%i==0 and b%i==0:
        mx=i
        break
print(mx)
","0.0"
"645dbba8-e48e-4111-abe4-d1ca480792d6","a=str(input())
d=''
for i in a:
    d=d+i+' '
print(d[:-1])","0.0"
"dc2ce7e3-6bb9-4308-8c20-15410d948a3c","n=int(input())
s=[]
for i in range(n):
    s.append(int(input()))
s.sort()
s.reverse()
mx=0
for i in range(n):
    for a in range(i+1,n):
        if s[a]+s[i]==100:
            mx+=1
            s[a]=0
            break
print(mx)
","0.0"
"ea085abc-b6a7-4545-86cb-85395a6c5937","n,k,m=map(int,input().split())
s=[]
for i in range(n):
    s.append(int(input()))
s.sort()
d=s[:k]
s.reverse()
sr=sum(d)//k
print(s[m-1],sr)

","0.0"
"3afc315a-4d55-4193-8135-d8dd5c533c49","s,n=input().split()
s=int(s)
n=int(n)
mas=[]
summ=0
for i in range(0,n):
    mas.append(int(input()))
mas=sorted(mas)
for x in range(len(mas)):
    if mas[x]+summ<=s:
        summ+=mas[x]
        nomer=x
    else: break
rzn=mas[nomer]
for j in range(nomer+1,n):
    if (summ-rzn)+mas[j]<=s:
        summ=(summ-rzn)+mas[j]
        rzn=mas[j]
print(nomer+1,rzn)","0.0"
"6c2adae3-f5f9-4088-9bc6-567fe66476fb","n,k=input().split()
n=int(n)
k=int(k)
s=[]
sa=0
for i in range(n):
    s.append(int(input()))
s=sorted(s)
sa=int((sum(s[n-k:n]))*0.2)
print(max(s[:n-k]),sa)
 ","0.0"
"b4e8d0e8-b2b3-4675-a090-16c08e1e936c","n=int(input())
def f(k):
    if k==0:
        return 1
    else: return k*f(k-1)
print(f(n))
","0.0"
"a11ad4e0-abf7-4110-9d03-04d451d484df","n,k,g=map(int,input().split())
ksm=[]
for i in range(n):
    ksm.append(int(input()))
ksm.sort()
dk=0
kves=0
ves=0
while k>0:
    ves=sum(ksm[:k-1])+kves
    for i in reversed(ksm):
        if ves+i<=g:
            kves+=i
            ksm.pop()
            break
    k-=1
print(kves) 
    ","0.0"
"3ae56164-1134-42f9-8fd7-204a82b81e52","a=int(input())
def kd(x,s):
    kd=[1,x]
    for i in range(2,round(x**0.5)+1):
        if x%i==0:
            kd.append(i)
            if i!=x//i: kd.append(x//i)
        if len(kd)>s: return [0]
    if len(kd)==s: return sorted(kd)
    else: return[0]
def prst(c):
    sps=0
    if c<=1: return False
    for i in range(2,round(c**0.5)+1):
        if c%i==0: return False
    return True
w=[0]
f=0
z=0 
md=0 
while f!=a:
    z+=1
    w=kd(z,a)
    f=len(w)
for i in w:
    if prst(i):
        md=i
print(w[-1], md)
","0.0"
"58443c34-5e1c-4cd5-b526-6442bc1c012d","s=input().split()
print(*s)
 ","0.0"
"3ae56164-1134-42f9-8fd7-204a82b81e52","a=int(input())
def kd(x,s):
    kd=[1,x]
    for i in range(2,round(x**0.5)+1):
        if x%i==0:
            kd.append(i)
            if i!=x//i: kd.append(x//i)
        if len(kd)>s: return [0]
    if len(kd)==s: return sorted(kd)
    else: return[0]
def prst(c):
    sps=0
    if c<=1: return False
    for i in range(2,round(c**0.5)+1):
        if c%i==0: return False
    return True
w=[0]
f=0
z=0
md=0
while f!=a:
    z+=1
    w=kd(z,a)
    f=len(w)
for i in w:
    if prst(i):
        md=i
print(w[-1], md)
","0.0"
"6bd877c6-1740-408f-a6ca-2f8adeae08f5","a=int(input())
b=int(input())
def nd(x):
    s=[]
    for i in range(2,round(x**0.5)+1):
        if x%i==0:
            s.append(i)
            if i!=x//i:
                s.append(x//i)
        if len(s)>1: return 0
    if len(s)==1: return x
    else: return(0)
z=0
for i in range(a+1,b):
    if i**0.5==int(i**0.5):
        f=nd(i)
        z+=sum(map(int,str(f)))
print(z)
 ","0.0"
"6bd877c6-1740-408f-a6ca-2f8adeae08f5","a=int(input())
b=int(input())
def nd(x):
    s=[]
    for i in range(2,round(x**0.5)+1):
        if x%i==0:
            s.append(i)
            if i!=x//i:
                s.append(x//i)
        if len(s)>1: break
    if len(s)==1: return x
    else: return(0)
z=0
for i in range(a+1,b):
    f=nd(i)
    z+=sum(map(int,str(f)))
print(z)","0.0"
"75410156-cdea-4efc-a0d6-91e02bf38e32","a=int(input())
b=int(input())
d=0
def qdel(x):
    qdel=[1]
    for i in range(2,x+1):
        if x%i==0:
            qdel.append(i)
    return qdel
for r in range(a,b+1):
    if len(qdel(r))==4:
        print(*qdel(r))
        d=1
if d==0: print(0)
","0.0"
"4c5a1413-e27d-4b6a-b218-bc8e2a3ade0e","a=int(input())
for i in range(1,a+1):
    if a%i==0:
        print(i,end=' ')
 ","0.0"
"ce727aeb-b2aa-4da5-be32-636ce90da78c","a=int(input())
b=int(input())
c=int(input())
d=int(input())
if a>b:
    for i in range(b,a+1):
        if i%d==c: print(i,end=' ')
else:
    for i in range(a,b+1):
        if i%d==c: print(i,end=' ')

","0.0"
"7aecb159-d960-48fa-8ebb-1bfa26b302d4","a1=input().split('.')
a=[i for i in a1]
for i in range(len(a)):
    if a[i]=='': a[i]=256
a=[int(i) for i in a]
z=0
for i in range(len(a)):
    if a[i]<=255 and a[i]>=0 and len(a)==4:
        z+=1
    else:z-=1
if z==4: print(1)
else: print(0)
","0.0"
"66c9f51f-8598-480d-85ef-3830594163ab","a=int(input())
p=a//3
s=a%3
if s!=0: p+=1
else:s=3
print(p,s)","0.0"
"d0a972df-02e0-41b9-a5e6-ff41f6ccc00e","n=int(input())
z1=[]
a=int(input())
for i in range(n-1):
    z1.append(a)
    a=int(input())
if n!=1: z=min(z1)
else: z=a
if z<(-15):
    print(z)
    print('YES')
else:
    print(z)
    print(""NO"")","0.0"
"b37c6232-1a19-47d7-9250-7e111725e611","a,b=input().split()
a=int(a)
b=int(b)
z=[]
x=[]
for i in range(1,a):
    if a%i==0:
        z.append(i)
for v in range(1,b):
    if b%v==0:
        x.append(v)
sb=sum(x)
sa=sum(z)
if sa==b and sb==a: print('YES')
else: print('NO')

","0.0"
"6b1e0963-bf0b-405e-b555-435a6225619c","a=str(input())
l1=len(a)
chet2=0
sum3=0
if int(a)%2==0: chet2=0
else: chet2=1
for i in range(len(a)):
    sum3=sum3+int(a[i])
print(l1,chet2,sum3)
","0.0"
"c519c7c3-cc1b-42eb-ae0d-77219a6ca340","a=str(input())
r=0
for i in range(len(a)):
    if a[i]=='0':
        r+=1
print(r)
        
","0.0"
"893cc270-337f-4829-bb45-0f60d1209419","a=int(input())
w=1
s=0
while w<a:
    w=w*2
    s+=1
print(s)
","0.0"
"f9af70f9-5fce-423e-94c5-b6f357e5242c","a=int(input())
n=int(input())
s=1
for i in range(1,n+1):
    s=s+a**i
print(s)
","0.0"
"a93745c4-cdf2-422d-86e3-46fc616f4f80","a=int(input())
m=[]
m0=0
for i in range(1,a+1):
    if (a%i==0) and (i%3==0):
        m.append(i)
        m0+=1
print(m0)
print(*m)
 ","0.0"
"a93745c4-cdf2-422d-86e3-46fc616f4f80","a=int(input())
m=[]
m0=0
for i in range(1,a+1):
    if (a%i==0) and (i%3==0):
        m.append(i)
        m0+=1
print(m0)
print(*m)
","0.0"
"f2aee372-d88a-497b-a1d2-64b122fc8b0a","a=int(input())
mx=0
for i in range(2,a+1):
    if a%i==0:
        mx=i
        break
print(mx)
","0.0"
"419d664d-81aa-4201-abc6-d514e7ee1691","a=input().split()
z=[str(i) for i in a]
q=0
i=0
s=[]
while int(z[i])!=0:
    s.append(z[i])
    q+=int(z[i])
    i+=1
q=q/len(s)
if q%(int(q))==0:
    print(int(q))
else: print((round(q,11)))
","0.0"
"26acdc8d-1ff5-439b-81bd-00672786ec6d","a=input().split()
z=[str(i) for i in a]
q=0
i=0
z.append(0)
while int(z[i])!=0:
    q+=int(z[i])
    i+=1
print(q)
","0.0"
"c0df7d49-26f5-451c-b44a-1e0bca60bca5","a1=input().split()
a=[i for i in a1]
print(len(a)-1)
","0.0"
"33cf3c19-292d-4544-a9a5-0e2a3c965272","a1=input().split()
a=[int(w) for w in (a1)]
s=0
for i in range(20):
    if a[i]/10==1 or a[i]/10==2 or a[i]/10==3 or a[i]/10==4 or a[i]/10==5 or a[i]/10==6 or a[i]/10==7 or a[i]/10==8 or a[i]/10==9:
        s+=1
print(s)
","0.0"
"18bbabdd-799e-47e6-b085-3698d76792e0","a=int(input())
print(int(a/4))","0.0"
"5b6da202-e075-48fb-a015-421187973431","a=int(input())
b=int(input())
print(a*b)","0.0"
"06c76227-d39e-4bac-8f71-f68c262dd42e","s=str(input())
a=0
amax=0
for i in s:
    if (i=='E' and a%3==0) or (i=='A' and a%3==1) or (i=='B' and a%3==2):
        a+=1
        if a>amax:
            amax=a
    else:
        a=0
print(amax)
      ","0.0"
"704fe53c-bcb7-48de-a964-e687a0ae281c","s=str(input())
a=0
for i in range(len(s)):
    if (s[i] in 'ABC'):
        a+=1
print(a)
","0.0"
"4cadd9be-89f5-4d54-b38d-f823b7087153","a,b=input().split()
l=[]
for i in range(int(a),int(b)+1):
    if i%2==0:
        l.append(i)
print(*l)
","0.0"
"b4e8d0e8-b2b3-4675-a090-16c08e1e936c","a=int(input())
s=1
for i in range(a):
    s=s*(i+1)
print(s)
","0.0"
"e5e8f4d5-0b0f-4a52-b5a7-12f8ef0a52f0","a=int(input())
b=int(input())
c=int(input())
mas=[a,b,c]
print(*sorted(mas))
","0.0"
"5362054a-bc83-4623-867a-66a72e38b366","n=int(input())
mas=[0]*50
mas1=[0]*50
q=1
m=0
for i in range(50):
    mas[i]=q
    q=q*2+1
    mas1[i]=sum(mas[:i])
    if n==mas1[i]:
        print('YES')
        m=1
        break
if m==0: print('NO')

","0.0"
"52fd296b-798f-4462-889c-5b49172bf987","n26k=int(input())
s=int(input())
p=int(input())
q=17*2*29
q=q-(n26k*26+s*38+p*42)
print(q)
","0.0"
"d49e80f4-ce33-4ded-aa53-337f8d0f73b8","n,a=input().split()
n=int(n)
a=int(a)
s=[]
for i in range(n):
    s.append(int(input()))
s.sort()
for i in range(a):
    s.pop()
    s.pop(0)
d=(sum(s)//len(s))
print(max(s),d)
","0.0"
"3ae56164-1134-42f9-8fd7-204a82b81e52","a=int(input())
def kd(x,s):
    kd=[1,x]
    for i in range(2,round(x**0.5)+1):
        if x%i==0:
            kd.append(i)
            if i!=x//i: kd.append(x//i)
        if len(kd)>s: return [0]
    if len(kd)==s: return sorted(kd)
    else: return[0]
def prst(c):
    sps=0
    if c<=1: return False
    for i in range(2,round(c**0.5)+1):
        if c%i==0: return False
    return True
w=[0]
f=0
z=0 
md=0
while f!=a:
    z+=1
    w=kd(z,a)
    f=len(w)
for i in w:
    if prst(i):
        md=i
print(w[-1], md)
","0.0"
"6bd877c6-1740-408f-a6ca-2f8adeae08f5","a=int(input())
b=int(input())
def nd(x):
    s=[]
    for i in range(2,round(x**0.5)+1):
        if x%i==0:
            s.append(i)
            if i!=x//i:
                s.append(x//i)
        if len(s)>1: return 0
    if len(s)==1: return x
    else: return(0)
z=0
for i in range(a+1,b):
    f=nd(i)
    z+=sum(map(int,str(f)))
print(z)
","0.0"
"9ad8e0ac-34e6-45a9-8f4f-0e8046aec803","a=int(input())
b=int(input())
d=0
md=0
e=0
f=0
def qdel(x):
    qdel=[1,x]
    for i in range(2,round(x**0.5)+1):
        if x%i==0:
            qdel.append(i)
            if i!=x//i: qdel.append(x//i)
    return sorted(qdel)
for r in range(a,b+1):
    d=qdel(r)
    if (len(d)>=md):
        md=len(d)
        e=d[-2]
        f=r

print(md,f,e)
        ","0.0"
"9ad8e0ac-34e6-45a9-8f4f-0e8046aec803","a=int(input())
b=int(input())
d=0
md=0
e=0
f=0
def qdel(x):
    qdel=[1]
    for i in range(2,x+1):
        if x%i==0:
            qdel.append(i)
    return qdel
for r in range(a,b+1):
    d=qdel(r)
    if (len(d)>=md):
        md=len(d)
        e=d[-2]
        f=r

print(md,f,e)
","0.0"
"9ad8e0ac-34e6-45a9-8f4f-0e8046aec803","a=int(input())
b=int(input())
d=0
md=0
e=0
f=0
def qdel(x):
    qdel=[1]
    for i in range(2,x+1):
        if x%i==0:
            qdel.append(i)
    return qdel
for r in range(a,b+1):
    d=qdel(r)
    if (len(d)>=md):
        md=len(d)
        e=d[-2]
        f=r
  
print(md,f,e)
        
","0.0"
"75410156-cdea-4efc-a0d6-91e02bf38e32","a=int(input())
b=int(input())
d=0
def qdel(x):
    qdel=[1]
    for i in range(2,x+1):
        if x%i==0:
            qdel.append(i)
        if len(qdel)>4: break
    return qdel
for r in range(a,b+1):
    if len(qdel(r))==4:
        print(*qdel(r))
        d=1
if d==0: print(0)
","0.0"
"75410156-cdea-4efc-a0d6-91e02bf38e32","a=int(input())
b=int(input())
d=0
def qdel(x):
    qdel=[1]
    for i in range(2,x+1):
        if x%i==0:
            qdel.append(i)
        if len(qdel)==5: break
    return qdel
for r in range(a,b+1):
    if len(qdel(r))==4:
        print(*qdel(r))
        d=1
if d==0: print(0)
","0.0"
"a0497858-245b-4fc6-9d58-990c5e2f0724","n=int(input())
z=[]
a=int(input())
z.append(a)
for i in range(n-1):
    a=int(input())
    z.append(a)
z1=[]
for i in range(n):
    if z[i]%10==2:
        z1.append(z[i])
print(max(z1))
","0.0"
"3d109570-fadd-47bd-b0cb-2d9d34ba11ca","x,p,y,t=input().split()
print(int(x)**int(p)+int(y)**int(t))
","0.0"
"3d109570-fadd-47bd-b0cb-2d9d34ba11ca","x,p,y,t=input().split()
a=int(x)**int(p)+int(y)**int(t)
print(a)
","0.0"
"33eb8e68-cf75-4892-b87b-97ceeee27d04","a1=input().split()
a=[int(w) for w in a1]
if a[0]==a[1]: print(0)
elif (a[0]>0 and a[1]>0) or (a[0]<0 and a[1]<0): print(a[0]+a[1])
else: print(a[0]*a[1])
","0.0"
"94a4304c-1628-4b48-a1bb-62970467c416","n=int(input())
a1=input().split()
a=[int(i) for i in a1]
print(*sorted(a))
","0.0"
"420a5758-8cb1-445d-9bf7-bd8017a41cb2","n=int(input())
a1=input().split()
a=[int(i) for i in a1]
mx=0
mxi=0
for i in range(n):
    if a[i]>mx:
        mx=a[i]
        mxi=i
c=a[mxi]
a[mxi]=a[len(a)-1]
a[len(a)-1]=c
print(*a)
","0.0"
"9f26801e-6448-47ab-af7c-8cd9ec482ddf","a=int(input())
m1=input().split()
m=[int(i) for i in m1]
print(sum(m)) ","0.0"
"3d7a3219-e451-4f8b-894c-c96623eba5e5","s=str(input())
if s[::-1]==s: print('YES')
else: print('NO')
","0.0"
"1516a6df-2eca-4d9d-8705-395d2d5f3a1d","a=str(input())
mx=0
mn=9
for i in range(len(a)):
    if int(a[i])>=mx:
        mx=int(a[i])
    if int(a[i])<=mn:
        mn=int(a[i])
print(mn,mx)
        
","0.0"
"132b4d29-b1fe-4591-be7e-9e4e150e35b6","def Simp(xx):
    if xx==1:
        return False
    d=2
    while d*d<=(xx-1):
        if xx%d==0:
            return False
        d+=1
    return True
a=int(input())
if Simp(a):
    print('YES')
else: print(""NO"")
","0.0"
"132b4d29-b1fe-4591-be7e-9e4e150e35b6","def Simp(xx):
    if xx==1:
        return False
    d=2
    while d*d<=(xx-1):
        if xx%d==0:
            return False
        d+=1
    return True
a=int(input())
if Simp(a):
    print('YES')
else: print(""NO"")","0.0"
"132b4d29-b1fe-4591-be7e-9e4e150e35b6","a=int(input())
z=0
for i in range(2,a+1):
    if a%i==0:
        z+=1
        if z==2:
            break
if z==1: print('YES')
else: print(""NO"")
","0.0"
"931dc9d6-3183-4d35-bee6-95b210e0268a","a=int(input())
m=[]
for i in range(1,a+1):
    if a%i==0:
        m.append(i)
print(*m)","0.0"
"c479ed62-3a40-4f93-89c8-b674826ab144","a=int(input())
mx=0
for i in range(1,a+1):
    if a%i==0:
        mx+=1
print(mx)
","0.0"
"157c7563-5b83-4f84-b184-e15788a65471","a=int(input())
i=2
while a%i!=0:
    i+=1
print(int(i))","0.0"
"06a06b1c-da2e-4210-b889-371de309b82f","a=int(input())
s1=input().split()
s=[int(i) for i in s1]
O=0
L=0
T=0
for i in s:
    if i==0:
        O+=1
    elif i>=1:
        L+=1
    elif i<=1:
        T+=1
print(O,L,T)
","0.0"
"af34735a-a422-4900-a41c-ce3188000595","s=int(input())
for i in range(s):
    print('I must not tell lies')","0.0"
"5be45c97-769f-45be-9ed4-b4dd633ac057","s=input().split()
ms=[str(i) for i in s]
print(*ms)","0.0"
"091ddb60-bc05-4be5-808d-ce061c459e3e","s=int(input())
a=int(input())
print(int(s/a))","0.0"
"0cc69b6a-3909-441a-a329-8b2c81413bb0","a=int(input())
s=a//10
print(s) ","0.0"
"06c76227-d39e-4bac-8f71-f68c262dd42e","s=str(input())
a=0
amax=0
for i in s:
    if (i=='E' and a%3==0) or (i=='A' and a%3==1) or (i=='B' and a%3==2):
        a+=1
        if a>amax:
            amax=a
    else:
        a=0
print(amax)
  ","0.0"
"1b2dfff2-077c-4804-9067-dec63bee6584","s=str(input())
a=str(input())
sa=[]
q=0
s=s+'**'
for i in range(len(s)-1):
    if s[i]==a:
        q+=1
    else:
        sa.append(q)
        q=0
print(max(sa))
","0.0"
"58443c34-5e1c-4cd5-b526-6442bc1c012d","s=input().split()
ms=[str(i) for i in s]
print(*ms)

","0.0"
"1a27e016-52ff-4e78-89cb-956f0a7cac6b","N=int(input())
mas=[0]*N
S=input().split()
mas=[int(i)for i in S]
s=sorted(mas)
print(*s)
","0.0"
"35d772a5-7770-4a91-9118-ad11e4ae7feb","N=int(input())
mas=[0]*N
S=input().split()
mas=[int(i)for i in S]
k=0
for i in range(N):
    if mas[i]>mas[i-1]:
        k+=1
print(k)","0.0"
"4b28d852-6b47-4db4-aa6b-099ecb0e7a8b","n=int(input())
print(n)
while n!=1:
    if n%2==0:
        n=n/2
    else:
        n=(3*n+1)/2
    print(int(n))
","0.0"
"94224cd9-666a-4814-8edb-60beb14ea59a","d=int(input())
m=int(input())
y=int(input())
if (m<9 and y==2010):
    print('YES')
else: print('NO')


","0.0"
"06c76227-d39e-4bac-8f71-f68c262dd42e","s=str(input())
a=0
amax=0
for i in s:
    if (i=='E' and a%3==0) or (i=='A' and a%3==1) or (i=='B' and a%3==2):
        a+=1
        if a>amax:
            amax=a
    else:
        a=0
print(amax)
 ","0.0"
"704fe53c-bcb7-48de-a964-e687a0ae281c","s=str(input())
a=0
amax=0
for i in range(len(s)):
    if (s[i] in 'ABC'):
        a+=1
    else:
        if a>amax:
            amax=a
        a=0
print(amax)","0.0"
"4c5a1413-e27d-4b6a-b218-bc8e2a3ade0e","a=int(input())
z=[]
for i in range(1,a+1):
    if a%i==0:
        z.append(i)
print(*z)","0.0"
"f9af70f9-5fce-423e-94c5-b6f357e5242c","a=int(input())
n=int(input())
s=0
for i in range(n+1):
    s=s+a**i
print(s)","0.0"
"c7512b39-389d-4ddb-b3fe-5475bd01a088","a=int(input())
b=int(input())
for i in range(200):
    s=int(input())
    if a+b==s:
        print(i+1)
        break","0.0"
"f9f08d20-e4e6-49ac-8682-f4b7100928a4","a=int(input())
b=int(input())
d=int(input())
s=3.14*(d/2+2)
if int(s)!=s:
    s=int(s+1)
if (a*b)>=s: print('YES')
else: print('NO')
","0.0"
"08f18ec8-c939-44c6-b125-642f6a2341fa","x=int(input())
x1=x/8
x2=3*(2*x1)
print(int(x1),int(x1),int(x2))","0.0"
"5d02ab7a-4394-4098-9f7a-ed3912083888","h=int(input())
m=int(input())
m+=15
if m>=60:
    m=m-60
    h+=1
h+=1
if h>=23:
    h=h-24
print(h,m)
","0.0"
"b8f9bbc2-7933-426f-a21d-ff3e82abc198","s=str(input())
sa1=[]
sa2=[]
q=1
s=s+'**'
for i in range(len(s)-1):
    if s[i]==s[i+1]:
        q+=1
    else:
        sa1.append(s[i])
        sa2.append(q)
        q=1
print(sa1[sa2.index(max(sa2))],sa2[sa2.index(max(sa2))])
","0.0"
"58443c34-5e1c-4cd5-b526-6442bc1c012d","s=input().split()
ms=[str(i) for i in s]
print(*ms) ","0.0"
"7c143f80-2e7e-4890-bee7-ffbdcbf5b05b","s=str(input())
a=0
if s[1]==' ':
    a=1
if s[len(s)-2]==' ':
    a+=1
for i in range(1,(len(s)-2),1):
    if s[i]==' ' and s[i+1]!=' ' and s[i+2]==' ':
        a+=1
print(a)   ","0.0"
"3876c09d-7f12-4c69-ac5c-8ca780dcd633","s=str(input())
n=input().split()
mas=[int(i)for i in n]
m=s[mas[0]-1:mas[1]]
print(s[0:mas[0]-1]+m[::-1]+s[mas[1]:])
","0.0"
"abd77e3f-81bd-4c24-afdb-b64873f7c1c3","N=int(input())
mas=[0]*N
S=input().split()
mas=[int(i)for i in S]
a=0
for i in range(N):
    a=a+mas[i]
s=round(a/N,1)
print(s)
    
","0.0"
"6671bab8-0e57-4f15-bc39-c933a2495f50","N=int(input())
mas=[0]*N
S=input().split()
mas=[int(i)for i in S]

for i in range(0,N-1,2):
    t=mas[i]
    mas[i]=mas[i+1]
    mas[i+1]=t
print(*mas)","0.0"
"1ff5a639-82a9-46d5-99e8-90b0529a5016","h=int(input())
m=int(input())
hn=h+1
mn=m+15
if (hn>23):
    hn=hn-24
if (mn>59):
    mn=mn-60
    hn=hn+1
print(hn,mn)","0.0"
"190516a0-6ed3-4c42-9f36-dc481a3adb70","ï»¿x=int(input())
y=int(input())
print(x+y)
","0.0"
"190516a0-6ed3-4c42-9f36-dc481a3adb70","x=int(input())
y=int(input())
print(x+y)","0.0"
"7880445a-3568-4939-8f55-d80530b696c0","n,v1=map(int, input().split())
sp=[-1]*n
Q=[]
QQ=[]
maska=0
visited=[False]*n
gr=[[0]*n for i in range(n)]
for i in range(n):
    gr[i] = [int(t) for t in input().split()]

def BFS(ver):
    if ver<len(Q):
        v=Q[ver]
        for i in range(n):
            if gr[v][i]==1 and not(visited[i]):
                Q.append(i)
                visited[i]=True
                sp[i]=v  
        BFS(ver+1)
Q.append(v1-1)
visited[v1-1]=True
BFS(0)
m=int(input())
for i in range(m):
    vk=int(input())
    QQ=[]
    maska=0
    per=vk-1
    while per!=v1-1:
        QQ.append(per+1)
        per=sp[per]
        if per==-1:
            maska=1
            break
    if maska==0:
        QQ.append(v1)
        QQ.reverse()
        print(*QQ)
    else:
        print(-1)","0.0"
"58443c34-5e1c-4cd5-b526-6442bc1c012d","s=input().split()
ms=[str(i) for i in s]
print(*ms)
 
","0.0"
"0df7e1f2-c1c4-41f3-9904-a9e4495a5bfc","a=int(input())
b=int(input())

def nd(x):
    nd=[]
    for i in range(2,round(x**0.5)+1):
        if (x%i==0) and (i>9) and (i<100):
            nd.append(i)
    return sorted(nd)

for g in range(a,b+1):
    if len(nd(g))==30:
        print(g,min(nd(g)),max(nd(g)))
","0.0"
"6bd877c6-1740-408f-a6ca-2f8adeae08f5","a=int(input())
b=int(input())
def nd(x):
    s=[]
    for i in range(2,round(x**0.5)+1):
        if x%i==0:
            s.append(i)
            if i!=x//i:
                s.append(x//i)
        if len(s)>1: return 0
    if len(s)==1: return x
    else: return(0)
z=0
for i in range(a+1,b):
    if i**0.5==int(i**0.5):
        f=nd(i)
        z+=sum(map(int,str(f)))
print(z)
","0.0"
"ec3cfb4d-5f50-4fa0-8e53-686d10f6c0b2","def nd(z):
    s=[]
    for i in range(1,round(z**0.5)+1):
        if z%i==0:
            s.append(i)
            if i!=z//i:
                s.append(z//i)
    return sorted(s)
a,b=map(int,input().split())
f=0
g=[]
for i in range(a,b+1):
    if i**0.5==int(i**0.5):
        g=nd(i)
        f+=1
        print(f,i,len(g),round(i**0.5))
","0.0"
"ec3cfb4d-5f50-4fa0-8e53-686d10f6c0b2","def nd(z):
    s=[]
    for i in range(1,z+1):
        if z%i==0: s.append(i)
    return(s)
a,b=input().split()
a=int(a)
b=int(b)
f=0
for i in range(a,b+1):
    d=nd(i)
    if len(d)%2==1:
        f+=1
        print(f,i,len(d),int(i**0.5))","0.0"
"9ad8e0ac-34e6-45a9-8f4f-0e8046aec803","a=int(input())
b=int(input())
d=0
md=0
e=0
f=0
def qdel(x):
    qdel=[1]
    for i in range(2,x+1):
        if x%i==0:
            qdel.append(i)
    return qdel
for r in range(a,b+1):
    d=qdel(r)
    if (len(d)>=md):
        md=len(d)
        e=d[-2]
        f=r
 
print(md,f,e)
        
","0.0"
"9ad8e0ac-34e6-45a9-8f4f-0e8046aec803","a=int(input())
b=int(input())
d=0
md=0
e=0
f=0
def qdel(x):
    qdel=[1]
    for i in range(2,x+1):
        if x%i==0:
            qdel.append(i)
    return qdel
for r in range(a,b+1):
    d=qdel(r)
    if (len(d)>=md):
        md=len(d)
        e=d[-2]
        f=r

print(md,f,e)
        
","0.0"
"75410156-cdea-4efc-a0d6-91e02bf38e32","a=int(input())
b=int(input())
d=0
def qdel(x):
    qdel=[1]
    for i in range(2,x+1):
        if x%i==0:
            qdel.append(i)
        if len(qdel)>4: break
    return qdel
for r in range(a,b+1):
    if len(qdel(r))==4:
        print(*qdel(r))
        d=1
if d==0: print(0)
  ","0.0"
"ce727aeb-b2aa-4da5-be32-636ce90da78c","a=int(input())
b=int(input())
c=int(input())
d=int(input())
for i in range(a,b+1):
    if i%d==c: print(i,end=' ')

","0.0"
"48531b77-6537-4389-a998-5c74e35ac9af","a=int(input())
if a%3==0: print('YES')
else: print('NO')
","0.0"
"702fc37e-8257-458c-aedd-8ca35534289a","a,b=input().split()
c,d=input().split()
a=int(a)
b=int(b)
c=int(c)
d=int(d)
sab=a+b
scd=c+d
if sab==scd: print(a,b,c,d)
elif sab>scd: print(a,b)
else: print(c,d)
","0.0"
"33eb8e68-cf75-4892-b87b-97ceeee27d04","a1=input().split()
a=[int(w) for w in (a1)]
s=0
for i in range(100):
    s*=1000
if a[0]==a[1]: print(0)
elif (a[0]>0 and a[1]>0) or (a[0]<0 and a[1]<0): print(a[0]+a[1])
else: print(a[0]*a[1])
","0.0"
"33eb8e68-cf75-4892-b87b-97ceeee27d04","a1=input().split()
a=[int(w) for w in (a1)]
if a[0]==a[1]: print(0)
elif (a[0]>0 and a[1]>0) or (a[0]<0 and a[1]<0): print(a[0]+a[1])
else: print(a[0]*a[1])

","0.0"
"6749cc47-75b3-4622-915b-5601e3963b66","x,y=input().split()
d=1
w=float(x)
while w<float(y):
    w=w+0.1*w
    d+=1
if x==y and int(x)==0: d=0
print(d)
","0.0"
"a93745c4-cdf2-422d-86e3-46fc616f4f80","a=int(input())
m=[]
m0=0
for i in range(1,a+1):
    if (a%i==0) and (i%3==0):
        m.append(i)
        m0+=1
print(m0)
print(*m)
   ","0.0"
"a0f460df-bf11-47a1-b164-d95c2d265cc6","n=int(input())
a1=input().split()
a=list([int(i) for i in a1])
a.sort()
a.reverse()
print(*a)","0.0"
"510dc5c7-a46e-4b15-be50-4ecfa1e046bd","n=int(input())
a1=input().split()
a=[int(i) for i in a1]
q=0
s=sum(a)
sa=s/n
if int(sa)==sa-0.5:
    sa+=0.1
print(round(sa))
","0.0"
"ebc1af65-7f28-4308-a3c3-07335f379d84","a=int(input())
s=0
q=1
for i in range(1,a+1):
    if a%q==0:
        s+=1
    q+=1
print(s)
","0.0"
"050f0a60-1200-4dec-acb5-12c3b9f24d0d","a=int(input())
print(a//60)","0.0"
"a34bd4d0-cc64-4d5c-ac41-7578aa90494e","a=int(input())
b=int(input())
c=int(input())
print(a+b+c)","0.0"
"06c76227-d39e-4bac-8f71-f68c262dd42e","s=str(input())
a=0
amax=0
for i in s:
    if (i=='E' and a%3==0) or (i=='A' and a%3==1) or (i=='B' and a%3==2):
        a+=1
        if a>amax:
            amax=a
    else:
        a=0
print(amax)
","0.0"
"40d78243-79a0-4ec7-8ff5-47f803a55e0b","s=str(input())
a=0
for i in range(len(s)-2):
    if (s[i] in 'BCD') and (s[i+1] in 'BDE') and (s[i]!=s[i+1]) and (s[i+2] in 'BCE') and (s[i+1]!=s[i+2]):
        a+=1
print(a)
","0.0"
"9cb9b7da-39db-403e-8612-483ae6cb4067","a=input().split()
q=[int(i) for i in a]
q.append(0)
print(max(q))","0.0"
"eabdf11f-d1f1-44e0-8017-20e8e541ec68","a=int(input())
b=int(input())
c=int(input())
x=max(a,b,c)
if x<((a+b+c)-x):
    print('YES')
else: print('NO')
","0.0"
"f9f08d20-e4e6-49ac-8682-f4b7100928a4","a=int(input())
b=int(input())
d=int(input())
s1=0
s=3.14*(d/2+2)
if int(s)!=s:
    s1=int(s+1)
if (a*b)>=s: print('YES')
else: print('NO')
","0.0"
"7c143f80-2e7e-4890-bee7-ffbdcbf5b05b","s=str(input())
a=0
if s[1]==' ':
    a=1
if s[len(s)-2]==' ':
    a+=1
for i in range(1,(len(s)-2),1):
    if s[i]==' ' and s[i+1]!=' ' and s[i+2]==' ':
        a+=1
print(a) 
","0.0"
"1038fcef-65cc-4f6b-bde1-5d7d3bffea34","s=str(input())
sn=''
for i in range(len(s)):
    if s[i]!=' ':
        sn=sn+s[i]
print(sn)
","0.0"
"2ee76cc8-f815-4807-a797-4059ae8a8d76","n=int(input())
mas=[0]*n
S=input().split()
mas=[int(i)for i in S]
list.sort(mas)
k=1
mas=mas+[1001]
for i in range(n):
    if mas[i]==mas[i+1]:
        k+=1
    else:
        print(mas[i],k)
        k=1
","0.0"
"7488edcd-5001-458e-955c-d220494cffde","N=int(input())
mas=[0]*N
S=input().split()
mas=[int(i)for i in S]
k=mas[1]
for i in range(N):
    if mas[i]<k:
       k=mas[i]
print(k)
","0.0"
"bd77bd8e-1bf2-4a3b-b674-9eddb5375116","n=int(input())
i=2
while n%i!=0:
    i=i+1
print(int(i))
    
","0.0"
"d48be896-b484-440a-9ca5-2cc0f31533dc","X=int(input())
Y=int(input())
if ((X==6 and Y==1) or (X==8 and Y==1) or (X==5 and Y==2) or(X==5 and Y==4) or (X==6 and Y==5) or (X==8 and Y==5)):
    print('YES')
else:
    print('NO')
","0.0"
"6bd877c6-1740-408f-a6ca-2f8adeae08f5","a=int(input())
b=int(input())
def nd(x):
    s=[]
    for i in range(2,round(x**0.5)+1):
        if x%i==0:
            s.append(i)
            if i!=x//i:
                s.append(x//i)
        if len(s)>1: return 0
    if len(s)==1: return x
    else: return(0)
z=0
for i in range(a+1,b):
    if i**0.5==int(i**0.5):
        f=nd(i)
        z+=sum(map(int,str(f)))
print(z)
   ","0.0"
"6bd877c6-1740-408f-a6ca-2f8adeae08f5","a=int(input())
b=int(input())
def nd(x):
    s=[]
    for i in range(2,round(x**0.5)+1):
        if x%i==0:
            s.append(i)
            if i!=x//i:
                s.append(x//i)
    if len(s)==1: return x
    else: return(0)
z=0
for i in range(a+1,b):
    f=nd(i)
    z+=sum(map(int,str(f)))
print(z)


","0.0"
"4c5a1413-e27d-4b6a-b218-bc8e2a3ade0e","a=int(input())
for i in range(1,a+1):
    if a%i==0:
        print(i,end=' ')
  ","0.0"
"ec3cfb4d-5f50-4fa0-8e53-686d10f6c0b2","def nd(z):
    s=[]
    for i in range(1,z+1):
        if z%i==0: s.append(i)
    return(s)
a,b=input().split()
a=int(a)
b=int(b)
f=0
for i in range(a,b+1):
    d=nd(i)
    if len(d)%2==1:
        f+=1 
        print(f,i,len(d),int(i**0.5))","0.0"
"9ad8e0ac-34e6-45a9-8f4f-0e8046aec803","a=int(input())
b=int(input())
d=0
md=0
e=0
f=0
def qdel(x):
    qdel=[1,x]
    for i in range(2,round(x**0.5)+1):
        if x%i==0:
            qdel.append(i)
            qdel.append(x//i)
    return sorted(qdel)
for r in range(a,b+1):
    d=qdel(r)
    if (len(d)>=md):
        md=len(d)
        e=d[-2]
        f=r

print(md,f,e)
        ","0.0"
"e5e8f4d5-0b0f-4a52-b5a7-12f8ef0a52f0","a=int(input())
b=int(input())
c=int(input())
m=max(a,b,c)
n=min(a,b,c)
print(n,((a+b+c)-m-n),m)
","0.0"
"f9f08d20-e4e6-49ac-8682-f4b7100928a4","a=int(input())
b=int(input())
c=int(input())
f=min(a,b)
c+=4
if c<=f: print(""YES"")
else: print(""NO"")
","0.0"
"777756d6-d867-4cc7-978e-717933384418","a=int(input())
if a%4==1: print(""Gryffindor"")
elif a%4==2: print(""Slytherin"")
elif a%4==3: print(""Ravenclaw"")
else: print(""Hufflepuff"")
","0.0"
"076a1e7a-9e4f-40ff-a271-7a009406d02d","n=int(input())
a1=input().split()
a=[int(i) for i in a1]
print(*sorted(a))
","0.0"
"3d57ecc4-72d1-43f5-ae17-2cc26c570f11","s=str(input())
print(s[::-1])
","0.0"
"6749cc47-75b3-4622-915b-5601e3963b66","x,y=input().split()
d=1
w=float(x)
while w<float(y):
    w=w+0.1*w
    d+=1
print(d)
","0.0"
"6749cc47-75b3-4622-915b-5601e3963b66","x,y=input().split()
d=1
w=float(x)
while w<=float(y):
    w=w+0.1*w
    d+=1
print(d)
","0.0"
"4c5a1413-e27d-4b6a-b218-bc8e2a3ade0e","a=int(input())
z=[1]
for i in range(2,a+1):
    if a%i==0:
        z.append(i)
print(*z)
 ","0.0"
"132b4d29-b1fe-4591-be7e-9e4e150e35b6","a=int(input())
z=0
for i in range(2,a+1):
    if a%i==0:
        z+=1
if z==1: print('YES')
else: print(""NO"")
","0.0"
"3ac18983-f406-44b5-96bf-2aa5ce5a6c3d","n=int(input())
a1=input().split()
a=[int(i) for i in a1]
a2=0
a3=0
a4=0
a5=0
for i in a:
    if i==5:
        a5+=1
    if i==4:
        a4+=1
    if i==3:
        a3+=1
    if i==2:
        a2+=1
print(5,a5)
print(4,a4)
print(3,a3)
print(2,a2)
","0.0"
"157c7563-5b83-4f84-b184-e15788a65471","a=int(input())
s=2
d=0
for i in range(a):
    if a%s==0:
        d=s
    else: s+=1
print(d)
","0.0"
"33eb8e68-cf75-4892-b87b-97ceeee27d04","a1=input().split()
a=[int(w) for w in (a1)]
if a[0]==a[1]: print(0)
elif (a[0]>0 and a[1]>0) or (a[0]<0 and a[1]<0): print(a[0]+a[1])
elif (a[0]<0 and a[1]>0) or (a[0]>0 and a[1]<0): print(a[0]*a[1])

","0.0"
"ade9b273-aad8-49ba-b6a7-7ffcb02b0011","
s=str(input())
mas=['1','2','3','4','5','6','7','8','9','0']
a=0
for i in range(len(s)):
    for t in range(9):
        if s[i]==mas[t]:
            a+=1
if a==0: print('NO')
else: print('YES')","0.0"
"b76c8f23-a934-45a5-ad8c-8396fe67301c","a=int(input())
z1=input().split()
z=[int(w) for w in (z1)]
x=0
xmax=0
xmaz=0
for i in range(a):
    for e in (str(z[i])):
        x+=int(e)
        if x>xmax:
            xmax=x
            xmaz=z[i]
    x=0
print(xmaz)","0.0"
"901dd977-9e8b-4b54-9730-6aeaa9d4a9e7","a=int(input())
print(90-a)","0.0"
"16305713-d2dc-4ab1-8bbd-107594c55519","a=int(input())
b=int(input())
c=int(input())
mx=max(a,b,c)
mn=min(a,b,c)
b=((a+b+c)-mn-mx)
a=mn
c=mx
if a+b>c:
    if ((a**2+b**2)==c**2):
        print('right')
    elif ((a**2+b**2)>c**2):
        print('acute')
    elif ((a**2+b**2)<c**2):
        print('obtuse')
else: print('impossible')","0.0"
"80f0773c-d8da-4f89-8ff8-f91226bfbbba","a=int(input())
s=a**3
print(s)","0.0"
"06c76227-d39e-4bac-8f71-f68c262dd42e","s=str(input())
a=0
amax=0
for i in s:
    if (i=='E' and a%3==0) or (i=='A' and a%3==1) or (i=='B' and a%3==2):
        a+=1
        if a>amax:
            amax=a
    else:
        a=0
print(amax)
    ","0.0"
"4e5b21c0-e86f-4eac-82b6-1a0d00ae4199","a=input().split()
q=[int(i) for i in a]
q.append(0)
e=max(q)
s=0
for i in range(len(q)):
    if q[i]==e:
        s+=1
print(s)
","0.0"
"ffc65b57-d995-421d-a0bd-b34cc8cf34a5","a=str(input())
q=0
for i in range(len(a)):
    q+=int(a[i])
print(q)","0.0"
"4c5a1413-e27d-4b6a-b218-bc8e2a3ade0e","a=int(input())
z=[1]
for i in range(2,a+1):
    if a%i==0:
        z.append(i)
print(*z)
","0.0"
"3276b711-2292-488f-9353-be7b86ab5e1a","N=int(input())
print(2**N)
","0.0"
"431be734-39e6-4f58-aec7-61e67c8ee1b5","a=int(input())
if (((a%4==0) and (a%100!=0)) or (a%400==0)):
    print('YES')
else: print('NO')
","0.0"
"4659a273-9c89-4ff8-a1bd-6d0ae87e9915","a=str(input())
if int(a)>=10 and int(a)<=20:
    print(a,'magov')
else:
    if int(a[len(a)-1])==1:
        print(a,'mag')
    elif int(a[len(a)-1])<=4 and int(a[len(a)-1])!=0:
        print(a,'maga')
    else: print(a,'magov')
          
","0.0"
"f9f08d20-e4e6-49ac-8682-f4b7100928a4","a=int(input())
b=int(input())
d=int(input())
s=3.14*(d/2+2)
if (a*b)>=s: print('YES')
else: print('NO')
","0.0"
"f2d92959-39d9-49fe-a9b1-5868567eeedf","i=int(input())
i=i*2.54
print(int(i))
","0.0"
"94581bd4-2060-44f1-ad09-4c18917d4f17","s=str(input())
sa=[]
q=1
for i in range(len(s)-1):
    if s[i]!=s[i+1]:
        q+=1
    else:
        sa.append(q)
        q=1
print(max(sa))
","0.0"
"1b2dfff2-077c-4804-9067-dec63bee6584","s=str(input())
a=str(input())
sa=[]
q=0
s=s+'**'
for i in range(len(s)-1):
    if s[i]==a:
        q+=1
    else:
        sa.append(q)
        q=0
print(max(sa)) 
   ","0.0"
"1b2dfff2-077c-4804-9067-dec63bee6584","s=str(input())
a=str(input())
sa=[]
q=0
s=s+'**'
for i in range(len(s)-1):
    if s[i]==a:
        q+=1
    else:
        sa.append(q)
        q=0
print(max(sa)) 
 ","0.0"
"1b2dfff2-077c-4804-9067-dec63bee6584","s=str(input())
a=str(input())
sa=[]
q=0
s=s+'**'
for i in range(len(s)-1):
    if s[i]==a:
        q+=1
    else:
        sa.append(q)
        q=0
print(max(sa)) 
","0.0"
"e291f79e-b00b-4223-8250-eb7e45d39e54","s=str(input())
for i in range(len(s)):
    if s[i]=='R':
        s=s.replace('R','Z')
    if s[i]=='r':
        s=s.replace('r','z')
print(s)
","0.0"
"2fbbe9c8-9707-450c-82c7-1239bb38b1cd","s=str(input())
a=0
for i in range(len(s)):
    if s[i]=='!':
        a+=1
print(a)
","0.0"
"05c50d73-fe75-4975-9d19-7e26e8c8d05f","s=str(input())
a=1
for i in range(len(s)):
    if s[i]==' ':
        a+=1
print(a)","0.0"
"abd77e3f-81bd-4c24-afdb-b64873f7c1c3","N=int(input())
mas=[0]*N
S=input().split()
mas=[int(i)for i in S]
a=0
for i in range(N):
    a=a+mas[i]
s=a/N
print(s)
    
","0.0"
"521b1be0-3bd5-45f4-94f5-dad4b82ad375","N=int(input())
mas=[0]*N
S=input().split()
mas=[int(i)for i in S]
k=mas[1]
for i in range(N):
    if mas[i]>k:
       k=mas[i]
print(k)
","0.0"
"1b689872-4b61-4615-a14e-24e7a0bcb1ba","N=int(input())
mas=[0]*N
S=input().split()
mas=[int(i)for i in S]
k=1
for i in range(N-1):
    if mas[i]!=mas[i+1]:
       k+=1
print(k)
","0.0"
"efe1a482-a2db-4971-a769-8b60a0beaf64","N=int(input())
mas=[0]*N
S=input().split()
mas=[int(i)for i in S]
k=0
for i in range(N-1):
    if mas[i]>mas[i-1] and mas[i]>mas[i+1]:
        k+=1
print(k)
","0.0"
"875ec0a5-0a8e-468b-b0f0-1b32c0337354","N=int(input())
mas=[0]*N
S=input().split()
mas=[int(i)for i in S]
k=0
for i in range(N):
    if mas[i]>=0:
        k+=1
print(k)
","0.0"
"9e9de547-58f5-45b9-a733-37cc732bf237","ï»¿n=int(input())
m=int(input())
n=n*2.54
if (n<=m):
    print('YES')
else:
    print('NO')
","0.0"
"190516a0-6ed3-4c42-9f36-dc481a3adb70","q=int(input())
w=int(input())
print(q+w)","0.0"
"e9f3df82-446a-424e-a07b-3c77daa739f2","n=int(input())

Q=[]
Q2=[]
visited=[False]*n
gr=[[0]*n for i in range(n)]
for i in range(n):
    gr[i] = [int(t) for t in input().split()]

def BFS(ver):
    if ver<n:
        v=Q[ver]
        for i in range(n):
            if gr[v][i]==1 and not visited[i]:
                Q.append(i)
                visited[i]=True
        BFS(ver+1)

Q.append(0)
visited[0]=True
BFS(0)

for i in range(len(Q)):
    Q2.append(Q[i]+1)
        
print(*Q2)","0.0"
"2924cfce-8ebf-4fe5-aa8e-046256297fb1","n=int( input())
sp=[]
Grflag=[0]*n
gr=[[0]*n for i in range(n)]
for i in range(n):
    gr[i] = [int(t) for t in input().split()]

def dnf(it):
    
    Grflag[it]=1
    for i in range(n):
        if Grflag[i]==0 and gr[it][i]==1:
            dnf(i)
    sp.append(it+1)

for k in range(n):
    if Grflag[k]==0:
        dnf(k)
sp.reverse()
print(*sp)","0.0"
"82028d7b-804a-4c3d-acf8-29bc892147e5","n=int( input())
sp=[]
Grflag=[0]*n
gr=[[0]*n for i in range(n)]
for i in range(n):
    gr[i] = [int(t) for t in input().split()]

def dnf(it):
    sp.append(it+1)
    Grflag[it]=1
    for i in range(n):
        if Grflag[i]==0 and gr[it][i]==1:
            dnf(i)

dnf(0)
if len(sp)==n:
    print('YES')
else:
    print('NO')","0.0"
"82028d7b-804a-4c3d-acf8-29bc892147e5","n=int( input())
sp=[]
Grflag=[0]*n
gr=[[0]*n for i in range(n)]
for i in range(n):
    gr[i] = [int(t) for t in input().split()]

def dnf(it):
    sp.append(it+1)
    Grflag[it]=1
    for i in range(n):
        if Grflag[i]==0 and gr[it][i]==1:
            dnf(i)

dnf(0)
if len(sp)==n:
    print('YES')
else:
    print('NO')","0.0"
"614009a0-821e-497b-9a0b-07c0dbe033b8","
n,m = map(int, input().split())
gr=[[0]*n for i in range(n)]
tr=[]
for i in range(n):
    gr[i] = [int(t) for t in input().split() ]
for i in range(n):
    for j in range(n):
        if i==j:
            gr[i][j]=1
for i in range(n):
    for j in range(n):
        for z in range(n):
            if (gr[j][i]and gr[i][z]):
                gr[j][z]=1
for i in range(n):
    for j in range(n):
        if i==j:
            gr[i][j]=0
for i in range(m):
    r,t = map(int, input().split())
    if gr[r-1][t-1]==1:
        print('YES')
    else:
        print('NO')","0.0"
"614009a0-821e-497b-9a0b-07c0dbe033b8","

n,m = map(int, input().split())
gr=[[0]*n for i in range(n)]
tr=[]
for i in range(n):
    gr[i] = [int(t) for t in input().split() ]
for i in range(n):
    for j in range(n):
        if i==j:
            gr[i][j]=1
for i in range(n):
    for j in range(n):
        for z in range(n):
            if (gr[j][i]and gr[i][z]):
                gr[j][z]=1
for i in range(n):
    for j in range(n):
        if i==j:
            gr[i][j]=0
for i in range(m):
    r,t = map(int, input().split())
    if gr[r-1][t-1]==1:
        print('YES')
    else:
        print('NO')","0.0"
"614009a0-821e-497b-9a0b-07c0dbe033b8","n,m = map(int, input().split())
gr=[[0]*n for i in range(n)]
tr=[]
for i in range(n):
    gr[i] = [int(t) for t in input().split() ]
for i in range(n):
    for j in range(n):
        if i==j:
            gr[i][j]=1
for i in range(n):
    for j in range(n):
        for z in range(n):
            if (gr[j][i]and gr[i][z]):
                gr[j][z]=1
for i in range(n):
    for j in range(n):
        if i==j:
            gr[i][j]=0
for i in range(m):
    r,t = map(int, input().split())
    if gr[r-1][t-1]==1:
        print('YES')
    else:
        print('NO')","0.0"
"ead36ff4-8cf1-4c6c-8a43-ab69f623fde7","n=int( input())
sp=[0]*n
ind=1
Grflag=[0]*n
gr=[[0]*n for i in range(n)]
for i in range(n):
    gr[i] = [int(t) for t in input().split()]
def dnf(it):
    Grflag[it]=1
    for i in range(n):
        if Grflag[i]==0 and gr[it][i]==1:
            sp[i]=it
            dnf(i)

dnf(0)
for i in range(n):
    print(i+1,sp[i]+1)","0.0"
"63fff392-7a26-4842-8308-8e12386127ed","
def f(matA,matB,matC):
    for i in range(n):
        for j in range(n):
            for z in range(n):
                if matC[i][j]==0:
                    matC[i][j]=matA[i][z]*matB[z][j]
    return matC

n,m = map(int, input().split())
k=0
gr=[[0]*n for i in range(n)]
gr2=[[0]*n for i in range(n)]
for i in range(n):
    gr[i] = [int(t) for t in input().split()]

gr2=gr            
for x in range(m-1):
    gr3=[[0]*n for i in range(n)]
    f(gr, gr2, gr3)
    gr2=gr3
for i in range(n):
    for j in range(n):
        if gr2[i][j]==1 and i!=j:
            print(i+1,j+1)
            k=1
if k==0:
    print('NO')","0.0"
"79312fbf-4cd4-4453-989e-43f3cae93d51","n = int(input())
gr=[[0]*n for i in range(n)]
gr2=[[0]*n for i in range(n)]
gr3=[[0]*n for i in range(n)]
k=0
for i in range(n):
    gr[i] = [int(t) for t in input().split() ]
for i in range(n):
    for j in range(n):
        if i==j:
            gr[i][j]=0
for i in range(n):
    for j in range(n):
        for z in range(n):
            if gr2[i][j]==0:
                gr2[i][j]=gr[i][z]*gr[z][j]
for i in range(n):
    for j in range(n):
        for z in range(n):
            if gr3[i][j]==0:
                gr3[i][j]=gr2[i][z]*gr[z][j]
for i in range(n):
    for j in range(n):
        if gr3[i][j]==1 and i!=j:
            print(i+1,j+1)
            k=1
if k==0:
    print('NO')","0.0"
"6c718c88-bb90-4a37-ae7c-908916a5957e","n = int(input())
gr=[[0]*n for i in range(n)]
gr2=[[0]*n for i in range(n)]
gr2=gr
for i in range(n):
    gr[i] = [int(t) for t in input().split() ]
for i in range(n):
    for j in range(n):
        if i==j:
            gr[i][j]=1
for d in range(n):
    for i in range(n):
        for j in range(n):
            for z in range(n):
                if gr2[i][j]==0:
                    gr2[i][j]=gr2[i][z]*gr[z][j]
for i in range(n):
    for j in range(n):
        if i==j:
            gr2[i][j]=0               
for k in gr2:
    print(' '.join(map(str,k)))","0.0"
"35bc693b-1917-49ae-ad4d-bed0d5a22583","n = int(input())
gr=[[0]*n for i in range(n)]
gr2=[[0]*n for i in range(n)]
for i in range(n):
    gr[i] = [int(t) for t in input().split() ]


for i in range(n):
    for j in range(n):
        for z in range(n):
            if gr2[i][j]==0 and i!=j:
                gr2[i][j]=gr[i][z]*gr[z][j]
            if gr[i][j]==1:
                gr2[i][j]=1
               
for k in gr2:
    print(' '.join(map(str,k)))
    ","0.0"
"d45974a2-6e4d-4a5b-a7d1-cf456bf9e2e1","n = int(input())
mas1=[0]*(n+1)
mas2=[0]*(n+1)
gr = [input().split() for i in range(n)]
for i in range(n):
    q=0
    for j in range(n):
        if gr[i][j] == '1':
            q+=1
    mas1[i]=q
for i in range(n):
    q=0
    for j in range(n):
        if gr[j][i] == '1':
            q+=1
    mas2[i]=q

for i in range(n):
    print(i+1,mas2[i],mas1[i])","0.0"
"d752e481-f9e0-4d06-8ad4-ca4b16a1195f","n = int(input())
gr = [input().split() for i in range(n)]

for i in range(n):
    q=0
    for j in range(n):
        if gr[i][j] == '1':
            q+=1;
    print(i+1,q)","0.0"
"cdd79a46-8605-41d1-a344-70e7c6a9b8c2","n,m=map(int,input().split())
gr=[[0]*n for i in range(n)]
for i in range(m):
    t1,t2 = map(int,input().split())
    gr[t1-1][t2-1]=1
    
                
for k in gr:
    print(' '.join(map(str,k)))","0.0"
"413dddee-a132-48a9-9753-e5bef469b529","n=int( input())
sp=[]
maxsp=[]
l=0
Grflag=[0]*n
gr=[[0]*n for i in range(n)]
for i in range(n):
    gr[i] = [int(t) for t in input().split()]

def dnf(it):
    sp.append(it+1)
    Grflag[it]=1
    for i in range(n):
        if Grflag[i]==0 and gr[it][i]==1:
            dnf(i)
    

for k in range(n):
    if Grflag[k]==0:
        sp=[]
        dnf(k)
        
    if len(sp)>len(maxsp):
        maxsp=[]
        maxsp=sp

print(len(maxsp))
print(*maxsp)
","0.0"
"614009a0-821e-497b-9a0b-07c0dbe033b8","
n,m = map(int, input().split())
gr=[[0]*n for i in range(n)]
tr=[]
for i in range(n):
    gr[i] = [int(t) for t in input().split() ]
for i in range(n):
    for j in range(n):
        if i==j:
            gr[i][j]=1
for i in range(n):
    for j in range(n):
        for z in range(n):
            if (gr[j][i]and gr[i][z]):
                gr[j][z]=1
for i in range(n):
    for j in range(n):
        if i==j:
            gr[i][j]=0
for i in range(m):
    r,t = map(int, input().split())
    if gr[r-1][t-1]==1:
        print('YES')
    else:
        print('NO')","0.0"
"e403def2-7943-4432-b5dc-a6073bf62a9b","n=int( input())
sp=[]
Grflag=[0]*n
gr=[[0]*n for i in range(n)]
for i in range(n):
    gr[i] = [int(t) for t in input().split()]

def dnf(it):
    sp.append(it+1)
    Grflag[it]=1
    for i in range(n):
        if Grflag[i]==0 and gr[it][i]==1:
            dnf(i)

dnf(0)
print(*sp)","0.0"
"63fff392-7a26-4842-8308-8e12386127ed","n,m = map(int, input().split())
gr=[[0]*n for i in range(n)]
gr2=[[0]*n for i in range(n)]
gr3=[[0]*n for i in range(n)]
for i in range(n):
    gr[i] = [int(t) for t in input().split() ]
for i in range(n):
    for j in range(n):
        if i==j:
            gr[i][j]=0
for i in range(n):
    for j in range(n):
        for z in range(n):
            if gr2[i][j]==0:
                gr2[i][j]=gr[i][z]*gr[z][j]
for i in range(n):
    for j in range(n):
        for z in range(n):
            if gr3[i][j]==0:
                gr3[i][j]=gr2[i][z]*gr[z][j]
for i in range(n):
    for j in range(n):
        if gr3[i][j]==1 and i!=j:
            print(i+1,j+1)
            k=1
if k==0:
    print('NO')","0.0"
"79312fbf-4cd4-4453-989e-43f3cae93d51","n = int(input())
gr=[[0]*n for i in range(n)]
gr2=[[0]*n for i in range(n)]
gr3=[[0]*n for i in range(n)]
for i in range(n):
    gr[i] = [int(t) for t in input().split() ]
for i in range(n):
    for j in range(n):
        if i==j:
            gr[i][j]=0
for i in range(n):
    for j in range(n):
        for z in range(n):
            if gr2[i][j]==0:
                gr2[i][j]=gr[i][z]*gr[z][j]
for i in range(n):
    for j in range(n):
        for z in range(n):
            if gr3[i][j]==0:
                gr3[i][j]=gr2[i][z]*gr[z][j]
for i in range(n):
    for j in range(n):
        if gr3[i][j]==1 and i!=j:
            print(i+1,j+1)","0.0"
"6c718c88-bb90-4a37-ae7c-908916a5957e","
n = int(input())
gr=[[0]*n for i in range(n)]
gr2=[[0]*n for i in range(n)]
gr2=gr
for i in range(n):
    gr[i] = [int(t) for t in input().split() ]
for i in range(n):
    for j in range(n):
        if i==j:
            gr[i][j]=1
for d in range(n):
    for i in range(n):
        for j in range(n):
            for z in range(n):
                if gr2[i][j]==0:
                    gr2[i][j]=gr2[i][z]*gr[z][j]
for i in range(n):
    for j in range(n):
        if i==j:
            gr2[i][j]=0               
for k in gr2:
    print(' '.join(map(str,k)))","0.0"
"6c718c88-bb90-4a37-ae7c-908916a5957e","n = int(input())
gr=[[0]*n for i in range(n)]
gr2=[[0]*n for i in range(n)]
gr2=gr
for i in range(n):
    gr[i] = [int(t) for t in input().split() ]
for i in range(n):
    for j in range(n):
        if i==j:
            gr[i][j]=1
for d in range(n):
    for i in range(n):
        for j in range(n):
            for z in range(n):
                if gr2[i][j]==0:
                    gr2[i][j]=gr[i][z]*gr[z][j]
for i in range(n):
    for j in range(n):
        if i==j:
            gr2[i][j]=0               
for k in gr2:
    print(' '.join(map(str,k)))","0.0"
"399c561c-44d6-415d-8c3b-3e83018f5f2a","n = int(input())
gr=[[0]*n for i in range(n)]
gr2=[[0]*n for i in range(n)]
for i in range(n):
    gr[i] = [int(t) for t in input().split() ]


for i in range(n):
    for j in range(n):
        for z in range(n):
            if gr2[i][j]==0 and i!=j:
                gr2[i][j]=gr[i][z]*gr[z][j]

               
for k in gr2:
    print(' '.join(map(str,k)))","0.0"
"1b7a231c-acf2-4c20-87f1-8615e27d21df","n = int(input())
gr = [input().split() for i in range(n)]
t=1
for i in range(n):
    for j in range(n):
        if gr[i][j]!=gr[j][i]:
            t=0
            break
if t==0:
    print('oriented')
else:
    print('not oriented')","0.0"
"1187526d-8b3a-4a9b-8098-bbbf8d9d1423","n=int(input())
sp=[0]*n
Q=[]
Q2=[]
visited=[False]*n
gr=[[0]*n for i in range(n)]
for i in range(n):
    gr[i] = [int(t) for t in input().split()]

def BFS(ver):
    if ver<n:
        v=Q[ver]
        for i in range(n):
            if gr[v][i]==1 and not visited[i]:
                Q.append(i)
                visited[i]=True
                sp[i]=v
                
        BFS(ver+1)

Q.append(0)
visited[0]=True
BFS(0)
        
for i in range(n):
    print(i+1,sp[i]+1)","0.0"
"80cacb8a-a6c2-4757-9646-317c1594c18e","n,m=map(int, input().split())

Q=[]
Q2=[]
visited=[False]*n
gr=[[0]*n for i in range(n)]
for i in range(n):
    gr[i] = [int(t) for t in input().split()]

def BFS(ver):
    if ver<n:
        v=Q[ver]
        for i in range(n):
            if gr[v][i]==1 and not visited[i]:
                Q.append(i)
                visited[i]=True
        BFS(ver+1)


for k in range(m):
    Q=[]
    Q2=[]
    visited=[False]*n
    th=int(input())-1
    Q.append(th)
    visited[th]=True
    BFS(0)

    for i in range(len(Q)):
        Q2.append(Q[i]+1)
        
    print(*Q2)","0.0"
"e403def2-7943-4432-b5dc-a6073bf62a9b","n=int( input())
sp=[]
Grflag=[0]*n
gr=[[0]*n for i in range(n)]
for i in range(n):
    gr[i] = [int(t) for t in input().split()]

def dnf(it):
    sp.append(it+1)
    Grflag[it]=1
    for i in range(n):
        if Grflag[i]==0 and gr[it][i]==1:
            dnf(i)


for k in range(n):
    if Grflag[k]==0:
        dnf(0)



print(*sp)","0.0"
"614009a0-821e-497b-9a0b-07c0dbe033b8","n,m = map(int, input().split())
gr=[[0]*n for i in range(n)]
tr=[]
for i in range(n):
    gr[i] = [int(t) for t in input().split() ]
for i in range(n):
    for j in range(n):
        if i==j:
            gr[i][j]=1
for i in range(n):
    for j in range(n):
        for z in range(n):
            if (gr[j][i]and gr[i][z]):
                gr[j][z]=1
for i in range(n):
    for j in range(n):
        if i==j:
            gr[i][j]=0
for i in range(m):
    r,t = map(int, input().split())
    if gr[r-1][t-1]==1:
        print('YES')
    else:
        print('NO')","0.0"
"0cc13605-3cb0-48e8-a8d7-10d2e1b77520","n=int( input())
sp=[0]*n
ind=1
Grflag=[0]*n
gr=[[0]*n for i in range(n)]
for i in range(n):
    gr[i] = [int(t) for t in input().split()]
def dnf(it):
    global ind
    sp[it]=ind
    ind+=1
    Grflag[it]=1
    for i in range(n):
        if Grflag[i]==0 and gr[it][i]==1:
            dnf(i)

dnf(0)
for i in range(n):
    print(i+1,sp[i])","0.0"
"916cd758-8a73-4909-9ac8-2f0d57f29095","n,m = map(int, input().split())
sp=[]
Grflag=[0]*n
gr=[[0]*n for i in range(n)]
for i in range(n):
    gr[i] = [int(t) for t in input().split()]

def dnf(it):
    sp.append(it+1)
    Grflag[it]=1
    for i in range(n):
        if Grflag[i]==0 and gr[it][i]==1:
            dnf(i)

dnf(m-1)
print(*sp)","0.0"
"519d49f4-2044-4bec-8164-97ef458dc2c8","n = int(input())
gr=[[0]*n for i in range(n)]
gr2=[[0]*n for i in range(n)]
gr = [input().split() for i in range(n)]


for i in range(n):
    for j in range(n):
        if gr[i][j]=='1':
            gr2[i][j]='0'
        if gr[i][j]=='0':
            gr2[i][j]='1'
for i in range(n):
    for j in range(n):
        if i==j:
            gr2[i][j]='0'
            
for k in gr2:
    print(' '.join(map(str,k)))","0.0"
"e5673478-3dd1-49d0-b1ca-49dfa6304570","n=int( input())
sp=[0]*n
ind=0
Grflag=[0]*n
gr=[[0]*n for i in range(n)]
for i in range(n):
    gr[i] = [int(t) for t in input().split()]

def dnf(it):
    Grflag[it]=1
    for i in range(n):
        if gr[it][i]==1:
            if Grflag[i]==0:
                sp[i]=it
                dnf(i)
            else:
                if i!=sp[it]:
                    global ind
                    ind+=1

dnf(0)


if ind==0:
    print('NO')
else:
    print('YES')","0.0"
"184def68-8d78-42ae-b39c-3ed0566d685c","

n=int( input())
sp=[]
Grflag=[0]*n
gr=[[0]*n for i in range(n)]
for i in range(n):
    gr[i] = [int(t) for t in input().split()]


def dnf(it):
    sp.append(it+1)
    Grflag[it]=1
    for i in range(n):
        if Grflag[i]==0 and gr[it][i]==1:
            dnf(i)

for x in range(n):
    sp=[]
    Grflag=[0]*n
    dnf(x)
    print(*sp,end=' 
')","0.0"
"63fff392-7a26-4842-8308-8e12386127ed","def f(matA,matB,matC):
    for i in range(n):
        for j in range(n):
            for z in range(n):
                if matC[i][j]==0:
                    matC[i][j]=matA[i][z]*matB[z][j]
    return matC

n,m = map(int, input().split())
k=0
gr=[[0]*n for i in range(n)]
gr2=[[0]*n for i in range(n)]
for i in range(n):
    gr[i] = [int(t) for t in input().split()]

gr2=gr            
for x in range(m-1):
    gr3=[[0]*n for i in range(n)]
    f(gr, gr2, gr3)
    gr2=gr3
for i in range(n):
    for j in range(n):
        if gr2[i][j]==1 and i!=j:
            print(i+1,j+1)
            k=1
if k==0:
    print('NO')","0.0"
"79312fbf-4cd4-4453-989e-43f3cae93d51","n = int(input())
gr=[[0]*n for i in range(n)]
gr2=[[0]*n for i in range(n)]
gr3=[[0]*n for i in range(n)]
for i in range(n):
    gr[i] = [int(t) for t in input().split() ]
for i in range(n):
    for j in range(n):
        if i==j:
            gr[i][j]=0
for i in range(n):
    for j in range(n):
        for z in range(n):
            if gr2[i][j]==0:
                gr2[i][j]=gr[i][z]*gr[z][j]
for i in range(n):
    for j in range(n):
        for z in range(n):
            if gr3[i][j]==0:
                gr3[i][j]=gr2[i][z]*gr[z][j]
for i in range(n):
    for j in range(n):
        if gr3[i][j]==1 and i!=j:
            print(i+1,j+1)
            k=1
if k==0:
    print('NO')","0.0"
"993d5917-3656-42be-87ec-bbde4aff5607","
n,m = map(int, input().split())
gr=[[0]*n for i in range(n)]
tr=[]
for i in range(n):
    gr[i] = [int(t) for t in input().split() ]
for i in range(n):
    for j in range(n):
        if i==j:
            gr[i][j]=1
for i in range(n):
    for j in range(n):
        for z in range(n):
            if (gr[j][i]and gr[i][z]):
                gr[j][z]=1
for i in range(n):
    for j in range(n):
        if i==j:
            gr[i][j]=0
for i in range(m):
    r,t = map(int, input().split())
    if gr[r-1][t-1]==1:
        print('YES')
    else:
        print('NO')
","0.0"
"6c718c88-bb90-4a37-ae7c-908916a5957e","n = int(input())
gr=[[0]*n for i in range(n)]
gr2=[[0]*n for i in range(n)]
gr2=gr
for i in range(n):
    gr[i] = [int(t) for t in input().split() ]
for i in range(n):
    for j in range(n):
        if i==j:
            gr[i][j]=1
for i in range(n):
    for j in range(n):
        for z in range(n):
            if (gr[j][i]and gr[i][z]):
                gr[j][z]=1
for i in range(n):
    for j in range(n):
        if i==j:
            gr[i][j]=0           
for k in gr:
    print(' '.join(map(str,k)))","0.0"
"7762ce71-62d8-4d9a-b192-d363f5ffc725","n = int(input())
gr=[[0]*n for i in range(n)]
gr2=[[0]*n for i in range(n)]
gr = [input().split() for i in range(n)]


for i in range(n):
    for j in range(n):
        
        gr2[j][i]=gr[i][j]
        
            
for k in gr2:
    print(' '.join(map(str,k)))","0.0"
"e538d2d1-111d-4904-9de6-f691cdc9fb50","n = int(input())
gr = [input().split() for i in range(n)]
t=1
for i in range(n):
    q=0
    for j in range(n):
        if gr[i][j] == '1':
            q+=1;
    if q%2!=0:
        t=0
        break
if t==1:
    print('YES')
else:
    print('NO')","0.0"
"8aba26dc-aa58-4010-8c1a-81e0ce626bae","n = int(input())
gr = [input().split() for i in range(n)]
for j in range(n):
    for y in range(n):
        if gr[j][y] == '1':
            print(j+1, y+1)","0.0"
"70c96088-3bf6-4189-985e-a2d564337989","n, k=map(int,input().split())
mas=[]
for i in range(n):
    mas.append(int(input()))
#for x in len
for i in mas:
    for j in mas:
        print(i, j, end=' ')
        print()","0.0"
"70c96088-3bf6-4189-985e-a2d564337989","n, k=map(int,input().split())
mas=[]
for i in range(n):
    mas.append(int(input()))
#for x in len
for i in mas:
    for j in mas:
        print(i, j, end=' 
')
        ","0.0"
"d10ce529-697f-4d23-8c67-948d245c3668","n,m=map(int,input().split())
gr=[[0]*n for i in range(n)]
for i in range(m):
    t1,t2 = map(int,input().split())
    gr[t1-1][t2-1]=1
    gr[t2-1][t1-1]=1
                
for k in gr:
    print(' '.join(map(str,k)))","0.0"
"02fbb42a-472d-4e95-a306-13c6db519654","n = int(input())
gr = [input().split() for i in range(n)]
 
for j in range(n):
    for y in range(j+1, n):
        if gr[j][y] == '1':
            print(j+1, y+1)","0.0"
"a11ad4e0-abf7-4110-9d03-04d451d484df","N,K,G=map(int,input().split())
ves=[]
for i in range(N):
    ves.append(int(input()))
ves.sort()

maxves=0
rezind=0
rez=0
minPossible=0
while K>0:
    minPossible=sum(ves[:K-1])+maxves
    for i in reversed(ves):
        if minPossible+i<=G:
            maxves+=i
            ves.pop()
            break
        ves.pop()
    K-=1
print(maxves)","0.0"
"6bd877c6-1740-408f-a6ca-2f8adeae08f5","a=int(input())
b=int(input())
h=0
def inDel ( x ):
    inDel = []
    for i in range (2,x):
        if x%i == 0:
            inDel.append(i)
        if len(inDel)>1:
            break
            
    return inDel

for k in range(a,b+1):
    if k**0.5==int(k**0.5):
        if len(inDel(k))== 1:
            h+=sum(map(int,str(k)))
print(h)","0.0"
"0df7e1f2-c1c4-41f3-9904-a9e4495a5bfc","a=int(input())
b=int(input())
mas=[]
h=0
def inDel ( x ):
    inDel = []
    for i in range (2,round(x**0.5)+1):
        if (x%i == 0) and(i>9)and(i<100):
            inDel.append(i)
    return sorted(inDel)
for k in range(a,b+1):
    if len(inDel(k))== 30:
        print(k,min(inDel(k)),max(inDel(k)))","0.0"
"6bd877c6-1740-408f-a6ca-2f8adeae08f5","a=int(input())
b=int(input())
h=0
def inDel ( x ):
    inDel = []
    for i in range (2,x):
        if x%i == 0:
            inDel.append(i)
            if len(inDel)>1:
                break
    return inDel

for k in range(a,b+1):
    if len(inDel(k))== 1:
        h+=sum(map(int,str(k)))
print(h)","0.0"
"9ad8e0ac-34e6-45a9-8f4f-0e8046aec803","a=int(input())
b=int(input())
c=0
k=0
max=0
st=[]
sp=[]
def inDel ( x ):
    inDel = [1,x]
    for i in range (2,round(x**0.5)+1):
        if x%i == 0:
            inDel.append(i)
            if i!=x//i:
                inDel.append(x//i)
    return sorted(inDel)

for k in range(a,b+1):
    sp=inDel(k)
    if len(sp)>=max:
        max=len(sp)
        d=k
        st=sp
print(max,st[-1],st[-2])

","0.0"
"9ad8e0ac-34e6-45a9-8f4f-0e8046aec803","a=int(input())
b=int(input())
c=0
k=0
max=0
st=[]
sp=[]
def inDel ( x ):
    inDel = [1,x]
    for i in range (2,round(x**0.5)+1):
        if x%i == 0:
            inDel.append(i)
            inDel.append(x//i)
    return sorted(inDel)

for k in range(a,b+1):
    sp=inDel(k)
    if len(sp)>=max:
        max=len(sp)
        d=k
        st=sp
print(max,st[-1],st[-2])
","0.0"
"9ad8e0ac-34e6-45a9-8f4f-0e8046aec803","a=int(input())
b=int(input())
c=0
k=0
max=0
st=[]
def inDel ( x ):
    inDel = [1]
    for i in range (2,round(x+1)):
        if x%i == 0:
            inDel.append(i)
    return inDel

for k in range(a,b+1):
    if len(inDel(k))>=max:
        max=len(inDel(k))
        d=k
        st=inDel(k)
print(max,st[-1],st[-2])
","0.0"
"9ad8e0ac-34e6-45a9-8f4f-0e8046aec803","a=int(input())
b=int(input())
c=0
k=0
max=0
st=[]
def inDel ( x ):
    inDel = [1]
    for i in range (2,x+1):
        if x%i == 0:
            inDel.append(i)
    return inDel

for k in range(a,b+1):
    if len(inDel(k))>=max:
        max=len(inDel(k))
        d=k
        st=inDel(k)
print(max,st[-1],st[-2])
","0.0"
"75410156-cdea-4efc-a0d6-91e02bf38e32","a=int(input())
b=int(input())
k=0
def inDel ( x ):
    inDel = [1]
    for i in range (2,x+1):
        if x%i == 0:
            inDel.append(i)
    return inDel

for k in range(a,b+1):
    if len(inDel(k))== 4:
           print(*inDel(k))
           k=1
if k==0:
   print(0)
","0.0"
"6bd877c6-1740-408f-a6ca-2f8adeae08f5","
a=int(input())
b=int(input())
h=0
def inDel ( x ):
    inDel = []
    for i in range (2,x):
        if x%i == 0:
            inDel.append(i)
            if len(inDel)>1:
                break
    return inDel

for k in range(a,b+1):
    if len(inDel(k))== 1:
        h+=sum(map(int,str(k)))
print(h)","0.0"
"ec3cfb4d-5f50-4fa0-8e53-686d10f6c0b2","
a,b= map(int,input().split())
mas=[]
k=0
def inDel(x):
    inDel=[]
    for i in range(1, round(x**0.5)+1):
        if x % i==0:
            inDel.append(i)
            if i!=x//i:
                inDel.append(x//i)
    return sorted(inDel)
for q in range(a,b+1):
    if q**0.5==int(q**0.5):
        k+=1
        mas=inDel(q)
        print(k,q,len(inDel(q)), round(q**0.5))","0.0"
"9ad8e0ac-34e6-45a9-8f4f-0e8046aec803","a=int(input())
b=int(input())
c=0
k=0
max=0
st=[]
sp=[]
def inDel ( x ):
    inDel = [1,x]
    for i in range (2,round(x**0.5)+1):
        if x%i == 0:
            inDel.append(i)
            if i!=x//i:
                inDel.append(x//i)
    return sorted(inDel)

for k in range(a,b+1):
    sp=inDel(k)
    if len(sp)>=max:
        max=len(sp)
        d=k
        st=sp
print(max,st[-1],st[-2])
","0.0"
"9ad8e0ac-34e6-45a9-8f4f-0e8046aec803","

a=int(input())
b=int(input())
c=0
k=0
max=0
st=[]
sp=[]
def inDel ( x ):
    inDel = [1]
    for i in range (2,x+1):
        if x%i == 0:
            inDel.append(i)
    return inDel

for k in range(a,b+1):
    sp=inDel(k)
    if len(sp)>=max:
        max=len(sp)
        d=k
        st=sp
print(max,st[-1],st[-2])
","0.0"
"9ad8e0ac-34e6-45a9-8f4f-0e8046aec803","
a=int(input())
b=int(input())
c=0
k=0
max=0
st=[]
def inDel ( x ):
    inDel = [1]
    for i in range (2,x+1):
        if x%i == 0:
            inDel.append(i)
    return inDel

for k in range(a,b+1):
    if len(inDel(k))>=max:
        max=len(inDel(k))
        d=k
        st=inDel(k)
print(max,st[-1],st[-2])
","0.0"
"9ad8e0ac-34e6-45a9-8f4f-0e8046aec803","a=int(input())
b=int(input())
c=0
k=0
max=0
st=[]
def inDel ( x ):
    inDel = [1]
    for i in range (2,x*2+1):
        if x%i == 0:
            inDel.append(i)
    return inDel

for k in range(a,b+1):
    if len(inDel(k))>=max:
        max=len(inDel(k))
        d=k
        st=inDel(k)
print(max,st[-1],st[-2])
","0.0"
"9ad8e0ac-34e6-45a9-8f4f-0e8046aec803","
a=int(input())
b=int(input())
c=0
k=0
max=0
st=[]
def inDel ( x ):
    inDel = [1]
    for i in range (2,round(x+1)):
        if x%i == 0:
            inDel.append(i)
    return inDel

for k in range(a,b+1):
    if len(inDel(k))>=max:
        max=len(inDel(k))
        d=k
        st=inDel(k)
print(max,st[-1],st[-2])
","0.0"
"9ad8e0ac-34e6-45a9-8f4f-0e8046aec803","
a=int(input())
b=int(input())
c=0
k=0
max=0
st=[]
def inDel ( x ):
    inDel = [1]
    for i in range (2,x+1):
        if x%i == 0:
            inDel.append(i)
    return inDel

for k in range(a,b+1):
    if len(inDel(k))>=max:
        max=len(inDel(k))
        d=k
        st=inDel(k)
print(max,st[-1],st[-2])
","0.0"
"75410156-cdea-4efc-a0d6-91e02bf38e32","a=int(input())
b=int(input())
c=0
def inDel ( x ):
    inDel = [1]
    for i in range (2,x+1):
        if x%i == 0:
            inDel.append(i)
            if len(inDel)>4:
                break
    return inDel

for k in range(a,b+1):
    if len(inDel(k))== 4:
           print(*inDel(k))
           c=1
if c==0:
    print(0)","0.0"
"75410156-cdea-4efc-a0d6-91e02bf38e32","a=int(input())
b=int(input())
c=0
def inDel ( x ):
    inDel = [1]
    for i in range (2,x+1):
        if x%i == 0:
            inDel.append(i)
    return inDel

for k in range(a,b+1):
    if len(inDel(k))== 4:
           print(*inDel(k))
           c=1
if c==0:
    print(0)
","0.0"
"6bd877c6-1740-408f-a6ca-2f8adeae08f5","a=int(input())
b=int(input())
h=0
def inDel ( x ):
    inDel = []
    for i in range (2,x):
        if x%i == 0:
            inDel.append(i)
            
    return inDel

for k in range(a,b+1):
    if k**0.5==int(k**0.5):
        if len(inDel(k))== 1:
            h+=sum(map(int,str(k)))
print(h)","0.0"
"9ad8e0ac-34e6-45a9-8f4f-0e8046aec803","a=int(input())
b=int(input())
c=0
k=0
max=0
st=[]
sp=[]
def inDel ( x ):
    inDel = [1,x]
    for i in range (2,round(x**0.5)+1):
        if x%i == 0:
            inDel.append(i)
            inDel.append(x//i)
    return sorted(inDel)

for k in range(a,b+1):
    sp=inDel(k)
    if len(sp)>=max:
        max=len(sp)
        d=k
        st=sp
print(max,st[-1],st[-2])
","0.0"
"9ad8e0ac-34e6-45a9-8f4f-0e8046aec803","
a=int(input())
b=int(input())
c=0
k=0
max=0
st=[]
sp=[]
def inDel ( x ):
    inDel = [1,x]
    for i in range (2,round(x**0.5)+1):
        if x%i == 0:
            inDel.append(i)
            inDel.append(x//i)
    return sorted(inDel)

for k in range(a,b+1):
    sp=inDel(k)
    if len(sp)>=max:
        max=len(sp)
        d=k
        st=sp
print(max,st[-1],st[-2])
","0.0"
"9ad8e0ac-34e6-45a9-8f4f-0e8046aec803","
a=int(input())
b=int(input())
c=0
k=0
max=0
st=[]
sp=[]
def inDel ( x ):
    inDel = [1,x]
    for i in range (2,round(x**0.5)+1):
        if x%i == 0:
            inDel.append(i)
            inDel.append(x//i)
    return sorted(inDel)

for k in range(a,b+1):
    sp=inDel(k)
    if len(sp)>=max:
        max=len(sp)
        d=k
        st=sp
print(max,st[-1],st[-2])
","0.0"
"9ad8e0ac-34e6-45a9-8f4f-0e8046aec803","a=int(input())
b=int(input())
c=0
k=0
max=0
st=[]
def inDel ( x ):
    inDel = [1]
    for i in range (2,x+1):
        if x%i == 0:
            inDel.append(i)
    return inDel

for k in range(a,b+1):
    if len(inDel(k))>=max:
        max=len(inDel(k))
        d=k
        st=inDel(k)
print(max,st[-1],st[-2])
","0.0"
"9ad8e0ac-34e6-45a9-8f4f-0e8046aec803","

a=int(input())
b=int(input())
c=0
k=0
max=0
st=[]
def inDel ( x ):
    inDel = [1]
    for i in range (2,x+1):
        if x%i == 0:
            inDel.append(i)
    return inDel

for k in range(a,b+1):
    if len(inDel(k))>=max:
        max=len(inDel(k))
        d=k
        st=inDel(k)
print(max,st[-1],st[-2])
","0.0"
"75410156-cdea-4efc-a0d6-91e02bf38e32","
a=int(input())
b=int(input())
c=0
def inDel ( x ):
    inDel = [1]
    for i in range (2,x+1):
        if x%i == 0:
            inDel.append(i)
            if len(inDel)>4:
                break
    return inDel

for k in range(a,b+1):
    if len(inDel(k))== 4:
           print(*inDel(k))
           c=1
if c==0:
    print(0)","0.0"
"75410156-cdea-4efc-a0d6-91e02bf38e32","a=int(input())
b=int(input())
c=0
def inDel ( x ):
    inDel = [1]
    for i in range (2,x+1):
        if x%i == 0:
            inDel.append(i)
            if len(inDel)>4: break
    return inDel

for k in range(a,b+1):
    if len(inDel(k))== 4:
           print(*inDel(k))
           c=1
if c==0:
    print(0)","0.0"
"9ad8e0ac-34e6-45a9-8f4f-0e8046aec803","
a=int(input())
b=int(input())
c=0
k=0
max=0
st=[]
sp=[]
def inDel ( x ):
    inDel = [1,x]
    for i in range (2,round(x**0.5)+1):
        if x%i == 0:
            inDel.append(i)
            inDel.append(x//i)
    return sorted(inDel)

for k in range(a,b+1):
    sp=inDel(k)
    if len(sp)>=max:
        max=len(sp)
        d=k
        st=sp
print(max,st[-1],st[-2])
","0.0"
"9ad8e0ac-34e6-45a9-8f4f-0e8046aec803","a=int(input())
b=int(input())
c=0
k=0
max=0
st=[]
def inDel ( x ):
    inDel = [1]
    for i in range (2,round(x+1)):
        if x%i == 0:
            inDel.append(i)
    return inDel

for k in range(a,b+1):
    if len(inDel(k))>=max:
        max=len(inDel(k))
        d=k
        st=inDel(k)
print(max,st[-1],st[-2])
","0.0"
"9ad8e0ac-34e6-45a9-8f4f-0e8046aec803","a=int(input())
b=int(input())
c=0
k=0
max=0
st=[]
def inDel ( x ):
    inDel = [1]
    for i in range (2,x+1):
        if x%i == 0:
            inDel.append(i)
    return inDel

for k in range(a,b+1):
    if len(inDel(k))>=max:
        max=len(inDel(k))
        d=k
        st=inDel(k)
print(max,st[-1],st[-2])
","0.0"
"9ad8e0ac-34e6-45a9-8f4f-0e8046aec803","
a=int(input())
b=int(input())
c=0
k=0
max=0
st=[]
def inDel ( x ):
    inDel = [1]
    for i in range (2,x+1):
        if x%i == 0:
            inDel.append(i)
    return inDel

for k in range(a,b+1):
    if len(inDel(k))>=max:
        max=len(inDel(k))
        d=k
        st=inDel(k)
print(max,st[-1],st[-2])
","0.0"
"75410156-cdea-4efc-a0d6-91e02bf38e32","a=int(input())
b=int(input())
k=0
def inDel ( x ):
    inDel = [1]
    for i in range (2,x+1):
        if x%i == 0:
            inDel.append(i)
    return inDel

for k in range(a,b+1):
    if len(inDel(k))== 4:
           print(*inDel(k))
           k=1
if k==0:
   print(0)","0.0"
"75410156-cdea-4efc-a0d6-91e02bf38e32","a=int(input())
b=int(input())
def inDel ( x ):
    inDel = [1]
    for i in range (2,x+1):
        if x%i == 0:
            inDel.append(i)
    return inDel

for k in range(a,b+1):
    if len(inDel(k))== 4:
           print(*inDel(k))
","0.0"
"132b4d29-b1fe-4591-be7e-9e4e150e35b6","a=int(input())
def prosto(xx):
    if xx==1:
        return False
    d=2
    while d<=xx-1:
        if xx%d==0:
            return False
        d+=1
    return True
if prosto(a):
    print('YES')
else:
    print('NO')
","0.0"
"75410156-cdea-4efc-a0d6-91e02bf38e32","a=int(input())
b=int(input())
def inDel ( x ):
    inDel = [1]
    for i in range (2,x+1):
        if x%i == 0:
            inDel.append(i)
    return inDel

for k in range(a,b+1):
    if len(inDel(k))== 4:
           print(*inDel(k))
","0.0"
"16305713-d2dc-4ab1-8bbd-107594c55519","a1=int(input())
b1=int(input())
c1=int(input())

a=max(a1,min(b1,c1))
b=min(a1,max(b1,c1))
c=max(a1,max(b1,c1))

if a+b<=c:
    print('impossible')
else:
    if a*a+b*b<c*c:
        print('obtuse')
    if a*a+b*b>c*c:
        print('acute')
    if a*a+b*b==c*c:
        print('right')
","0.0"
"16305713-d2dc-4ab1-8bbd-107594c55519","a=int(input())
b=int(input())
c=int(input())
if a+b<=c:
    print('impossible')
else:
    if a*a+b*b<c*c:
        print('obtuse')
    if a*a+b*b>c*c:
        print('acute')
    if a*a+b*b==c*c:
        print('right')","0.0"
"06c76227-d39e-4bac-8f71-f68c262dd42e","s=str(input())
a=0
amax=0
for i in s:
    if (i=='E' and a%3==0) or (i=='A' and a%3==1) or (i=='B' and a%3==2):
        a+=1
        if a>amax:
            amax=a
    else:
        a=0     
print(amax)
    ","0.0"
"704fe53c-bcb7-48de-a964-e687a0ae281c","
s=str(input())
a=0
amax=0
for i in range(len(s)):
    if s[i] in 'ABC':
        a+=1
    else:
        if a>amax:
            amax=a
        a=0
print(amax)","0.0"
"132b4d29-b1fe-4591-be7e-9e4e150e35b6","a=int(input())
r=0
if a==1:
    print('NO')
else:
    for i in range(2,round(a**0.5)+1):
        if (a%i==0):
            r+=1
            print('NO')
            break

    if r==0:
        print('YES')","0.0"
"a93745c4-cdf2-422d-86e3-46fc616f4f80","a=int(input())
r=0
sp=[]
for i in range(1,a+1):
    if (a%i==0) and (i%3==0):
        r+=1
        sp.append(i)
print(r)
print(*sp)","0.0"
"f2aee372-d88a-497b-a1d2-64b122fc8b0a","a=int(input())
r=0
for i in range(2,a+1):
    if a%i==0:
        r+=1
        break
print(i)","0.0"
"b8f9bbc2-7933-426f-a21d-ff3e82abc198","s=str(input())
k=1
s=s+'**'
mas=[]
mas1=[]
for i in range(len(s)-1):
    if s[i]==s[i+1]:
        k+=1
    else:
        mas.append(s[i])
        mas1.append(k)
        k=1
t=mas1.index(max(mas1))
print(mas[t],max(mas1))","0.0"
"75410156-cdea-4efc-a0d6-91e02bf38e32","
a=int(input())
b=int(input())
def inDel ( x ):
    inDel = [1]
    for i in range (2,x+1):
        if x%i == 0:
            inDel.append(i)
    return inDel

for k in range(a,b+1):
    if len(inDel(k))== 4:
           print(*inDel(k))
","0.0"
"75410156-cdea-4efc-a0d6-91e02bf38e32","a=int(input())
b=int(input())
def inDel ( x ):
    inDel = [1]
    for i in range (2,x+1):
        if x%i == 0:
            inDel.append(i)
    return inDel

for k in range(a,b+1):
    if len(inDel(k))== 4:
           print(*inDel(k))","0.0"
"132b4d29-b1fe-4591-be7e-9e4e150e35b6","a=int(input())
r=0
if a==1:
    print('NO')
else:
    for i in range(2,round(a**0.5)+1):
        if (a%i==0):
            r+=1
            print('NO')
            break

if r==0:
    print('YES')","0.0"
"132b4d29-b1fe-4591-be7e-9e4e150e35b6","a=int(input())
def prosto(xx):
    if xx==1:
        return False
    d=2
    while d*d<=xx:
        if xx%d==0:
            return False
        d+=1
    return True
if prosto(a):
    print('YES')
else:
    print('NO')
","0.0"
"132b4d29-b1fe-4591-be7e-9e4e150e35b6","a=int(input())
r=0
if a==1:
    print('NO')
else:
    for i in range(2,a):
        if (a%i==0):
            r+=1
            print('NO')
            break

    if r==0:
        print('YES')
","0.0"
"132b4d29-b1fe-4591-be7e-9e4e150e35b6","a=int(input())
r=0
for i in range(2,a):
    if (a%i==0):
        r+=1
        print('NO')
        
if r==0:
    print('YES')","0.0"
"931dc9d6-3183-4d35-bee6-95b210e0268a","a=int(input())
r=0
sp=[]
for i in range(1,a+1):
    if a%i==0:
        sp.append(i)
print(*sp)","0.0"
"c479ed62-3a40-4f93-89c8-b674826ab144","a=int(input())
r=0
for i in range(1,a+1):
    if a%i==0:
        r+=1
print(r)","0.0"
"94581bd4-2060-44f1-ad09-4c18917d4f17","
s=str(input())
k=1
mas=[]
for i in range(len(s)-1):
    if s[i]!=s[i+1]:
        k+=1
    else:
        mas.append(k)
        k=1
print(max(mas))","0.0"
"1b2dfff2-077c-4804-9067-dec63bee6584","
s=str(input())
s=s+'**'
sim=str(input())
k=0
mas=[]
for i in range(len(s)-1):
    if s[i]==sim:
        k=k+1
    else:
        mas.append(k)
        k=0
print(max(mas))
","0.0"
"e291f79e-b00b-4223-8250-eb7e45d39e54","s=str (input())
s=s.replace('R','Z')
s=s.replace('r','z')
print(s)","0.0"
"2fbbe9c8-9707-450c-82c7-1239bb38b1cd","s=str(input())
k=0
for i in range(len(s)):
    if s[i]=='!':
        k=k+1
print(k)","0.0"
"3876c09d-7f12-4c69-ac5c-8ca780dcd633","s=str(input())
i,j=map(int, input().split())
n=s[i-1:j]
print(s[:i-1]+n[::-1]+s[j:])
","0.0"
"2ee76cc8-f815-4807-a797-4059ae8a8d76","
n=int(input())
mas=[0]*n
k=1
S=input().split()
mas=[int(i) for i in S]
mas=mas+[1001]
mas=sorted(mas)
for i in range(n):
    if mas[i]==mas[i+1]:
        k+=1
    else:
        print(mas[i],k)
        k=1","0.0"
"1b2dfff2-077c-4804-9067-dec63bee6584","

s=str(input())
s=s+'**'
sim=str(input())
k=0
mas=[]
for i in range(len(s)-1):
    if s[i]==sim:
        k=k+1
    else:
        mas.append(k)
        k=0
print(max(mas))
","0.0"
"1038fcef-65cc-4f6b-bde1-5d7d3bffea34","
s=str(input())
sn=''
for i in range(len(s)):
    if s[i]!=' ':
        sn=sn+s[i]
print(sn)","0.0"
"05c50d73-fe75-4975-9d19-7e26e8c8d05f","s=str(input())
k=1
for i in range(len(s)):
    if s[i]==' ':
        k+=1
print(k)
","0.0"
"1b2dfff2-077c-4804-9067-dec63bee6584","s=str(input())
s=s+'**'
sim=str(input())
k=0
mas=[]
for i in range(len(s)-1):
    if s[i]==sim:
        k=k+1
    else:
        mas.append(k)
        k=0
print(max(mas))
","0.0"
"1a27e016-52ff-4e78-89cb-956f0a7cac6b","n=int(input())
mas=[0]*n
S=input().split()
mas=[int(i) for i in S]
mas=sorted(mas)
print(*mas)","0.0"
"efe1a482-a2db-4971-a769-8b60a0beaf64","n=int(input())
mas=[0]*n
S=input().split()
mas=[int(i) for i in S]
k=0
for i in range(2,n-1,1):
    if mas[i-1]<mas[i] and mas[i+1]<mas[i]:
        k+=1
print(k)","0.0"
"efe1a482-a2db-4971-a769-8b60a0beaf64","n=int(input())
mas=[0]*n
S=input().split()
mas=[int(i) for i in S]
k=0
for i in range(2,n-1,1):
    if mas[i-1]<mas[i] and mas[i+1]<mas[i]:
        k+=1
print(k)","0.0"
"35d772a5-7770-4a91-9118-ad11e4ae7feb","n=int(input())
mas=[0]*n
S=input().split()
mas=[int(i) for i in S]
k=0
for i in range(n):
    if mas[i]>mas[i-1]:
        k+=1
print(k)","0.0"
"bd77bd8e-1bf2-4a3b-b674-9eddb5375116","n=int(input())
i=2    
while n%i!=0:
    i+=1
print(i)","0.0"
"a809c102-e8a6-45ff-9baa-9a998d1927f1","
n=int(input())
m=int(input())
while m>0:
    n=3*n
    m-=1
    print(n)","0.0"
"777756d6-d867-4cc7-978e-717933384418","
n=int(input())
if n%4==1:
    print('Gryffindor')
elif n%4==2:
    print('Slytherin')
elif n%4==3:
    print('Ravenclaw')
else:
    print('Hufflepuff')
","0.0"
"4659a273-9c89-4ff8-a1bd-6d0ae87e9915","n=int(input())
if n%10==1 and n!=11:
    print(n,'mag')
elif (n%10==2 or n%10==3 or n%10==4) and n!=12 and n!=13 and n!=14:
    print(n,'maga')
else:
    print(n,'magov')

","0.0"
"94224cd9-666a-4814-8edb-60beb14ea59a","
d=int(input())
m=int(input())
y=int(input())
if d >= 1 and d <= 31 and m <= 8 and y == 2010:
    print('YES')
else:
    print('NO')
","0.0"
"5d02ab7a-4394-4098-9f7a-ed3912083888","

L=int(input())
n=L*2.54
print(round (n))","0.0"
"521b1be0-3bd5-45f4-94f5-dad4b82ad375","n=int(input())
mas=[0]*n
nMAX=-1000000
S=input().split()
mas=[int(i) for i in S]
k=1
for i in range(n):    
    if mas[i]>nMAX:
        nMAX=mas[i]
print(nMAX)","0.0"
"bd77bd8e-1bf2-4a3b-b674-9eddb5375116","n=int(input())
i=2    
while n%i!=0:
    i+=1
print(i)
","0.0"
"af34735a-a422-4900-a41c-ce3188000595","n=int(input())
i=1
while i<=n:
    print('I must not tell lies')
    i=i+1
","0.0"
"4659a273-9c89-4ff8-a1bd-6d0ae87e9915","n=int(input())
if n%10==1 and n!=11:
    print(n,'mag')
elif n%10==2 or n%10==3 or n%10==4 and n!=12 and n!=13 and n!=14:
    print(n,'maga')
else:
    print(n,'magov')

","0.0"
"4659a273-9c89-4ff8-a1bd-6d0ae87e9915","n=int(input())
if n%10==1 and n!=11:
    print(n,'mag')
elif n%10==2 or n%10==3 or n%10==4 and n!=12 and n!=13 and n!=14:
    print(n,'maga')
elif n%10==5 or n%10==6 or n%10==7 or n%10==8 or n%10==9:
    print(n,'magov')
    

","0.0"
"4659a273-9c89-4ff8-a1bd-6d0ae87e9915","n=int(input())
if n%10==1 and n!=11:
    print(n,'mag')
elif n%10==2 or n%10==3 or n%10==4 and n!=12 and n!=13 and n!=14:
    print(n,'maga')
else:
    print(n,'magov')
    

","0.0"
"4659a273-9c89-4ff8-a1bd-6d0ae87e9915","n=int(input())
if n%10==1 and n!=11:
    print(n,'mag')
elif n%10==2 and n%10==3 and n%10==4:
    print(n,'maga')
else:
    print(n,'magov')","0.0"
"f9f08d20-e4e6-49ac-8682-f4b7100928a4","a=int(input())
b=int(input())
d=int(input())
if d+4<=a and d+4<=b:
    print('YES')
else:
    print('NO')","0.0"
"d48be896-b484-440a-9ca5-2cc0f31533dc","x=int(input())
y=int(input())
if (x==5 and y==2) or (x==8 and y==1) or (x==6 and y==4) or (x==6 and y==5) or (x==8 and y==5) or (x==5 and y==4):
    print('YES')
else:
    print('NO')","0.0"
"9e9de547-58f5-45b9-a733-37cc732bf237","n=int(input())
m=int(input())
z=m/2.54
if n<=z:
    print('YES')
else:
    print('NO')","0.0"
"9e9de547-58f5-45b9-a733-37cc732bf237","
n=int(input())
m=int(input())
z = n * 2.54
if m >= z:
    print('YES')
else:
    print('NO')","0.0"
"94224cd9-666a-4814-8edb-60beb14ea59a","d=int(input())
m=int(input())
y=int(input())
if d >= 1 and d <= 31 and m <= 8 and y == 2010:
    print('YES')
else:
    print('NO')
","0.0"
"94224cd9-666a-4814-8edb-60beb14ea59a","
d=int(input())
m=int(input())
y=int(input())
if d >= 1 and d <= 31 and y == 2010:
    print('YES')
else:
    print('NO')
","0.0"
"190516a0-6ed3-4c42-9f36-dc481a3adb70","x=int(input())
y=int(input())
z=x+y
print(z)","0.0"
"1a27e016-52ff-4e78-89cb-956f0a7cac6b","n=int(input())
mas=[0]*n
S=input().split()
mas=[int(i) for i in S]
mas2=sorted(mas)
print(*mas2)","0.0"
"abd77e3f-81bd-4c24-afdb-b64873f7c1c3","n=int(input())
mas=[0]*n
S=input().split()
mas=[int(i) for i in S]
print(sum(mas)/n)","0.0"
"6671bab8-0e57-4f15-bc39-c933a2495f50","n=int(input())
mas=[0]*n
S=input().split()
mas=[int(i) for i in S]

for i in range(0,n-1,2):
    t=mas[i]
    mas[i]=mas[i+1]
    mas[i+1]=t
print(*mas)","0.0"
"875ec0a5-0a8e-468b-b0f0-1b32c0337354","n=int(input())
mas=[0]*n
S=input().split()
mas=[int(i) for i in S]
k=0
for i in range(n):
    if mas[i]>=0:
        k+=1
print(k)","0.0"
"4b28d852-6b47-4db4-aa6b-099ecb0e7a8b","n=int(input())
print(n)
while n>1:
    if n%2==0:
         n=n//2
    else :
         n=(n*3+1)//2
    print(n)","0.0"
"94224cd9-666a-4814-8edb-60beb14ea59a","d=int(input())
m=int(input())
y=int(input())
l=2021-y
if y==2010 and m<9:
    print('YES')
else:
    print('NO')","0.0"
"94224cd9-666a-4814-8edb-60beb14ea59a","d=int(input())
m=int(input())
y=int(input())
l=2021-y
if y==2010:
    print('YES')
else:
    print('NO')","0.0"
"5d02ab7a-4394-4098-9f7a-ed3912083888","L=int(input())
n=L*2.54
n//1
print(round (n))
","0.0"
"190516a0-6ed3-4c42-9f36-dc481a3adb70","ï»¿x=int(input())
y=int(input())
z=x+y
print(z)
","0.0"
"94a4304c-1628-4b48-a1bb-62970467c416","n=int(input())
mas=[0]*n
S=input().split()
mas=[int(i) for i in S]
list.sort(mas)
print(*mas)","0.0"
"abd77e3f-81bd-4c24-afdb-b64873f7c1c3","n=int(input())
mas=[0]*n
S=input().split()
mas=[int(i) for i in S]
print(round(sum(mas)/n, 1))","0.0"
"1b689872-4b61-4615-a14e-24e7a0bcb1ba","n=int(input())
mas=[0]*n
S=input().split()
mas=[int(i) for i in S]
k=1
for i in range(0,n-1,1):    
    if mas[i]!=mas[i+1]:
        k+=1
print(k)","0.0"
"efe1a482-a2db-4971-a769-8b60a0beaf64","n=int(input())
mas=[0]*n
S=input().split()
mas=[int(i) for i in S]
k=0
for i in range(1,n-1,1):
    if mas[i-1]<mas[i] and mas[i+1]<mas[i]:
        k+=1
print(k)","0.0"
"bd77bd8e-1bf2-4a3b-b674-9eddb5375116","n=int(input())
i=2
while n%i!=0:
    i+=1
print(i)","0.0"
"15420900-ca97-49e3-846a-13bd92d9bace","n=int(input())
while n>0:
    print(n%10)
    n=n//10
    ","0.0"
"4659a273-9c89-4ff8-a1bd-6d0ae87e9915","n=int(input())
if n%10==1 and n!=11:
    print(n,'mag')
elif n%10==2 and n%10==3 and n%10==4 and n!=12 and n!=13 and n!=14:
    print(n,'maga')
else:
    print(n,'magov')","0.0"
"1ff5a639-82a9-46d5-99e8-90b0529a5016","h=int(input())
m=int(input())
h=h+1
m=m+15
if h>=24:
    h=0
if m>=60:
    h=h+1
    m=m-60
print(h,m)

","0.0"
"5d02ab7a-4394-4098-9f7a-ed3912083888","
L=int(input())
n=L*2.54//1
print(round (n))
","0.0"
"5d02ab7a-4394-4098-9f7a-ed3912083888","L=int(input())
n=L*2.54
print(round (n))
","0.0"
"190516a0-6ed3-4c42-9f36-dc481a3adb70","ï»¿x=int(input())
y=int(input())
z=x+y
print(z)
","0.0"
"efe1a482-a2db-4971-a769-8b60a0beaf64","n = int(input())
mas = [0] * n
s = input().split()
mas = [int(i) for i in s]
k = 0 
for i in range(1, n-1, 1):
    if mas[i-1] < mas[i] and mas[i] > mas[i+1]:
        k+=1
print(k)","0.0"
"875ec0a5-0a8e-468b-b0f0-1b32c0337354","

n = int(input())
mas = [0] * n
s = input().split()
mas = [int(i) for i in s]
k = 0
for i in range (n):
    if mas[i] >= 0:
        k += 1
print(k)","0.0"
"af34735a-a422-4900-a41c-ce3188000595","print(int(input())*""I must not tell lies
"")","0.0"
"521b1be0-3bd5-45f4-94f5-dad4b82ad375","

n = int(input())
mas = [0] * n
s = input().split()
mas = [int(i) for i in s]
maxx = -100
for i in range(n):
    if maxx < mas[i]:
        maxx = mas[i]
print(maxx)","0.0"
"1b689872-4b61-4615-a14e-24e7a0bcb1ba","

n = int(input())
mas = [0] * n
s = input().split()
mas = [int(i) for i in s]
k = 1
for i in range(0,n-1,1):
    if mas[i]!=mas[i+1]:
        k+=1
print(k)","0.0"
"6671bab8-0e57-4f15-bc39-c933a2495f50","n = int(input())
mas = [0] * n
s = input().split()
mas = [int(i) for i in s]
k = 0 
for i in range(0, n-1, 2):
    t = mas[i]
    mas[i] = mas[i+1]
    mas[i+1] = t

print(*mas)","0.0"
"bd77bd8e-1bf2-4a3b-b674-9eddb5375116","

number = int(input())
d = False
divider = 0
while d == False:
    for i in range(2, number+1):
        if number%i == 0:
            divider = i
            break
    d = True
print(divider)","0.0"
"f9af70f9-5fce-423e-94c5-b6f357e5242c","a=int(input())
n=int(input())
f=1
for i in range(1,n+1):
    f=f+a**i
print(f)





    ","0.0"
"3276b711-2292-488f-9353-be7b86ab5e1a","n=int(input())
print(2**n)
    

","0.0"
"16305713-d2dc-4ab1-8bbd-107594c55519","a=int(input())
b=int(input())
c=int(input())
g=max(a,b,c)
k1=min(a,b,c)
k2=(a+b+c)-g-k1
if k1+k2<=g:
    print(""impossible"")
else:
    if g**2==k1**2+k2**2:
        print(""right"")
    elif g**2<k1**2+k2**2:
        print(""acute"")
    elif g**2>k1**2+k2**2:
        print(""obtuse"")","0.0"
"eabdf11f-d1f1-44e0-8017-20e8e541ec68","a=int(input())
b=int(input())
c=int(input())
if a<b+c and b<a+c and c<a+b:
    print(""YES"")
else:
    print(""NO"")



","0.0"
"431be734-39e6-4f58-aec7-61e67c8ee1b5","g=int(input())
if g%4==0:
    print(""YES"")
else:
    print(""NO"")
","0.0"
"4659a273-9c89-4ff8-a1bd-6d0ae87e9915","n=int(input())
c=n-2
if (c%10==1) and (c!=11):
    print(c,""mag"")
elif (c%10==2 or c%10==3 or c%10==4)and(c!=12 and c!=13 and c!=14):
    print(c,""maga"")
else:
    print(c,""magov"")



","0.0"
"84118453-37c4-4256-a8f0-5dc2707d4e35","a=int(input())
b=bin(a)  
if a>=0:
   print(bin(a)[2:])
if a<0:
   print(bin(a)[3:])
","0.0"
"3e320d9a-cc8f-4ee0-867c-a570153011f6","str=input()
print(int(str,2))
","0.0"
"1ff5a639-82a9-46d5-99e8-90b0529a5016","n=int(input())
st=n//3+n%2+n//2
print(st)","0.0"
"1ff5a639-82a9-46d5-99e8-90b0529a5016","n=int(input())
st=n//3+1
print(st)","0.0"
"5d02ab7a-4394-4098-9f7a-ed3912083888","h=int(input())
m=int(input())
vr=h*60+m
vr=vr+75
print(vr//60%24,vr%60)","0.0"
"33cf3c19-292d-4544-a9a5-0e2a3c965272","sp=input().split("" "")
kol=0
for i in range(20):
    if int(sp[i])<100 and int(sp[i])%10==0:
        kol+=1
print(kol)","0.0"
"06a06b1c-da2e-4210-b889-371de309b82f","x=int(input())
nul=0
pol=0
ot=0
sp=input().split("" "")
for i in range(x):
    if int(sp[i])==0:
        nul=nul+1
    if int(sp[i])>0:
        pol=pol+1
    if int(sp[i])<0:
        ot=ot+1
print(nul,pol,ot)","0.0"
"ebc1af65-7f28-4308-a3c3-07335f379d84","x=int(input())
y=0
for i in range(1,x+1):
    if x%i==0 :
      y=y+1
print(y)","0.0"
"4c5a1413-e27d-4b6a-b218-bc8e2a3ade0e","x=int(input())
for i in range(1,x+1):
    if x%i==0 :
        print(i,end="" "")","0.0"
"16305713-d2dc-4ab1-8bbd-107594c55519","x=int(input())
y=int(input())
c=int(input())
if x+y>c and y+c>x and x+c>y:
    if x**2+y**2==c**2 or y**2+c**2==x**2 or c**2+x**2==y**2:
        print(""right"")
    elif x**2+y**2>c**2 or y**2+c**2>x**2 or c**2+x**2>y**2:
        print(""acute"")
    elif x**2+y**2<c**2 or y**2+c**2<x**2 or c**2+x**2<y**2:
        print(""obtuse"")
else:
    print(""impossible"")","0.0"
"431be734-39e6-4f58-aec7-61e67c8ee1b5","x=int(input())
if x%4==0 and x%100!=0 or x%400==0:
    print(""YES"")
else:
    print(""NO"")","0.0"
"d48be896-b484-440a-9ca5-2cc0f31533dc","x=int(input())
y=int(input())
if (x==5) and y==4 or x==5 and y==2 or x==6 and y==5 or x==8 and y==5 or x==6 and y==1 or x==8 and y==1:
    print(""YES"")
else:
    print(""NO"")","0.0"
"52fd296b-798f-4462-889c-5b49172bf987","n=int(input())
m=int(input())
k=int(input())
x=(26*n)+(m*(1*29+9))+(k*(1*29+13))
y=(2*17)*29
d=y-x
print(d)","0.0"
"f2d92959-39d9-49fe-a9b1-5868567eeedf","palR=int(input())
palR=palR*2.54
print(round(palR))","0.0"
"ce727aeb-b2aa-4da5-be32-636ce90da78c","
a,b,c,d=map(int,input().split())
for i in range(a,b+1):
 if i%d==c:
  print(i,end=' ')
","0.0"
"f9af70f9-5fce-423e-94c5-b6f357e5242c","a=int(input())
n=int(input())
S=0
for i in range(n+1):
 S=S+a**i
print(S)
","0.0"
"94224cd9-666a-4814-8edb-60beb14ea59a","d=int(input())
m=int(input())
y=int(input())
if (m<9) and (y==2010):
  print('YES')
else: print('NO')



","0.0"
"11f5282e-266d-41b6-b87e-01642625b2bd","
a=int(input())
print(bin(a)[2:])
print(oct(a)[2:])
print(hex(a)[2:])

","0.0"
"11f5282e-266d-41b6-b87e-01642625b2bd","
a=int(input())
print(bin(a)[2:])
print(oct(a)[2:])
print(hex(a)[2:])

","0.0"
"3e320d9a-cc8f-4ee0-867c-a570153011f6","str=input()
print(int(str,2))
","0.0"
"901dd977-9e8b-4b54-9730-6aeaa9d4a9e7","
ugol1=int(input())
print(90-ugol1)
","0.0"
"33cf3c19-292d-4544-a9a5-0e2a3c965272","sp=input().split("" "")
kol=0
for i in range(20):
    if int(sp[i])<100 and int(sp[i])%10==0:
        kol+=1
print(kol)


    


","0.0"
"33cf3c19-292d-4544-a9a5-0e2a3c965272","sp=input().split("" "")
kol=0
for i in range(20):
    if int(sp[i])<100 and int(sp[i])%10==0:
        kol+=1
print(kol)
    


","0.0"
"06a06b1c-da2e-4210-b889-371de309b82f","n=int(input())
nul=0
pol=0
otr=0
sp=(input().split("" ""))
for i in range(n):
    if int(sp[i])==0:
        nul=nul+1
    elif int(sp[i])>0:
        pol=pol+1
    else:
        otr=otr+1
print(nul,pol,otr)
","0.0"
"ebc1af65-7f28-4308-a3c3-07335f379d84","a=int(input())
k=0
for i in range(1,a+1):
    if a%i==0:
        k=k+1
print(k)



","0.0"
"4c5a1413-e27d-4b6a-b218-bc8e2a3ade0e","a=int(input())
for n in range(1,a+1):
   if a%n==0: 
        print(n,end="" "")","0.0"
"fe35f9e7-0b58-461f-9278-39f03054e886","a=int(input())
b=int(input())
for n in range(a,b+1):
    if n**0.5==int(n**0.5):
        print(n,end="" "")
















","0.0"
"4cadd9be-89f5-4d54-b38d-f823b7087153","a,b=map(int,input().split())
f=0
for i in range(a,b+1):
    if i%2==0:
        print(i,end="" "")








","0.0"
"f9af70f9-5fce-423e-94c5-b6f357e5242c","a=int(input())
n=int(input())
f=0
for i in range(n+1):
    f=f+a**i
print(f)
    ","0.0"
"b4e8d0e8-b2b3-4675-a090-16c08e1e936c","n=int(input())
f=1
for i in range(1,n+1):
    f=f*(i)
print(f)
    ","0.0"
"e5e8f4d5-0b0f-4a52-b5a7-12f8ef0a52f0","a=int(input())
b=int(input())
c=int(input())
g=max(a,b,c)
k1=min(a,b,c)
k2=(a+b+c)-g-k1
print(k1,k2,g)","0.0"
"431be734-39e6-4f58-aec7-61e67c8ee1b5","g=int(input())
if (g%4==0 and g%100!=0) or (g%400==0):
    print(""YES"")
else:
    print(""NO"")

","0.0"
"4659a273-9c89-4ff8-a1bd-6d0ae87e9915","n=int(input())
c=n-2
if (c%10==1) and (c!=11):
    print(c,""mag"")
elif (c%10==2 or c%10==3 or c%10==4)and(c!=12 or c!=13 or c!=14):
    print(c,""maga"")
else:
    print(c,""magov"")


","0.0"
"9e9de547-58f5-45b9-a733-37cc732bf237","pal=int(input())
fut=int(input())
s=pal*2.54
if s<fut and s>=0:
    print(""YES"")
else:
    print(""NO"") ","0.0"
"52fd296b-798f-4462-889c-5b49172bf987","n=int(input())
m=int(input())
k=int(input())
su=n*26+m*38+k*42
gar=2*17*29
print(gar-su)

","0.0"
"4c5a1413-e27d-4b6a-b218-bc8e2a3ade0e","x=int(input())
for i in range(1,x+1):
    if x%i==0:
        print(i,end="" "")","0.0"
"16305713-d2dc-4ab1-8bbd-107594c55519","x=int(input())
y=int(input())
c=int(input())
if x**2+y**2==c**2 or y**2+c**2==x**2 or c**2+x**2==y**2:
    print(""right"")
elif x**2+y**2>c**2 or y**2+c**2>x**2 or c**2+x**2>y**2:
    print(""acute"")
elif x**2+y**2<c**2 or y**2+c**2<x**2 or c**2+x**2<y**2:
    print(""obtuse"")
elif not(x+y>c and y+c>x and x+c>y):
        print(""impossible"")","0.0"
"16305713-d2dc-4ab1-8bbd-107594c55519","x=int(input())
y=int(input())
c=int(input())
max(x,y,c)
if x**2+y**2==c**2 or y**2+c**2==x**2 or c**2+x**2==y**2:
    print(""right"")
elif x**2+y**2>c**2 or y**2+c**2>x**2 or c**2+x**2>y**2:
    print(""acute"")
elif x**2+y**2<c**2 or y**2+c**2<x**2 or c**2+x**2<y**2:
    print(""obtuse"")
elif x+y>c and y+c>x and x+c>y:
    print(""impossible"")","0.0"
"eabdf11f-d1f1-44e0-8017-20e8e541ec68","y=int(input())
x=int(input())
e=int(input())
if y+x>e and x+e>y and e+y>x:
    print(""YES"")
else:
    print(""NO"")","0.0"
"53c6ed65-d137-4acc-97ec-8200a4ee1eb6","n,r=map(int,input().split())
kol=0
for i in range(n):
    x,y=map(int,input().split())
    if x**2+y**2<r**2:
        kol=kol+1
print(kol)
","0.0"
"ebc1af65-7f28-4308-a3c3-07335f379d84","
a=int(input()) 
k=0
for i in range(1,a+1):
 if a%i==0:
     k=k+1
print(k)


","0.0"
"08f18ec8-c939-44c6-b125-642f6a2341fa","n=int(input())
gar=n//8
ron=n//8
ger=6*n//8
print(gar,ron,ger)
","0.0"
"1ff5a639-82a9-46d5-99e8-90b0529a5016","
n=int(input())
st=n//3+int((n%3)/2+0.5)
print(st)","0.0"
"5d02ab7a-4394-4098-9f7a-ed3912083888","h=int(input())
m=int(input())
vr=h*60+m
vr=vr+75
print(vr//60%24,vr%60)
","0.0"
"f2d92959-39d9-49fe-a9b1-5868567eeedf","
palR=int(input())
palR=round(palR*2.54)
print(palR)","0.0"
"b76c8f23-a934-45a5-ad8c-8396fe67301c","n=int(input())
sp=input().split("" "")
z=0
mx=0
for i in range(n):
    a=sp[i]
    z=list(map(int,sp[i]))
    if sum(z)>mx:
        mx=sum(z)
        otv=sp[i]
print(otv)
","0.0"
"33cf3c19-292d-4544-a9a5-0e2a3c965272","sp=input().split("" "")
kol=0
for i in range(20):
    if int(sp[i])<100 and int(sp[i])%10==0 and int(sp[i])!=0:
        kol+=1
print(kol)




    


","0.0"
"06a06b1c-da2e-4210-b889-371de309b82f","n=int(input())
nul=0
pol=0
otr=0
sp=(input().split("" ""))
for i in range(n):
    if int(sp[i])==0:
        nul+=1
    elif int(sp[i])>0:
        pol+=1
    else:
        otr+=1
print(nul,pol,otr)



","0.0"
"ce727aeb-b2aa-4da5-be32-636ce90da78c","a,b,c,d=map(int,input().split())
f=0
for i in range(a,b+1):
    if i%d==c:
        print(i,end="" "")
","0.0"
"f9af70f9-5fce-423e-94c5-b6f357e5242c","a=int(input())
n=int(input())
f=1
for i in range(1,n+1):
    f=f+a**i
print(f)


    ","0.0"
"eabdf11f-d1f1-44e0-8017-20e8e541ec68","a=int(input())
b=int(input())
c=int(input())
if a<b+c and b<a+c and c<a+b:
    print(""YES"")
else:
    print(""NO"")

","0.0"
"eabdf11f-d1f1-44e0-8017-20e8e541ec68","a=int(input())
b=int(input())
c=int(input())
if a<b+c and b<a+c and c<a+b:
    print(""YES"")
else:
    print(""NO"")","0.0"
"431be734-39e6-4f58-aec7-61e67c8ee1b5","g=int(input())
if g%4==0 and g%100!=0 and g%400==0:
    print(""YES"")
else:
    print(""NO"")

","0.0"
"f9f08d20-e4e6-49ac-8682-f4b7100928a4","a=int(input())
b=int(input())
d=int(input())
c=min(a,b)
if d<=c-4:
    print(""YES"")
else:
    print(""NO"")
    
    
","0.0"
"08f18ec8-c939-44c6-b125-642f6a2341fa","n=int(input())
gar=n//8
ron=n//8
ger=6*n//8
print(gar,ron,ger)","0.0"
"1ff5a639-82a9-46d5-99e8-90b0529a5016","n=int(input())
st=n//3+n%3//2+n%3%2
print(st)","0.0"
"901dd977-9e8b-4b54-9730-6aeaa9d4a9e7","ugol1=int(input())

print(90-ugol1)
","0.0"
"33cf3c19-292d-4544-a9a5-0e2a3c965272","sp=input().split("" "")
kol=0
for i in range(20):
    if int(sp[i])<100 and int(sp[i])>9 and int(sp[i])%10==0:
        kol+=1
print(kol)","0.0"
"e5e8f4d5-0b0f-4a52-b5a7-12f8ef0a52f0","x=int(input())
y=int(input())
c=int(input())
r=max(x,y,c)
v=min(x,y,c)
e=(x+y+c)-v-r
print(v,e,r)","0.0"
"777756d6-d867-4cc7-978e-717933384418","x=int(input())
y=x%4
if y==1 or x==1:
    print(""Gryffindor"")
elif y==2 or x==2:
    print(""Slytherin"")
elif y==3 or x==3:
    print(""Ravenclaw"")
else:
    print(""Hufflepuff"")","0.0"
"4659a273-9c89-4ff8-a1bd-6d0ae87e9915","x=int(input())
y=x-2
if (y%10==1) and y!=11:
    print(y,""mag"")
elif y%10==2 or y%10==3 or y%10==4 and (y!=12 and y!=13 and y!=14):
    print(y,""maga"")
else:
    print(y,""magov"")","0.0"
"4659a273-9c89-4ff8-a1bd-6d0ae87e9915","x=int(input())
y=x-2
if (y%10==1) and y!=11:
    print(y,""mag"")
elif y%10==2 or y%10==3 or y%10==4 and (y!=12 or y!=13 or y!=14):
    print(y,""maga"")
else:
    print(y,""magov"")","0.0"
"f9f08d20-e4e6-49ac-8682-f4b7100928a4","a=int(input())
b=int(input())
d=int(input())
x=min(a,b)
if d<=x-4:
    print(""YES"")
else:
    print(""NO"")


","0.0"
"33cf3c19-292d-4544-a9a5-0e2a3c965272","sp=input().split(' ')
kol=0
for i in range(20):
    if int(sp[i])<100 and int(sp[i])%10==0:
      kol=kol+1
print(kol)","0.0"
"33cf3c19-292d-4544-a9a5-0e2a3c965272","sp=input().split(' ')
kol=0
for i in range(20):
    if int(sp[i])<100 and int(sp[i])%10==0:
      kol=kol+1
print(kol)","0.0"
"4c5a1413-e27d-4b6a-b218-bc8e2a3ade0e","a=int(input()) 
for i in range(1,a+1):
 if a%i==0:
     print(i,end=' ')






","0.0"
"b4e8d0e8-b2b3-4675-a090-16c08e1e936c","
N=int(input())
f=1
for i in range(1,N+1):
  f=f*i
print(f)
","0.0"
"52fd296b-798f-4462-889c-5b49172bf987","n=int(input())
m=int(input())
k=int(input())
y=2*17*29
h=n*26+m*38+k*42
c=y-h
print(c)","0.0"
"1ff5a639-82a9-46d5-99e8-90b0529a5016","
n=int(input())
st=n//3+(n%3)//2+n%3%2
print(st)","0.0"
"53c6ed65-d137-4acc-97ec-8200a4ee1eb6","n,r=map(int,input().split());
kol=0
for i in range(n):
    x,y=map(int,input().split())
    if x**2+y**2<r**2:
        kol+=1
print(kol)


","0.0"
"4c5a1413-e27d-4b6a-b218-bc8e2a3ade0e","a=int(input())
for n in range(1,a+1):
   if a%n==0: 
        print(n,end="" "")


","0.0"
"ce727aeb-b2aa-4da5-be32-636ce90da78c","a,b,c,d=map(int,input().split())
f=0
for i in range(a,b+1):
    if i%d==c:
        print(i,end="" "")


","0.0"
"431be734-39e6-4f58-aec7-61e67c8ee1b5","g=int(input())
if g%4==0 and g%100!=0 and g%400==0:
    print(""YES"")
else:
    print(""NO"")
","0.0"
"431be734-39e6-4f58-aec7-61e67c8ee1b5","g=int(input())
if g%4==0:
    print(""YES"")
else:
    print(""NO"")","0.0"
"4659a273-9c89-4ff8-a1bd-6d0ae87e9915","n=int(input())
c=n-2
if (c%10==1) and (c!=11):
    print(c,""mag"")
elif (c%10==2 or c%10==3 or c%10==4)and(c!=12 or c!=13 or c!=14):
    print(c,""maga"")
else:
    print(c,""magov"")

","0.0"
"f9f08d20-e4e6-49ac-8682-f4b7100928a4","a=int(input())
b=int(input())
d=int(input())
if a-d>=4 and b-d>=4:
    print(""YES"")
else:
    print(""NO"")
    
","0.0"
"94224cd9-666a-4814-8edb-60beb14ea59a","d=int(input())
m=int(input())
g=int(input())
if m<9 and g==2010:
    print(""YES"")
else:
    print(""NO"")
















","0.0"
"3e320d9a-cc8f-4ee0-867c-a570153011f6","str=input()
print(int(str,2))","0.0"
"3e320d9a-cc8f-4ee0-867c-a570153011f6","str=input()
print(int(str,2))","0.0"
"f2d92959-39d9-49fe-a9b1-5868567eeedf","palR=int(input())
palR=int(palR*2.54)
print(palR)","0.0"
"16305713-d2dc-4ab1-8bbd-107594c55519","x=int(input())
y=int(input())
c=int(input())
if x+y>c and y+c>x and x+c>y:
    if x**2+y**2==c**2 or y**2+c**2==x**2 or c**2+x**2==y**2:
        print(""right"")
    elif x**2+y**2<c**2 or y**2+c**2<x**2 or c**2+x**2<y**2:
        print(""obtuse"")
    elif x**2+y**2>c**2 or y**2+c**2>x**2 or c**2+x**2>y**2:
        print(""acute"")
else:
    print(""impossible"")","0.0"
"16305713-d2dc-4ab1-8bbd-107594c55519","x=int(input())
y=int(input())
c=int(input())
max(x,y,c)
if x**2+y**2==c**2 or y**2+c**2==x**2 or c**2+x**2==y**2:
    print(""right"")
elif x**2+y**2>c**2 or y**2+c**2>x**2 or c**2+x**2>y**2:
    print(""acute"")
elif x**2+y**2<c**2 or y**2+c**2<x**2 or c**2+x**2<y**2:
    print(""obtuse"")
elif not(x+y>c and y+c>x and x+c>y):
        print(""impossible"")","0.0"
"4659a273-9c89-4ff8-a1bd-6d0ae87e9915","x=int(input())
y=x-2
if (y%10==1) and y!=11:
    print(y,""mag"")
elif (y%10==2 or y%10==3 or y%10==4) and (y!=12 and y!=13 and y!=14):
    print(y,""maga"")
else:
    print(y,""magov"")","0.0"
"4659a273-9c89-4ff8-a1bd-6d0ae87e9915","x=int(input())
y=x-2
if (y%10==1) and y!=11:
    print(y,""mag"")
elif y%10==2 or y%10==3 or y%10==4 and (y!=12 and y!=13 and y!=14):
    print(y,""maga"")
else:
    print(y,""magov"")","0.0"
"f9f08d20-e4e6-49ac-8682-f4b7100928a4","a=int(input())
b=int(input())
d=int(input())
if  (a-4)>=d and (b-4)>=d:
    print(""YES"")
else:
    print(""NO"")
","0.0"
"08f18ec8-c939-44c6-b125-642f6a2341fa","x=int(input())
ron=x//8
gar=x//8
ger=6*x//8
print(ron,gar,ger)","0.0"
"f2d92959-39d9-49fe-a9b1-5868567eeedf","palR=int(input())
palR=palR*2.54
print(int(palR))","0.0"
"b76c8f23-a934-45a5-ad8c-8396fe67301c","n=int(input())
sp=input().split(' ')
z=0
mx=0
for i in range(n):
    a=sp[i]
    z=list(map(int,sp[i]))
    if sum(z)>mx:
        mx = sum(z)
        otv=sp[i]
print(otv)




","0.0"
"84118453-37c4-4256-a8f0-5dc2707d4e35","


a=int(input())
if a>=0:
    print(bin(a)[2:])
else:
    print(bin(a)[3:])

","0.0"
"3e320d9a-cc8f-4ee0-867c-a570153011f6","str=input()
print(int(str,2))


","0.0"
"190516a0-6ed3-4c42-9f36-dc481a3adb70","print(int(input()) + int(input()))","0.0"
"c0df7d49-26f5-451c-b44a-1e0bca60bca5","print(len(input().split())-1)","0.0"
"1b2dfff2-077c-4804-9067-dec63bee6584","s = input()
sim=input()
maxLen, cLen = 0, 0
for c in s:
  if c == sim:
    cLen += 1
    if cLen > maxLen:
       maxLen = cLen
  else:
    cLen = 0
print( maxLen )","0.0"
"b8f9bbc2-7933-426f-a21d-ff3e82abc198","s = input()
maxLen, curLen, c = 1, 1, s[0]
for i in range(1, len(s)):
  if s[i] == s[i-1]:
    curLen += 1
    if curLen > maxLen:
      maxLen = curLen
      c = s[i]
  else:
    curLen = 1
print( c, maxLen )","0.0"
"704fe53c-bcb7-48de-a964-e687a0ae281c","s = input()

count = 0
maxCount = 0
for char in s:
  if char in 'ABC':
    count += 1
    if count>maxCount:
      maxCount = count
  else:
      count=0
print(maxCount)","0.0"
"704fe53c-bcb7-48de-a964-e687a0ae281c","s = input()

count = 0
maxCount = 0
for char in s:
  if char in 'ABC':
    count += 1
    if count>maxCount:
      maxCount = count
  else:
      count=0
print(maxCount)","0.0"
"06c76227-d39e-4bac-8f71-f68c262dd42e","s = input()

count = 0
maxCount = 0
for char in s:
    if (char == 'E' and count%3 == 0) or \n       (char == 'A' and count%3 == 1) or \n       (char == 'B' and count%3 == 2):
        count += 1
        if count > maxCount:
            maxCount = count
    elif (char=='E'):
        count = 1
    else:  
        count = 0
print(maxCount)","0.0"
"94581bd4-2060-44f1-ad09-4c18917d4f17","s = input()

maxLen, curLen = 1, 1
for i in range(1, len(s)):
  if s[i] != s[i-1]:
    curLen += 1
    if curLen > maxLen:
      maxLen = curLen
  else:
    curLen = 1
print( maxLen )","0.0"
"1b2dfff2-077c-4804-9067-dec63bee6584","s = input()
sim = input()
l,maxl = 0,0
for i in s:
    if i == sim:
        l+=1
    else:
        if maxl < l:
            maxl = l
        l = 0
print(maxl)
","0.0"
"1b2dfff2-077c-4804-9067-dec63bee6584","sstr=input()
s=input()
k,maxk=0,0
for i in sstr:
       if (i==s):
              k+=1
       else:
              if k>maxk:
                     maxk=k
              k=0
print(maxk)","0.0"
"1b2dfff2-077c-4804-9067-dec63bee6584","s=input()
sim=input()
l,maxl=0,0
for i in s:
    if (i==sim):
        l+=1
    else:
        if l>maxl:
            maxl=l
        l=0
print(maxl)","0.0"
"1b2dfff2-077c-4804-9067-dec63bee6584","s=input()
sl=input()
l,maxl=0,0
for i in s:
    if (i==sl):
        l+=1
    else:
        if l>maxl:
            maxl=l
        l=0
print(maxl)","0.0"
"1b2dfff2-077c-4804-9067-dec63bee6584","a=input()
b=input()
L,maxL=0,0
for  i in a:
    if (i==b):
        L+=1
    else:
        if L>maxL:
            maxL=L
            L=0
print(maxL)

","0.0"
"1b2dfff2-077c-4804-9067-dec63bee6584","a=input()
b=input()
L,maxL=0,0
for  i in a:
    if (i==b):
        L+=1
    else:
        if L>maxL:
            maxL=L
            L=0
print(maxL)

","0.0"
"1b2dfff2-077c-4804-9067-dec63bee6584","a=input()
b=input()
L,maxL=0,0
for  i in a:
    if (i==b):
        L+=1
    else:
        if L>maxL:
            maxL=L
        L=0
print(maxL)
","0.0"
"b8f9bbc2-7933-426f-a21d-ff3e82abc198","s=input()
l,maxl,kl=1,0,""""
for i in range(len(s)-1):
    if s[i]==s[i+1]:
        l+=1
        if l>maxl:
            maxl=l
            kl=s[i]
    else:
        l=1
print(kl,maxl)
","0.0"
"b8f9bbc2-7933-426f-a21d-ff3e82abc198","sstr=input()
k,maxk,ki=1,0,''
for i in range(len(sstr)-1):
       if (sstr[i]==sstr[i+1]):
              k+=1
              if k>maxk:
                     maxk=k
                     ki=sstr[i]
       else:
              k=1
print(ki,maxk)","0.0"
"b8f9bbc2-7933-426f-a21d-ff3e82abc198","s=input()
l, maxl, word=0, 0, """"
for i in range( len(s)-1):
    if s[i]==s[i+1]:
        l+=1
        if l>maxl:
            maxl=l
            word=s[i]
    else:
        l=1
print(word,maxl)

","0.0"
"b8f9bbc2-7933-426f-a21d-ff3e82abc198","s=input()
l,maxl,word=0,0,""""
for i in range(1,len(s)-1):
    if s[i]==s[i+1]:
        l+=1
        if l>maxl:
            maxl=l
            word=s[i]
    else:
        l=1
print(word,maxl)
","0.0"
"b8f9bbc2-7933-426f-a21d-ff3e82abc198","s=input()
l,maxl,word=0,0,""""
for i in range(1,len(s)-1):
    if s[i]==s[i+1]:
        l+=1
        if l>maxl:
            maxl=l
            word=s[i]
    else:
        l=1
print(word,maxl)","0.0"
"704fe53c-bcb7-48de-a964-e687a0ae281c","s=input()
l,maxl=0,0
for i in s:
    if i==""A"" or i==""B"" or i==""C"":
        l+=1
    else:
        if l>maxl:
            maxl=l
        l=0
print(maxl)","0.0"
"704fe53c-bcb7-48de-a964-e687a0ae281c","s=input()
l, maxl, word=0, 0, """"
for i in s:
    if i==""A"" or i==""B"" or i==""C"":
        l+=1
    else:
        if l>maxl:
            maxl=l
        l=0
                 
print(maxl)","0.0"
"704fe53c-bcb7-48de-a964-e687a0ae281c","sstr=input()
k,maxk,=0,0
for i in sstr:
       if i=='A' or i=='B' or i=='C':
              k+=1
              if k>maxk:
                     maxk=k

       else:
              k=0
print(maxk)","0.0"
"704fe53c-bcb7-48de-a964-e687a0ae281c","s = input()
s = s+'1'
l,maxl,maxi,teci = 0,0,s[0],s[0]
for i in s:
    if i == 'A' or i == 'B' or i == 'C':
        l+=1
    else:
        if maxl < l:
            if teci == s[0]:
                maxl = l
            else:
                maxl = l+1
            #print(maxl)
            #print(maxi)
        
        l = 0
    
print(maxl)
","0.0"
"704fe53c-bcb7-48de-a964-e687a0ae281c","s=input()
l,maxl,word=0,0,""""
for i in s:
    if i==""A"" or i==""B"" or i==""C"":
        l+=1
    else:
        if l>maxl:
            maxl=l
        l=0
print(maxl)
    ","0.0"
"b8f9bbc2-7933-426f-a21d-ff3e82abc198","a=input()
L,maxL,buk=1,0,''
for  i in range(len(a)-1):
    if(a[i]==a[i+1]):
        L+=1
        if L>maxL:
            maxL=L
            buk=a[i]
    else:
        L=1
print(buk,maxL)
        
        
","0.0"
"704fe53c-bcb7-48de-a964-e687a0ae281c","s=input()
l,maxl=0,0
for i in s:
    if i in ""ABC"":
        l+=1
    else:
        if l>maxl:
            maxl=l
        l=0
print(maxl)","0.0"
"704fe53c-bcb7-48de-a964-e687a0ae281c","a=input()
L,maxL=0,0,
for  i in a:
    if i in 'ABC':
        L+=1
        if L>maxL:
            maxL=L
    else:
        L=0
print(maxL)
        ","0.0"
"06c76227-d39e-4bac-8f71-f68c262dd42e","sstr=input()
k,maxk=0,0
for i in sstr:
       if (i=='E' and k%3==1) or (i=='A' and k%3==2) or (i=='B' and k%3==0):
              k+=1
              if k>maxk:
                     maxk=k

       else:
              k=0
print(maxk)","0.0"
"06c76227-d39e-4bac-8f71-f68c262dd42e","s=input()
l,maxl=0,0
for i in s:
    if (i==""E"" and l%3==0) or (i==""A"" and l%3==1) or (i==""B"" and l%3==2):
        l+=1
        if l>maxl:
            maxl=l
    else:
        l=0
print(maxl)


","0.0"
"06c76227-d39e-4bac-8f71-f68c262dd42e","sstr=input()
k,maxk=0,0
for i in sstr:
       if (i=='E' and k%3==0) or (i=='A' and k%3==1) or (i=='B' and k%3==2):
              k+=1
              if k>maxk:
                     maxk=k

       else:
              k=0
print(maxk)","0.0"
"94581bd4-2060-44f1-ad09-4c18917d4f17","s = input()
l = list()
k = 0
for i in range(len(s)):
    l.append(s[i])
l.append('1')
for i in range(len(s)):
    if i % 2 == 0:
        if l[i] != l[i-1] and l[i] != l[i+1]:
            k+=1
print(k)
","0.0"
"c0df7d49-26f5-451c-b44a-1e0bca60bca5","s = list(map(int, input().split()))
print(len(s)-1)
","0.0"
"03a8a5e2-f2b8-4e7d-b0ec-acf8aaa72e29","x=input()
s=1
maxs=0
for i in range(len(x)-1):
    if (x[i]=='K' and x[i+1]=='L') or (x[i]=='L' and x[i+1]=='K'):
        s=1

    else:
        s+=1
        if maxs<s:
            maxs=s
        
print(maxs)","0.0"
"03a8a5e2-f2b8-4e7d-b0ec-acf8aaa72e29","a=input()
k,mk=1,0
for i in range(len(a)-1):
    if (a[i]=='K' and a[i+1]=='L')or(a[i]=='L' and a[i]=='K'):
        k=1
    else:
        k+=1
        if mk<k:
            mk=k
        
print(mk)

            
            
","0.0"
"03a8a5e2-f2b8-4e7d-b0ec-acf8aaa72e29","a=input()
k,mk=1,0
for i in range(len(a)-1):
    if (a[i]=='K' and a[i+1]=='L')or(a[i]=='L' and a[i+1]=='K'):
        k=1
    else:
        k+=1
        if mk<k:
            mk=k
        
print(mk)

            
            
            
            
","0.0"
"03a8a5e2-f2b8-4e7d-b0ec-acf8aaa72e29","a=input()
k=1
m=0
for i in range (len(a)-1):
       if (a[i]=='K' and a[i+1]=='L') or (a[i]=='L' and a[i+1]=='K'):
              k=1
       else:
              k+=1
              if m<k:
                     m=k
print(m)
","0.0"
"03a8a5e2-f2b8-4e7d-b0ec-acf8aaa72e29","a=input()
ts,maxts=1,0
for i in range(len(a)-1):
    if (a[i]=='K' and a[i+1]=='L')or(a[i]=='L' and a[i+1]=='K'):
        ts=1
    else:
        ts+=1
        if maxts<ts:
            maxts=ts
print(maxts)

","0.0"
"03a8a5e2-f2b8-4e7d-b0ec-acf8aaa72e29","a=input()
maxts=0
ts=1
for i in range (len(a)-1):
        if (a[i]=='K' and a[i+1]=='L') or (a[i]=='L' and a[i+1]=='K'):
                ts=1
        else:
                ts+=1
                if maxts<ts:
                    maxts=ts
print(maxts)
            
","0.0"
"03a8a5e2-f2b8-4e7d-b0ec-acf8aaa72e29","st = input()
k = 1
mx = 0
for i in range(1, len(st)):
    if (st[i] == 'K' and st[i-1] == 'L') or (st[i-1] == 'K' and st[i] == 'L'):
        k = 1
    else:
        k += 1
        if k > mx:
            mx = k
print(mx)","0.0"
"03a8a5e2-f2b8-4e7d-b0ec-acf8aaa72e29","a=input()
k=1
m=0
for i in range(len(a)-1):
    if(a[i]=='K' and a[i+1]=='L') or (a[i]=='L' and a[i+1]=='K'):
        k=1
    else:
        k+=1
    if m<k:
        m=k
print(m)
","0.0"
"4d88fcc7-08f9-47c3-86d4-9f59b6f127fa","x=input()
s=1
maxs=0
for i in range(len(x)-1):
    if (x[i]=='X' and x[i+1]=='Z' and x[i+2]=='Z' and x[i+3]=='Y'):
        if (x[i]=='X' and x[i+1]=='Z' and x[i+2]=='Z' and x[i+3]=='Y'):
            s=s+2
            if maxs<s:
                maxs=s
            
        s=1
        
    

    else:
        s+=1
        if maxs<s:
            maxs=s
        
print(maxs)","0.0"
"4d88fcc7-08f9-47c3-86d4-9f59b6f127fa","x=input()
s=1
maxs=0
for i in range(len(x)-1):
    if (x[i]=='X' and x[i+1]=='Z' and x[i+2]=='Z' and x[i+3]=='Y'):
        s=s+2
        if maxs<s:
            maxs=s
            
        s=1
        
    

    else:
        s+=1
        if maxs<s:
            maxs=s
        
print(maxs)
","0.0"
"03a8a5e2-f2b8-4e7d-b0ec-acf8aaa72e29","a = input()
a = a+'KL'
k = 1
maxk = 0
for i in range(0,len(a)-1):
    if a[i]+a[i+1] != 'KL' and a[i]+a[i+1] != 'LK':
        k+=1
    else:
        if maxk < k:
            maxk = k
        k = 0


print(maxk)","0.0"
"4d88fcc7-08f9-47c3-86d4-9f59b6f127fa","a=input()
ts,maxts=1,0
for i in range(len(a)-1):
    if (a[i]=='X' and a[i+1]=='Z' and a[i+2]=='Z' and a[i+3]=='Y'):
        ts+=2
        if maxts<ts:
            maxts=ts
        ts=1
    else:
        ts+=1
        if maxts<ts:
            maxts=ts
print(maxts)
","0.0"
"03a8a5e2-f2b8-4e7d-b0ec-acf8aaa72e29","strr=input()
k,maxk=1,0
for i in range(len(strr)-1):
    if (strr[i]=='K' and strr[i+1]=='L') or (strr[i]=='L' and strr[i+1]=='K'):
      k=1  
    else:
        k+=1
        if k>maxk:
           maxk=k
     
print(maxk)","0.0"
"03a8a5e2-f2b8-4e7d-b0ec-acf8aaa72e29","a=input()
k,mk=1,0
for i in range(len(a)-1):
    if (a[i]==""K"" and a[i+1]==""L"") or (a[i]==""L"" and a[i+1]==""K""):
        k=1
    else:
       k+=1
       if k>mk:
           mk=k
print(mk)","0.0"
"4d88fcc7-08f9-47c3-86d4-9f59b6f127fa","a=input()
k,mk=1,0
for i in range(len(a)-1):
    if  (a[i]=='X' and a[i+1]=='Z' and a[i+2]=='Z' and a[i+3]=='Y'):
        k=k+2
        if mk<k:
            mk=k
            k=1
    else:
        k+=1
        if mk<k:
            mk=k
        
print(mk)

            
            ","0.0"
"03a8a5e2-f2b8-4e7d-b0ec-acf8aaa72e29","a = input()
k = 1
maxk = 0
if a[len(a)-1] == 'L':
    a = a+'LK'
elif a[len(a)-1] == 'K':
    a = a+'KL'
else:
    a = a + 'KL'
for i in range(0,len(a)-1):
    if a[i]+a[i+1] != 'KL' and a[i]+a[i+1] != 'LK':
        k+=1
    else:
        if maxk < k:
            maxk = k
        k = 0


print(maxk)
","0.0"
"03a8a5e2-f2b8-4e7d-b0ec-acf8aaa72e29","a = input()
k = 1
maxk = 0
if a[len(a)-1] == 'L':
    a = a+'K'
elif a[len(a)-1] == 'K':
    a = a+'L'
else:
    a = a[:len(a)-1]
    a = a + 'KL'
for i in range(0,len(a)-1):
    if a[i]+a[i+1] != 'KL' and a[i]+a[i+1] != 'LK':
        k+=1
    else:
        if maxk < k:
            maxk = k
        k = 1


print(maxk)
","0.0"
"4e5b21c0-e86f-4eac-82b6-1a0d00ae4199","l = list(map(int, input().split()))
m, n =0, 0
for el in l:
  if el>m:
    m = el
for el in l:
  if el==m:
    n+=1
print(n)","0.0"
"4d88fcc7-08f9-47c3-86d4-9f59b6f127fa","p=input()
k=1
m=0
for i in range (len(p)-1):
       if p[i] == ""X"" and p[i + 1] == ""Z"" and p[i + 2] == ""Z"" and p[i + 3] == ""Y"":
              k=k+2
              if m<k:
                     m=k
              k=1
       else:
              k+=1
              if m<k:
                     m=k

print(m)","0.0"
"4d88fcc7-08f9-47c3-86d4-9f59b6f127fa","a = input()
maxk = 0
k = 1
for i in range(len(a) - 3):
    if a[i] == 'X' and a[i+1] == 'Z' and a[i+2] == 'Z' and a[i+3] == 'Y':
        k = 1
    else:
        k+=1
        if k+2>maxk:
            maxk = k+2
print(maxk)
            
","0.0"
"4d88fcc7-08f9-47c3-86d4-9f59b6f127fa","x=input()
s=3
maxs=0
for i in range(len(x)-3):
    if (x[i]=='X' and x[i+1]=='Z' and x[i+2]=='Z' and x[i+3]=='Y'):
        if maxs<s:
            maxs=s
            
        s=1
        
    

    else:
        s+=1
        if maxs<s:
            maxs=s
       
        
print(maxs)","0.0"
"4d88fcc7-08f9-47c3-86d4-9f59b6f127fa","strr=input()
k,maxk=1,0
for i in range(len(strr)-3):
    if (strr[i]=='X' and strr[i+1]=='Z' and strr[i+2]=='Z' and strr[i+3]=='Y'):
      if k+1>maxk:
           maxk=k+1
      k=1
    else:
        k+=1
        if k+2>maxk:
           maxk=k+2
     
print(maxk)","0.0"
"4d88fcc7-08f9-47c3-86d4-9f59b6f127fa","a=input()
k,mk=1,0
for i in range(len(a)-3):
    if (a[i]==""X"" and a[i+1]==""Z"" and a[i+2]==""Z"" and a[i+3]==""Y""):
        if k+1>mk:
                mk=k+1
        k=1
    else:
        k+=1
        if k+2>mk:
            mk=k+2
print(mk)","0.0"
"4d88fcc7-08f9-47c3-86d4-9f59b6f127fa","p=input()
k=1
m=0
for i in range (len(p)-1):
       if p[i] == ""X"" and p[i + 1] == ""Z"" and p[i + 2] == ""Z"" and p[i + 3] == ""Y"":
              k=k+2
              if m<k:
                     m=k
              k=1
       else:
              k+=1
              if m<k:
                     m=k

print(m)
","0.0"
"4d88fcc7-08f9-47c3-86d4-9f59b6f127fa","a=input()
k,mk=1,0
for i in range(len(a)-3):
    if  (a[i]=='X' and a[i+1]=='Z' and a[i+2]=='Z' and a[i+3]=='Y'):
        if k+1>mk:
             mk=k+1
        k=1
    
    else:
        k+=1
        if k+2>mk:
            mk=k+2
        
print(mk)

            
","0.0"
"4d88fcc7-08f9-47c3-86d4-9f59b6f127fa","x=input()
s=1
maxs=0
for i in range(len(x)-3):
    if (x[i]=='X' and x[i+1]=='Z' and x[i+2]=='Z' and x[i+3]=='Y'):
        if maxs<s+1:
            maxs=s+1
            
        s=1
        
    

    else:
        s+=1
        if maxs<s+2:
            maxs=s+2
       
        
print(maxs)
","0.0"
"4d88fcc7-08f9-47c3-86d4-9f59b6f127fa","a=input()
ts,maxts=1,0
for i in range(len(a)-1):
    if (a[i]=='X' and a[i+1]=='Z' and a[i+2]=='Z' and a[i+3]=='Y'):
        ts+=2
        if maxts<ts:
            maxts=ts
        ts=1
    else:
        ts+=1
        if maxts<ts:
            maxts=ts
print(maxts)
","0.0"
"4d88fcc7-08f9-47c3-86d4-9f59b6f127fa","a=input()
k,mk=1,0
for i in range(len(a)-3):
    if (a[i]==""X"" and a[i+1]==""Z"" and a[i+2]==""Z"" and a[i+3]==""Y""):
        k=1
    else:
        k+=1
        if k+2>mk:
            mk=k+2
print(mk)","0.0"
"4d88fcc7-08f9-47c3-86d4-9f59b6f127fa","strr=input()
k,maxk=1,0
for i in range(len(strr)-3):
    if (strr[i]=='X' and strr[i+1]=='Z' and strr[i+2]=='Z' and strr[i+3]=='Y'):
      k=1
    else:
        k+=1
        if k+2>maxk:
           maxk=k+2
     
print(maxk)","0.0"
"c0df7d49-26f5-451c-b44a-1e0bca60bca5","l = list(map(int, input().split()))
m, n =0, 0
for el in l:
  if el == 0:
    break
  n+=1
print(n)","0.0"
"33eb8e68-cf75-4892-b87b-97ceeee27d04","x,y=map(int,input().split())
if x==y:
    print(""0"")
elif x*y>0:
    print(x+y)
else:
    print(x*y)
            ","0.0"
"33eb8e68-cf75-4892-b87b-97ceeee27d04","x,y=map(int,input().split())
f=x*y
if x==y:
    print(""0"")
elif f>0:
    print(x+y)
else:
    print(f)","0.0"
"3d57ecc4-72d1-43f5-ae17-2cc26c570f11","x=int(input())
s=''
while x>0:
    s=s+str(x%10)
    x=x//10
print(int(s))","0.0"
"836710cd-fa04-4afc-9ed7-2652ed8894a3","x = input()
count = {}
count = {}
for i in range(1, len(x) - 1):
	if x[i - 1] == ""A"":
		if x[i] not in count:
			count[x[i]] = 1
		else:
			count[x[i]] += 1
print(max(count, key=lambda k: count[k]))","0.0"
"ddff994a-fbde-4c58-a91b-9e3a3872e088","s = input()
a = [0] * 26
maxi = 0
for i in range(1,len(s) - 1):
    if s[i-1] == s[i+1]:
        a[ord(s[i]) - 65] += 1
for i in range(26):
    if a[i] > maxi:
        maxi = a[i]
        index = i
print(chr(index + 65))","0.0"
"26acdc8d-1ff5-439b-81bd-00672786ec6d","n = list(map(int,input().split()))
for i in n:
    if n[len(n)-1] != 0:
        n.pop()
print(sum(n))

","0.0"
"836710cd-fa04-4afc-9ed7-2652ed8894a3","s=input()
sp=[]
for i in range(len(s)-1):
    if s[i]==""A"":
        sp.append(s[i+1])
sp=sorted(sp)
maxsim=""""
maxcount=0
count=1
for i in range(len(sp)-1):
    if sp[i]!=sp[i+1]:
        count=1
    else:
        count+=1
        if maxcount <count:
            maxcount=count
            maxsim=sp[i]
print(maxsim)","0.0"
"836710cd-fa04-4afc-9ed7-2652ed8894a3","s=input()
sp=[]
for i in range(len(s)-1):
       if s[i]=='A':
              sp.append(s[i+1])
sp=sorted(sp)
count,maxcount,maxsim=1,0,''
for i in range(len(sp)-1):
       if sp[i]!=sp[i+1]:
              count=1
       else:
              count+=1
              if maxcount<count:
                     maxcount=count
                     maxsim=sp[i]
print(maxsim)","0.0"
"836710cd-fa04-4afc-9ed7-2652ed8894a3","s = input()
sp = []
maxsimv = ''
maxcount = 0
count = 1
for i in range(len(s)-1):
    if s[i] == 'A':
        sp.append(s[i+1])
sp = sorted(sp)
for i in range(len(sp)-1):
    if sp[i] != sp[i+1]:
        count = 1
    else:
        count += 1
        if maxcount < count:
            maxcount = count
            maxsimv = sp[i]
print(maxsimv)
    ","0.0"
"836710cd-fa04-4afc-9ed7-2652ed8894a3","s=input()
sp=[]
maxsimv=''
maxcount=0
count=1
for i in range(len(s)-1):
    if s[i]=='A':
        sp.append(s[i+1])
sp=sorted(sp)
for p in range(len(sp)-1):
    if sp[p]!=sp[p+1]:
        count=1
    else:
        count+=1
        if maxcount<count:
            maxcount=count
            maxsimv=sp[p]
print(maxsimv)","0.0"
"836710cd-fa04-4afc-9ed7-2652ed8894a3","st=input()
spA=[0]*26
for i in range(len(st)-1):
    if st[i]=='A':
        spA[ord(st[i+1])-65]+=1
        maxB=65+spA.index(max(spA))
print(chr(maxB))","0.0"
"836710cd-fa04-4afc-9ed7-2652ed8894a3","s=input()
sp=[0]*26
for i in range(len(s)-1):
       if s[i]=='A':
              sp[ord(s[i+1])-65]+=1
print(chr(sp.index(max(sp))+65))","0.0"
"836710cd-fa04-4afc-9ed7-2652ed8894a3","s=input()
sp=[0]*26
for i in range(len(s)-1):
    if s[i]==""A"":
        sp[ord(s[i+1])-65]+=1
maxB=65+sp.index(max(sp))
print(chr(maxB))","0.0"
"836710cd-fa04-4afc-9ed7-2652ed8894a3","s=input()
sp=[0]*26
for i in range(len(s)-1):
    if s[i]=='A':
        sp[ord(s[i+1])-65]+=1
maxB=65+sp.index(max(sp))
print(chr(maxB))","0.0"
"836710cd-fa04-4afc-9ed7-2652ed8894a3","st = input()
sp = [0]*26
for i in range(len(st)-1):
    if st[i] == 'A':
        sp[ord(st[i+1])-65]+=1
print(chr(65+sp.index(max(sp))))
        
","0.0"
"836710cd-fa04-4afc-9ed7-2652ed8894a3","st = input()
spA = [0] * 26
for i in range(len(st) - 1):
    if st[i]=='A':
        spA[ord(st[i + 1])-65] += 1
maxB = 65 + spA.index(max(spA))
print(chr(maxB))
    ","0.0"
"836710cd-fa04-4afc-9ed7-2652ed8894a3","a=input()
spa=[0]*26
for  i in range(len(a)-1):
    if a[i]=='A':
        spa[ord(a[i+1])-65]+=1
        maxB=65+spa.index(max(spa))
print(chr(maxB))
","0.0"
"836710cd-fa04-4afc-9ed7-2652ed8894a3","st=input()
spA=[0]*26
for i in range(len(st)-1):
    if st[i]=='A':
        spA[ord(st[i+1])-65]+=1
        maxB=65+spA.index(max(spA))
print(chr(maxB))
","0.0"
"836710cd-fa04-4afc-9ed7-2652ed8894a3","st=input()
spA=[0]*26
for i in range(len(st)-1):
    if st[i]=='A':
        spA[ord(st[i+1])-65]+=1
        maxB=65+spA.index(max(spA))
print(chr(maxB))
","0.0"
"836710cd-fa04-4afc-9ed7-2652ed8894a3","st = input()
spA = [0] * 26
for i in range(len(st) - 1):
    if st[i]=='A':
        spA[ord(st[i + 1])-65] += 1
maxB = 65 + spA.index(max(spA))
print(chr(maxB))
    ","0.0"
"836710cd-fa04-4afc-9ed7-2652ed8894a3","s=input()
sp=[0]*26
for i in range(len(s)-1):
       if s[i]=='A':
              sp[ord(s[i+1])-65]+=1
print(chr(sp.index(max(sp))+65))","0.0"
"836710cd-fa04-4afc-9ed7-2652ed8894a3","st = input()
d = {}
for i in range(len(st)-1):
    if st[i] == 'A':
        if st[i+1] not in d:
            d[st[i+1]] = 1
        else:
            d[st[i+1]]+=1
print(max(d,key=lambda k:d[k]))
","0.0"
"836710cd-fa04-4afc-9ed7-2652ed8894a3","st=input()
d={}
for i in range(len(st)-1):
    if st[i]=='A':
        if st[i+1] not in d:
            d[st[i+1]]=1
        else:
            d[st[i+1]]+=1
print(max(d,key=lambda k:d[k]))
","0.0"
"836710cd-fa04-4afc-9ed7-2652ed8894a3","s=input()
d={}
for i in range(len(s)-1):
       if s[i]=='A':
              if s[i+1] not in d:
                     d[s[i+1]]=1
              else:
                    d[s[i+1]]+=1
print(max(d,key=lambda k:d[k]))","0.0"
"836710cd-fa04-4afc-9ed7-2652ed8894a3","s=input()
d={}
for i in range(len(s)-1):
    if s[i]==""A"":
        if s[i+1] not in d:
            d[s[i+1]]=1
        else:
            d[s[i+1]]+=1
print(max(d,key=lambda k:d[k]))","0.0"
"ddff994a-fbde-4c58-a91b-9e3a3872e088","st = input()
d = {}
for i in range(len(st)-2):
    if st[i] == st[i+2]:
        if st[i+1] not in d:
            d[st[i+1]] = 1
        else:
            d[st[i+1]]+=1
print(max(d,key=lambda k:d[k]))
","0.0"
"836710cd-fa04-4afc-9ed7-2652ed8894a3","a=input()
d={}
for  i in range(len(a)-1):
    if a[i]=='A':
        if a[i+1] not in d:
            d[a[i+1]]=1
        else:
            d[a[i+1]]+=1
print(max(d,key=lambda k:d[k]))","0.0"
"836710cd-fa04-4afc-9ed7-2652ed8894a3","st = input()
d = {}
for i in range(len(st)-1):
    if st[i] == 'A':
        if st[i + 1] not in d:
            d[st[i + 1]] = 1
        else:
            d[st[i+1]] += 1
print(max(d, key = lambda k : d [k]))","0.0"
"836710cd-fa04-4afc-9ed7-2652ed8894a3","a=input()
d={}
for  i in range(len(a)-1):
    if a[i]=='A':
        if a[i+1] not in d:
            d[a[i+1]]=1
        else:
            d[a[i+1]]+=1
print(max(d,key=lambda k:d[k]))","0.0"
"ddff994a-fbde-4c58-a91b-9e3a3872e088","s=input()
d={}
for i in range(len(s)-2):
    if s[i]==s[i+2]:
        if s[i+1] not in d:
            d[s[i+1]]=1
        else:
            d[s[i+1]]+=1
print(max(d,key=lambda k:d[k]))
","0.0"
"ddff994a-fbde-4c58-a91b-9e3a3872e088","s=input()
d={}
for i in range(len(s)-2):
       if s[i]==s[i+2]:
              if s[i+1] not in d:
                     d[s[i+1]]=1
              else:
                    d[s[i+1]]+=1
print(max(d,key=lambda k:d[k]))","0.0"
"ddff994a-fbde-4c58-a91b-9e3a3872e088","st=input()
d={}
for i in range(len(st)-2):
    if st[i]==st[i+2]:
        if st[i+1] not in d:
            d[st[i+1]]=1
        else:
            d[st[i+1]]+=1
print(max(d,key=lambda k:d[k]))","0.0"
"ddff994a-fbde-4c58-a91b-9e3a3872e088","st = input()
d = {}
for i in range(len(st)-2):
    if st[i] == st[i+2]:
        if st[i + 1] not in d:
            d[st[i + 1]] = 1
        else:
            d[st[i+1]] += 1
print(max(d, key = lambda k : d [k]))","0.0"
"ddff994a-fbde-4c58-a91b-9e3a3872e088","st=input()
d={}
for i in range(len(st)-2):
    if st[i]==st[i+2]:
        if st[i+1] not in d:
            d[st[i+1]]=1
        else:
            d[st[i+1]]+=1
print(max(d,key=lambda k:d[k]))","0.0"
"ddff994a-fbde-4c58-a91b-9e3a3872e088","a=input()
d={}
for  i in range(len(a)-2):
    if a[i]==a[i+2]:
        if a[i+1] not in d:
            d[a[i+1]]=1
        else:
            d[a[i+1]]+=1
print(max(d,key=lambda k:d[k]))
","0.0"
"ddff994a-fbde-4c58-a91b-9e3a3872e088","a=input()
d={}
for i in range(len(a)-2):
    if a[i]==a[i+2]:
        if a[i+1] not in d:
            d[a[i+1]]=1
        else:
            d[a[i+1]]+=1
print(max(d,key=lambda k:d[k]))
    
","0.0"
"540d34fd-8182-42ac-91f4-8951c353f470","st = input()
sp = list()
k,kA,maxk = 0,0,0
st = st+'E'
for i in range(len(st)):
    if st[i] == 'E':
        if kA >= 3:
            kA = 0
            if k > maxk:
                maxk = k
        k=0
    else:
        k+=1
        if st[i] == 'A':
            kA+=1

print(maxk)
","0.0"
"ba789162-5596-4059-9f45-f6dd0f6f65e5","n=int(input())
maxx = 0
for t in range(n):
    p = input()
    a = [""A"", ""B"", ""C"", ""D"", ""E"", ""F"", ""G"", ""H"", ""I"", ""J"", ""K"", ""L"", ""M"", ""N"", ""O"", ""P"", ""Q"", ""R"", ""S"", ""T"", ""U"", ""V"", ""W"", ""X"", ""Y"", ""Z""]
    for i in a:
        if p.rfind(i) - p.find(i) > maxx and p.count(""A"") < 25:
            maxx = p.rfind(i) - p.find(i)
print(maxx)","0.0"
"ba789162-5596-4059-9f45-f6dd0f6f65e5","n=int(input())
max_s = 0
for i in range(n):
    p = input()
    if p.count('A') < 25:
        for j in range(len(p)-1):
            for q in range(j+1, len(p)):
                if p[j] == p[q]:
                    if abs(j - q) > max_s:
                        max_s = abs(j - q)
print(max_s)","0.0"
"1dfaf2a6-3a2f-4c32-b6a3-f6a752d20be4","n=int(input())
max_s = 0
for i in range(n):
    p = input()
    if p.count('G') < 25:
        for j in range(len(p)-1):
            for q in range(j+1, len(p)):
                if p[j] == p[q]:
                    if abs(j - q) > max_s:
                        max_s = abs(j - q)
print(max_s)","0.0"
"1dfaf2a6-3a2f-4c32-b6a3-f6a752d20be4","n=int(input())
maxx = 0
for t in range(n):
    p = input()
    a = [""A"", ""B"", ""C"", ""D"", ""E"", ""F"", ""G"", ""H"", ""I"", ""J"", ""K"", ""L"", ""M"", ""N"", ""O"", ""P"", ""Q"", ""R"", ""S"", ""T"", ""U"", ""V"", ""W"", ""X"", ""Y"", ""Z""]
    for i in a:
        if p.rfind(i) - p.find(i) > maxx and p.count(""G"") < 25:
            maxx = p.rfind(i) - p.find(i)
print(maxx)","0.0"
"f56de6b0-e5eb-4ffb-b0c1-1e471b7f0b35","n=int(input())
countmax=100
mx=0
pmax=[]
for i in range(n):
    p = input()
    
    if p.count('G') < countmax:
        countmax=p.count('G')
        pmax=p
          
count = {}
for i in range(1, len(pmax)):
    if pmax[i] not in count:
        count[pmax[i]] = 1
    else:
        count[pmax[i]] += 1

count=dict(sorted(count.items()))
print(max(reversed(count), key=lambda k: count[k]))","0.0"
"ba789162-5596-4059-9f45-f6dd0f6f65e5","n = int(input())
r,rmax = 0,0
for i in range(n):
    st = input()
    if st.count('A') < 25:
        for j in range(len(st)-1):
            for v in range(j+1,len(st)):
                if st[j] == st[v]:
                    r = abs(v-j)
                    if r > rmax:
                        rmax = r
print(rmax)
","0.0"
"ba789162-5596-4059-9f45-f6dd0f6f65e5","n=int(input())
mk=0
for i in range(n):
    st=input()
    if st.count('A')<25:
        for j in range(len(st)-1):
            for v in range(j+1,len(st)):
                if st[j]==st[v]:
                    if (v-j)>mk:
                        mk=(v-j)
print(mk)
","0.0"
"ba789162-5596-4059-9f45-f6dd0f6f65e5","n=int(input())
maxk=0
for i in range(n):
       st=input()
       if st.count('A')<25:
              for j in range(len(st)-1):
                     for v in range(j+1,len(st)):
                            if st[j]==st[v]:
                                   if (v-j)>maxk:
                                          maxk=v-j
print(maxk)","0.0"
"1dfaf2a6-3a2f-4c32-b6a3-f6a752d20be4","n=int(input())
maxk=0
for i in range(n):
       st=input()
       if st.count('G')<25:
              for j in range(len(st)-1):
                     for v in range(j+1,len(st)):
                            if st[j]==st[v]:
                                   if (v-j)>maxk:
                                          maxk=v-j
print(maxk)","0.0"
"1dfaf2a6-3a2f-4c32-b6a3-f6a752d20be4","n = int(input())
r,rmax = 0,0
for i in range(n):
    st = input()
    if st.count('G') < 25:
        for j in range(len(st)-1):
            for v in range(j+1,len(st)):
                if st[j] == st[v]:
                    r = abs(v-j)
                    if r > rmax:
                        rmax = r
print(rmax)
","0.0"
"1dfaf2a6-3a2f-4c32-b6a3-f6a752d20be4","n=int(input())
mk=0
for i in range(n):
    st=input()
    if st.count('G')<25:
        for j in range(len(st)-1):
            for v in range(j+1,len(st)):
                if st[j]==st[v]:
                    if (v-j)>mk:
                        mk=(v-j)
print(mk)

","0.0"
"1dfaf2a6-3a2f-4c32-b6a3-f6a752d20be4","n=int(input())
mk=0
a=['A','B','C','D','E','F','G','H','I','J','K','L','M','N','O','P','Q','R','V','W','X','Y','U','Z','S','T']
for i in range(n):
    st=input()
    if st.count('G')<25:
        for j in st:
            if (st.rfind(j))-(st.find(j))>mk:
                mk=st.rfind(j)-st.find(j)
print(mk)
","0.0"
"1dfaf2a6-3a2f-4c32-b6a3-f6a752d20be4","n=int(input())
maxk=0
a=['A','B','C','D','E','F','G','H','I','J','K','L','M','N','O','P','Q','R','V','W','X','U','Y','Z','S','T']
for i in range(n):
       st=input()
       if st.count('G')<25:
              for j in a:
                     if (st.rfind(j)-st.find(j))>maxk:
                            maxk=st.rfind(j)-st.find(j)
print(maxk)","0.0"
"ba789162-5596-4059-9f45-f6dd0f6f65e5","n=int(input())
mk=0
a=['A','B','C','D','E','F','G','H','I','J','K','L','M','N','O','P','Q','R','V','W','X','Y','U','Z','S','T']
for i in range(n):
    st=input()
    if st.count('A')<25:
        for j in st:
            if (st.rfind(j))-(st.find(j))>mk:
                mk=st.rfind(j)-st.find(j)
print(mk)
","0.0"
"f56de6b0-e5eb-4ffb-b0c1-1e471b7f0b35","n=int(input())
maxc=0
mink=10**9
for i in range(n):
       st=input()
       if st.count('G')<mink:
              mink=st.count('G')
              stmink=st


d={}

for i in range(len(stmink)-1):
       if stmink[i+1] not in d:
              d[stmink[i+1]]=1
       else:
              d[stmink[i+1]]+=1


d=dict(sorted(d.items(), reverse=True))
print(max(d,key=lambda k:d[k]))","0.0"
"f56de6b0-e5eb-4ffb-b0c1-1e471b7f0b35","n=int(input())
mk=0
nk=10**9
for i in range(n):
    st=input()
    if st.count('G')<nk:
        nk=st.count('G')
        stmin=st
d={}
for j in range(len(stmin)-1):
    if stmin[j+1] not in d:
        d[stmin[j+1]]=1
    else:
        d[stmin[j+1]]+=1
d=dict(sorted(d.items(),reverse=True))
print(max(d,key=lambda k:d[k]))

","0.0"
"f56de6b0-e5eb-4ffb-b0c1-1e471b7f0b35","n = int(input())
mink = 10**9
stmin = ''
for i in range(n):
    st = input()
    for j in range(len(st)):
        if st.count('G') < mink:
            mink = st.count('G')
            stmin = st
a = list('ABCDEFGHIJKLMNOPQRSTUVWXYZ')
maxk = 0
for j in a:
    if stmin.count(j) >= maxk:
        maxk = stmin.count(j)
        sim = j
print(sim)

","0.0"
"875ec0a5-0a8e-468b-b0f0-1b32c0337354","n = int(input())
s= 0
k = list(map(int,input().split()))
for i in range(n):
    if k[i] > 0:
        s+=1
print(s)
","0.0"
"875ec0a5-0a8e-468b-b0f0-1b32c0337354","n = int(input())
s= 0
k = list(map(int,input().split()))
for i in range(n):
    if k[i] >= 0:
        s+=1
print(s)
","0.0"
"157c7563-5b83-4f84-b184-e15788a65471","x = int(input())
k = 0
mink = 10*9
for i in range (2,x+1):
    if x%i == 0:
        k = i
        if k < mink:
            mink = k
print(mink)","0.0"
"157c7563-5b83-4f84-b184-e15788a65471","x = int(input())
k = 0
mink = 10*9
for i in range (2,x//2):
    if x%i == 0:
        k = i
        if k < mink:
            mink = k
print(mink)
","0.0"
"eb763311-8a08-4e91-a8d1-33a228a1f3f9","x=input()
sp=[]
for i in range(len(x)-1):
    if x[i]=='Z':
        sp.append(x[i+1])
v=sorted(sp)
s,smax=0,0
x=[]
c=[]
for d in range(len(v)-1):
    if v[d]==v[d+1]:
        s+=1
        x.append(d)
        if s>smax:
            msxs=s
            c.append(v[d])
    else:
        s=0
        x=[]
    
print(c[0])","0.0"
"eb763311-8a08-4e91-a8d1-33a228a1f3f9","s=input()
d={}
for i in range(len(s)-1):
    if s[i]==""Z"":
        if s[i+1] not in d:
            d[s[i+1]]=1
        else:
            d[s[i+1]]+=1
print(max(d,key=lambda k:d[k]))","0.0"
"eb763311-8a08-4e91-a8d1-33a228a1f3f9","x=input()
sp=[]
for i in range(len(x)-1):
    if x[i]=='Z':
        sp.append(x[i+1])
v=sorted(sp)
s,maxs,maxb=1,0,''
for d in range(len(v)-1):
    if v[d]==v[d+1]:
        s+=1
        if s>maxs:
            maxs=s
            maxb=v[d]
    else:
        s=1
    
print(maxb)","0.0"
"eb763311-8a08-4e91-a8d1-33a228a1f3f9","n = input()
maxk = 0
stmin = list()
for i in range(len(n)-1):
    if n[i] == 'Z':
        stmin.append(n[i+1])
a = list('ABCDEFGHIJKLMNOPQRSTUVWXYZ')
maxk = 0
for j in a:
    if stmin.count(j) > maxk:
        maxk = stmin.count(j)
        sim = j
print(sim)

","0.0"
"1c260f00-9384-4b40-8fd8-64c4ae771acb","x=input()
s,maxs=1,0
for i in range(len(x)-1):
    if x[i] in 'ABC' and x[i+1] in 'ABC' :
        if x[i]!=x[i+1]:
            s+=1
            if maxs<s:
                maxs=s
        else:
            s=1
print(maxs)
","0.0"
"eb763311-8a08-4e91-a8d1-33a228a1f3f9","st=input()
spA=[0]*26
for i in range(len(st)-1):
    if st[i]=='Z':
        spA[ord(st[i+1])-65]+=1
print(chr(spA.index(max(spA))+65))
","0.0"
"1c260f00-9384-4b40-8fd8-64c4ae771acb","st=input()
k, mk=1,0
for i in range(len(st)-1):
    if st[i]!=st[i+1]:
        k+=1
        if k>mk:
            mk=k
    else:
        k=1
print(mk)","0.0"
"1c260f00-9384-4b40-8fd8-64c4ae771acb","st=input()
k, mk=1,1
for i in range(len(st)-1):
    if st[i]!=st[i+1]:
        k+=1
        if k>mk:
            mk=k
    else:
        k=1
print(mk)","0.0"
"1c260f00-9384-4b40-8fd8-64c4ae771acb","x=input()
s,maxs=1,1
for i in range(len(x)-1):
    if x[i] in 'ABC' and x[i+1] in 'ABC':
        if x[i]!=x[i+1]:
            s+=1
            if maxs<s:
                maxs=s
        else:
            s=1
print(maxs)
","0.0"
"eb763311-8a08-4e91-a8d1-33a228a1f3f9","a=input()
sp=[]
for i in range (len(a)-1):
    if a[i]=='Z':
        sp.append(a[i+1])
f=sorted(sp)
s=''
maxb=0
b=1
for i in range (len(f)-1):
    if f[i]==f[i+1]:
        b+=1
        if b>maxb:
            maxb=b
            s=f[i]
        else:
         b=1
print(s)
 ","0.0"
"eb763311-8a08-4e91-a8d1-33a228a1f3f9","a=input()
sp=[]
for i in range (len(a)-1):
    if a[i]=='Z':
        sp.append(a[i+1])
f=sorted(sp)
s=''
maxb=0
b=1
for i in range (len(f)-1):
    if f[i]==f[i+1]:
        b+=1
        if b>maxb:
            maxb=b
            s=f[i]
    else:
        b=1
print(s)
 
","0.0"
"1c260f00-9384-4b40-8fd8-64c4ae771acb","n = input()
k,maxk = 1,1
for i in range(len(n)-1):
    if n[i] != n[i+1]:
        k+=1
        if maxk < k:
            maxk = k
    else:
        k = 1
print(maxk)
","0.0"
"982ed021-8351-4afe-9d79-111527937b47","st=input()
k, mk=0,0
for i in range(len(st)-1):
    if (st[i]!=('A')and st[i]!=('O')) and (st[i+1]==('A') or st[i+1]==('O')):
        k+=1
        if k>mk:
            mk=k
    else:
        if (st[i+1]!=('A')and st[i+1]!=('O')) and (st[i+2]==('A') or st[i+2]==('O')):
            k+=0
        else:
            k=0
print(mk)
            
            
","0.0"
"982ed021-8351-4afe-9d79-111527937b47","st = input()
k,maxk = 0,0
i = 0
while i < len(st):
    if (st[i] == 'C' or st[i] == 'D' or st[i] == 'F') and (st[i+1] == 'A' or st[i+1] == 'O'):
        k+=1
        i+=2
        if maxk < k:
            maxk = k
    else:
        k = 0
        i+=1
print(maxk)
","0.0"
"982ed021-8351-4afe-9d79-111527937b47","x=input()
k,mk=0,0
for i in range(len(x)-1):
    if (x[i]!='A' and [i]!='O') and  (x[i+1]=='O' or x[i+1]=='A'):
        k+=1
        if k>mk:
            mk=k
    else:
        if (x[i+1]!='A' and [i+1]!='O') and  (x[i+2]=='O' or x[i+2]=='A'):
            k+=0
        else:
            k=0
print(mk)

","0.0"
"1c260f00-9384-4b40-8fd8-64c4ae771acb","a=input()
L=1
maxL=0
for  i in range(len(a)-1):
    if a[i]!=a[i+1]:
         L+=1
         if L>maxL:
            maxL=L
    else:        
        L=1
print(maxL)
","0.0"
"1c260f00-9384-4b40-8fd8-64c4ae771acb","a=input()
L=1
maxL=1
for  i in range(len(a)-1):
    if a[i]!=a[i+1]:
         L+=1
         if L>maxL:
            maxL=L
    else:        
        L=1
print(maxL)
","0.0"
"931dc9d6-3183-4d35-bee6-95b210e0268a","a=int(input())
sp=[]
for i in range(1,a+1):
    if a%i==0:
        sp.append(i)
print(*sp)","0.0"
"931dc9d6-3183-4d35-bee6-95b210e0268a","a=int(input())
sp=[]
for i in range(1,a+1):
    if a%i==0:
        sp.append(i)
print(*sp)","0.0"
"931dc9d6-3183-4d35-bee6-95b210e0268a","a=int(input())
sp=[]
for i in range(1,int(a**0.5)):
    if a%i==0:
        sp.append(i)
        sp.append(a//i)
if a**0.5==int(a**0.5):
    sp.append(int(a**0.5))
sp=sorted(sp)
print(*sp)","0.0"
"931dc9d6-3183-4d35-bee6-95b210e0268a","a=int(input())
sp=[]
for i in range(1,int(a**0.5)):
    if a%i==0:
        sp.append(i)
        sp.append(a//i)
if a**0.5==int(a**0.5):
    sp.sppend(int(a**0.5))
sp=sorted(sp)
print(*sp)","0.0"
"c479ed62-3a40-4f93-89c8-b674826ab144","a=int(input())
sp=[]
for i in range(1,int(a**0.5)+1):
    if a%i==0:
        sp.append(i)
        if i!=a//i:
            sp.append(a//i)
sp=sorted(sp)
print(len(sp))","0.0"
"c479ed62-3a40-4f93-89c8-b674826ab144","a=int(input())
sp=[]
for i in range(1,int(a**0.5)+1):
    if a%i==0:
        sp.append(i)
        if i!=a//i:
            sp.append(a//i)
print(len(sp))
","0.0"
"a93745c4-cdf2-422d-86e3-46fc616f4f80","a=int(input())
sp=[]
for i in range(1,int(a**0.5)+1):
    if a%i==0:
        if i%3==0:
            sp.append(i)
        if i!=a//i:
            if a//i%3==0:
                sp.append(a//i)
sp=sorted(sp)
print(len(sp))
print(*sp)
","0.0"
"a93745c4-cdf2-422d-86e3-46fc616f4f80","a=int(input())
sp=[]
for i in range(1,int(a**0.5)+1):
    if a%i==0:
        if i%3==0:
            sp.append(i)
        if i!=a//i:
            if a//i%3==0:
                sp.append(a//i)
sp=sorted(sp)
print(len(sp))
print(*sp)

","0.0"
"132b4d29-b1fe-4591-be7e-9e4e150e35b6","a=int(input())
sp=[]
for i in range(1,int(a**0.5)+1):
    if a%i==0:
        sp.append(i)
        if i!=a//i:
            sp.append(a//i)
if len(sp)==2:
    print('YES')
else:
    print('NO')","0.0"
"a93745c4-cdf2-422d-86e3-46fc616f4f80","a=int(input())
sp=[]
sp1=[]
for i in range(1,int(a**0.5)+1):
    if a%i==0:
        sp.append(i)
        if i!=a//i:
            sp.append(a//i)
for i in sp:
    if i%3==0:
        sp1.append(i)

sp1=sorted(sp1)
print(len(sp1))        
print(*sp1)


","0.0"
"132b4d29-b1fe-4591-be7e-9e4e150e35b6","a=int(input())
sp=[]
for i in range(1,int(a**0.5)+1):
    if a%i==0:
        sp.append(i)
        if i!=a//i:
            sp.append(a//i)
sp=sorted(sp)
if len(sp)==2:
    print('YES')
else:
    print('NO')
","0.0"
"1d7d28c9-4d1b-4d70-b2e1-b0393775ab4a","import re
s = input()
k = s.count('Ð') + s.count('Ð') + s.count('Ð') + s.count('Ð') + s.count('Ð£') + s.count('Ð®') + s.count('Ð¯') + s.count('Ð«') + s.count('Ð') + s.count('Ð­')
d = int("""".join(re.findall('\d+', s)))
print(d % k)","0.0"
"0e835939-e24c-4e99-b563-d8be842cec4d","Z=0
S=0
for i in input():
    if 64<ord(i)<91:
        Z+=1
    if 96<ord(i)<123:
        S+=1
if Z!=0 and S!=0:
    if S%Z==0:
        print(int(S/Z))
    else:
        print(S/Z)
else:
    print(-1)","0.0"
"1d7d28c9-4d1b-4d70-b2e1-b0393775ab4a","ch=''
b=0
B = [""Ð"", ""Ð"", ""Ð"", ""Ð"", ""Ð"", ""Ð£"", ""Ð«"", ""Ð­"", ""Ð®"", ""Ð¯""]
for i in input():
    if 47<ord(i)<58:
        ch+=i
    if i in B:
        b+=1
print(int(ch)%b)","0.0"
"48521f16-2133-47f1-b071-0706a6062411","a=input().split()
F=""""
for i in range(len(a)):
    S=a[i]
    for x in range(1):
        if S[0]==""Ð°"":
            F += 'Ð¼ÑÑ-' + S.replace(S[0], 'Ñ', 1)+"" ""
        else:
            F += 'Ð¼ÑÑ-'+S.replace(S[0], chr(ord(S[0])-1),1)+"" ""
print(F)","0.0"
"c0df7d49-26f5-451c-b44a-1e0bca60bca5","chisla=input().split()
count=0
for i in range(len(chisla)):
    if int(chisla[i])!=0:
        count+=1
    else:
        break
print(count)","0.0"
"33eb8e68-cf75-4892-b87b-97ceeee27d04","a,b=map(int,input().split())
if a==b:
    print(a-b)
elif (a>0 and b<0) or (b>0 and a<0):
    print(a*b)
else:
    print(a+b)
","0.0"
"0e835939-e24c-4e99-b563-d8be842cec4d","a=0
b=0
for i in input():
    if 64<ord(i)<91:
        a+=1
    if 96<ord(i)<123:
        b+=1
if a!=0 and b!=0:
    if b%a==0:
        print(int(b/a))
    else:
        print(b/a)
else:
    print(-1)
","0.0"
"1d7d28c9-4d1b-4d70-b2e1-b0393775ab4a","a=''
b=0
c=['Ð', 'Ð', 'Ð', 'Ð', 'Ð', 'Ð£', 'Ð«', 'Ð­', 'Ð®', 'Ð¯']
for i in input():
    if 47<ord(i)<58:
        a+=i
    if i in c:
        b+=1
print(int(a)%b)","0.0"
"1d7d28c9-4d1b-4d70-b2e1-b0393775ab4a","x=''
y=0
a=['Ð','Ð£','Ð','Ð¯','Ð«','Ð­','Ð','Ð','Ð','Ð']
for i in input():
    if 47<ord(i)<58:
        x+=i
    if i in a:
        y+=1
print(int(x)%y)","0.0"
"4e5b21c0-e86f-4eac-82b6-1a0d00ae4199","list=input().split()
n=list.count(max(list))
print(n)","0.0"
"4e5b21c0-e86f-4eac-82b6-1a0d00ae4199","n=input()
n=n[0:n.find('0')]
print(n.count(max(n)))","0.0"
"db8534b0-ffa9-4c1b-9d86-4797814b3074","print(len(input().split()))","0.0"
"3ae56164-1134-42f9-8fd7-204a82b81e52","a=int (input())
sp1=[]

def Pr(np):
    primeD=[]
    k=2
    while np>1:
        while np%k==0:
            primeD.append(k)
            np=np//k
        k+=1
    return primeD
    
def Kd(sp):
    p=1
    k=1
    for ii in range(len(sp)-1):
        if sp[ii+1]!=sp[ii]:
           p=p*(k+1)
           k=1
        else:
            k+=1
    return p

for i in range(2,10000000000):
    sp1=Pr(i)
    sp1.reverse()
    sp1.append(1)
    
    if Kd(sp1)==a:
        print(i, sp1[0])
        break

","0.0"
"3ae56164-1134-42f9-8fd7-204a82b81e52","a=int(input())
def firstPrimes( n ):
  primes = [2]
  k = 3
  while len(primes) < n:
    divs = [int(k % d == 0)  for d in primes]
    if sum(divs) == 0:
      primes.append( k )
    k += 1
  return primes

def factorize(x):
  primeDels = []
  k = 2
  while x > 1:
    while x % k == 0:
      primeDels.append(k)
      x /= k
    k += 1
  return primeDels

primeFactors = factorize(a)
primeFactors.reverse()
primes = firstPrimes(len(primeFactors))
N = 1
for i in range(len(primeFactors)):
  N *= primes[i]**(primeFactors[i]-1)

k3 = primeFactors[0]
lastPrime = primes[-1]
while 2**(2*k3) < lastPrime**2:
  N = N // (lastPrime**2) * 2**(2*k3)
  k3 *= 3
  del primes[-1]
  lastPrime = primes[-1]

if N < 2**31:
  print( N, primes[-1] )
else:
  print('NO')

","0.0"
"3ae56164-1134-42f9-8fd7-204a82b81e52","a=int(input())
def firstPrimes( n ):
  primes = [2]
  k = 3
  while len(primes) < n:
    divs = [int(k % d == 0)  for d in primes]
    if sum(divs) == 0:
      primes.append( k )
    k += 1
  return primes

def factorize(x):
  primeDels = []
  k = 2
  while x > 1:
    while x % k == 0:
      primeDels.append(k)
      x /= k
    k += 1
  return primeDels

primeFactors = factorize(a)
primeFactors.reverse()
primes = firstPrimes(len(primeFactors))
N = 1
for i in range(len(primeFactors)):
  N *= primes[i]**(primeFactors[i]-1)

k3 = primeFactors[0]
lastPrime = primes[-1]
while 2**(2*k3) < lastPrime**2:
  N = N // (lastPrime**2) * 2**(2*k3)
  k3 *= 3
  del primes[-1]
  lastPrime = primes[-1]

if N < 2**31:
  print( N, primes[-1] )
else:
  print('NO')","0.0"
"9ad8e0ac-34e6-45a9-8f4f-0e8046aec803","a = int(input())
b = int(input())
spd= []
delmax = 0
maxsim = ''
spdmax = []
def KolDel(x):
    sp =[]
    for t in range(1,int(x**0.5)+1):
        if x % t == 0:
            sp.append(t)
            if x//t != t:
                sp.append(x//t)
        sp.sort()
        sp.reverse()
    return sp
for i in range(a,b+1):
    spd = KolDel(i)
    if len(spd) >= delmax:
        delmax = len(spd)
        spdmax = spd
print(delmax,spdmax[0],spdmax[1])
","0.0"
"9ad8e0ac-34e6-45a9-8f4f-0e8046aec803","a=int(input())
b=int(input())
def kd(x):
    sp=[]
    for t in range(1,int(x**0.5)+1):
        if x%t==0:
            sp.append(t)
            if x//t!=t:
                sp.append(x//t)
    sp.sort()
    sp.reverse()
    return(sp)
spd=[]
spdm=[]
dm=0
for i in range(a,b+1):
    spd=kd(i)
    if len(spd)>=dm:
        dm=len(spd)
        spdm=spd
print(dm,spdm[0],spdm[1])","0.0"
"9ad8e0ac-34e6-45a9-8f4f-0e8046aec803","a = int(input())
b = int(input())
def Koldel(x):
    sp = []
    for t in range(1, int(x**0.5)+1):
        if x%t == 0:
            sp.append(t)
            if x//t!=t:
                sp.append(x//t)
    sp.sort()
    sp.reverse()
    return sp
spd = []
dm = 0
spdmax = []
for i in range(a, b+1):
    spd = Koldel(i)
    if len(spd)>=dm:
        dm = len(spd)
        spdmax = spd
print(dm, spdmax[0], spdmax[1])
    ","0.0"
"9ad8e0ac-34e6-45a9-8f4f-0e8046aec803","a=int(input())
b=int(input())

def koldel(x):
    sp=[]
    for t in range(1,int(x**0.5)+1):
        if x%t==0:
            sp.append(t)
            if t!=x//t:
                sp.append(x//t)
    sp.sort()
    sp.reverse()
    return sp
dm=0   
spdmax=[]
spd=[]

for i in range(a,b+1):
    spd=koldel(i)
    if len(spd)>=dm:
        dm=len(spd)
        spdmax=spd
        
print(dm,spdmax[0],spdmax[1])

    
    

","0.0"
"ec3cfb4d-5f50-4fa0-8e53-686d10f6c0b2","a,b=map(int,input().split())

def koldel(x):
    sp=[]
    for t in range(1,int(x**0.5)+1):
        if x%t==0:
            sp.append(t)
            if t!=x//t:
                sp.append(x//t)
    sp.sort()
    sp.reverse()
    return sp
dm=0   
spdmax=[]
spd=[]
pn=0
for i in range(a,b+1):
    spd=koldel(i)
    if len(spd)%2!=0:
        pn+=1
        print(pn,i,len(spd),int(i**0.5))

","0.0"
"ec3cfb4d-5f50-4fa0-8e53-686d10f6c0b2","a,b=map(int,input().split())
def kd(x):
    sp=[]
    for t in range(1,int(x**0.5)+1):
        if x%t==0:
            sp.append(t)
            if x//t!=t:
                sp.append(x//t)
    sp.sort()
    sp.reverse()
    return(sp)
spd=[]
spdm=[]
dm=0
pn=1
for i in range(a,b+1):
   spd=kd(i)
   if len(spd)%2!=0:
       print(pn,i,len(spd),int(i**0.5))
       pn+=1
","0.0"
"ec3cfb4d-5f50-4fa0-8e53-686d10f6c0b2","a, b = map(int, input().split())
def Koldel(x):
    sp = []
    for t in range(1, int(x**0.5)+1):
        if x%t == 0:
            sp.append(t)
            if x//t!=t:
                sp.append(x//t)
    sp.sort()
    sp.reverse()
    return sp
spd = []
pn = 1
dm = 0
spdmax = []
for i in range(a, b+1):
    spd = Koldel(i)
    if len(spd) % 2 != 0:
        print(pn, i,  len(spd), int(i**0.5))
        pn += 1

    ","0.0"
"ec3cfb4d-5f50-4fa0-8e53-686d10f6c0b2","a,b = map(int, input().split())
spd= []
k = 0
spdmax = []
def KolDel(x):
    sp =[]
    for t in range(1,int(x**0.5)+1):
        if x % t == 0:
            sp.append(t)
            if x//t != t:
                sp.append(x//t)
        sp.sort()
        sp.reverse()
    return sp
for i in range(a,b+1):
    spd = KolDel(i)
    if len(spd)%2 != 0:
        k+=1
        print(k,i,len(spd),int(i**0.5))

","0.0"
"ec3cfb4d-5f50-4fa0-8e53-686d10f6c0b2","a,b = map(int, input().split())
spd= []
k = 0
spdmax = []
def KolDel(x):
    sp =[]
    for t in range(1,int(x**0.5)+1):
        if x % t == 0:
            sp.append(t)
            if x//t != t:
                sp.append(x//t)
        sp.sort()
        sp.reverse()
    return sp
for i in range(a,b+1):
    spd = KolDel(i)
    if len(spd)%2 != 0:
        k+=1
        print(k,i,len(spd),int(i**0.5))

","0.0"
"ec3cfb4d-5f50-4fa0-8e53-686d10f6c0b2","a,b=map(int,input().split())
def kd(x):
    sp=[]
    for t in range(1,int(x**0.5)+1):
        if x%t==0:
            sp.append(t)
            if x//t!=t:
                sp.append(x//t)
    sp.sort()
    sp.reverse()
    return(sp)
spd=[]
spdm=[]
dm=0
pn=1
for i in range(a,b+1):
   spd=kd(i)
   if len(spd)%2!=0:
       print(pn,i,len(spd),int(i**0.5))
       pn+=1","0.0"
"ec3cfb4d-5f50-4fa0-8e53-686d10f6c0b2","a, b = map(int, input().split())
def Koldel(x):
    sp = []
    for t in range(1, int(x**0.5)+1):
        if x%t == 0:
            sp.append(t)
            if x//t!=t:
                sp.append(x//t)
    sp.sort()
    sp.reverse()
    return sp
spd = []
pn = 1
dm = 0
spdmax = []
for i in range(a, b+1):
    spd = Koldel(i)
    if len(spd) % 2 != 0:
        print(pn, i,  len(spd), int(i**0.5))
        pn += 1

    ","0.0"
"ec3cfb4d-5f50-4fa0-8e53-686d10f6c0b2","a,b = map(int, input().split())
spd= []
k = 0
spdmax = []
def KolDel(x):
    sp =[]
    for t in range(1,int(x**0.5)+1):
        if x % t == 0:
            sp.append(t)
            if x//t != t:
                sp.append(x//t)
        sp.sort()
        sp.reverse()
    return sp
for i in range(a,b+1):
    spd = KolDel(i)
    if len(spd)%2 != 0:
        k+=1
        print(k,i,len(spd),int(i**0.5))

","0.0"
"ec3cfb4d-5f50-4fa0-8e53-686d10f6c0b2","a,b=map(int,input().split())
def kd(x):
    sp=[]
    for t in range(1,int(x**0.5)+1):
        if x%t==0:
            sp.append(t)
            if x//t!=t:
                sp.append(x//t)
    sp.sort()
    sp.reverse()
    return(sp)
spd=[]
spdm=[]
dm=0
pn=1
for i in range(a,b+1):
   spd=kd(i)
   if len(spd)%2!=0:
       print(pn,i,len(spd),int(i**0.5))
       pn+=1","0.0"
"ec3cfb4d-5f50-4fa0-8e53-686d10f6c0b2","a, b = map(int, input().split())
def Koldel(x):
    sp = []
    for t in range(1, int(x**0.5)+1):
        if x%t == 0:
            sp.append(t)
            if x//t!=t:
                sp.append(x//t)
    sp.sort()
    sp.reverse()
    return sp
spd = []
pn = 1
dm = 0
spdmax = []
for i in range(a, b+1):
    spd = Koldel(i)
    if len(spd) % 2 != 0:
        print(pn, i,  len(spd), int(i**0.5))
        pn += 1

    ","0.0"
"ec3cfb4d-5f50-4fa0-8e53-686d10f6c0b2","a,b = map(int, input().split())
spd= []
k = 0
spdmax = []
def KolDel(x):
    sp =[]
    for t in range(1,int(x**0.5)+1):
        if x % t == 0:
            sp.append(t)
            if x//t != t:
                sp.append(x//t)
        sp.sort()
        sp.reverse()
    return sp
for i in range(a,b+1):
    spd = KolDel(i)
    if len(spd)%2 != 0:
        k+=1
        print(k,i,len(spd),int(i**0.5))

","0.0"
"ec3cfb4d-5f50-4fa0-8e53-686d10f6c0b2","a,b=map(int,input().split())
def kd(x):
    sp=[]
    for t in range(1,int(x**0.5)+1):
        if x%t==0:
            sp.append(t)
            if x//t!=t:
                sp.append(x//t)
    sp.sort()
    sp.reverse()
    return(sp)
spd=[]
spdm=[]
dm=0
pn=1
for i in range(a,b+1):
   spd=kd(i)
   if len(spd)%2!=0:
       print(pn,i,len(spd),int(i**0.5))
       pn+=1","0.0"
"ec3cfb4d-5f50-4fa0-8e53-686d10f6c0b2","a, b = map(int, input().split())
def Koldel(x):
    sp = []
    for t in range(1, int(x**0.5)+1):
        if x%t == 0:
            sp.append(t)
            if x//t!=t:
                sp.append(x//t)
    sp.sort()
    sp.reverse()
    return sp
spd = []
pn = 1
dm = 0
spdmax = []
for i in range(a, b+1):
    spd = Koldel(i)
    if len(spd) % 2 != 0:
        print(pn, i,  len(spd), int(i**0.5))
        pn += 1

    ","0.0"
"ec3cfb4d-5f50-4fa0-8e53-686d10f6c0b2","a,b = map(int, input().split())
spd= []
k = 0
spdmax = []
def KolDel(x):
    sp =[]
    for t in range(1,int(x**0.5)+1):
        if x % t == 0:
            sp.append(t)
            if x//t != t:
                sp.append(x//t)
        sp.sort()
        sp.reverse()
    return sp
for i in range(a,b+1):
    spd = KolDel(i)
    if len(spd)%2 != 0:
        k+=1
        print(k,i,len(spd),int(i**0.5))

","0.0"
"ec3cfb4d-5f50-4fa0-8e53-686d10f6c0b2","a,b = map(int, input().split())
spd= []
k = 0
spdmax = []
def KolDel(x):
    sp =[]
    for t in range(1,int(x**0.5)+1):
        if x % t == 0:
            sp.append(t)
            if x//t != t:
                sp.append(x//t)
        sp.sort()
        sp.reverse()
    return sp
for i in range(a,b+1):
    spd = KolDel(i)
    if len(spd)%2 != 0:
        k+=1
        print(k,i,len(spd),int(i**0.5))

","0.0"
"ec3cfb4d-5f50-4fa0-8e53-686d10f6c0b2","a, b = map(int, input().split())
def Koldel(x):
    sp = []
    for t in range(1, int(x**0.5)+1):
        if x%t == 0:
            sp.append(t)
            if x//t!=t:
                sp.append(x//t)
    sp.sort()
    sp.reverse()
    return sp
spd = []
pn = 1
dm = 0
spdmax = []
for i in range(a, b+1):
    spd = Koldel(i)
    if len(spd) % 2 != 0:
        print(pn, i,  len(spd), int(i**0.5))
        pn += 1

    ","0.0"
"ec3cfb4d-5f50-4fa0-8e53-686d10f6c0b2","a, b = map(int, input().split())
def Koldel(x):
    sp = []
    for t in range(1, int(x**0.5)+1):
        if x%t == 0:
            sp.append(t)
            if x//t!=t:
                sp.append(x//t)
    sp.sort()
    sp.reverse()
    return sp
spd = []
pn = 1
dm = 0
spdmax = []
for i in range(a, b+1):
    spd = Koldel(i)
    if i**0.5==int(i**0.5):
        spd = Koldel(i)
        print(pn, i,  len(spd), int(i**0.5))
        pn += 1

    


    ","0.0"
"ec3cfb4d-5f50-4fa0-8e53-686d10f6c0b2","a,b=map(int,input().split())
def kd(x):
    sp=[]
    for t in range(1,int(x**0.5)+1):
        if x%t==0:
            sp.append(t)
            if x//t!=t:
                sp.append(x//t)
    sp.sort()
    sp.reverse()
    return(sp)
spd=[]
spdm=[]
dm=0
pn=1
for i in range(a,b+1):
   if i**0.5==int(i**0.5):
       spd=kd(i)
       print(pn,i,len(spd),int(i**0.5))
       pn+=1","0.0"
"ec3cfb4d-5f50-4fa0-8e53-686d10f6c0b2","a,b = map(int, input().split())
spd= []
k = 0
spdmax = []
def KolDel(x):
    sp =[]
    for t in range(1,int(x**0.5)+1):
        if x % t == 0:
            sp.append(t)
            if x//t != t:
                sp.append(x//t)
        sp.sort()
        sp.reverse()
    return sp
for i in range(a,b+1):
    if i**0.5 == int(i**0.5):
        spd = KolDel(i)
        k+=1
        print(k,i,len(spd),int(i**0.5))

","0.0"
"ec3cfb4d-5f50-4fa0-8e53-686d10f6c0b2","a, b = map(int, input().split())
def Koldel(x):
    sp = []
    for t in range(1, int(x**0.5)+1):
        if x%t == 0:
            sp.append(t)
            if x//t!=t:
                sp.append(x//t)
    sp.sort()
    sp.reverse()
    return sp
spd = []
pn = 1
dm = 0
spdmax = []
for i in range(a, b+1):
    if i**0.5==int(i**0.5):
        spd = Koldel(i)
        print(pn, i,  len(spd), int(i**0.5))
        pn += 1



    ","0.0"
"ec3cfb4d-5f50-4fa0-8e53-686d10f6c0b2","a,b = map(int, input().split())
spd= []
k = 0
spdmax = []
def KolDel(x):
    sp =[]
    for t in range(1,int(x**0.5)+1):
        if x % t == 0:
            sp.append(t)
            if x//t != t:
                sp.append(x//t)
        sp.sort()
        sp.reverse()
    return sp
for i in range(a,b+1):
    if i**0.5 == int(i**0.5):
        spd = KolDel(i)
        k+=1
        print(k,i,len(spd),int(i**0.5))

","0.0"
"ec3cfb4d-5f50-4fa0-8e53-686d10f6c0b2","a,b=map(int,input().split())
def kd(x):
    sp=[]
    for t in range(1,int(x**0.5)+1):
        if x%t==0:
            sp.append(t)
            if x//t!=t:
                sp.append(x//t)
    sp.sort()
    sp.reverse()
    return(sp)
spd=[]
spdm=[]
dm=0
pn=1
for i in range(a,b+1):
   if i**0.5==int(i**0.5):
       spd=kd(i)
       print(pn,i,len(spd),int(i**0.5))
       pn+=1","0.0"
"ec3cfb4d-5f50-4fa0-8e53-686d10f6c0b2","a, b = map(int, input().split())
def Koldel(x):
    sp = []
    for t in range(1, int(x**0.5)+1):
        if x%t == 0:
            sp.append(t)
            if x//t!=t:
                sp.append(x//t)
    sp.sort()
    sp.reverse()
    return sp
spd = []
pn = 1
dm = 0
spdmax = []
for i in range(a, b+1):
    if i**0.5==int(i**0.5):
        spd = Koldel(i)
        print(pn, i,  len(spd), int(i**0.5))
        pn += 1



    ","0.0"
"ec3cfb4d-5f50-4fa0-8e53-686d10f6c0b2","a,b=map(int,input().split())

def koldel(x):
    sp=[]
    for t in range(1,int(x**0.5)+1):
        if x%t==0:
            sp.append(t)
            if t!=x//t:
                sp.append(x//t)
    sp.sort()
    sp.reverse()
    return sp
dm=0   
spdmax=[]
spd=[]
pn=0
        
for i in range(a,b+1):
    if i**0.5==int(i**0.5):
        spd=koldel(i)
        pn+=1
        print(pn,i,len(spd),int(i**0.5))","0.0"
"75410156-cdea-4efc-a0d6-91e02bf38e32","a=int(input())
b=int(input())
def kd(x):
    sp=[]
    for t in range(1,int(x**0.5)+1):
        if x%t==0:
            sp.append(t)
            if x//t!=t:
                sp.append(x//t)
    sp.sort()
    sp.reverse()
    return(sp)
spd=[]
spdm=[]
dm=0
pn=1
for i in range(a,b+1):
   if len(kd(i))==4:
       spd=kd(i)
       spd.reverse()
       print(*spd)
","0.0"
"75410156-cdea-4efc-a0d6-91e02bf38e32","a = int(input())
b = int(input())
spd= []
delmax = 0
maxsim = ''
spdmax = []
def KolDel(x):
    sp =[]
    for t in range(1,int(x**0.5)+1):
        if x % t == 0:
            sp.append(t)
            if x//t != t:
                sp.append(x//t)
        sp.sort()
    return sp
for i in range(a,b+1):
    spd = KolDel(i)
    if len(spd) == 4:
        print(*spd)
","0.0"
"75410156-cdea-4efc-a0d6-91e02bf38e32","a=int(input())
b=int(input())

def koldel(x):
    sp=[]
    for t in range(1,int(x**0.5)+1):
        if x%t==0:
            sp.append(t)
            if t!=x//t:
                sp.append(x//t)
    sp.sort()
    sp.reverse()
    return sp
dm=0   
spdmax=[]
spd=[]
pn=0
        
for i in range(a,b+1):
    spd=koldel(i)
    if len(spd)==4:
        spd.reverse()
        print(*spd)","0.0"
"75410156-cdea-4efc-a0d6-91e02bf38e32","a=int(input())
b=int(input())

def koldel(x):
    sp=[]
    for t in range(1,int(x**0.5)+1):
        if x%t==0:
            sp.append(t)
            if t!=x//t:
                sp.append(x//t)
    sp.sort()
    return sp
dm=0   
spdmax=[]
spd=[]
pn=0
        
for i in range(a,b+1):
    spd=koldel(i)
    if len(spd)==4:
        print(*spd)","0.0"
"75410156-cdea-4efc-a0d6-91e02bf38e32","a=int(input())
b=int(input())

def koldel(x):
    sp=[]
    for t in range(1,int(x**0.5)+1):
        if x%t==0:
            sp.append(t)
            if t!=x//t:
                sp.append(x//t)
    sp.sort()
    return sp
dm=0   
spdmax=[]
spd=[]
pn=0
        
for i in range(a,b+1):
    spd=koldel(i)
    if len(spd)==4:
        pn+=1
        print(*spd)
if pn<=0:
    print(""0"")","0.0"
"75410156-cdea-4efc-a0d6-91e02bf38e32","a = int(input())
b = int(input())
spd= []
k = 0
delmax = 0
maxsim = ''
spdmax = []
def KolDel(x):
    sp =[]
    for t in range(1,int(x**0.5)+1):
        if x % t == 0:
            sp.append(t)
            if x//t != t:
                sp.append(x//t)
        sp.sort()
    return sp
for i in range(a,b+1):
    spd = KolDel(i)
    if len(spd) == 4:
        k+=1
        print(*spd)
if k == 0:
    print(0)


","0.0"
"75410156-cdea-4efc-a0d6-91e02bf38e32","a=int(input())
b=int(input())
def kd(x):
    sp=[]
    for t in range(1,int(x**0.5)+1):
        if x%t==0:
            sp.append(t)
            if x//t!=t:
                sp.append(x//t)
    sp.sort()
    sp.reverse()
    return(sp)
spd=[]
spdm=[]
dm=0
pn=0
for i in range(a,b+1):
    spd=kd(i)
    spd.reverse()
    if len(spd)==4:
       pn+=1
       print(*spd)
if pn==0:
    print(0)","0.0"
"75410156-cdea-4efc-a0d6-91e02bf38e32","a=int(input())
b=int(input())
def kd(x):
    sp=[]
    for t in range(1, int(x**0.5)+1):
        if x%t==0:
            sp.append(t)
            if x//t!=t:
                sp.append(x//t)
    sp.sort()
    sp.reverse()
    return(sp)
spd=[]
spdm=[]
dm=0
pn=0
for i in range(a,b+1):
    spd=kd(i)
    spd.reverse()
    if len(spd)==4:
        pn+=1
        print(*spd)
if pn==0:
    print('0')","0.0"
"75410156-cdea-4efc-a0d6-91e02bf38e32","a = int(input())
b = int(input())
def Koldel(x):
    sp = []
    for t in range(1, int(x**0.5)+1):
        if x%t == 0:
            sp.append(t)
            if x//t!=t:
                sp.append(x//t)
    sp.sort()
    sp.reverse()
    return sp
spd = []
pn = 1
dm = 0
spdmax = []
for i in range(a, b+1):
    spd = Koldel(i)
    spd.reverse()
    if len(spd) == 4:
        pn += 1
        print(*spd)
if pn == 1:
    print(""0"")","0.0"
"0df7e1f2-c1c4-41f3-9904-a9e4495a5bfc","a=int(input())
b=int(input())
def kd(x):
    sp=[]
    for t in range(1,int(x**0.5)+1):
        if x%t==0:
            sp.append(t)
            if x//t!=t:
                sp.append(x//t)
    sp.sort()
    sp.reverse()
    return(sp)
spd=[]
spdm=[]
dm=0
pn=0
k=0
for i in range(a,b+1):
    spd=kd(i)
    k=0
    spk=[]
    for j in spd:
        if j>=10 and j<100:
            k+=1
            spk.append(j)
    if k==30:
        print(i,spk[-1],spk[0])
       
       
    

","0.0"
"0df7e1f2-c1c4-41f3-9904-a9e4495a5bfc","a=int(input())
b=int(input())
def kd(x):
    sp=[]
    for t in range(1, int(x**0.5)+1):
        if x%t==0:
            sp.append(t)
            if x//t!=t:
                sp.append(x//t)
    sp.sort()
    sp.reverse()
    return(sp)
spd=[]
spdm=[]
dm=0
for i in range(a,b+1):
    spd=kd(i)
    k=0
    spk=[]
    for j in spd:
        if j>=10 and j<=99:
            k+=1
            spk.append(j)
    if k==30:
        print(i, spk[-1], spk[0])
    

","0.0"
"0df7e1f2-c1c4-41f3-9904-a9e4495a5bfc","a=int(input())
b=int(input())

def kd(x):
    sp=[]
    for t in range(1,int(x**0.5)+1):
        if x%t==0:
            sp.append(t)
            if t!=x//t:
                sp.append(x//t)
    sp.sort()
    return sp
dm=0   
spdmax=[]
spd=[]
pn=0
spf=[]
k=0
for i in range(a,b+1):
    spf=kd(i)
    k=0
    spd=[]
    for o in spf:
        if 9<o and  o<100:
            k+=1
            spd.append(o)
    if k==30:
        print(i,spd[0],spd[-1])
","0.0"
"0df7e1f2-c1c4-41f3-9904-a9e4495a5bfc","a = int(input())
b = int(input())
def Koldel(x):
    sp = []
    for t in range(1, int(x**0.5)+1):
        if x%t == 0:
            sp.append(t)
            if x//t!=t:
                sp.append(x//t)
    sp.sort()
    sp.reverse()
    return sp
spd = []
pn = 1
dm = 0
spdmax = []

for i in range(a, b+1):
    spd = Koldel(i)
    k = 0
    spk = []
    for j in spd:
        if j >= 10 and j < 100:
            k+=1
            spk.append(j)
    if k == 30:
        print(i, spk[-1], spk[0])","0.0"
"5986f14f-59c5-428e-84aa-553175c8bdb9","a, b = map(int, input().split())
n = int(input())
if n * 9 <= a * b:
    print('NO')
    print(0)
else:
    print('YES')
    print(n - a * b // 9) ","0.0"
"43690a23-0ff2-4f9b-8410-ec7917ae05e3","n = int(input())
a = list(map(int, input().split())) 
print(sum(a) - n * min(a))","0.0"
"0df7e1f2-c1c4-41f3-9904-a9e4495a5bfc","a = int(input())
b = int(input())
spd= []
k = 0
spdD = []
spdmax = 0
spdmin = 1000000
def KolDel(x):
    sp =[]
    for t in range(1,int(x**0.5)+1):
        if x % t == 0:
            sp.append(t)
            if x//t != t:
                sp.append(x//t)
        sp.sort()
    return sp

for i in range(a,b+1):
    k = 0
    spdD = []
    spd = KolDel(i)
    for j in spd:
        if j > 9 and j < 100:
            k+=1
            spdD.append(j)
    if k == 30:
        print(i,spdD[0],spdD[-1])
            

","0.0"
"0df7e1f2-c1c4-41f3-9904-a9e4495a5bfc","a = int(input())
b = int(input())
spd= []
k = 0
spdD = []
def KolDel(x):
    sp =[]
    for t in range(1,int(x**0.5)+1):
        if x % t == 0:
            sp.append(t)
            if x//t != t:
                sp.append(x//t)
        sp.sort()
    return sp

for i in range(a,b+1):
    k = 0
    spdD = []
    spd = KolDel(i)
    for j in spd:
        if j > 9 and j < 100:
            k+=1
            spdD.append(j)
    if k == 30:
        print(i,spdD[0],spdD[-1])
            

","0.0"
"0df7e1f2-c1c4-41f3-9904-a9e4495a5bfc","a = int(input())
b = int(input())
spd= []
k = 0
spdD = []
def KolDel(x):
    sp =[]
    for t in range(1,int(x**0.5)+1):
        if x % t == 0:
            sp.append(t)
            if x//t != t:
                sp.append(x//t)
        sp.sort()
    return sp

for i in range(a,b+1):
    k = 0
    spdD = []
    spd = KolDel(i)
    for j in spd:
        if j > 9 and j < 100:
            k+=1
            spdD.append(j)
    if k == 30:
        print(i,spdD[0],spdD[-1])
            

","0.0"
"0e835939-e24c-4e99-b563-d8be842cec4d","A=0
B=0
for x in input():
    if 64<ord(x)<91:
        A+=1
    if 96<ord(x)<123:
        B+=1
if A!=0 and B!=0:
    if B%A==0:
        print(int(B/A))
    else:
        print(B/A)
else:
    print(-1)","0.0"
"1d7d28c9-4d1b-4d70-b2e1-b0393775ab4a","a=''
k=0
A = [""Ð"", ""Ð"", ""Ð"", ""Ð"", ""Ð"", ""Ð£"", ""Ð«"", ""Ð­"", ""Ð®"", ""Ð¯""]
for x in input():
    if 47<ord(x)<58:
        a+=x
    if x in A:
        k+=1
print(int(a)%k)","0.0"
"6dcac6bd-9973-47eb-8912-187a2999dc6b","def nod(x,y):
    while x*y!=0:
        if x>y:
            x = x % y
        else:
            y = y % x
    return x+y
n = int(input())
a = list(map(int,input().split()))
b = a[0]
for j in range(1,n):
    b = nod(b, a[j])
print(a[-1]//b)","0.0"
"5177ddd2-f17e-4d0a-bf78-21fd90df671f","n, k = map(int, input().split())
a = list(map(int, input().split()))
mx = 0
p = 0
for i in range(n - 1):
    if a[i] != a[i+1]:
        p += 1
    else:
        mx = max(mx, p)
        p = 0
mx = max(mx, p)
print(mx + 1)","0.0"
"430aade4-55bd-42b3-9586-1389412540a7","n = int(input())
k = 0
while n > 1:
    n = n // 2 + n % 2    
    k += 1
print(k)","0.0"
"4495049c-7679-4fd3-804c-70c67ad5a1dc","a, b = map(int,input().split())
if a > 0 and b > 0 or a < 0 and b < 0:
    print(a + b)
else:
    print(a - b)

","0.0"
"db8534b0-ffa9-4c1b-9d86-4797814b3074","a = input()
a = a.split()
print(len(a))","0.0"
"84b45b43-cc73-4b14-ab6e-8b970134fb03","n, m = map(int, input().split())
s = (1 + n) * n // 2
t = m % s
if t == 0:
    otv = 0
else:
    x = 0
    while t > 0:
        x = x + 1
        t = t - x
        if t == 0:
            otv = 0
        if t < 0:
            otv = x - abs(t)
print(otv)","0.0"
"4495049c-7679-4fd3-804c-70c67ad5a1dc","a,b=map(int,input().split())
if a*b>0:
  print(a+b)
else:
 print(a-b)","0.0"
"0e835939-e24c-4e99-b563-d8be842cec4d","text = input()

upper_count = 0
lower_count = 0
for element in text:
    if element.isupper():
        upper_count += 1
    elif element.islower():
        lower_count += 1

if upper_count == 0 or lower_count == 0:
    print(-1)
else:
    result = lower_count / upper_count

    if result % 1 == 0:
        print(int(result))
    else:
        print(result)
","0.0"
"1d7d28c9-4d1b-4d70-b2e1-b0393775ab4a","text = input()

VOWELS = ['Ð', 'Ð', 'Ð', 'Ð', 'Ð', 'Ð£', 'Ð«', 'Ð­', 'Ð®', 'Ð¯']

number = ''
number_of_vowels = 0
for element in text:
    if element.isnumeric():
        number += element
    elif element in VOWELS:
        number_of_vowels += 1

print(int(number) % number_of_vowels)
","0.0"
"48521f16-2133-47f1-b071-0706a6062411","text = list(input().split())

# Ð ÑÑÑÐºÐ¸Ð¹ Ð°Ð»ÑÐ°Ð²Ð¸Ñ
ALPHABET = ['Ð°', 'Ð±', 'Ð²', 'Ð³', 'Ð´', 'Ðµ', 'Ñ', 'Ð¶',
            'Ð·', 'Ð¸', 'Ð¹', 'Ðº', 'Ð»', 'Ð¼', 'Ð½', 'Ð¾',
            'Ð¿', 'Ñ', 'Ñ', 'Ñ', 'Ñ', 'Ñ', 'Ñ', 'Ñ',
            'Ñ', 'Ñ', 'Ñ', 'Ñ', 'Ñ', 'Ñ', 'Ñ', 'Ñ', 'Ñ']

result = ''
for element in text:
    index = ALPHABET.index(element[0])
    if index == 0:
        result += 'Ð¼ÑÑ-' + 'Ñ' + element[1:] + ' '
    else:
        result += 'Ð¼ÑÑ-' + ALPHABET[index-1] + element[1:] + ' '

print(result)
","0.0"
"1d7d28c9-4d1b-4d70-b2e1-b0393775ab4a","mas = ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9']
mas2 = ['Ð', 'Ð', 'Ð', 'Ð', 'Ð', 'Ð£', 'Ð«', 'Ð­', 'Ð®', 'Ð¯']
s = input()
s1 = ''
x = 0
for a in range(len(s)):
    if s[a] in mas:
        s1 += s[a]
    if s[a] in mas2:
        x += 1


print(int(s1) % x)","0.0"
"0e835939-e24c-4e99-b563-d8be842cec4d","a=0
b=0
for i in input():
    if 64<ord(i)<91:
        a+=1
    if 96<ord(i)<123:
        b+=1
if a!=0 and b!=0:
    if b%a==0:
        print(int(b/a))
    else:
        print(b/a)
else:
    print(-1)
","0.0"
"db8534b0-ffa9-4c1b-9d86-4797814b3074","s=input()
x=s.count("" "")
print(x+1)
","0.0"
"4495049c-7679-4fd3-804c-70c67ad5a1dc","a,b=map(int,input().split())
if (a>0 and b>0)or(a<0 and b<0):
    print(a+b)
else:
    print(a-b)
","0.0"
"48521f16-2133-47f1-b071-0706a6062411","mas = ""Ð°Ð±Ð²Ð³Ð´ÐµÑÐ¶Ð·Ð¸Ð¹ÐºÐ»Ð¼Ð½Ð¾Ð¿ÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑ""
s = input().split("" "")
s1 = """"
for word in s:
    first_letter = word[0]
    index = mas.index(first_letter)
    new_first_letter = mas[index - 1]
    s1 += ""Ð¼ÑÑ-"" + new_first_letter + word[1:] + "" ""

print(s1.strip())

","0.0"
"9acc7b61-f8ac-4953-8b12-651c2d7f8d48","h, w, n = map(int, input().split())
a = [['.'] * (w + 1) for i in range(h + 1)]
for i in range(n):
    r1, c1, r2, c2 = map(int, input().split())
    x = chr(i + 97)
    for j in range(c1, c2 +1):
        a[r1][j] = x
    for j in range(c1, c2 +1):
        a[r2][j] = x
    for j in range(r1, r2 +1):
        a[j][c1] = x
    for j in range(r1, r2 +1):
        a[j][c2] = x    
for i in range(1, h + 1):
    for j in range(1, w +1):
        print(a[i][j],end = '')
    print()","0.0"
"d0e35e20-e37a-4750-8c0b-7641a3b72277","n = int(input())
a = list(map(int, input().split()))
x4 = a.count(4)
x3 = a.count(3)
x2 = a.count(2)
x1 = a.count(1)
s = x4
s += x3
if x3 < x1:
    x1 = x1 - x3
else:
    x1 = 0
s += x2 // 2
if x2 % 2 !=0:
    x2 = 2
else:
    x2 = 0
x = x2 + x1
s += x // 4
if x % 4 != 0:
    s += 1
print(s)","0.0"
"2335ee80-a2b1-4e2b-93c1-b3bc7d2720e8","t = int(input())
for i in range(t):
    n = int(input())
    kr = int (n ** 0.5)
    l = kr
    r = kr + 100000
    while n // l - n // (l + 1) > 1:
        l += 1
    kr = l
    sr = n // l
    while l + 1 < r:
        m = (l + r) // 2
        y = n // m
        if sr - y == m - kr:
            l = m
        else:
            r = m
    print(l)","0.0"
"5fc63383-931c-46cc-a7d1-308dc271fda6","n, d = map(int,input().split())
a = list(map(int,input().split()))
a.sort()
m = int(input())
s = 0
if m > n:
    s = sum(a) - (m - n) *d
else:
    for i in range(m):
        s += a[i]        
print(s)","0.0"
"6aae7e54-46ae-4139-acfe-077fa3532601","def f(s):
    s += '+'
    k = 1
    t = ''
    b = []
    for i in range(len(s)-1):
        if s[i] == s[i + 1]:
            k += 1
        else:
            t += s[i]
            b.append(k)
            k = 1 
    return t, b
a1 = input()
a2 = input()
a3 = input()
x1, c1 = f(a1)
x2, c2 = f(a2)
x3, c3 = f(a3)
p =''
if x1 == x2 == x3:
    for i in range(len(x1)):
        m = 0
        m = c1[i] + c2[i] + c3[i] - min(c1[i], c2[i], c3[i]) - max(c1[i], c2[i], c3[i])
        p += x1[i] * m
    print(p) 
else:
    print('IMPOSSIBLE')","0.0"
"ae532d4a-9564-46c8-a30b-9f1fe7f95bf9","b, r, y = map(int, input().split())
k = int(input())
a = [0] * k
s1 = 'sc'
s2 = 'sk'
s3 = 'ck'
for i in range(k):
    a[i] = input()
if k == 3:
    res = b * r * y
if k == 2:
    if a[0][0] in s1 and a[1][0] in s1:
        res = b * r
    if a[0][0] in s2 and a[1][0] in s2:
        res = r * y
    if a[0][0] in s3 and a[1][0] in s3:
        res = b * y
if k == 1:
    if a[0][0] == 'k':
            res = y    
    if a[0][0] == 's':
            res = b
    if a[0][0] == 'c':
            res = r    
print(res)","0.0"
"ae532d4a-9564-46c8-a30b-9f1fe7f95bf9","b, r, y = map(int, input().split())
k = int(input())
a = [0] * k
s1 = 'sc'
s2 = 'sk'
s3 = 'ck'
for i in range(k):
    a[i] = input()
if k == 3:
    res = b * r * y
if k == 2:
    if a[0][0] in s1 and a[1][0] in s1:
        res = b * r
    if a[0][0] in s2 and a[1][0] in s2:
        res = r * y
    if a[0][0] in s3 and a[1][0] in s3:
        res = b * y
if k == 1:
    if a[0][0] == 'k':
            res = y    
    if a[0][0] == 's':
            res = b
    if a[0][0] == 'c':
            res = r    
print(res)","0.0"
"4495049c-7679-4fd3-804c-70c67ad5a1dc","a,b = map(int, input().split())
if (a > 0 and b > 0) or (a < 0 and b < 0):
    summa = a+b
else:
    summa = a - b
print(summa)","0.0"
"db8534b0-ffa9-4c1b-9d86-4797814b3074","sp = list(map(str, input().split()))
print(len(sp))
","0.0"
"db8534b0-ffa9-4c1b-9d86-4797814b3074","a = input()
print(a.count(' ')+1)","0.0"
"4495049c-7679-4fd3-804c-70c67ad5a1dc","a, b =map(int,input().split())
if a*b > 0:
    print(a+b)
else:
    print(a-b)
","0.0"
"4495049c-7679-4fd3-804c-70c67ad5a1dc","a,b = map(int, input().split())
if a*b>0:
    print(a+b)
else:
    print(a-b)","0.0"
"4495049c-7679-4fd3-804c-70c67ad5a1dc","x, y = [int(x) for x in input().split()]
if x > 0 and y > 0:
    print(x+y)
elif x < 0 and y < 0:
    print(x+y)
else:
    print(x-y)","0.0"
"db8534b0-ffa9-4c1b-9d86-4797814b3074","string = input()
count = 1
for i in range(0, len(string)):
    if string[i] == "" "":
        count += 1
print(count)","0.0"
"db8534b0-ffa9-4c1b-9d86-4797814b3074","print(len(input().split()))","0.0"
"4495049c-7679-4fd3-804c-70c67ad5a1dc","a, b = [int(i) for i in input().split()]
if (a >= 0 and b >= 0) or (a < 0 and b < 0):
    print(a + b)
else:
    print(a - b)","0.0"
"4495049c-7679-4fd3-804c-70c67ad5a1dc","a, b = map(int, input().split())
if (a < 0 and b < 0) or (a > 0 and b > 0):
    print(a+b)
else:
    print(a-b)","0.0"
"db8534b0-ffa9-4c1b-9d86-4797814b3074","s = input()
mas = s.split()
print(len(mas))","0.0"
"db8534b0-ffa9-4c1b-9d86-4797814b3074","print(len(list(input().split())))","0.0"
"4495049c-7679-4fd3-804c-70c67ad5a1dc","a, b = input().split()
a = int(a)
b = int(b)
if (str(a)[0] == '-' and str(b)[0] == '-') or (a == abs(a) and b == abs(b)):
    print(a+b)
else: print(a-b)
","0.0"
"4495049c-7679-4fd3-804c-70c67ad5a1dc","x, y = [int(x) for x in input().split()] 
if x > 0 and y > 0:
    print(x+y)
elif x < 0 and y < 0:
    print(x+y)
else:
    print(x-y)","0.0"
"4495049c-7679-4fd3-804c-70c67ad5a1dc","x,y=map(int,input().split())
if x > 0 and y > 0:
    print(x+y)
elif x < 0 and y < 0:
    print(x+y)
else:
    print(x-y)","0.0"
"1a27e016-52ff-4e78-89cb-956f0a7cac6b","a = int(input())
b = list(map(int, input().split()))
b.sort()
for x in range(a):
    print(b[x], end=' ')","0.0"
"db8534b0-ffa9-4c1b-9d86-4797814b3074","a= input()
print(a.count(' ')+1)","0.0"
"4495049c-7679-4fd3-804c-70c67ad5a1dc","a, b = map(int, input().split())
if a < 0 and b >= 0 or a >= 0 and b < 0:
    print(a - b)
else:
    print(a + b)","0.0"
"db8534b0-ffa9-4c1b-9d86-4797814b3074","print(len(input().split()))
","0.0"
"db8534b0-ffa9-4c1b-9d86-4797814b3074","print(len(input().split()))","0.0"
"4495049c-7679-4fd3-804c-70c67ad5a1dc","a = [int(i) for i in input().split()]
if a[0] > 0 and a[1] > 0:
    print(sum(a))
elif a[0] < 0 and a[1] < 0:
    print(sum(a))
else:
    print(a[0] - a[1])
        ","0.0"
"4495049c-7679-4fd3-804c-70c67ad5a1dc","a = [int(i) for i in input().split()]
if a[0] > 0 and a[1] > 0:
    print(sum(a))
elif a[0] < 0 and a[1] < 0:
    print(sum(a))
else:
    print(a[0] - a[1])
        ","0.0"
"db8534b0-ffa9-4c1b-9d86-4797814b3074","print(len(input().split()))","0.0"
"db8534b0-ffa9-4c1b-9d86-4797814b3074","a = input().split()
print(len(a))","0.0"
"4495049c-7679-4fd3-804c-70c67ad5a1dc","a = [int(i) for i in input().split()]
if a[0] > 0 and a[1] > 0:
    print(sum(a))
elif a[0] < 0 and a[1] < 0:
    print(sum(a))
else:
    print(a[0] - a[1])","0.0"
"4495049c-7679-4fd3-804c-70c67ad5a1dc","fr, sc = map(int, input().split())
if (fr > 0 and sc > 0)  or  (fr < 0 and sc < 0):
    resl = fr + sc
else:
    resl = fr - sc
print(resl)","0.0"
"4495049c-7679-4fd3-804c-70c67ad5a1dc","a, b = map(int, input().split())
if (a >= 0 and b >= 0) or (a < 0 and b < 0):
    print(a + b)
else:
    print(a - b)","0.0"
"db8534b0-ffa9-4c1b-9d86-4797814b3074","print(len([i for i in input().split()]))","0.0"
"4495049c-7679-4fd3-804c-70c67ad5a1dc","a = [int(i) for i in input().split()]
if a[0] > 0 and a[1] > 0:
    print(sum(a))
elif a[0] < 0 and a[1] < 0:
    print(sum(a))
else:
    print(a[0] - a[1])","0.0"
"db8534b0-ffa9-4c1b-9d86-4797814b3074","print(len(input().split()))
","0.0"
"db8534b0-ffa9-4c1b-9d86-4797814b3074","s = input()
print(s.count("" "") + 1)","0.0"
"4495049c-7679-4fd3-804c-70c67ad5a1dc","a, b = input().split()
a, b = int(a), int(b)
if a * b > 0:
    print(a + b)
else:
    print(a - b)","0.0"
"4495049c-7679-4fd3-804c-70c67ad5a1dc","a = [int(i) for i in input().split()]
if a[0] > 0 and a[1] > 0:
    print(sum(a))
elif a[0] < 0 and a[1] < 0:
    print(sum(a))
else:
    print(a[0] - a[1])","0.0"
"db8534b0-ffa9-4c1b-9d86-4797814b3074","print(len(input().split()))","0.0"
"db8534b0-ffa9-4c1b-9d86-4797814b3074","s = input()
print(len(s.split()))","0.0"
"db8534b0-ffa9-4c1b-9d86-4797814b3074","print(len( input().split()))","0.0"
"db8534b0-ffa9-4c1b-9d86-4797814b3074","print(len([i for i in input().split()]))","0.0"
"4495049c-7679-4fd3-804c-70c67ad5a1dc","n=input().split()
a=int(n[0])
b=int(n[1])
if (a>0 and b>0) or (a<0 and b<0):
    print(a+b)
else:
    print(a-b)","0.0"
"db8534b0-ffa9-4c1b-9d86-4797814b3074","n=input().split()
print(len(n))","0.0"
"ae532d4a-9564-46c8-a30b-9f1fe7f95bf9","b, r, y = map(int, input().split())
k = int(input())
a = [0] * k
s1 = 'sc'
s2 = 'sk'
s3 = 'ck'
for i in range(k):
    a[i] = input()
if k == 3:
    res = b * r * y
if k == 2:
    if a[0][0] in s1 and a[1][0] in s1:
        res = b * r
    if a[0][0] in s2 and a[1][0] in s2:
        res = r * y
    if a[0][0] in s3 and a[1][0] in s3:
        res = b * y
if k == 1:
    if a[0][0] == 'k':
            res = y    
    if a[0][0] == 's':
            res = b
    if a[0][0] == 'c':
            res = r    
print(res)","0.0"
"5986f14f-59c5-428e-84aa-553175c8bdb9","n=input().split()
x=int(input())
a=int(n[0])
b=int(n[1])
if ((a*b)//9==x):
    print('NO')
    print(0)
else:
    print('YES')
    print(x-(a*b//9))","0.0"
"5986f14f-59c5-428e-84aa-553175c8bdb9","a, b = map(int, input().split())
n = int(input())
s = a*b
if s // 9 >= n:
    print('NO')
    print(0)
else:
    print('YES')
    print(n - s // 9)","0.0"
"5986f14f-59c5-428e-84aa-553175c8bdb9","a, b = map(int, input().split())
n = int(input())
if (a * b) / n >= 9:
    print(""NO"")
    print(0)
else:
    print(""YES"")
    print(n - int(a * b / 9))","0.0"
"5986f14f-59c5-428e-84aa-553175c8bdb9","a, b = map(int, input().split())
s = a * b
n = int(input()) * 9
print('YES' if n > s else 'NO')
print((n - s) // 9 + 1 if n > s else 0)
","0.0"
"5986f14f-59c5-428e-84aa-553175c8bdb9","a, b = map(int, input().split())
n = int(input())
k = 0
if a*b>=n*9:
    print(""NO"")
else:
    print(""YES"")
    print(n-a*b//9)","0.0"
"5986f14f-59c5-428e-84aa-553175c8bdb9","a, b  = map(int,input().split())
c = int(input())
if a*b < c*9:
    print('YES')
    print(abs((a*b-c*9)//9))
else:
    print('NO')
    print(0)","0.0"
"5986f14f-59c5-428e-84aa-553175c8bdb9","a, b = map(int, input().split())
n = int(input())
c = (a * b) // 9

if c >= n:
    print(""NO"")
    print(0)
else:
    print(""YES"")
    print(n-c)","0.0"
"5986f14f-59c5-428e-84aa-553175c8bdb9","n=input().split()
x=int(input())
a=int(n[0])
b=int(n[1])
if ((a*b)//9>=x):
    print('NO')
    print(0)
else:
    print('YES')
    print(x-(a*b//9))","0.0"
"5986f14f-59c5-428e-84aa-553175c8bdb9","a, b = map(int, input().split())
n = int(input())
if a * b / n > 9:
    print(""NO"")
else:
    print('YES', n - a * b // 9, sep = '
')
    ","0.0"
"5986f14f-59c5-428e-84aa-553175c8bdb9","a, b = map(int, input().split())
n = int(input())
k = 0
if a*b>=n*9:
    print(""NO"")
    print(0)
else:
    print(""YES"")
    print(n-a*b//9)","0.0"
"5986f14f-59c5-428e-84aa-553175c8bdb9","a, b = [int(i) for i in input().split()]
c = int(input())
a = a * b
if a / c >= 9:
    print(""NO"")
    print(a // 9 - c)
else:
    print(""YES"")
    print(c - a // 9)","0.0"
"5986f14f-59c5-428e-84aa-553175c8bdb9","a, b = [int(i) for i in input().split()]
c = int(input())
a = a * b
if a / c >= 9:
    print(""NO"")
    print(0)
else:
    print(""YES"")
    print(c - a // 9)","0.0"
"5986f14f-59c5-428e-84aa-553175c8bdb9","a,b=map(int,input().split())
n=int(input())
s=a*b//9
if s-n>=0:
    print(""NO"")
    print(0)
else:
    print(""YES"")
    print(n-s)","0.0"
"5986f14f-59c5-428e-84aa-553175c8bdb9","a, b = [int(i) for i in input().split()]
c = int(input())
a = a * b
if a / c >= 9:
    print(""NO"")
    print(a // 9 - c)
else:
    print(""YES"")
    print(c - a // 9)","0.0"
"5986f14f-59c5-428e-84aa-553175c8bdb9","s = input().split()
a = int(s[0])
b = int(s[1])
n = int(input())
if (a*b//9 >= n):
    print('NO')
    print(0)
else:
    print('YES')
    print(n - a*b//9)","0.0"
"43690a23-0ff2-4f9b-8410-ec7917ae05e3","n = int(input())
a = list(map(int, input().split()))
k = 0
f = min(a)
for i in range(len(a)):
    k += a[i] - f
print(k)","0.0"
"5986f14f-59c5-428e-84aa-553175c8bdb9","import math
a, b = map(int,input().split())
n = int(input())

if a * b >= n * 9:
    print('NO')
    print(0)
else:
    print('YES')
    print(math.ceil((n * 9 - a * b) / 9))
","0.0"
"5986f14f-59c5-428e-84aa-553175c8bdb9","a, b = map(int, input().split())
n = int(input())
if n == 0:
    print(""NO"")
    print(0)
else:
    if (a * b) / n >= 9:
        print(""NO"")
        print(0)
    else:
        print(""YES"")
        print(n - int(a * b / 9))","0.0"
"43690a23-0ff2-4f9b-8410-ec7917ae05e3","n = int(input())
mas = []
mas2 = []
b = input()
mas = b.split()
for a in range(n):
    mas2.append(int(mas[a]))
mn = min(mas2)
s = sum(mas2)
print(s - mn*n)
","0.0"
"5986f14f-59c5-428e-84aa-553175c8bdb9","a=input().split()
b=int(input())
c=int(a[0])*int(a[1])
c=c//9
if c<b:
    print(""YES"")
    print(b-c)
else:
    print(""NO"")
    print(0)","0.0"
"5986f14f-59c5-428e-84aa-553175c8bdb9","a, b = [int(i) for i in input().split()]
n = int(input())
if a*b >= n*9:
    print('NO')
    print(0)
else:
    r = n- a*b//9
    print('YES')
    print(r)
","0.0"
"5986f14f-59c5-428e-84aa-553175c8bdb9","a, b = map(int, input().split())
n = int(input())
if a * b / n > 9 and n != 0:
    print(""NO"")
else:
    print('YES', n - a * b // 9, sep = '
')
    ","0.0"
"5986f14f-59c5-428e-84aa-553175c8bdb9","a,b = map(int,input().split())
n = int(input())
S = a*b
m = S//9
ost = n-m
if ost>0:
    print('YES')
    print(ost)
else:
    print('NO')
    print(0)
","0.0"
"5986f14f-59c5-428e-84aa-553175c8bdb9","a, b = map(int, input().split())
n=int(input())
c=a*b//9
if c>=n:
    print('NO')
    print(0)
elif c<n:
    print('YES')
    print(n-c)
    
","0.0"
"5986f14f-59c5-428e-84aa-553175c8bdb9","a, b = map(int, input().split())
k = int(input())
if a * b // 9 < k:
    print(""YES"")
    print(k - (a*b//9))
else:
    print(""NO"")
    print(0)","0.0"
"5986f14f-59c5-428e-84aa-553175c8bdb9","ab = input().split()
ab = list(map(int, ab)) # [a, b] <-- int
a = ab[0]
b = ab[1]
n = int(input()) #ÐºÐ¾Ð»-Ð²Ð¾ ÑÐµÐ¼ÑÐ½

s = a * b
check = True
while n != 0:
    if s / 9 >= 1:
        s -= 9
        n -= 1
    else:
        print('YES', n, sep='
')
        check = False
        break
if check:
    print('NO', 0, sep='
')
","0.0"
"5986f14f-59c5-428e-84aa-553175c8bdb9","a, b = map(int, input().split())
n = int(input())
if n != 0:
    if a * b / n > 9:
        print(""NO"")
    else:
        print('YES', n - a * b // 9, sep = '
')
else: print(""NO"")
    ","0.0"
"43690a23-0ff2-4f9b-8410-ec7917ae05e3","n=int(input())
a=list(map(int,input().split()))
a.sort()
mi=a[0]
k=0
for i in range(len(a)):
    k+=a[i]-mi
print(k)","0.0"
"43690a23-0ff2-4f9b-8410-ec7917ae05e3","n = int(input())
arr = list(map(int, input().split()))
score = 0
for i in range(len(arr)):
    score += arr[i] - min(arr)
    arr[i] = min(arr)
print(score) 
","0.0"
"43690a23-0ff2-4f9b-8410-ec7917ae05e3","n = int(input())
a = list(map(int, input().split()))
mn = min(a)
ct = 0
for i in a:
    ct += (i - mn)
print(ct)","0.0"
"5986f14f-59c5-428e-84aa-553175c8bdb9","a, b = map(int, input().split())
n = int(input())
if n != 0:
    if a * b / n >= 9:
        print(""NO"")
    else:
        print('YES', n - a * b // 9, sep = '
')
else: print(""NO"")
    ","0.0"
"43690a23-0ff2-4f9b-8410-ec7917ae05e3","a = int(input())
b = list(map(int,input().split()))
print(sum(b)- a*min(b))","0.0"
"5986f14f-59c5-428e-84aa-553175c8bdb9","a, b = map(int, input().split())
n = int(input())
if n * 9 > a * b:
    print(""YES"")
    print(n - int(a*b/9))
else:
    print(""NO"")
","0.0"
"5986f14f-59c5-428e-84aa-553175c8bdb9","a, b = map(int, input().split())
n = int(input())
if n != 0:
    if a * b / n >= 9:
        print(""NO"")
    else:
        print('YES', n - (a * b // 9), sep = '
')
else: print(""NO"")
    ","0.0"
"43690a23-0ff2-4f9b-8410-ec7917ae05e3","_ = input()
a = [int(i) for i in input().split()]
b = min(a)
g = 0
for i in a:
    g += i - b
print(g)","0.0"
"5986f14f-59c5-428e-84aa-553175c8bdb9","a,b = map(int, input().split())
c = int(input())
d = a*b
if d % 9 == 0:
    print('NO')
    print(c - (d//9))
else:
    print('YES')
    print(c- (d//9))","0.0"
"43690a23-0ff2-4f9b-8410-ec7917ae05e3","n = int(input())
array = [int(s) for s in input().split()]

array = sorted(array)

counter = 0

for i in range(1, len(array)):
    counter += array[i] - min(array)

print(counter)","0.0"
"5986f14f-59c5-428e-84aa-553175c8bdb9","a, b = map(int, input().split())
n = int(input())

# ÐÐ»Ð¾ÑÐ°Ð´Ñ ÑÑÐ°ÑÑÐºÐ°
s = a * b

# ÐÐ¾ÑÑÐ¸ÑÐ°ÑÑ Ð¼Ð°ÐºÑÐ¸Ð¼Ð°Ð»ÑÐ½Ð¾Ðµ ÐºÐ¾Ð»-Ð²Ð¾ ÑÐ°ÑÑÐµÐ½Ð¸Ð¹, ÐºÐ¾ÑÐ¾ÑÐ¾Ðµ Ð¼Ð¾Ð¶Ð½Ð¾ Ð²ÑÑÐ°Ð´Ð¸ÑÑ
max_plants = s // 9

if max_plants == n:
    print('NO')
    print(0)
else:
    print('YES')
    print(n - max_plants)
","0.0"
"5986f14f-59c5-428e-84aa-553175c8bdb9","a,b=map(int,input().split())
n = int(input())
s = a*b//9
if n > s:
    print('YES')
    print(n-s)
else:
    print('NO')
    print(0)
","0.0"
"43690a23-0ff2-4f9b-8410-ec7917ae05e3","d = input()
d = [int(i) for i in input().split()]
m = min(d)
ans =  0
for i in d:
    ans += i-m
print(ans)
","0.0"
"5986f14f-59c5-428e-84aa-553175c8bdb9","a,b=map(int,input().split())
n=int(input())
s=a*b
if  s//9==n:
    print('NO',0,sep='
')
else:
    print('YES',n-s//9,sep='
')

","0.0"
"5986f14f-59c5-428e-84aa-553175c8bdb9","i = input()
i1 = int(i.split()[0])
i2 = int(i.split()[1])
s = int(input())
g = i1 * i2
if g // 9 < s:
    print(""YES"")
    print(s - g // 9)
else:
    print(""NO"")
    print(0)
","0.0"
"43690a23-0ff2-4f9b-8410-ec7917ae05e3","a=int(input())
b=input().split()
for i in range(len(b)):
    b[i]=int(b[i])
d=0
c=min(b)
for i in range(a):
    d=d+b[i]-c
print(d)","0.0"
"43690a23-0ff2-4f9b-8410-ec7917ae05e3","n = int(input())
m = [ int(x) for x in input().split()]

mx = min(m)
sum = 0
for i in range(n):
    sum+= m[i]-mx
print(sum)","0.0"
"43690a23-0ff2-4f9b-8410-ec7917ae05e3","n=int(input())
a=[int(x) for x in input().split()]
m=min(a)
c=0
for i in range(n):
    c+=a[i]
print(c-m*n)
","0.0"
"43690a23-0ff2-4f9b-8410-ec7917ae05e3","n = int(input())
mas = list(map(int,input().split()))
mn = min(mas)
print(sum(mas) - len(mas)*mn)
","0.0"
"5986f14f-59c5-428e-84aa-553175c8bdb9","s = input().split()
a = int(s[0])
b = int(s[1])
n = int(input())
if a * b >= n * 9:
    print('NO')
    print(0)
else:
    print('YES')
    print(n - (a * b) // 9)","0.0"
"5986f14f-59c5-428e-84aa-553175c8bdb9","a,b=map(int,input().split())
n=int(input())
s=a*b
if  s//9>=n:
    print('NO',0,sep='
')
else:
    print('YES',n-s//9,sep='
')

","0.0"
"5986f14f-59c5-428e-84aa-553175c8bdb9","a, b = map(int, input().split())
n = int(input())
if n * 9 > a * b:
    print(""YES"")
    i = 0
    while i * 9 <= a * b:
        i += 1
    print(n+1-i)
else:
    print(""NO"")
","0.0"
"5986f14f-59c5-428e-84aa-553175c8bdb9","a, b = map(int, input().split())
n = int(input())
qr = a * b  
ra = n * 9 

if ra > qr: 
    print(""YES"")
    print((ra - qr + 8) // 9)  
else:
    print(""NO"")
    print(0)","0.0"
"43690a23-0ff2-4f9b-8410-ec7917ae05e3","n = int(input())
sp = list(map(int, input().split()))
sp.sort()
k = 0
minsp = sp[0]
for i in range(0,n):
    if minsp != sp[i]:
        k = (sp[i] - minsp) + k
print(k)
","0.0"
"43690a23-0ff2-4f9b-8410-ec7917ae05e3","n = int(input())
a = [int(x) for x in input().split()]
k = min(a)
summ = 0
for i in range(n):
    summ+= a[i] - k
print(summ)","0.0"
"43690a23-0ff2-4f9b-8410-ec7917ae05e3","h = int(input()) # ÐºÐ¾Ð»Ð¸ÑÐµÑÑÐ²Ð¾ Ð´Ð¾Ð¼Ð¾Ð²
n = input().split() # ÐºÐ¾Ð»Ð¸ÑÐµÑÑÐ²Ð¾ ÑÐ¾ÑÑÐ»ÐµÐº Ð½Ð° ÐºÐ°Ð¶Ð´Ð¾Ð¼ Ð´Ð¾Ð¼Ðµ
n = list(map(int, n))

m = min(n)
x = 0
for elem in  n:
    x += elem-m
print(x)
","0.0"
"43690a23-0ff2-4f9b-8410-ec7917ae05e3","def f():
    n = int(input())
    a = list(map(int, input().split()))
    mia = min(a)
    ans = 0
    for i in a:
        ans += i - mia
    print(ans)


f()","0.0"
"5986f14f-59c5-428e-84aa-553175c8bdb9","a, b = map(int, input().split())
n = int(input())
if n * 9 > a * b:
    print(""YES"")
    i = 0
    while i * 9 <= a * b:
        i += 1
    print(n+1-i)
else:
    print(""NO"")
    print(0)
","0.0"
"5986f14f-59c5-428e-84aa-553175c8bdb9","a, b = map(int, input().split())
n = int(input())

max_plants = (a * b) // n
# ÐÐ·Ð±ÑÑÐ¾Ðº
if n > max_plants:
    print('YES')
    print(n - max_plants)
else:
    print('NO')
    print(0)
","0.0"
"5986f14f-59c5-428e-84aa-553175c8bdb9","a, b = map(int, input().split())
n = int(input())
if n <= a*b//9:
    print(""NO"")
    print(n - a*b//9)
else:
    print(""YES"")
    print(n - a*b//9)","0.0"
"5986f14f-59c5-428e-84aa-553175c8bdb9","a, b = map(int, input().split())
n = int(input())
if n*9>a*b:
    print('YES')
    print((n*9-a*b)//9+1)
else:
    print('NO')
    print(0)","0.0"
"43690a23-0ff2-4f9b-8410-ec7917ae05e3","n, s, mini = int(input()), 0, -1
a = list(map(int, input().split(maxsplit = n)))
mini = min(a)
for i in range(n):
    if a[i] != mini:
        s += a[i] - mini
print(s)","0.0"
"5986f14f-59c5-428e-84aa-553175c8bdb9","a, b = map(int, input().split())
n = int(input())
ar = a * b
ra = n * 9
if ar >= ra:
    print(""NO"")
    print(0)
else:
    k = n - (ar // 9)
    print(""YES"")
    print(k)","0.0"
"43690a23-0ff2-4f9b-8410-ec7917ae05e3","i = int(input())
s = input()
f = []
for j in range(i):
    f.append(int(s.split()[j]))
p = 0
while f.count(max(f)) != i:
    f[f.index(max(f))] -= 1
    p += 1
print(p)
","0.0"
"5986f14f-59c5-428e-84aa-553175c8bdb9","a, b = map(int, input().split())
n = int(input())
if n != 0:
    if a * b / n >= 9:
        print(""NO"")
    else:
        print('YES', n  - (a * b // 9), sep = '
')
else: print(""NO"")
    ","0.0"
"43690a23-0ff2-4f9b-8410-ec7917ae05e3","i = int(input())
s = input()
f = []
for j in range(i):
    f.append(int(s.split()[j]))
p = 0
while f.count(max(f)) != i:
    f[f.index(max(f))] -= 1
    p += 1
print(p)
","0.0"
"43690a23-0ff2-4f9b-8410-ec7917ae05e3","input()
answ = 0
arr = list(map(int, input().split()))
min_ = min(arr)
for el in arr:
    answ += el - min_
print(answ)
","0.0"
"43690a23-0ff2-4f9b-8410-ec7917ae05e3","n = int(input())
s = input().split()
a = []
for i in range(len(s)):
    a.append(int(s[i]))
m = min(a)
l = 0
for i in a:
    l += i - m
print(l)","0.0"
"5986f14f-59c5-428e-84aa-553175c8bdb9","a, b= map(int, input().split(' '))
c = int(input())
pl = a*b
if pl//9 >= c:
    print('NO')
    print('0')
else:
    ost =c - (pl//9)
    print('YES')
    print(ost)","0.0"
"43690a23-0ff2-4f9b-8410-ec7917ae05e3","n = int(input())
a = [int(i) for i in input().split()]
k=0
for b in a:
    k+=b-min(a)
print(k)","0.0"
"5177ddd2-f17e-4d0a-bf78-21fd90df671f","_ = input()
a = [int(i) for i in input().split()]
g = 1
c = []
for i in range(1, len(a)):
    if a[i - 1] != a[i]:
        g += 1
    else:
        c.append(g)
        g = 1
c.append(g)
print(max(c))
","0.0"
"5986f14f-59c5-428e-84aa-553175c8bdb9","a, b = map(int, input().split())
n = int(input())
if n <= a*b//9:
    print(""NO"")
    print(0)
else:
    print(""YES"")
    print(n - a*b//9)","0.0"
"43690a23-0ff2-4f9b-8410-ec7917ae05e3","n = int(input())
a = [int(i) for i in input().split()]
m = min(a)
s = 0
for i in range(n):
    if a[i] > m:
        s += a[i]-m
print(s)
","0.0"
"5986f14f-59c5-428e-84aa-553175c8bdb9","a, b = map(int, input().split())

n, k = int(input()), 0
rast = n * 9
if a * b >= rast:
    print('NO')
    print(0)
else:
    c = 0
    j = rast - a * b
    print('YES')

    while j > 9:
        j = j - 9
        c += 1
    c += 1
print(c)","0.0"
"6dcac6bd-9973-47eb-8912-187a2999dc6b","a=int(input())
b=input().split()
d=0
for i in range(len(b)):
    for q in range(len(b)):
        if int(b[i])-int(b[q])<0:
            c=int(b[q])-int(b[i])
            if str(c) not in b:
                b.append(str(c))
                a=a+1
        elif int(b[i])-int(b[q])!=0:
            c = int(b[i]) - int(b[q])
            if str(c) not in b:
                b.append(str(c))
                a=a+1
print(a)","0.0"
"43690a23-0ff2-4f9b-8410-ec7917ae05e3","n = int(input())
a = list(map(int, input().split()))[:n]
f = min(a)
f1 = f*n
print(sum(a)-f1)
","0.0"
"5986f14f-59c5-428e-84aa-553175c8bdb9","def f():
    a, b = map(int, input().split())
    n = int(input())
    ans1 = ""NO"" if n * 9 <= a * b else ""YES""
    ans2 = 0 if ans1 == ""NO"" else (n * 9 - a * b) // 9 + (1 if n * 9 - a * b else 0)
    print(ans1, ans2, sep='
')


f()","0.0"
"43690a23-0ff2-4f9b-8410-ec7917ae05e3","n = int(input())
a = list(map(int, input().split()))
b = 0
for i in a:
    b += i - min(a)
print(b)
","0.0"
"43690a23-0ff2-4f9b-8410-ec7917ae05e3","s=[]
q1=0
n=int(input())
s=input().split()
for i in range(n):s[i]=int(s[i])
mi=min(s)
for i in range(n):
    q1+=s[i]-mi
    s[i]=s[i]-mi
print(q1)

","0.0"
"5986f14f-59c5-428e-84aa-553175c8bdb9","a, b = map(int, input().split())

n, k = int(input()), 0
rast = n * 9
if a * b >= rast:
    print('NO')
    print(0)
else:
    c = 0
    j = rast - a * b
    print('YES')

    while j > 9:
        j = j - 9
        c += 1
    c += 1
    print(c)","0.0"
"43690a23-0ff2-4f9b-8410-ec7917ae05e3","homes = int(input())
icicle = list(map(int, input().split()))

min_element = min(icicle)

result = 0
for el in icicle:
    if el > min_element:
        result += el - min_element

print(result)
","0.0"
"5986f14f-59c5-428e-84aa-553175c8bdb9","a, b = map(int, input().split())
n = int(input())
if n * 9 > a*b:
    print('YES')
    print((n*9-a*b)//9+1)
else:
    print('NO')
    print(0)
","0.0"
"6dcac6bd-9973-47eb-8912-187a2999dc6b","n = int(input())
m = [int(x) for x in input().split()]

for i in range(n):
    for j in range(i, n):
        r = m[i] - m[j]
        if r > 0 and r not in m:
            n+=1
            m.append(r)
        elif r < 0 and -r not in m:
            n+=1
            m.append(-r)
print(n)","0.0"
"6dcac6bd-9973-47eb-8912-187a2999dc6b","_= input() # ÐºÐ¾Ð»Ð¸ÑÐµÑÑÐ²Ð¾ ÑÐ¸ÑÐµÐ»
n = input().split()
n = list(map(int, n))

zapas = n

while True:
    for i in range(len(n)):
        for j in range(len(n)):
            if abs(n[i]-n[j]) not in zapas:
                zapas.append(abs(n[i]-n[j]))
            elif abs(n[j]-n[i]) not in zapas:
                zapas.append(abs(n[j]-n[i]))
    if zapas == n:
        break
    else:
        n = zapas
del n[n.index(0)]
print(len(n))
","0.0"
"5986f14f-59c5-428e-84aa-553175c8bdb9","a, b = map(int, input().split())
n = int(input())
c = a*b
x = 0
if c // 9 >= n:
	print(""NO"")
	print(x)
else:
	print(""YES"")
	x = n - (c // 9)
	print(x)
","0.0"
"43690a23-0ff2-4f9b-8410-ec7917ae05e3","n = int(input())
s = [int(a) for a in input().split()]
k = 0
m = min(s)
for i in range(len(s)):
    if s[i] != m:
        k += (s[i]-m)
print(k)
","0.0"
"5986f14f-59c5-428e-84aa-553175c8bdb9","a,b=map(int,input().split())
n=int(input())
s=a*b

if s%9==0:
	print(""NO"")
	print(s%9)
else:
	print(""YES"")
	c=n-(s//9)
	print(c)
","0.0"
"43690a23-0ff2-4f9b-8410-ec7917ae05e3","i = int(input())
s = input()
f = []
for j in range(i):
    f.append(int(s.split()[j]))
p = 0
while min(f) != max(f):
    p += (f[f.index(max(f))] - f[f.index(min(f))])
    f[f.index(max(f))] = f[f.index(min(f))]
print(p)
","0.0"
"43690a23-0ff2-4f9b-8410-ec7917ae05e3","n = int(input())
a = input()
s = a.split()
a = [int(x) for x in s]
sss = 0
mm = 100000000
for i in a:
    mm = min(mm, i)
for j in a:
    sss += (j - mm)
print(sss)","0.0"
"43690a23-0ff2-4f9b-8410-ec7917ae05e3","d = int(input())
mass = list(map(int, input().split()))
min_dom = min(mass)
for i in range(d):
    mass[i]-= min_dom
print(sum(mass))


","0.0"
"5177ddd2-f17e-4d0a-bf78-21fd90df671f","n, k = map(int, input().split())
a = list(map(int, input().split()))
ct = 0
max_ct = 0
for i in range(n - 1):
    if a[i] != a[i + 1]:
        ct += 1
    else:
        ct += 1
        if ct > max_ct:
            max_ct = ct
        ct = 0
if ct != 0:
    if max_ct < (ct + 1):
        max_ct = ct + 1
print(max_ct)","0.0"
"5986f14f-59c5-428e-84aa-553175c8bdb9","a1,b1=map(int,input().split())
n=int(input())
s=a1*b1
if s%9==0:
	print(""NO"")
	print(s%9)
else:
	print(""YES"")
	c=n-(s//9)
	print(c)
","0.0"
"5986f14f-59c5-428e-84aa-553175c8bdb9","a,b = map(int, input().split())
n = int(input())

s = a*b
sn = n*9
sem = (a*b)//9

if s >= sn:
	print('NO')
	print(0)
else:
	print('YES')
	print(n - sem)
","0.0"
"6dcac6bd-9973-47eb-8912-187a2999dc6b","n = int(input())
m = [int(x) for x in input().split()]

for i in range(n):
    for j in range(n):
        if i != j:
            r = m[i] - m[j]
            if r > 0 and r not in m:
                n+=1
                m.append(r)
            elif r < 0 and -r not in m:
                n+=1
                m.append(-r)
print(n)","0.0"
"5986f14f-59c5-428e-84aa-553175c8bdb9","a, b = [int(i) for i in input().split()]
n = int(input())
if a*b < 9*n:
    print('YES', f'{(9*n-a*b)//9+1}', sep='
')
else:
    print('NO', 0, sep='
')","0.0"
"43690a23-0ff2-4f9b-8410-ec7917ae05e3","n=int(input())
sosul=[]
sum=0
a=input().split()
for i in a:
    sosul.append(int(i))
for i in range(0,n):
    sum+=sosul[i]-min(sosul)
print(sum)","0.0"
"43690a23-0ff2-4f9b-8410-ec7917ae05e3","a = int(input())
c = [int(a) for a in input().split()]
m = min(c)
k =0
for i in range(a):
    k+=c[i]-m
print(k)","0.0"
"5986f14f-59c5-428e-84aa-553175c8bdb9","a,b=map(int,input().split())
n=int(input())
s=a*b
if s%9==0:
	print(""NO"")
	print(0)
else:
	print(""YES"")
	c=n-(s//9)
	print(c)
","0.0"
"6dcac6bd-9973-47eb-8912-187a2999dc6b","_= input() # ÐºÐ¾Ð»Ð¸ÑÐµÑÑÐ²Ð¾ ÑÐ¸ÑÐµÐ»
n = input().split()
n = list(map(int, n))

zapas = n

while True:
    for i in range(len(n)):
        for j in range(len(n)):
            if abs(n[i]-n[j]) not in zapas:
                zapas.append(abs(n[i]-n[j]))
    if zapas == n:
        break
    else:
        n = zapas
del n[n.index(0)]
print(len(n))
","0.0"
"5986f14f-59c5-428e-84aa-553175c8bdb9","a,b=map(int,input().split())
n=int(input())
s=a*b
c=0
if s%9==0:
	print(""NO"")
	print(c)
else:
	print(""YES"")
	c=n-(s//9)
	print(c)
","0.0"
"5986f14f-59c5-428e-84aa-553175c8bdb9","a,b=map(int,input().split())
n=int(input())
if a*b/9<=9*n:
    print(""YES"")
    print(n-a*b//9)
else:
    print(""NO"")
    print(0)","0.0"
"5986f14f-59c5-428e-84aa-553175c8bdb9","a, b = map(int, input().split())
k = int(input())
if (a * b) / k < 9:
    print(""YES"")
    print (k-a*b//9)
else:
    print(""NO"")
    print(0)","0.0"
"5986f14f-59c5-428e-84aa-553175c8bdb9","a, b = map(int, input().split())
k = int(input())
if (a * b) / k < 9:
    print(""YES"")
    print (k-a*b//9)
else:
    print(""NO"")
    print(0)","0.0"
"ae532d4a-9564-46c8-a30b-9f1fe7f95bf9","a = [int(i) for i in input().split()]
c = 1
b = int(input())
for i in range(b):
    h = input().lstrip()
    if h == ""sausage"" or h == ""sausage "":
        c *= a[0]
    if h == ""cheese"" or h == ""cheese "":
        c *= a[1]
    if h == ""ketchup"" or h == ""ketchup "":
        c *= a[2]
print(c)","0.0"
"5986f14f-59c5-428e-84aa-553175c8bdb9","a,b=map(int,input().split())
n=int(input())
if a*b/9<=9*n:
    print(""YES"")
    print(n-a*b//9)
else:
    print(""NO"")
    print(0)","0.0"
"5986f14f-59c5-428e-84aa-553175c8bdb9","a,b = map(int, input().split())
n = int(input())
s = a * b
k = s // 9
if k > n:
    print(""NO"")
    print(0)
elif k < n:
    print(""YES"")
    print(n - k)
else:
    print(""NO"")
    print(0)","0.0"
"43690a23-0ff2-4f9b-8410-ec7917ae05e3","n = int(input())
i = [int(n) for n in input().split()]
e = min(i)
count=0
for j in range(n): count = count+i[j]-e
print(count)
","0.0"
"5986f14f-59c5-428e-84aa-553175c8bdb9","a, b = map(int, input().split())
k = int(input())
if k == 0:
    print(""NO"")
    print(0)
if (a * b) / k < 9:
    print(""YES"")
    print (k-a*b//9)
else:
    print(""NO"")
    print(0)
","0.0"
"5986f14f-59c5-428e-84aa-553175c8bdb9","a,b=map(int,input().split())
n=int(input())
s=a*b
c=0
if s>=n*9:
	print(""NO"")
	print(c)
else:
	print(""YES"")
	c=n-(s//9)
	print(c)
","0.0"
"5986f14f-59c5-428e-84aa-553175c8bdb9","a, b = map(int, input().split())
k = int(input())
if k == 0:
    print(""NO"")
    print(0)
if (a * b) / k < 9:
    print(""YES"")
    print (k-a*b//9)
else:
    print(""NO"")
    print(0)
","0.0"
"5986f14f-59c5-428e-84aa-553175c8bdb9","a1,b1=map(int,input().split())
n=int(input())
s=a1*b1
Ñ=0
if s>=n*9:
	print(""NO"")
	print(Ñ)
else:
	print(""YES"")
	c=n-(s//9)
	print(c)
","0.0"
"5986f14f-59c5-428e-84aa-553175c8bdb9","# inputs
dimensions = input()
amount = input()
width, height = dimensions.split("" "")

# converts
width = int(width)
height = int(height)
amount = int(amount)

need = amount * 9
exists = width * height

if need <= exists:
	print(""NO"")
	print(0)
else:
	print(""YES"")
	print((need-exists) // 9 + 1)
","0.0"
"ae532d4a-9564-46c8-a30b-9f1fe7f95bf9","a = [int(i) for i in input().split()]
c = 1
b = int(input())
for i in range(b):
    h = input().lstrip()
    if h == ""sausage"" or h == ""sausage "":
        c *= a[0]
    if h == ""cheese"" or h == ""cheese "":
        c *= a[1]
    if h == ""ketchup"" or h == ""ketchup "":
        c *= a[2]
if b == 0:
    print(0)
else:
    print(c)","0.0"
"5986f14f-59c5-428e-84aa-553175c8bdb9","a,b=map(int,input().split())
n=int(input())
if n==0:
    print(""NO"")
    print(0)
elif a*b/9<=9*n:
    print(""YES"")
    print(n-a*b//9)
else:
    print(""NO"")
    print(0)
","0.0"
"5177ddd2-f17e-4d0a-bf78-21fd90df671f","n, k = map(int,input().split())
mas = list(map(int,input().split()))
pr = mas[0]
c = 1
mx = 0
for i in mas[1:]:
    if i != pr:
        c+=1
    else:
        mx = max(mx,c)
        c = 1
    pr = i
mx = max(mx,c)
print(mx)
","0.0"
"43690a23-0ff2-4f9b-8410-ec7917ae05e3","n = int(input())
a = list(map(int, input().split()))
ans = 0
s = min(a)

for i in a:
	ans += i - s
print(ans)
","0.0"
"5986f14f-59c5-428e-84aa-553175c8bdb9","a,b = map(int, input().split())
n = int(input())
if n <= a*b//9:
    print(""NO"")
    pritn(0)
else:
    print(""YES"")
    print(n - a*b//9)","0.0"
"5177ddd2-f17e-4d0a-bf78-21fd90df671f","a, b = map(int, input().split())
b1 = list(map(int, input().split()))
b1.append(b1[-1])
c = []
c1 = 0
for i in range(a):
    if b1[i] != b1[i+1]:
        for j in range(i,a):
            if b1[j]!=b1[j+1]:
                c1 += 1
            else:
                c.append(c1)
                c1 = 0
                break
print(max(c)+1)

","0.0"
"ae532d4a-9564-46c8-a30b-9f1fe7f95bf9","a = [int(i) for i in input().split()]
c = 1
b = int(input())
for i in range(b):
    h = input().lstrip()
    if ""sausage"" in h:
        c *= a[0]
    if ""cheese"" in h:
        c *= a[1]
    if ""ketchup""in h:
        c *= a[2]
if b == 0:
    print(0)
else:
    print(c)","0.0"
"ae532d4a-9564-46c8-a30b-9f1fe7f95bf9","s1, s2, s3 = map(int, input().split())
n = int(input())
mas = []
for a in range(n):
    b = input()
    mas.append(b)
s = 1
if 'sausage' in mas:
    s = s * s1
if 'cheese' in mas:
    s = s * s2
if 'ketchup' in mas:
    s = s * s3

print(s)

","0.0"
"5986f14f-59c5-428e-84aa-553175c8bdb9","a, b = map(int, input().split())
k = int(input())
if k == 0:
    print(0)
if (a * b) / k < 9:
    print(""YES"")
    print (k-a*b//9)
else:
    print(""NO"")
    print(0)
","0.0"
"43690a23-0ff2-4f9b-8410-ec7917ae05e3","input()
l = [int(x) for x in input().split()]
minim = min(l)
print(sum([x-minim for x in l]))","0.0"
"5986f14f-59c5-428e-84aa-553175c8bdb9","a, b = map(int, input().split())
k = int(input())
if k == 0:
    print(0)
if (a * b) / k < 9:
    print(""YES"")
    print (k-a*b//9)
else:
    print(""NO"")
    print(0)
","0.0"
"ae532d4a-9564-46c8-a30b-9f1fe7f95bf9","a = [int(i) for i in input().split()]
c = 1
b = int(input())
for i in range(b):
    h = input()
    if ""sausage"" in h:
        c *= a[0]
    if ""cheese"" in h:
        c *= a[1]
    if ""ketchup""in h:
        c *= a[2]
if b == 0:
    print(0)
else:
    print(c)","0.0"
"43690a23-0ff2-4f9b-8410-ec7917ae05e3","input()
l = [int(x) for x in input().split()]
minim = min(l)
print(sum([x-minim for x in l]))","0.0"
"43690a23-0ff2-4f9b-8410-ec7917ae05e3","n=int(input())
d=list(map(int, input().split()))[:n]
b=min(d)
b1=b*n
print(sum(d)-b1)
","0.0"
"5986f14f-59c5-428e-84aa-553175c8bdb9","a, b = map(int, input().split())
n = int(input())
if n <= a * b // 9:
    print(""NO"")
    pritn(0)
else:
    print(""YES"")
    print(n - a * b // 9)","0.0"
"5986f14f-59c5-428e-84aa-553175c8bdb9","a, b = map(int, input().split())
k = int(input())
if k == 0:
    print(0)
elif (a * b) / k < 9:
    print(""YES"")
    print (k-a*b//9)
else:
    print(""NO"")
    print(0)
","0.0"
"ae532d4a-9564-46c8-a30b-9f1fe7f95bf9","s1, s2, s3 = map(int, input().split())
n = int(input())
mas = []
for a in range(n):
    b = input()
    mas.append(b)
s = 1
if 'sausage' in mas and s1 != 0:
    s = s * s1
if 'cheese' in mas and s2 != 0:
    s = s * s2
if 'ketchup' in mas and s3 != 0:
    s = s * s3

print(s)","0.0"
"ae532d4a-9564-46c8-a30b-9f1fe7f95bf9","k, sir, cous = map(int, input().split())
n = int(input())
a = []
ct = 1
for i in range(n):
    a.append(input().strip())
for i in a:
    if i == ""sausage"":
        ct *= k
    elif i == ""cheese"":
        ct *= sir
    else:
        ct *= cous
print(ct)","0.0"
"5986f14f-59c5-428e-84aa-553175c8bdb9","a, b = map(int, input().split())
k = int(input())
if k == 0:
    print(0)
elif (a * b) / k <= 9:
    print(""YES"")
    print (k-a*b//9)
else:
    print(""NO"")
    print(0)
","0.0"
"ae532d4a-9564-46c8-a30b-9f1fe7f95bf9","a = [int(i) for i in input().split()]
c = 1
b = int(input())
for i in range(b):
    h = input().lower()
    if ""sausage"" in h:
        c *= a[0]
    if ""cheese"" in h:
        c *= a[1]
    if ""ketchup"" in h:
        c *= a[2]
if b == 0:
    print(0)
else:
    print(c)","0.0"
"ae532d4a-9564-46c8-a30b-9f1fe7f95bf9","s1, s2, s3 = [int(i) for i in input().split()]
ans = 1
for i in range(int(input())):
    k = input()
    if k == 'sausage':
        ans*=s1
    elif k == 'cheese':
        ans*=s2
    else:
        ans*=s3
print(ans)
        

","0.0"
"5177ddd2-f17e-4d0a-bf78-21fd90df671f","n, k = map(int,input().split())
a = [int(x) for x in input().split()]
mx = 0
l = 0
r = 1
if n != 1:
    while r <= n - 1:
        if a[r] != a[r - 1]:
            if r - l + 1 > mx:
                mx = r - l + 1
            r += 1
        else:
            l = r
            r += 1
    print(mx)
else:
    print(1)","0.0"
"5177ddd2-f17e-4d0a-bf78-21fd90df671f","a, b = map(int, input().split())
b1 = list(map(int, input().split()))
b1.append(b1[-1])
c = []
c1 = 1
for i in range(a):
    if b1[i] != b1[i+1]:
        c1 += 1
    else:
        c.append(c1)
        c1 = 1
print(max(c))","0.0"
"ae532d4a-9564-46c8-a30b-9f1fe7f95bf9","a = [int(i) for i in input().split()]
c = 1
b = int(input())
for i in range(b):
    h = input().lower()
    if ""sausage"" in h:
        c *= a[0]
    elif ""cheese"" in h:
        c *= a[1]
    elif ""ketchup"" in h:
        c *= a[2]
if b == 0:
    print(0)
else:
    print(c)","0.0"
"5177ddd2-f17e-4d0a-bf78-21fd90df671f","n,k=map(int,input().split())
a=list(map(int,input().split()))
t=0
ma=0
for i in range (len(a)-1):
    if a[i]!=a[i+1]:
        t+=1
    else:
        ma=max(ma,t)
        t=0
if t>0:
    print(max(ma,t+1))
else:
    print(ma+1)




","0.0"
"5177ddd2-f17e-4d0a-bf78-21fd90df671f","def f():
    n, k = map(int, input().split())
    a = list(map(int, input().split()))
    ans = 0
    now = 1
    for i in range(1, n):
        if a[i] != a[i - 1]:
            now += 1
        else:
            ans = max(ans, now)
            now = 1
    if now:
        ans = max(ans, now)
    print(ans)


f()","0.0"
"5986f14f-59c5-428e-84aa-553175c8bdb9","a, b = map(int, input().split())
n = int(input())
ab9 = a * b // 9
if n <= ab9:
    print(""NO"")
    print(0)
else:
    print(""YES"")
    diff = n - ab9
    print(diff)","0.0"
"5986f14f-59c5-428e-84aa-553175c8bdb9","a,b=map(int,input().split())
n=int(input())
if (a*b)/9<=n:
    print(""YES"")
    print(n-((a*b)//9))
else:
    print(""NO"")
    print(0)
","0.0"
"430aade4-55bd-42b3-9586-1389412540a7","n = int(input())
s = 0
while n != 1:
    n -= (n // 2)
    s += 1
print(s)","0.0"
"5986f14f-59c5-428e-84aa-553175c8bdb9","a, b = map(int, input().split())
n=int(input())
c=a*b//9
if c>=n:
    print('NO')
    print(0)
elif c<n:
    print('YES')
    print(n-c)
    
","0.0"
"5177ddd2-f17e-4d0a-bf78-21fd90df671f","s = input().split()
n = int(s[0])
k = int(s[1])
l = 1
ml = 1
m = [int(x) for x in input().split()]
for i in range(n-1):
    if m[i] != m[i+1]:
        l+=1
        if ml < l:
            ml = l
    else:

        l=1


print(ml)","0.0"
"5986f14f-59c5-428e-84aa-553175c8bdb9","a, b = map(int, input().split())
k = int(input())
if (a * b) / 9 <= k:
    print(""YES"")
    print (k-(a*b//9))
else:
    print(""NO"")
    print(0)","0.0"
"43690a23-0ff2-4f9b-8410-ec7917ae05e3","n = int(input())
a = input()
s = a.split()
a = [int(x) for x in s]
sss = 0
mm = 100000000
for i in a:
    mm = min(mm, i)
for j in a:
    sss += (j - mm)
print(sss)","0.0"
"43690a23-0ff2-4f9b-8410-ec7917ae05e3","# inputs
amount = int(input())
values = input().split("" "")

if amount == 1:
	print(0)
else:
	# find min
	values[0] = int(values[0])
	m = values[0]

	for i in range(1, amount):
		values[i] = int(values[i]) # converting

		if values[i] < m:
			m = values[i]
			if m == 1: # can't be lower
				break

	out = 0
	for item in values:
		out += item - m

	print(out)
","0.0"
"430aade4-55bd-42b3-9586-1389412540a7","import math
a = int(input())
a = math.log(a, 2)
print(math.ceil(a))","0.0"
"5986f14f-59c5-428e-84aa-553175c8bdb9","a, b = map(int, input().split())
n = int(input())

max_plants = (a * b) // 9

# ÐÑÐ»Ð¸ ÐºÐ¾Ð»-Ð²Ð¾ ÑÐµÐ¼ÑÐ½ Ð¸Ð·Ð±ÑÑÐ¾ÑÐ½Ð¾Ðµ
if max_plants < n:
    print('YES')
    print(n - max_plants)
# ÐÑÐ»Ð¸ ÐºÐ¾Ð»-Ð²Ð¾ ÑÐµÐ¼ÑÐ½ Ð² Ð½Ð¾ÑÐ¼Ðµ
else:
    print('NO')
    print(0)
","0.0"
"5986f14f-59c5-428e-84aa-553175c8bdb9","lens, widg = map(int, input().split())
kolv = int(input())
total = lens * widg // 9
if kolv <= total:
    print(""NO"")
    print(0)
else:
    print(""YES"")
    normal = kolv - total
    print(normal)","0.0"
"5986f14f-59c5-428e-84aa-553175c8bdb9","a, b = map(int, input().split())
n = int(input())
w = a * b // 9
if n <= w:
    print(""NO"")
    print(0)
else:
    print(""YES"")
    s = n - w
    print(s)","0.0"
"ae532d4a-9564-46c8-a30b-9f1fe7f95bf9","a, b, c = map(int,input().split())
n = int(input())
k = 1
mas = []
for i in range(n):
    s = input()
    mas.append(s)
mas = set(mas)
for i in mas:
    if i == 'sausage':
        k*=a
    elif i == 'ketchup':
        k*=c
    elif i == 'cheese':
        k*=b
print(k)
","0.0"
"5177ddd2-f17e-4d0a-bf78-21fd90df671f","n,k=map(int,input().split())
a=list(map(int,input().split()))
t=0
ma=0
for i in range (len(a)-1):
    if a[i]!=a[i+1]:
        t+=1
    else:
        ma=max(ma,t+1)
        t=0
if t>0:
    print(max(ma,t+1))
else:
    print(ma+1)
","0.0"
"ae532d4a-9564-46c8-a30b-9f1fe7f95bf9","def f():
    s1, s2, s3 = map(int, input().split())
    n = int(input())
    a = [input() for i in range(n)]
    ans = 1
    for i in a:
        if i == ""sausage"":
            ans *= s1
        if i == ""ketchup"":
            ans *= s3
        if i == ""cheese"":
            ans *= s2
    print(ans)


f()","0.0"
"43690a23-0ff2-4f9b-8410-ec7917ae05e3","n = int(input())
a = list(map(int, input().split()))
r = 0
b = min(a)
for i in range(n):
    r += a[i] - b 
print(r)
","0.0"
"ae532d4a-9564-46c8-a30b-9f1fe7f95bf9","a, b, c = map(int,input().split())
k = int(input())
l = []
for i in range(k):
    g = input()
    if g == 'sausage':
        l.append(a)
    elif g == 'cheese':
        l.append(b)
    else:
        l.append(c)
v = 1
for x in range(k):
    v *= l[x]
print(v)","0.0"
"ae532d4a-9564-46c8-a30b-9f1fe7f95bf9","def f():
    s1, s2, s3 = map(int, input().split())
    n = int(input())
    a = [input() for i in range(n)]
    ans = 1
    for i in a:
        if i == ""sausage"":
            ans *= s1
        if i == ""ketchup"":
            ans *= s3
        if i == ""cheese"":
            ans *= s2
    print(ans if ans != 1 else 0)


f()","0.0"
"43690a23-0ff2-4f9b-8410-ec7917ae05e3","x = int(input())
n = list(map(int, input().split()))
minimal = min(n)
s = 0
for i in n:
    j = i - minimal
    s += j
print(s)
","0.0"
"43690a23-0ff2-4f9b-8410-ec7917ae05e3","domov = int(input())
sosyl = list(map(int, input().split()))
c = 0
if max(sosyl) != min(sosyl):
    while max(sosyl) != min(sosyl):
        sosyl[sosyl.index(max(sosyl))] = sosyl[sosyl.index(max(sosyl))] - 1
        c += 1
    print(c)
else:
    print('0')
","0.0"
"ae532d4a-9564-46c8-a30b-9f1fe7f95bf9","a, b, c = map(int,input().split())
n = int(input())
k = 1
mas = []
for i in range(n):
    s = input()
    mas.append(s)
for i in mas:
    if i == 'sausage':
        k*=a
    elif i == 'ketchup':
        k*=c
    elif i == 'cheese':
        k*=b
print(k)
","0.0"
"ae532d4a-9564-46c8-a30b-9f1fe7f95bf9","a=input().split()
s1=int(a[0])
s2=int(a[1])
s3=int(a[2])
n1=1
n2=1
n3=1
n=int(input())
for i in range(n):
    s=input()
    if s[0]=='s':
        n1=s1
    if s[0]=='c':
        n2=s2
    if s[0]=='k':
        n3=s3
print(n1*n2*n3)","0.0"
"ae532d4a-9564-46c8-a30b-9f1fe7f95bf9","def f():
    s1, s2, s3 = map(int, input().split())
    n = int(input())
    a = [input() for i in range(n)]
    ans = 1
    for i in a:
        if i == ""sausage"":
            ans *= s1 if s1 != 0 else 1
        if i == ""ketchup"":
            ans *= s3 if s3 != 0 else 1
        if i == ""cheese"":
            ans *= s2 if s2 != 0 else 1
    print(ans if ans != 1 else 0)


f()","0.0"
"5177ddd2-f17e-4d0a-bf78-21fd90df671f","n = input() # n, k
s = input().split() # ak1, ak2, ak3
s = list(map(int, s))
x = 0
m = 0
#p = list()
for i in range(len(s)):
    try:
        if s[i] != s[i+1]:
            x += 1
            #p.append(s[i])
        else:
            x += 1
            if x > m:
                m = x
                x = 0
            else:
                x = 0
            #p.append(s[i])
            #p.append(' | '+str(m)+' | ')
    except IndexError:
        x += 1
        if x > m:
            m = x
        #p.append(s[i])
print(m)
","0.0"
"5986f14f-59c5-428e-84aa-553175c8bdb9","a, b = map(int, input().split())
n = int(input())
count = a * b // 9
if n <= count:
    print(""NO"")
    print(0)
else:
    print(""YES"")
    count1 = n - count
    print(count1)","0.0"
"5177ddd2-f17e-4d0a-bf78-21fd90df671f","n, k = map(int, input().split())
a = [int(n) for n in input().split()]
kol = []
f = 1
for i in range(1, n):
    if a[i]!=a[i-1]:
        f+=1
    else:
        f = 1
    kol.append(f)
print(max(kol))","0.0"
"84b45b43-cc73-4b14-ab6e-8b970134fb03","n, m = map(int, input().split())
s = (1+n) / 2 * n
l = m % s
i = 1
while l >= i:
    l -= i
    i += 1
print(int(l))","0.0"
"ae532d4a-9564-46c8-a30b-9f1fe7f95bf9","a, b, c = map(int, input().split())
c1 = int(input())
b1 = []
for i in range(c1):
    b1.append(input())
if b1.count('sausage') ==0:
    a = 1
if b1.count('ketchup') == 0:
    b = 1
if b1.count('cheese') == 0:
    c = 1
if len(b1)==0:
    print(0)
else:
    print(a*b*c)","0.0"
"ae532d4a-9564-46c8-a30b-9f1fe7f95bf9","a=input().split()
b=int(input())
e=[]
g=[""sausage"", ""cheese"", ""ketchup""]
d=0
for i in range(b):
    c=input()
    e.append(g.index(c))
if b==0:
    print(1)
elif b==1:
    print(a[e[0]])
elif b==2:
    d=int(a[e[0]])*int(a[e[1]])
    print(d)
elif b==3:
    d = int(a[e[0]]) * int(a[e[1]]) * int(a[e[2]])
    print(d)","0.0"
"43690a23-0ff2-4f9b-8410-ec7917ae05e3","domdomov = int(input())
sosyl = list(map(int, input().split()))
c = 0
if max(sosyl) != min(sosyl):
    while max(sosyl) != min(sosyl):
        s = sosyl.index(max(sosyl))
        sosyl[s] = sosyl[s] - 1
        c += 1
    print(c)
else:
    print('0')","0.0"
"430aade4-55bd-42b3-9586-1389412540a7","n = int(input())
l = 0
while n > 1:
    n -= (n // 2)
    l += 1
print(l)","0.0"
"ae532d4a-9564-46c8-a30b-9f1fe7f95bf9","m = input().split()
s1 = int(m[0])
s2 = int(m[1])
s3 = int(m[2])
n = int(input())
v= 1
s = ''
for i in range(n):
    s = input()
    if s == 'sausage':
        v=s1*v

    elif s == 'ketchup':
        v=v*s3

    elif s == 'cheese':
        v=v*s2

print(v)","0.0"
"5fc63383-931c-46cc-a7d1-308dc271fda6","n, d = map(int, input().split())
a = list(map(int, input().split()))
m = int(input())
res = 0
if len(a) >= m:
    res = sum(a)
else:
    a.sort()
    res = sum(a[:m - 1]) - (m - len(a)) * d
print(res)","0.0"
"43690a23-0ff2-4f9b-8410-ec7917ae05e3","domdomov = int(input())
sosyl = list(map(int, input().split()))
c = 0
minn = min(sosyl)
if max(sosyl) != minn:
    while max(sosyl) != minn:
        s = sosyl.index(max(sosyl))
        sosyl[s] = sosyl[s] - 1
        c += 1
    print(c)
else:
    print('0')","0.0"
"5177ddd2-f17e-4d0a-bf78-21fd90df671f","a, b = map(int,input().split())
array = [int(s) for s in input().split()]

counter = 0
maxi = 0

for i in range(len(array) - 1):
    if array[i] != array[i + 1]:
        counter += 1
    else:
        if counter > maxi:
            maxi = counter
        counter = 0
if counter > maxi:
    maxi = counter
print(maxi + 1)

","0.0"
"ae532d4a-9564-46c8-a30b-9f1fe7f95bf9","s1, s2, s3 = [int(i) for i in input().split()]
ans = 1
for i in range(int(input())):
    k = input()
    if k in 'sausage ':
        ans *= s1
    elif k in 'cheese ':
        ans*=s2
    elif k in 'ketchup ':
        ans*=s3
print(ans)
        

","0.0"
"430aade4-55bd-42b3-9586-1389412540a7","n = int(input())
k = 0
while n != 1:
    if n % 2 == 1:
        n -= 1
        k += 2
        n = n // 2
    else:
        n = n // 2
        k += 1
print(k)","0.0"
"d0e35e20-e37a-4750-8c0b-7641a3b72277","n = int(input())
m = list(map(int, input().split())) 
max_weight = max(m)  
num_trucks = 0  
while m:
    current_weight = 0  
    current_cargo = [] 
    for i in range(len(m)):
        if m[i] + current_weight <= 4 and m[i] <= max_weight:
            current_weight += m[i]
            current_cargo.append(i)
    for i in reversed(current_cargo):
        m.pop(i)
    num_trucks += 1

print(num_trucks)","0.0"
"5fc63383-931c-46cc-a7d1-308dc271fda6","n, d = map(int, input().split())
a = list(map(int, input().split()))
m = int(input())
a.sort()
ans = sum(a[:m])
if m > n:
    ans -= d * (m - n)
print(ans)","0.0"
"5986f14f-59c5-428e-84aa-553175c8bdb9","a,b=map(int,input().split())
n=int(input())
if a*b//9>=n:
    print(""NO"")
    print(""0"")
else:
    print(""YES"")
    print(n-a*b//9)
","0.0"
"ae532d4a-9564-46c8-a30b-9f1fe7f95bf9","import sys
s1, s2, s3 = map(int, input().split())
n = int(input())
a = sys.stdin.readlines()
if n == 2:
    print(s1 * s2)
elif n == 3:
    print(s1 * s2 * s3)
else:
    print(s1)","0.0"
"5177ddd2-f17e-4d0a-bf78-21fd90df671f","n, k = map(int, input().split())
a = [int(i) for i in input().split()]
a.append(0)
q = 1
s = 1
for i in range(1,n):
    if a[i] != a[i-1]:
        s += 1
        if q < s:
            q = s
    else:
        s = 1
print(q)
","0.0"
"430aade4-55bd-42b3-9586-1389412540a7","n = int(input())
s = 0
while n != 1:
    n -= (n // 2)
    s += 1
print(s)","0.0"
"5177ddd2-f17e-4d0a-bf78-21fd90df671f","n,k = map(int,input().split())
a = [int(n) for n in input().split()]
m=1
c=1
for i in range(1, n):
    if a[i] != a[i-1]:
        c+=1
        m = max(c,m)
    else:
        c = 1
print(m)
","0.0"
"430aade4-55bd-42b3-9586-1389412540a7","n = int(input())
s = 0
while n != 1:
    n -= (n // 2)
    s += 1
print(s)
","0.0"
"43690a23-0ff2-4f9b-8410-ec7917ae05e3","n = int(input())
a = list(map(int,input().split()))
a.sort()
x = a[0]
c = 0
for i in a:
	c += i - x	
print(c)
","0.0"
"ae532d4a-9564-46c8-a30b-9f1fe7f95bf9","
a=list(map(int,input().split()))
n=int(input())
p=1
for i in range (n):
    s=input().replace(' ','')
    if s=='sausage':
        p=p*a[0]
    if s=='cheese':
        p=p*a[1]
    if s == 'ketchup':
        p=p* a[2]
print(p)




","0.0"
"5fc63383-931c-46cc-a7d1-308dc271fda6","n, d = map(int, input().split())
a = list(map(int, input().split()))
m = int(input())
res = 0
a.sort()
if len(a) >= m:
    res = sum(a[:m])
else:
    res = sum(a[:m]) - (m - len(a)) * d
print(res)","0.0"
"ae532d4a-9564-46c8-a30b-9f1fe7f95bf9","a, b, c = map(int,input().split())
k = int(input())
l = []
for i in range(k):
    g = input()
    g = g.replace(' ', '')
    if g == 'sausage':
        l.append(a)
    elif g == 'cheese':
        l.append(b)
    elif g == 'ketchup':
        l.append(c)
v = 1
for x in range(k):
    v *= l[x]
print(v)
","0.0"
"430aade4-55bd-42b3-9586-1389412540a7","def f():
    n = int(input())
    ans = 0
    while n > 1:
        n = (n+1)//2
        ans += 1
    print(ans)


f()","0.0"
"ae532d4a-9564-46c8-a30b-9f1fe7f95bf9","s,c,k = map(int, input().split())
n = int(input())
sp= []
spall = []
spall.append('sausage')
spall.append('ketchup')
spall.append('cheese')
z = 0
spl = []
for i in range(0,n):
    sp.append(input())
if len(sp) == 3:
    print(s*k*c)
else:
    for j in sp:
        z+=1
        if sp[len(sp)-z] != spall[z]:
            spl.append(spall[z])
    spl.pop()
    if spl[0] == 'sausage':
        print(k*c)
    if spl[0] == 'ketchup':
        print(s*c)
    else:
        print(s*k)
","0.0"
"430aade4-55bd-42b3-9586-1389412540a7","n = int(input())
c =0
while n != 1:
    if n%2 == 0:
        n//=2
    else:
        n = n//2 +1
    c+=1
print(c)","0.0"
"5177ddd2-f17e-4d0a-bf78-21fd90df671f","n, k = map(int, input().split())
colors = list(map(int, input().split()))

max_length = 0
current_length = 1
for i in range(1, n):
    if colors[i] != colors[i-1]:
        current_length += 1
    else:
        max_length = max(max_length, current_length)
        current_length = 1

max_length = max(max_length, current_length)

print(max_length)","0.0"
"ae532d4a-9564-46c8-a30b-9f1fe7f95bf9","n = input().split() # meat, cheese, ketchup
n = list(map(int, n))
l = int(input())
x = 1
for i in range(l):
    inp = input()
    if inp == 'sausage':
        x *= n[0]
    elif inp == 'ketchup':
        x *= n[2]
    else:
        x *= n[1]
print(x)","0.0"
"430aade4-55bd-42b3-9586-1389412540a7","import math
a = int(input())
if math.log2(a) % 1 != 0:
    a = int(math.log2(a)//1+1)
else:
    a = int(math.log2(a))
print(a)
","0.0"
"5fc63383-931c-46cc-a7d1-308dc271fda6","n, d = map(int, input().split())
a = list(map(int, input().split()))
h = int(input())
a.sort()
s = sum(a[:h])
if h > n:
    s -= d * (h - n)
print(s)","0.0"
"2335ee80-a2b1-4e2b-93c1-b3bc7d2720e8","a = int(input())
for i in range(a):
    n = int(input())
    for j in range(1,n + 1):
        if n // j  <= n % j:
            print(j)
            break
","0.0"
"430aade4-55bd-42b3-9586-1389412540a7","n = int(input())
k = 0
while n != 1:
    if n % 2 == 1:
        n -= 1
        k += 2
        n = n // 2
    else:
        n = n // 2
        k += 1
if k >= 7:
    print(7)
else:
    print(k)","0.0"
"430aade4-55bd-42b3-9586-1389412540a7","n = int(input())
k = 0
while n != 1:
    n = n - n//2
    k += 1
print(k)
","0.0"
"5986f14f-59c5-428e-84aa-553175c8bdb9","x1,y1=map(int,input(). split())
n=int(input())
if x1*y1//9>=n:
	print('NO')
	print('0')
else:
	print('YES')
	print(n-x1*y1//9)	
","0.0"
"9acc7b61-f8ac-4953-8b12-651c2d7f8d48","a, b, c = [int(i) for i in input().split()]
g = [['.'] * b for i in range(a)]
for i in range(c):
    h = chr(97 + i)
    x1, y1, x2, y2 = [int(i) for i in input().split()]
    for j in range(x1 - 1, x2):
        g[j][y1 - 1] = h
        g[j][y2 - 1] = h
    for j in range(y1 - 1, y2):
        g[x1 - 1][j] = h
        g[x2 - 1][j] = h

for i in g:
    print(*i, sep="""")","0.0"
"84b45b43-cc73-4b14-ab6e-8b970134fb03","def f():
    n, m = map(int, input().split())
    now = m % sum([i for i in range(1, n + 1)])
    for i in range(1, n + 1):
        if now - i >= 0:
            now -= i
        else:
            print(now)
            break


f()","0.0"
"ae532d4a-9564-46c8-a30b-9f1fe7f95bf9","s1, s2, s3 = map(int, input().split())
n = int(input())
o = 1
for i in range(n):
    z = input()
    if z == 'sausage': o*=s1
    if z == 'cheese': o *= s2
    if z == 'ketchup': o *= s3
print(o)","0.0"
"43690a23-0ff2-4f9b-8410-ec7917ae05e3","n=int(input())
a= list(map(int, input().split()))
a.sort()
m = a[0]
r=0
for i in a:
	r+= i - m
print(r)
","0.0"
"43690a23-0ff2-4f9b-8410-ec7917ae05e3","n = int(input())
a = list(map(int, input().split()))

b = min(a)

def double(integer):
    return integer-b

v = list(map(double, a))

print(sum(v))","0.0"
"5986f14f-59c5-428e-84aa-553175c8bdb9","a1,b1=map(int,input(). split())
n1=int(input())
if a1*b1//9>=n1:
	print(""NO"")
	print(""0"")
else :
	print(""YES"")
	print(n1-a1*b1//9)
	
","0.0"
"43690a23-0ff2-4f9b-8410-ec7917ae05e3","domdomov = input()
sosyl = list(map(int, input().split()))
c = 0
minn = min(sosyl)
if max(sosyl) != minn:
    while max(sosyl) != minn:
        s = sosyl.index(max(sosyl))
        sosyl[s] = sosyl[s] - 1
        c += 1
    print(c)
else:
    print(0)","0.0"
"5986f14f-59c5-428e-84aa-553175c8bdb9","a,b = map(int,input().split())
n = int(input())
s = (a*b)
b = (s//9)
if (b<n):
    print (""YES"")
    print (round(n-b))
else:
    print (""NO"")
    print (0)
","0.0"
"5fc63383-931c-46cc-a7d1-308dc271fda6","n, d = map(int, input().split())    # n - ÐºÐ¾Ð»-Ð²Ð¾ Ð¼ÐµÑÑ Ð½Ð° Ð¿Ð°ÑÐºÐ¾Ð²ÐºÐµ; d - ÑÑÐ¼Ð¼Ð° ÑÑÑÐ°ÑÐ°
parking_cost = list(map(int, input().split()))  # Ð¡ÑÐ¾Ð¸Ð¼Ð¾ÑÑÑ Ð¿Ð°ÑÐºÐ¾Ð²Ð¾ÑÐ½ÑÑ Ð¼ÐµÑÑ
m = int(input())    # ÐÐ¾Ð»-Ð²Ð¾ Ð¿Ð¾ÑÐµÑÐ¸ÑÐµÐ»ÐµÐ¹

parking_cost.sort()

# ÐÑÐ»Ð¸ ÐºÐ¾Ð»-Ð²Ð¾ Ð¿Ð¾ÑÐµÑÐ¸ÑÐµÐ»ÐµÐ¹ Ð±Ð¾Ð»ÑÑÐµ ÐºÐ¾Ð»-Ð²Ð° Ð¿Ð°ÑÐºÐ¾Ð²Ð¾ÑÐ½ÑÑ Ð¼ÐµÑÑ
if m > n:
    print(sum(parking_cost) - (m - n) * d)
# ÐÑÐ»Ð¸ ÐºÐ¾Ð»-Ð²Ð¾ Ð¿Ð¾ÑÐµÑÐ¸ÑÐµÐ»ÐµÐ¹ ÑÐ°Ð²Ð½Ð¾ ÐºÐ¾Ð»-Ð²Ñ Ð¼ÐµÑÑ Ð½Ð° Ð¿Ð°ÑÐºÐ¾Ð²ÐºÐµ
elif m == n:
    print(sum(parking_cost))
# ÐÑÐ»Ð¸ ÐºÐ¾Ð»-Ð²Ð¾ Ð¿Ð¾ÑÐµÑÐ¸ÑÐµÐ»ÐµÐ¹ Ð¼ÐµÐ½ÑÑÐµ ÐºÐ¾Ð»-Ð²Ð° Ð¼ÐµÑÑ Ð½Ð° Ð¿Ð°ÑÐºÐ¾Ð²ÐºÐµ
else:
    result = 0
    for index in range(m):
        result += parking_cost[index]

    print(result)","0.0"
"430aade4-55bd-42b3-9586-1389412540a7","n = int(input())
k = 0
while n != 1:
    if n % 2 == 1:
        n -= 1
        k += 2
        n = n // 2
    else:
        n = n // 2
        k += 1
if k >= 7:
    print(7)
else:
    print(k)","0.0"
"430aade4-55bd-42b3-9586-1389412540a7","import math
n = int(input())
k = 0
while n != 1:
    k+=1
    n = math.ceil(n/2)
print(k)
","0.0"
"43690a23-0ff2-4f9b-8410-ec7917ae05e3","n = int(input())
x = input()
mas = []
mas1 = []
mas = x.split()
for i in range(n):
    mas1.append(int(mas[i]))
mini = min(mas1)
summa = sum(mas1)
print(summa - (mini*n))
","0.0"
"5fc63383-931c-46cc-a7d1-308dc271fda6","n,d=map(int,input().split())
a=[int(x) for x in input().split()]
m=int(input())
s=0
if m-n<=0:
    for i in range(m):
        s+=a[i]
else:
    for i in range(n):
        s+=a[i]
    s-=(m-n)*d
print(s)
","0.0"
"ae532d4a-9564-46c8-a30b-9f1fe7f95bf9","a, b, c = map(int,input().split())
k = int(input())
l = []
for i in range(k):
    g = input()
    g = g.replace(' ', '')
    if g == 'sausage':
        l.append(a)
    elif g == 'cheese':
        l.append(b)
    elif g == 'ketchup':
        l.append(c)
v = 1
for x in range(k):
    if l[x] != 0:
        v *= l[x]
print(v)","0.0"
"6dcac6bd-9973-47eb-8912-187a2999dc6b","k = 0
n = int(input())
s = [int(a) for a in input().split()]
for i in range(len(s)):
    for j in range(len(s)):
        if abs(s[i] - s[j]) in s:
            k+=1
        else:
            s.append(abs(s[i]-s[j]))
            n += 1
s.remove(0)
print(n-1)
","0.0"
"5fc63383-931c-46cc-a7d1-308dc271fda6","n,d = map(int, input().split())
a = list(map(int, input().split()))
b = int(input())
a.sort()
c = sum(a[:b])
if b > n:
    c -= d * (b-n)
print(c)","0.0"
"ae532d4a-9564-46c8-a30b-9f1fe7f95bf9","s1, s2, s3 = map(int, input().split())
n = int(input())
o = 1
for i in range(n):
    z = input()
    if z == 'sausage': 
        o*=s1
    if z == 'cheese': 
        o *= s2
    if z == 'ketchup': 
        o *= s3
print(o)
","0.0"
"5177ddd2-f17e-4d0a-bf78-21fd90df671f","n, k = map(int, input().split())
ans = 0
mem = 0
a = input().split()
for i in range(n-1):
    if a[i] != a[i+1]:
        mem += 1
    else:
        ans = max(mem,ans)
        mem = 0
ans = max(mem, ans)
print(ans+1)
        ","0.0"
"84b45b43-cc73-4b14-ab6e-8b970134fb03","a, b = map(int,input().split())
a1 = [*range(1,a+1)]
b = b%sum(a1)
for i in a1:
    if b >= i:
        b-=i
    else:
        break
print(b)
","0.0"
"ae532d4a-9564-46c8-a30b-9f1fe7f95bf9","s1,s2, s3 = map(int,input().split())
a = []
b=[]
c=[]
n = int(input())
for i in range(n):
    b = str(input())
if n==3:
    a.append(s1*s2*s3)
if n ==2:
    a.append(s1*s2)
if n == 1:
    a.append(s1)
print(*a)
","0.0"
"5177ddd2-f17e-4d0a-bf78-21fd90df671f","n, k = map(int, input().split())
a = list(map(int, input().split()))

# Ð¸Ð½Ð¸ÑÐ¸Ð°Ð»Ð¸Ð·Ð°ÑÐ¸Ñ Ð¿ÐµÑÐµÐ¼ÐµÐ½Ð½ÑÑ
curr_len = 1 # ÑÐµÐºÑÑÐ°Ñ Ð´Ð»Ð¸Ð½Ð° ÑÐ°Ð·Ð½Ð¾ÑÐ²ÐµÑÐ½Ð¾Ð³Ð¾ ÑÑÐ°ÑÑÐºÐ°, Ð½Ð°ÑÐ¸Ð½Ð°ÐµÐ¼ ÑÐ¾ ÑÑÐµÑÑÐ¸ÐºÐ° 1, Ñ.Ðº. Ð¿ÐµÑÐ²Ð°Ñ ÑÐµÐºÑÐ¸Ñ Ð¿ÑÐ¸ Ð¿Ð¾Ð´ÑÑÐµÑÐµ Ð±ÑÐ´ÐµÑ Ð¸Ð¼ÐµÑÑ ÑÐ¾Ð»ÑÐºÐ¾ Ð¾Ð´Ð¸Ð½ ÑÐ²ÐµÑ (Ð½Ðµ Ð¸Ð¼ÐµÑ ÑÐ¾ÑÐµÐ´ÐµÐ¹)
max_len = 1 # Ð¼Ð°ÐºÑÐ¸Ð¼Ð°Ð»ÑÐ½Ð°Ñ Ð´Ð»Ð¸Ð½Ð° ÑÐ°Ð·Ð½Ð¾ÑÐ²ÐµÑÐ½Ð¾Ð³Ð¾ ÑÑÐ°ÑÑÐºÐ°, Ð½Ð°ÑÐ¸Ð½Ð°ÐµÐ¼ ÑÐ¾ ÑÑÐµÑÑÐ¸ÐºÐ° 1
prev_color = a[0] # ÑÐ²ÐµÑ Ð¿ÑÐµÐ´ÑÐ´ÑÑÐµÐ¹ ÑÐµÐºÑÐ¸Ð¸

# Ð¿ÑÐ¾ÑÐ¾Ð´Ð¸Ð¼ Ð¿Ð¾ Ð²ÑÐµÐ¼ Ð¾ÑÑÐ°Ð²ÑÐ¸Ð¼ÑÑ ÑÐµÐºÑÐ¸ÑÐ¼ Ð·Ð°Ð±Ð¾ÑÐ°, Ð½Ð°ÑÐ¸Ð½Ð°Ñ ÑÐ¾ Ð²ÑÐ¾ÑÐ¾Ð¹
for i in range(1, n):
    curr_color = a[i] # ÑÐ²ÐµÑ ÑÐµÐºÑÑÐµÐ¹ ÑÐµÐºÑÐ¸Ð¸
    if curr_color != prev_color: # ÐµÑÐ»Ð¸ ÑÐ²ÐµÑ ÑÐµÐºÑÑÐµÐ¹ ÑÐµÐºÑÐ¸Ð¸ Ð¾ÑÐ»Ð¸ÑÐ°ÐµÑÑÑ Ð¾Ñ ÑÐ²ÐµÑÐ° Ð¿ÑÐµÐ´ÑÐ´ÑÑÐµÐ¹
        curr_len += 1 # ÑÐ²ÐµÐ»Ð¸ÑÐ¸Ð²Ð°ÐµÐ¼ ÑÐµÐºÑÑÑÑ Ð´Ð»Ð¸Ð½Ñ ÑÑÐ°ÑÑÐºÐ° Ð½Ð° 1
    else: # ÐµÑÐ»Ð¸ ÑÐ²ÐµÑ ÑÐµÐºÑÑÐµÐ¹ ÑÐµÐºÑÐ¸Ð¸ ÑÐ¾Ð²Ð¿Ð°Ð´Ð°ÐµÑ Ñ ÑÐ²ÐµÑÐ¾Ð¼ Ð¿ÑÐµÐ´ÑÐ´ÑÑÐµÐ¹
        curr_len = 1 # Ð¾Ð±Ð½ÑÐ»ÑÐµÐ¼ ÑÐµÐºÑÑÑÑ Ð´Ð»Ð¸Ð½Ñ ÑÑÐ°ÑÑÐºÐ°, Ð½Ð°ÑÐ¸Ð½Ð°Ñ Ð½Ð¾Ð²ÑÐ¹ ÑÑÐ°ÑÑÐ¾Ðº
    prev_color = curr_color # Ð¾Ð±Ð½Ð¾Ð²Ð»ÑÐµÐ¼ ÑÐ²ÐµÑ Ð¿ÑÐµÐ´ÑÐ´ÑÑÐµÐ¹ ÑÐµÐºÑÐ¸Ð¸
    if curr_len > max_len: # ÐµÑÐ»Ð¸ ÑÐµÐºÑÑÐ°Ñ Ð´Ð»Ð¸Ð½Ð° ÑÑÐ°ÑÑÐºÐ° Ð¿ÑÐµÐ²Ð¾ÑÑÐ¾Ð´Ð¸Ñ Ð¼Ð°ÐºÑÐ¸Ð¼Ð°Ð»ÑÐ½ÑÑ
        max_len = curr_len # Ð¾Ð±Ð½Ð¾Ð²Ð»ÑÐµÐ¼ Ð¼Ð°ÐºÑÐ¸Ð¼Ð°Ð»ÑÐ½ÑÑ Ð´Ð»Ð¸Ð½Ñ ÑÐ°Ð·Ð½Ð¾ÑÐ²ÐµÑÐ½Ð¾Ð³Ð¾ ÑÑÐ°ÑÑÐºÐ°
 
# Ð²ÑÐ²Ð¾Ð´Ð¸Ð¼ Ð¼Ð°ÐºÑÐ¸Ð¼Ð°Ð»ÑÐ½ÑÑ Ð´Ð»Ð¸Ð½Ñ ÑÐ°Ð·Ð½Ð¾ÑÐ²ÐµÑÐ½Ð¾Ð³Ð¾ ÑÑÐ°ÑÑÐºÐ°
print(max_len)","0.0"
"ae532d4a-9564-46c8-a30b-9f1fe7f95bf9","a, b, c = map(int,input().split())
k = int(input())
v = 1
for i in range(k):
    g = input()
    g = g.replace(' ', '')
    if g == 'sausage':
        v = v * a
    elif g == 'cheese':
        v = v * b
    elif g == 'ketchup':
        v = v * c
print(v)
","0.0"
"43690a23-0ff2-4f9b-8410-ec7917ae05e3","n = int(input())
k = 0
l = list(map(int, input().split()))
mn = min(l)
for i in l:
    k += i - mn
print(k)","0.0"
"84b45b43-cc73-4b14-ab6e-8b970134fb03","n, m = map(int, input().split())
a = False
while True:

    for i in range(1, n + 1):
        if m < i:
            a = True
            break
        m -= i
    if a:
        break
print(m)
","0.0"
"ae532d4a-9564-46c8-a30b-9f1fe7f95bf9","a, b, c = map(int,input().split())
k = int(input())
v = 1
for i in range(k):
    g = str(input())
    g = g.replace(' ', '')
    if g == 'sausage':
        v = v * a
    elif g == 'cheese':
        v = v * b
    elif g == 'ketchup':
        v = v * c
print(v)","0.0"
"5986f14f-59c5-428e-84aa-553175c8bdb9","a, b = map(int, input().split())
k = int(input())
if a * b >= k * 9:
    print('NO')
    print(0)
else:
    for i in range(1, k + 1):
        if i * 9 > a * b:
            print('YES')
            print(k - i + 1)
            break","0.0"
"43690a23-0ff2-4f9b-8410-ec7917ae05e3","n = int(input())
k = 0
l = list(map(int, input().split()))
mn = min(l)
for i in l:
    k += i - mn
print(k)
","0.0"
"5986f14f-59c5-428e-84aa-553175c8bdb9","a, b = map(int, input().split())
c = int(input())
d = a*b
if a == 0 or b == 0:
    print('YES')
    print(c)
elif d % 9 == 0:
    print('NO')
    print(c - (d//9))
else:
    print('YES')
    print(c - (d//9))","0.0"
"5986f14f-59c5-428e-84aa-553175c8bdb9","a, b  = map(int, input().split())
n = int(input())
x = a * b
k = x / n 
if n <= k:
    print(""NO"")
    print(""0"")
elif n > k:
    print(""YES"")
    print(round(n - k))
","0.0"
"43690a23-0ff2-4f9b-8410-ec7917ae05e3","domdomov = input()
sosyl = list(map(int, input().split()))
c = 0
minn = min(sosyl)

if max(sosyl) != minn:
    while max(sosyl) != minn:
        s = sosyl.index(max(sosyl))
        sosyl[s] -= 1        
        c += 1    

    print(c)
else:
    print(0)","0.0"
"5986f14f-59c5-428e-84aa-553175c8bdb9","a, b  = map(int, input().split())
n = int(input())
x = a * b
k = x / n 
k = round(k)
if n <= k:
    print(""NO"")
    print(""0"")
elif n > k:
    print(""YES"")
    print(n - k)
","0.0"
"5986f14f-59c5-428e-84aa-553175c8bdb9","a, b = map(int, input().split())
c = int(input())
d = a*b
if a == 0 and c!=0 or b == 0 and c!=0:
    print('YES')
    print(c)
elif d % 9 == 0 or c == 0:
    print('NO')
    print(c - (d//9))
else:
    print('YES')
    print(c - (d//9))","0.0"
"430aade4-55bd-42b3-9586-1389412540a7","s = int(input())
k = 0
while s>1:
    if s%2==0: s/=2
    else: s-=1
    k+=1
print(k)","0.0"
"84b45b43-cc73-4b14-ab6e-8b970134fb03","n,m=map(int,input().split())
i=1
while m>0:
    while i<=n:
        if m-i>0:
            m=m-i
            i+=1
        elif m-i==0:
            print(0)
            m=-43534
            break
        elif m-i<0:
            print(m)
            m=m-i
            break
    else: i=1","0.0"
"5986f14f-59c5-428e-84aa-553175c8bdb9","a, b = map(int, input().split())
c = int(input())
d = a*b
if a == 0 and c!=0 or b == 0 and c!=0:
    print('YES')
    print(c)
elif d % 9 == 0 or c == 0:
    print('NO')
    print(c - (d//9))
else:
    print('YES')
    print(c - (d//9))","0.0"
"ae532d4a-9564-46c8-a30b-9f1fe7f95bf9","S1, S2, S3 = map(int, input().split())  # ÐºÐ¾Ð»Ð¸ÑÐµÑÑÐ²Ð¾ ÐºÐ¾Ð»Ð±Ð°Ñ, ÑÑÑÐ¾Ð² Ð¸ ÑÐ¾ÑÑÐ¾Ð²
N = int(input())  # ÐºÐ¾Ð»Ð¸ÑÐµÑÑÐ²Ð¾ ÑÐ»ÑÑÐ°Ð¹Ð½ÑÑ Ð¸Ð½Ð³ÑÐµÐ´Ð¸ÐµÐ½ÑÐ¾Ð²
ingredients = set(input() for _ in range(N))  # Ð¼Ð½Ð¾Ð¶ÐµÑÑÐ²Ð¾ ÑÐ»ÑÑÐ°Ð¹Ð½ÑÑ Ð¸Ð½Ð³ÑÐµÐ´Ð¸ÐµÐ½ÑÐ¾Ð²

# ÐÑÑÐ¸ÑÐ»ÑÐµÐ¼ ÐºÐ¾Ð»Ð¸ÑÐµÑÑÐ²Ð¾ Ð²Ð°ÑÐ¸Ð°Ð½ÑÐ¾Ð² ÑÐ¾ÑÑÐ°Ð²Ð»ÐµÐ½Ð¸Ñ Ð±ÑÑÐµÑÐ±ÑÐ¾Ð´Ð°
# Ð£Ð¼Ð½Ð¾Ð¶Ð°ÐµÐ¼ ÐºÐ¾Ð»Ð¸ÑÐµÑÑÐ²Ð¾ Ð²Ð°ÑÐ¸Ð°Ð½ÑÐ¾Ð² Ð´Ð»Ñ ÐºÐ°Ð¶Ð´Ð¾Ð¹ ÐºÐ¾Ð¼Ð¿Ð¾Ð½ÐµÐ½ÑÑ Ð¸ÑÐ¿Ð¾Ð»ÑÐ·ÑÐµÐ¼Ð¾Ð¹ Ð² Ð±ÑÑÐµÑÐ±ÑÐ¾Ð´Ðµ
# Ð¿ÑÐ¸ ÑÑÐ»Ð¾Ð²Ð¸Ð¸, ÑÑÐ¾ Ð¾Ð½Ð° Ð±ÑÐ»Ð° Ð²ÑÐ±ÑÐ°Ð½Ð° ÑÐ¾Ð¾ÑÐ²ÐµÑÑÑÐ²ÑÑÑÐµÐ¹ ÑÐ»ÑÑÐ°Ð¹Ð½Ð¾Ð¹ Ð¸Ð½Ð³ÑÐµÐ´Ð¸ÐµÐ½ÑÐ¾Ð¹
count = (S1 if 'sausage' in ingredients else 0) * (S2 if 'cheese' in ingredients else 0) * (S3 if 'ketchup' in ingredients else 0)
print(count)","0.0"
"5177ddd2-f17e-4d0a-bf78-21fd90df671f","n,k = map(int, input().split())
colors = list(map(int, input().split()))
len = 0
len1 = 1
color = colors[0]
for i in range(1, n):
    if colors[i] != color:
        len1 += 1
    else:
        len = max(len, len1)
        len1 = 1
    color = colors[i]
len = max(len, len1)
print(len)","0.0"
"84b45b43-cc73-4b14-ab6e-8b970134fb03","s = input().split()
n = int(s[0])
m = int(s[1])
f = True
i = 0
while f == True:
    for i in range(n):
        if m>=i+1:
            m-=i+1
        else:
            f = False
            break
print(m)

","0.0"
"43690a23-0ff2-4f9b-8410-ec7917ae05e3","domdomov = input()
sosyl = list(map(int, input().split()))
c = 0
minn = min(sosyl)

if max(sosyl) != minn:
    while max(sosyl) != minn:
        sosyl[sosyl.index(max(sosyl))] -= 1
        c += 1

    print(c)
else:
    print(0)","0.0"
"5986f14f-59c5-428e-84aa-553175c8bdb9","a, b = map(int, input().split())
n = int(input())
if a * b >= n * 9:
    print('NO')
    print(0)
else:
    for i in range(1, n + 1):
        if i * 9 > a * b:
            print('YES')
            print(n - i + 1)
            break","0.0"
"ae532d4a-9564-46c8-a30b-9f1fe7f95bf9","a =list(map(int, input().split()))
d = {""sausage"": a[0],""cheese"": a[1], ""ketchup"": a[2]}
ans = 1
for _ in range(int(input())):
    ans *= d[input().strip()]
print(ans)","0.0"
"5177ddd2-f17e-4d0a-bf78-21fd90df671f","j = input()
f = input().split()[::]
s = []
x = 0
for i in range(len(f)):
    if (i + 1) != len(f) and f[i] != f[i+1]:
        x += 1
    else:
        x += 1
        s.append(x)
        x = 0
print(max(s))
","0.0"
"ae532d4a-9564-46c8-a30b-9f1fe7f95bf9","s1, s2, s3 = map(int, input().split())
n = int(input())
ingredients = set()
for i in range(n):
    ingredients.add(input().strip())
num_comb = 1
if 'sausage' in ingredients:
    num_comb *= s1
if 'cheese' in ingredients:
    num_comb *= s2
if 'ketchup' in ingredients:
    num_comb *= s3
print(num_comb)","0.0"
"84b45b43-cc73-4b14-ab6e-8b970134fb03","n,k=map(int,input().split())
s=(1+n)*n//2
if s<=k:
    k=k-k//s*s
i=0
while k-i>0:
    i+=1
    k=k-i
print(k)



","0.0"
"ae532d4a-9564-46c8-a30b-9f1fe7f95bf9","s1, s2, s3 = map(int, input().split())
n = int(input())
ingredients = set()
for i in range(n):
    ingredients.add(input().strip())
    num_comb = 1
for ingredient in ['sausage', 'cheese', 'ketchup']:
    if ingredient in ingredients:
        if ingredient == 'sausage':
            num_comb *= s1
        elif ingredient == 'cheese':
            num_comb *= s2
        elif ingredient == 'ketchup':
            num_comb *= s3
print(num_comb)","0.0"
"430aade4-55bd-42b3-9586-1389412540a7","k=0
n=int(input())
while n!=1:
    if n%2==0:
        n=n//2
        k+=1
    else:
        n=n-1
        k+=1
print(k)","0.0"
"d0e35e20-e37a-4750-8c0b-7641a3b72277","import math
_ = input()
a = [int(i) for i in input().split()]
a1 = a.count(1)
a2 = a.count(2)
a3 = a.count(3)
a4 = a.count(4)
c = a4
if a3 <= a1:
    c += a3
    a1 -= a3
    c += math.ceil((a1 + a2 * 2) / 4)
else:
    c += a3
    c += math.ceil((a2 * 2) / 4)
print(c)","0.0"
"430aade4-55bd-42b3-9586-1389412540a7","n = int(input())
layers = (n-1).bit_length()
print(layers)","0.0"
"430aade4-55bd-42b3-9586-1389412540a7","n = int(input())
a = n
k=0
while a > 1:
    if a%2==0:
        a //=2
        k+=1
    elif a%2!=0:
        a-=1
        k+=1
print(k)
","0.0"
"6dcac6bd-9973-47eb-8912-187a2999dc6b","k = 0
n = int(input())
s = [int(a) for a in input().split()]
for i in range(len(s)):
    for j in range(len(s)):
        if abs(s[i] - s[j]) in s:
            k+=1
        else:
            s.append(abs(s[i]-s[j]))
    s.remove(0)
print(len(s))
","0.0"
"5177ddd2-f17e-4d0a-bf78-21fd90df671f","input()
l, c, res = [int(x) for x in input().split()], 1, 0
a = l[0]
for i in l[1:]:
    if i != a:
        c += 1
    else:
        if c > res:
            res = c
        c = 1
    a = i
print(max(res, c))","0.0"
"5fc63383-931c-46cc-a7d1-308dc271fda6","n, d = map(int,input().split())
a = [int(s) for s in input().split()]
m = int(input())
summa = sum(a)

if n > m:
    print(summa)
else:
    print(summa - (m - n) * d)

","0.0"
"d0e35e20-e37a-4750-8c0b-7641a3b72277","a = int(input())
l = sorted([int(i) for i in input().split()])
l.append(4)
g = 4
ans = 0
for i in range(len(l)):
    if g >= l[i]:
        g -= l[i]
    else:
        ans += 1
        g = 4
        g -= l[i]
print(ans)
","0.0"
"430aade4-55bd-42b3-9586-1389412540a7","n = int(input())
layers = (n-1).bit_length()
print(layers)","0.0"
"5fc63383-931c-46cc-a7d1-308dc271fda6","n, d = map(int,input().split())
a = [int(s) for s in input().split()]
m = int(input())
summa = sum(a)

if n >= m:
    print(summa)
else:
    print(summa - (m - n) * d)

","0.0"
"6dcac6bd-9973-47eb-8912-187a2999dc6b","k = 0
n = int(input())
s = [int(a) for a in input().split()]
for i in range(len(s)):
    for j in range(len(s)):
        if abs(s[i] - s[j]) in s:
            k+=1
        else:
            s.append(abs(s[i]-s[j]))
    s.remove(0)
if len(s)!=0:
    print(len(s))
else:
    print(1)
","0.0"
"430aade4-55bd-42b3-9586-1389412540a7","from math import log, ceil
print(ceil(log(int(input()), 2)))","0.0"
"ae532d4a-9564-46c8-a30b-9f1fe7f95bf9","s1, s2, s3 = map(int, input().split())
n = int(input())

ingredients = []
for index in range(n):
    get = input()
    if get == 'sausage':
        ingredients.append(s1)
    elif get == 'ketchup':
        ingredients.append(s3)
    else:
        ingredients.append(s2)

result = 1
for el in ingredients:
    result *= el

print(result)
","0.0"
"2335ee80-a2b1-4e2b-93c1-b3bc7d2720e8","t = int(input())
mas = []
for a in range(t):
    n = int(input())
    for b in range(2, 10000000000000):
        if n % b >= n // b:
            mas.append(b)
            break
for a in range(t):
    print(mas[a])","0.0"
"ae532d4a-9564-46c8-a30b-9f1fe7f95bf9","s1, s2, s3 = map(int, input().split())
n = int(input())

ingredients = []
for index in range(n):
    get = input()
    if get == 'sausage':
        ingredients.append(s1)
    elif get == 'ketchup':
        ingredients.append(s3)
    elif get == 'cheese':
        ingredients.append(s2)

result = 1
for el in ingredients:
    result *= el

print(result)","0.0"
"84b45b43-cc73-4b14-ab6e-8b970134fb03","a, b = map(int, input().split())
i = 1
while i <= b:
    b = b - i
    if i == a:
        i = 1
    else:
        i = i + 1
print(b)","0.0"
"5177ddd2-f17e-4d0a-bf78-21fd90df671f","numbers = input()
arr = input().split()[::]
res = []
score = 0
for i in range(len(arr)):    
    if (i + 1) != len(arr) and arr[i] != arr[i + 1]:
        score += 1    
    else:
        score += 1        
        res.append(score)
        score = 0
print(max(res))","0.0"
"ae532d4a-9564-46c8-a30b-9f1fe7f95bf9","a, b, c = map(int,input().split())
k = int(input())
v = 1
for i in range(k):
    g = str(input())
    g = g.replace(' ', '')
    if g == 'sausage':
        v = v * a
    elif g == 'cheese':
        v = v * b
    elif g == 'ketchup':
        v = v * c
print(v)","0.0"
"5986f14f-59c5-428e-84aa-553175c8bdb9","a, b = map(int, input().split())
k = int(input())
l = (a * b)
b = (l // 9)
if (b < k):
    print(""YES"")
    print(round(k-b))
else:
    print(""NO"")
    print(0)
 
","0.0"
"43690a23-0ff2-4f9b-8410-ec7917ae05e3","n = int(input())

result = 0
arr = list(map(int, input().split()))
m = min(arr)
for elem in arr:
    if elem != m:
        result += elem - m
print(result)","0.0"
"d0e35e20-e37a-4750-8c0b-7641a3b72277","n=int(input())
s=input()
k1=s.count('1')
k2=s.count('2')
k3=s.count('3')
k4=s.count('4')
k=0
if k2//2>0:
    k+=k2//2
    k2-=k2//2*2
k1=k1-k3-k2
if k1>0:
    k=(k1+1)//2
k=k+k4+k3+k2
print(k)


","0.0"
"430aade4-55bd-42b3-9586-1389412540a7","i = int(input())
s = 0
while i != 1:
    g = i
    i = i // 2
    if i * 2 < g:
        i += 1
    s += 1
print(s)","0.0"
"5fc63383-931c-46cc-a7d1-308dc271fda6","n, d = map(int, input().split())
a = [int(s) for s in input().split()]
a = sorted(a)
m = int(input())
summa = 0
if m <= n:
    for i in range(m):
        summa += a[0]
        a.pop(0)
    print(summa)

else:
    print(sum(a) - (m - n) * d)","0.0"
"d0e35e20-e37a-4750-8c0b-7641a3b72277","n=int(input())
s=input()
k1=s.count('1')
k2=s.count('2')
k3=s.count('3')
k4=s.count('4')
k=0
if k2//2>0:
    k+=k2//2
    k2=k2-k2//2*2
k1=k1-k3-k2
if k1>0:
    k+=(k1+1)//2
k=k+k4+k3+k2
print(k)","0.0"
"2335ee80-a2b1-4e2b-93c1-b3bc7d2720e8","a = int(input())
s = []
for i in range(a):
    s.append(int(input()))
for j in range(a):
    for l in range(1, s[j] + 1):
        if s[j] % l >= s[j] // l:
            print(l)
            break","0.0"
"5fc63383-931c-46cc-a7d1-308dc271fda6","n, d = map(int, input().split())
b = input()
mas3 = []
mas = b.split()
for a in range(n):
    mas3.append(int(mas[a]))

m = int(input())
mas.sort()
mas2 = mas3[0:m]
s = sum(mas2)
if m > n:
    s = s - (m-n) * d
print(s)","0.0"
"6dcac6bd-9973-47eb-8912-187a2999dc6b","n = int(input())
l = list(map(int, input().split()))
for i in range(len(l)):
    for j in range(len(l)):
        s = abs(l[i]-l[j])
        if s not in l and s != 0:
            l.append(abs(l[i]-l[j]))
print(len(l))
","0.0"
"5177ddd2-f17e-4d0a-bf78-21fd90df671f","n,k=map(int,input().split())
s=input().split()
for i in range(n):s[i]=int(s[i])
ma=0
c=1
for i in range(n-1):
    if s[i]!=s[i+1]:
        c+=1
        if c>ma: ma=c
    else: c=1
print(ma)
","0.0"
"5986f14f-59c5-428e-84aa-553175c8bdb9","aa, bb = map(int, input().split())
kk = int(input())
if aa * bb >= kk * 9:
    print('NO')
    print(0)
else:
    for i in range(1, kk + 1):
        if i * 9 > aa * bb:
            print('YES')
            print(kk - i + 1)
            break","0.0"
"ae532d4a-9564-46c8-a30b-9f1fe7f95bf9","k, c, s = map(int, input().split())
k1, c1, s1 = 1, 1, 1
n = int(input())
for i in range(n):
    q = input().strip()
    if q == ""ketchup"":
        k1 = s
    if q == ""cheese"":
        c1 = c
    if q == ""sausage"":
        s1 = k
print(s1 * c1 * k1)
","0.0"
"ae532d4a-9564-46c8-a30b-9f1fe7f95bf9","a, b, c = map(int, input().split())
n = int(input())
comp = []
mul = []
answer = 1
for i in range(n):
    comp.append(input())
if 'sausage' in comp:
    mul.append(a)
if ""cheese"" in comp:
    mul.append(b)
if ""ketchup"" in comp:
    mul.append(c)
for i in mul:
    answer*= i
print(answer)
","0.0"
"43690a23-0ff2-4f9b-8410-ec7917ae05e3","a = int(input())
arrow = list(map(int, input().split()))
r = 0
b = min(arrow)
for i in arrow:
    if i != b:
        r += i - b
print(r)","0.0"
"d0e35e20-e37a-4750-8c0b-7641a3b72277","n=int(input())
s=input()
k1=s.count('1')
k2=s.count('2')
k3=s.count('3')
k4=s.count('4')
k=0
if k2//2>0:
    k+=k2//2
    k2=k2-k2//2*2
k1=k1-k3-k2
if k1>0:
    k+=(k1+3)//4
k=k+k4+k3+k2
print(k)","0.0"
"5fc63383-931c-46cc-a7d1-308dc271fda6","n, d = [int(i) for i in input().split()]
a = [int(i) for i in input().split()]
a.sort()
m = int(input())
if m <= n:
    print(sum(a[:m]))
else:
    print(sum(a) - (m - n) * d)","0.0"
"5fc63383-931c-46cc-a7d1-308dc271fda6","n, d = map(int, input().split())
b = input()
mas3 = []
mas = b.split()
for a in range(n):
    mas3.append(int(mas[a]))

m = int(input())
mas.sort()
mas2 = mas3[0:m]
s = sum(mas2)
if m >= n:
    s = s - (m-n) * d
print(s)","0.0"
"ae532d4a-9564-46c8-a30b-9f1fe7f95bf9","a, b, c = map(int, input().split())
n = int(input())
comp = []
mul = []
answer = 1
for i in range(n):
    comp.append(input())
if 'sausage' in comp:
    if a:
        mul.append(a)
if ""cheese"" in comp:
    if b:
        mul.append(b)
if ""ketchup"" in comp:
    if c:
        mul.append(c)
for i in mul:
    answer*= i
print(answer)
","0.0"
"ae532d4a-9564-46c8-a30b-9f1fe7f95bf9","s1, s2, s3 = [int(i) for i in input().split()]
ans = 1
for i in range(int(input())):
    k = input()
    if k in 'sausage ':
        ans *= s1
    elif k in 'cheese ':
        ans*=s2
    elif k in 'ketchup ':
        ans*=s3
print(ans)
        ","0.0"
"ae532d4a-9564-46c8-a30b-9f1fe7f95bf9","s1, s2, s3 = [int(i) for i in input().split()]
ans = 1
for i in range(int(input())):
    k = input()
    if k in 'sausage ':
        ans *= s1
    elif k in 'cheese ':
        ans*=s2
    elif k in 'ketchup ':
        ans*=s3
print(ans)
        ","0.0"
"ae532d4a-9564-46c8-a30b-9f1fe7f95bf9","s1, s2, s3 = map(int, input().split())
n = int(input())

ingredients = []
for index in range(n):
    get = input()
    if get == 'sausage':
        ingredients.append(s1)
    elif get == 'ketchup':
        ingredients.append(s3)
    elif get == 'cheese':
        ingredients.append(s2)

result = 1
for el in ingredients:
    result *= el

print(result)","0.0"
"ae532d4a-9564-46c8-a30b-9f1fe7f95bf9","a, b, c = map(int,input().split())
n = int(input())
k = 1
mas = []
for i in range(n):
    s = input()
    mas.append(s)
for i in mas:
    if i == 'sausage':
        k*=a
    elif i == 'ketchup':
        k*=c
    elif i == 'cheese':
        k*=b
print(k)
","0.0"
"ae532d4a-9564-46c8-a30b-9f1fe7f95bf9","k, c, s = map(int, input().split())
k1, c1, s1 = 1, 1, 1
n = int(input())
for i in range(n):
    q = input().strip()
    if q == ""ketchup"":
        k1 = s
    if q == ""cheese"":
        c1 = c
    if q == ""sausage"":
        s1 = k
print(s1 * c1 * k1)
","0.0"
"5fc63383-931c-46cc-a7d1-308dc271fda6","n, d = map(int, input().split())
b = input()
mas3 = []
mas = b.split()
for a in range(n):
    mas3.append(int(mas[a]))

m = int(input())
mas3.sort()
mas2 = mas3[0:m]
s = sum(mas2)
if m > n:
    s = s - (m-n) * d
print(s)","0.0"
"ae532d4a-9564-46c8-a30b-9f1fe7f95bf9","s,c,k = map(int, input().split())
n = int(input())
sp= []
spall = []
spall.append('sausage')
spall.append('ketchup')
spall.append('cheese')
z = 0
spl = []
for i in range(0,n):
    sp.append(input())
if len(sp) == 3:
    print(s*k*c)
else:
    for j in sp:
        z+=1
        if sp[len(sp)-z] != spall[z]:
            spl.append(spall[z])
    spl.pop()
    if spl[0] == 'sausage':
        print(k*c)
    if spl[0] == 'ketchup':
        print(s*c)
    else:
        print(s*k)
","0.0"
"43690a23-0ff2-4f9b-8410-ec7917ae05e3","house = int(input())

res = 0
soss = list(map(int, input().split()))
minimal = min(soss)
for sos in soss:
    if sos != minimal:
        res += sos - minimal
print(res)


","0.0"
"ae532d4a-9564-46c8-a30b-9f1fe7f95bf9","s1, s2, s3 = map(int, input().split())
n = int(input())
mas = []
for a in range(n):
    b = input()
    mas.append(b)
s = 1
if 'sausage' in mas and s1 != 0:
    s = s * s1
if 'cheese' in mas and s2 != 0:
    s = s * s2
if 'ketchup' in mas and s3 != 0:
    s = s * s3

print(s)
","0.0"
"ae532d4a-9564-46c8-a30b-9f1fe7f95bf9","s,c,k = map(int, input().split())
n = int(input())
sp= []
spall = []
spall.append('sausage')
spall.append('ketchup')
spall.append('cheese')
z = 0
spl = []
for i in range(0,n):
    sp.append(input())
if len(sp) == 3:
    print(s*k*c)
else:
    for j in sp:
        z+=1
        if sp[len(sp)-z] != spall[z]:
            spl.append(spall[z])
    spl.pop()
    if spl[0] == 'sausage':
        print(k*c)
    if spl[0] == 'ketchup':
        print(s*c)
    else:
        print(s*k)
","0.0"
"84b45b43-cc73-4b14-ab6e-8b970134fb03","a=input().split()
b=int(a[0])
c=int(a[1])
d=0
while c>=0:
    d = d + 1
    c=c-d
    if d==b:
        d=0
if c<0:
    print(d+c)
else:
    print(0)","0.0"
"43690a23-0ff2-4f9b-8410-ec7917ae05e3","n = int(input())
a = input().split()
a = [int(x) for x in a]
s = 0
m = 100000000
for i in a:
    m = min(m, i)
for j in a:
    s += (j - m)
print(s)
","0.0"
"5986f14f-59c5-428e-84aa-553175c8bdb9","asam,fof=map(int, input().split())
w=(asam*fof)
eue=int(input())

if w//9>=eue:
	print('NO')
	print(0)
else:
	print('YES')
	print(eue-w//9)
","0.0"
"5986f14f-59c5-428e-84aa-553175c8bdb9","a, b = [int(i) for i in input().split()]
c = int(input())
a = a * b
if a / c >= 9:
    print(""NO"")
    print(0)
else:
    print(""YES"")
    print(c - a // 9)","0.0"
"ae532d4a-9564-46c8-a30b-9f1fe7f95bf9","s1, s2, s3 = [int(i) for i in input().split()]
ans = 1
for i in range(int(input())):
    k = input()
    if k in 'sausage ':
        ans *= s1
    elif k in 'cheese ':
        ans*=s2
    elif k in 'ketchup ':
        ans*=s3
print(ans)
        ","0.0"
"ae532d4a-9564-46c8-a30b-9f1fe7f95bf9","k, c, s = map(int, input().split())
k1, c1, s1 = 1, 1, 1
n = int(input())
for i in range(n):
    q = input().strip()
    if q == ""ketchup"":
        k1 = s
    if q == ""cheese"":
        c1 = c
    if q == ""sausage"":
        s1 = k
print(s1 * c1 * k1)
","0.0"
"ae532d4a-9564-46c8-a30b-9f1fe7f95bf9","s1, s2, s3 = map(int, input().split())
n = int(input())

ingredients = []
for index in range(n):
    get = input()
    if get == 'sausage':
        ingredients.append(s1)
    elif get == 'ketchup':
        ingredients.append(s3)
    elif get == 'cheese':
        ingredients.append(s2)

result = 1
for el in ingredients:
    result *= el

print(result)","0.0"
"ae532d4a-9564-46c8-a30b-9f1fe7f95bf9","s1, s2, s3 = map(int, input().split())
n = int(input())
mas = []
for a in range(n):
    b = input()
    mas.append(b)
s = 1
if 'sausage' in mas and s1 != 0:
    s = s * s1
if 'cheese' in mas and s2 != 0:
    s = s * s2
if 'ketchup' in mas and s3 != 0:
    s = s * s3

print(s)
","0.0"
"5177ddd2-f17e-4d0a-bf78-21fd90df671f","n,k = list(map(int, input().split()))
z = list(map(int, input().split()))

ans = 1
p = 1

for j in range(n-1):
	if z[j] != z[j+1]:
		p += 1
		if p > ans:
			ans = p
	else:
		p = 1
	
print(ans)
","0.0"
"ae532d4a-9564-46c8-a30b-9f1fe7f95bf9","s,c,k = map(int, input().split())
n = int(input())
sp= []
spall = []
spall.append('sausage')
spall.append('ketchup')
spall.append('cheese')
z = 0
spl = []
for i in range(0,n):
    sp.append(input())
if len(sp) == 3:
    print(s*k*c)
else:
    for j in sp:
        z+=1
        if sp[len(sp)-z] != spall[z]:
            spl.append(spall[z])
    spl.pop()
    if spl[0] == 'sausage':
        print(k*c)
    if spl[0] == 'ketchup':
        print(s*c)
    else:
        print(s*k)
","0.0"
"5986f14f-59c5-428e-84aa-553175c8bdb9","a, b = [int(i) for i in input().split()]
c = int(input())
a = a * b
if a >= c * 9:
    print(""NO"")
    print(0)
else:
    print(""YES"")
    print(c - a // 9)","0.0"
"84b45b43-cc73-4b14-ab6e-8b970134fb03","n=input().split()
a=int(n[0])
b=int(n[1])
c=a*(a+1)//2
d=b-b//c*c
cnt=0
for i in range(a):
    if d-i-1>0:
        d=d-i-1
    elif d-i-1==0:
        print(0)
        break
    elif d-i-1<0:
        print(d)
        break","0.0"
"9acc7b61-f8ac-4953-8b12-651c2d7f8d48","alphabet = 'abcdefghijklmnopqrstuvwxyz'
m, n, k = map(int, input().split())
matrix = [['.' for j in range(n)] for i in range(m)]
for i in range(k):
    x1, y1, x2, y2 = map(int, input().split())
    color_index = i % len(alphabet)
    color = alphabet[color_index]
    for j in range(y1-1, y2):
        matrix[x1-1][j] = color
        matrix[x2-1][j] = color
    for j in range(x1, x2-1):
        matrix[j][y1-1] = color
        matrix[j][y2-1] = color
for i in range(m):
    print(''.join(matrix[i]))","0.0"
"430aade4-55bd-42b3-9586-1389412540a7","n = int(input())
i = 0
while 2**i < n:
    i += 1
print(i)
","0.0"
"d0e35e20-e37a-4750-8c0b-7641a3b72277","n = int(input())
a = [int(x) for x in input().split()]
m = 0
m += a.count(4)
w1 = a.count(1)
m += a.count(3)
if a.count(3) > w1:
    w1 = 0
else:
    w1 -= a.count(3)
w2 = a.count(2) + (w1 + 1) // 2
m += (w2 + 1) // 2
print(m)","0.0"
"ae532d4a-9564-46c8-a30b-9f1fe7f95bf9","a=input().split()
b=int(input())
e=[]
g=[""sausage"", ""cheese"", ""ketchup""]
d=0
for i in range(b):
    c=input()
    e.append(g.index(c))
if b==0:
    print(1)
elif b==1:
    print(a[e[0]])
elif b==2:
    d=int(a[e[0]])*int(a[e[1]])
    print(d)
elif b==3:
    d = int(a[e[0]])  *  int(a[e[1]]) * int(a[e[2]])
    print(d)","0.0"
"ae532d4a-9564-46c8-a30b-9f1fe7f95bf9","s1, s2, s3 = map(int, input().split())
a = int(input())
array = []
counter = 1
for i in range(a):
    array.append(input())

if ""sausage"" in array:
    counter *= s1
if ""cheese"" in array:
    counter *= s2
if ""ketchup"" in array:
    counter *= s3
print(counter)
","0.0"
"ae532d4a-9564-46c8-a30b-9f1fe7f95bf9","a, b, c = map(int,input().split())
n = int(input())
k = 1
mas = []
for i in range(n):
    s = input()
    mas.append(s)
for i in set(mas):
    if i == 'sausage':
        k*=a
    elif i == 'ketchup':
        k*=c
    elif i == 'cheese':
        k*=b
print(k)
","0.0"
"84b45b43-cc73-4b14-ab6e-8b970134fb03","n, m = map(int, input().split())
ans = m % (((1+n)*n)/2)
arr = list(map(lambda x: (1+x)*x/2, range(1, n)))
l=0
r=n-2
m = r //2
while l < r and r-l != 1:
    if arr[m] - ans >= 0:
        r = m
    else:
        l = m
    m = l + (r - l) // 2
print(int(-arr[l] + ans))","0.0"
"43690a23-0ff2-4f9b-8410-ec7917ae05e3","n = int(input())
res = 0
a = list(map(int, input().split()))
h = min(a)
for elem in a:
    if elem != h:
        res += elem-h
print(res)","0.0"
"5986f14f-59c5-428e-84aa-553175c8bdb9","a = list(map(int, input().split()))
n = int(input())
h = a[0] * a[1]
if h / 9 >= n:
    print(""NO"")
elif h / 9 < n:
    print(""YES"")
    print(n - h // 9)
","0.0"
"84b45b43-cc73-4b14-ab6e-8b970134fb03","n, m = map(int, input().split())
k = 0
while m>0:
    k+=1
    if k>n: k = 1
    m-=k
if m == 0:
    print(m)
else:
    print(m+k)","0.0"
"430aade4-55bd-42b3-9586-1389412540a7","n = int(input())
c = 0
while n != 1:
    n = n // 2
    c += 1
    if n // 2 == 1:
        c += 1
print(c)","0.0"
"ae532d4a-9564-46c8-a30b-9f1fe7f95bf9","s1, s2, s3 = map(int, input().split())
n = int(input())
o = 1
for i in range(n):
    z = input()
    if z == 'sausage':
        o*=s1
    if z == 'cheese':
        o *= s2
    if z == 'ketchup':
        o *= s3
print(o)
","0.0"
"5177ddd2-f17e-4d0a-bf78-21fd90df671f","n, k = map(int, input().split())
a = list(map(int, input().split()))
ct = 0
max_ct = 0
for i in range(n - 1):
    if a[i] != a[i + 1]:
        ct += 1
    else:
        ct += 1
        if ct > max_ct:
            max_ct = ct
        ct = 0
if ct != 0:
    if max_ct < (ct + 1):
        max_ct = ct + 1
print(max_ct)","0.0"
"ae532d4a-9564-46c8-a30b-9f1fe7f95bf9","def f():
    s1, s2, s3 = map(int, input().split())
    n = int(input())
    ans = 1
    for i in range(n):
        s = input()
        match s:
            case ""sausage"":
                ans *= s1
            case ""ketchup"":
                ans *= s3
            case ""cheese"":
                ans *= s2
    print(ans)


f()","0.0"
"ae532d4a-9564-46c8-a30b-9f1fe7f95bf9","n=input().split()
a1=1
a2=1
a3=1
g=int(input())
for i in range(g):
    s=input()
    if s[0]=='s':
        a1=int(n[0])
    if s[0]=='c':
        a2=int(n[1])
    if s[0]=='k':
        a3=int(n[2])
print(a1*a2*a3)","0.0"
"5177ddd2-f17e-4d0a-bf78-21fd90df671f","n,k=map(int,input().split())
a=list(map(int,input().split()))
t=0
ma=0
for i in range (len(a)-1):
    if a[i]!=a[i+1]:
        t+=1
    else:
        ma=max(ma,t+1)
        t=0
if t>0:
    print(max(ma,t+1))
else:
    print(ma+1)","0.0"
"5177ddd2-f17e-4d0a-bf78-21fd90df671f","n, k = map(int, input().split())
colors = list(map(int, input().split()))

MaxLen = 1
CurLen = 1

for _ in range(1, n):
    if colors[_]  !=  colors[_ - 1]:
        CurLen += 1
        MaxLen = max(MaxLen, CurLen)
    else:
        CurLen = 1

print(MaxLen)","0.0"
"ae532d4a-9564-46c8-a30b-9f1fe7f95bf9","k, sir, cous = map(int, input().split())
n = int(input())
a = []
ct = 1
for i in range(n):
    a.append(input().strip())
for i in a:
    if i == ""sausage"":
        ct *= k
    elif i == ""cheese"":
        ct *= sir
    else:
        ct *= cous
print(ct)","0.0"
"84b45b43-cc73-4b14-ab6e-8b970134fb03","n, m = map(int, input().split())
k = True
while k:
    for i in range(n+1):
        if m>= i:
            m-=i
        else:
            k = False
            

print(m)","0.0"
"ae532d4a-9564-46c8-a30b-9f1fe7f95bf9","a=list(map(int,input().split()))
n=int(input())
p=1
for i in range (n):
    s=input().replace(' ','')
    if s=='sausage':
        p=p*a[0]
    if s=='cheese':
        p=p*a[1]
    if s == 'ketchup':
        p=p* a[2]
print(p)","0.0"
"5fc63383-931c-46cc-a7d1-308dc271fda6","s = input().split()
n = int(s[0])
d = int(s[1])
a = [int(x) for x in input().split()]
m = int(input())
z=0
if n >= m:
    for i in range(m):
        z+=a[i]
elif n < m:
    for i in range(n):
        z+=a[i]
    z-=d*(m-n)
print(z)
","0.0"
"ae532d4a-9564-46c8-a30b-9f1fe7f95bf9","import sys
s1, s2, s3 = map(int, input().split())
n = int(input())
a = sys.stdin.readlines()
if n == 2:
    print(s1 * s2)
elif n == 3:
    print(s1 * s2 * s3)
else:
    print(s1)","0.0"
"430aade4-55bd-42b3-9586-1389412540a7","n=int(input())
c=0
while n>1:
    if n>1 and n%2==0:
        n=n/2
        c+=1
    elif n>1 and n%2!=0:
        n=n-1
        c+=1
print(c)
","0.0"
"ae532d4a-9564-46c8-a30b-9f1fe7f95bf9","l, s, res = [int(x) for x in input().split()], [], 0
for i in range(int(input())):
    s.append(input()[0])
if set(s) == set('s'):
    print(l[0])
elif set(s) == set('k'):
    print(l[1])
elif set(s) == set('c'):
    print(l[2])
elif set(s) == set(['s', 'c']):
    print(l[0]*l[1])
elif set(s) == set(['s', 'k']):
    print(l[0]*l[2])
elif set(s) == set(['c', 'k']):
    print(l[1]*l[2])
elif len(s) == 3:
    print(l[0]*l[1]*l[2])","0.0"
"84b45b43-cc73-4b14-ab6e-8b970134fb03","n, m = map(int, input().split())
s = 0
for i in range(1,n+1):
    s += i
o = m % s
for i in range(1,n+1):
    if o > i:
        o -= i
    else:
        break
print(o)
","0.0"
"5177ddd2-f17e-4d0a-bf78-21fd90df671f","a, b = [int(i) for i in input().split()]
l = [int(i) for i in input().split()]
l.append(-1)
m = 0
c = 1
for i in range(len(l)):
    if l[i+1] == -1:
        if c > m:
            m = c
        c = 1
        break
    if l[i+1] != l[i]:
        c+=1
    else:
        if c > m:
            m = c
        c = 1
print(m)
","0.0"
"43690a23-0ff2-4f9b-8410-ec7917ae05e3","i = int(input())
n = input().split()
b = [int(elem) for elem in n]
minim = min(b)
res = 0
for elem in b:
    if elem != minim:
        res += elem - minim
print(res)","0.0"
"84b45b43-cc73-4b14-ab6e-8b970134fb03","n, m = map(int, input().split())
s = 0
for i in range(1,n+1):
    s += i
o = m % s
for i in range(1,n+1):
    if o >= i:
        o -= i
    else:
        break
print(o)
","0.0"
"ae532d4a-9564-46c8-a30b-9f1fe7f95bf9","l, s, res = [int(x) for x in input().split()], [], 0
for i in range(int(input())):
    s.append(input()[0])
if set(s) == set('s'):
    print(l[0])
elif set(s) == set('k'):
    print(l[1])
elif set(s) == set('c'):
    print(l[2])
elif set(s) == set(['s', 'c']):
    print(l[0]*l[1])
elif set(s) == set(['s', 'k']):
    print(l[0]*l[2])
elif set(s) == set(['c', 'k']):
    print(l[1]*l[2])
elif len(s) == 3:
    print(l[0]*l[1]*l[2])","0.0"
"5fc63383-931c-46cc-a7d1-308dc271fda6","n,d=map(int,input().split())
a=input().split()
for i in range(n):a[i]=int(a[i])
m=int(input())
sorted(a)
pri=0
if n-m>=0:
    for i in range(m):
        pri+=a[0]
        a.pop(0)
else:
    for i in range(n):
        pri+=a[0]
        a.pop(0)
    for i in range(m-n):
        pri-=d
print(pri)
    ","0.0"
"5177ddd2-f17e-4d0a-bf78-21fd90df671f","n,c = map(int,input().split())
m = [int(i) for i in input().split()]
o=0
max1 = 1
for i in range(len(m)-1):
    if m[i]!=m[i+1]:
        o+=1
    else:
        o+=1
        if o>max1:
            max1 = o
        o=0
else:
    max1=o+1
print(max1)
","0.0"
"ae532d4a-9564-46c8-a30b-9f1fe7f95bf9","a = [int(i) for i in input().split()]
c = 1
b = int(input())
for i in range(b):
    h = input().lower()
    if ""sausage"" in h:
        c *= a[0]
    elif ""cheese"" in h:
        c *= a[1]
    else:
        c *= a[2]
if b == 0:
    print(0)
else:
    print(c)","0.0"
"9acc7b61-f8ac-4953-8b12-651c2d7f8d48","n, m, k = map(int, input().split())
a = []
res = []
alph = ""abcdefghijklmnopqrstuvwxyz""
for i in range(k):
    a.append(list(map(int, input().split())))
for i in range(n):
    res.append([""."" for j in range(m)])
# print(*res)
ct = 0
for i in a:
    x1, y1, x2, y2 = i[0] - 1, i[1] - 1, i[2] - 1, i[3] - 1
    s = alph[ct]
    ct += 1
    for j in range(y1, y2 + 1):
        res[x1][j] = s
    for j in range(y1, y2 + 1):
        res[x2][j] = s
    for j in range(x1, x2 + 1):
        res[j][y1] = s
    for j in range(x1, x2):
        res[j][y2] = s
for i in range(n):
    for j in range(m):
        print(res[i][j], end="""")
    print()","0.0"
"430aade4-55bd-42b3-9586-1389412540a7","a = int(input())
b = 0
while a != 1:
    a = a // 2
    b += 1
    if a // 2 == 1:
        b += 1
print(b)","0.0"
"ae532d4a-9564-46c8-a30b-9f1fe7f95bf9","s,c,k = map(int, input().split())
n = int(input())
sp= []
a = -1
spall = ['cheese','ketchup','sausage']
spall.sort()
for i in range(0,n):
    sp.append(input())
sp.sort()
if len(sp) == 3:
    print(s*k*c)
else:
    for j in range(0,len(spall)-1):
        a+=1
        if sp[a] != spall[j]:
            z = spall[j]
    if z == 'cheese':
        print(s*k)
    if z == 'ketchup':
        print(s*c)
    else:
        print(c*k)
","0.0"
"ae532d4a-9564-46c8-a30b-9f1fe7f95bf9","s,c,k = map(int, input().split())
n = int(input())
sp= []
a = -1
spall = ['cheese','ketchup','sausage']
spall.sort()
for i in range(0,n):
    sp.append(input())
sp.sort()
if len(sp) == 3:
    print(s*k*c)
else:
    for j in range(0,len(spall)-1):
        a+=1
        if sp[a] != spall[j]:
            z = spall[j]
    if z == 'cheese':
        print(s*k)
    if z == 'ketchup':
        print(s*c)
    else:
        print(c*k)
","0.0"
"430aade4-55bd-42b3-9586-1389412540a7","n=int(input())
cnt=0
while n>1:
    if n%2==0:
        n=n//2
        cnt+=1
    else:
        n-=1
        cnt+=1
print(cnt)","0.0"
"5177ddd2-f17e-4d0a-bf78-21fd90df671f","n, k = list(map(int, input().split()))
n1 = list(map(int, input().split()))
maxx = 1
maxc = 1

for _ in range(1, n):
    if n1[_] != n1[_ - 1]:
        maxc += 1
        maxx = max(maxx, maxc)
    else:
        maxc = 1
print(maxx)","0.0"
"430aade4-55bd-42b3-9586-1389412540a7","n = int(input())
a=n
k=0
while a!=1:
    if a%2==0:
        a//=2
        k+=1
    if a%2!=0:
        a//=1.5
        k+=1
    if a%1.5!=0:
        a-=1
        k+=1
print(k)
","0.0"
"43690a23-0ff2-4f9b-8410-ec7917ae05e3","n = int(input())
res = 0
a = list(map(int, input().split()))
h = min(a)
for elem in a:
    if elem != h:
        res += elem-h
print(res)","0.0"
"d0e35e20-e37a-4750-8c0b-7641a3b72277","n = int(input())  # ÐºÐ¾Ð»Ð¸ÑÐµÑÑÐ²Ð¾ Ð³ÑÑÐ·Ð¾Ð²
m = [int(x) for x in input().split()]  # Ð¼Ð°ÑÑÐ° ÐºÐ°Ð¶Ð´Ð¾Ð³Ð¾ Ð³ÑÑÐ·Ð°

# Ð¡Ð¾Ð·Ð´Ð°ÐµÐ¼ ÑÐ»Ð¾Ð²Ð°ÑÑ Ñ ÐºÐ¾Ð»Ð¸ÑÐµÑÑÐ²Ð¾Ð¼ Ð³ÑÑÐ·Ð¾Ð² ÐºÐ°Ð¶Ð´Ð¾Ð¹ Ð¼Ð°ÑÑÑ
count = {}
for i in range(1, 5):
    count[i] = m.count(i)

# Ð¡ÑÐ¸ÑÐ°ÐµÐ¼ ÐºÐ¾Ð»Ð¸ÑÐµÑÑÐ²Ð¾ Ð¼Ð°ÑÐ¸Ð½, Ð¸ÑÐ¿Ð¾Ð»ÑÐ·ÑÑ Ð¶Ð°Ð´Ð½ÑÐ¹ Ð°Ð»Ð³Ð¾ÑÐ¸ÑÐ¼
num_cars = count[4]  # ÐºÐ¾Ð»Ð¸ÑÐµÑÑÐ²Ð¾ Ð¼Ð°ÑÐ¸Ð½ Ð½Ðµ Ð¼Ð¾Ð¶ÐµÑ Ð±ÑÑÑ Ð¼ÐµÐ½ÑÑÐµ ÐºÐ¾Ð»Ð¸ÑÐµÑÑÐ²Ð° Ð³ÑÑÐ·Ð¾Ð² Ð¼Ð°ÑÑÑ 4
num_cars += count[3]  # ÐºÐ°Ð¶Ð´ÑÐ¹ Ð³ÑÑÐ· Ð¼Ð°ÑÑÑ 3 Ð¼Ð¾Ð¶ÐµÑ Ð±ÑÑÑ Ð¿Ð¾Ð¼ÐµÑÐµÐ½ ÑÐ¾Ð»ÑÐºÐ¾ Ð² Ð¾ÑÐ´ÐµÐ»ÑÐ½ÑÑ Ð¼Ð°ÑÐ¸Ð½Ñ
num_cars += (count[2] * 2 + max(count[1] - count[2], 0) + 3) // 4  # ÐºÐ°Ð¶Ð´ÑÐµ Ð´Ð²Ð° Ð³ÑÑÐ·Ð° Ð¼Ð°ÑÑÑ 2 Ð¼Ð¾Ð³ÑÑ Ð±ÑÑÑ Ð¿Ð¾Ð¼ÐµÑÐµÐ½Ñ Ð² Ð¾Ð´Ð½Ñ Ð¼Ð°ÑÐ¸Ð½Ñ,
                                                                      # ÐºÐ°Ð¶Ð´ÑÐ¹ Ð³ÑÑÐ· Ð¼Ð°ÑÑÑ 1 Ð¼Ð¾Ð¶ÐµÑ Ð±ÑÑÑ Ð¿Ð¾Ð¼ÐµÑÐµÐ½ ÑÐ¾Ð»ÑÐºÐ¾ Ð² Ð¾ÑÐ´ÐµÐ»ÑÐ½ÑÑ Ð¼Ð°ÑÐ¸Ð½Ñ,
                                                                      # ÑÐ°ÐºÐ¶Ðµ Ð¾Ð´Ð½Ð° Ð¼Ð°ÑÐ¸Ð½Ð° Ð¼Ð¾Ð¶ÐµÑ Ð±ÑÑÑ Ð¸ÑÐ¿Ð¾Ð»ÑÐ·Ð¾Ð²Ð°Ð½Ð° Ð´Ð»Ñ Ð½Ðµ Ð±Ð¾Ð»ÐµÐµ,
                                                                      # ÑÐµÐ¼ ÑÑÐµÑ Ð³ÑÑÐ·Ð¾Ð² Ð¼Ð°ÑÑÑ 1

print(num_cars)  # Ð²ÑÐ²Ð¾Ð´Ð¸Ð¼ ÑÐµÐ·ÑÐ»ÑÑÐ°Ñ","0.0"
"430aade4-55bd-42b3-9586-1389412540a7","from math import ceil
a = int(input())
ans = 0
while a != 1:
    a = ceil(a/2)
    ans += 1
print(ans)

","0.0"
"ae532d4a-9564-46c8-a30b-9f1fe7f95bf9","l, s, res = [int(x) for x in input().split()], [], 1
for i in range(int(input())):
    s.append(input()[0])
if 's' in s:
    res *= l[0]
if 'c' in s:
    res *= l[1]
if 'k' in s:
    res *= l[2]
print(res)","0.0"
"ae532d4a-9564-46c8-a30b-9f1fe7f95bf9","s1, s2, s3 = list(map(int, input().split()))
n = int(input())

ans = 1

for i in range(n):
	a = input()
	
	if a == 'sausage':
		ans = ans*s1
	elif a == 'ketchup':
		ans = ans*s3
	elif a == 'cheese':
		ans = ans*s2
		
print(ans)
","0.0"
"5fc63383-931c-46cc-a7d1-308dc271fda6","n, d = map(int,input().split())
mas = list(map(int,input().split()))
m = int(input())
c = 0
s = 0
mas.sort()
for i in range(m):
    if c <= (len(mas)-1):
        s += mas[c]
        c+=1
    else:
        s-=d
print(s)
","0.0"
"ae532d4a-9564-46c8-a30b-9f1fe7f95bf9","a, b, c = map(int, input().split())
c1 = int(input())
b1 = []
for i in range(c1):
    b1.append(input())
if b1.count('sausage') ==0:
    a = 1
if b1.count('ketchup') == 0:
    b = 1
if b1.count('cheese') == 0:
    c = 1
if len(b1)==0:
    print(0)
else:
    print(a*b*c)","0.0"
"ae532d4a-9564-46c8-a30b-9f1fe7f95bf9","a, b, c = map(int, input().split())
c1 = int(input())
b1 = []
for i in range(c1):
    b1.append(input())
if b1.count('sausage') ==0:
    a = 1
if b1.count('ketchup') == 0:
    b = 1
if b1.count('cheese') == 0:
    c = 1
if len(b1)==0:
    print(0)
else:
    print(a*b*c)","0.0"
"5177ddd2-f17e-4d0a-bf78-21fd90df671f","n,k = map(int, input().split())
colors = list(map(int, input().split()))

len = 0
len1 = 1
color = colors[0]

for i in range(1, n):
    if colors[i] != color:
        len1 += 1
    else:
        len = max(len, len1)
        len1 = 1
    color = colors[i]

len = max(len, len1)
print(len)","0.0"
"84b45b43-cc73-4b14-ab6e-8b970134fb03","n, m = [int(i) for i in input().split()]
i = 1
while True:
    if m - i < 0:
        print(m)
        break
    elif m - i == 0:
        print(0)
        break
    else:
        m -= i
        i += 1
        if i > n:
            i = 1","0.0"
"9acc7b61-f8ac-4953-8b12-651c2d7f8d48","alphabet = 'abcdefghijklmnopqrstuvwxyz'

m, n, k = map(int, input().split())

matrix = [['.' for j in range(n)] for i in range(m)]

for i in range(k):
    x1, y1, x2, y2 = map(int, input().split())
    color_index = i % len(alphabet)
    color = alphabet[color_index]
    for j in range(y1-1, y2):
        matrix[x1-1][j] = color
        matrix[x2-1][j] = color
    for j in range(x1, x2-1):
        matrix[j][y1-1] = color
        matrix[j][y2-1] = color

for i in range(m):
    print(''.join(matrix[i]))

","0.0"
"84b45b43-cc73-4b14-ab6e-8b970134fb03","n = list(map(int, input().split()))
check = False
while not check:
    for i in range(n[0]):
        if not check:
            if n[1] > i + 1:
                n[1] -= i+1
            elif n[1] == i+1:
                print(0)
                check = True
            else:
                print(n[1])
                check = True","0.0"
"430aade4-55bd-42b3-9586-1389412540a7","n = int(input())
a=n
k=0
while a!=1:
    if a%2==0:
        a//=2
        k+=1
    elif a%2!=0:
        a//=1.5
        k+=1
    elif a%1.5!=0:
        a-=1
        k+=1
print(k)
","0.0"
"5fc63383-931c-46cc-a7d1-308dc271fda6","n,d=map(int,input().split())
a=list(map(int,input().split()))
a.sort()
m=int(input())
if m>n:
    p=sum(a)-(m-n)*d
else:
    b=a[:m]
    p=sum(b)
print(p)","0.0"
"ae532d4a-9564-46c8-a30b-9f1fe7f95bf9","s1, s2, s3 = map(int, input().split())
n = int(input())
ingredients = set()
for i in range(n):
    ingredients.add(input().strip())
num_comb = 1
for ingredient in ['sausage', 'cheese', 'ketchup']:
    if ingredient in ingredients:
        if ingredient == 'sausage':
            num_comb *= s1
        elif ingredient == 'cheese':
            num_comb *= s2
        elif ingredient == 'ketchup':
            num_comb *= s3
print(num_comb)","0.0"
"5fc63383-931c-46cc-a7d1-308dc271fda6","n, d = map(int, input().split())
a = [int(n) for n in input().split()]
m = int(input())
a.sort()
if n>=m:
    print(sum(a[:m]))
else:
    print(sum(a)-d*(m-n))","0.0"
"5fc63383-931c-46cc-a7d1-308dc271fda6","n, d = map(int, input().split())
a = list(map(int, input().split()))
m = int(input())
s = sum(a)

if n >= m:
    print(s)
else:
    j = m - n
    o = j * d
    print(s - o)","0.0"
"ae532d4a-9564-46c8-a30b-9f1fe7f95bf9","s,c,k = map(int, input().split())
n = int(input())
sp= []
for i in range(0,n):
    sp.append(input())
sp.sort()
if len(sp) == 3:
    print(s*k*c)
else:
    if sp == ['cheese ','sausage ']:
        print(s*c)
    if sp == ['cheese ','ketchup ']:
        print(k*c)
    if sp == ['ketchup ','sausage ']:
        print(s*k)
","0.0"
"ae532d4a-9564-46c8-a30b-9f1fe7f95bf9","s1, s2, s3 = map(int, input().split())
n = int(input())
ingredients = set()
for i in range(n):
    ingredients.add(input().strip())
num_comb = 1
for ingredient in ['sausage', 'cheese', 'ketchup']:
    if ingredient in ingredients:
        if ingredient == 'sausage':
            num_comb *= s1
        elif ingredient == 'cheese':
            num_comb *= s2
        elif ingredient == 'ketchup':
            num_comb *= s3
print(num_comb)","0.0"
"d0e35e20-e37a-4750-8c0b-7641a3b72277","n = int(input())
loads = list(map(int, input().split()))
loads.sort(reverse=True)

trucks = [0] * n
num_trucks = 0

for i in range(n):
    added = False
    for j in range(num_trucks):
        if trucks[j] + loads[i] <= 4:
            trucks[j] += loads[i]
            added = True
            break
    if not added:
        trucks[num_trucks] = loads[i]
        num_trucks += 1

print(num_trucks)","0.0"
"ae532d4a-9564-46c8-a30b-9f1fe7f95bf9","s,c,k = map(int, input().split())
n = int(input())
sp= []
for i in range(0,n):
    sp.append(input())
sp.sort()
if len(sp) == 3:
    print(s*k*c)
else:
    if sp == ['cheese ','sausage ']:
        print(s*c)
    if sp == ['cheese ','ketchup ']:
        print(k*c)
    if sp == ['ketchup ','sausage ']:
        print(s*k)
    if sp == ['ketchup ']:
        print(k)
    if sp == ['sausage ']:
        print(s)
    if sp == ['cheese ']:
        print(c)
","0.0"
"430aade4-55bd-42b3-9586-1389412540a7","from math import log, ceil
print(ceil(log(int(input()), 2)))","0.0"
"5fc63383-931c-46cc-a7d1-308dc271fda6","n, d = map(int,input().split())
a = [int(x) for x in input().split()]
m = int(input())
a.sort()
p = 0
if m == n:
    print(sum(a))
if m < n:
    for i in range(m):
        p += a[i]
    print(p)
if m > n:
    print(sum(a) - (m-n) * d)
","0.0"
"ae532d4a-9564-46c8-a30b-9f1fe7f95bf9","s1, s2, s3 = map(int, input().split())
n = int(input())
components = set(input().strip() for i in range(n))

sausages = s1 if ""sausage"" in components else 1
cheeses = s2 if ""cheese"" in components else 1
sauces = s3 if ""ketchup"" in components else 1

print(sausages * cheeses * sauces)
","0.0"
"84b45b43-cc73-4b14-ab6e-8b970134fb03","n, m = map(int,input().split())
f = (n+1)/2 *n
o = m % f
c = 1
while o>=c:
    o-=c
    c+=1
print(int(o))
","0.0"
"84b45b43-cc73-4b14-ab6e-8b970134fb03","n, m = [int(i) for i in input().split()]
i = 1
while True:
    if m - i < 0:
        print(m)
        break
    elif m - i == 0:
        print(0)
        break
    else:
        m -= i
        i += 1
        if i > n:
            i = 1","0.0"
"5177ddd2-f17e-4d0a-bf78-21fd90df671f","n, k = map(int, input().split())
mas = list(map(int, input().split()))
l = mas[0]
i = 1
mx = 0
for a in mas[1:]:
    if a != l:
        i += 1
    else:
        mx = max(mx, i)
        i = 1
    l = a
mx = max(mx, i)
print(mx)","0.0"
"ae532d4a-9564-46c8-a30b-9f1fe7f95bf9","a = [int(x) for x in input().split()]
n = int(input())
s = []
k = 1
for i in range(n):
    s.append(input())
for j in range(len(s)):
    if s[j] == 'sausage':
        k = k * a[j]
    if s[j] == 'ketchup':
        k = k * a[j]
    if s[j] == 'cheese':
        k = k * a[j]
print(k)","0.0"
"ae532d4a-9564-46c8-a30b-9f1fe7f95bf9","s1, s2, s3 = map(int, input().split())
n = int(input())
sausage_count = 0
cheese_count = 0
ketchup_count = 0
for i in range(n):
    component = input().strip()
    if component == ""sausage"":
        sausage_count += 1
    elif component == ""cheese"":
        cheese_count += 1
    elif component == ""ketchup"":
        ketchup_count += 1
sv = s1 if sausage_count > 0 else 1
cv = s2 if cheese_count > 0 else 1
kv = s3 if ketchup_count > 0 else 1
tv = sv * cv * kv
print(tv)","0.0"
"5177ddd2-f17e-4d0a-bf78-21fd90df671f","a=input().split()
b=input().split()
b.append(b[int(a[0])-1])
a=0
c=[]
for i in range(len(b)-1):
    if b[i]!=b[i+1]:
        a=a+1
    else:
        a=a+1
        c.append(a)
        a=0
print(max(c, default=1))","0.0"
"ae532d4a-9564-46c8-a30b-9f1fe7f95bf9","import math
mas1 = list(map(int, input().split()))
n = int(input())
mas = []
s = 0
for i in range(n):
    a = input()
    mas.append(a)
    if len(mas) == len(mas1):
        factorial = 1
        for j in mas1:
            factorial *= j
    else:
        factorial = 1
        for k in range(len(mas)):
            factorial *= k
print(factorial)



","0.0"
"43690a23-0ff2-4f9b-8410-ec7917ae05e3","n = int(input())
a = list(map(int, input().split()))
total = 0

for x in a:
    min1 = min(a)
    total += x - min1
print(total)
","0.0"
"5177ddd2-f17e-4d0a-bf78-21fd90df671f","n, k= map(int, input().split(' '))
c = list(map(int, input().split()))
p = ' '
for i in range(n-1):
    if c[i]!= c[i+1]:
        if p[-1]== ' ':
            p+=str(c[i])
        p+=str(c[i+1])
    else:
        if p[-1] != ' ':
            p+=' '
s = p[0:].split()
print(len(max(s)))
","0.0"
"ae532d4a-9564-46c8-a30b-9f1fe7f95bf9","n = input().split() # meat, cheese, ketchup
n = list(map(int, n))
l = int(input())
x = 1
for i in range(l):
    inp = input()
    if inp == 'sausage':
        x *= n[0]
    elif inp == 'ketchup':
        x *= n[2]
    else:
        x *= n[1]
print(x)
","0.0"
"ae532d4a-9564-46c8-a30b-9f1fe7f95bf9","a =list(map(int, input().split()))
d = {""sausage"": a[0], ""cheese"": a[1], ""ketchup"": a[2]}
ans = 1
for _ in range(int(input())):
    ans *= d[input().strip()]
print(ans)","0.0"
"84b45b43-cc73-4b14-ab6e-8b970134fb03","a, b = [int(x) for x in input().split()]
s = sum(range(1, a+1))
b = b%s
for i in range(a+1):
    if i <= b:
        b -= i
    else:
        print(b)
        break","0.0"
"ae532d4a-9564-46c8-a30b-9f1fe7f95bf9","a,b,c = map(int,input().split())
n = int(input())
f1=1
for i in range(n):
    m=input()
    if m == 'sausage':
        f1 = f1*a
    if m=='cheese':
        f1 = f1*b
    if m =='ketchup':
        f1 = f1*c
print(f1)
","0.0"
"ae532d4a-9564-46c8-a30b-9f1fe7f95bf9","s = input().split()
a = []
for i in s:
    a.append(int(i))
n = int(input())
b = []
for i in range(n):
    s = input()
    b.append(s)
l = 1
for i in range(len(b)):
    if b[i] == 'sausage':
        l *= a[0]
    if b[i] == 'cheese':
        l *= a[1]
    if b[i] == 'ketchup':
        l *= a[2]
print(l)","0.0"
"ae532d4a-9564-46c8-a30b-9f1fe7f95bf9","a, b, c = map(int, input().split())
c1 = int(input())
b1 = []
for i in range(c1):
    b1.append(input())
if b1.count('sausage') == 0:
    a = 1
if b1.count('ketchup') == 0:
    b = 1
if b1.count('cheese') == 0:
    c = 1
if len(b1)==0:
    print(0)
else:
    print(a*b*c)","0.0"
"5177ddd2-f17e-4d0a-bf78-21fd90df671f","n,k=map(int,input().split())
a=[int(x) for x in input().split()]
s=[]
z=0
for i in range(n):
    if a[i-1]!=a[i]:
        s.append(a[i])
    else:
        if len(s)>z:
            z=len(s)
        s=[]
        s.append(a[i])
if len(s)>z:
    z=len(s)
print(z)
","0.0"
"430aade4-55bd-42b3-9586-1389412540a7","a = int(input())
counter = 0
while a != 1:
    if a % 2 == 0:
        a //= 2
        counter += 1
    else:
        a -= 1
        counter += 1
print(counter)
","0.0"
"84b45b43-cc73-4b14-ab6e-8b970134fb03","n, m = map(int, input().split())
s = (1 + n) * n / 2
res = 0
if s > m:
    for i in range(n - 1, 0, -1):
        if m - ((1 + i) * i / 2) >= 0:
            res = m - ((1 + i) * i / 2)
            break
else:
    m = m % s
    for i in range(n - 1, 0, -1):
        if m - ((1 + i) * i / 2) >= 0:
            res = m - ((1 + i) * i / 2)
            break
print(int(res))","0.0"
"430aade4-55bd-42b3-9586-1389412540a7","a = int(input())
counter = 0
while a != 1:
    if a % 2 == 0:
        a //= 2
        counter += 1
    else:
        a -= a // 2
        counter += 1
print(counter)
","0.0"
"9acc7b61-f8ac-4953-8b12-651c2d7f8d48","m, n, k = map(int, input().split())
arr = []
for i in range(k):
    x1, y1, x2, y2 = map(int, input().split())
    arr.append(((x1-1, x2-1), (y1-1 , y2-1), chr(97+i)))
for x in range(m):
    for y in range(n):
        for el in arr[::-1]:
            if (x in (el[0][0], el[0][1]) and el[1][0] <= y <= el[1][1]) or (y in (el[1][0], el[1][1]) and el[0][0] <= x <= el[0][1]):
                print(el[2], end='')
                break
        else:
            print(""."", end="""")
    print()","0.0"
"ae532d4a-9564-46c8-a30b-9f1fe7f95bf9","s = input().split()
a = []
for i in s:
    a.append(int(i))
n = int(input())
b = []
for i in range(n):
    s = input()
    b.append(s)
l = 1
for i in range(len(b)):
    if b[i] == 'sausage':
        l *= a[0]
    if b[i] == 'cheese':
        l *= a[1]
    if b[i] == 'ketchup':
        l *= a[2]
print(l)","0.0"
"ae532d4a-9564-46c8-a30b-9f1fe7f95bf9","a, b, c = map(int,input().split())
k = int(input())
v = 1
for i in range(k):
    g = str(input())
    if g == 'sausage':
        v = v * a
    elif g == 'cheese':
        v = v * b
    elif g == 'ketchup':
        v = v * c
print(v)

","0.0"
"5177ddd2-f17e-4d0a-bf78-21fd90df671f","n, k = map(int, input().split())
a = list(map(int, input().split()))

max_length = 0
current_length = 0
current_colour = 0

for i in range(n):
    if a[i] != current_colour:
        current_colour = a[i]
        current_length += 1
    else:
        max_length = max(max_length, current_length)
        current_length = 1

max_length = max(max_length, current_length)

print(max_length)

","0.0"
"5986f14f-59c5-428e-84aa-553175c8bdb9","import math
a,b = map(int,input().split())
c = int(input())
if a*b - c*9 < 0:
    k = ((a*b-c*9)*-1)
    print('YES')
    if k > 9:
        k = ((a*b-c*9)*-1) / 9
        print(math.ceil(k))
    else:
        print(1)
else:
    print('NO')
    print(0)
","0.0"
"5fc63383-931c-46cc-a7d1-308dc271fda6","n, d = map(int, input().split())
a = list(map(int, input().split()))
m = int(input())
s = sum(a)
x = min(a)
j = abs(m - n)
list = []

if n == m:
    print(s)

elif n > m:
    while j != 0:
        list.append(x)
        j -= 1
    print(s)

else:
    o = j * d
    print(s - o)","0.0"
"5fc63383-931c-46cc-a7d1-308dc271fda6","a=input().split()
b=input().split()
c=int(input())
d=0
f=0
b.sort()
if c<=int(a[0]):
    for i in range(len(b)):
        f=f+1
        if f>c:
            break
        else:
            d=d+int(b[i])
else:
    d=d-int(a[1])*(c-int(a[0]))
    for i in range(len(b)):
        f=f+1
        if f>c:
            break
        else:
            d=d+int(b[i])
print(d)","0.0"
"84b45b43-cc73-4b14-ab6e-8b970134fb03","n = list(map(int, input().split()))
check = False
while not check:
    for i in range(n[0]):
        if not check:
            if n[1] > i + 1:
                n[1] -= i+1
            elif n[1] == i+1:
                print(0)
                check = True
            else:
                print(n[1])
                check = True
","0.0"
"d0e35e20-e37a-4750-8c0b-7641a3b72277","n = input()
l = list(map(int, input().split()))
print(sum(l)//4+1)
","0.0"
"430aade4-55bd-42b3-9586-1389412540a7","n = int(input())
g = 0
if n%2==1 and n!=1:
    g+=1
    n-=1
while n>1 and n!=2:
    n = n//2
    g+=1
    if n%2==1:
        g+=1
        n-=1
if n==2:
    g+=1
if n==1:
    g==0
print(g)
","0.0"
"ae532d4a-9564-46c8-a30b-9f1fe7f95bf9","f, g, h = map(int, input().split())
n = int(input())
compon = set(input().strip() for i in range(n))
susages  = f if ""sausage"" in compon else 1
chees  = g if ""cheese"" in compon else 1
sous = h if ""ketchup"" in compon else 1
print(susages * chees * sous)","0.0"
"5177ddd2-f17e-4d0a-bf78-21fd90df671f","n, k = map(int, input().split())
a = list(map(int,input().split()))
x = 1
y = 1
for i in range(len(a)-1):
	if a[i] != a[i+1]:
		x += 1
		if x > y:
			y = x
	else:
		x = 1
print(y)
","0.0"
"84b45b43-cc73-4b14-ab6e-8b970134fb03","n,m=map(int,input().split())
nomer=1
while(m>=nomer):
    m-=nomer
    nomer+=1
    if nomer>n:
        nomer=1
print(m)
","0.0"
"5986f14f-59c5-428e-84aa-553175c8bdb9","a, b = map(int, input().split())
c = int(input())
d = a*b
if a == 0 and c!=0 or b == 0 and c!=0:
    print('YES')
    print(c)
elif d // (c*9) > 0 or c == 0:
    print('NO')
    print(0)
elif d // c*9 < 1:
    print('YES')
    print(c - (d // (c*9)))
elif d // c*9>1:
    print('YES')
    print((c*9)//d)","0.0"
"5986f14f-59c5-428e-84aa-553175c8bdb9","a, b = map(int, input().split())
n=int(input())
c=a*b//9
if c>=n:
    print('NO')
    print(0)
elif c<n:
    print('YES')
    print(n-c)
","0.0"
"430aade4-55bd-42b3-9586-1389412540a7","n = int(input())
g = 0
if n%2==1 and n!=1:
    g+=1
    n-=1
while n>1 and n!=2:
    n = n//2
    g+=1
    if n%2==1:
        g+=1
        n-=1
if n==2:
    g+=1
if n==1:
    g==0
print(g)
","0.0"
"6dcac6bd-9973-47eb-8912-187a2999dc6b","n = int(input())
mas = list(map(int, input().split()))
for i in range(1):
    for a in range(len(mas)):
        for b in range(len(mas)):
            p = abs(mas[a] - mas[b])
            if (p not in mas) and (p != 0):
                mas.append(p)
print(len(set(mas)))","0.0"
"9acc7b61-f8ac-4953-8b12-651c2d7f8d48","m, n, k = map(int, input().split())
matrica = [['.' for j in range(n)] for i in range(m)]
aplhahti = 'abcdefghijklmnopqrstuvwxyz'
for i in range(k):
    x1, y1, x2, y2 = map(int, input().split())
    color_index = i % len(aplhahti)
    color = aplhahti [color_index]
    for j in range(y1-1, y2):
        matrica[x1-1][j] = color
        matrica[x2-1][j] = color
    for j in range(x1, x2-1):
        matrica[j][y1-1] = color
        matrica[j][y2-1] = color
for i in range(m):
    print(''.join(matrica[i]))","0.0"
"5986f14f-59c5-428e-84aa-553175c8bdb9","a,b=map(int,input().split())
n = int(input())
s = a*b
if s // (n*9) < 1:
    print('YES')
else:
    print('NO')
print(n-(s//9))","0.0"
"5986f14f-59c5-428e-84aa-553175c8bdb9","a, b = map(int, input().split())
c = int(input())
d = a*b
if a == 0 and c!=0 or b == 0 and c!=0:
    print('YES')
    print(c)
elif c == 0 or d // (c*9) > 0:
    print('NO')
    print(0)
elif d // c*9 < 1:
    print('YES')
    print(c - (d // (c*9)))
elif d // c*9>1:
    print('YES')
    print((c*9)//d)","0.0"
"430aade4-55bd-42b3-9586-1389412540a7","import math
n = int(input())
if n == 1:
    print(0)
else:
    b = 0
    if n % 2 != 0:
        b += 1
        n -= 2
    b += math.log2(n)
    print(math.ceil(b))","0.0"
"ae532d4a-9564-46c8-a30b-9f1fe7f95bf9","s1, s2, s3 = map(int, input().split())
n = int(input())
components = set(input().strip() for i in range(n))

sausages = s1 if ""sausage"" in components else 1
cheeses = s2 if ""cheese"" in components else 1
sauces = s3 if ""ketchup"" in components else 1

print(sausages * cheeses * sauces)","0.0"
"430aade4-55bd-42b3-9586-1389412540a7","import math
n = int(input())
if n == 1:
    print(0)
else:
    b = 0
    if n % 2 != 0:
        b += 1
        n -= 2
    else:
        n -= 1 
    b += math.log2(n)
    print(math.ceil(b))","0.0"
"5fc63383-931c-46cc-a7d1-308dc271fda6","n, d = map(int, input().split())
a = list(map(int, input().split()))
m = int(input())
s = sum(a)
j = abs(m - n)
list = []
s_ = 0

if n == m:
    print(s)

elif n > m:
    while m != 0:
        x = min(a)
        a.remove(x)
        list.append(x)
        m -= 1
    for i in list:
        s_ += i
    print(s_)

else:
    o = j * d
    print(s - o)
","0.0"
"5fc63383-931c-46cc-a7d1-308dc271fda6","a1, b1 = map(int, input().split())
c = list(map(int,input().split()))
cou = int(input())
c.sort()
c1 = 0
for i in range(cou):
    if i < a1:
        c1 += c[i]
    else:
        c1 -= b1
print(c1)","0.0"
"d0e35e20-e37a-4750-8c0b-7641a3b72277","n = int(input())
weights = sorted(list(map(int, input().split())), reverse=True) # ÑÑÐ¸ÑÑÐ²Ð°ÐµÐ¼ Ð²ÐµÑÐ° Ð¸ ÑÐ¾ÑÑÐ¸ÑÑÐµÐ¼ Ð¿Ð¾ ÑÐ±ÑÐ²Ð°Ð½Ð¸Ñ

trucks = [[weights[0]]] # Ð¿ÐµÑÐ²ÑÐ¹ Ð³ÑÑÐ· Ð¿Ð¾Ð¼ÐµÑÐ°ÐµÐ¼ Ð² Ð¿ÐµÑÐ²ÑÑ Ð¼Ð°ÑÐ¸Ð½Ñ
for i in range(1, n):
    added = False
    for j, t in enumerate(trucks):
        if sum(t) + weights[i] <= 4: # ÐµÑÐ»Ð¸ Ð² Ð¼Ð°ÑÐ¸Ð½Ñ Ð¼Ð¾Ð¶Ð½Ð¾ Ð´Ð¾Ð±Ð°Ð²Ð¸ÑÑ Ð³ÑÑÐ·
            trucks[j].append(weights[i]) # Ð´Ð¾Ð±Ð°Ð²Ð»ÑÐµÐ¼ Ð³ÑÑÐ· Ð² Ð¼Ð°ÑÐ¸Ð½Ñ
            added = True
            break
    if not added:
        trucks.append([weights[i]]) # ÑÐ¾Ð·Ð´Ð°ÐµÐ¼ Ð½Ð¾Ð²ÑÑ Ð¼Ð°ÑÐ¸Ð½Ñ Ð¸ Ð´Ð¾Ð±Ð°Ð²Ð»ÑÐµÐ¼ Ð³ÑÑÐ· Ð² Ð½ÐµÐµ

print(len(trucks)) # Ð²ÑÐ²Ð¾Ð´Ð¸Ð¼ ÐºÐ¾Ð»Ð¸ÑÐµÑÑÐ²Ð¾ Ð¼Ð°ÑÐ¸Ð½","0.0"
"430aade4-55bd-42b3-9586-1389412540a7","n = int(input())
i = 0
while n != 1:
    n -= n//2
    i += 1
print(i)","0.0"
"ae532d4a-9564-46c8-a30b-9f1fe7f95bf9","a, b, c = map(int, input().split())
c1 = int(input())
b1 = []
for i in range(c1):
    b1.append(input())
if b1.count('ketchup') == 0:
    b = 1
if b1.count('sausage') == 0:
    a = 1

if b1.count('cheese') == 0:
    c = 1
if len(b1)==0:
    print(0)
else:
    print(a*b*c)","0.0"
"d0e35e20-e37a-4750-8c0b-7641a3b72277","length = int(input())
array = [int(s) for s in input().split()]

for i in range(len(array)):
    if array.count(1) != 0 and array.count(3) != 0:
        array[array.index(1)] = array[array.index(1)] + array[array.index(3)]
        array.pop(array.index(3))
    if array.count(2) >= 2:
        array[array.index(2)] = array[array[array.index(2) + 1:].index(2) + array[array.index(2)]]
        array[:array.index(2)].pop(array.index(2))
print(len(array))
","0.0"
"ae532d4a-9564-46c8-a30b-9f1fe7f95bf9","a, b, c = map(int, input().split())
c1 = int(input())
b1 = []
for i in range(c1):
    b1.append(input())
if b1.count('ketchup') == 0:
    b = 1
if b1.count('cheese') == 0:
    c = 1
if b1.count('sausage') == 0:
    a = 1


if len(b1)==0:
    print(0)
else:
    print(a*b*c)","0.0"
"2335ee80-a2b1-4e2b-93c1-b3bc7d2720e8","t = int(input())
mas = []
for a in range(t):
    n = int(input())
    for b in range(2,100000000000):
        if n%b >= n//b:
            mas.append(b)
            break
for i in range(t):
    print(mas[i])
","0.0"
"5fc63383-931c-46cc-a7d1-308dc271fda6","n, d = map(int, input().split())
a = [int(n) for n in input().split()]
m = int(input())
a.sort()
if n>=m:
    print(sum(a[:m]))
else:
    print(sum(a)-d*(m-n))
","0.0"
"ae532d4a-9564-46c8-a30b-9f1fe7f95bf9","s1,s2,s3=map(int,input().split())
n=int(input())
x=[]
for i in range(n):
    s=input()
    x.append(s)
if n==3:
    k=s1*s2*s3
elif n==2:
    if(x[0]==""sausage"" and x[1]==""cheese"") or (x[1]==""sausage"" and x[0]==""cheese""):
        k=s1*s2
    elif(x[0]==""sausage"" and x[1]==""ketchup"" ) or (x[1]==""sausage"" and x[0]==""ketchup""):
        k=s1*s3
    elif(x[0]==""ketchup"" and x[1]==""cheese"") or (x[1]==""ketchup"" and x[0]==""cheese""):
        k=s3*s2
else:
    if x[0]==""sausage"":
        k=s1
    elif x[0]==""cheese"":
         k=s2
    elif x[0]==""ketchup"":
         k=s3
print(k)
","0.0"
"d0e35e20-e37a-4750-8c0b-7641a3b72277","n = int(input())
m = list(map(int, input().split()))
res = 0
ma = max(m)

for i in m:
	res += i

if res % ma == 0:
	print(res//ma)
else:
	print((res//ma) +1)
","0.0"
"d0e35e20-e37a-4750-8c0b-7641a3b72277","from math import ceil
input()
a, res = [int(x) for x in input().split()], 0
res += min(a.count(3), a.count(1)) + a.count(4) + max(a.count(3), a.count(1)) - min(a.count(3), a.count(1))
if a.count(2)%2:
    res += a.count(2)//2+1
else:
    res += a.count(2)//2
print(res)","0.0"
"5fc63383-931c-46cc-a7d1-308dc271fda6","n, d = map(int, input().split())  # ÐºÐ¾Ð»Ð¸ÑÐµÑÑÐ²Ð¾ Ð¼ÐµÑÑ Ð¸ ÑÐ°Ð·Ð¼ÐµÑ ÑÑÑÐ°ÑÐ°
a = list(map(int, input().split()))  # ÑÑÐ¾Ð¸Ð¼Ð¾ÑÑÑ ÐºÐ°Ð¶Ð´Ð¾Ð³Ð¾ Ð¼ÐµÑÑÐ°
m = int(input())  # Ð¾Ð±ÑÐµÐµ ÐºÐ¾Ð»Ð¸ÑÐµÑÑÐ²Ð¾ Ð¿Ð¾ÑÐµÑÐ¸ÑÐµÐ»ÐµÐ¹

a_sorted = sorted(a)  # ÑÐ¾ÑÑÐ¸ÑÑÐµÐ¼ ÑÐ¿Ð¸ÑÐ¾Ðº ÑÑÐ¾Ð¸Ð¼Ð¾ÑÑÐµÐ¹ Ð¿Ð¾ Ð²Ð¾Ð·ÑÐ°ÑÑÐ°Ð½Ð¸Ñ

profit = 0  # Ð½Ð°ÑÐ°Ð»ÑÐ½Ð°Ñ Ð¿ÑÐ¸Ð±ÑÐ»Ñ ÑÐ°Ð²Ð½Ð° 0
i = 0  # Ð¸Ð½Ð´ÐµÐºÑ ÑÐµÐºÑÑÐµÐ³Ð¾ Ð¼ÐµÑÑÐ° Ð½Ð° Ð¿Ð°ÑÐºÐ¾Ð²ÐºÐµ
for j in range(m):  # Ð´Ð»Ñ ÐºÐ°Ð¶Ð´Ð¾Ð³Ð¾ Ð¿Ð¾ÑÐµÑÐ¸ÑÐµÐ»Ñ
    if i >= n:  # ÐµÑÐ»Ð¸ ÑÐ²Ð¾Ð±Ð¾Ð´Ð½ÑÑ Ð¼ÐµÑÑ Ð½Ð° Ð¿Ð°ÑÐºÐ¾Ð²ÐºÐµ Ð½ÐµÑ
        profit -= d  # ÑÑÐ¸ÑÑÐ²Ð°ÐµÐ¼ ÑÑÑÐ°Ñ
    else:
        profit += a_sorted[i]  # Ð´Ð¾Ð±Ð°Ð²Ð»ÑÐµÐ¼ ÑÑÐ¾Ð¸Ð¼Ð¾ÑÑÑ Ð¸ÑÐ¿Ð¾Ð»ÑÐ·Ð¾Ð²Ð°Ð½Ð¸Ñ Ð¼ÐµÑÑÐ°
        i += 1  # Ð¿ÐµÑÐµÑÐ¾Ð´Ð¸Ð¼ Ðº ÑÐ»ÐµÐ´ÑÑÑÐµÐ¼Ñ Ð¼ÐµÑÑÑ Ð½Ð° Ð¿Ð°ÑÐºÐ¾Ð²ÐºÐµ

print(profit)  # Ð²ÑÐ²Ð¾Ð´Ð¸Ð¼ Ð¸ÑÐ¾Ð³Ð¾Ð²ÑÑ Ð¿ÑÐ¸Ð±ÑÐ»Ñ","0.0"
"5986f14f-59c5-428e-84aa-553175c8bdb9","a, b  = map(int, input().split())
n = int(input())
if n * 9 <= a * b:
    print(""NO"")
    print(""0"")
else:
    print(""YES"")
    print(n-a*b//9)","0.0"
"ae532d4a-9564-46c8-a30b-9f1fe7f95bf9","b, r, y = map(int, input().split())
k = int(input())
a = [0] * k
s1 = 'sc'
s2 = 'ck'
s3 = 'sk'
for i in range(k):
    a[i] = input()
if k == 3:
    res = b * r * y
if k == 2:
    if a[0][0] in s1 and a[1][0] in s1:
        res = b * r
    if a[0][0] in s2 and a[1][0] in s2:
        res = r * y
    if a[0][0] in s3 and a[1][0] in s3:
        res = b * y
if k == 1:
    if a[0][0] == 'k':
            res = y    
    if a[0][0] == 's':
            res = b
    if a[0][0] == 'c':
            res = r    
print(res)","0.0"
"c0df7d49-26f5-451c-b44a-1e0bca60bca5","a = [int(s) for s in input().split()]

print(len(a) - 1)","0.0"
"c9e1ff81-5755-43cb-8439-49ef952f622a","sp = list(map(int, input().split()))
print(max(sp))
","0.0"
"d658f071-1e55-45e3-b3ad-e9384d03b9b9","sp = list(map(int, input().split()))
print(int(sum(sp)/len(sp)))
","0.0"
"e5e8f4d5-0b0f-4a52-b5a7-12f8ef0a52f0","a = int(input())
b = int(input())
c = int(input())
sp = []
sp.append(a)
sp.append(b)
sp.append(c)
sp.sort()
print(*sp)
","0.0"
"d0a972df-02e0-41b9-a5e6-ff41f6ccc00e","n = int(input())
sp =[]
for i in range(n):
    sp.append(int(input()))
print(min(sp))
if min(sp) >= -15:
    print('NO')
else:
    print('YES')
","0.0"
"521b1be0-3bd5-45f4-94f5-dad4b82ad375","n = input()
print(max([int(i) for i in input().split()]))
","0.0"
"4ecec1ec-211d-4ce0-bd4b-ee2498ae1afa","n = input()
for i in range(len(n)-1, -1, -1):
    print(n[i], end = "" "")
","0.0"
"645dbba8-e48e-4111-abe4-d1ca480792d6","n = input()
for i in range(len(n)):
    print(n[i], end = "" "")
","0.0"
"311d9bb7-84d8-4a04-9af9-fba11c6f224b","a, x = [int(i) for i in input().split()]
print(a**x)
","0.0"
"d0e35e20-e37a-4750-8c0b-7641a3b72277","a = int(input())

array = [int(s) for s in input().split()]
counter = 0

counter += array.count(4)
counter += array.count(2) // 2
counter += array.count(2) % 2
counter += min(array.count(1), array.count(3))
counter += (max(array.count(1), array.count(3)) - min(array.count(1), array.count(3)))
print(counter)
","0.0"
"d0e35e20-e37a-4750-8c0b-7641a3b72277","a = int(input())

array = [int(s) for s in input().split()]
counter = 0

counter += array.count(4)
counter += array.count(2) // 2
counter += array.count(2) % 2
counter += min(array.count(1), array.count(3))

if array.count(1) > array.count(3):
    counter += array.count(1) // 4
    if array.count(1) % 4 != 0:
        counter+= 1
else:
    counter += (max(array.count(1), array.count(3)) - min(array.count(1), array.count(3)))

print(counter)
","0.0"
"d0e35e20-e37a-4750-8c0b-7641a3b72277","a = int(input())

array = [int(s) for s in input().split()]
counter = 0

counter += array.count(4)
counter += array.count(2) // 2
counter += array.count(2) % 2
counter += min(array.count(1), array.count(3))

if array.count(1) - min(array.count(1), array.count(3)) > 4:
    counter += array.count(1) // 4
    if array.count(1) % 4 != 0:
        counter+= 1
else:
    counter += (max(array.count(1), array.count(3)) - min(array.count(1), array.count(3)))

print(counter)

","0.0"
"d0e35e20-e37a-4750-8c0b-7641a3b72277","n = int(input())
s = 0
sp = [int(s) for s in input().split()]
s += sp.count(4)
s += (max(sp.count(1),sp.count(3)) - min(sp.count(1),sp.count(3)))
s += sp.count(2) // 2
s += sp.count(2) % 2
print(s)
","0.0"
"d0e35e20-e37a-4750-8c0b-7641a3b72277","a = int(input())

array = [int(s) for s in input().split()]
counter = 0

counter += array.count(4)
counter += array.count(2) // 2
counter += array.count(2) % 2


if array.count(1) > array.count(3):
    counter += array.count(1) // 4
    if array.count(1) % 2 == 0:
        pass
    else:
        if array.count(1) % 4 != 0:
            counter+= 1
else:
    counter += (max(array.count(1), array.count(3)) - min(array.count(1), array.count(3)))

    
print(counter)

","0.0"
"5986f14f-59c5-428e-84aa-553175c8bdb9","a, b = map(int,input().split())
n = int(input())
if n>=0:
    if a*b//9 == n:
        print('NO')
        print(0)

    else:
        print('YES')
        print(abs(n-(a*b//9)))
","0.0"
"5986f14f-59c5-428e-84aa-553175c8bdb9","a, b = map(int,input().split())
n = int(input())
if n == 0:
    print('NO')
    print(0)
elif n>0:
    if a*b//9 == n:
        print('NO')
        print(0)

    else:
        print('YES')
        print(abs(n-(a*b//9)))
","0.0"
"43690a23-0ff2-4f9b-8410-ec7917ae05e3","n = int(input())
sp = [int(s) for s in input().split()]
a = 0
for i in range(len(sp)):
    a += (sp[i] - min(sp))
print(a)
","0.0"
"43690a23-0ff2-4f9b-8410-ec7917ae05e3","n=int(input())
sp=[int(s) for s in input().split()]
a=0
for i in range(len(sp)):
    a=a+(sp[i]-min(sp))
print(a)","0.0"
"43690a23-0ff2-4f9b-8410-ec7917ae05e3","n=int(input())
sp=[int(s) for s in input().split()]
a=0
for i in range (len(sp)):
    a+= (sp[i] - min (sp))
print(a)","0.0"
"43690a23-0ff2-4f9b-8410-ec7917ae05e3","n = int(input())
sp = [int(s) for s in input().split()]
a = 0
for i in range(len(sp)):
    a += (sp[i] - min(sp))
print(a)
","0.0"
"5986f14f-59c5-428e-84aa-553175c8bdb9","a,b=map(int,input().split())
n=int(input())
S=a*b
c=n*9
if S//9==n:
    print(""NO"")
    print(0)
else:
    print(""YES"")
    print(n-S//9)
","0.0"
"5986f14f-59c5-428e-84aa-553175c8bdb9","a,b=map(int,input().split())
n=int(input())
S=a*b
c=n*9
if S//9==n:
    print(""NO"")
    print(0)
elif n==0:
    print(""NO"")
    print(0)
else:
    print(""YES"")
    print(n-S//9)
","0.0"
"48521f16-2133-47f1-b071-0706a6062411","mas = ['Ð°', 'Ð±', 'Ð²', 'Ð³', 'Ð´', 'Ðµ', 'Ð¶', 'Ð·', 'Ð¸', 'Ð¹',
 'Ðº', 'Ð»', 'Ð¼', 'Ð½', 'Ð¾', 'Ð¿', 'Ñ', 'Ñ', 'Ñ', 'Ñ',
 'Ñ', 'Ñ', 'Ñ', 'Ñ', 'Ñ', 'Ñ', 'Ñ', 'Ñ', 'Ñ', 'Ñ', 'Ñ', 'Ñ']
s = input()
mas2 = s.split()
mas3 = []
for a in range(len(mas2)):
    s1 = 'Ð¼ÑÑ-' + mas[mas.index(mas2[a][0]) - 1] + mas2[a][1:]
    mas3.append(s1)
print(*mas3)","0.0"
"0e835939-e24c-4e99-b563-d8be842cec4d","masl = ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm',
        'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z']
mash = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'
s = input()
k1 = 0
k2 = 0
for a in s:
        if a in masl:
                k1 += 1
        if a in mash:
                k2 += 1
if k1 == 0 or k2 == 0:
        print(-1)
else:
        if k1/k2 == k1//k2:
                print(k1//k2)
        else:
                print(k1/k2)","0.0"
"c0df7d49-26f5-451c-b44a-1e0bca60bca5","print(len(input().split())-1)
","0.0"
"4e5b21c0-e86f-4eac-82b6-1a0d00ae4199","a = [int(i) for i in input().split()]
print(a.count(max(a)))
","0.0"
"875ec0a5-0a8e-468b-b0f0-1b32c0337354","c = int(input())
c = 0
for i in [int(i) for i in input().split()]:
    if i>0:
        c+=1
print(c)
","0.0"
"875ec0a5-0a8e-468b-b0f0-1b32c0337354","c = int(input())
c = 0
for i in [int(i) for i in input().split()]:
    if i>=0:
        c+=1
print(c)

","0.0"
"35d772a5-7770-4a91-9118-ad11e4ae7feb","c = int(input())
c = 0
a = [int(i) for i in input().split()]
for i in range(len(a)):
    try:
        if a[i+1]>a[i]:
            c+=1
    except:
        break
print(c)
","0.0"
"6671bab8-0e57-4f15-bc39-c933a2495f50","c = int(input())
c = 0
a = [int(i) for i in input().split()]
for i in range(0, len(a), 2):
    try:
        a[i], a[i+1] = a[i+1], a[i]
    except:
        break
print(*a)
","0.0"
"0e835939-e24c-4e99-b563-d8be842cec4d","mi= ['a','b','c','d','e','f','g','h','i','j','k','l','m',
       'n','o','p','q','r','s','t','u','v','w','x','y','z']
ma= 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'
a = input()
k1=0
k2=0
for i in a:
    if i in mi:
        k1 +=1
    if i in ma:
        k2 +=1
if k1==0 or k2==0:
    print(-1)
else:
    if k1/k2 == k1//k2:
        print(k1//k2)
    else:
        print(k1/k2)
","0.0"
"0e835939-e24c-4e99-b563-d8be842cec4d","a = input()
s = 'abcdefghijklmnopqrstuvwxyz'
z = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'
sc = zc = 0
for i in a:
    if i in s:
        sc += 1
    elif i in z:
        zc += 1
if sc == 0 or zc == 0:
    print(-1)
else:
    if sc / zc == int(sc / zc):
        print(int(sc/zc))
    else:
        print(sc/zc)
","0.0"
"1d7d28c9-4d1b-4d70-b2e1-b0393775ab4a","a = input()
s = 'ÐÐÐÐÐÐ£Ð«Ð­Ð®Ð¯'
l = '0123456789'
x = str()
y = 0
for i in a:
    if i in l:
        x += i
    elif i in s:
        y += 1
print(int(x) % y)
","0.0"
"48521f16-2133-47f1-b071-0706a6062411","a = input().split()
s = 'ÑÐ°Ð±Ð²Ð³Ð´ÐµÑÐ¶Ð·Ð¸Ð¹ÐºÐ»Ð¼Ð½Ð¾Ð¿ÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑ'
for i in a:
    print('Ð¼ÑÑ-'+s[s.find(i[0])-1]+i[1:], end="" "")
","0.0"
"0e835939-e24c-4e99-b563-d8be842cec4d","z = 0
s = 0
for i in input():
    if 'a' <= i <= 'z':
        s += 1
    else:
        if 'A' <= i <= 'Z':
            z += 1
if z!=0 and s!=0:
    if s%z==0:
        print(int(s/z))
    else:
        print(s/z)
else:
    print(-1)
","0.0"
"0e835939-e24c-4e99-b563-d8be842cec4d","s = input()
c=0
k=0
for ch in s:
    if ch.isupper():
        c += 1
    if ch.islower():
        k+=1
if c > 0 and k>0:
    if int(k/c)==k/c:
        print(int(k/c))
    else:
        print(k/c)
else:
    print(-1)
","0.0"
"1d7d28c9-4d1b-4d70-b2e1-b0393775ab4a","s=input()
q='ÐÐÐÐÐÐ£Ð«Ð­Ð®Ð¯'
k='0123456789'
x=str()
c=0
for i in s:
    if i in k:
        x+=i
    if i in q:
        c+=1
print(int(x)%c)
    
","0.0"
"1d7d28c9-4d1b-4d70-b2e1-b0393775ab4a","s = input()
a='ÐÐÐÐÐÐ£Ð«Ð­Ð®Ð¯'
c='1234567890'
x=str()
y=0
for i in s:
    if i in c:
        x+=i
    if i in a:
        y+=1
print(int(x)%y)
","0.0"
"1d7d28c9-4d1b-4d70-b2e1-b0393775ab4a","x=input()
s='ÐÐÐÐÐÐ£Ð«Ð­Ð®Ð¯'
s1='1234567890'
c=str()
k=0
for i in x:
    if i in s1:
        c+=i
    elif i in s:
        k+=1
b=int(c)%k
print(b)
","0.0"
"1d7d28c9-4d1b-4d70-b2e1-b0393775ab4a","m=input()
s='ÐÐÐÐÐÐ£Ð«Ð­Ð®Ð¯'
l='1234567890'
x=str()
v=0
for i in m:
    if i in l:
        x+=i
    elif i in s:
        v+=1
print(int(x)%v)
","0.0"
"48521f16-2133-47f1-b071-0706a6062411","a = 'Ð°Ð±Ð²Ð³Ð´ÐµÑÐ¶Ð·Ð¸Ð¹ÐºÐ»Ð¼Ð½Ð¾Ð¿ÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑ'
s=[i for i in input().split()]
for i in s:
    print('Ð¼ÑÑ-',a[a.find(i[0])-1],i[1:],sep='',end=' ')
","0.0"
"1d7d28c9-4d1b-4d70-b2e1-b0393775ab4a","a=input()
s='ÐÐ¯Ð£Ð®ÐÐÐÐ«ÐÐ­'
c='0123456789'
b=str()
y=0
for i in a:
    if i in c:
        b+=i
    elif i in s:
        y+=1
print(int(b)%y)
","0.0"
"0e835939-e24c-4e99-b563-d8be842cec4d","z=0
s=0
for i in input():
	if 'a'<=i<='z':
		s+=1
	else:
		if 'A'<=i<='Z':
			z+=1
if z!=0 and s!=0:
	if s%z==0:
		print(int(s/z))
	else:
		print(s/z)
else:
	print(-1)","0.0"
"0e835939-e24c-4e99-b563-d8be842cec4d","a=0
b=0
for i in input():
 if 'a'<=i<='z':
  b+=1
 else:
  if 'A'<=i<='Z':
   a+=1
if a!=0 and b!=0:
 if b%a==0:
  print(int(b/a))
 else:
  print(b/a)
else:
 print(-1)","0.0"
"0e835939-e24c-4e99-b563-d8be842cec4d","z=0
s=0
for i in input():
 if 'a'<=i<='z':
  s+=1
 else:
  if 'A'<=i<='Z':
   z+=1
if z!=0 and s!=0:
 if s%z==0:
  print(int(s/z))
 else:
  print(s/z)
else:
 print(-1)","0.0"
"0e835939-e24c-4e99-b563-d8be842cec4d","m=['a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z']
m1='ABCDEFGHIJKLMNOPQRSTUVWXYZ'
s=input()
k1=0
k2=0
for a in s:
    if a in m:
        k1+=1
    if a in m1:
        k2+=1
if k1==0 or k2==0:
    print(-1)
else:
    if k1/k2==k1//k2:
        print(k1//k2)
    else:
        print(k1/k2)
","0.0"
"0e835939-e24c-4e99-b563-d8be842cec4d","m='a',""b"",'c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z'
m1='ABCDEFGHIJKLMNOPQRSTUVWXYZ'
s=input()
k1=0
k2=0
for a in s:
	if a in m:
		k1+=1
	if a in m1:
		k2+=1
if k1==0 or k2==0:
	print(-1)
else:
	if k1/k2==k1//k2:
		print(k1//k2)
	else:
		print(k1/k2) ","0.0"
"0e835939-e24c-4e99-b563-d8be842cec4d","s=input()
x=0
y=0
for i in s:
    if  'a' <=i and i<='z' :
         x=x+1
    else:
         if  'A'<=i and i<='Z':
              y=y+1
if x!=0 and y!=0:
    if x%y==0:
        print(int(x/y))
    else:
        print(x/y)
else:
    print(-1)","0.0"
"1d7d28c9-4d1b-4d70-b2e1-b0393775ab4a","a=0
b=''
s1='ÐÐÐÐÐÐ£Ð«Ð­Ð®Ð¯'
for i in input():
    if i in s1:
        a=a+1
    if 47<ord(i)<58:
        b=b+i
print(int(b)%a)","0.0"
"48521f16-2133-47f1-b071-0706a6062411","s=input().split()
s1='ÑÐ°Ð±Ð²Ð³Ð´ÐµÑÐ¶Ð·Ð¸Ð¹ÐºÐ»Ð¼Ð½Ð¾Ð¿ÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑ'
for i in s:
    print('Ð¼ÑÑ-'+s1[s1.find(i[0])-1]+i[1:], end=' ')","0.0"
"48521f16-2133-47f1-b071-0706a6062411","s=input().split()
s1='ÑÐ°Ð±Ð²Ð³Ð´ÐµÑÐ¶Ð·Ð¸Ð¹ÐºÐ»Ð¼Ð½Ð¾Ð¿ÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑ'
for i in s:
    print('Ð¼ÑÑ-'+s1[s1.find(i[0])-1]+i[1:], end=' ')","0.0"
"9acc7b61-f8ac-4953-8b12-651c2d7f8d48","m, n, k = [int(i) for i in input().split()]
s = []
alph = 'abcdefghijklmnopqrstuvwxyz'
for i in range(m):
    s.append(['.' for i in range(n)])
for i in range(k):
    w = alph[i]
    x1, y1, x2, y2 = [int(i) for i in input().split()]
    for j in range(len(s)):
        if j == x1-1 or j == x2-1:
            s[j][y1-1:y2] = w*(y2-y1+1)
        elif x1-1 < j < x2-1:
            s[j][y1-1] = s[j][y2-1] = w
for i in s:
    print(''.join(i))
","0.0"
"2335ee80-a2b1-4e2b-93c1-b3bc7d2720e8","from math import sqrt
for i in range(int(input())):
    n = int(input())
    for k in range(int(sqrt(n)), n):
        if n % k >= n // k:
            print(k)
            break
","0.0"
"2335ee80-a2b1-4e2b-93c1-b3bc7d2720e8","from math import sqrt
for i in range(int(input())):
    n = int(input())
    for k in range(1, n):
        if n % k >= n // k:
            print(k)
            break
","0.0"
"a62a737e-0fbc-451b-9f67-2d7804740ccf","a = int(input())
b = int(input())
c = int(input())
c = c-a
print(c // b)","0.0"
"6d14c7f2-95e1-464c-a3cb-bcab860928ae","a, b, c = map(int, input().split())
mas = [
    2*a + 2*b,
    2*b + 2*c,
    2*c + 2*a,
    a+b+c,
       ]
print(min(mas))","0.0"
"408e0ac8-b3c0-4123-bcb2-e396802f5399","n = int(input())
if (n//2) % 2 != 0:
    print(n//4)
else:
    print((n//4)-1)","0.0"
"408e0ac8-b3c0-4123-bcb2-e396802f5399","n = int(input())
if n < 4:
    print(0)
else:
    if (n//2) % 2 != 0:
        print(n//4)
    else:
        print((n//4)-1)","0.0"
"d5e4d47f-6494-4c3f-b408-6562c81ae4e7","p, k, t, r = map(int, input().split())
if p % k == 0:
    kv = p // k
else:
    kv = p // k + 1
t = kv*t + (kv-1) * r
print(t)","0.0"
"94ac4455-5ad7-46a1-835a-ac155d995664","n = int(input())
k = 0
for a in range(n):
    q, w, e = map(int, input().split())
    if q+w+e >= 2:
        k += 1
print(k)","0.0"
"01c8944f-0a22-4bc7-8338-acd655974e1a","n, m = map(int, input().split())
mas = []
for i in range(n):
    a, b = map(int, input().split())
    s = a/b*m
    mas.append(s)
s = round(min(mas), 6)
s = str(s)
x = s.index('.')
while len(s[x:]) < 7:
    s += '0'
print(s)","0.0"
"004dd7ed-c513-4c47-9a8e-76828ba86070","n = int(input())
mx = -1
su = 0
mas = list(map(int, input().split()))
for a in mas:
    su += a
    mx = max(mx, a)
s = mx*n -su
print(s)","0.0"
"de60668c-9cf3-4d87-80d1-457552bd8a37","c, m = map(int, input().split())
for a in range(1, 15):
    if (a*c - m) % 10 == 0 or a*c % 10 == 0:
        print(a)
        break","0.0"
"5986f14f-59c5-428e-84aa-553175c8bdb9","# ÐÐ±ÑÑÐ²Ð¸ÑÑ ÐºÐ¾Ð½ÑÑÐ°Ð½ÑÑ
MIN_SIZE = 9    # ÐÐ¸Ð½Ð¸Ð¼Ð°Ð»ÑÐ½Ð°Ñ Ð¿Ð»Ð¾ÑÐ°Ð´Ñ Ð´Ð»Ñ Ð¾Ð´Ð½Ð¾Ð³Ð¾ ÑÐ°ÑÑÐµÐ½Ð¸Ñ

# ÐÐ°Ð¿ÑÐ¾ÑÐ¸ÑÑ Ð´Ð°Ð½Ð½ÑÐµ
width, length = map(int, input().split())   # Ð Ð°Ð·Ð¼ÐµÑÑ ÑÑÐ¸ÐºÐ°
seeds = int(input())    # ÐÐ¾Ð»-Ð²Ð¾ ÑÐµÐ¼ÑÐ½

max_seeds = width * length // MIN_SIZE
if seeds > max_seeds:
    print('YES')
    print(seeds - max_seeds)
else:
    print('NO')
    print(0)","0.0"
"43690a23-0ff2-4f9b-8410-ec7917ae05e3","def main() -> int:
    # ÐÐ°Ð¿ÑÐ¾ÑÐ¸ÑÑ Ð´Ð°Ð½Ð½ÑÐµ
    icicle = int(input())
    icicle_on_houses = list(map(int, input().split()))

    # ÐÑÑÐ¾ÑÑÐ¸ÑÐ¾Ð²Ð°ÑÑ Ð¸ ÑÐµÐ²ÐµÑÑÐ½ÑÑÑ ÑÐ¿Ð¸ÑÐ¾Ðº
    icicle_on_houses.sort()
    icicle_on_houses = icicle_on_houses[::-1]

    result = 0
    min_value = icicle_on_houses[-1]
    for value in icicle_on_houses:
        if value == min_value:
            return result

        result += value - min_value


if __name__ == '__main__':
    print(main())
","0.0"
"a62a737e-0fbc-451b-9f67-2d7804740ccf","a = int(input())
b = int(input())
c = int(input())

print((c - a) // b)","0.0"
"c0df7d49-26f5-451c-b44a-1e0bca60bca5","subsequence = list(map(int, input().split()))

count = 0
for el in subsequence:
    if el != 0:
        count += 1

print(count)
","0.0"
"a62a737e-0fbc-451b-9f67-2d7804740ccf","a = int(input())
b = int(input())
c = int(input())
if c>a:
     print((c-a)//b)
else:
    print(0)","0.0"
"6d14c7f2-95e1-464c-a3cb-bcab860928ae","q,w,e=map(int,input().split())
s1 = (q+w)*2
s2 = q+w+e
if s1<s2:
    print(s1)
else:
    print(s2)","0.0"
"408e0ac8-b3c0-4123-bcb2-e396802f5399","n = int(input())
if n<4 or n%2!=0:
    print(0)
elif n%4==0:
    print(n//4-1)
else:
    print(n//4)
","0.0"
"d5e4d47f-6494-4c3f-b408-6562c81ae4e7","p,k,t,r = map(int,input().split())
x = p//k
if p%k!=0:
    x+=1
y = x*t+(x-1)*r
print(y)","0.0"
"6d14c7f2-95e1-464c-a3cb-bcab860928ae","d1,d2,d3=map(int,input().split())
s1 = (d1+d2)*2
s2 = d1+d2+d3
if s1<s2:
    print(s1)
else:
    print(s2)
","0.0"
"6d14c7f2-95e1-464c-a3cb-bcab860928ae","d1,d2,d3=map(int,input().split())
s1 = (d1+d2)*2
s2 = d1+d2+d3
s3 = (d3+d2)*2
s4 = (d1+d3)*2
x = min(s1, s2, s3, s4)
print(x)","0.0"
"0c04c2f7-1548-4fa7-afc6-5ef064ea3a9f","a = input()
print(a[0]+a[2])
","0.0"
"74a21b08-f61e-495f-a883-f02328dc4dae","a = input()
print(int(a[0])+int(a[1])+int(a[2]))
","0.0"
"66cdaa4c-6fe2-43ac-9cc8-08f59916608f","a = int(input())
b = int(input())
print(a+b,(b*8)+(a*6))
","0.0"
"cb96b982-37a0-487b-8b5c-67d27e6f7094","a = int(input())
print(a//60,a%60)
","0.0"
"b85b4d55-02c5-4f5b-9c58-538068bf5699","a,b,c = map(int, input().split())
print(((a+b+c)//2)+((a+b+c)%2))
","0.0"
"a0497858-245b-4fc6-9d58-990c5e2f0724","n = int(input())
sp = []
k,maxk = 0,0
for i in range(n):
    sp.append(int(input()))
for j in sp:
    if j%10 == 2:
        k = j
        if maxk < k:
            maxk = k
print(maxk)
","0.0"
"931dc9d6-3183-4d35-bee6-95b210e0268a","a = int(input())
spd= []
k = 0
def KolDel(x):
    sp =[]
    for t in range(1,int(x**0.5)+1):
        if x % t == 0:
            sp.append(t)
            if x//t != t:
                sp.append(x//t)
        sp.sort()
    return sp
print(*KolDel(a))
","0.0"
"c479ed62-3a40-4f93-89c8-b674826ab144","a = int(input())
spd= []
k = 0
def KolDel(x):
    sp =[]
    for t in range(1,int(x**0.5)+1):
        if x % t == 0:
            sp.append(t)
            if x//t != t:
                sp.append(x//t)
        sp.sort()
    return sp
print(len(KolDel(a)))
","0.0"
"f2aee372-d88a-497b-a1d2-64b122fc8b0a","a = int(input())
spd= []
k = 0
def KolDel(x):
    sp =[]
    for t in range(1,int(x**0.5)+1):
        if x % t == 0:
            sp.append(t)
            if x//t != t:
                sp.append(x//t)
        sp.sort()
    return sp
print((KolDel(a)[1]))
","0.0"
"f2aee372-d88a-497b-a1d2-64b122fc8b0a","a = int(input())
spd= []
k = 0
def KolDel(x):
    sp =[]
    for t in range(1,int(x**0.5)+1):
        if x % t == 0:
            sp.append(t)
            if x//t != t:
                sp.append(x//t)
        sp.sort()
    return sp
print((KolDel(a)[1]))
","0.0"
"4e5b21c0-e86f-4eac-82b6-1a0d00ae4199","a = [int(s) for s in input().split()]

elem = max(a)

print(a.count(elem))","0.0"
"3c867d85-e9aa-482c-ac5e-574724751b37","s = input()
mas = ['A', 'E', 'O', 'I', 'U', 'Y']
mx = -1
k = 0
for a in range(1, len(s)+1):
    if s[a-1] not in mas:
        k += 1
    else:
        mx = max(mx, k)
        k = 0
mx = max(mx, k)

print(mx+1)
","0.0"
"dd32efc4-7f8d-4180-b85e-a2c76a64a9f3","n, m = map(int, input().split())
mas = []
p = [0] * (m+2)
mas.append(p)
for i in range(n):
    ma = list(map(int, input().split()))
    ma = [0] + ma + [0]
    mas.append(ma)
mas.append(p)
s = 0
for i in range(1, n+1):
    for j in range(1, m+1):
        k = mas[i][j]
        if k > mas[i][j+1] and k > mas[i][j-1] and k > mas[i-1][j] and k > mas[i+1][j]:
            s += 1
print(s)","0.0"
"a62a737e-0fbc-451b-9f67-2d7804740ccf","a = int(input())
b = int(input())
c = int(input())
print((c-a)//b)
","0.0"
"e5e8f4d5-0b0f-4a52-b5a7-12f8ef0a52f0","a = int(input())
b = int(input())
c = int(input())
numbers = [a, b, c]
numbers.sort()
print(str(numbers[0]) + "" "" + str(numbers[1]) + "" "" + str(numbers[2]))
","0.0"
"b8f9bbc2-7933-426f-a21d-ff3e82abc198","s = input()

max_char = ''
max_len = 0

for i in range(len(s)):
    count = 1
    for j in range(i+1, len(s)):
        if s[j] == s[i]:
            count += 1
        else:
            break
    if count > max_len:
        max_len = count
        max_char = s[i]

print(max_char, max_len)","0.0"
"b8f9bbc2-7933-426f-a21d-ff3e82abc198","s = input()

max_char = ''
max_len = 0

for i in range(len(s)):
    count = 1
    for j in range(i+1, len(s)):
        if s[j] == s[i]:
            count += 1
        else:
            break
    if count > max_len:
        max_len = count
        max_char = s[i]

print(max_char, max_len)","0.0"
"4b1be5b6-131a-4853-bf20-dadf3bbd10d9","import math

h = int(input())
a = int(input())
b = int(input())

# Calculate number of days required to climb to the top
days = math.ceil((h-a)/(a-b))+1

print(days)
","0.0"
"4e5b21c0-e86f-4eac-82b6-1a0d00ae4199","nums = list(map(int, input().split()))
nums.pop()
max_num = max(nums)
count = nums.count(max_num)
print(count)
","0.0"
"35d772a5-7770-4a91-9118-ad11e4ae7feb","n = int(input())
arr = list(map(int, input().split()))
count = 0
for i in range(1, n):
    if arr[i] > arr[i-1]:
        count += 1
print(count)
","0.0"
"02fbb42a-472d-4e95-a306-13c6db519654","n = int(input())
adj_matrix = []
for i in range(n):
    adj_matrix.append(list(map(int, input().split())))
edges = []
for i in range(n):
    for j in range(i+1, n):
        if adj_matrix[i][j] == 1:
            edges.append((i+1, j+1))
for edge in edges:
    print(*edge)
","0.0"
"a62a737e-0fbc-451b-9f67-2d7804740ccf","a = int(input())
b = int(input())
c = int(input())
print((c-a)//b)","0.0"
"d5e4d47f-6494-4c3f-b408-6562c81ae4e7","import math
p,k,t,r = map(int, input().split())
print(t * math.ceil(p/k) + r * (math.ceil(p/k) - 1))","0.0"
"872b3f76-e52e-466c-88f4-e5cd230f3fac","a,b=map(int,input().split())


def ko(x):
    sp=[]
    for t in range(1,int(x**0.5)+1):
        if x%t==0:
            sp.append(t)
            if t!=x//t:
                sp.append(x//t)
    sp.sort()
    return sp

for i in range(a,b+1):
    spd=ko(i)
    if len(spd)==4:
        print(spd[1],spd[2])
","0.0"
"872b3f76-e52e-466c-88f4-e5cd230f3fac","a,b=map(int,input().split())
def kd(x):
    sp=[]
    for t in range(1,int(x**0.5)+1):
        if x%t==0:
            sp.append(t)
            if x//t!=t:
                sp.append(x//t)
    sp.sort()
    return(sp)
for i in range(a, b+1):
    spd=kd(i)
    if len(spd)==4:
        print(spd[1],spd[2])","0.0"
"872b3f76-e52e-466c-88f4-e5cd230f3fac","a, b = map(int, input().split())
def Koldel(x):
    sp = []
    for t in range(1, int(x**0.5)+1):
        if x%t == 0:
            sp.append(t)
            if x//t!=t:
                sp.append(x//t)
    sp.sort()
    
    return sp
for i in range(a, b+1):
    spd = Koldel(i)
    if len(spd) == 4:
        print(spd[1], spd[2])","0.0"
"2b7b67a2-81d6-40d7-b1bb-aa032863511f","a,b=map(int,input().split())
def kd(x):
    sp=[]
    for t in range(1,int(x**0.5)+1):
        if x%t==0 and t%2==0:
            sp.append(t)
        if x//t!=t and x//t%2==0 and x%t==0:
            sp.append(x//t)
    sp.sort()
    return(sp)
for i in range(a, b+1):
    spd=kd(i)
    if len(spd)==6:
        print(*spd)
","0.0"
"2b7b67a2-81d6-40d7-b1bb-aa032863511f","a, b = map(int, input().split())
def Koldel(x):
    sp = []
    for t in range(1, int(x**0.5)+1):
        if x%t == 0 and t%2==0:
            sp.append(t)
        if x//t!=t and x//t%2 == 0 and x%t == 0:
            sp.append(x//t)  
    sp.sort()
    return sp
for i in range(a, b+1):
    spd = Koldel(i)
    if len(spd) == 6:
        print(*spd)
","0.0"
"98a85385-25d4-44f3-bee2-2b91da43daf0","a,b=map(int,input().split())
def kd(x):
    sp=[]
    for t in range(1,int(x**0.5)+1):
        if x%t==0:
            sp.append(t)
            if x//t!=t:
                sp.append(x//t)
    sp.sort()
    return(sp)
for i in range(a, b+1):
    if int(i**0.5)==i**0.5:
        spd=kd(i)
        if len(spd)==5:
            print(i, spd[3])","0.0"
"98a85385-25d4-44f3-bee2-2b91da43daf0","a,b=map(int,input().split())
def kd(x):
    sp=[]
    for t in range(1,int(x**0.5)+1):
        if x%t==0:
            sp.append(t)
            if x//t!=t:
                sp.append(x//t)
    sp.sort()
    return(sp)
for i in range(a, b+1):
    if i**0.5==int(i**0.5):
        spd=kd(i)
        if len(spd)==5:
            print(i, spd[3])","0.0"
"2b7b67a2-81d6-40d7-b1bb-aa032863511f","a,b=map(int,input().split())


def ko(x):
    sp=[]
    for t in range(1,int(x**0.5)+1):
        if x%t==0 and t%2==0:
            sp.append(t)
        if x//t!=t and x//t%2==0 and x%t==0:
            sp.append(x//t)
    sp.sort()
    return sp

for i in range(a,b+1):
    spd=ko(i)
    if len(spd)==6:
        print(*spd)
","0.0"
"98a85385-25d4-44f3-bee2-2b91da43daf0","a,b=map(int,input().split())
def kd(x):
    sp=[]
    for t in range(1,int(x**0.5)+1):
        if int(x**0.5)==x**0.5:
            if x%t==0:
                sp.append(t)
                if x//t!=t:
                    sp.append(x//t)
    sp.sort()
    return(sp)
for i in range(a, b+1):
    if int(i**0.5)==i**0.5:
        spd=kd(i)
        if len(spd)==5:
            print(i, spd[3])
","0.0"
"98a85385-25d4-44f3-bee2-2b91da43daf0","a,b=map(int,input().split())
def kd(x):
    sp=[]
    for t in range(1,int(x**0.5)+1):
        if int(x**0.5)==x**0.5:
            if x%t==0:
                sp.append(t)
                if x//t!=t:
                    sp.append(x//t)
    sp.sort()
    return(sp)
for i in range(a, b+1):
    spd=kd(i)
    if len(spd)==5:
        print(i, spd[3])
","0.0"
"98a85385-25d4-44f3-bee2-2b91da43daf0","a,b=map(int,input().split())
def kd(x):
    sp=[]
    for t in range(1,int(x**0.5)+1):
        if x**0.5==int(x**0.5):
            if x%t==0:
                sp.append(t)
                if x//t!=t:
                    sp.append(x//t)
    sp.sort()
    return(sp)
for i in range(a, b+1):
    if int(i**0.5)==i**0.5:
        spd=kd(i)
        if len(spd)==5:
            print(i, spd[3])","0.0"
"872b3f76-e52e-466c-88f4-e5cd230f3fac","a,b=map(int,input().split())

def f(n):
    sp=[]
    for i in range(2,int(n**0.5)+1):
        if n%i==0:
            sp.append(i)
            if n//i!=i:
                sp.append(n//i)
    sp.sort()
    return sp

spd=[]
k=0
for g in range(a,b+1):
    k+=1
    spd=f(g)
    if len(spd)==2:
        print(*spd)
","0.0"
"98a85385-25d4-44f3-bee2-2b91da43daf0","a,b=map(int,input().split())


def ko(x):
    sp=[]
    for t in range(1,int(x**0.5)+1):
        if x%t==0 :
            sp.append(t)
            if x//t!=t :
                sp.append(x//t)
    sp.sort()
    return sp

for i in range(a,b+1):
    if i**0.5==int(i**0.5):
        spd=ko(i)
        if len(spd)==5:
            print(i,spd[-2])
","0.0"
"98a85385-25d4-44f3-bee2-2b91da43daf0","a, b = map(int, input().split())
def Koldel(x):
    sp = []
    for t in range(1, int(x**0.5)+1):
        if x%t == 0:
            sp.append(t)
            if x//t!=t:
                sp.append(x//t)
    sp.sort()
    sp.reverse()
    return sp
for i in range(a, b+1):
    spd = Koldel(i)
    if len(spd) == 5:
        print(i, spd[1])","0.0"
"98a85385-25d4-44f3-bee2-2b91da43daf0","a,b=map(int,input().split())


def ko(x):
    sp=[]
    for t in range(1,int(x**0.5)+1):
        if x%t==0 :
            sp.append(t)
            if x//t!=t :
                sp.append(x//t)
    sp.sort()
    return sp

for i in range(a,b+1):
    if i**0.5==int(i**0.5):
        spd=ko(i)
        if len(spd)==5:
            print(i,spd[-2])
","0.0"
"98a85385-25d4-44f3-bee2-2b91da43daf0","a,b=map(int,input().split())
def kd(x):
    sp=[]
    for t in range(1,int(x**0.5)+1):
        if int(x**0.5)==x**0.5:
            if x%t==0:
                sp.append(t)
                if x//t!=t:
                    sp.append(x//t)
    sp.sort()
    return(sp)
for i in range(a, b+1):
    if int(i**0.5)==i**0.5:
        spd=kd(i)
        if len(spd)==5:
            print(i, spd[3])","0.0"
"98a85385-25d4-44f3-bee2-2b91da43daf0","a, b = map(int, input().split())
def Koldel(x):
    sp = []
    for t in range(1, int(x**0.5)+1):
        if x%t == 0:
            sp.append(t)
            if x//t!=t:
                sp.append(x//t)
    sp.sort()
    sp.reverse()
    return sp
for i in range(a, b+1):
    if i**0.5==int(i**0.5):
        spd = Koldel(i)
        if len(spd) == 5:
            print(i, spd[1])
","0.0"
"98a85385-25d4-44f3-bee2-2b91da43daf0","a,b=map(int,input().split())
def kd(x):
    sp=[]
    for t in range(1,int(x**0.5)+1):
        if int(x**0.5)==x**0.5:
            if x%t==0:
                sp.append(t)
                if x//t!=t:
                    sp.append(x//t)
    sp.sort()
    return(sp)
for i in range(a, b+1):
    if int(i**0.5)==i**0.5:
        spd=kd(i)
        if len(spd)==5:
            print(i, spd[3])","0.0"
"872b3f76-e52e-466c-88f4-e5cd230f3fac","a,b=map(int,input().split())
def f(n):
    sp=[]
    for t in range(2,int(n**0.5)+1):
        if n%t==0:
            sp.append(t)
            if n//t!=t:
             sp.append(n//t)
    sp.sort()
    return(sp)
spd=[]
k=0
for i in range(a,b+1):
        k+=1
        spd=f(i)
        if len(spd)==2:
            print(*spd)
    
    ","0.0"
"98a85385-25d4-44f3-bee2-2b91da43daf0","a, b = map(int, input().split())
def Koldel(x):
    sp = []
    for t in range(1, int(x**0.5)+1):
        if x%t == 0:
            sp.append(t)
            if x//t!=t:
                sp.append(x//t)
    sp.sort()
    sp.reverse()
    return sp
for i in range(a, b+1):
    if i**0.5==int(i**0.5):
        spd = Koldel(i)
        if len(spd) == 5:
            print(i, spd[1])
","0.0"
"98a85385-25d4-44f3-bee2-2b91da43daf0","a,b=map(int,input().split())
def kd(x):
    sp=[]
    for t in range(1,int(x**0.5)+1):
        if int(x**0.5)==x**0.5:
            if x%t==0:
                sp.append(t)
                if x//t!=t:
                    sp.append(x//t)
    sp.sort()
    return(sp)
for i in range(a, b+1):
    if int(i**0.5)==i**0.5:
        spd=kd(i)
        if len(spd)==5:
            print(i, spd[3])","0.0"
"98a85385-25d4-44f3-bee2-2b91da43daf0","a,b=map(int,input().split())
def kd(x):
    sp=[]
    for t in range(1,int(x**0.5)+1):
        if int(x**0.5)==x**0.5:
            if x%t==0:
                sp.append(t)
                if x//t!=t:
                    sp.append(x//t)
    sp.sort()
    return(sp)
for i in range(a, b+1):
    if int(i**0.5)==i**0.5:
        spd=kd(i)
        if len(spd)==5:
            print(i, spd[3])","0.0"
"98a85385-25d4-44f3-bee2-2b91da43daf0","a, b = map(int, input().split())
def Koldel(x):
    sp = []
    for t in range(2, int(x**0.5)+1):
        if x%t == 0:
            sp.append(t)
            if x//t!=t:
                sp.append(x//t)
    sp.sort()

    return sp
for i in range(a, b+1):
    if i**0.5==int(i**0.5):
        spd = Koldel(i)
        if len(spd) == 3:
            print(i, spd[-1])


","0.0"
"f7c30e56-6dd9-43a9-86d3-456364c5c78a","a,b=map(int,input().split())
def kd(x):
    sp=[]
    for t in range(1,int(x**0.5)+1):
        if x%t==0:
            sp.append(t)
            if x//t!=t:
                sp.append(x//t)
    sp.sort()
    return(sp)
md=0
for i in range(a, b+1):
    spd=kd(i)
    if len(spd)>=md:
        md=len(spd)
        d=i
print(md, d)
","0.0"
"2b7b67a2-81d6-40d7-b1bb-aa032863511f","a,b=map(int,input().split())
def f(n):
    sp=[]
    for t in range(1,int(n**0.5)+1):
        if n%t==0:
            sp.append(t)
            if n//t!=t:
             sp.append(n//t)
    sp.sort()
    return(sp)
spd=[]
spt=[]
for i in range(a,b+1):
     spd=f(i)
     spt=[]
     for u in spd:
         if u%2==0:
             spt.append(u)
     if len(spt)==6:
        print(*spt)
","0.0"
"2b7b67a2-81d6-40d7-b1bb-aa032863511f","a,b=map(int,input().split())

def f(n):
    sp=[]
    for i in range(1,int(n**0.5)+1):
        if n%i==0:
            sp.append(i)
            if n//i!=i:
                sp.append(n//i)
    sp.sort()
    return sp

spd=[]
for g in range(a,b+1):
    k=0
    h=[]
    spd=f(g)
    for o in spd:
        if o%2==0:
            k+=1
            h.append(o)
    if k==6:
        print(*h)
","0.0"
"f7c30e56-6dd9-43a9-86d3-456364c5c78a","a, b = map(int, input().split())
def Koldel(x):
    sp = []
    for t in range(1, int(x**0.5)+1):
        if x%t == 0:
            sp.append(t)
            if x//t!=t:
                sp.append(x//t)
    sp.sort()

    return sp
k = 0
for i in range(a, b+1):
    spd = Koldel(i)
    if len(spd)>=k:
        k = len(spd)
        number = i
print(k, number)
    
","0.0"
"f7c30e56-6dd9-43a9-86d3-456364c5c78a","a,b=map(int,input().split())


def ko(x):
    sp=[]
    for t in range(1,int(x**0.5)+1):
        if x%t==0 :
            sp.append(t)
            if t!=x//t :
                sp.append(x//t)
    sp.sort()
    return sp
k=0
m=0
spf=[]
for i in range(a,b+1):
    spd=ko(i)
    if len(spd)>=m:
        k=i
        m=len(spd)

            
print(m,k)","0.0"
"f7c30e56-6dd9-43a9-86d3-456364c5c78a","a,b=map(int,input().split())


def ko(x):
    sp=[]
    for t in range(1,int(x**0.5)+1):
        if x%t==0 :
            sp.append(t)
            if t!=x//t :
                sp.append(x//t)
    sp.sort()
    return sp
k=0
m=0
spf=[]
for i in range(a,b+1):
    spd=ko(i)
    if len(spd)>=m:
        k=i
        m=len(spd)

            
print(m,k)","0.0"
"f7c30e56-6dd9-43a9-86d3-456364c5c78a","a, b = map(int, input().split())
def Koldel(x):
    sp = []
    for t in range(1, int(x**0.5)+1):
        if x%t == 0:
            sp.append(t)
            if x//t!=t:
                sp.append(x//t)
    sp.sort()

    return sp
k = 0
for i in range(a, b+1):
    spd = Koldel(i)
    if len(spd)>=k:
        k = len(spd)
        number = i
print(k, number)
    

","0.0"
"f7c30e56-6dd9-43a9-86d3-456364c5c78a","a,b=map(int,input().split())
def kd(x):
    sp=[]
    for t in range(1,int(x**0.5)+1):
        if x%t==0:
            sp.append(t)
            if x//t!=t:
                sp.append(x//t)
    sp.sort()
    return(sp)
md=0
for i in range(a, b+1):
    spd=kd(i)
    if len(spd)>=md:
        md=len(spd)
        d=i
print(md, d)","0.0"
"0f1f3e41-5da5-4608-b937-2475432abe15","a,b=map(int,input().split())
for m in range(0,101,2):
    for n in range(1,101,2):
        if (2**m)*(3**n)>=a and (2**m)*(3**n)<=b:
                print((2**m)*(3**n))","0.0"
"0f1f3e41-5da5-4608-b937-2475432abe15","a, b =map(int, input().split())
for m in range(0,101, 2):
     for n in range(1,101,2):
        if 2**m*3**n>=a and 2**m*3**n<=b :
            print(2**m*3**n)
","0.0"
"0f1f3e41-5da5-4608-b937-2475432abe15","a,b=map(int,input().split())
for o in range(0,100,2):
    for h in range(1,100,2):
        if 2**o*3**h>=a and  2**o*3**h <=b :
    
            print(2**o*3**h)
            

","0.0"
"6671bab8-0e57-4f15-bc39-c933a2495f50","n = int(input())
mas = list(map(int, input().split()))
mas2 = []
for a in range(1, n, 2):
    mas2.append(mas[a])
    mas2.append(mas[a-1])
print(*mas2)","0.0"
"efe1a482-a2db-4971-a769-8b60a0beaf64","a = input()
a = [int(i) for i in input().split()]
k = 0
for i in range(1, len(a)-1):
    if a[i-1] < a[i] > a[i+1]:
        k += 1
print(k)
","0.0"
"6671bab8-0e57-4f15-bc39-c933a2495f50","n = int(input())
mas = list(map(int, input().split()))
mas2 = []
for a in range(1, n, 2):
    mas2.append(mas[a])
    mas2.append(mas[a-1])
if n % 2 != 0:
    mas2.append(mas[-1])
print(*mas2)","0.0"
"1b689872-4b61-4615-a14e-24e7a0bcb1ba","n = int(input())
mas = set(list(map(int, input().split())))
print(len(mas))
","0.0"
"efe1a482-a2db-4971-a769-8b60a0beaf64","n = int(input())
nums = list(map(int, input().split()))

count = 0
for index in range(n - 1):
    val = nums[index]
    if val > nums[index - 1] and val > nums[index + 1]:
        count += 1

print(count)
","0.0"
"efe1a482-a2db-4971-a769-8b60a0beaf64","n=int(input())
a=[int(s) for s in input().split()]
k=0
for i in range(1,len(a)-1):
    if a[i-1]<a[i]>a[i+1]:
        k+=1
print(k)
","0.0"
"521b1be0-3bd5-45f4-94f5-dad4b82ad375","n = int(input())
mas = list(map(int, input().split()))
print(max(mas))
","0.0"
"7488edcd-5001-458e-955c-d220494cffde","n = int(input())
mas = list(map(int, input().split()))
print(min(mas))","0.0"
"6671bab8-0e57-4f15-bc39-c933a2495f50","c = int(input())
c = 0
a = [int(i) for i in input().split()]
for i in range(1, len(a), 2):
        a[i], a[i-1] = a[i-1], a[i]
print(*a)
","0.0"
"efe1a482-a2db-4971-a769-8b60a0beaf64","n = int(input())
k=0
a = [int(i) for i in input().split()]
for i in range(1,len(a)-1):
    if a[i]>a[i-1] and a[i]>a[i+1]:
        k+=1
print(k)
","0.0"
"1b689872-4b61-4615-a14e-24e7a0bcb1ba","a = input()
a = [int(i) for i in input().split()]
b = list()
for i in a:
    if i not in b:
        b.append(i)
print(len(b))
","0.0"
"521b1be0-3bd5-45f4-94f5-dad4b82ad375","n = input()
print(max([int(i) for i in input().split()]))","0.0"
"efe1a482-a2db-4971-a769-8b60a0beaf64","n=int(input())
a=[int(s) for s in input().split()]
c=0
for i in range(1,len(a)-1):
    if a[i-1]<a[i] and a[i]>a[i+1]:
        c+=1
print(c)","0.0"
"6671bab8-0e57-4f15-bc39-c933a2495f50","b=int(input())
a = [int(s) for s in input().split()]
if len(a)%2==0:
    n=len(a)
else:
    n=len(a)-1
for i in range(0,n-1,2):
    a[i],a[i+1]=a[i+1],a[i]
for i in range(len(a)):
    print(a[i],end=' ')","0.0"
"6671bab8-0e57-4f15-bc39-c933a2495f50","n=int, input()
a = [int(s) for s in input().split()]
if len(a)%2==0:
    n=len(a)
else:
    n=len(a)-1
for i in range (0, n-1, 2):
    a[i], a[i+1] = a[i+1], a[i]
for i in range (len(a)):
    print(a[i], end = ' ')
","0.0"
"6671bab8-0e57-4f15-bc39-c933a2495f50","n = int(input())
a = [int(i) for i in input().split()]
for i in range(1,len(a),2):
    a[i], a[i-1] = a[i-1], a[i]
print(*a)
","0.0"
"7488edcd-5001-458e-955c-d220494cffde","n = input()
print(min([int(i) for i in input().split()]))
","0.0"
"efe1a482-a2db-4971-a769-8b60a0beaf64","n=int(input())
a=[int(s) for s in input().split()]
f=0
for i in range(1,len(a)-1):
    if a[i-1]<a[i]>a[i+1]:
        f+=1
print(f)
","0.0"
"1b689872-4b61-4615-a14e-24e7a0bcb1ba","b =int(input())
a = [int(s) for s in input().split()]
k=0
for i in range(1,len(a)):
    if a[i]>a[i-1]:
        k+=1
print(k+1)","0.0"
"efe1a482-a2db-4971-a769-8b60a0beaf64","n=int(input())
a=[int(s) for s in input().split()]
k=0
for i in range(1, len(a) -1):
    if a[i-1]<a[i]>a[i +1]: 
        k+=1
print(k)","0.0"
"1b689872-4b61-4615-a14e-24e7a0bcb1ba","n = int(input())
nums = set(map(int, input().split()))

print(len(nums))
","0.0"
"efe1a482-a2db-4971-a769-8b60a0beaf64","n=int, input()
a=list(map(int, input().split()))
s=0
for i in range (1,len(a)-1):
    if a[i-1]<a[i]>a[i+1]:
        s+=1
print(s)
","0.0"
"6671bab8-0e57-4f15-bc39-c933a2495f50","n=int(input())
a=list(map(int,input().split()))
if len(a)%2!=0:
    for i in range(1,len(a),2):
        a[i],a[i-1]=a[i-1],a[i]
else:
    for i in range(1,len(a)+1,2):
        a[i],a[i-1]=a[i-1],a[i]
print(' '.join(str(i) for i in a))","0.0"
"521b1be0-3bd5-45f4-94f5-dad4b82ad375","b=int(input())
a=[int(s) for s in input().split()]
print(max(a))","0.0"
"1b689872-4b61-4615-a14e-24e7a0bcb1ba","n = int(input())
a = [int(i) for i in input().split()]
b=[]
for i in range(len(a)):
    if a[i] in b:
        pass
    else:
        b.append(a[i])
print(len(b))
","0.0"
"7488edcd-5001-458e-955c-d220494cffde","b=int(input())
a=[int(s) for s in input().split()]
print(min(a))","0.0"
"521b1be0-3bd5-45f4-94f5-dad4b82ad375","n = int(input())
nums = list(map(int, input().split()))

print(max(nums))
","0.0"
"521b1be0-3bd5-45f4-94f5-dad4b82ad375","n=int, input()
a = list(map(int, input().split()))
b = max(a)
print(b)
","0.0"
"7488edcd-5001-458e-955c-d220494cffde","n = int(input())
nums = list(map(int, input().split()))

print(min(nums))
","0.0"
"521b1be0-3bd5-45f4-94f5-dad4b82ad375","n = int(input())
a = [(int(i)) for i in input().split()]
print(max(a))
","0.0"
"7488edcd-5001-458e-955c-d220494cffde","n=int, input()
a = list(map(int, input().split()))
b = min(a)
print(b)
","0.0"
"7488edcd-5001-458e-955c-d220494cffde","n = int(input())
a = [(int(i)) for i in input().split()]
print(min(a))
","0.0"
"6671bab8-0e57-4f15-bc39-c933a2495f50","f=int(input())
a=[int(s) for s in input().split()]
if len(a)%2==0:
    n=len(a)
else:
    n=len(a)-1
for i in range(0,len(a)-1,2):
    a[i],a[i+1]=a[i+1],a[i]
for i in range(len(a)):
    print(a[i],end=' ')","0.0"
"1b689872-4b61-4615-a14e-24e7a0bcb1ba","b=int(input())
a=[int(s) for s in input().split()]
d=0
for i in range(1,len(a)):
    if a[i]>a[i-1]:
        d+=1
print(d+1)","0.0"
"6671bab8-0e57-4f15-bc39-c933a2495f50","n = int(input())
nums = list(map(int, input().split()))

result = list()
if len(nums) % 2 == 0:
    for index in range(0, n - 1, 2):
        result.append(nums[index + 1])
        result.append(nums[index])
else:
    for index in range(0, n - 1, 2):
        result.append(nums[index + 1])
        result.append(nums[index])

    result.append(nums[-1])

print(*result)
","0.0"
"521b1be0-3bd5-45f4-94f5-dad4b82ad375","f=int(input())
a=[int(s) for s in input().split()]
print(max(a))","0.0"
"7488edcd-5001-458e-955c-d220494cffde","f=int(input())
a=[int(s) for s in input().split()]
print(min(a))","0.0"
"7488edcd-5001-458e-955c-d220494cffde","n = int(input())
mas = list(map(int, input().split()))
print(min(mas))
","0.0"
"1b689872-4b61-4615-a14e-24e7a0bcb1ba","n=int(input())
a=list(map(int,input().split()))
c=0
for i in range(1,len(a)):
    if a[i]>a[i-1]:
        c+=1
print(c+1)","0.0"
"521b1be0-3bd5-45f4-94f5-dad4b82ad375","n = int(input())
mas = list(map(int, input().split()))
print(max(mas))
","0.0"
"521b1be0-3bd5-45f4-94f5-dad4b82ad375","n=int(input())
a=list(map(int,input().split()))
print(max(a))","0.0"
"7488edcd-5001-458e-955c-d220494cffde","n=int(input())
a=list(map(int,input().split()))
print(min(a))","0.0"
"6671bab8-0e57-4f15-bc39-c933a2495f50","f=int(input())
a=[int(s) for s in input().split()]
if len(a)%2==0:
    n=len(a)
else:
    n=len(a)-1
for i in range(0, len(a)- 1,2):
    a[i],a[i+1]=a[i+1] ,a[i]
for i in range(len(a)):
    print(a[i],end=' ')","0.0"
"1b689872-4b61-4615-a14e-24e7a0bcb1ba","n=int, input()
a = input().split()
b=1
for i in range (1, len(a)):
    if a[i]!=a[i-1]:
        b+=1
print(b)        
    
        
","0.0"
"1b689872-4b61-4615-a14e-24e7a0bcb1ba","c=int(input())
a=[ int(s) for s in input().split()]
count=0
for i in range(1,len(a)):
    if a[i] > a[i -1]:
        count +=1
print(count +1)","0.0"
"521b1be0-3bd5-45f4-94f5-dad4b82ad375","a=int(input())
b=[int(s) for s in input().split()]
print(max(b))","0.0"
"7488edcd-5001-458e-955c-d220494cffde","a=int(input())
b=[int(s) for s in input().split()]
print(min(b))","0.0"
"521b1be0-3bd5-45f4-94f5-dad4b82ad375","n=int(input())
a=list(map(int,input().split()))
print(max(a))","0.0"
"7488edcd-5001-458e-955c-d220494cffde","n=int,input()
a=list(map(int,input().split()))
print(min(a))
","0.0"
"7488edcd-5001-458e-955c-d220494cffde","n=int(input())
a=list(map(int,input().split()))
print(min(a))","0.0"
"521b1be0-3bd5-45f4-94f5-dad4b82ad375","n=int,input()
a=list(map(int,input().split()))
print(max(a))","0.0"
"521b1be0-3bd5-45f4-94f5-dad4b82ad375","s=int,input()
a=list(map(int,input().split()))
k=max(a)
print(k)
","0.0"
"7488edcd-5001-458e-955c-d220494cffde","s=int,input()
a=list(map(int,input().split()))
k=min(a)
print(k)
","0.0"
"c6175ed3-a33c-4dbf-8f71-6ef2f9e31411","n = int(input())
A, B, C = map(int, input().split())
D, E, F = map(int, input().split())
R = (n+1) * (A*D + B*E + C*F)
print(R)","0.0"
"6671bab8-0e57-4f15-bc39-c933a2495f50","s=int,input()
a=[int(s) for s in input().split()]
if len(a)%2==0:
    n=len(a)
else:
    n=len(a)-1
for i in range(0,n-1,2):
    a[i],a[i+1]=a[i+1],a[i]
for i in range(len(a)):
    print(a[i],end=' ')
","0.0"
"1b689872-4b61-4615-a14e-24e7a0bcb1ba","n = int(input())
mas = list(map(int, input().split()))
mn = set(mas)
print(len(mn))","0.0"
"4e5b21c0-e86f-4eac-82b6-1a0d00ae4199","nums = list(map(int, input().split()))
print(nums.count(max(nums)))","0.0"
"875ec0a5-0a8e-468b-b0f0-1b32c0337354","n = int(input())
nums = list(map(int, input().split()))

count = 0
for val in nums:
    if val >= 0:
        count += 1

print(count)","0.0"
"6671bab8-0e57-4f15-bc39-c933a2495f50","n = int(input())
mas = list(map(int, input().split()))
mas1 = []
if n % 2 == 0:
    for i in range(0, n-1, 2):
        mas[i], mas[i+1] = mas[i+1], mas[i]
else:
    for i in range(0, n-2, 2):
        mas[i], mas[i + 1] = mas[i + 1], mas[i]
print(*mas)
","0.0"
"35d772a5-7770-4a91-9118-ad11e4ae7feb","n = int(input())
nums = list(map(int, input().split()))

count = 0
for index in range(n - 1):
    if nums[index] < nums[index + 1]:
        count += 1

print(count)","0.0"
"efe1a482-a2db-4971-a769-8b60a0beaf64","n = int(input())
mas = list(map(int, input().split()))
k = 0
for i in range(0, n-1):
    if mas[i] > mas[i-1] and mas[i] > mas[i+1]:
        k += 1
print(k)
","0.0"
"33eb8e68-cf75-4892-b87b-97ceeee27d04","a, b = map(int, input().split())

if a == b:
    print(a - b)
elif (a > 0 and b < 0) or (a < 0 and b > 0):
    print(a * b)
else:
    print(a + b)","0.0"
"a62a737e-0fbc-451b-9f67-2d7804740ccf","a=int(input())
b=int(input())
c=int(input())
print((c-a)//b)
","0.0"
"6d14c7f2-95e1-464c-a3cb-bcab860928ae","a,b,c=map(int,input().split())
if a+b+c < 2*a+2*b and 2*b+2*c:
    print(a+b+c)
else:
    if 2*a+2*b<2*b+2*c:
        print(2*a+2*b)
    else:
        print(2*b+2*c)
","0.0"
"6d14c7f2-95e1-464c-a3cb-bcab860928ae","d1,d2,d3=map(int,input().split())
if d1+d2+d3 < 2*d1+2*d2 and 2*d2+2*d3:
    print(d1+d2+d3)
else:
    if 2*d1+2*d2<2*d2+2*d3:
        print(2*d1+2*d2)
    else:
        print(2*d2+2*d3)
","0.0"
"6d14c7f2-95e1-464c-a3cb-bcab860928ae","d1,d2,d3=map(int,input().split())
if d1+d2+d3 < 2*d1+2*d2 and 2*d2+2*d3:
    print(d1+d2+d3)
else:
    if 2*d1+2*d2<2*d2+2*d3:
        print(2*d1+2*d2)
    else:
        print(2*d2+2*d3)","0.0"
"a62a737e-0fbc-451b-9f67-2d7804740ccf","A=int(input())
B=int(input())
C=int(input())
o=C-A
print(o//B)
","0.0"
"6d14c7f2-95e1-464c-a3cb-bcab860928ae","d1,d2,d3=map(int,input().split())
if d1+d2+d3 < 2*d1+2*d2 and 2*d2+2*d3:
    print(d1+d2+d3)
else:
    if 2*d1+2*d2<2*d2+2*d3:
        print(2*d1+2*d2)
    else:
        print(2*d2+2*d3)","0.0"
"a62a737e-0fbc-451b-9f67-2d7804740ccf","a = int(input())
b= int (input())
c= int(input())
d=(c-a)//10
print (d)
","0.0"
"6d14c7f2-95e1-464c-a3cb-bcab860928ae","d1,d2,d3=map(int,input().split())
if d1+d2+d3 < 2*d1+2*d2 and d1+d2+d3 < 2*d2+2*d3:
    print(d1+d2+d3)
else:
    if 2*d1+2*d2<2*d2+2*d3:
        print(2*d1+2*d2)
    else:
        print(2*d2+2*d3)
","0.0"
"a62a737e-0fbc-451b-9f67-2d7804740ccf","a=int(input())
b=int(input())
c=int(input())
x=(c-a)//b
print(x)
","0.0"
"6d14c7f2-95e1-464c-a3cb-bcab860928ae","d1,d2,d3=map(int,input().split())
if d1+d2+d3<d1*2+d2*2:
    print(d1+d2+d3)
else:
    print(d1*2+d2*2)
","0.0"
"6d14c7f2-95e1-464c-a3cb-bcab860928ae","d1,d2,d3=map(int,input().split())
a=d1+d2+d3
b=2*d1+2*d2
c=2*d2+2*d3
print(min(a,b,c))
","0.0"
"6d14c7f2-95e1-464c-a3cb-bcab860928ae","d1,d2,d3=map(int,input().split())
a=d1+d2+d3
b=2*d1+2*d2
c=2*d2+2*d3
d=2*d1+2*d3
print(min(a,b,c,d))","0.0"
"408e0ac8-b3c0-4123-bcb2-e396802f5399","n=int(input())
k=0

for a in range(1,n//4+1):
    b=n//2-a
    if a+b==n//2 and a!=b:
        k=k+1
print(k)","0.0"
"6d14c7f2-95e1-464c-a3cb-bcab860928ae","k,t,o= map(int,input(). split())

a= k+t+o
b= (k+o)*2
c= (t+o)*2
d= (k+t)*2
print( min(a, b, c, d))
","0.0"
"6d14c7f2-95e1-464c-a3cb-bcab860928ae","k, t, o= map(int,input(). split())
a= k+t+o
b= (k+o)*2
c= (t+o)*2
d= (k+t)*2
print( min(a, b, c, d))
","0.0"
"408e0ac8-b3c0-4123-bcb2-e396802f5399","n= int(input())
k=0
a=0
if n%2>0:
    print(0)
for a in range(1, n//4+1):
    b=n//2-a
    if a+b==n//2 and a!=b:
        k=k+1
print(k)
    
","0.0"
"6d14c7f2-95e1-464c-a3cb-bcab860928ae","d1,d2,d3=map(int,input().split())
p=d2+d3+d1
i=d2+d3+d3+d2
k=d1+d3+d3+d1
u=(d1+d2)*2
print(min(p,i,k,u))
","0.0"
"6d14c7f2-95e1-464c-a3cb-bcab860928ae","d1,d2,d3=map(int,input().split())
a=d1+d2+d3
b=d1*2+d2*2
c=(d1+d3)*2
e=(d2+d3)*2
print(min(a,b,c,e))
","0.0"
"408e0ac8-b3c0-4123-bcb2-e396802f5399","n=int(input())
k=0

for a in range(1,n//4+1):
    b=n//2-a
    if a+b==n//2 and a!=b:
        k=k+1
    if k>999:
        break
print(k)
","0.0"
"d5e4d47f-6494-4c3f-b408-6562c81ae4e7","from math import *
p,k,t,r=map(int,input().split())
if p<k:
    f=t
else:
    e=ceil((p-k)/k)
    f=t+(t+r)*e
print(f)
","0.0"
"408e0ac8-b3c0-4123-bcb2-e396802f5399","n=int(input())
k=0
for a in range(1,n//4+1):
    b=n//2-a
    if a+b==n//2 and a!=b:
        k=k+1
print(k)
","0.0"
"94ac4455-5ad7-46a1-835a-ac155d995664","n=int(input())
i=0
for g in range (n):
    a,b,c=map(int,input().split())
    if a+b+c>=2:
        i=i+1
print(i)
","0.0"
"a62a737e-0fbc-451b-9f67-2d7804740ccf","a=int(input())
b=int(input())
c=int(input())
k=0
l=c-a
k=l//b
print(k)

","0.0"
"a62a737e-0fbc-451b-9f67-2d7804740ccf","a=int(input())
b=int(input())
c=int(input())
k=0
i=c-a
k=i//b
print(k)
","0.0"
"01c8944f-0a22-4bc7-8338-acd655974e1a","mi=100000
n,m=map(int,input().split())
for g in range(n):
    a,b=map(int,input().split())
    c=a/b
    if c<mi:
        mi=c
e=(mi*m)
print(""{:7.6f}"".format(e))
","0.0"
"d5e4d47f-6494-4c3f-b408-6562c81ae4e7","p, k, t, r=map(int, input(). split())
if p%k==0:
    s= p//k
else:
    s=p//k+1
e= s*t+(s-1)*r
print(e)
","0.0"
"d5e4d47f-6494-4c3f-b408-6562c81ae4e7","p,k,t,r=map(int,input().split())
a=p//k
if p%k!=0:
    a=a+1
b=t*a+r*(a-1)
print(b)
","0.0"
"94ac4455-5ad7-46a1-835a-ac155d995664","n= int(input())
k=0
for i in range( n):
    a, b, c=map(int, input().split())
    if a+b+c>=2:
        k=k+1
print(k)
        
","0.0"
"01c8944f-0a22-4bc7-8338-acd655974e1a","n, m= map(int, input(). split())
a=0
b=0
mi=10000000000000000000000000000000000000000000000000000000000000000000
for i in range(n):
    a, b=map(int,input().split())
    k= a/b
    if k<mi:
        mi=k
t= mi *m
print(""{:6.6f}"".format(t))
","0.0"
"94ac4455-5ad7-46a1-835a-ac155d995664","n=int(input())
t=0
for i in range(n):
    a,b,c=map(int,input().split())
    if a+b+c >1:
        t=t+1
print(t)
","0.0"
"01c8944f-0a22-4bc7-8338-acd655974e1a","n,m=map(int,input().split())
mi=10000
for i in range(n):
    a,b=map(int,input().split())
    k=a/b
    if k<mi:
        mi=k
print(""{:1.6f}"".format(mi*m))
","0.0"
"004dd7ed-c513-4c47-9a8e-76828ba86070","n=int(input())
a=list(map(int,input().split()))
m=max(a)
s=0
for i in range(n):
       s=s+(m-a[i])
print(s)
","0.0"
"004dd7ed-c513-4c47-9a8e-76828ba86070","n=int(input())
s=0
a=list(map(int,input().split()))
m=max(a)
for i in range(n):
    s=s+(m-a[i])
print(s)
","0.0"
"004dd7ed-c513-4c47-9a8e-76828ba86070","n=int(input())
a=list(map(int,input().split()))
m=max(a)
s=0
for i in range(n):
    s=s+(m-a[i])
print(s)
","0.0"
"004dd7ed-c513-4c47-9a8e-76828ba86070","n=int(input())
a=list(map(int, input(). split()))
m=max(a)
s=0
for i in range (n):
     s=s+(m-a[i])
print(s)      


","0.0"
"de60668c-9cf3-4d87-80d1-457552bd8a37","k,r=map(int,input().split())
n=1
s=k
if k%10==r or k%10==0:
    print(1)
else:
    while not(s%10==r or s%10==0):
        n=n+1
        s=s+k
    print(n)
","0.0"
"de60668c-9cf3-4d87-80d1-457552bd8a37","k,r=map(int, input().split())
n=1
s=k
while not(s%10==r or s%10==0):
    n=n+1
    s=s+k
print (n)
    
    
","0.0"
"d5e4d47f-6494-4c3f-b408-6562c81ae4e7","P,K,T,R=map(int,input().split())
if P%K==0 :
    k=P//K
else:
    k=P//K+1
i=k*T
u=(k-1)*R
print(i+u)
","0.0"
"a4b90367-4dc9-4d5f-84d6-56245ea5afc4","k, m, n = map(int, input().split())
if n <= k:
    print(m * 2)
else:
    x = n * 2 // k
    if n * 2 % k != 0:
        x += 1
    print(x*m)","0.0"
"008b5cbd-4257-4e11-a061-f19e550b6b3e","a, b, c = map(int, input().split())
l = True
mas = [a, b, c]
mas.sort()

while l:
    mrr = 99999999999999999999999999999999999
    for i in range(1, len(mas)):
        mr = abs(mas[i] - mas[i-1])
        if mr < mrr:
            mrr = mr
        if mr == 0:
            l = False
    mas.append(mrr)
    mas.sort()
print(len(mas) - 3)","0.0"
"c270a9c3-67af-4113-8e7d-a7a94792013d","t = int(input())
for i in range(t):
    n, m = map(int, input().split())
    if n < m:
        print('NO')
    else:
        s = (1+m) / 2 * m
        if s <= n:
            print('YES')
        else:
            print('NO')","0.0"
"e1980664-e539-436e-af4e-1dc094d9908f","n = int(input())
mas1 = ['a1', 'h1', 'a8', 'h8']
mas2 = ['b1', 'a2', 'g1', 'h2', 'a7', 'b8', 'h7', 'g8']
mas3 = ['c1', 'd1', 'e1', 'f1', 'g2', 'h3', 'h4', 'h5', 'h6', 'g7', 'c8', 'd8', 'e8', 'f8', 'b7', 'a3', 'a4', 'a5', 'a6', 'b2']
mas4 = ['c2', 'd2', 'e2', 'f2', 'g3', 'g4', 'g5', 'g6', 'b3', 'b4', 'b5', 'b6', 'c7', 'd7', 'e7', 'f7']
for a in range(n):
    s = input()
    x = 0
    if s in mas1:
        x = 2
    elif s in mas2:
        x = 3
    elif s in mas3:
        x = 4
    elif s in mas4:
        x = 6
    else:
        x = 8
    print(x)","0.0"
"e1980664-e539-436e-af4e-1dc094d9908f","n = int(input())
mas1 = ['a1', 'h1', 'a8', 'h8']
mas2 = ['b1', 'a2', 'g1', 'h2', 'a7', 'b8', 'h7', 'g8']
mas3 = ['c1', 'd1', 'e1', 'f1', 'g2', 'h3', 'h4', 'h5', 'h6', 'g7', 'c8', 'd8', 'e8', 'f8', 'b7', 'a3', 'a4', 'a5', 'a6', 'b2']
mas4 = ['c2', 'd2', 'e2', 'f2', 'g3', 'g4', 'g5', 'g6', 'b3', 'b4', 'b5', 'b6', 'c7', 'd7', 'e7', 'f7']
for a in range(n):
    s = input()
    x = 0
    if s in mas1:
        x = 2
    elif s in mas2:
        x = 3
    elif s in mas3:
        x = 4
    elif s in mas4:
        x = 6
    else:
        x = 8
    print(x)","0.0"
"4f8b54ae-eb36-4c4d-91da-256fc6302b91","a, b, c, d = map(int, input().split())
s1 = a*60+b
s2 = c*60+d
s1 = s2-s1
h = s1 // 60
m = s1 - (s1//60*60)
print(h, m)","0.0"
"c0ed6e9b-f602-4b3b-8aef-52dbb2485110","s = input()
x = len(s)
mas = ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm',
       'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z']
step3 = []
step1 = [0]
step2 = x * [0]
for a in range(x):
       step3.append(mas.index(s[a]))
if step3[0] >= 5:
       step2[0] = step3[0]
       step1[0] = step3[0] - 5
else:
       step1[0] = step3[0] + 21
       step2[0] = step3[0] + 26
i = 1
while len(step1) != x:
       step2[i] = step3[i]
       while step2[i] < step2[i-1]:
              step2[i] = step2[i] + 26
       step1.append(step2[i] - step2[i-1])
       i += 1
s1 = ''
for j in range(x):
      s1 += mas[step1[j]]
print(s1)","0.0"
"c0ed6e9b-f602-4b3b-8aef-52dbb2485110","s = input()
x = len(s)
mas = ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm',
       'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z']
step3 = []
step1 = [0]
step2 = x * [0]
# transfer from word to numbers
for a in range(x):
       step3.append(mas.index(s[a]))
# first letter
if step3[0] >= 5:
       step2[0] = step3[0]
       step1[0] = step3[0] - 5
else:
       step1[0] = step3[0] + 21
       step2[0] = step3[0] + 26
i = 1
while len(step1) != x:
       step2[i] = step3[i]
       while step2[i] < step2[i-1]:
              step2[i] = step2[i] + 26
       step1.append(step2[i] - step2[i-1])
       i += 1
s1 = ''
for j in range(x):
      s1 += mas[step1[j]]
print(s1)","0.0"
"85b72f3a-191b-4d99-9207-6a82ed1e73c9","k, n = map(int, input().split())
mas = list(map(int, input().split()))
s = 0
for a in range(n):
    s += mas[a]
    if s - k < 0:
        s = 0
    else:
        s -= k
print(s)","0.0"
"2373f3eb-bf38-46fd-ba92-ede0c1bc0ac0","n = int(input()) 
s = 0 
a = [0] * n 
for i in range(n): 
    a[i] = int(input()) 
a.sort() 
s = 0  
while len(a) > 3: 
    if 2 * a[1] + a[0] < a[0] * 2 + a[-2]:  
        s += a[-1] + a[0] + a[1] * 2                        
    else: 
        s += a[-1] + a[-2] + a[0] * 2 
    a = a[:len(a)-2] 
if len(a) == 2: 
    s += a[1] 
elif len(a) == 3: 
    s += sum(a) 
print(s)","0.0"
"2373f3eb-bf38-46fd-ba92-ede0c1bc0ac0","n = int(input())
s = 0
a = [0] * n
for i in range(n):
    a[i] = int(input())
a.sort()
s = 0
while len(a) > 3:
    if 2 * a[1] + a[0] < a[0] * 2 + a[-2]:
        s += a[-1] + a[0] + a[1] * 2
    else:
        s += a[-1] + a[-2] + a[0] * 2
    a = a[:len(a)-2]
if len(a) == 2:
    s += a[1]
elif len(a) == 3:
    s += sum(a)
print(s)
","0.0"
"bb8bf498-d02f-48f2-a15a-f8cc813a5c5f","a1, b1 = map(int, input().split())
a2, b2 = map(int, input().split())
a3, b3 = map(int, input().split())
print(a1-a3, b1-b2)","0.0"
"408e0ac8-b3c0-4123-bcb2-e396802f5399","import math
n = int(input())
if n<6 or n%2 !=0:
    print(0)
else:    
    print(math.ceil(n/4) - 1)","0.0"
"6d14c7f2-95e1-464c-a3cb-bcab860928ae","d1,d2,d3 = map(int, input().split())
a = []
a.append(2 *(d1+d2))
a.append(d1+d2+d3)
a.append(2*(d2+d3))
a.append(2*(d1+d3))
print(min(a))","0.0"
"94ac4455-5ad7-46a1-835a-ac155d995664","a = int(input())
c = 0
c1 = []
for i in range(a):
    c1 = list(map(int,input().split()))
    if sum(c1)>1:
        c += 1
    c1 = []
print(c)","0.0"
"94ac4455-5ad7-46a1-835a-ac155d995664","a = int(input())
c1 = []
k = 0
for i in range(a):
    c1 = list(map(int, input().split()))
    if sum(c1) > 1:
        k += 1
    c1 = []
print(k)","0.0"
"4e5b21c0-e86f-4eac-82b6-1a0d00ae4199","mas = list(map(int, input().split()))
print(mas.count(max(mas)))
","0.0"
"33eb8e68-cf75-4892-b87b-97ceeee27d04","a, b = map(int, input().split())
if (a > 0 and b > 0) or (a < 0 and b < 0):
    print(a+b)
elif a == b:
    print(0)
else:
    print(a*b)","0.0"
"33eb8e68-cf75-4892-b87b-97ceeee27d04","a, b = map(int, input().split())
if (a > 0 and b > 0) or (a < 0 and b < 0):
    print(a+b)
elif a == b:
    print(a-b)
else:
    print(a*b)","0.0"
"33eb8e68-cf75-4892-b87b-97ceeee27d04","a, b = map(int, input().split())

if a == b:
    print(a-b)
elif (a > 0 and b > 0) or (a < 0 and b < 0):
    print(a+b)
else:
    print(a*b)","0.0"
"33eb8e68-cf75-4892-b87b-97ceeee27d04","a, b = map(int, input().split())

if a == b:
    print(a-b)
elif (a >= 0 and b >= 0) or (a <= 0 and b <= 0):
    print(a+b)
else:
    print(a*b)","0.0"
"6b1e0963-bf0b-405e-b555-435a6225619c","s = input()
a = len(s)
c = 0
for i in range(a):
    c += int(s[i])

s = int(s)
if s % 2 == 0:
    b = 0
else:
    b = 1
print(a,b,c)
","0.0"
"22e720bb-1b6c-470d-bb7b-da0de5a83f45","x1, y1, x2, y2, x3, y3 = map(int, input().split())
a = ((x1-x2) ** 2 + (y1-y2) ** 2) ** 0.5
b = ((x1-x3) ** 2 + (y1-y3) ** 2) ** 0.5
c = ((x2-x3) ** 2 + (y2-y3) ** 2) ** 0.5
p = (a+b+c) / 2
s = (p*(p-a)*(p-b)*(p-c)) ** 0.5
print(f'{round(s, 5):.5f}')
","0.0"
"c6175ed3-a33c-4dbf-8f71-6ef2f9e31411","def numb_of_coins(friends, a, b, c, d, e, f) -> int:
    return ((friends + 1) * (a * d + b * e + c * f))


friends = int(input())
a, b, c = map(int, input().split())
d, e, f = map(int, input().split())

print(numb_of_coins(friends, a, b, c, d, e, f))
","0.0"
"9e9de547-58f5-45b9-a733-37cc732bf237","n = int(input())
m = int(input())
if n * 2.54 <= m:
    print('YES')
else:
    print('NO')","0.0"
"bd77bd8e-1bf2-4a3b-b674-9eddb5375116","n = int(input())
l = True
i = 2
while l:
    if n % i == 0:
        print(i)
        l = False","0.0"
"bd77bd8e-1bf2-4a3b-b674-9eddb5375116","n = int(input())
l = True
i = 2
while l:
    if n % i == 0:
        print(i)
        l = False
    i += 1","0.0"
"5362054a-bc83-4623-867a-66a72e38b366","n = int(input())
l = True
i = 2
s = 1
p = 0
while l:
    p += s
    s += s + 1
    if p == n:
        l = False
        print('YES')
    if p > n:
        print('NO')
        l = False","0.0"
"c479ed62-3a40-4f93-89c8-b674826ab144","n = int(input())
k = 1
for a in range(2, int(n**0.5+1)):
    if n % a == 0:
        k += 1
k *= 2
if int(n**0.5) == n**0.5:
    k -= 1
print(k)","0.0"
"a93745c4-cdf2-422d-86e3-46fc616f4f80","n = int(input())
k = 1
mas = []
l = False
for a in range(1, n+1):
    if n % a == 0:
        if a % 3 == 0:
            mas.append(a)
            l = True
if l:
    print(len(mas))
    print(*mas)
else:
    print(0)","0.0"
"a4b90367-4dc9-4d5f-84d6-56245ea5afc4","k, m, n = map(int, input().split())
if n <= k:
    x = 2 * m
else:
    x = n * 2 // k * m
    if n * 2 % k != 0:
        x += m
print(x)
","0.0"
"c270a9c3-67af-4113-8e7d-a7a94792013d","k = int(input())
for i in range(k):
    n, m = map(int, input().split())
    s = (1 + m) * m // 2
    if s > n:
        print('NO')
    else:
        print('YES')
        ","0.0"
"e1980664-e539-436e-af4e-1dc094d9908f","s2 = ['a1', 'a8', 'h1', 'h8']
s3 = ['a2', 'b1', 'g1', 'h2', 'a7', 'b8', 'g8', 'h7']
s4 = ['a3', 'a4', 'a5', 'a6', 'h3', 'h4', 'h5', 'h6', 'c1', 'd1', 'e1', 'f1', 'c8', 'd8', 'e8', 'f8', 'b2', 'g2', 'b7', 'g7']
s6 = ['b3', 'b4', 'b5', 'b6', 'g3', 'g4', 'g5', 'g6', 'c2', 'd2', 'e2', 'f2', 'c7', 'd7', 'e7', 'f7']
s8 = ['c3', 'c4', 'c5', 'c6', 'd3', 'd4', 'd5', 'd6', 'e3', 'e4', 'e5', 'e6', 'f3', 'f4', 'f5', 'f6']
n = int(input())
for i in range(n): 
    s = input()
    if s in s2:
        x = 2
    if s in s3:
        x = 3
    if s in s4:
        x = 4
    if s in s6:
        x = 6
    if s in s8:
        x = 8                   
    print(x)        ","0.0"
"c0ed6e9b-f602-4b3b-8aef-52dbb2485110","t = 'abcdefghijklmnopqrstuvwxyz'
s = input()
a = []
n = len(s)
for i in range(n):
    for j in range(26):
        if s[i] == t[j]:
            a.append(j)
            break
b = [0] * n
b[0] = a[0] - 5
for i in range(1, n):
    if a[i] - a[i-1] < 0:
        b[i] = a[i] - a[i-1] + 26
    else:
        b[i] = a[i] - a[i-1]
for i in range(n):
    print(t[b[i]], end = '')

","0.0"
"85b72f3a-191b-4d99-9207-6a82ed1e73c9","k, n = map(int, input().split())
a = list(map(int, input().split()))
s = 0
b = 0
for i in range(len(a)):
    b = a[i] + b - k
    if b < 0:
        b = 0
print(b)
","0.0"
"2373f3eb-bf38-46fd-ba92-ede0c1bc0ac0","n = int(input())
s = 0
a = [0] * n
for i in range(n):
    a[i] = int(input())
a.sort()
s = 0 
while len(a) > 3:
    if  2 * a[1] + a[0] < a[0] * 2 + a[-2]: 
        s += a[-1] + a[0]  + a[1] * 2                       
    else:
        s += a[-1] + a[-2] + a[0] * 2
    a = a[:len(a)-2]
if len(a) == 2:
    s += a[1]
elif len(a) == 3:
    s += sum(a)
print(s)
    ","0.0"
"bb8bf498-d02f-48f2-a15a-f8cc813a5c5f","a1, b1 = map(int, input().split())
a2, b2 = map(int, input().split())
a3, b3 = map(int, input().split())
print(a1 - a3, b1 - b2)","0.0"
"008b5cbd-4257-4e11-a061-f19e550b6b3e","x1, x2, x3 = map(int,input().split())
x12 = abs(x1 - x2)
x13 = abs(x1 - x3)
x23 = abs(x3 - x2)
a = [x1, x2, x3]
a.sort(reverse = True)
m = min(x12, x13, x23)
k = 0
l = True
while l:
    k += 1
    for i in range (1, len(a)):        
        if abs(a[i]-a[i-1])< m:
            m = abs(a[i]-a[i-1])  
    if m == 0:
            l = False
    else:        
        a.append(m)
        a.sort(reverse = True)
print(k)        
    
","0.0"
"4f8b54ae-eb36-4c4d-91da-256fc6302b91","a, b, c, d = map(int, input().split())
x = a * 60 + b
y = c * 60 + d
z = y - x
print(z // 60, z % 60)","0.0"
"c6175ed3-a33c-4dbf-8f71-6ef2f9e31411","n = int(input())
a, b, c = map(int, input().split())
d, e, f = map(int, input().split())
print((n + 1) * (a * d + b * e + c * f))","0.0"
"16305713-d2dc-4ab1-8bbd-107594c55519","from math import  acos, pi
a = int(input())
b = int(input())
c = int(input())
mas = [a, b, c]
mas.sort()
# c**2 = a**2 + b**2 - 2*a*b*cos(x)
if (a < b+c) and (b < a+c) and (c < a+b):
    kos = (mas[0]**2 + mas[1]**2 - mas[2]**2) / 2 / mas[0] / mas[1]
    x = acos(kos) * 180 / pi
    if x == 90:
        print('right')
    elif x < 90:
        print('acute')
    else:
        print('obtuse')
else:
    print('imossible')
","0.0"
"16305713-d2dc-4ab1-8bbd-107594c55519","from math import cos, acos, pi
a = int(input())
b = int(input())
c = int(input())
mas = [a, b, c]
mas.sort()
# c**2 = a**2 + b**2 - 2*a*b*cos(x)
if (a < b+c) and (b < a+c) and (c < a+b):
    kos = (mas[0]**2 + mas[1]**2 - mas[2]**2) / 2 / mas[0] / mas[1]
    x = acos(kos) * 180 / pi
    if x == 90:
        print('right')
    elif x < 90:
        print('acute')
    else:
        print('obtuse')
else:
    print('impossible')
","0.0"
"f9af70f9-5fce-423e-94c5-b6f357e5242c","a = float(input())
n = int(input())
s = 0
for i in range(n+1):
    s += a**i
if int(s) == s:
    print(int(s))
else:
    print(s)
","0.0"
"f9af70f9-5fce-423e-94c5-b6f357e5242c","a = float(input())
n = int(input())
s = 0
for i in range(n+1):
    s += a**i
if n == 1:
    s += a
if int(s) == s:
    print(int(s))
else:
    print(s)
","0.0"
"f9af70f9-5fce-423e-94c5-b6f357e5242c","a = float(input())
n = int(input())
s = 0
for i in range(n+1):
    s += a**i
if n == 0:
    s = a + 2
if int(s) == s:
    print(int(s))
else:
    print(s)
","0.0"
"06a06b1c-da2e-4210-b889-371de309b82f","
n = int(input())
mas = list(map(int, input().split()))
k = 0
a0 = mas.count(0)
for a in mas:
    if a > 0:
        k += 1
print(a0, k, n-a0-k)
","0.0"
"06a06b1c-da2e-4210-b889-371de309b82f","
n = int(input())
mas = list(map(int, input().split()))
if n < 0:
    print(0, 0, 0)
else:
    k = 0
    a0 = mas.count(0)
    for a in mas:
        if a > 0:
            k += 1
    print(a0, k, n-a0-k)","0.0"
"06a06b1c-da2e-4210-b889-371de309b82f","n = int(input())
mas = list(map(int, input().split()))
if n == 0:
    print(0, 0, 0)
else:
    k = 0
    a0 = mas.count(0)
    for a in mas:
        if a > 0:
            k += 1
    print(a0, k, n-a0-k)","0.0"
"157c7563-5b83-4f84-b184-e15788a65471","n = int(input())
for a in range(2, n+1):
    if n % a == 0:
        print(a)
        break","0.0"
"26acdc8d-1ff5-439b-81bd-00672786ec6d","mas = list(map(int, input().split()))
print(sum(mas[0:mas.index(0)]))
","0.0"
"a62a737e-0fbc-451b-9f67-2d7804740ccf","a = int(input())
b = int(input())
c = int(input())
if c>a:
     print((c-a)//b)
else:
    print(0)","0.0"
"a62a737e-0fbc-451b-9f67-2d7804740ccf","a = int(input())
b = int(input())
c = int(input())
if c>a:
     print((c-a)//b)
else:
    print(0)","0.0"
"94ac4455-5ad7-46a1-835a-ac155d995664","n = int(input())
p=0
for i in range(n):
    a = list(map(int,input().split()))
    k = a.count(1)
    if k>=2:
        p+=1
print(p)","0.0"
"4f8b54ae-eb36-4c4d-91da-256fc6302b91","a,b,c,d=map(int, input().split())
h=(c*60+d)-(a*60+b)
ch=h//60
m=h%60
print(ch,m)","0.0"
"48531b77-6537-4389-a998-5c74e35ac9af","a = int(input())
a = str(a)
s = 0
for i in range(len(a)):
    s += int(a[i])
if s % 3 == 0:
    print('YES')
else:
    print('NO')","0.0"
"c0df7d49-26f5-451c-b44a-1e0bca60bca5","l = list(map(int, input().split()))
m, n =0, 0
for el in l:
  if el == 0:
    break
  n+=1
print(n)","0.0"
"a62a737e-0fbc-451b-9f67-2d7804740ccf","a = int(input())
b = int(input())
c = int(input())
print((c-a)//b)","0.0"
"6d14c7f2-95e1-464c-a3cb-bcab860928ae","mas = list(map(int, input().split()))
mas.sort()
print(mas[0]*2 + mas[1]*2)","0.0"
"6d14c7f2-95e1-464c-a3cb-bcab860928ae","mas = list(map(int, input().split()))
mas.sort()
l = True
for i in range(len(mas)):
    if mas.count(mas[0]) == len(mas):
        l = True
    else:
        l = False
if l:
    print(sum(mas))
else:
    print(mas[0]*2 + mas[1]*2)","0.0"
"004dd7ed-c513-4c47-9a8e-76828ba86070","n = int(input())
k = 0
mx = 1
mas = list(map(int, input().split()))
mas.sort()
for i in range(n):
    mx = mas[-1]
    if mas[i] < mas[-1]:
        k += mas[-1] - mas[i]
    elif mas[i] == mas[-1]:
        k += 0
    else:
        pass
print(k)","0.0"
"01c8944f-0a22-4bc7-8338-acd655974e1a","n, m = map(int, input().split())
mas = []
for i in range(n):
    a, b = map(int, input().split())
    s = m*(a/b)
    mas.append(s)
print('%.6f' % (min(mas)))","0.0"
"a62a737e-0fbc-451b-9f67-2d7804740ccf","a = int(input())
b = int(input())
c = int(input())
print((c-a)//b)","0.0"
"6d14c7f2-95e1-464c-a3cb-bcab860928ae","d1, d2, d3 = map(int,input().split())
print(min(2*d1 + 2*d2, d1+d2+d3, 2*d1 + 2*d3, 2*d2+2*d3))","0.0"
"d5e4d47f-6494-4c3f-b408-6562c81ae4e7","import math
p, k, t, r = map(int,input().split())
n = math.ceil(p/k)
m = n*t + (n-1)*r
print(m)","0.0"
"a4b90367-4dc9-4d5f-84d6-56245ea5afc4","k, m, n = map(int, input().split())
if n % k == 0:
    p = n // k
else:
    p = n // k + 1
print(m * 2 * p)","0.0"
"a4b90367-4dc9-4d5f-84d6-56245ea5afc4","k, m, n = map(int, input().split())
if n <= k:
    m = m*2
else:
    m = (2*n//k)*m
    if n % k != 0 and n % k != k // 2:
        m += m
print(m)","0.0"
"a4b90367-4dc9-4d5f-84d6-56245ea5afc4","k, m, n = map(int, input().split())
if n <= k:
    x = m*2
else:
    m = (2*n//k)*m
    if n % k != 0 and n % k != k // 2:
        x += m
print(x)","0.0"
"a4b90367-4dc9-4d5f-84d6-56245ea5afc4","k, m, n = map(int, input().split())
if n <= k:
    print(m * 2)
else:
    x = n * 2 // k
    if n * 2 % k != 0:
        x += 1
    print(x*m)","0.0"
"a4b90367-4dc9-4d5f-84d6-56245ea5afc4","k, m, n = map(int, input().split())
if n % k == 0:
    p = n // k
    print(m * 2 * p)
else:
    x = n * 2 // k
    if n * 2 % k != 0:
        x += 1
    print(x*m)","0.0"
"a62a737e-0fbc-451b-9f67-2d7804740ccf","a=int(input())
b=int(input())
c=int(input())
print((c-a)//b)","0.0"
"6d14c7f2-95e1-464c-a3cb-bcab860928ae","a=list(map(int,input().split()))
b=0
while len(a)>1:
    b+=min(a)
    a.remove(min(a))
print(2*b)","0.0"
"01c8944f-0a22-4bc7-8338-acd655974e1a","n, m= map(int, input().split())
mn=500000000
for i in range(n):
     a, b= map(int, input().split())
     x=a/b
     mn=min(mn,x)
p = m * mn
print('{:.6f}'.format(p))","0.0"
"3c867d85-e9aa-482c-ac5e-574724751b37","s = input()
s= s + 'O'
p = ['A', 'E', 'I', 'O', 'U', 'Y']
mn =0
x = 0
for i in range(len(s)):
    if s[i] in p:
        mn = max(mn,i-x)
        x=i
print(mn)","0.0"
"0e068baa-ec82-4085-84a0-c436b5832755","a=int(input())
for i in range(a,10**10, a):
    if (i%10==4) and (str(i)[2:6] == '2139') and (str(i)[0] == '1'):
        print(i, i//a)","0.0"
"3c867d85-e9aa-482c-ac5e-574724751b37","s = input()
s= 'O' + s + 'O'
p = ['A', 'E', 'I', 'O', 'U', 'Y']
mn =0
x = 0
for i in range(1, len(s)):
    if s[i] in p:
        mn = max(mn,i-x)
        x=i
print(mn)","0.0"
"86e003c3-5c8d-4897-9f9e-a17c896cc8f1","a=int(input())
for i in range(123450708,123460000):
    if (i%a==0) and (i%10==8) and ((i//100)%10==7):
        print(i, i//a)","0.0"
"004dd7ed-c513-4c47-9a8e-76828ba86070","n = int(input())
a = list(map(int,input().split()))
a1 = max(a)
s = 0
for i in range(n):
    s += a1-a[i]
print(s)","0.0"
"46191358-5b90-4de8-b69e-0b3597953584","a=int(input())
zn=[]
xx=[]
for x in range(a+1,a+10000):
    de=set()  
    for d in range(1,round(x**0.5)+1):
        if x%d==0:
            de.add(d)
            de.add(x//d)
    if len(de)>5:
        de=sorted(de)
        p=de[5]*de[1]*de[2]*de[3]*de[4]
        if p<x:
            xx.append(x)
            zn.append(p)
    if len(zn)>4:
        break
for x in range(0,5):
    print(xx[x],zn[x])","0.0"
"b1cc81ce-a1cb-4d57-9438-fb792a698d9b","a=int(input())
zn=[]
xx=[]
for x in range(a+1,10**10):
    de=[]  
    for d in range(2,round(x**0.5)+1):
        if x%d==0:
            de.append(d)
            if d!=x//d:
                de.append(x//d)
        if len(de)>3:
            break
    de.sort();
    de.reverse();
    
    if len(de)>1:
        if (de[0]+de[1])<10000:
            xx.append(x)
            zn.append(de[0]+de[1])
    if len(zn)>4:
        break
for x in range(len(xx)):
    print(xx[x],zn[x])","0.0"
"f219f00f-7aa0-4548-9766-13c878269d42","a,b=map(int,input().split())
ap=[]
for m in range(0,30,2):
    for n in range(1,20,2):
        x = 2**m * 3**n
        if a<= x <=b:
            ap.append(x)
ap.sort()
for m in range(len(ap)):
    print(ap[m])","0.0"
"0e068baa-ec82-4085-84a0-c436b5832755","a=int(input())
for u in range(0,10**10,a):
    if u%10==4 and (str(u)[0]=='1') and (str(u)[2:6]=='2139'):
        print(u,u//a)","0.0"
"0e068baa-ec82-4085-84a0-c436b5832755","a=int(input())
for u in range(0,10**10,a):
    if u%10==4 and (str(u)[0]=='1') and (str(u)[2:6]=='2139'):
        print(u,u//a)","0.0"
"0e068baa-ec82-4085-84a0-c436b5832755","x=int(input())
sp=[]
for c in range(0,10):
    s=''
    for o in range(0,10):   
        s=str('00')+str(o)
        p=int('1'+str(c)+'2139'+s+'4')
        if p%x==0:
            sp.append(p)
        s=str('0')+str(o)
        p=int('1'+str(c)+'2139'+s+'4')
        if p%x==0:
            sp.append(p)
        s=str(o)
        p=int('1'+str(c)+'2139'+s+'4')
        if p%x==0:
            sp.append(p)
    for o in range(10,100):
        s=str('0')+str(o)
        p=int('1'+str(c)+'2139'+s+'4')
        if p%x==0:
            sp.append(p)
        s=str(o)
        p=int('1'+str(c)+'2139'+s+'4')
        if p%x==0:
            sp.append(p)
    for o in range(100,1000):
        s=str(o)
        p=int('1'+str(c)+'2139'+s+'4')
        if p%x==0:
            sp.append(p)
sp.sort()
for p in sp:
    print(p,p//x)","0.0"
"ae73b48e-98a5-492c-8872-f60c90a3ff1c","a=int(input())
for u in range(0,10**10,a):
    if u%100==21 and (str(u)[0]=='1') and (str(u)[2:5]=='954'):
        print(u)","0.0"
"ae73b48e-98a5-492c-8872-f60c90a3ff1c","a=int(input())
for u in range(0,10**10,a):
    if u%100==21 and (str(u)[0]=='1') and (str(u)[2:5]=='954'):
        print(u)","0.0"
"ae73b48e-98a5-492c-8872-f60c90a3ff1c","x=int(input())
sp=[]
for c in range(0,10):
    s=''
    p=int('1'+str(c)+'95421')
    if p%x==0:
        sp.append(p)
    for o in range(0,10):   
        s=str('00')+str(o)
        p=int('1'+str(c)+'954'+s+'21')
        if p%x==0:
            sp.append(p)
        s=str('0')+str(o)
        p=int('1'+str(c)+'954'+s+'21')
        if p%x==0:
            sp.append(p)
        s=str(o)
        p=int('1'+str(c)+'954'+s+'21')
        if p%x==0:
            sp.append(p)
    for o in range(10,100):
        s=str('0')+str(o)
        p=int('1'+str(c)+'954'+s+'21')
        if p%x==0:
            sp.append(p)
        s=str(o)
        p=int('1'+str(c)+'954'+s+'21')
        if p%x==0:
            sp.append(p)
    for o in range(100,1000):
        s=str(o)
        p=int('1'+str(c)+'954'+s+'21')
        if p%x==0:
            sp.append(p)
sp.sort()
for p in sp:
    print(p)","0.0"
"ae73b48e-98a5-492c-8872-f60c90a3ff1c","x=int(input())
sp=[]
for c in range(0,10):
    s=''
    p=int('1'+str(c)+'95421')
    if p%x==0:
        sp.append(p)
    for o in range(0,10):   
        s=str('00')+str(o)
        p=int('1'+str(c)+'954'+s+'21')
        if p%x==0:
            sp.append(p)
        s=str('0')+str(o)
        p=int('1'+str(c)+'954'+s+'21')
        if p%x==0:
            sp.append(p)
        s=str(o)
        p=int('1'+str(c)+'954'+s+'21')
        if p%x==0:
            sp.append(p)
    for o in range(10,100):
        s=str('0')+str(o)
        p=int('1'+str(c)+'954'+s+'21')
        if p%x==0:
            sp.append(p)
        s=str(o)
        p=int('1'+str(c)+'954'+s+'21')
        if p%x==0:
            sp.append(p)
    for o in range(100,1000):
        s=str(o)
        p=int('1'+str(c)+'954'+s+'21')
        if p%x==0:
            sp.append(p)
sp.sort()
for p in sp:
    print(p)","0.0"
"86e003c3-5c8d-4897-9f9e-a17c896cc8f1","x=int(input())
sp=[]

for c in range(0,10):
    for i in range(0,10):
        p=int('12345'+str(c)+'7'+str(i)+'8')
        if p%x==0:
            sp.append(p)
    
    
sp.sort()
for p in sp:
    print(p,p//x)","0.0"
"86e003c3-5c8d-4897-9f9e-a17c896cc8f1","a=int(input())
for u in range(123450000,123460000):
    if u%10==8 and (str(u)[0:5]=='12345') and (str(u)[6:7]=='7') and u%a==0:
        print(u,u//a)","0.0"
"86e003c3-5c8d-4897-9f9e-a17c896cc8f1","a=int(input())
for u in range(123450000,123460000):
    if u%10==8 and (str(u)[0:5]=='12345') and (str(u)[6:7]=='7') and u%a==0:
        print(u,u//a)","0.0"
"46191358-5b90-4de8-b69e-0b3597953584","x=int(input())


def ko(x):
    sp=[]
    for t in range(1,int(x**0.5)+1):
        if x%t==0:
            sp.append(t)
            if t!=x//t:
                sp.append(x//t)
    spf=[]
    sp.sort()
    spf=sp[1:6]
    return spf
k=0
for i in range(x+1,x*10):
    spd=ko(i)
    f=1

    for n in spd:
        f*=n
    if i>f:
        k+=1
        print(i,f)
        
    if k==5:
        break","0.0"
"46191358-5b90-4de8-b69e-0b3597953584","a=int(input())
def f(n):
    sp=[]
    for t in range(1,int(n**0.5)+1):
        if n%t==0:
            sp.append(t)
        if n//t!=t:
            sp.append(n//t)
    sp.sort()
    spd=sp[1:6]
    return spd


k=0
for i in range(a+1,a*10):
    spf=f(i)
    h=1
    spt=[]
    for u in spf:
        h=h*u
    if h<i:
        print(i,h)
        k+=1
        if k==5:
            break","0.0"
"a62a737e-0fbc-451b-9f67-2d7804740ccf","a=int(input())
b=int(input())
c=int(input())
print((c-a)//b)","0.0"
"a62a737e-0fbc-451b-9f67-2d7804740ccf","a = int(input())
b = int(input())
c = int(input())

print((c - a) // b)","0.0"
"a62a737e-0fbc-451b-9f67-2d7804740ccf","A=int(input())
B=int(input())
C=int(input())
print((C-A)//B)","0.0"
"6d14c7f2-95e1-464c-a3cb-bcab860928ae","d1, d2, d3 = map(int,input().split())

print(min(d1, d2) * 2 + max(d1, d2) * 2)","0.0"
"6d14c7f2-95e1-464c-a3cb-bcab860928ae","d1, d2, d3 = map(int,input().split())

if d1 + d2 <= d3:
    print(min(d1, d2) * 2 + max(d1, d2) * 2)
else:
    print(d1 + d2 + d3)","0.0"
"de60668c-9cf3-4d87-80d1-457552bd8a37","k, r = map(int,input().split())
if k<10:
    if k == r:
        print(1)
    elif k%r == 0:
        print(k//r)
for i in range(11):
    if (i*k-r) % 10 == 0:
        print(i)
if k*2%10 == 0:
    print(2)","0.0"
"6d14c7f2-95e1-464c-a3cb-bcab860928ae","d1, d2, d3 = map(int,input().split())

print(min(2 * d1 + 2 * d2, 2 * d1 + 2 * d3, 2 * d2 + 2 * d3, d1 + d2 + d3))","0.0"
"6d14c7f2-95e1-464c-a3cb-bcab860928ae","d1,d2,d3=map(int,input().split())
print(min(2*d1+2*d2,2*d1+2*d3,2*d2+2*d3,d1+d2+d3))","0.0"
"6d14c7f2-95e1-464c-a3cb-bcab860928ae","d1,d2,d3=map(int,input().split())
print(min(2*d1+2*d2,2*d1+2*d3,2*d2+2*d3,2*d1+2*d2+2*d3))","0.0"
"6d14c7f2-95e1-464c-a3cb-bcab860928ae","d1,d2,d3=map(int,input().split())
print(min(2*d1+2*d2,2*d1+2*d3,2*d2+2*d3,d1+d2+d3))","0.0"
"408e0ac8-b3c0-4123-bcb2-e396802f5399","x = int(input())
p = x // 2
counter = 0
if x % 2 == 0:
    for i in range(1, p // 2 + 1):
        if i != p - i:
            counter += 1
    print(counter)
else:
    print(0)","0.0"
"408e0ac8-b3c0-4123-bcb2-e396802f5399","x = int(input())
p = x // 2
counter = 0
if x % 2 == 0:
    for i in range(1, p // 2 + 1):
        if i != p - i:
            counter += 1
    print(counter)
else:
    print(0)","0.0"
"408e0ac8-b3c0-4123-bcb2-e396802f5399","n = int(input())
k = 0
p = n//2
if n%2 == 0:
    for i in range(1,p//2+1):
        if i != p-i:
            k+=1
print(k)","0.0"
"408e0ac8-b3c0-4123-bcb2-e396802f5399","n=int(input())
p=n//2
k=0
for i in range(1,p//2+1):
    if i!=(p-i):
     k+=1
print(k)","0.0"
"408e0ac8-b3c0-4123-bcb2-e396802f5399","n=int(input())
p=n//2
k=0
for i in range(1,p//2+1):
    if i!=(p-i):
        k+=1
print(k)","0.0"
"d5e4d47f-6494-4c3f-b408-6562c81ae4e7","p, k, t, r = map(int,input().split())
counter = t

while p - k > 0:
    counter += r
    counter += t
    p -= k

print(counter)","0.0"
"de60668c-9cf3-4d87-80d1-457552bd8a37","k, r = map(int,input().split())

counter = r

while counter % k != 0:
    counter += 10

print(counter // k)","0.0"
"de60668c-9cf3-4d87-80d1-457552bd8a37","k, r = map(int,input().split())

counter = 10 + r

while counter % k != 0 and (counter - r) % k != 0:
    counter += 10

print(counter // k)","0.0"
"de60668c-9cf3-4d87-80d1-457552bd8a37","k, r = map(int,input().split())

counter = 10 + r

while counter % k != 0 and (counter - r) % k != 0 and (counter - 10) % k != 0:
    counter += 10

print(counter // k)","0.0"
"408e0ac8-b3c0-4123-bcb2-e396802f5399","n=int (input())
if n%2==0:
        if n//2%2==0:
             k=n//2//2-1
        else:
            k=n//2//2
else:
    k=0
print (k)","0.0"
"a62a737e-0fbc-451b-9f67-2d7804740ccf","a=int(input())
b=int(input())
c=int(input())
print((c-a)//b)","0.0"
"a62a737e-0fbc-451b-9f67-2d7804740ccf","A = int(input())
B = int(input())
C = int(input())
x = 0
x = C - A
print(x // B)","0.0"
"a62a737e-0fbc-451b-9f67-2d7804740ccf","A=int(input())
B=int(input())
C=int(input())
print((C-A)//B)","0.0"
"6d14c7f2-95e1-464c-a3cb-bcab860928ae","a,b,c=map(int,input().split())
print(min(a+b+c,2*a+2*c,2*b+2*c,2*a+2*b))","0.0"
"6d14c7f2-95e1-464c-a3cb-bcab860928ae","d1, d2, d3 = map(int, input().split())
print(min(d1+d2+d3,2*d1+2*d3,2*d2+2*d3,2*d1+2*d2))","0.0"
"d5e4d47f-6494-4c3f-b408-6562c81ae4e7","from math import*
p,k,t,r=map(int,input().split())
a=ceil(p/k)
print(a*(t+r)-r)","0.0"
"d5e4d47f-6494-4c3f-b408-6562c81ae4e7","from math import*
P,K,T,R = map(int, input().split())
x = ceil(P / K)
print(x*(T+R)-R)","0.0"
"d5e4d47f-6494-4c3f-b408-6562c81ae4e7","P,K,T,R=map(int,input().split())
from math import *
A=ceil(P/K)
print(A*(T+R)-R)","0.0"
"408e0ac8-b3c0-4123-bcb2-e396802f5399","n=int(input())
a=0
if n%2==1 :
    print(0)
else :
    for i in range(1,n//2+1):
        if n-i!=i:
            a+=1
print(a//2)","0.0"
"408e0ac8-b3c0-4123-bcb2-e396802f5399","n=int(input())
a=0
p=n//2
if n%2==1 :
    print(0)
else :
    for i in range(1,p//2+1):
        if p-i!=i:
            a+=1
print(a)","0.0"
"408e0ac8-b3c0-4123-bcb2-e396802f5399","N = int(input())
b = 0
x = N // 2
if N % 2 == 1:
    print(0)
else:
    for i in range(1,x//2+1):
        if x - i != i:
            b+=1
print(b)","0.0"
"408e0ac8-b3c0-4123-bcb2-e396802f5399","n=int(input())
a=0
if n%2==1 :
    print(0)
else :
    p=n//2
    for i in range(1,p//2+1):
        if p-i!=i:
            a+=1
print(a)","0.0"
"35d772a5-7770-4a91-9118-ad11e4ae7feb","b=int, input()
k = 0
a = map(int, input().split())
a = list(a)
for i in range(1, len(a)):
    if a[i] > a[i - 1]:
        k += 1
print(k)","0.0"
"408e0ac8-b3c0-4123-bcb2-e396802f5399","n=int(input())
a=0
if n%2==1:
    print(0)
else :
    for i in range(1,n//4+1):
        if n//2-i!=i:
            a+=1
print(a)","0.0"
"408e0ac8-b3c0-4123-bcb2-e396802f5399","n=int(input())
a=0
if n%2==1:
    print(0)
else :
    for i in range(1,n//4+1):
        if n//2-i!=i:
            a+=1
    print(a)","0.0"
"408e0ac8-b3c0-4123-bcb2-e396802f5399","n=int(input())
a=0
if n%2==1:
    print(0)
else :
    a=(n//2-1)//2
    print(a)","0.0"
"efe1a482-a2db-4971-a769-8b60a0beaf64","k=0
n=int(input())
a=list(map(int,input().split()))
for i in range(1,len(a)-1):
    if a[i]>a[i-1] and a[i]>a[i+1]:
        k=k+1
print(k)","0.0"
"94ac4455-5ad7-46a1-835a-ac155d995664","n=int(input())
r=0
for i in range(0,n):
    a,b,c=map(int,input().split())
    if a==1 and b==1 or a==1 and c==1 or b==1 and c==1 or a==1 and b==1 and c==1 :
        r+=1
print(r)","0.0"
"6671bab8-0e57-4f15-bc39-c933a2495f50","n=int(input())
a=list(map(int,input().split()))
for i in range(0,len(a)-1,2):
    a[i],a[i+1]=a[i+1],a[i]
print(*a)","0.0"
"1b689872-4b61-4615-a14e-24e7a0bcb1ba","n=int(input())
a = list(map(int, input().split()))
print(len(set(a)))","0.0"
"521b1be0-3bd5-45f4-94f5-dad4b82ad375","n=int(input())
print(max(list(map(int,input().split()))))","0.0"
"7488edcd-5001-458e-955c-d220494cffde","n=int(input())
print(min(list(map(int,input().split()))))","0.0"
"6d14c7f2-95e1-464c-a3cb-bcab860928ae","a=list(map(int,input().split()))
b=0
while len(a)>1:
    b+=min(a)
    a.remove(min(a))
if b>a[0]:
    print(b+a[0])
else:
    print(b*2)","0.0"
"d5e4d47f-6494-4c3f-b408-6562c81ae4e7","p,k,t,r=map(int,input().split())
if p%k!=0:
    N=p//k+1
else:
    N=p//k
print((N-1)*(t+r)+t)","0.0"
"94ac4455-5ad7-46a1-835a-ac155d995664","z=0
for i in range(int(input())):
    a=list(map(int,input().split()))
    if a.count(1)>=2:
        z+=1
print(z)","0.0"
"004dd7ed-c513-4c47-9a8e-76828ba86070","n=int(input())
b=0
a=list(map(int,input().split()))
for i in range(n):
    b+=max(a)-a[i]
print(b)","0.0"
"94ac4455-5ad7-46a1-835a-ac155d995664","counter = 0
for i in range(int(input())):
    a = [int(s) for s in input().split()]
    if a.count(1) >= 2:
        counter += 1

print(counter)","0.0"
"94ac4455-5ad7-46a1-835a-ac155d995664","n = int(input())
k = 0
for i in range(n):
    a = [int(s) for s in input().split()]
    if a.count(1) >= 2:
        k += 1
print(k)","0.0"
"004dd7ed-c513-4c47-9a8e-76828ba86070","n = int(input())
array = [int(s) for s in input().split()]

array = sorted(array)

counter = 0

for i in range(len(array) - 1):
    counter += array[-1] - array[i]

print(counter)","0.0"
"de60668c-9cf3-4d87-80d1-457552bd8a37","k, r = map(int,input().split())

counter = 10 + r
if k == r:
    print(1)
else:
    while counter % k != 0 and (counter - r) % k != 0:
        counter += 10

    print(counter // k)","0.0"
"004dd7ed-c513-4c47-9a8e-76828ba86070","n = int(input())
a = [int(s) for s in input().split()]
k = 0
for i in range(len(a)):
    k += max(a) - a[i]
print(k)","0.0"
"de60668c-9cf3-4d87-80d1-457552bd8a37","k, r = map(int,input().split())
b = k
a = k % 10

counter = 0
i = 1
if (k % 2 == 0 and r % 2 == 0) or (k % 2 != 0 and r % 2 != 0):
    while (a * i) % 10 != r:
        counter += 1
        i += 1
else:
    while k % 10 != 0:
        counter += 1
        k += b

print(counter + 1)","0.0"
"de60668c-9cf3-4d87-80d1-457552bd8a37","k, r = map(int,input().split())
b = k
a = k % 10

counter = 0
i = 1
if (k % 2 == 0 and r % 2 == 0) or (k % 2 != 0 and r % 2 != 0):
    while (a * i) % 10 != r:
        counter += 1
        i += 1
else:
    if k % 2 == 0:
        while (k + r)% 10 != 0:
            counter += 1
            k += b
    else:
        while k % 10 != 0:
            counter += 1
            k += b

print(counter + 1)","0.0"
"de60668c-9cf3-4d87-80d1-457552bd8a37","k, r = map(int,input().split())
if k<10:
    if k == r:
        print(1)
    elif k%r == 0:
        print(k//r)
else:
    if (k - r) % 10 == 0:
        print(1)
    elif k % (10+r) == 0:
        print(k // (10+r))
    elif k * 2 % 10 == 0:
        print(2)
    else:
        print(5)","0.0"
"de60668c-9cf3-4d87-80d1-457552bd8a37","k, r = map(int,input().split())
if k<10:
    if k == r:
        print(1)
    elif k%r == 0:
        print(k//r)
    else:
        print(k//r)
else:
    if (k - r) % 10 == 0:
        print(1)
    elif k % (10+r) == 0:
        print(k // (10+r))
    elif k * 2 % 10 == 0:
        print(2)
    else:
        print(5)","0.0"
"de60668c-9cf3-4d87-80d1-457552bd8a37","k, r = map(int,input().split())
if k<10:
    if k == r:
        print(1)
    elif k%r == 0:
        print(k//r)
    else:
        print(k//r)
else:
    if (k - r) % 10 == 0:
        print(1)
    elif k == r:
        print(1)
    elif k % (10+r) == 0:
        print(k // (10+r))
    elif k * 2 % 10 == 0:
        print(2)
    else:
        print(5)","0.0"
"de60668c-9cf3-4d87-80d1-457552bd8a37","k, r = map(int,input().split())
if k<10:
    if k == r:
        print(1)
    elif k%r == 0:
        print(k//r)
else:
    if (k - r) % 10 == 0:
        print(1)
    elif k == r:
        print(1)
    elif k % (10+r) == 0:
        print(k // (10+r))
    elif k * 2 % 10 == 0:
        print(2)","0.0"
"de60668c-9cf3-4d87-80d1-457552bd8a37","k, r = map(int,input().split())
b = k

counter = 0
if k % 10 == r:
    print(1)
else:
    while True:
        counter += 1
        k += b
        if k % 10 == 0 or k % 10 == r:
            break
        if (k + r) % 10 == 0 or (k + r) % 10 == r:
            break

    print(counter + 1)","0.0"
"de60668c-9cf3-4d87-80d1-457552bd8a37","k, r = map(int,input().split())
if k<10:
    if k == r:
        print(1)
    elif k%r == 0:
        print(k//r)
else:
    if (k - r) % 10 == 0:
        print(1)
    elif k % (10+r) == 0:
        print(k // (10+r))
    elif k * 2 % 10 == 0:
        print(2)","0.0"
"de60668c-9cf3-4d87-80d1-457552bd8a37","k, r = map(int,input().split())
b = k

counter = 0
if k % 10 == r:
    print(1)
else:
    while True:
        counter += 1
        k += b
        if k % 10 == 0 or k % 10 == r:
            break
        

    print(counter + 1)","0.0"
"de60668c-9cf3-4d87-80d1-457552bd8a37","k, r = map(int,input().split())
b = k

counter = 0
if k % 10 == r:
    print(1)
else:
    while True:
        counter += 1
        k += b
        if k % 10 == 0 or k % 10 == r:
            break
        

    print(k // b)","0.0"
"de60668c-9cf3-4d87-80d1-457552bd8a37","k, r = map(int,input().split())
b = k

counter = 0
while k % 10 != 0 and k % 10 != r:
    counter += 1
    k += b

print(k // b)","0.0"
"de60668c-9cf3-4d87-80d1-457552bd8a37","k, r = map(int,input().split())
b = k
while k % 10 != 0 and k % 10 != r:
    k += b
print(k // b)","0.0"
"a62a737e-0fbc-451b-9f67-2d7804740ccf","a = int (input())
b = int (input())
c = int (input())
n = (c-a) // b
print(n)","0.0"
"a62a737e-0fbc-451b-9f67-2d7804740ccf","a= int (input()) 
b= int (input()) 
c = int (input()) 
if a<=c:
    s=c-a
    f=s//b
print(f)","0.0"
"3c867d85-e9aa-482c-ac5e-574724751b37","a=str(input())+'A'
p=-1
mx=0
for i in range(len(a)):
    if a[i] in 'AEIOUY':
        mx=max(mx,i-p)
        p=i
print(mx)","0.0"
"6d14c7f2-95e1-464c-a3cb-bcab860928ae","d=[int(x) for x in input().split()]
d.sort()
d1,d2,d3=d[0],d[1],d[2]
if d1+d2<d3:
    print(2*d1+2*d2)
else:
    print(sum(d))","0.0"
"408e0ac8-b3c0-4123-bcb2-e396802f5399","n=int(input())
if n%2!=0:
    k=0
if n%2==0:
    k=n//4
if n%4==0:
    k-=1
print(k)","0.0"
"94ac4455-5ad7-46a1-835a-ac155d995664","n = int(input())
cnt = 0
for _ in range(n):
    a, b, c = map(int, input().split())
    if a+b+c>=2:
        cnt += 1
print(cnt)","0.0"
"de60668c-9cf3-4d87-80d1-457552bd8a37","k, r = map(int, input().split())
t = {k * i % 10 : i for i in range(10, 0, -1)}
print(t[r] if r in t else 'ÐÑÐ²ÐµÑÐ° Ð½Ðµ ÑÑÑÐµÑÑÐ²ÑÐµÑ')","0.0"
"de60668c-9cf3-4d87-80d1-457552bd8a37","k, r = map(int, input().split())
print(min([i for i in range(1, 11) if k * i % 10 in [0, r]]))","0.0"
"fb76df8b-f50e-400b-aa83-29cd6b682372","n = int(input())
print(3*(n-1))","0.0"
"fb76df8b-f50e-400b-aa83-29cd6b682372","n = int(input())
print((n-1) * 3)","0.0"
"c6175ed3-a33c-4dbf-8f71-6ef2f9e31411","n=int(input())
a=[int(i) for i in input().split()]
b=[int(i) for i in input().split()]
summa=0
for i in range(3):
    summa+=a[i]*b[i]

print(summa*(n+1))","0.0"
"c6175ed3-a33c-4dbf-8f71-6ef2f9e31411","n = int(input())
a = input().split()
c = input().split()
s1 = int(a[0]) * int(c[0])
s2 = int(a[1]) * int(c[1])
s3 = int(a[2]) * int(c[2])
s4 = s1 + s2 + s3
s5 = s4 * (n + 1)
print(s5)","0.0"
"c6175ed3-a33c-4dbf-8f71-6ef2f9e31411","a=int(input())
A,B,C=input().split()
D,E,F=input().split()
print(int(a+1)*((int(A)*int(D)+int(B)*int(E)+int(C)*int(F))))","0.0"
"c6175ed3-a33c-4dbf-8f71-6ef2f9e31411","n=int(input())
a,b,c=map(int,input().split())
d,e,f=map(int,input().split())
s=0
s+=(a*d+b*e+c*f)*(n+1)
print(s)","0.0"
"a4b90367-4dc9-4d5f-84d6-56245ea5afc4","amogus=[int(i) for i in input().split()]
a=amogus[0]
b=amogus[1]
c=amogus[2]

if c%a==0:
    print(c//a*b*2)
else:
    print((c//a+1)*b*2)","0.0"
"c6175ed3-a33c-4dbf-8f71-6ef2f9e31411","n=int(input())
A, B, C=map(int,input().split())
D, E, F=map(int,input().split())
print(A*(n+1)*D+B*(n+1)*E+C*(n+1)*F)","0.0"
"c6175ed3-a33c-4dbf-8f71-6ef2f9e31411","n=int(input())
A,B,C=map(int,input().split())
D,E,F=map(int,input().split())
a=(n+1)*A*D+(n+1)*B*E+(n+1)*C*F
print(a)","0.0"
"c6175ed3-a33c-4dbf-8f71-6ef2f9e31411","n = int(input())
l = [int(x) for x in input().split()]
l1 = [int(x) for x in input().split()]
print((l[0]*l1[0] + l[1]*l1[1] + l[2]*l1[2])*(n+1))","0.0"
"c6175ed3-a33c-4dbf-8f71-6ef2f9e31411","n = int(input())
A, B, C=map(int,input().split())
D, E, F=map(int,input().split())
AA=(n+1)*A*D
BB=(n+1)*B*E
CC=(n+1)*C*F
print(AA+BB+CC)","0.0"
"c6175ed3-a33c-4dbf-8f71-6ef2f9e31411","n = int(input())
a,b,c = map(int,input().split())
k,m,q = map(int,input().split())
print((n+1)*(a*k+m*b+c*q))","0.0"
"c6175ed3-a33c-4dbf-8f71-6ef2f9e31411","n=int(input())
a=input().split(' ')
b=input().split(' ')
for i in range(len(b)):
    b[i]=int(b[i])
    a[i]=int(a[i])
s0=0
for i in range(len(a)):
    s0+=a[i]*b[i]
print(s0*(n+1))","0.0"
"c6175ed3-a33c-4dbf-8f71-6ef2f9e31411","n=int(input())
A, B, C = map(int, input().split())
D, E, F = map(int, input().split())
H=(A*D+B*E+C*F)*(n+1)
print(H)","0.0"
"c6175ed3-a33c-4dbf-8f71-6ef2f9e31411","a = int(input())
b = list(map(int, input().split()))
b1 = list(map(int, input().split()))
c = 0
for i in range(3):
    c += b[i]*b1[i]
print(c*(a+1))","0.0"
"c6175ed3-a33c-4dbf-8f71-6ef2f9e31411","n = int(input())
a,b,c = map(int, input().split())
d,e,f = map(int, input().split())
print((n+1) * (a*d + b*e + c*f))","0.0"
"a4b90367-4dc9-4d5f-84d6-56245ea5afc4","k,m,n=input().split()
k=int(k)
m=int(m)
n=int(n)
if n%k==0:
    ch=(n//k)*(m*2)
else:
    ch=((n//k)+1)*(m*2)
print(ch)","0.0"
"4f8b54ae-eb36-4c4d-91da-256fc6302b91","a, b, c, d = map(int, input().split())

if d - b < 0:
    print(c - a - 1, d + 60 - b)
else:
    print(c - a, d - b)","0.0"
"c6175ed3-a33c-4dbf-8f71-6ef2f9e31411","a=int(input())
d=0
b=[int(x) for x in input().split()]
c=[int(x) for x in input().split()]
for i in range(len(b)):
    d=d+b[i]*c[i]*(a+1)
print(d)","0.0"
"a4b90367-4dc9-4d5f-84d6-56245ea5afc4","a, b, c = map(int, input().split())
score = c // a if c % a == 0 else c // a + 1
print(score * b * 2)","0.0"
"a4b90367-4dc9-4d5f-84d6-56245ea5afc4","k, m, n = map(int, input().split())
from math import *
t=ceil(n/k)
t=t*2*m
print(t)","0.0"
"a4b90367-4dc9-4d5f-84d6-56245ea5afc4","k, m, n = map(int, input().split())
time_per_side = 2 * m
trays = -(-n // k) 
total_time = trays * time_per_side
print(total_time)","0.0"
"a4b90367-4dc9-4d5f-84d6-56245ea5afc4","k, m, n = map(int, input().split())
from math import *
t=ceil(n/k)
t*=2*m
print(t)","0.0"
"a4b90367-4dc9-4d5f-84d6-56245ea5afc4","l = [int(x) for x in input().split()]
k = l[0]
m = l[1]
n = l[2]
if n%k == 0:
    s = (n // k) * 2*m
else:
    s = (n // k + 1) * 2*m
print(s)","0.0"
"c6175ed3-a33c-4dbf-8f71-6ef2f9e31411","n= int(input())
n += 1
a, b, c = map(int, input().split())
d, e, f = map(int, input().split())
print(n*(a*d+b*e+c*f))","0.0"
"a4b90367-4dc9-4d5f-84d6-56245ea5afc4","k, m, n =map(int, input().split())
if k>=n:
    c = m*2
elif k<n:
    c = (n//k+1)*m*2
print(c)","0.0"
"fb76df8b-f50e-400b-aa83-29cd6b682372","n=int(input())
print(3*(n-1))","0.0"
"a4b90367-4dc9-4d5f-84d6-56245ea5afc4","k,m,n=input().split()
k=int(k)
m=int(m)
n=int(n)
kol=n//k
if n*k==kol:
    ch=(n//k)*(m*2)
else:
    ch=((n//k)+1)*(m*2)
print(int(ch))","0.0"
"a4b90367-4dc9-4d5f-84d6-56245ea5afc4","a, b, c = map(int, input().split())
if c<=a:
    c = 1
else:
    c = (c//a)+1
print(2*b*c)","0.0"
"008b5cbd-4257-4e11-a061-f19e550b6b3e","from itertools import combinations


a = list(map(int, input().split()))
score = 1
while len(set(a)) == len(a):
    b = [abs(i[0] - i[1]) for i in list(combinations(a, 2))]
    a.append(min(b))
    score += 1
print(score)","0.0"
"c6175ed3-a33c-4dbf-8f71-6ef2f9e31411","n = int(input())
abc = input().split(' ')
def1 = input().split(' ')
print((n+1)*((int(abc[0])*int(def1[0]))+(int(abc[1])*int(def1[1]))+(int(abc[2])*int(def1[2]))))","0.0"
"fb76df8b-f50e-400b-aa83-29cd6b682372","n=int(input())
a=(n-1)*3
print(a)","0.0"
"4f8b54ae-eb36-4c4d-91da-256fc6302b91","a,b,c,d = map(int,input().split())
print(((c*60+d)-(a*60+b))//60,((c*60+d)-(a*60+b))%60)","0.0"
"fb76df8b-f50e-400b-aa83-29cd6b682372","n = int(input())
print(3*(n-1))","0.0"
"a4b90367-4dc9-4d5f-84d6-56245ea5afc4","a, b, c = map(int, input().split())
c1 = 1
if c>a:
    c1+=(c//a)
print(2*b*c1)","0.0"
"c270a9c3-67af-4113-8e7d-a7a94792013d","k=int(input())
x=1
s=0
for i in range(k):
    n,m=map(int,input().split())
    if n<m:
        print(""NO"")
    else:
        for j in range(m):
            s+=x
            x+=1
        if s<n:
            print(""YES"")
        else:
            print(""NO"")","0.0"
"fb76df8b-f50e-400b-aa83-29cd6b682372","n=int(input())
p=(n-1)*3
print(p)","0.0"
"fb76df8b-f50e-400b-aa83-29cd6b682372","n = int(input())
g = (n-1)*3
print(g)","0.0"
"fb76df8b-f50e-400b-aa83-29cd6b682372","n = int(input())
print(3*(n-1))","0.0"
"4f8b54ae-eb36-4c4d-91da-256fc6302b91","a,b,c,d = map(int,input().split())
s1 = a*60 + b
s2 = c*60 + d
s3 = s2-s1
print(s3//60,s3%60)","0.0"
"fb76df8b-f50e-400b-aa83-29cd6b682372","n=int(input())
print((n-1)*3)","0.0"
"c6175ed3-a33c-4dbf-8f71-6ef2f9e31411","n = int(input())
a, b, c = map(int, input().split())
d, e, f = map(int, input().split())

a1 = a * d
a2 = b * e
a3 = c * f
print((a1 + a2 + a3) * (n + 1))","0.0"
"fb76df8b-f50e-400b-aa83-29cd6b682372","a=int(input())
print(3*(a-1))","0.0"
"c6175ed3-a33c-4dbf-8f71-6ef2f9e31411","n  = int(input())
a,b,c = map(int,input().split())
d,e,f = map(int,input().split())
summ = (n+1)*(a*d+b*e+c*f)
print(summ)","0.0"
"fb76df8b-f50e-400b-aa83-29cd6b682372","n = int(input())
print((n-1)*3)","0.0"
"a4b90367-4dc9-4d5f-84d6-56245ea5afc4","import math
k, m, n = map(int, input().split())

print(math.ceil(n / k) * 2 * m)","0.0"
"c6175ed3-a33c-4dbf-8f71-6ef2f9e31411","n=int(input())
a,b,c=map(int,input().split())
d,e,f=map(int,input().split())
print((a*d+b*e+c*f)*(n+1))","0.0"
"fb76df8b-f50e-400b-aa83-29cd6b682372","n=int(input())
m=(n-1)*3
print(m)","0.0"
"4f8b54ae-eb36-4c4d-91da-256fc6302b91","a, b, c, d = map(int, input().split())
minutes1 = a * 60 + b  
minutes2 = c * 60 + d 
diff = minutes2 - minutes1
hours = diff // 60
minutes = diff % 60
print(hours, minutes)","0.0"
"e1980664-e539-436e-af4e-1dc094d9908f","n = int(input())
for i in range(n):
    pos = input()
    x, y = ord(pos[0]) - ord('a'), int(pos[1]) - 1
    count = 0
    for dx in [-2, -1, 1, 2]:
        for dy in [-2, -1, 1, 2]:
            if abs(dx) != abs(dy):
                nx, ny = x + dx, y + dy
                if 0 <= nx < 8 and 0 <= ny < 8: 
                    count += 1
    print(count)","0.0"
"e1980664-e539-436e-af4e-1dc094d9908f","def count_cells(coord):
    # Ð¿ÐµÑÐµÐ²Ð¾Ð´Ð¸Ð¼ ÑÑÑÐ¾ÐºÑ Ð² ÑÐ¸ÑÐ»Ð°
    col_num = ord(coord[0]) - ord(""a"") + 1
    row_num = int(coord[1])
    
    cells = []
    
    # Ð¿ÑÐ¾Ð²ÐµÑÑÐµÐ¼ Ð²ÑÐµ Ð²Ð¾Ð·Ð¼Ð¾Ð¶Ð½ÑÐµ Ð½Ð°Ð¿ÑÐ°Ð²Ð»ÐµÐ½Ð¸Ñ Ð´Ð²Ð¸Ð¶ÐµÐ½Ð¸Ñ Ð¾ÑÐ»Ð°
    delta_col = [-2, -2, -1, -1, 1, 1, 2, 2]
    delta_row = [-1, 1, -2, 2, -2, 2, -1, 1]
    
    for i in range(8):
        new_col = col_num + delta_col[i]
        new_row = row_num + delta_row[i]
        # Ð¿ÑÐ¾Ð²ÐµÑÑÐµÐ¼, Ð»ÐµÐ¶Ð¸Ñ Ð»Ð¸ Ð½Ð¾Ð²Ð°Ñ ÐºÐ»ÐµÑÐºÐ° Ð² Ð¿ÑÐµÐ´ÐµÐ»Ð°Ñ Ð´Ð¾ÑÐºÐ¸
        if new_col >= 1 and new_col <= 8 and new_row >= 1 and new_row <= 8:
            cells.append((new_col, new_row))
    
    return len(cells)

# ÑÑÐ¸ÑÑÐ²Ð°ÐµÐ¼ ÐºÐ¾Ð»Ð¸ÑÐµÑÑÐ²Ð¾ ÑÐµÑÑÐ¾Ð²
n = int(input())

for i in range(n):
    # ÑÑÐ¸ÑÑÐ²Ð°ÐµÐ¼ ÐºÐ¾Ð¾ÑÐ´Ð¸Ð½Ð°ÑÑ Ð¾ÑÐ»Ð°
    coord = input().strip()
    # ÑÑÐ¸ÑÐ°ÐµÐ¼ ÐºÐ¾Ð»Ð¸ÑÐµÑÑÐ²Ð¾ ÐºÐ»ÐµÑÐ¾Ðº Ð¿Ð¾Ð´ Ð±Ð¾ÐµÐ¼
    cells = count_cells(coord)
    # Ð²ÑÐ²Ð¾Ð´Ð¸Ð¼ ÑÐµÐ·ÑÐ»ÑÑÐ°Ñ
    print(cells)","0.0"
"4f8b54ae-eb36-4c4d-91da-256fc6302b91","a, b, c, d = map(int, input().split())


start = a * 60 + b
end = c * 60 + d


diff = end - start
hours = diff // 60
minutes = diff % 60

print(hours, minutes)","0.0"
"4f8b54ae-eb36-4c4d-91da-256fc6302b91","a, b, c, d = map(int, input().split())
minutes1 = a * 60 + b  
minutes2 = c * 60 + d 
diff = minutes2 - minutes1
hours = diff // 60
minutes = diff % 60
print(hours, minutes)","0.0"
"e1980664-e539-436e-af4e-1dc094d9908f","def count_cells(coord):
    col_num = ord(coord[0]) - ord(""a"") + 1
    row_num = int(coord[1])
    cells = []
    delta_col = [-2, -2, -1, -1, 1, 1, 2, 2]
    delta_row = [-1, 1, -2, 2, -2, 2, -1, 1]
    
    for i in range(8):
        new_col = col_num + delta_col[i]
        new_row = row_num + delta_row[i]
        if new_col >= 1 and new_col <= 8 and new_row >= 1 and new_row <= 8:
            cells.append((new_col, new_row))
    
    return len(cells)
n = int(input())

for i in range(n):
    coord = input().strip()
    cells = count_cells(coord)
    print(cells)","0.0"
"008b5cbd-4257-4e11-a061-f19e550b6b3e","a = list(map(int, input().split()))
a.sort()
c1 = []
c = True
while c:
    for i in range(len(a)-1):
        c1.append(a[i+1]-a[i])
    if min(c1)==0:
        c = False
    else:
        a.append(min(c1))
        a.sort()
print(len(a)-2)","0.0"
"4f8b54ae-eb36-4c4d-91da-256fc6302b91","n=[int(i) for i in input().split()]
a=n[0]
b=n[1]
c=n[2]
d=n[3]
if ((c*60+d)-(a*60+b))>0:
    print(((c*60+d)-(a*60+b))//60,((c*60+d)-(a*60+b))%60)
else:
    aboba=1440-(a*60+b)+(c*60+d)
    print(aboba//60, aboba%60)","0.0"
"c270a9c3-67af-4113-8e7d-a7a94792013d","for _ in range(int(input())):
    a, b = map(int, input().split())
    if a - sum([i for i in range(1, b)]) > b - 1:
        print('YES')
    else:
        print('NO')","0.0"
"fb76df8b-f50e-400b-aa83-29cd6b682372","n = int(input())
print((n-1)*3)","0.0"
"a4b90367-4dc9-4d5f-84d6-56245ea5afc4","a=[int(x) for x in input().split()]
if a[2]<=a[0]:
  t = 2*a[1]
elif a[2]*2 % a[0]==0:
  t = a[1]*(a[2]*2 // a[0])
else:
  t = a[1]*(1+(a[2]*2 // a[0]))
print(t)","0.0"
"4f8b54ae-eb36-4c4d-91da-256fc6302b91","a,b,c,d=map(int,input().split())
f=60*a+b
h=60*c+d
o=h-f
z=o//60
p=o%60
print(z, p)","0.0"
"fb76df8b-f50e-400b-aa83-29cd6b682372","n = int(input())
print((n-1)*3)","0.0"
"a4b90367-4dc9-4d5f-84d6-56245ea5afc4","import math
k, m, n = map(int, input().split())

a = m * 2

print(math.ceil(n / k) * a)","0.0"
"c270a9c3-67af-4113-8e7d-a7a94792013d","k=int(input())
S=0
l=0
for i in range(k):
    S=0
    n,m = map(int, input().split())
    for g in range(1, m+1):
        S+=g
    if S>n:
        print('NO')
    elif S==n:
        print('YES')
    else:
        S=0
        while S<n:
            for j in range(l, m):
                S+=1
                l+=1
                m+=1
        if S==n:
            print('YES')
        else:
            print('NO')","0.0"
"c270a9c3-67af-4113-8e7d-a7a94792013d","for i in range(int(input())):
    a,b = map(int,input().split())
    if b>a:
        print(""NO"")
    else:
        print(""YES"")","0.0"
"fb76df8b-f50e-400b-aa83-29cd6b682372","print((int(input()) - 1) * 3)","0.0"
"c6175ed3-a33c-4dbf-8f71-6ef2f9e31411","n = int(input())
a, b, c = list(map(int, input().split()))
d, e, f = list(map(int, input().split()))
result =  (n + 1) * (a * d + b * e + c * f)
print(result)","0.0"
"c270a9c3-67af-4113-8e7d-a7a94792013d","c = []
for i in range(int(input())):
    a,b = map(int,input().split())
    if b>a:
        c.append(""NO"")
    else:
        c.append(""YES"")
for i in c:
    print(i)","0.0"
"fb76df8b-f50e-400b-aa83-29cd6b682372","n = int(input())
n -= 1
print(n*3)","0.0"
"c6175ed3-a33c-4dbf-8f71-6ef2f9e31411","n = int(input())+1
a, b, c = map(int, input().split())
d, e, f = map(int, input().split())

total_cost = n*(a*d + b*e + c*f)
print(total_cost)","0.0"
"fb76df8b-f50e-400b-aa83-29cd6b682372","n=int(input())
print(3*n-3)","0.0"
"fb76df8b-f50e-400b-aa83-29cd6b682372","n=int(input())
print((n-1)*3)","0.0"
"c6175ed3-a33c-4dbf-8f71-6ef2f9e31411","n = int(input())
A,B,C = map(int,input().split())
D,E,F = map(int,input().split())
print((n+1)*(A*D+B*E+C*F))","0.0"
"c270a9c3-67af-4113-8e7d-a7a94792013d","c = []
for i in range(int(input())):
    a,b = map(int,input().split())
    if b>a or b == 0:
        c.append(""NO"")
    else:
        c.append(""YES"")
for i in c:
    print(i)","0.0"
"fb76df8b-f50e-400b-aa83-29cd6b682372","print(3 * (int(input()) - 1))","0.0"
"c270a9c3-67af-4113-8e7d-a7a94792013d","k = int(input())
for i in range(k):
    n,m = map(int, input().split())
    if m>n:
        print('NO')
    else:
        print('YES')","0.0"
"fb76df8b-f50e-400b-aa83-29cd6b682372","n = int(input())
print((n-1)*3)","0.0"
"c270a9c3-67af-4113-8e7d-a7a94792013d","k = int(input())
for i in range(k):
    n, m = map(int, input().split())
    if n < m and n % m != 0:
        print(""NO"")
    else:
        print(""YES"")","0.0"
"fb76df8b-f50e-400b-aa83-29cd6b682372","print(((int(input()))-1)*3)","0.0"
"c270a9c3-67af-4113-8e7d-a7a94792013d","k = int(input())
for i in range(k):
    n,m = map(int, input().split())
    if m>n:
        print('NO')
    elif m == n:
        print('NO')
    else:
        print('YES')","0.0"
"008b5cbd-4257-4e11-a061-f19e550b6b3e","k,m,n=map(int,input().split())
q=[]
q.append(k)
q.append(m)
q.append(n)
q.sort()
k=0
mini=100000000000000000000000000
while 1>0:
    q.sort()
    for i in range(len(q)-1):
        r=int(q[i+1])-int(q[i])
        if r<mini:
            mini=r
    if mini==0:
        print(k+1)
        exit()
    k+=1
    for i in range(len(q)-1):
        r=int(q[i+1])-int(q[i])
        if r==mini:
            q.append(r)","0.0"
"a4b90367-4dc9-4d5f-84d6-56245ea5afc4","from math import *
k,m,n = map(int,input().split())
if k >= n:
    print(m*2*n)
else:
    print((ceil(n/k))*(m*2))","0.0"
"008b5cbd-4257-4e11-a061-f19e550b6b3e","from itertools import combinations


a = list(map(int, input().split()))
score = 1
while len(set(a)) == len(a):
    b = [abs(i[0] - i[1]) for i in list(combinations(a, 2))]
    a.append(min(b))
    score += 1
print(score)","0.0"
"e1980664-e539-436e-af4e-1dc094d9908f","for i in range(int(input())):
    pos = input()
    col = ord(pos[0]) - ord('a')
    row = int(pos[1]) - 1
    count = 0
    for x in range(8):
        for y in range(8):
            if abs(x - col) == 1 and abs(y - row) == 2 or abs(x - col) == 2 and abs(y - row) == 1:
                count += 1
    print(count)","0.0"
"4f8b54ae-eb36-4c4d-91da-256fc6302b91","a, b, c, d = map(int, input().split())
a=a*60+b
c=c*60+d
h=c-a
print(h//60, h%60)","0.0"
"c270a9c3-67af-4113-8e7d-a7a94792013d","k = int(input())
for i in range(k):
    n,m = map(int, input().split())
    if m>n:
        print('NO')
    elif m == n:
        print('NO')
    elif m/n>=2:
        print('YES')
    else:
        print('YES')","0.0"
"008b5cbd-4257-4e11-a061-f19e550b6b3e","from itertools import combinations


a = list(map(int, input().split()))
score = 1
while len(set(a)) == len(a):
    b = [abs(i[0] - i[1]) for i in list(combinations(a, 2))]
    a.append(min(b))
    score += 1
print(score)","0.0"
"c270a9c3-67af-4113-8e7d-a7a94792013d","b=int(input())
c=[]
for i in range(b):
    d=0
    a=[int(x) for x in input().split()]
    if a[0]<a[1]:
        c.append(""NO"")
    else:
        for i in range(a[1]):
            d=d+1
            a[0]=a[0]-d
        if a[0]>0:
            c.append(""YES"")
        else:
            c.append(""NO"")
for i in range(len(c)):
    print(c[i])","0.0"
"c270a9c3-67af-4113-8e7d-a7a94792013d","k=int(input())
c=0
for i in range(k):
    n, m=map(int, input().split())
    for b in range(1,m+1):
        c+=b
        if c>n:
            print('NO')
            break
    if c<=n:
        print('YES')
    c=0","0.0"
"c270a9c3-67af-4113-8e7d-a7a94792013d","k = int(input())
for i in range(k):
    n,m = map(int, input().split())
    if m>n:
        print('NO')
    elif m == n:
        print('NO')
    elif m//n>=2:
        print('YES')
    else:
        print('YES')","0.0"
"a4b90367-4dc9-4d5f-84d6-56245ea5afc4","from math import *
k,m,n = map(int,input().split())
if k >= n:
    print(m*2)
else:
    print((ceil(n/k))*(m*2))","0.0"
"c270a9c3-67af-4113-8e7d-a7a94792013d","k = int(input())
for i in range(k):
    n,m = map(int, input().split())
    if m>n:
        print('NO')
    elif m == n:
        print('NO')
    elif n//m>=2:
        print('YES')
    else:
        print('YES')","0.0"
"fb76df8b-f50e-400b-aa83-29cd6b682372","n=int(input())
print((n-1)*3)","0.0"
"e1980664-e539-436e-af4e-1dc094d9908f","n=int(input())
a=[input() for i in range(n)]
amogus=[]
for i in [""a"",""b"",""c"",""d"",""e"",""f"",""g"",""h""]:
    for j in [1,2,3,4,5,6,7,8]:
        amogus.append(i+str(j))
for i in a:
    temp1=[]
    s=0
    temp1.append(str(chr(ord(i[0])-1))+str(int(i[1])+2))
    temp1.append(str(chr(ord(i[0])+1))+str(int(i[1])+2))
    temp1.append(str(chr(ord(i[0])-1))+str(int(i[1])-2))
    temp1.append(str(chr(ord(i[0])+1))+str(int(i[1])-2))
    temp1.append(str(chr(ord(i[0])-2))+str(int(i[1])+1))
    temp1.append(str(chr(ord(i[0])+2))+str(int(i[1])+1))
    temp1.append(str(chr(ord(i[0])-2))+str(int(i[1])-1))
    temp1.append(str(chr(ord(i[0])+2))+str(int(i[1])-1))
    for j in temp1:
        if j in amogus:
            s+=1
    print(s)","0.0"
"a4b90367-4dc9-4d5f-84d6-56245ea5afc4","k, m, n = map(int, input().split())
single_cookie_time = 2 * m
total_time = ((n + k - 1) // k) * single_cookie_time
print(total_time)","0.0"
"c270a9c3-67af-4113-8e7d-a7a94792013d","k = int(input())
summ = 0
for i in range(k):
    n,m = map(int,input().split())
    for j in range(1,m+1):
        summ += j
    if summ <= n:
        print('YES')
    else:
        print('NO')","0.0"
"c270a9c3-67af-4113-8e7d-a7a94792013d","k = int(input())

for i in range(k):
    n, m = map(int, input().split())
    if n < m:
        print(""NO"")
    else:
        print(""YES"")","0.0"
"bb8bf498-d02f-48f2-a15a-f8cc813a5c5f","a1, b1 = map(int,input().split())
a2, b2 = map(int,input().split())
a3, b3 = map(int,input().split())
aa = a1-a3
bb = b1-b2
print(aa, bb)","0.0"
"fb76df8b-f50e-400b-aa83-29cd6b682372","b=int(input())
print(3*(b-1))","0.0"
"c6175ed3-a33c-4dbf-8f71-6ef2f9e31411","n = int(input())
a,b,c = map(int,input().split())
d,e,f = map(int,input().split())
a1 = (d*a) + (e*b) + (f*c)
print(a1*n+a1)","0.0"
"c270a9c3-67af-4113-8e7d-a7a94792013d","k = int(input())

bools = []
for i in range(k):
    n, m = map(int, input().split())
    if n < m:
        bools.append(""NO"")
    else:
        bools.append(""YES"")
for i in bools:
    print(i)","0.0"
"fb76df8b-f50e-400b-aa83-29cd6b682372","n = int(input())
print((n-1)*3)","0.0"
"fb76df8b-f50e-400b-aa83-29cd6b682372","n = int(input())
print((n-1)*3)","0.0"
"bb8bf498-d02f-48f2-a15a-f8cc813a5c5f","a1, b1 = map(int, input().split())
a2, b2 = map(int, input().split())
a3, b3 = map(int, input().split())
print(a1-a3, b1-b2)","0.0"
"a4b90367-4dc9-4d5f-84d6-56245ea5afc4","k, m, n = map(int, input().split())
x = 0
if k < n:
    c = n//k
    v = n/k
    if c < v:
        c += 1
    x = (m*2)*c
else:
    x = (m*2*1)
print(x)","0.0"
"c6175ed3-a33c-4dbf-8f71-6ef2f9e31411","n=int(input())
a,b,c=map(int,input().split())
d,e,f=map(int,input().split())
print((n+1)*(a*d+b*e+c*f))","0.0"
"c6175ed3-a33c-4dbf-8f71-6ef2f9e31411","n = int(input()) + 1
a, b, c = map(int, input().split())
d, e, f = map(int, input().split())
print(n * (a * d + b * e + f * c))","0.0"
"c270a9c3-67af-4113-8e7d-a7a94792013d","k = int(input())

for i in range(k):
    n, m = map(int, input().split())
    if n < m:
        print(""NO"")
    else:
        print(""YES"")","0.0"
"c270a9c3-67af-4113-8e7d-a7a94792013d","k = int(input())

for i in range(k):
    n, m = map(int, input().split())
    if n < m:
        print(""NO"")
    else:
        print(""YES"")","0.0"
"4f8b54ae-eb36-4c4d-91da-256fc6302b91","n=input().split(' ')
for i in range(len(n)):
    n[i]=int(n[i])
a=(n[2]-n[0])*60
b=n[3]-n[1]
c=a+b
c1=c//60
c2=c%60
print(c1, c2)","0.0"
"c270a9c3-67af-4113-8e7d-a7a94792013d","a=int(input())
for i in range(a):
    k=0
    b,c=map(int,input().split())
    for i in range(1,100000000):
        b=b-i
        if b<0:
            break
        k=k+1
        b=b-i
        if b<0:
            break
        k=k+1
    if k>=c:
        print(""YES"")
    else:
        print(""NO"")","0.0"
"a4b90367-4dc9-4d5f-84d6-56245ea5afc4","k, m, n = map(int, input().split())
x = 0
if k == 0 or n == 0:
    print(0)
else:
    if k < n:
        c = n//k
        v = n/k
        if c < v:
            c += 1
        x = (m*2)*c
    else:
        x = (m*2*1)
    print(x)","0.0"
"85b72f3a-191b-4d99-9207-6a82ed1e73c9","k, n = map(int, input().split())
a = list(map(int, input().split()))

total = 0
for i in range(n):
    total += a[i] - k
    if total < 0:
        total = 0

print(total)","0.0"
"e1980664-e539-436e-af4e-1dc094d9908f","for i in range(int(input())):
    c = 8
    a = input()
    if (a[0] == 'a' and (a[1] == '1' or a[1] == '8'))or(a[0] == 'h' and (a[1] == '1' or a[1] == '8')):
        c -= 6
    elif (a[0] == 'a' and (a[1] == '2' or a[1] == '7')) or (a[0] == 'h' and (a[1] == '2' or a[1] == '7')):
        c -= 5
    elif (a[0] == 'b' and (a[1] == '2' or a[1] == '7')) or (a[0] == 'g' and (a[1] == '2' or a[1] == '7')):
        c-= 4
    elif (a[0] == 'b' and (a[1] == '1' or a[1] == '8')) or (a[0] == 'g' and (a[1] == '1' or a[1] == '8')):
        c -= 5
    elif a[0]=='a' or a[0]=='h':
        c -= 4
    elif a[1] == '1' or a[1] == '8':
        c-=4
    elif a[0] == 'b' or a[0] == 'g':
        c -= 2
    elif a[1] == '2' or a[1] == '7':
        c-=2
    print(c)","0.0"
"fb76df8b-f50e-400b-aa83-29cd6b682372","a=int(input())
b=(a-1)*3
print(b)","0.0"
"c270a9c3-67af-4113-8e7d-a7a94792013d","a=int(input())
for i in range(a):
    k=0
    b,c=map(int,input().split())
    for i in range(1,100000000):
        b=b-i
        if b<0:
            break
        k=k+1
    if k>=c:
        print(""YES"")
    else:
        print(""NO"")","0.0"
"85b72f3a-191b-4d99-9207-6a82ed1e73c9","k, n = map(int, input().split())
a = list(map(int, input().split()))

total = 0
for i in range(n):
    total += a[i] - k
    if total < 0:
        total = 0

print(total)","0.0"
"4f8b54ae-eb36-4c4d-91da-256fc6302b91","a, b, c, d = map(int, input().split())
bb = a*60+b
dd = c*60+d
gg = dd-bb
h = gg//60
j = gg%60
print(h, j)","0.0"
"fb76df8b-f50e-400b-aa83-29cd6b682372","n = int(input())
a = 0
if n>3:
    print((n-1)*3)
elif n == 2:
    print(3)","0.0"
"4f8b54ae-eb36-4c4d-91da-256fc6302b91","a , b, c ,d = map(int, input().split())
a = a*60+b
c = c*60+d
print((c-a)//60, (c-a)%60)","0.0"
"c0ed6e9b-f602-4b3b-8aef-52dbb2485110","coded_message = input() 
decoded_message = """" 
 
code_list = [ord(i) - 97 for i in coded_message] 
 
for i in range(len(code_list)): 
    if i == 0: 
        decoded_message += chr((code_list[i] - 5) % 26 + 97)
    else: 
        decoded_message += chr((code_list[i] - code_list[i-1]) % 26 + 97)
 
print(decoded_message)","0.0"
"bb8bf498-d02f-48f2-a15a-f8cc813a5c5f","a1,b1=map(int,input().split())
a2,b2=map(int,input().split())
a3,b3=map(int,input().split())
x=a1-a3
y=b1-b2
print(x,y)","0.0"
"c0ed6e9b-f602-4b3b-8aef-52dbb2485110","coded_message = input()
decoded_message = """" 
 
code_list = [ord(i) - 97 for i in coded_message]
 
for i in range(len(code_list)):
    if i == 0:
        decoded_message += chr((code_list[i] - 5) % 26 + 97)
    else:
        decoded_message += chr((code_list[i] - code_list[i-1]) % 26 + 97)
 
print( decoded_message)","0.0"
"4f8b54ae-eb36-4c4d-91da-256fc6302b91","a, b, c, d = map(int, input().split()) 
minutes = (c - a) * 60 + d - b 
hours = minutes // 60 
minutes = minutes % 60
print(hours, minutes)","0.0"
"4f8b54ae-eb36-4c4d-91da-256fc6302b91","a,b,c,d=map(int,input().split())
r=(c*60+d)-(a*60+b)
if r%60==0:
    print(r//60, 0)
else:
    ch=r//60
    ost=r-ch*60
    print(ch,ost)","0.0"
"4f8b54ae-eb36-4c4d-91da-256fc6302b91","a,b,c,d=map(int,input().split())
b+=a*60
d+=c*60
m=d-b
h=m//60
m-=60*h
print(h,m)","0.0"
"4f8b54ae-eb36-4c4d-91da-256fc6302b91","a,b,c,d = map(int,input().split())
q = c-a

if d <b:
    print(q-1, 60-b+d)
else:
    print(q,d-b)","0.0"
"4f8b54ae-eb36-4c4d-91da-256fc6302b91","l = [int(x) for x in input().split()]
a = l[0]
b = l[1]
c = l[2]
d = l[3]
if d - b >= 0:
    m = d - b
    h = c - a
else:
    h = c-a-1
    m = d - b + 60
print(h, m)","0.0"
"2373f3eb-bf38-46fd-ba92-ede0c1bc0ac0","n = int(input())
times = [int(input()) for _ in range(n)]
times.sort()

min_time = 0
while len(times) > 3:
    time1 = times[0] + 2 * times[1] + times[-1] 
    time2 = 2 * times[0] + times[-1] + times[-2] 
    min_time += min(time1, time2)
    times = times[:-2] 

if len(times) == 3:
    min_time += sum(times) 
else:
    min_time += max(times) 

print(min_time)","0.0"
"fb76df8b-f50e-400b-aa83-29cd6b682372","n=int(input())
a=(n-1)*3
print(a)","0.0"
"2373f3eb-bf38-46fd-ba92-ede0c1bc0ac0","n = int(input())
times = [int(input()) for _ in range(n)]
times.sort()

min_time = 0
while len(times) > 3:
    time1 = times[0] + 2 * times[1] + times[-1]
    time2 = 2 * times[0] + times[-1] + times[-2]
    min_time += min(time1, time2)
    times = times[:-2]

if len(times) == 3:
    min_time += sum(times)
else:
    min_time += max(times)
print(min_time)","0.0"
"fb76df8b-f50e-400b-aa83-29cd6b682372","n=int(input())
a=3*(n-1)
print(a-0)","0.0"
"bb8bf498-d02f-48f2-a15a-f8cc813a5c5f","a1,b1 = map(int,input().split())
a2,b2 = map(int,input().split())
a3,b3 = map(int,input().split())
print(a1-a3,b1-b2)","0.0"
"a4b90367-4dc9-4d5f-84d6-56245ea5afc4","import math
k, m, n = map(int, input().split())

a = math.ceil(n / k) * 2 * m
print(a)","0.0"
"4f8b54ae-eb36-4c4d-91da-256fc6302b91","a,b,c,d = map(int, input().split())
if d == b:
    print(c-a, 0)
elif b>d:
    print(c-a-1,60-b+d)
else:
    print(c-a,d-b)","0.0"
"c270a9c3-67af-4113-8e7d-a7a94792013d","k = int(input())

for i in range(k):
    a, b = map(int, input().split())
    if a < b:
        print(""NO"")
    else:
        print(""YES"")","0.0"
"a4b90367-4dc9-4d5f-84d6-56245ea5afc4","k, m, n = map(int, input().split())

time = (2 * n + k - 1) // k * m 

print(time)","0.0"
"4f8b54ae-eb36-4c4d-91da-256fc6302b91","a=[int(x) for x in input().split()]
b=a[2]-a[0]
c=a[3]-a[1]
if c<0:
    b=b-1
    c=60-a[1]+a[3]
print(b, end="" "")
print(c)","0.0"
"c6175ed3-a33c-4dbf-8f71-6ef2f9e31411","n = int(input())
a, b, c = map(int, input().split())
d, e, f = map(int, input().split())
print((a * d + b * e + c * f) * (n+1))","0.0"
"c270a9c3-67af-4113-8e7d-a7a94792013d","import math

k = int(input()) # ÐºÐ¾Ð»Ð¸ÑÐµÑÑÐ²Ð¾ ÑÐµÑÑÐ¾Ð²
for i in range(k):
    n, m = map(int, input().split())
    if n < m or (n - m) % m != 0:
        print(""NO"")
    else:
        print(""YES"")","0.0"
"c270a9c3-67af-4113-8e7d-a7a94792013d","for _ in range(int(input())):
    k, n = map(int, input().split())
    if k >= n:
        print('YES')
    else:
        print('NO')","0.0"
"a4b90367-4dc9-4d5f-84d6-56245ea5afc4","a,b,c = map(int,input().split())
if c <= a:
    print(b*2)
else:
    if c % a == 0:
        print((c // a)*2*b)
    else:
        print((c//a+1)*2*b)","0.0"
"fb76df8b-f50e-400b-aa83-29cd6b682372","n = int(input())
print((n - 1) * 3)","0.0"
"c270a9c3-67af-4113-8e7d-a7a94792013d","import math

k = int(input()) # ÐºÐ¾Ð»Ð¸ÑÐµÑÑÐ²Ð¾ ÑÐµÑÑÐ¾Ð²

for i in range(k):
    n, m = map(int, input().split())
    if n < m: 
        print(""NO"")
    elif n % m == 0: 
        print(""YES"")
    elif n // m >= 1 and n % m != 0: 
        print(""YES"")
    else:
        print(""NO"")","0.0"
"4f8b54ae-eb36-4c4d-91da-256fc6302b91","a,b,c,d=map(int,input().split())
e=c*60+d
f=a*60+b
g=e-f
w=g//60
z=g%60
print(w,z)","0.0"
"bb8bf498-d02f-48f2-a15a-f8cc813a5c5f","a,b=map(int,input().split())
a2,b2=map(int,input().split())
a3,b3=map(int,input().split())
spa=[]
spb=[]
spa.append(a)
spa.append(a2)
spa.append(a3)
spb.append(b3)
spb.append(b)
spb.append(b2)
spa.sort()
spb.sort()
r1=a-int(spa[0])
r2=b-int(spb[0])
print(r1,r2)","0.0"
"a4b90367-4dc9-4d5f-84d6-56245ea5afc4","k, m, n = map(int, input().split())

time = (2 * n + k - 1) // k * m

print(time)","0.0"
"c270a9c3-67af-4113-8e7d-a7a94792013d","for _ in range(int(input())):
    k, n = map(int, input().split())
    if k == 1:
        print('YES')
    else:
        if k >= n:
            print('YES')
        else:
            print('NO')","0.0"
"c270a9c3-67af-4113-8e7d-a7a94792013d","k = int(input())
for i in range(k):
    n,m = map(int,input().split())
    if n > m:
        if n%m == 0:
            print('YES')
        elif n%m%2 != 0:
            print('YES')
    else:
        print('NO')","0.0"
"bb8bf498-d02f-48f2-a15a-f8cc813a5c5f","a1,b1 = map(int, input().split())
a2,b2 =  map(int, input().split())
a3,b3 =  map(int, input().split())
print(a1-a3, b1-b2)","0.0"
"a4b90367-4dc9-4d5f-84d6-56245ea5afc4","k, m, n = map(int, input().split())
if n % k == 0:
    print(int(n/k*m*2))
else:
    print(int((n//k+1)*m*2))","0.0"
"a4b90367-4dc9-4d5f-84d6-56245ea5afc4","a,b,c = map(int,input().split())
if a == 0:
    print(0)
elif c <= a:
    print(b*2)
else:
    if c % a == 0:
        print((c // a)*2*b)
    else:
        print((c//a+1)*2*b)","0.0"
"fb76df8b-f50e-400b-aa83-29cd6b682372","n = int(input())
n -= 1
g = 3*n
print(g)","0.0"
"4f8b54ae-eb36-4c4d-91da-256fc6302b91","a,b,c,d=map(int,input().split())
x=((c*60+d)-(a*60+b))//60
y=((c*60+d)-(a*60+b))%60
print(x,y)","0.0"
"bb8bf498-d02f-48f2-a15a-f8cc813a5c5f","a,b=map(int,input().split())
a2,b2=map(int,input().split())
a3,b3=map(int,input().split())
r1=a-a3
r2=b-b2
print(r1,r2)","0.0"
"c0ed6e9b-f602-4b3b-8aef-52dbb2485110","a=list(input())
a=[ord(i)-ord(""a"") for i in a]
n=0
for i in range(1,len(a)):
    a[i]-=a[i-1]
    s=0
    while a[i]+26*n<0:
        n+=1
    a[i]+=26*n+a[i-1]

z=a.copy()
for i in range(1,len(a)):
    z[i]=a[i]-a[i-1]

a[0]-=5
while a[0]<0:
    a[0]+=26
z[0]=a[0]
aboba=[]
for i in z:
    print(chr(i+ord(""a"")),end="""")","0.0"
"c270a9c3-67af-4113-8e7d-a7a94792013d","n = int(input())
sp = []
for i in range(n):
    y = input().split()
    if int(y[0]) > int(y[1]):
        sp.append(""YES"")
    else:
        sp.append(""NO"")
for i in sp:
    print(i)","0.0"
"a4b90367-4dc9-4d5f-84d6-56245ea5afc4","k, m, n =map(int, input().split())
if k>=n:
    c = n*m*2
elif k<n:
    c = (n//k+1)*m*2
elif n==0:
    c = 0
print(c)","0.0"
"c270a9c3-67af-4113-8e7d-a7a94792013d","k=int(input())
for i in range(k):
    n, m = map(int, input().split())
    if n<=m:
        print('NO')
    elif m==1 or m==2:
        print('YES')
    else:
        print('NO')","0.0"
"c270a9c3-67af-4113-8e7d-a7a94792013d","n = int(input())
sp = []
for i in range(n):
    y = input().split()
    if int(y[0]) >= int(y[1]):
        sp.append(""YES"")
    else:
        sp.append(""NO"")
for i in sp:
    print(i)","0.0"
"bb8bf498-d02f-48f2-a15a-f8cc813a5c5f","a, b = map(int, input().split())
a1, b1 = map(int, input().split())
a2, b2 = map(int, input().split())
print(a - a2, b - b1)","0.0"
"c270a9c3-67af-4113-8e7d-a7a94792013d","k=int(input())
for i in range(k):
    n,m=map(int,input().split())
    # print(n//m)
    if n//m!=0:
        print(""YES"")
    else:
        print(""NO"")","0.0"
"bb8bf498-d02f-48f2-a15a-f8cc813a5c5f","a1,b1=map(int,input().split())
a2,b2=map(int,input().split())
a3,b3=map(int,input().split())
a=a1-a3
b=b1-b2
print(a,b)","0.0"
"c270a9c3-67af-4113-8e7d-a7a94792013d","k=int(input())
S=0
for i in range(k):
    n, m = map(int, input().split())
    if n<=m:
        print('NO')
    elif m==1 or m==2:
        print('YES')
    else:
        for g in range(1, m+1):
            S+=1
        if S>n:
            print('NO')
        else:
            print('YES')","0.0"
"fb76df8b-f50e-400b-aa83-29cd6b682372","n=int(input())
print((n-1)*3)","0.0"
"c270a9c3-67af-4113-8e7d-a7a94792013d","k=int(input())
S=0
for i in range(k):
    n, m = map(int, input().split())
    if n<m or n==m>1:
        print('NO')
    elif m==1 or m==2:
        print('YES')
    else:
        for g in range(1, m+1):
            S+=1
        if S>n:
            print('NO')
        else:
            print('YES')","0.0"
"85b72f3a-191b-4d99-9207-6a82ed1e73c9","a, b = map(int, input().split())
c = list(map(int,input().split()))
for y in range(len(c)-1):
    if c[y]>a:
        c[y+1]+=c[y]-a
if c[-1]>a:
    print(c[-1]-a)
else:
    print(0)","0.0"
"c270a9c3-67af-4113-8e7d-a7a94792013d","n = int(input())
sp = []
for i in range(n):
    y = input().split()
    if int(y[0]) >= int(y[1]):
        s = 0
        for i in range(int(y[1])):
            s += i
        if s < int(y[0]):
            sp.append(""YES"")
        else:
            sp.append(""NO"")
    else:
        sp.append(""NO"")
for i in sp:
    print(i)","0.0"
"c270a9c3-67af-4113-8e7d-a7a94792013d","k=int(input())
S=0
for i in range(k):
    n, m = map(int, input().split())
    if n<m or n==m>1:
        print('NO')
    elif m==1 or m==2:
        print('YES')
    else:
        for g in range(1, m+1):
            S+=g
        if S>n:
            print('NO')
        else:
            print('YES')","0.0"
"c270a9c3-67af-4113-8e7d-a7a94792013d","from math import *
k=int(input())
for i in range(0,k):
    a,b=map(int,input().split())
    if a>b and factorial(a-2)>=a :
        print(""YES"")
    else:
        print(""NO"")","0.0"
"bb8bf498-d02f-48f2-a15a-f8cc813a5c5f","a1, b1= map(int, input(). split())
a2, b2= map(int, input(). split())
a3, b3= map(int, input(). split())
a4=a1-a3
b4=b1-b2
print(a4, b4)","0.0"
"a4b90367-4dc9-4d5f-84d6-56245ea5afc4","k, m, n = map(int, input().split())
x = 0
if k <= 0 or n <= 0 or m <= 0:
    print(0)
else:
    if k < n:
        c = n//k
        v = n/k
        if c < v:
            c += 1
        x = (m*2)*c
    else:
        x = (m*2*1)
    print(x)","0.0"
"c270a9c3-67af-4113-8e7d-a7a94792013d","from math import *
k=int(input())
for i in range(0,k):
    a,b=map(int,input().split())
    if a>b and factorial(a)>=a :
        print(""YES"")
    else:
        print(""NO"")","0.0"
"bb8bf498-d02f-48f2-a15a-f8cc813a5c5f","a1, b1 = map(int, input().split())
a2, b2 = map(int, input().split())
a3, b3 = map(int, input().split())
print(a1-a3,b1-b2)","0.0"
"c270a9c3-67af-4113-8e7d-a7a94792013d","k=int(input())
S=0
for i in range(k):
    n, m = map(int, input().split())
    if n<m or (n==m and m>1):
        print('NO')
    elif m==1 or m==2:
        print('YES')
    else:
        for g in range(1, m+1):
            S+=g
        if S>n:
            print('NO')
        else:
            print('YES')","0.0"
"e1980664-e539-436e-af4e-1dc094d9908f","N=int(input())
for i in range(N):
    a=input()
    if a=='a1' or a=='h1' or a=='a8' or a=='h8':
        print(2)
    elif a=='a2' or a=='a7'or a=='h2' or a=='h7' or a=='b1' or a=='b8' or a=='g1' or a=='g8':
        print(3)
    elif a=='a3' or a=='a4'or a=='a5'or a=='a6'or a=='h5'or a=='h6' or a=='h3' or a=='h4' or a=='b2' or a=='b7' or a=='g2' or a=='g7'or a=='c1' or a=='c8'or a=='f1' or a=='f8' or a=='d1' or a=='d8' or a=='e1' or a=='e8':
        print(4)
    elif a=='g3' or a=='g4'or a=='g5' or a=='g6'or a=='b3' or a=='b4' or a=='b5' or a=='b6' or a=='c2' or a=='c7' or a=='f2' or a=='f7' or a=='d2' or a=='d7' or a=='e2' or a=='e7':
        print(6)
    elif a=='c3' or a=='c4' or a=='c5' or a=='c6' or a=='d3' or a=='d4' or a=='d5' or a=='d6' or a=='e3' or a=='e4' or a=='e5' or a=='e6':
        print(8)","0.0"
"c270a9c3-67af-4113-8e7d-a7a94792013d","n=int(input())
z=[input().split() for i in range(n)]
for i in range(n):
    a=int(z[i][0])
    b=int(z[i][1])
    if a<=b:
        print(""NO"")
    else:
        print(""YES"")","0.0"
"c270a9c3-67af-4113-8e7d-a7a94792013d","k=int(input())
for i in range(0,k):
    a,b=map(int,input().split())
    if a>b and sum(range(1,a-b))>=a :
        print(""YES"")
    else:
        print(""NO"")","0.0"
"a4b90367-4dc9-4d5f-84d6-56245ea5afc4","from math import *
k,m,n = map(int,input().split())
if k >= n:
    print(m*2*n)
else:
    print((ceil(n/k))*(m*2))","0.0"
"e1980664-e539-436e-af4e-1dc094d9908f","N=int(input())
for i in range(N):
    a=input()
    if a=='a1' or a=='h1' or a=='a8' or a=='h8':
        print(2)
    elif a=='a2' or a=='a7'or a=='h2' or a=='h7' or a=='b1' or a=='b8' or a=='g1' or a=='g8':
        print(3)
    elif a=='a3' or a=='a4'or a=='a5'or a=='a6'or a=='h5'or a=='h6' or a=='h3' or a=='h4' or a=='b2' or a=='b7' or a=='g2' or a=='g7'or a=='c1' or a=='c8'or a=='f1' or a=='f8' or a=='d1' or a=='d8' or a=='e1' or a=='e8':
        print(4)
    elif a=='g3' or a=='g4'or a=='g5' or a=='g6'or a=='b3' or a=='b4' or a=='b5' or a=='b6' or a=='c2' or a=='c7' or a=='f2' or a=='f7' or a=='d2' or a=='d7' or a=='e2' or a=='e7':
        print(6)
    elif a=='c3' or a=='c4' or a=='c5' or a=='c6' or a=='d3' or a=='d4' or a=='d5' or a=='d6' or a=='e3' or a=='e4' or a=='e5' or a=='e6' or a=='f3' or a=='f4' or a=='f5' or a=='f6':
        print(8)","0.0"
"c270a9c3-67af-4113-8e7d-a7a94792013d","k = int(input())
for j in range(k):
    summ = 0
    n,m = map(int,input().split())
    for i in range (1,m+1):
        summ += i
    if summ > n:
        print('NO')
    else:
        print('YES')","0.0"
"4f8b54ae-eb36-4c4d-91da-256fc6302b91","a, b, c, d=map(int, input().split())
h=(c*60+d)-(a*60+b)
print(h//60, h%60)","0.0"
"4f8b54ae-eb36-4c4d-91da-256fc6302b91","a,b,c,d=map(int,input().split())
m=0
x=0
if a<c:
   x=c-a
elif a==c:
    x=c-a
if b<d:
    m=d-b
elif b>d:
    x=x-1
    m=d+60-b
print(x,m,sep="" "")","0.0"
"a4b90367-4dc9-4d5f-84d6-56245ea5afc4","k, m, n =map(int, input().split())
if k>=n:
    c = m*2
elif k<n:
    c = (n//k+1)*m*2
elif n==0:
    c = 0
print(c)","0.0"
"bb8bf498-d02f-48f2-a15a-f8cc813a5c5f","a=[int(i) for i in input().split()]
b=[int(i) for i in input().split()]
c=[int(i) for i in input().split()]
m1=a[0]-c[0]
m2=a[1]-b[1]
print(m1,m2)","0.0"
"e1980664-e539-436e-af4e-1dc094d9908f","n = int(input())
for i in range(n):
    s = input()
    b = ord(s[0])-ord('a')+1
    c = int(s[1])
    r = 0
    if b+2<9:
        if c+1<9:
            r+=1
        if c-1>0:
            r += 1
    if b-2 > 0:
        if c+1<9:
            r+=1
        if c-1>0:
            r += 1
    if b+1<9:
        if c+2<9:
            r+=1
        if c-2>0:
            r += 1
    if b-1 > 0:
        if c+2<9:
            r+=1
        if c-2>0:
            r += 1

    print(r)","0.0"
"c6175ed3-a33c-4dbf-8f71-6ef2f9e31411","n=int(input())
a,b,c=map(int,input().split())
d,e,f=map(int,input().split())
s=(a*d+b*e+c*f)*(n+1)
print(s)","0.0"
"4f8b54ae-eb36-4c4d-91da-256fc6302b91","a, b, c, d= map(int, input(). split())
e=(c*60+d)-(a*60+b)
s=e//60
u=e%60
print(s, u)","0.0"
"c270a9c3-67af-4113-8e7d-a7a94792013d","k = int(input())
for i in range(1,k+1):
    c=0
    n,m = map(int,input().split())
    for f in range(1,m+1):
        c=c+f
    if n<m or n==m or c>n:
        print('NO')
    else:
        print('YES')","0.0"
"bb8bf498-d02f-48f2-a15a-f8cc813a5c5f","a1,b1=map(int,input().split())
a2,b2=map(int,input().split())
a3,b3=map(int,input().split())
if a2>b2:
    c2=b2
else:
    c2=a2
if a3>b3:
    c3=b3
else:
    c3=a3
c4=b1-c2
c5=a1-c3
print(c4,c5)","0.0"
"c270a9c3-67af-4113-8e7d-a7a94792013d","k=int(input())
n,m=map(int,input().split())
if n>m:
    print(""YES"")
else:
    print(""NO"")","0.0"
"a4b90367-4dc9-4d5f-84d6-56245ea5afc4","k, m, n =map(int, input().split())
if k>=n:
    c = m*2
elif k<n and n%k!=0:
    c = (n//k+1)*m*2
elif k<n and n%k==0:
    c = (n//k)*m*2
print(c)","0.0"
"c270a9c3-67af-4113-8e7d-a7a94792013d","k=int(input())
S=0
for i in range(k):
    n, m = map(int, input().split())
    if m==1 and n==1:
        print('YES')
    else:
        for g in range(1, m+1):
         S+=g
    if S>n:
         print('NO')
    else:
        print('YES')","0.0"
"4f8b54ae-eb36-4c4d-91da-256fc6302b91","ch1,m1,ch2,m2 = map(int,input().split())
q = 0
if m2 < m1 and (ch2-ch1) == 1:
    q = 60+m2
    print(0,q-m1)
elif m2 < m1 and (ch2-ch1) > 1:
    q = 60+m2
    print(ch2-ch1-1,q-m1)
else:
    print(ch2-ch1,m2-m1)","0.0"
"008b5cbd-4257-4e11-a061-f19e550b6b3e","a=[int(i) for i in input().split()]
amogus=[1]
n=0
while min(amogus)!=0:
    amogus=[]
    for i in range(len(a)):
        for j in range(len(a)):
            if a[i]-a[j]>=0 and i!=j:
                amogus.append(a[i]-a[j])
    a.append(min(amogus))
    n+=1
print(n)","0.0"
"bb8bf498-d02f-48f2-a15a-f8cc813a5c5f","a1,b1=map(int,input().split())
a2,b2=map(int,input().split())
a3,b3=map(int,input().split())
if a2>b2:
    c2=b2
else:
    c2=a2
if a3>b3:
    c3=b3
else:
    c3=a3
c4=b1-c2
c5=a1-c3
print(c4,c5)","0.0"
"fb76df8b-f50e-400b-aa83-29cd6b682372","n=int(input())
print(3*(n-1))","0.0"
"a4b90367-4dc9-4d5f-84d6-56245ea5afc4","k, m, n = map(int, input().split())

counter = 0

while n > 0:
    counter += m * 2
    n -= k
print(counter)","0.0"
"c270a9c3-67af-4113-8e7d-a7a94792013d","c = []
for i in range(int(input())):
    a,b = map(int,input().split())
    if b>a+1:
        c.append(""NO"")
    else:
        c.append(""YES"")
for i in c:
    print(i)","0.0"
"c270a9c3-67af-4113-8e7d-a7a94792013d","k = int(input())
for i in range(k):
    n,m = map(int,input().split())
    if n > m:
        if n%m == 0:
            print('YES')
        elif n%m%2 != 0:
            print('YES')
    else:
        print('NO')","0.0"
"008b5cbd-4257-4e11-a061-f19e550b6b3e","a,b,c = map(int,input().split())
q = [0]*4
w = min(abs(a-b),abs(b-c),abs(a-c))
q[0] = a
q[1] = b
q[2] = c
q[3] = w
e = 1
r = 0
y = w
while w > 0:
    for i in range(len(q)-1):
        if w > abs(w-q[i]) and y > abs(w-q[i]):
            y = abs(w-q[i])
            r += 1
        if w == q[i]:
            e+=1
            break
    if r > 0:
        e += 1
    else:
        e += 2
        break
    r = 0
    w = y
    q.append(w)
print(e)","0.0"
"c270a9c3-67af-4113-8e7d-a7a94792013d","c = []
for i in range(int(input())):
    a,b = map(int,input().split())
    if b>a-1:
        c.append(""NO"")
    else:
        c.append(""YES"")
for i in c:
    print(i)","0.0"
"4f8b54ae-eb36-4c4d-91da-256fc6302b91","a,b,c,d=map(int,input().split())
min=(c*60+d)-(a*60+b)
print(min//60, min%60)","0.0"
"e1980664-e539-436e-af4e-1dc094d9908f","a=int(input())
for i in range(a):
    b=input()
    if b==""a1"":
        print(2)
    if b==""a2"":
        print(3)
    if b==""a3"":
        print(4)
    if b==""a4"":
        print(4)
    if b==""a5"":
        print(4)
    if b==""a6"":
        print(4)
    if b==""a7"":
        print(3)
    if b==""a8"":
        print(2)
        
    if b==""h1"":
        print(2)
    if b==""h2"":
        print(3)
    if b==""h3"":
        print(4)
    if b==""h4"":
        print(4)
    if b==""h5"":
        print(4)
    if b==""h6"":
        print(4)
    if b==""h7"":
        print(3)
    if b==""h8"":
        print(2)
        
    if b==""b1"":
        print(3)
    if b==""b2"":
        print(4)
    if b==""b3"":
        print(6)
    if b==""b4"":
        print(6)
    if b==""b5"":
        print(6)
    if b==""b6"":
        print(6)
    if b==""b7"":
        print(4)
    if b==""b8"":
        print(3)
            
    if b==""g1"":
        print(3)
    if b==""g2"":
        print(4)
    if b==""g3"":
        print(6)
    if b==""g4"":
        print(6)
    if b==""g5"":
        print(6)
    if b==""g6"":
        print(6)
    if b==""g7"":
        print(4)
    if b==""g8"":
        print(3)
            
    if b==""c1"":
        print(4)
    if b==""c2"":
        print(6)
    if b==""c3"":
        print(8)
    if b==""c4"":
        print(8)
    if b==""c5"":
        print(8)
    if b==""c6"":
        print(8)
    if b==""c7"":
        print(6)
    if b==""c8"":
        print(4)
        
    if b==""f1"":
        print(4)
    if b==""f2"":
        print(6)
    if b==""f3"":
        print(8)
    if b==""f4"":
        print(8)
    if b==""f5"":
        print(8)
    if b==""f6"":
        print(8)
    if b==""f7"":
        print(6)
    if b==""f8"":
        print(4)

    if b==""d1"":
        print(4)
    if b==""d2"":
        print(6)
    if b==""d3"":
        print(8)
    if b==""d4"":
        print(8)
    if b==""d5"":
        print(8)
    if b==""d6"":
        print(8)
    if b==""d7"":
        print(6)
    if b==""d8"":
        print(4)

    if b==""e1"":
        print(4)
    if b==""e2"":
        print(6)
    if b==""e3"":
        print(8)
    if b==""e4"":
        print(8)
    if b==""e5"":
        print(8)
    if b==""e6"":
        print(8)
    if b==""e7"":
        print(6)
    if b==""e8"":
        print(4)","0.0"
"c270a9c3-67af-4113-8e7d-a7a94792013d","k=int(input())
S=0
for i in range(k):
    n, m = map(int, input().split())
    if m==1 and n==1:
        print('YES')
    else:
        for g in range(1, m+1):
            S+=g
    if S>n:
         print('NO')
    else:
        print('YES')","0.0"
"c270a9c3-67af-4113-8e7d-a7a94792013d","k=int(input())
S=0
for i in range(k):
    n, m = map(int, input().split())
    if m==1 and n==1:
        print('YES')
    else:
        for g in range(1, m+1):
            S+=g
    if S>n:
         print('NO')
    else:
        print('YES')","0.0"
"c270a9c3-67af-4113-8e7d-a7a94792013d","n=int(input())
z=[input().split() for i in range(n)]
for i in range(n):
    a=int(z[i][0])
    b=int(z[i][1])
    if a<=b*b:
        print(""NO"")
    else:
        print(""YES"")","0.0"
"c270a9c3-67af-4113-8e7d-a7a94792013d","k = int(input())
for i in range(k):
    n,m = map(int,input().split())
    if n > m:
        if n%m == 0:
            print('YES')
        elif n > 100 and m <= 10:
            print('YES')
    else:
        print('NO')","0.0"
"4f8b54ae-eb36-4c4d-91da-256fc6302b91","a, b, c, d = map(int, input().split())
z =(c*60+d)-(a*60+b)
x = z // 60
c = z % 60
print(x, c)","0.0"
"c6175ed3-a33c-4dbf-8f71-6ef2f9e31411","n=int(input())
A,B,C=map(int,input().split())
D,E,F=map(int,input().split())
x=(A*D+B*E+C*F)*(n+1)
print(x)","0.0"
"c270a9c3-67af-4113-8e7d-a7a94792013d","c = []
for i in range(int(input())):
    a,b = map(int,input().split())
    b1 = 0
    for i in range(b):
        b1+=i
    if b1>a:
        c.append('NO')
    else:
        c.append(""YES"")
for i in c:
    print(i)","0.0"
"bb8bf498-d02f-48f2-a15a-f8cc813a5c5f","i = input()
r = []
r.append(int(i[0]))
r.append(int(i[2]))
i = input()
t = []
t.append(int(i[0]))
t.append(int(i[2]))
i = input()
y = []
y.append(int(i[0]))
y.append(int(i[2]))
u = [r[0]-y[0], r[1]-t[1]]
print(*u)","0.0"
"4f8b54ae-eb36-4c4d-91da-256fc6302b91","a,b,c,d=map(int,input().split())
x=((c*60+d)-(a*60+b))//60
z=((c*60+d)-(a*60+b))%60
print(x,z)","0.0"
"e1980664-e539-436e-af4e-1dc094d9908f","b=int(input())
c=[]
for i in range(b):
    d=0
    a=input()
    if ((104 >= ord(a[0]) + 2)  & (8 >= int(a[1]) + 1)):
        d=d+1
    if ((104 >= ord(a[0]) + 2)  & (1 <= int(a[1]) - 1)):
        d=d+1
    if ((97 <= ord(a[0]) - 2)  & (8 >= int(a[1]) + 1)):
        d=d+1
    if ((97 <= ord(a[0]) - 2)  & (1 <= int(a[1]) - 1)):
        d=d+1
    if ((104 >= ord(a[0]) + 1)  & (8 >= int(a[1]) + 2)):
        d=d+1
    if ((104 >= ord(a[0]) + 1)  & (1 <= int(a[1]) - 2)):
        d=d+1
    if ((97 <= ord(a[0]) - 1)  & (8 >= int(a[1]) + 2)):
        d=d+1
    if ((97 <= ord(a[0]) - 1)  & (1 <= int(a[1]) - 2)):
        d=d+1
    c.append(d)
for i in range(len(c)):
    print(c[i])","0.0"
"bb8bf498-d02f-48f2-a15a-f8cc813a5c5f","r = input().split(' ')
t = input().split(' ')
y = input().split(' ')
u = [int(r[0])-int(y[0]), int(r[1])-int(t[1])]
print(*u)","0.0"
"c270a9c3-67af-4113-8e7d-a7a94792013d","k=int(input())
S=0
for i in range(k):
    S=0
    n, m = map(int, input().split())
    if m==1 and n==1:
        print('YES')
    else:
        for g in range(1, m+1):
            S+=g
    if S>n:
         print('NO')
    else:
        print('YES')","0.0"
"a4b90367-4dc9-4d5f-84d6-56245ea5afc4","k, m, n = map(int, input().split())
score = n // k if n % k == 0 else n // k + 1
print(score * 2 * m)","0.0"
"a4b90367-4dc9-4d5f-84d6-56245ea5afc4","k, m, n = map(int, input().split())
from math import *
t=ceil(n/k)
t=t*2*m
print(t)","0.0"
"a4b90367-4dc9-4d5f-84d6-56245ea5afc4","k, m, n = map(int, input().split())
x = 0
if k <= 0 or n <= 0 or m <= 0:
    print(0)
else:
    if k < n:
        c = n//k
        v = n/k
        if c < v:
            c += 1
        x = (m*2)*c
    else:
        x = (m*2*1)
    print(x)","0.0"
"fb76df8b-f50e-400b-aa83-29cd6b682372","n=int(input())
a=n-1
sum=a*3
print(sum)","0.0"
"008b5cbd-4257-4e11-a061-f19e550b6b3e","x1, x2, x3 = map(int, input().split())

array = [x1, x2, x3]

counter = 0

while True:
    counter += 1
    array1 = []
    array = sorted(array)
    for i in range(len(array) - 1):
        array1.append(abs(array[i] - array[i + 1]))

    if min(array1) in array:
        break
    else:
        array.append(min(array1))

print(counter + 1)","0.0"
"a4b90367-4dc9-4d5f-84d6-56245ea5afc4","k, m, n = map(int, input().split())
from math import ceil
t=ceil(n/k)
t=t*2*m
print(t)","0.0"
"a4b90367-4dc9-4d5f-84d6-56245ea5afc4","k, m, n = map(int, input().split())
from math import *
t=ceil(n/k)
t=t*2*m
print(t)","0.0"
"008b5cbd-4257-4e11-a061-f19e550b6b3e","x1, x2, x3 = map(int, input().split())

array = [x1, x2, x3]

a = len(array)
while True:

    array1 = []
    array = sorted(array)
    for i in range(len(array) - 1):
        array1.append(abs(array[i] - array[i + 1]))

    if min(array1) == 0:
        break
    else:
        array.append(min(array1))


print(len(array) - a + 1)","0.0"
"bb8bf498-d02f-48f2-a15a-f8cc813a5c5f","a=input().split(' ')
b=input().split(' ')
c=input().split(' ')
for i in range(2):
    a[i]=int(a[i])
    b[i]=int(b[i])
    c[i]=int(c[i])
ph=a[1]-b[1]
shr=c[1]-ph-b[1]
print(ph,shr)","0.0"
"a4b90367-4dc9-4d5f-84d6-56245ea5afc4","k, m, n =map(int, input().split())
if k>=n:
    c = m*2
elif k<n and n%k!=0:
    c = (n//k+1)*m*2
elif k<n and n%k==0:
    c = (n//k)*m*2
elif k==0 or m==0 or n==0:
    c = 0
print(c)","0.0"
"fb76df8b-f50e-400b-aa83-29cd6b682372","n=int(input())
if n==2:
    print(3)
else:
    print(3*(n-1))","0.0"
"c270a9c3-67af-4113-8e7d-a7a94792013d","n = int(input())
q = 1
for i in range(n):
    a,b = map(int,input().split())
    if ((b*(b-1))//2)<=a:
        print('YES')
    else:
        print('NO')","0.0"
"c6175ed3-a33c-4dbf-8f71-6ef2f9e31411","n=int(input())
a,b,c=map(int,input().split())
d,e,f=map(int,input().split())
q=((a*d)+(b*e)+(c*f))*(n+1)
print(q)","0.0"
"a4b90367-4dc9-4d5f-84d6-56245ea5afc4","k, m, n =map(int, input().split())
if k>=n:
    c = m*2*n
elif k<n and n%k!=0:
    c = (n//k+1)*m*2
elif k<n and n%k==0:
    c = (n//k)*m*2
elif k==0 or m==0 or n==0:
    c = 0
print(c)","0.0"
"bb8bf498-d02f-48f2-a15a-f8cc813a5c5f","a1, b1 = map(int, input().split())
a2, b2 = map(int, input().split())
a3, b3 = map(int, input().split())
c = a1 - a3
d = b1 - b2
print(c, d)","0.0"
"bb8bf498-d02f-48f2-a15a-f8cc813a5c5f","lst = [int(x) for x in input().split()]
lst2 = [int(x) for x in input().split()]
lst3 = [int(x) for x in input().split()]
print(lst[0]-lst3[0], lst[1]-lst2[1])","0.0"
"a4b90367-4dc9-4d5f-84d6-56245ea5afc4","k, m, n = map(int, input().split())
if n % k == 0:
    print(int(n/k*m*2))
else:
    print(int((n//k+1)*m*2))","0.0"
"c6175ed3-a33c-4dbf-8f71-6ef2f9e31411","n=int(input())
a,b,c = [int(i) for i in input().split()]
d,e,f = [int(i) for i in input().split()]
s=((a*d)+(b*e)+(c*f))*(n+1)
print(s)","0.0"
"4f8b54ae-eb36-4c4d-91da-256fc6302b91","a,b,c,d=[int(i) for i in input().split()]
for h in range(0,24):
    for m in range(0,60):
            m=(c*60+d-a*60-b)%60
            h=(c*60+d-a*60-b)//60
print(h,m)","0.0"
"d424177b-fd38-42f2-871e-63244e1e7a08","a=int(input())
count = 0
num = a
while count < 5:
	num += 1
	mx = 0
	mn = num + 1 
	for i in range(2,int(num // 2)+1):
		if num % i == 0:
			mx = max(mx,i)
			mn = min(mn,i)
	M = mn + mx
	if (M != num + 1) and (M % 10 == 8):
		print(num, M)
		count += 1","0.0"
"d424177b-fd38-42f2-871e-63244e1e7a08","a=int(input())
count = 0
num = a
while count < 5:
	num += 1
	mx = 0
	mn = num + 1 
	for i in range(2,int(num // 2)+1):
		if num % i == 0:
			mx = max(mx,i)
			mn = min(mn,i)
	M = mn + mx
	if (M != num + 1) and (M % 10 == 8):
		print(num, M)
		count += 1","0.0"
"a4b90367-4dc9-4d5f-84d6-56245ea5afc4","k, m, n = map(int, input().split())
from math import *
t=ceil(2*n/k)
t=t*m
print(t)","0.0"
"85b72f3a-191b-4d99-9207-6a82ed1e73c9","k,n=map(int,input().split())
x=0
a=[int(x)for x in input().split()]
for i in range(len(a)):
    x+=a[i]-k
    if x<0:
        x=0
print(x)","0.0"
"a4b90367-4dc9-4d5f-84d6-56245ea5afc4","import math
k, m, n = map(int, input().split())

a = n * 2

if n <= k:
    print(m * 2)
else:
    print(math.ceil(a / k) * m)","0.0"
"0e068baa-ec82-4085-84a0-c436b5832755","a=int(input())
maska=0
ch=0
sp=[]
for r in range(10):
    maska=int('1'+str(r)+'21394')
    if maska%a==0:
            ch=maska//a
            sp.append(maska)
            
    for i in range(10):
        maska=int('1'+str(r)+'213900'+str(i)+'4')
        if maska%a==0:
            ch=maska//a
            sp.append(maska)
            
    for i in range(100):
        maska=int('1'+str(r)+'21390'+str(i)+'4')
        if maska%a==0:
            ch=maska//a
            sp.append(maska)
            
    for i in range(1000):
        maska=int('1'+str(r)+'2139'+str(i)+'4')
        if maska%a==0:
            ch=maska//a
            sp.append(maska)
            
sp.sort()
for k in sp:
    print(k,k//a)","0.0"
"0e068baa-ec82-4085-84a0-c436b5832755","a=int(input())
for i in range(a,10**10,a):
    if i%10==4 and str(i)[0]=='1' and str(i)[2:6]=='2139':
        print(i,i//a)","0.0"
"c6175ed3-a33c-4dbf-8f71-6ef2f9e31411","n=int(input())
A,B,C=map(int,input().split())
D,E,F=map(int,input().split())
print((n+1)*(A*D+B*E+C*F))","0.0"
"c6175ed3-a33c-4dbf-8f71-6ef2f9e31411","n=int(input())
A,B,C=map(int,input().split())
D,E,F=map(int,input().split())
print((n+1)*(A*D+B*E+C*F))","0.0"
"fb76df8b-f50e-400b-aa83-29cd6b682372","n=int(input())
print((n-1)*3)","0.0"
"fb76df8b-f50e-400b-aa83-29cd6b682372","n=int(input())
print((n-1)*3)","0.0"
"a4b90367-4dc9-4d5f-84d6-56245ea5afc4","from math import *
k,m,n = map(int,input().split())
if k >= n:
    print(m*2*n)
else:
    print((ceil(n/k))*(m*2))","0.0"
"c270a9c3-67af-4113-8e7d-a7a94792013d","for i in range(int(input())):
    n, m = map(int, input().split())
    summ = 0
    if n < m:
        print(""NO"")
    else:
        for i in range(1, m + 1):
            summ += i
        if summ <= n:
            if n - summ < 0:
                print(""NO"")
            else:
                print(""YES"")","0.0"
"a4b90367-4dc9-4d5f-84d6-56245ea5afc4","from math import *
k,m,n = map(int,input().split())
if k >= n:
    print(m*2*n)
else:
    print((ceil(2*n/k))*m)","0.0"
"a4b90367-4dc9-4d5f-84d6-56245ea5afc4","from math import *
k,m,n = map(int,input().split())
if k >= n:
    print(m*2)
else:
    print((ceil(2*n/k))*m)","0.0"
"c270a9c3-67af-4113-8e7d-a7a94792013d","for i in range(int(input())):
    n, m = map(int, input().split()) # n - Ð°Ð¿ÐµÐ»ÑÑÐ¸Ð½Ñ m - Ð´ÑÑÐ·ÑÑ
    summ = 0
    if n < m:
        print(""NO"")
    else:
        for i in range(1, m):
            summ += i
        if summ <= n:
            if n - summ < 0:
                print(""NO"")
            else:
                print(""YES"")","0.0"
"c270a9c3-67af-4113-8e7d-a7a94792013d","for i in range(int(input())):
    n, m = map(int, input().split()) # n - Ð°Ð¿ÐµÐ»ÑÑÐ¸Ð½Ñ # m - Ð´ÑÑÐ·ÑÑ

    summ = 0

    if n < m:
        print(""NO"")
    else:
        for i in range(1, m):
            summ += i
        if summ <= n:
            print(""YES"")
        else:
            print(""NO"")","0.0"
"c270a9c3-67af-4113-8e7d-a7a94792013d","k = int(input())
s = 0
for i in range(k):
    n,m = map(int,input().split())
    if n > m:
        if n%m == 0:
            print('YES')
    else:
        for i in range(1,m):
            s+=i
        if s<=n:
            print('YES')
        else:
            print('NO')","0.0"
"c270a9c3-67af-4113-8e7d-a7a94792013d","k = int(input())
s = 0
for i in range(k):
    n,m = map(int,input().split())
    if n > m:
        if n%m == 0:
            print('YES')
    else:
        for i in range(m):
            s+=i
        if s<=n:
            print('YES')
        else:
            print('NO')","0.0"
"c270a9c3-67af-4113-8e7d-a7a94792013d","k = int(input())
s = 0
for i in range(k):
    n,m = map(int,input().split())
    if n > m:
        for i in range(1,m):
            s+=i
        if s<=n:
            print('YES')
        else:
            print('NO')
    else:
        print('NO')","0.0"
"e1980664-e539-436e-af4e-1dc094d9908f","for i in range(int(input())):
    a = input()

    counter = 0

    if ord(a[0]) == 97 or ord(a[0]) == 104:
        if int(a[1]) == 1 or int(a[1]) == 8:
            counter += 2
        elif int(a[1]) == 2 or int(a[1]) == 7:
            counter += 3
        else:
            counter += 4
    elif ord(a[0]) == 98 or ord(a[0]) == 103:
        if int(a[1]) == 1 or int(a[1]) == 8:
            counter += 3
        elif int(a[1]) == 2 or int(a[1]) == 7:
            counter += 4
        else:
            counter += 6
    else:
        if int(a[1]) == 1 or int(a[1]) == 8:
            counter += 4
        elif int(a[1]) == 2 or int(a[1]) == 7:
            counter += 6
        else:
            counter += 8
    print(counter)","0.0"
"c270a9c3-67af-4113-8e7d-a7a94792013d","k = int(input())
for i in range(k):
    s = 0
    n,m = map(int,input().split())
    if n > m:
        for i in range(1,m):
            s+=i
        if s<=n:
            print('YES')
        else:
            print('NO')
    else:
        print('NO')","0.0"
"bb8bf498-d02f-48f2-a15a-f8cc813a5c5f","a1, b1 = map(int, input().split())
a2, b2 = map(int, input().split())
a3, b3 = map(int, input().split())


print(a1 - a3, b1 - b2)","0.0"
"4f8b54ae-eb36-4c4d-91da-256fc6302b91","a,b,c,d=map(int,input().split())
r=((c*60+d)-(a*60+b))
print(r//60,r%60)","0.0"
"4f8b54ae-eb36-4c4d-91da-256fc6302b91","a,b,c,d=map(int,input().split())
r=((c*60+d)-(a*60+b))
print(r//60,r%60)","0.0"
"c6175ed3-a33c-4dbf-8f71-6ef2f9e31411","n = int(input())
A,B,C = map(int, input().split())
D,E,F = map(int, input().split())
x = 0
y = 0
z = 0
x = A * D
y = B * E
z = C * F
print((x + y + z)*n+(x + y + z))","0.0"
"4f8b54ae-eb36-4c4d-91da-256fc6302b91","a,b,c,d=map(int,input().split())
a=a*60+b
c=c*60+d
print((c-a)//60,(c-a)%60)","0.0"
"c270a9c3-67af-4113-8e7d-a7a94792013d","k=int(input())
s=0
for i in range(k):
    a,b=map(int,input().split())
    for n in range(1,b):
        s+=n
    if s<=a:
        print(""YES"")
    else:
        print(""NO"")","0.0"
"c270a9c3-67af-4113-8e7d-a7a94792013d","k=int(input())
s=0
for i in range(k):
    a,b=map(int,input().split())
    for n in range(1,b):
        s+=n
    if a>b and s<=a:
        print(""YES"")
    else:
        print(""NO"")","0.0"
"c270a9c3-67af-4113-8e7d-a7a94792013d","k=int(input())
s=0
for i in range(k):
    a,b=map(int,input().split())
    for n in range(1,b):
        s+=n
    if a>b and s<=a:
        print(""YES"")
    else:
        print(""NO"")","0.0"
"c270a9c3-67af-4113-8e7d-a7a94792013d","k=int(input())
s=0
for i in range(k):
    a,b=map(int,input().split())
    if a<=b :
        print(""NO"")
    else :
        for n in range(1,b):
            s+=n
        if s<=a:
            print(""YES"")
        else:
            print(""NO"")","0.0"
"c270a9c3-67af-4113-8e7d-a7a94792013d","k=int(input())
for i in range(k):
    a,b=map(int,input().split())
    if a<=b :
        print(""NO"")
    else :
        s=0
        for n in range(1,b):
            s+=n
        if s<=a:
            print(""YES"")
        else:
            print(""NO"")","0.0"
"c270a9c3-67af-4113-8e7d-a7a94792013d","k = int(input())
for i in range(k):
    n, m = map(int, input().split())
    if n < k:
        print(""NO"")
    else:
        x = 0
        for z in range(1, m):
            x += z
        if x <= n:
            print(""YES"")
        else:
            print(""NO"")","0.0"
"6671bab8-0e57-4f15-bc39-c933a2495f50","n=int,input()
a=[int(s) for s in input().split()]
if len(a)%2==0:
    n=len(a)
else:
    n=len(a)-1
for i in range(0,n-1,2):
    a[i],a[i+1]=a[i+1],a[i]
for i in range(len(a)):
    print(a[i],end=' ')","0.0"
"efe1a482-a2db-4971-a769-8b60a0beaf64","n=int(input())
a=list(map(int,input().split()))
k=0
for i in range(1,len(a)-1):
    if a[i]>a[i+1] and a[i]>a[i-1]:
        k=k+1
print(k)","0.0"
"1b689872-4b61-4615-a14e-24e7a0bcb1ba","n=int(input())
a=list(map(int,input().split()))
k=1
for i in range(1,len(a)):
    if a[i]!=a[i-1]:
        k=k+1
print(k)","0.0"
"521b1be0-3bd5-45f4-94f5-dad4b82ad375","n=int(input())
a=list(map(int,input().split()))
print(max(a))","0.0"
"7488edcd-5001-458e-955c-d220494cffde","n=int(input())
a=list(map(int,input().split()))
print(min(a))","0.0"
"85b72f3a-191b-4d99-9207-6a82ed1e73c9","k, n = map(int, input().split())
array = [int(s) for s in input().split()]

r = 0

for item in array:
    r += item
    r -= k
    if r < 0:
        r = 0
print(r)","0.0"
"a4b90367-4dc9-4d5f-84d6-56245ea5afc4","import math
k,m,n=map(int,input().split())
x=2*n
if x<=k:
    print(m*2)
else:
    print(math.ceil(x/k)*m)","0.0"
"c270a9c3-67af-4113-8e7d-a7a94792013d","k=int(input())
x=1
s=0
for i in range(k):
    n,m=map(int,input().split())
    if n<m:
        print(""NO"")
    else:
        for j in range(m):
            s+=x
            x+=1
        if s<n:
            print(""YES"")
        else:
            print(""NO"")","0.0"
"85b72f3a-191b-4d99-9207-6a82ed1e73c9","k, n = map(int,input().split())
a = [int(s) for s in input().split()]
s = 0
for i in range(len(a)):
    s += a[i] - k
    if s<0:
        s = 0
print(s)","0.0"
"c270a9c3-67af-4113-8e7d-a7a94792013d","k=int(input())
for i in range(k):
    s=0
    n,m=map(int,input().split())
    if n<=m:
        print(""NO"")
    else:
        for j in range(m):
            s+=j
        if s<=n:
            print(""YES"")
        else:
            print(""NO"")","0.0"
"c0ed6e9b-f602-4b3b-8aef-52dbb2485110","x=input()
a=[]
s=''
for i in range(len(x)):
    a.append(ord(x[i])-97)
for i in range(len(a)-1):
    while(a[i+1]<a[i]):
        a[i+1]+=26
a=a[::-1]
for i in range(len(a)-1):
    a[i]-=a[i+1]
a=a[::-1]
if a[0]>4:
    a[0]-=5
else:
    a[0]+=21
for i in range(len(a)):
    s+=str(chr(a[i]+97))
print(s)","0.0"
"c0ed6e9b-f602-4b3b-8aef-52dbb2485110","string = input()

arr = []
arr1 = []

for i in range(len(string)):
    arr.append(string[i])

string1 = ''

for i in range(len(arr)):
    arr[i] = ord(arr[i])
    if i == 0:
        if arr[i] - 97 > 4:
            arr[i] -= 5
        else:
            arr[i] += 21
    else:
        if arr[i] - 97 < 26:
            while arr[i] < arr[i - 1]:
                arr[i] += 26


arr[0] += 5
for i in range(len(arr)):
    arr[i] -= 97


for i in range(len(arr)):
    arr1.append(arr[i])

for i in range(1, len(arr)):
    arr[i] -= arr1[i - 1]

string1 += chr(arr[0] + 97 - 5) 

for i in range(1, len(arr)):
    string1 += chr(arr[i] + 97)
    

print(string1)","0.0"
"e1980664-e539-436e-af4e-1dc094d9908f","n = int(input())
m2 = ['a1','h1','a8','h8']
m3 = ['a2','a7','b1','b8','g1','g8','h2','h7']
m4 = ['a3','a4','a5','a6','b2','b7','c1','c8','d1','d8','e1','e8','f1','f8','g2','g7','h3','h4','h5','h6']
m6 = ['b3','b4','b5','b6','c2','c7','d2','d7','e2','e7','f2','f7','g3','g4','g5','g6']
m8 = ['c3','c4','c5','c6','d3','d4','d5','d6','e3','e4','e5','e6','f3','f4','f5','f6']
for i in range(n):
    a = input()
    if a in m2:
        print(2)
    elif a in m3:
        print(3)
    elif a in m4:
        print(4)
    elif a in m6:
        print(6)
    else:
        print(8)","0.0"
"e1980664-e539-436e-af4e-1dc094d9908f","n=int(input())
k2=[""a1"",""a8"",""h1"",""h8""]
k3=[""a2"",""a7"",""h2"",""h7"",""b1"",""b8"",""g1"",""g8""]
k4=[""a3"",""a4"",""a5"",""a6"",""h3"",""h4"",""h5"",""h6"",""b2"",""b7"",""c1"",""c8"",""d1"",""d8"",""e1"",""e8"",""f1"",""f8"",""g2"",""g7""]
k6=[""b3"",""b4"",""b5"",""b6"",""g3"",""g4"",""g5"",""g6"",""c2"",""c7"",""d2"",""d7"",""e2"",""e7"",""f2"",""f7""]
k8=[""c3"",""c4"",""c5"",""c6"",""d3"",""d4"",""d5"",""d6"",""e3"",""e4"",""e5"",""e6"",""f3"",""f4"",""f5"",""f6""]
for i in range(n):
    x=input()
    if x in k2:
        print(""2"")
    elif x in k3:
        print(""3"")
    elif x in k4:
        print(""4"")
    elif x in k6:
        print(""6"")
    elif x in k8:
        print(""8"")","0.0"
"a4b90367-4dc9-4d5f-84d6-56245ea5afc4","k, m, n= map(int, input(). split())
if n<=k:
    q=m*2
elif (2*n)%k==0:
    q=((2*n)//k)*m
else:
    q=(((2*n)//k)+1)*m
print(q)","0.0"
"a4b90367-4dc9-4d5f-84d6-56245ea5afc4","k,m,n=map(int,input().split())
if n<=k:
    print(m*2)
elif (2*n)%k==0:
    print(n//k*2*m)
else:
    print(((2*n)//k+1)*m)","0.0"
"a4b90367-4dc9-4d5f-84d6-56245ea5afc4","k, m, n= map(int, input(). split())
if n<=k:
    q=m*2
elif 2*n%k==0:
    q=2*n//k*m
else:
    q=(2*n//k+1)*m
print(q)","0.0"
"c270a9c3-67af-4113-8e7d-a7a94792013d","k=int(input())
for i in range(k):
    n,m=map(int,input().split())
    s=(1+m)//2*m
    if s>n:
        print(""NO"")
    else:
        print(""YES"")","0.0"
"c270a9c3-67af-4113-8e7d-a7a94792013d","k=int(input())
for i in range(k):
    n,m=map(int,input().split())
    s=(1+m)//2*m
    if s>n:
        print(""NO"")
    else:
        print(""YES"")","0.0"
"c270a9c3-67af-4113-8e7d-a7a94792013d","k=int(input())
for i in range(k):
    n, m=map(int, input(). split())
    s=((1+m)//2)*m
    if s>n:
        print('NO')
    else:
        print('YES')","0.0"
"bb8bf498-d02f-48f2-a15a-f8cc813a5c5f","a1,b1=map(int,input().split())
a2,b2=map(int,input().split())
a3,b3=map(int,input().split())
c=b1-b2
d=a1-a3
print(c,d)","0.0"
"bb8bf498-d02f-48f2-a15a-f8cc813a5c5f","a,b=map(int,input().split())
y,i=map(int,input().split())
o,k=map(int,input().split())
print(a-o, b-i)","0.0"
"bb8bf498-d02f-48f2-a15a-f8cc813a5c5f","a1,b1=map(int,input().split())
a2,b2=map(int,input().split())
a3,b3=map(int,input().split())
c=b1-b2
d=a1-a3
print(d,c)","0.0"
"a4b90367-4dc9-4d5f-84d6-56245ea5afc4","k,m,n = map(int, input().split())
x = 0
if k >=n:
    print(m*2)
else:
    x = n * 2 // k
    if n * 2 % k != 0:
        x += 1
    print(m*x)","0.0"
"c270a9c3-67af-4113-8e7d-a7a94792013d","k = int(input())
for i in range(k):
    n,m = map(int, input().split())
    s = m * (m-1) // 2
    if (n-s)<m:
        print('NO')
    else:
        print('YES')","0.0"
"dd32efc4-7f8d-4180-b85e-a2c76a64a9f3","n,m = map(int,input().split())
p = 0
x = [0] * (n + 2)
for i in range(n + 2):
    x[i] = [0] * (m + 2)
for i in range (1, n+1):
    x[i] = [0]+list(map(int,input().split())) + [0]
for i in range (1, n + 1):
    for j in range (1, m + 1):
        k=0
        if x[i][j]>x[i-1][j]:
            k+=1
        if x[i][j]>x[i+1][j]:
            k+=1
        if x[i][j]>x[i][j -1]:
            k+=1
        if x[i][j]>x[i][j+1]:
            k+=1
        if k == 4:
            p += 1

print(p)","0.0"
"b1cc81ce-a1cb-4d57-9438-fb792a698d9b","x=int(input())


def ko(x):
    sp=[]
    for t in range(1,int(x**0.5)+1):
        if x%t==0:
            sp.append(t)
            if t!=x//t:
                sp.append(x//t)
    sp.sort()
    sp.reverse()
    spf=[]
    
    spf=sp[1:3]
    
    return spf
k=0


for i in range(x,x*10):
    spd=ko(i)
    if k==5:
        break
    if len(spd)==2:
        
        if sum(spd)<10000:
            print(i,sum(spd))
            k+=1","0.0"
"b1cc81ce-a1cb-4d57-9438-fb792a698d9b","x=int(input())


def ko(x):
    sp=[]
    for t in range(1,int(x**0.5)+1):
        if x%t==0:
            sp.append(t)
            if t!=x//t:
                sp.append(x//t)
    sp.sort()
    sp.reverse()
    spf=[]
    
    spf=sp[1:3]
    
    return spf
k=0


for i in range(x+1,x*10):
    spd=ko(i)
    if k==5:
        break
    if len(spd)==2:
        
        if sum(spd)<10000:
            print(i,sum(spd))
            k+=1","0.0"
"b1cc81ce-a1cb-4d57-9438-fb792a698d9b","a=int(input())
spo=[]
k=0
def kd(x):
    sp=[]
    for y in range(1,int(x**0.5)+1):
        if x%y==0:
            sp.append(y)
            if x//y!=y:
                sp.append(x//y)
    sp.sort()
    sp.reverse()
    return(sp)
for i in range(a+1,a*10):
    spo=kd(i)
    if k==5:
        break
    if len(spo)>3 and (spo[1]+spo[2])<10000:
        k+=1
        print(i,spo[1]+spo[2])","0.0"
"b1cc81ce-a1cb-4d57-9438-fb792a698d9b","a=int(input())
k=0
def kd(x):
    sp=[]
    for t in range(1,int(x**0.5)+1):
        if x%t==0:
            sp.append(t)
            if x//t!=t:
                sp.append(x//t)
    sp.sort()
    sp.reverse()
    return(sp)
spd=[]
for i in range(a+1,a*10):
    spd=kd(i)
    if k==5:
        break
    if len(spd)>3 and spd[1]+spd[2]<10000:
        print(i,spd[1]+spd[2])
        k+=1","0.0"
"d424177b-fd38-42f2-871e-63244e1e7a08","x=int(input())


def ko(x):
    sp=[]
    for t in range(1,int(x**0.5)+1):
        if x%t==0:
            sp.append(t)
            if t!=x//t:
                sp.append(x//t)
    sp.sort()
    
    
    return sp
k=0


for i in range(x+1,x*10):
    spd=ko(i)
    if k==5:
        break
    if len(spd)>3 and (spd[1]+spd[-2])%10==8:
        print(i,spd[1]+spd[-2])
        k+=1","0.0"
"d424177b-fd38-42f2-871e-63244e1e7a08","a=int(input())
k=0
def kd(x):
    sp=[]
    for t in range(2,int(x**0.5)+1):
        if x%t==0:
            sp.append(t)
            if x//t!=t:
                sp.append(x//t)
    sp.sort()
    sp.reverse()
    return(sp)
spd=[]
for i in range(a+1,a*10):
    spd=kd(i)
    if k==5:
        break
    if len(spd)>=2 and (spd[0]+spd[-1])%10==8:
        print(i,spd[0]+spd[-1])
        k+=1","0.0"
"d424177b-fd38-42f2-871e-63244e1e7a08","a=int(input())
spo=[]
k=0
def kd(x):
    sp=[]
    for y in range(2,int(x**0.5)+1):
        if x%y==0:
            sp.append(y)
            if x//y!=y:
                sp.append(x//y)
    sp.sort()
    sp.reverse()
    return(sp)
for i in range(a+1,a*10):
    spo=kd(i)
    if k==5:
        break
    if len(spo)>=2 and (spo[0]+spo[-1])%10==8:
        k+=1
        print(i,spo[0]+spo[-1])","0.0"
"85b72f3a-191b-4d99-9207-6a82ed1e73c9","k, n = map(int, input().split())
array = [int(s) for s in input().split()]

r = 0

for item in array:
    r += item
    r -= k
    if r < 0:
        r = 0
print(r)","0.0"
"85b72f3a-191b-4d99-9207-6a82ed1e73c9","k, n=map(int, input().split())
a=[int(p) for p in input().split()]
S=0
a[0]-=k
if a[0]<0:
    a[0]=0
for i in range(1, n):
    a[i]+=a[i-1]-k
    if a[i]<0:
        a[i]=0
    S=a[i]
print(S)","0.0"
"b1cc81ce-a1cb-4d57-9438-fb792a698d9b","a=int(input())
def f(n):
    sp=[]
    for t in range(1,int(n**0.5)+1):
        if n%t==0:
            sp.append(t)
            if n//t!=t:
                sp.append(n//t)
    sp.sort()
    sp.reverse()

    
    return sp[1:3]


k=0
for i in range(a+1,10**10):
    spf=f(i)
    if len(spf)>=2:
        if sum(spf)<10000:
          print(i,sum(spf))
          k+=1
    if k==5:
        break","0.0"
"f219f00f-7aa0-4548-9766-13c878269d42","a,b=map(int,input().split())
sp=[]
for m in range(0,100,2):
    for n in range(1,100,2):
        if 2**m*3**n>=a and 2**m*3**n<=b:
            sp.append(2**m*3**n)
sp.sort()
for i in sp:
    print(i)","0.0"
"f219f00f-7aa0-4548-9766-13c878269d42","a,b=map(int,input().split())
sp=[]
for m in range(0,100,2):
    for n in range(1,100,2):
        if 2**m*3**n>=a and 2**m*3**n<=b:
            sp.append(2**m*3**n)
sp.sort()
for f in sp:
    print(f)","0.0"
"f219f00f-7aa0-4548-9766-13c878269d42","a,b=map(int,input().split())

sp=[]
for m in range(0,30,2):
    for n in range(1,30,2):
        if a<=2**m*3**n and a<2**m*3**n<=b :
            sp.append(2**m*3**n)
sp.sort()
for i in sp:
    print(i)","0.0"
"f219f00f-7aa0-4548-9766-13c878269d42","a,b=map(int,input().split())
sp=[]
for m in range(0,30,2):
    for n in range(1,30,2):
        if 2**m*3**n>=a and 2**m*3**n<=b:
            sp.append(2**m*3**n)
sp.sort()
for i in sp:
    print(i)","0.0"
"f219f00f-7aa0-4548-9766-13c878269d42","a,b=map(int,input().split())
sp=[]
for m in range(0,30,2):
    for n in range(1,30,2):
        if 2**m*3**n>=a and 2**m*3**n<=b:
            sp.append(2**m*3**n)
sp.sort()
for f in sp:
    print(f)","0.0"
"f219f00f-7aa0-4548-9766-13c878269d42","a,b=map(int,input().split())
sp=[]
for m in range(0,30,2):
    for n in range(1,30,2):
        if a<=((2**m)*(3**n))<=b:
            sp.append((2**m)*(3**n))
sp.sort()
for i in sp:
    print(i)","0.0"
"150f8ae8-1577-4cb8-98b7-775b5ddba6c1","a,b=map(int,input().split())


def ko(i,m):
    sp=[]
    for t in range(1,int(max(i,m))):
        if i%t==0 and m%t==0:
            sp.append(t)
        if t>min(i,m):
            return sp
    return sp
print(max(ko(a,b)))","0.0"
"70c96088-3bf6-4189-985e-a2d564337989","a,b=map(int,input().split())
sp=[]
for i in range(1,a+1):
    fi=int(input())
    sp.append(fi)
for n in sp:
    for i in sp:
        print(n,i)","0.0"
"70c96088-3bf6-4189-985e-a2d564337989","a,b=map(int,input().split())
sp=[]
for i in range(1,a+1):
    fi=int(input())
    sp.append(fi)
if b==2:
    
    for n in sp:
        for i in sp:
            print(n,i)

if b==3:
    for n in sp:
        for i in sp:
            for t in sp:
                print(n,i,t)","0.0"
"70c96088-3bf6-4189-985e-a2d564337989","a,b=map(int,input().split())
sp=[]
for i in range(1,a+1):
    fi=int(input())
    sp.append(fi)
if b==2:
    
    for n in sp:
        for i in sp:
            print(n,i)

if b==3:
    for n in sp:
        for i in sp:
            for t in sp:
                print(n,i,t)
if b==1:
    for t in sp:
        print(t)","0.0"
"ab48f655-0a9b-4b20-8bbe-fd806719bb53","a,b=map(int,input().split())
sp=[]
for i in range(1,a+1):
    fi=int(input())
    sp.append(fi)
if b==2:
    
    for n in sp:
        for i in sp:
            if n!=i:
                print(n,i)","0.0"
"94581bd4-2060-44f1-ad09-4c18917d4f17","s=input()
k=2
m=2
for i in range(0,len(s)-2):
    
    if s[i]!=s[i+1] and s[i+1]!=s[i+2]:
        k+=1
    else:
        m=max(m,k)
        k=2
               
print(m)","0.0"
"94581bd4-2060-44f1-ad09-4c18917d4f17","s=input()
k=2
m=1
for i in range(0,len(s)-2):
    
    if s[i]!=s[i+1] and s[i+1]!=s[i+2]:
        k+=1
    else:
        m=max(m,k)
        k=2
               
print(m)","0.0"
"94581bd4-2060-44f1-ad09-4c18917d4f17","s=input()
k=2
m=1
for i in range(0,len(s)-2):
    
    if s[i]!=s[i+1] and s[i+1]!=s[i+2]:
        k+=1
        m=max(m,k)
    else:
        
        k=2
               
print(m)","0.0"
"94581bd4-2060-44f1-ad09-4c18917d4f17","s=input()
k=2
m=1
for i in range(0,len(s)-2):
    if s[i]!=s[i+1]:
        m=max(m,k)
    if s[i+1]!=s[i+2]:
        m=max(m,k)
    if s[i]!=s[i+1] and s[i+1]!=s[i+2]:
        
        k+=1
        m=max(m,k)
    else:
        
        k=2
               
print(m)","0.0"
"40d78243-79a0-4ec7-8ff5-47f803a55e0b","s=input()
k=0
m=0
for i in range(0,len(s)-2):
    
    if s[i] in 'BCD' and s[i+1] in 'BDE' and s[i+2] in 'BCE' and s[i]!=s[i+1] and s[i+1]!=s[i+2]:
        k+=1
        
    
               
print(k)","0.0"
"c4a7e827-63de-424a-aec0-aea743d3b5f2","k, n = map(int, input().split())
x = (n - 1) // k + 1
print(x, (n - 1) % k + 1)","0.0"
"6d204921-764f-452c-a01d-578e51695a98","t = int(input())
a = [0] * 3
for i in range(t):
    a = list(map(int, input().split()))
    a.sort()
    if a[0] + a[1] == a[2]:
        print('YES')
    else:
        print('NO')","0.0"
"15f19bc8-7be3-4a44-a7b1-fc7505badaed","t = int(input())
s1 = 'Pp'
s2 = 'Yy'
s3 = 'Tt'
s4 = 'Hh'
s5 = 'Oo'
s6 = 'Nn'
for i in range(t):
    s = input()
    if s[0] in s1 and s[1] in s2 and s[2] in s3 and s[3] in s4 and s[4] in s5 and s[5] in s6:
        print('YES')
    else:
        print('NO')","0.0"
"fa181552-a073-4c25-928c-1a5c48505a6b","n = int(input())
a = list(map(int, input().split()))
# a.sort()
k = 1
for i in range(n - 1):
    if a[i] == a[i+1]:
        k += 1
    else:
        print(k, a[i], end = ' ')
        k = 1
print(k, a[-1])","0.0"
"b962261e-7638-421f-9ea1-ecd77520e209","n = int(input())
t = 4
for x in range(1, int(n ** 0.5) + 1):
    for y in range(1, int(n ** 0.5) + 1):
        if ((n - x ** 2 - y ** 2) > 0) and (((n - x ** 2 - y ** 2) ** 0.5) == int((n - x ** 2 - y ** 2) ** 0.5)):
            t = 3
for x in range(1, int(n ** 0.5) + 1):
    if ((n - x ** 2) > 0) and (((n - x ** 2) ** 0.5) == int((n - x ** 2)** 0.5)):
        t = 2
if int(n ** 0.5) == n ** 0.5:
    t = 1     
print(t)","0.0"
"13bcf8ad-b139-4bf6-8b16-b99b7cccf65d","t =  int(input())
for i in range(t):
    n, k = map(int, input().split())
    p = 0
    while n > 0:
        if n % k == 0:
            n //= k
            p += 1
        else:
            q = n % k
            p += q
            n -= q
    print(p)","0.0"
"9e91eca3-2074-49fc-a46e-35630d7d0e53","n = int(input())
s1 = 0
s2 = 0
a = list(map(int, input().split()))
for i in range(n):
  if a[i] > 0:
    s1 += a[i]
  else:
    s2 += a[i]
print(s1 + abs(s2))","0.0"
"0024e95a-bf71-4dac-a246-626b5821e403","n1, p1, m1, t1, s1 = map(int,input().split())
n2, p2, m2, t2, s2 = map(int,input().split())
x = (p1 + m1 * t1 + s1) * n1
y = (p2 + m2 * t2 + s2) * n2
if x < y:
    print('Python', x)
elif y < x:
    print('Pascal', y)
else:
    print('Draw', x)","0.0"
"36d58b20-7fe1-452b-ac10-e1ed680aa6b3","n, k, t, c , d, p, nl, np = map(int, input().split())
x = min(k * t // nl, p // np, c * d)
print(x, (x - 1) % n + 1)
#print(x // n)","0.0"
"4e22855c-d210-4e19-8715-87f6cf4bba7c","a,b=map(int,input().split())
for i in range(a, b + 1):
    if i % 2 == 0:
        count = 1
        sqrtI = round(i ** 0.5)
        for j in range(2, sqrtI + 1):
            if i % j == 0:
                if j % 2 == 0:
                    count += 1
                k = i // j
                if k % 2 == 0:
                    count += 1
                    if j == k:
                        count -= 1
                if count > 3:
                    break
        if count == 3:
            print(i)","0.0"
"4e22855c-d210-4e19-8715-87f6cf4bba7c","a,b=map(int,input().split())
for i in range(a, b + 1):
    if i % 2 == 0:
        count = 1
        sqrtI = round(i ** 0.5)
        for j in range(2, sqrtI + 1):
            if i % j == 0:
                if j % 2 == 0:
                    count += 1
                k = i // j
                if k % 2 == 0:
                    count += 1
                    if j == k:
                        count -= 1
                if count > 3:
                    break
        if count == 3:
            print(i)","0.0"
"4e22855c-d210-4e19-8715-87f6cf4bba7c","a,b=map(int,input().split())
for i in range(a, b + 1):
    if i % 2 == 0:
        count = 1
        sqrtI = round(i ** 0.5)
        for j in range(2, sqrtI + 1):
            if i % j == 0:
                if j % 2 == 0:
                    count += 1
                k = i // j
                if k % 2 == 0:
                    count += 1
                    if j == k:
                        count -= 1
                if count > 3:
                    break
        if count == 3:
            print(i)","0.0"
"4e22855c-d210-4e19-8715-87f6cf4bba7c","a,b=map(int,input().split())
for i in range(a, b + 1):
    if i % 2 == 0:
        count = 1
        sqrtI = round(i ** 0.5)
        for j in range(2, sqrtI + 1):
            if i % j == 0:
                if j % 2 == 0:
                    count += 1
                k = i // j
                if k % 2 == 0:
                    count += 1
                    if j == k:
                        count -= 1
                if count > 3:
                    break
        if count == 3:
            print(i)","0.0"
"4e22855c-d210-4e19-8715-87f6cf4bba7c","a,b=map(int,input().split())
for i in range(a, b + 1):
    if i % 2 == 0:
        count = 1
        sqrtI = round(i ** 0.5)
        for j in range(2, sqrtI + 1):
            if i % j == 0:
                if j % 2 == 0:
                    count += 1
                k = i // j
                if k % 2 == 0:
                    count += 1
                    if j == k:
                        count -= 1
                if count > 3:
                    break
        if count == 3:
            print(i)","0.0"
"aea68e26-3891-4316-b0ca-0091e0125d96","count = 0
i = int(input())+1
while count < 5:
    halfI = i // 2
    for j in range(2, halfI + 1):
        if i % j == 0 and j % 10 == 7 and j != 7:
            print(i, j)
            count += 1
            break
    i += 1","0.0"
"aea68e26-3891-4316-b0ca-0091e0125d96","count = 0
i = int(input())+1
while count < 5:
    halfI = i // 2
    for j in range(2, halfI + 1):
        if i % j == 0 and j % 10 == 7 and j != 7:
            print(i, j)
            count += 1
            break
    i += 1","0.0"
"7da74132-0efc-4c1f-9755-f247bbba2ab9","import math
k = int(input())+1
c = 0
while True:
    s = []
    for i in range(math.ceil(k ** 0.5) + 1, 1, -1):
        if k % i == 0:
            s.append(i)
            s.append(k / i)
    if len(s) >= 5:
        print(k,int(sorted(s)[-5]))
        c += 1
        if c == 5:
            break
    k += 1","0.0"
"91935175-de25-4b6f-bbaf-d836a8e01406","h=int(input())
for a in range(10):
    for b in range(10):
        x = 12*10**5 + a*10**4 + b*10**3 + 156
        # Ð¼Ð¾Ð¶Ð½Ð¾ Ð·Ð°Ð¼ÐµÐ½Ð¸ÑÑ Ð½Ð°
        # x = int(f'12{a}{b}156')
        if x % h == 0:
            print(x, x // h)
for a in range(10):
    for b in range(10):
        for c in range(10):
            x = 12*10**6 + a*10**5 + b*10**4 + 1*1000 + c*100 + 56
            # Ð¼Ð¾Ð¶Ð½Ð¾ Ð·Ð°Ð¼ÐµÐ½Ð¸ÑÑ Ð½Ð°
            # x = int(f'12{a}{b}1{c}56')
            if x % h == 0:
                print(x, x // h)","0.0"
"91935175-de25-4b6f-bbaf-d836a8e01406","from fnmatch import *
a=int(input())
for x in range(0, 10**8, a): # ÐÐµÑÐµÐ±ÐµÑÐ°ÐµÐ¼ Ð²ÑÐµ ÑÐ¸ÑÐ»Ð° Ð¾Ñ 0 Ñ ÑÐ°Ð³Ð¾Ð¼ 273, Ð±ÑÐ´ÑÑ Ð¿Ð¾Ð»ÑÑÐµÐ½Ð½Ñ ÑÐ¸ÑÐ»Ð° ÐºÐ°ÑÑÐ½ÑÐµ 317
    if fnmatch(str(x), '12??1*56'):# ÐÑÐ¾Ð²ÐµÑÑÐµÐ¼ Ð¿Ð¾Ð»ÑÑÐµÐ½Ð½Ð¾Ðµ ÑÐ¸ÑÐ»Ð¾ ÑÐ¾Ð¾ÑÐ²ÐµÑÑÑÐ²Ð¸Ñ Ð·Ð°Ð´Ð°Ð½Ð¸Ñ
        print(x, x // a)","0.0"
"91935175-de25-4b6f-bbaf-d836a8e01406","from fnmatch import *
a=int(input())
for x in range(0, 10**8, a): # ÐÐµÑÐµÐ±ÐµÑÐ°ÐµÐ¼ Ð²ÑÐµ ÑÐ¸ÑÐ»Ð° Ð¾Ñ 0 Ñ ÑÐ°Ð³Ð¾Ð¼ 273, Ð±ÑÐ´ÑÑ Ð¿Ð¾Ð»ÑÑÐµÐ½Ð½Ñ ÑÐ¸ÑÐ»Ð° ÐºÐ°ÑÑÐ½ÑÐµ 317
    if fnmatch(str(x), '12??1*56'):# ÐÑÐ¾Ð²ÐµÑÑÐµÐ¼ Ð¿Ð¾Ð»ÑÑÐµÐ½Ð½Ð¾Ðµ ÑÐ¸ÑÐ»Ð¾ ÑÐ¾Ð¾ÑÐ²ÐµÑÑÑÐ²Ð¸Ñ Ð·Ð°Ð´Ð°Ð½Ð¸Ñ
        print(x, x // a)","0.0"
"dc7df795-44d0-4efc-a04b-f0701610200f","aa,bb=map(int,input().split())
for j in range(aa, bb + 1):
    i = j
    m = 0
    n = 0
    while i % 3 == 0:
        i //= 3
        m += 1
    if m % 2 == 0:
        while i % 2 == 0:
            i //= 2
            n += 1
    if n % 2 != 0 and i == 1:
        print(j)","0.0"
"dc7df795-44d0-4efc-a04b-f0701610200f","aa,bb=map(int,input().split())
a=[]
for m in range(1,50,2):
    for n in range(0,50,2):
        x = 2**m * 3**n
        if aa<= x <=bb:
            a.append(x)
a=sorted(a)
for m in a:
    print(m)","0.0"
"c4a7e827-63de-424a-aec0-aea743d3b5f2","k, n = map(int, input().split())
x = (n - 1) // k + 1
print(x, (n - 1) % k + 1)","0.0"
"6d204921-764f-452c-a01d-578e51695a98","t = int(input())
a = [0] * 3
for i in range(t):
    a = list(map(int, input().split()))
    a.sort()
    if a[0] + a[1] == a[2]:
        print('YES')
    else:
        print('NO')","0.0"
"15f19bc8-7be3-4a44-a7b1-fc7505badaed","t = int(input())
a = ['Yes', 'YES', 'YEs', 'yes', 'yES', 'YeS', 'yEs', 'yeS']
for i in range(t):
    s = input()
    if (s[0]=='P' or s[0]=='p') and (s[1]=='Y' or s[1]=='y') and (s[2]=='T' or s[2]=='t') and (s[3]=='H' or s[3]=='h') and (s[4]=='O' or s[4]=='o') and (s[5]=='N' or s[5]=='n'):
        print('YES')
    else:
        print('NO')","0.0"
"598ac092-b788-4134-867c-8e307d515e67","n = int(input())
a = []
m = []
p = []
mx = 0
for i in range(n):
    a.append(list(map(int, input().split())))
    m.append(a[i].pop(0))
    x = max(a[i])
    p.append(x)
    if x > mx:
        mx = x
        y = i
s = 0
for i in range(n):
    if i != y:
        s += m[i] * (mx - p[i])
print(s)","0.0"
"36d58b20-7fe1-452b-ac10-e1ed680aa6b3","n, k, l, c , d, p, nl, np = map(int, input().split())
x = min(k * l // nl, p // np, c * d)

if (x % n)!=0:
    print(x, x % n)
else:
    print(x, n)","0.0"
"0024e95a-bf71-4dac-a246-626b5821e403","n1, p1, m1, t1, s1 = map(int,input().split())
n2, p2, m2, t2, s2 = map(int,input().split())
x = n1*(p1 + m1 * t1+s1)
y = n2*(p2 + m2 * t2+s2)
if x < y:
	print(""Python"",x)
elif x>y:
	print(""Pascal"",y)
else:
	print(""Draw"",x)","0.0"
"fa181552-a073-4c25-928c-1a5c48505a6b","n = int(input())
a = list(map(int, input().split()))
# a.sort()
k = 1
for i in range(n - 1):
    if a[i] == a[i+1]:
        k += 1
    else:
        print(k, a[i], end = ' ')
        k = 1
print(k, a[-1])","0.0"
"b962261e-7638-421f-9ea1-ecd77520e209","n = int(input())
t = 4
for x in range(1, int(n ** 0.5) + 1):
    for y in range(1, int(n ** 0.5) + 1):
        if ((n - x ** 2 - y ** 2) > 0) and (((n - x ** 2 - y ** 2) ** 0.5) == int((n - x ** 2 - y ** 2) ** 0.5)):
            t = 3
for x in range(1, int(n ** 0.5) + 1):
    if ((n - x ** 2) > 0) and (((n - x ** 2) ** 0.5) == int((n - x ** 2)** 0.5)):
        t = 2
if int(n ** 0.5) == n ** 0.5:
    t = 1     
print(t)","0.0"
"13bcf8ad-b139-4bf6-8b16-b99b7cccf65d","t =  int(input())
for i in range(t):
    n, k = map(int, input().split())
    p = 0
    while n > 0:
        if n % k == 0:
            n //= k
            p += 1
        else:
            q = n % k
            p += q
            n -= q
    print(p)","0.0"
"9e91eca3-2074-49fc-a46e-35630d7d0e53","n = int(input())
s1 = 0
s2 = 0
a = list(map(int, input().split()))
for i in range(n):
  if a[i] > 0:
    s1 += a[i]
  else:
    s2 += a[i]
print(s1 + abs(s2))","0.0"
"598ac092-b788-4134-867c-8e307d515e67","n = int(input())
a = []
m = []
p = []
mx = 0
for i in range(n):
    a.append(list(map(int, input().split())))
    m.append(a[i].pop(0))
    x = max(a[i])
    p.append(x)
    if x > mx:
        mx = x
        y = i
s = 0
for i in range(n):
    if i != y:
        s += m[i] * (mx - p[i])
print(s)","0.0"
"5986f14f-59c5-428e-84aa-553175c8bdb9","a, b= map(int, input(). split())
n=int(input())
s=a*b
if s//9>=n:
    print('NO')
    print('0')
else:
    print('YES')
    print(n-(s//9))","0.0"
"5986f14f-59c5-428e-84aa-553175c8bdb9","a,b=map(int,input().split())
n=int(input())
if (a*b)//9 < n :
    print(""YES"")
    print (n -((a*b)//9))
else:
    print(""NO"")
    print(0)","0.0"
"5986f14f-59c5-428e-84aa-553175c8bdb9","a,b=map(int,input().split())
n=int(input())
if a*b>=n*9:
    print(""NO"")
    print(0)
else:
    k=n-a*b//9
    print(""YES"")
    print(k)","0.0"
"5986f14f-59c5-428e-84aa-553175c8bdb9","a,b=map(int,input().split())
n=int(input())
if a*b>=n*9:
    print(""NO"")
    print(0)
else:
    print(""YES"")
    print(n-(a*b)//9)","0.0"
"43690a23-0ff2-4f9b-8410-ec7917ae05e3","n=int(input())
y=list(map(int, input().split()))
k=0
m=min(y)
for i in range(n):
    k=k+(y[i]-m)
print(k)","0.0"
"43690a23-0ff2-4f9b-8410-ec7917ae05e3","n=int(input())
a=list(map(int,input().split()))
m=min(a)
s=0
for i in range (len(a)):
    s=s+(a[i]-m)
print(s)","0.0"
"43690a23-0ff2-4f9b-8410-ec7917ae05e3","n=int(input())
a=list(map(int,input().split()))
y=min(a)
p=0
for i in range (n):
       u=a[i]-y
       p=u+p
print(p)","0.0"
"43690a23-0ff2-4f9b-8410-ec7917ae05e3","n=int(input())
a=list(map(int,input().split()))
m=min(a)
k=0
for i in range(n):
    k=k+(a[i]-m)
print(k)","0.0"
"ae532d4a-9564-46c8-a30b-9f1fe7f95bf9","s1,s2,s3=map(int,input().split())
n=int(input())
a=()
if n==3:
    t1=input()
    t2=input()
    t3=input()
    print(s1*s2*s3)
if n==2:
    t1=input()
    t2=input()
    if t1==""sausage"":
        a=s1
    if t1==""cheese"":
        a=s2
    if t1==""ketchup"":
        a=s3
    if t2==b:
        print(a*b)
if n==1:
    t1=input()
    print(t1)","0.0"
"ae532d4a-9564-46c8-a30b-9f1fe7f95bf9","s1,s2,s3=map(int,input().split())
n=int(input())
if n==3:
    t1=input()
    t2=input()
    t3=input()
    print(s1*s2*s3)
if n==2:
    t1=input()
    t2=input()
    if t1==""sausage"":
        a=s1
    if t1==""cheese"":
        a=s2
    if t1==""ketchup"":
        a=s3
    if t2==""sausage"":
        b=s1
    if t2==""cheese"":
        b=s2
    if t2==""ketchup"":
        b=s3
        print(a*b)
if n==1:
    t=input()
    if t==""sausage"":
        a=s1
    if t==""cheese"":
        a=s2
    if t1==""ketchup"":
        a=s3
    print(a)","0.0"
"ae532d4a-9564-46c8-a30b-9f1fe7f95bf9","S1,S2,S3=map(int,input().split())
N=int(input())
if N==3:
    t1=input()
    t2=input()
    t3=input()
    print(S1*S2*S3)
elif N==2:
    t1=input()
    t2=input()
    if t1 ==""sausage"":
        a=S1
    if t1 ==""cheese"":
        a=S2
    if t1 ==""ketchup"":
        a=S3
    if t2 ==""sausage"":
        b=S1
    if t2 ==""cheese"":
        b=S2
    if t2 ==""ketchup"":
        b=S3
    print(a*b)
elif N==1:
    t1=input()
    if t1 ==""sausage"":
        print(S1)
    if t1 ==""cheese"":
        print(S2)
    if t1 ==""ketchup"":
        print(S3)","0.0"
"ae532d4a-9564-46c8-a30b-9f1fe7f95bf9","s1,s2,s3=map(int,input().split())
n=int(input())
if n==3:
    t1=input()
    t2=input()
    t3=input()
    print(s1*s2*s3)
if n==2:
    t1=input()
    t2=input()
    if t1==""sausage"":
        a=s1
    if t1==""cheese"":
        a=s2
    if t1==""ketchup"":
        a=s3
    if t2==""sausage"":
        b=s1
    if t2==""cheese"":
        b=s2
    if t2==""ketchup"":
        b=s3
    print(a*b)
if n==1:
    t1=input()
    if t1==""sausage"":
        c=s1
    if t1==""cheese"":
        c=s2
    if t1==""ketchup"":
        c=s3
    print(c)","0.0"
"ae532d4a-9564-46c8-a30b-9f1fe7f95bf9","s1, s2, s3=map(int, input().split())
n=int(input())
if n==3:
    t1=input()
    t2=input()
    t3=input()
    print(s1*s2*s3)
if n==2:
    t1=input()
    t2=input()
    if t1=='sausage':
        a=s1
    if t1=='cheese':
        a=s2
    if t1=='ketchup':
        a=s3
    if t2=='sausage':
        b=s1
    if t2=='cheese':
        b=s2
    if t2=='ketchup':
        b=s3
    print(a*b)
if n==1:
    t=input()
    if t=='sausage':
        print(s1)
    if t=='cheese':
        print(s2)
    if t=='ketchup':
        print(s3)","0.0"
"c6175ed3-a33c-4dbf-8f71-6ef2f9e31411","n = int(input())
A, B, C = map(int,input().split())
D, E, F = map(int,input().split())
k = (n+1)*(A*D+B*E+C*F)
print(k)","0.0"
"a4b90367-4dc9-4d5f-84d6-56245ea5afc4","k, m, n = map(int,input().split())
if k>=n:
    print(m*2)
else:
    p = n * 2 // k
    if n * 2 % k !=0:
        p += 1
    print(p * m)","0.0"
"aea68e26-3891-4316-b0ca-0091e0125d96","a=int(input())


def ko(x):
    sp=[]
    for t in range(1,int(x**0.5)+1):
        if x%t==0 :
            sp.append(t)
            if t!=x//t :
                sp.append(x//t)
    spd=[]
    for n in sp:
        if n!=7 and n%10==7 and n!=x  :
            spd.append(n)
    spd.sort()
    return spd

k=0
for i in range(a,a*10000000):
    spf=ko(i)
    if len(spf)>0:
        print(i,spf[0])
        k+=1
    if k==5:
        break","0.0"
"aea68e26-3891-4316-b0ca-0091e0125d96","a=int(input())


def ko(x):
    sp=[]
    for t in range(1,int(x**0.5)+1):
        if x%t==0 :
            sp.append(t)
            if t!=x//t :
                sp.append(x//t)
    spd=[]
    for n in sp:
        if n!=7 and n!=x and n%10==7   :
            spd.append(n)
    spd.sort()
    return spd

k=0
for i in range(a,a*10000000):
    spf=ko(i)
    if len(spf)>0:
        print(i,spf[0])
        k+=1
    if k==5:
        break","0.0"
"aea68e26-3891-4316-b0ca-0091e0125d96","a=int(input())


def ko(x):
    sp=[]
    for t in range(1,int(x**0.5)+1):
        if x%t==0 :
            sp.append(t)
            if t!=x//t :
                sp.append(x//t)
    spd=[]
    for n in sp:
        if n!=7 and n!=x and n%10==7   :
            spd.append(n)
    spd.sort()
    return spd

k=0
for i in range(a,a*10000000):
    spf=ko(i)
    if len(spf)>0:
        print(i,spf[0])
        k+=1
    if k==5:
        break","0.0"
"aea68e26-3891-4316-b0ca-0091e0125d96","a=int(input())


def ko(x):
    sp=[]
    for t in range(1,int(x**0.5)+1):
        if x%t==0 :
            sp.append(t)
            if t!=x//t :
                sp.append(x//t)
    spd=[]
    for n in sp:
        if n!=7 and n!=x and n%10==7   :
            spd.append(n)
    spd.sort()
    return spd

k=0
for i in range(a,a*100000000000):
    spf=ko(i)
    if len(spf)>0:
        print(i,spf[0])
        k+=1
    if k==5:
        break","0.0"
"4e22855c-d210-4e19-8715-87f6cf4bba7c","a,b=map(int,input().split())

def ko(x):
    sp=[]
    for t in range(1,int(x**0.5)+1):
        if x%t==0 and t%2==0:
            sp.append(t)
        if x//t!=t and x//t%2==0 and x%t==0:
            sp.append(x//t)
    sp.sort()
    return sp


for i in range(a,b+1):
    spd=ko(i)
    if len(spd)==3:
        print(i)","0.0"
"4e22855c-d210-4e19-8715-87f6cf4bba7c","a,b=map(int,input().split())

def ko(x):
    sp=[]
    for t in range(1,int(x**0.5)+1):
        if x%t==0 and t%2==0:
            sp.append(t)
        if x//t!=t and x//t%2==0 and x%t==0:
            sp.append(x//t)
    sp.sort()
    return sp


for i in range(a,b+1):
    spd=ko(i)
    if len(spd)==3:
        print(i)","0.0"
"aea68e26-3891-4316-b0ca-0091e0125d96","a=int(input())


def ko(x):
    sp=[]
    for t in range(1,int(x**0.5)+1):
        if x%t==0 :
            sp.append(t)
            if t!=x//t :
                sp.append(x//t)
    spd=[]
    for n in sp:
        if n!=7 and n!=x and n%10==7   :
            spd.append(n)
    spd.sort()
    return spd

k=0
for i in range(a,a*100000000000):
    spf=ko(i)
    if len(spf)!=0:
        print(i,spf[0])
        k+=1
    if k==5:
        break","0.0"
"aea68e26-3891-4316-b0ca-0091e0125d96","def F(x):
    sp=[]
    
    for i in range (2, int(x**0.5)+1):
        if x%i==0:
            if i!=7 and i%10==7:
                sp.append(i)
            if x//i!=i and x//i!=7 and (x//i)%10==7:
                sp.append(x//i)
    sp.sort()
    
    return sp

k=0
a=int(input())
for g in range(a,a*100):
    spd=[]
    spd=F(g)
    
    if len(spd)>0:
        print(g,spd[0])
        k+=1
    if k>4:
        break","0.0"
"aea68e26-3891-4316-b0ca-0091e0125d96","def F(x):
    sp=[]
    
    for i in range (2, int(x**0.5)+1):
        if x%i==0:
            if i!=7 and i%10==7:
                sp.append(i)
            if x//i!=i and x//i!=7 and (x//i)%10==7:
                sp.append(x//i)
    sp.sort()
    
    return sp

k=0
a=int(input())
for g in range(a,a*100):
    spd=[]
    spd=F(g)
    
    if len(spd)>0:
        print(g,spd[0])
        k+=1
    if k>4:
        break","0.0"
"aea68e26-3891-4316-b0ca-0091e0125d96","a=int(input())


def ko(x):
    sp=[]
    for t in range(1,int(x**0.5)+1):
        if x%t==0 :
            sp.append(t)
            if t!=x//t :
                sp.append(x//t)
    spd=[]
    for n in sp:
        if n!=7 and n!=x and n%10==7   :
            spd.append(n)
    spd.sort()
    return spd

k=0
for i in range(a+1,a*100000000000):
    spf=ko(i)
    if len(spf)!=0:
        print(i,spf[0])
        k+=1
    if k==5:
        break","0.0"
"aea68e26-3891-4316-b0ca-0091e0125d96","def F(x):
    sp=[]
    
    for i in range (2, int(x**0.5)+1):
        if x%i==0:
            if i!=7 and i%10==7:
                sp.append(i)
            if x//i!=i and x//i!=7 and (x//i)%10==7:
                sp.append(x//i)
    sp.sort()
    
    return sp

k=0
a=int(input())
for g in range(a+1,a*100):
    spd=[]
    spd=F(g)
    
    if len(spd)>0:
        print(g,spd[0])
        k+=1
    if k>4:
        break","0.0"
"4e22855c-d210-4e19-8715-87f6cf4bba7c","a,b=map(int,input().split())

def ko(x):
    sp=[]
    for t in range(1,int(x**0.5)+1):
        if x%t==0 and t%2==0:
            sp.append(t)
        if x//t!=t and x//t%2==0 and x%t==0:
            sp.append(x//t)
    sp.sort()
    return sp


for i in range(a,b+1):
    spd=ko(i)
    if len(spd)==3:
        print(i)","0.0"
"4e22855c-d210-4e19-8715-87f6cf4bba7c","a,b=map(int,input().split())

def ko(x):
    sp=[]
    for t in range(1,int(x**0.5)+1):
        if x%t==0:
            if t%2==0:
                sp.append(t)
            if x//t!=t:
                if x//t%2==0 and x%t==0:
                    sp.append(x//t)
    
    sp.sort()
    return sp


for i in range(a,b+1):
    spd=ko(i)
    if len(spd)==3:
        print(i)","0.0"
"4e22855c-d210-4e19-8715-87f6cf4bba7c","a,b=map(int,input().split())

def ko(x):
    k=0
    for t in range(1,int(x**0.5)+1):
        if x%t==0:
            if t%2==0:
                k+=1
            if x//t!=t:
                if x//t%2==0 and x%t==0:
                    k+=1
    return k


for i in range(a,b+1):
    spd=ko(i)
    if spd==3:
        print(i)","0.0"
"4e22855c-d210-4e19-8715-87f6cf4bba7c","a,b=map(int,input().split())

def ko(x):
    k=0
    for t in range(1,int(x**0.5)+1):
        if k>3:
            return 0
        if x%t==0:
            if t%2==0:
                k+=1
            if x//t!=t:
                if x//t%2==0 and x%t==0:
                    k+=1
    return k


for i in range(a,b+1):
    spd=ko(i)
    if spd==3:
        print(i)","0.0"
"4e22855c-d210-4e19-8715-87f6cf4bba7c","a,b=map(int,input().split())

def ko(x):
    k=0
    for t in range(1,int(x**0.5)+1):
        if k>3:
            return 0
            break
        if x%t==0:
            if t%2==0:
                k+=1
            if x//t!=t:
                if x//t%2==0 and x%t==0:
                    k+=1
    return k


for i in range(a,b+1):
    spd=ko(i)
    if spd==3:
        print(i)","0.0"
"4e22855c-d210-4e19-8715-87f6cf4bba7c","a,b=map(int,input().split())

def ko(x):
    k=0
    for t in range(1,int(x**0.5)+1):
        if k>3:
            return 0
            break
        if x%t==0:
            if t%2==0:
                k+=1
            if x//t!=t:
                if x//t%2==0 and x%t==0:
                    k+=1
    return k


for i in range(a,b+1):
    if i%2==0:
        spd=ko(i)
        if spd==3:
            print(i)","0.0"
"2373f3eb-bf38-46fd-ba92-ede0c1bc0ac0","array = []

for i in range(int(input())):
    array.append(int(input()))
array = sorted(array)
counter = 0

while len(array) > 3:
    if 2 * array[1] + array[0] < array[0] * 2 + array[-2]:
        counter += array[-1] + array[0] + array[1] * 2
    else:
        counter += array[-1] + array[-2] + array[0] * 2
    array = array[:len(array) - 2]

if len(array) == 2:
    counter += array[1]
elif len(array) == 3:
    counter += sum(array)
print(counter)","0.0"
"430aade4-55bd-42b3-9586-1389412540a7","n=int(input())
k=0
while n!=1:
    k=k+1
    n=n//2+n%2
print(k)","0.0"
"430aade4-55bd-42b3-9586-1389412540a7","n=int(input())
k=0
while n!=1:
    k=k+1
    n=n//2+n%2
print(k)","0.0"
"430aade4-55bd-42b3-9586-1389412540a7","n=int(input())
k=0
while n!=1:
    k=k+1
    n=n//2+n%2
print(k)","0.0"
"430aade4-55bd-42b3-9586-1389412540a7","n=int(input())
k=0
while n!=1:
    k=k+1
    n=n//2+n%2
print(k)","0.0"
"84b45b43-cc73-4b14-ab6e-8b970134fb03","n, m=map(int,input().split())
k=0
c=1
while m>c:
    c=1
    for i in range(n):
        if m>=c:
            m=m-c
            c=c+1
        else: break
print(m)","0.0"
"84b45b43-cc73-4b14-ab6e-8b970134fb03","n, m=map(int,input().split())
k=0
s=0
for i in range(1,n+1):
       s=s+i
k=m%s
for i in range(1,n+1):
    if k>=i:
       k=k-i
    else: break
print(k)","0.0"
"c4a7e827-63de-424a-aec0-aea743d3b5f2","a, b = map(int, input().split())

print((b//a)+1,b%a)","0.0"
"c4a7e827-63de-424a-aec0-aea743d3b5f2","s=[int(i) for i in input().split()]
k=s[0]
n=s[1]
print(n//k+1, n%k,)","0.0"
"c4a7e827-63de-424a-aec0-aea743d3b5f2","def f():
    k, n = map(int, input().split())
    print(n // k + 1, n % k)


f()","0.0"
"c4a7e827-63de-424a-aec0-aea743d3b5f2","k, n = map(int, input().split())
s = 1
while n > k:
    s += 1
    n -= k
print(s, n)","0.0"
"c4a7e827-63de-424a-aec0-aea743d3b5f2","k, n=map(int,input().split())
print(n//k+1, n%k)","0.0"
"c4a7e827-63de-424a-aec0-aea743d3b5f2","s = input().split()
k = int(s[0])
n = int(s[1])
print(n//k+1, n%k)","0.0"
"c4a7e827-63de-424a-aec0-aea743d3b5f2","k,n=map(int,input().split())
s=1
while(n>k):
    n-=k
    s+=1
print(s,n)","0.0"
"c4a7e827-63de-424a-aec0-aea743d3b5f2","k,n=map(int,input().split())
t=(n+k-1)//k
print(t,n-k*(t-1))","0.0"
"c4a7e827-63de-424a-aec0-aea743d3b5f2","s=[int(i) for i in input().split()]
k=s[0]
n=s[1]
if s[0]==1 and s[1]==1:
    print(1, 1)
else:
    print(n//k+1, n%k,)","0.0"
"c4a7e827-63de-424a-aec0-aea743d3b5f2","n, m = map(int, input().split())
c = m % n
if c == 0:
    print(m // n + 1, m)
else:
    print(m // n + 1, m % n)","0.0"
"c4a7e827-63de-424a-aec0-aea743d3b5f2","n, k = [int(i) for i in input().split()]
print(k//n+1, k%n)","0.0"
"c4a7e827-63de-424a-aec0-aea743d3b5f2","a, b = list(map(int, input().split()))
print(b // a + 1, b % a)","0.0"
"6d204921-764f-452c-a01d-578e51695a98","n = int(input())
for a in range(n):
    mas = list(map(int, input().split()))
    mas.sort()
    if mas[2] == sum(mas) - mas[2]:
        print('YES')
    else:
        print('NO')","0.0"
"c4a7e827-63de-424a-aec0-aea743d3b5f2","a, b = map(int, input().split())

if a>=b:
    print(1,b)
else:
    print(b//a+1,b%a)","0.0"
"c4a7e827-63de-424a-aec0-aea743d3b5f2","k, n = map(int, input().split())
if k == 1:
    print(1, 1)
else:
    print(n // k + 1, n % k)","0.0"
"c4a7e827-63de-424a-aec0-aea743d3b5f2","s=input().split()
s[0]=int(s[0])
s[1]=int(s[1])
if s[1] % s[0] == 0:
    print(s[1]//s[0],s[0])
else:
    print(s[1]//s[0]+1,s[1]%s[0])","0.0"
"c4a7e827-63de-424a-aec0-aea743d3b5f2","b, a = list(map(int, input().split()))
print(a//b+int(a%b!= 0), a%b)","0.0"
"6d204921-764f-452c-a01d-578e51695a98","t = int(input())
for i in range(t):
    a, b, c = map(int, input().split())
    if (a+b == c) or (a+c == b) or (b+c == a):
        print('YES')
    else:
        print('NO')","0.0"
"c4a7e827-63de-424a-aec0-aea743d3b5f2","a = [int(x) for x in input().split()]
k = a[0]
n = a[1]
l = n//k
r = n - k*l
print(l+1, r)","0.0"
"c4a7e827-63de-424a-aec0-aea743d3b5f2","k,n = [int(i) for i in input().split()]
print(n//k+1, n%k)","0.0"
"c4a7e827-63de-424a-aec0-aea743d3b5f2","k, n=map(int, input().split())
print(n//k+1, n%k)","0.0"
"c4a7e827-63de-424a-aec0-aea743d3b5f2","n, m = map(int, input().split())
c = m % n
if n == 1:
    print(m, n)
else:
    if c == 0:
        print(m // n + 1, m)
    else:
        print(m // n + 1, m % n)","0.0"
"c4a7e827-63de-424a-aec0-aea743d3b5f2","n, m = map(int,input().split())
print (m//n +1,((m-1)%n)+1)","0.0"
"c4a7e827-63de-424a-aec0-aea743d3b5f2","s=[int(i) for i in input().split()]
k=s[0]
n=s[1]
print((n-1)//k+1, (n-1)%k+1)","0.0"
"c4a7e827-63de-424a-aec0-aea743d3b5f2","k, n=map(int,input().split())
if n%k!=0:
    print(n//k+1, n%k)
else:
    print(n//k, n%k)","0.0"
"c4a7e827-63de-424a-aec0-aea743d3b5f2","k, n = map(int, input().split())
print(n // k + 1, n % k)","0.0"
"c4a7e827-63de-424a-aec0-aea743d3b5f2","q=[int(x) for x in input().split()]
w=0
e=0
if q[1]%q[0]==0:
    w=q[1]//q[0]
    e=q[0]
else:
    w=q[1]//q[0]+1
    e=q[1]%q[0]
print(w, e)","0.0"
"c4a7e827-63de-424a-aec0-aea743d3b5f2","k, n=map(int,input().split())
if n%k==0:
    print(n//k, k)
else:
    print(n//k+1, n%k)","0.0"
"c4a7e827-63de-424a-aec0-aea743d3b5f2","k=list(map(int,input().split()))
print((k[1]//k[0])+1,k[1]%k[0])","0.0"
"15f19bc8-7be3-4a44-a7b1-fc7505badaed","n = int(input())
for a in range(n):
    s = input()
    s = s.upper()
    if s == 'PYTHON':
        print('YES')
    else:
        print('NO')","0.0"
"c4a7e827-63de-424a-aec0-aea743d3b5f2","a = [int(x)for x in input().split()]
k = a[0]
n = a[1]
b = n % k
if b == 0:
    print(n//k, k)
else:
    print((n//k)+1, b)","0.0"
"c4a7e827-63de-424a-aec0-aea743d3b5f2","k, n = map(int, input().split())
c = 1
if k > n:
    print(1, n)
else:
    for i in range(n):
        if k < n:
            n -= k
            c += 1
    print(c, n)","0.0"
"c4a7e827-63de-424a-aec0-aea743d3b5f2","k, n=map(int, input().split())
b=n//k+1
c=n%k
if c==0:
    c=1
print(b, c)","0.0"
"c4a7e827-63de-424a-aec0-aea743d3b5f2","a, b = list(map(int, input().split()))
if b % a != 0:
    print(b // a + 1, b % a)
else:
    print(b // a, a)","0.0"
"c4a7e827-63de-424a-aec0-aea743d3b5f2","n, m = map(int,input().split())
if m%n==0:
    print (m//n,((m-1)%n)+1)
else:
    print (m//n +1,((m-1)%n)+1)","0.0"
"c4a7e827-63de-424a-aec0-aea743d3b5f2","k, n=map(int,input().split())
if n%k!=0:
    print(n//k+1, n%k)
else:
    print(n//k, k)","0.0"
"c4a7e827-63de-424a-aec0-aea743d3b5f2","k, n=map(int, input().split())
b=n//k+1
c=n%k
if c==0:
    c=k
print(b, c)","0.0"
"6d204921-764f-452c-a01d-578e51695a98","def f():
    t = int(input())
    for _ in range(t):
        a, b, c = map(int, input().split())
        uwu = sorted([a, b, c])
        print(""YES"" if uwu[2] == uwu[0] + uwu[1] else ""NO"")


f()","0.0"
"6d204921-764f-452c-a01d-578e51695a98","n=int(input())
for i in range(n):
    a,b,c=map(int,input().split())
    if a+b==c or a+c==b or b+c==a:
        print(""YES"")
    else:
        print(""NO"")","0.0"
"c4a7e827-63de-424a-aec0-aea743d3b5f2","a,b=map(int,input().split())
q= b - (b//a)*a
if b %a ==0:
    print(b//a, q)
else:
    print(b//a+1,q)","0.0"
"c4a7e827-63de-424a-aec0-aea743d3b5f2","k,n = [int(i) for i in input().split()]
if k==n:
    print(n//k, n)
else:
    print(n//k+1, n%k)","0.0"
"6d204921-764f-452c-a01d-578e51695a98","n = int(input())
for i in range(n):
    a, b, c = map(int, input().split())
    if a + b == c or b + c == a or a + c == b:
        print(""YES"")
    else:
        print(""NO"")","0.0"
"15f19bc8-7be3-4a44-a7b1-fc7505badaed","a=int(input())
s='python'
for i in range(a):
    n=input().lower()
    if n==s:
        print('YES')
    else:
        print('NO')","0.0"
"c4a7e827-63de-424a-aec0-aea743d3b5f2","import math

a, b = list(map(int, input().split()))
print(math.ceil(b/a), b%a)","0.0"
"c4a7e827-63de-424a-aec0-aea743d3b5f2","def f():
    k, n = map(int, input().split())
    if (0, 0) == (k, n):
        print(0, 0)
    print(n // k + 1, n % k)


f()","0.0"
"c4a7e827-63de-424a-aec0-aea743d3b5f2","k, n=map(int, input().split())
b=n//k+1
c=n%k
if c==0 and b==1:
    c=1
elif c==0:
    c=k
print(b, c)","0.0"
"c4a7e827-63de-424a-aec0-aea743d3b5f2","k, n = map(int, input().split())

page = n // k
print(f'{page + 1} {n - page * k}')","0.0"
"6d204921-764f-452c-a01d-578e51695a98","n=int(input())
for i in range(n):
    s=input().split()
    s[0],s[1],s[2]=int(s[0]),int(s[1]),int(s[2])
    if s[0]+s[1]==s[2] or s[2]+s[1]==s[0] or s[2]+s[0]==s[1]:
        print('YES')
    else:
        print('NO')","0.0"
"c4a7e827-63de-424a-aec0-aea743d3b5f2","def f():
    k, n = map(int, input().split())
    if (0, 0) == (k, n):
        return print(0, 0)
    print(n // k + 1, n % k)


f()","0.0"
"c4a7e827-63de-424a-aec0-aea743d3b5f2","k, n = map(int, input().split())
if k == n:
    print(1, k)
else:
    print(n // k + 1, n % k)","0.0"
"c4a7e827-63de-424a-aec0-aea743d3b5f2","k, n=map(int, input().split())
b=n//k+1
c=n%k
if c==0 and b==1:
    c=1
print(b, c)","0.0"
"6d204921-764f-452c-a01d-578e51695a98","n = int(input())
for i in range(n):
    a,b,c = map(int,input().split())
    if a == b+c or b == a+c or c == a+b:
        print('YES')
    else:
        print('NO')","0.0"
"c4a7e827-63de-424a-aec0-aea743d3b5f2","k,n = [int(i) for i in input().split()]
if k==0 or n==0:
    print(0)
elif k==n:
    print(n//k, n)
else:
    print(n//k+1, n%k)","0.0"
"c4a7e827-63de-424a-aec0-aea743d3b5f2","c = input().split()
n = int(c[0])
k = int(c[1])
a = k % n
b = k // n
if a != 0:
    b += 1
print(b, a)","0.0"
"c4a7e827-63de-424a-aec0-aea743d3b5f2","a, b = [int(x) for x in input().split()]
print((b//a)+1, b%a)","0.0"
"6d204921-764f-452c-a01d-578e51695a98","t=int(input())
for i in range(t):
    a, b, c=map(int,input().split())
    if a==b+c or b==a+c or c==b+a:
        print('YES')
    else:
        print('NO')","0.0"
"c4a7e827-63de-424a-aec0-aea743d3b5f2","from math import *
k,n = map(int,input().split())
if k>n or k==n:
    print(1,n)
else:
    print(n//k+1,n%k)","0.0"
"6d204921-764f-452c-a01d-578e51695a98","n = int(input())
for i in range(n):
    a = [int(x) for x in input().split()]
    if (a[0] + a[1] == a[2]) or (a[0] + a[2] == a[1]) or (a[2] + a[1] == a[0]):
        print('YES')
    else:
        print('NO')","0.0"
"6d204921-764f-452c-a01d-578e51695a98","t = int(input())
for _ in range(t):
     a,b,c=map(int,input().split())
     if (a+b==c or a+c==b or c+b==a):
         print(""YES"")
     else:
        print(""NO"")","0.0"
"c4a7e827-63de-424a-aec0-aea743d3b5f2","from math import *
k,n = map(int,input().split())
if k>n or k==n:
    print(1,n)
else:
    print(ceil(n/k),n%k)","0.0"
"6d204921-764f-452c-a01d-578e51695a98","n=int(input())
for i in range(n):
    a,b,c=map(int,input().split())
    t=a+b+c
    ma=max(a,b,c)
    if ma==(t-ma):
        print('YES',end='
')
    else:
        print('NO',end='
')","0.0"
"c4a7e827-63de-424a-aec0-aea743d3b5f2","def f():
    k, n = map(int, input().split())
    if (1, 1) == (k, n):
        return print(1, 1)
    print(n // k + 1, n % k)


f()","0.0"
"c4a7e827-63de-424a-aec0-aea743d3b5f2","a=[int(i) for i in input().split()]
b=a[1]//a[0]
c=a[1]%a[0]
if b==0:
    print(b+1, end="" "")
else:
    print(b+1, end="" "")
if c==0:
    print(1)
else:
    print(c)","0.0"
"c4a7e827-63de-424a-aec0-aea743d3b5f2","k,n=map(int,input().split())
if n <= k :
    print( 1 , n)
else :
    o=n//k+1
    p=n%k
    print(o , p)","0.0"
"c4a7e827-63de-424a-aec0-aea743d3b5f2","k, n=map(int, input().split())
from math import *
b=ceil(n/k)
c=n%k
if c==0 and b==1:
    c=1
print(b, c)","0.0"
"6d204921-764f-452c-a01d-578e51695a98","n = int(input())
a = []
u = 0
for i in range(n):
    i = input().split()
    i[0] = int(i[0])
    i[1] = int(i[1])
    i[2] = int(i[2])
    if i[0] == i[1]+i[2]:
        a.append('YES')
    elif i[1] == i[0] + i[2]:
        a.append('YES')
    elif i[2] == i[1]+i[0]:
        a.append('YES')
    else:
        a.append('NO')
for i in a:
    print(i)","0.0"
"c4a7e827-63de-424a-aec0-aea743d3b5f2","k=list(map(int,input().split()))
if k[1]%k[0]==0:
    print(k[1]//k[0],k[0])
else:
    print((k[1]//k[0])+1,k[1]%k[0])","0.0"
"15f19bc8-7be3-4a44-a7b1-fc7505badaed","n=int(input())
for i in range(n):
    s=input().lower()
    if s == 'python':
        print('YES')
    else:
        print('NO')","0.0"
"6d204921-764f-452c-a01d-578e51695a98","for i in range(int(input())):
    a, b, c = map(int, input().split())
    if a + b == c or a + c == b or b + c == a:
        print('YES')
    else:
        print(""NO"")","0.0"
"6d204921-764f-452c-a01d-578e51695a98","def f(a, b, c):
    if a == b + c or b == a + c or c == a + b:
        return True
    return False


n = int(input())
for i in range(n):
    a, b, c = map(int, input().split())
    if f(a, b, c):
        print(""YES"")
    else:
        print(""NO"")","0.0"
"6d204921-764f-452c-a01d-578e51695a98","for i in range(int(input())):
    a, b, c = [int(i) for i in input().split()]
    if a == b + c or b == a+c or c == a+b:
        print('YES')
    else:
        print('NO')","0.0"
"c4a7e827-63de-424a-aec0-aea743d3b5f2","import math

a, b = list(map(int, input().split()))
if a == 1:
    print(b-1, 1)
else:
    print(math.ceil(b/a), b%a)","0.0"
"15f19bc8-7be3-4a44-a7b1-fc7505badaed","def f():
    for _ in range(int(input())):
        print(""YES"" if input().lower() == ""python"" else ""NO"")


f()","0.0"
"c4a7e827-63de-424a-aec0-aea743d3b5f2","k,n = [int(i) for i in input().split()]
if n%k==0:
    print(n//k, 1)
else:
    print(n//k+1, n%k)","0.0"
"6d204921-764f-452c-a01d-578e51695a98","n = int(input())
m = []
for i in range(n):
    l = [int(x) for x in input().split()]
    a = l[0]
    b = l[1]
    c = l[2]
    if (a+b == c) or (b+c == a) or (c+a == b):
        m.append(""YES"")
    else:
        m.append(""NO"")
for i in m:
    print(i)","0.0"
"15f19bc8-7be3-4a44-a7b1-fc7505badaed","t=int(input())
for i in range(t):
    s=input()
    s=s.lower()
    if s=='python':
        print('YES')
    else:
        print('NO')","0.0"
"c4a7e827-63de-424a-aec0-aea743d3b5f2","k, n=map(int, input().split())
from math import *
b=ceil(n/k)
c=n%k
if c==0 and b==1:
    c=1
elif c==0:
    c=k
print(b, c)","0.0"
"15f19bc8-7be3-4a44-a7b1-fc7505badaed","n=int(input())
for i in range(n):
    s=input()
    s=s.lower()
    if s==""python"":
        print(""YES"")
    else:
        print(""NO"")","0.0"
"15f19bc8-7be3-4a44-a7b1-fc7505badaed","n=int(input())
for i in range(n):
    st=input()
    if st.lower()=='python':
        print('YES')
    else:
        print('NO')","0.0"
"c4a7e827-63de-424a-aec0-aea743d3b5f2","c = input().split()
n = int(c[0])
k = int(c[1])
a = k % n
b = k // n
if a != 0:
    b += 1
    print(b, a)
elif k == n:
    print(b, b)","0.0"
"6d204921-764f-452c-a01d-578e51695a98","t = int(input())

for i in range(t):
    a, b, c = map(int, input().split())
    if (a + b) == c or (a + c) == b or (b + c) == a:
        print('YES')
    else:
        print('NO')","0.0"
"6d204921-764f-452c-a01d-578e51695a98","n = int(input())
for i in range(n):
    lst = [int(x) for x in input().split()]
    if (lst[0]==lst[1]+lst[2]) or (lst[1]==lst[0]+lst[2])or (lst[2]==lst[1]+lst[0]):
        print(""YES"")
    else:
        print(""NO"")","0.0"
"15f19bc8-7be3-4a44-a7b1-fc7505badaed","n = int(input())
for i in range(n):
    s = input()
    if s.lower() == ""python"":
        print(""YES"")
    else:
        print(""NO"")","0.0"
"15f19bc8-7be3-4a44-a7b1-fc7505badaed","n = int(input())
for i in range(n):
    a = input()
    d = a.upper()
    if d == 'PYTHON':
        print('YES')
    else:
        print('NO')","0.0"
"15f19bc8-7be3-4a44-a7b1-fc7505badaed","t = int(input())
s1=""PYTHON""
s2=""python""
for _ in range(t):
    s = input()
    a=1
    for i in range(6):
        if s[i]!=s1[i] and s[i]!=s2[i]:
            a=0
            continue
    if a==1:
        print(""YES"")
    else:
        print(""NO"")","0.0"
"6d204921-764f-452c-a01d-578e51695a98","a1 = []
for i in range(int(input())):
    a ,b ,c = map(int, input().split())
    if a+b==c or a+c == b or b+c==a:
        a1.append('YES')
    else:
        a1.append('NO')
for i in a1:
    print(i)","0.0"
"15f19bc8-7be3-4a44-a7b1-fc7505badaed","n = int(input())
for i in range(n):
    s = input().lower()
    if s == ""python"":
        print(""YES"")
    else:
        print(""NO"")","0.0"
"15f19bc8-7be3-4a44-a7b1-fc7505badaed","for i in range(int(input())):
    string = input()
    string = string.lower()
    if string == ""python"":
        print(""YES"")
    else:
        print(""NO"")","0.0"
"15f19bc8-7be3-4a44-a7b1-fc7505badaed","t = int(input())
s1 = 'PYTHON'
for i in range(t):
    s = input()
    s = s.upper()
    if s == s1:
        print('YES')
    else:
        print('NO')","0.0"
"6d204921-764f-452c-a01d-578e51695a98","t=int(input())
for i in range(1,t+1):
    a,b,c=map(int,input().split())
    if a==b+c or b==a+c or c==a+b:
        print(""YES"")
    else:
        print(""NO"")","0.0"
"c4a7e827-63de-424a-aec0-aea743d3b5f2","k, n =map(int, input().split())
print((n//k)+1, n%k)","0.0"
"c4a7e827-63de-424a-aec0-aea743d3b5f2","a, b = [int(x) for x in input().split()]
print((b//a)+1, b%a)","0.0"
"6d204921-764f-452c-a01d-578e51695a98","t=int(input())
for i in range(t):
    a, b, c=map(int, input().split())
    if a+b==c or a+c==b or c+b==a:
        print('YES')
    else:
        print('NO')","0.0"
"6d204921-764f-452c-a01d-578e51695a98","t=int(input())
for i in range(t):
    a, b, c=map(int, input().split())
    if a==b+c or b==a+c or c==a+b:
        print('YES')
    else:
        print('NO')","0.0"
"15f19bc8-7be3-4a44-a7b1-fc7505badaed","t = int(input())

for i in range(t):
    word = input()
    if word.lower() == 'python':
        print('YES')
    else:
        print('NO')","0.0"
"15f19bc8-7be3-4a44-a7b1-fc7505badaed","n = int(input())
for i in range(n):
    s = input()
    if s.upper() == ""PYTHON"":
        print(""YES"")
    else:
        print(""NO"")","0.0"
"6d204921-764f-452c-a01d-578e51695a98","n = int(input())

for i in range(n):
    a, b, c = list(map(int, input().split()))

    if a == b + c:
        print('YES')
    elif b == a + c:
        print('YES')
    elif c == a + b:
        print('YES')
    else:
        print('NO')","0.0"
"6d204921-764f-452c-a01d-578e51695a98","a=int(input())
m=[]
for i in range(a):
    n=input().split()
    if (int(n[1])==int(n[0])+int(n[2])) or (int(n[0])==int(n[1])+int(n[2])) or (int(n[2])==int(n[1])+int(n[0])):
        m.append('YES')
    else:
        m.append('NO')
for i in m:
    print(i)","0.0"
"6d204921-764f-452c-a01d-578e51695a98","n = int(input())
for i in range(n):
    a,b,c= (int(i) for i in input().split())
    if a==b+c or b==a+c or c==b+a:
        print('YES')
    else:
        print('NO')","0.0"
"6d204921-764f-452c-a01d-578e51695a98","e=int(input())
c=[]
for i in range(e):
    a=[int(i) for i in input().split()]
    if a[0]==a[1]+a[2]:
        c.append(""YES"")
    elif a[1]==a[0]+a[2]:
        c.append(""YES"")
    elif a[2] == a[1] + a[0]:
        c.append(""YES"")
    else:
        c.append(""NO"")
for i in range(e):
    print(c[i])","0.0"
"15f19bc8-7be3-4a44-a7b1-fc7505badaed","a1 = []
for i in range(int(input())):
    a = input()
    if a.lower() == 'python':
        a1.append('YES')
    else:
        a1.append('NO')
for i in a1:
    print(i)","0.0"
"15f19bc8-7be3-4a44-a7b1-fc7505badaed","n = int(input())
a = []
u = 0
y = []
for i in range(n):
    i = input()
    y.append(i)
    if i[0] == 'P' or i[0] == 'p':
        if i[1] == 'Y' or i[1] == 'y':
            if i[2] == 'T' or i[2] == 't':
                if i[3] == 'H' or i[3] == 'h':
                    if i[4] == 'O' or i[4] == 'o':
                        if i[5] == 'N' or i[5] == 'n':
                            a.append('YES')
                        else:
                            a.append('NO')
                    else:
                        a.append('NO')
                else:
                    a.append('NO')
            else:
                a.append('NO')
        else:
            a.append('NO')
    else:
        a.append('NO')
for i in a:
    print(i)","0.0"
"6d204921-764f-452c-a01d-578e51695a98","n=int(input())
x=[]
for i in range(1,n+1):
    a,b,c=map(int,input().split())
    if a+b==c or b+c==a or c+a==b:
        x.append('YES')
    else:
        x.append('NO')
for i in x:
    print(i)","0.0"
"6d204921-764f-452c-a01d-578e51695a98","s=[[int(j) for j in input().split()] for i in range(int(input()))]
for i in s:
    isno = False
    for j in range(3):
        if i[j]==sum(i[:j]+i[j+1:]):
            print(""YES"")
            isno=True
            break
    if not isno:
        print(""NO"")","0.0"
"15f19bc8-7be3-4a44-a7b1-fc7505badaed","for i in range(int(input())):
    s = [i for i in input()]
    for j in range(len(s)):
        if s[j] == 'P':
            s[j] = 'p'
        elif s[j] == 'Y':
            s[j] = 'y'
        elif s[j] == 'T':
            s[j] = 't'
        elif s[j] == 'H':
            s[j] = 'h'
        elif s[j] == 'O':
            s[j] = 'o'
        elif s[j] == 'N':
            s[j] = 'n'
    if ''.join(s) == 'python':
        print('YES')
    else:
        print('NO')","0.0"
"15f19bc8-7be3-4a44-a7b1-fc7505badaed","n = int(input())

for i in range(n):
    a = input().lower()

    if a == 'python':
        print('YES')
    else:
        print('NO')","0.0"
"15f19bc8-7be3-4a44-a7b1-fc7505badaed","t=int(input())
for i in range(t):
    s=input()
    if (s[0]=='p' or s[0]=='P') and (s[1]=='y' or s[1]=='Y') and (s[2]=='t' or s[2]=='T') and (s[3]=='h' or s[3]=='H') and (s[4]=='o' or s[4]=='O') and (s[5]=='n' or s[5]=='N'):
        print('YES')
    else:
        print('NO')","0.0"
"6d204921-764f-452c-a01d-578e51695a98","def amogus(mas):
    mas1=mas
    mas1.sort()
    if mas1[0]+mas1[1]==mas1[2]:
        return 'YES'
    else:
        return 'NO'
a=int(input())
for i in range(a):
    mas=list(map(int,input().split()))
    print(amogus(mas))","0.0"
"6d204921-764f-452c-a01d-578e51695a98","for i in range(int(input())):
    l = sorted([int(x) for x in input().split()])
    if l[0] + l[1] == l[2]:
        print('YES')
    else:
        print('NO')","0.0"
"c4a7e827-63de-424a-aec0-aea743d3b5f2","k, n = map(int, input().split())
print(n//k + 1, n%k)","0.0"
"36d58b20-7fe1-452b-ac10-e1ed680aa6b3","n , k , t , c , d , p , nl , np = map(int,input().split())
a=(k*t)//nl
b=c*d
c=p//np
ans = min(a,b,c)
print(ans,(ans-1)%n+1)","0.0"
"15f19bc8-7be3-4a44-a7b1-fc7505badaed","for i in range(int(input())):
    if input().lower()==""python"":
        print(""YES"")
    else:
        print(""NO"")","0.0"
"15f19bc8-7be3-4a44-a7b1-fc7505badaed","n = int(input())
m = []
z = """"
f = True
l = ""python""
p = ""PYTHON""
for i in range(n):
    s = input()
    for j in range(len(s)):
        if (s[j] != l[j] and s[j] != p[j]):
            m.append(""NO"")
            f = False
            break
    if f == True:
        m.append(""YES"")
    f = True
for i in m:
    print(i)","0.0"
"15f19bc8-7be3-4a44-a7b1-fc7505badaed","n = int(input())
for i in range(n):
    a = str(input())
    if a.lower() == 'python':
        print('YES')
    else:
        print('NO')","0.0"
"fa181552-a073-4c25-928c-1a5c48505a6b","n = int(input())
a = list(map(int,input().split()))
b = []
i = 0
q = 0
while i <= n-1:
    w= 1
    if i == 0 or a[i] != a[i-1]:
        q += 1
        for j in range(i+1,n):
            if a[j]== a[i]:
                q += 1
            else:
                break
        b.append(q)
        b.append(a[i])
    i += q
    q = 0
print(*b)","0.0"
"15f19bc8-7be3-4a44-a7b1-fc7505badaed","n=int(input())
x=[]
for i in range(1,n+1):
    e=input()
    e=e.lower()
    if e=='python':
        x.append('YES')
    else:
        x.append('NO')
for i in x:
    print(i)","0.0"
"6d204921-764f-452c-a01d-578e51695a98","t=int(input())
for i in range(1,t+1):
    a,b,c = map(int,input().split())
    if a==b+c or b==a+c or c==a+b:
        print('YES')
    else:
        print('NO')","0.0"
"c4a7e827-63de-424a-aec0-aea743d3b5f2","k, n = map(int, input().split())
if n%k == 0:
    print(n//k, n%k)
else:
    print(n//k +1, n%k)","0.0"
"c4a7e827-63de-424a-aec0-aea743d3b5f2","k, n = map(int, input().split())
if n%k == 0:
    print(n//k, k)
else:
    print(n//k +1, n%k)","0.0"
"15f19bc8-7be3-4a44-a7b1-fc7505badaed","b=int(input())
c=[]
for i in range(b):
    a=input()
    if a.lower()==""python"":
        c.append(""YES"")
    else:
        c.append(""NO"")
for i in range(b):
    print(c[i])","0.0"
"6d204921-764f-452c-a01d-578e51695a98","t=int(input())
for i in range ( t):
    a, b, c =map(int,input().split())
    if a+b==c or c+b==a or a+c==b  :
        print(""YES"")
    else:
        print(""NO"")","0.0"
"36d58b20-7fe1-452b-ac10-e1ed680aa6b3","n, k, t, c, d, p, nl, np = map(int, input().split())
g = k * t // nl
t1 = c * d
t2 = p // np
res1 = min(g, t1, t2)
e = res1 % n if res1 % n != 0 else n
print(res1, e)","0.0"
"0024e95a-bf71-4dac-a246-626b5821e403","n1 , p1, m1 , t1, s1=map(int,input().split())
n2 , p2, m2 , t2, s2=map(int,input().split())
ans1=n1*(p1+m1*t1+s1)
ans2=n2*(p2+m2*t2+s2)
if ans1<ans2:
    print(""Python"",ans1)
elif ans2<ans1:
    print(""Pascal"",ans2)
else:
    print(""Draw"",ans1)","0.0"
"0024e95a-bf71-4dac-a246-626b5821e403","n1, p1, m1, t1, s1 = map(int, input().split())
n2, p2, m2, t2, s2 = map(int, input().split())
counter1 = (p1 + t1 * m1 + s1) * n1
counter2 = (p2 + t2 * m2 + s2) * n2

if counter1 < counter2:
    print(""Python"", counter1)
elif counter1 > counter2:
    print(""Pascal"", counter2)
else:
    print(""Draw"", counter1)","0.0"
"36d58b20-7fe1-452b-ac10-e1ed680aa6b3","s=input().split()
n=int(s[0])
k=int(s[1])
t=int(s[2])
c=int(s[3])
d=int(s[4])
p=int(s[5])
nl=int(s[6])
np=int(s[7])
countsok=(k*t)//nl
countmang=c*d
countkivano=p//np
s1=[countsok,countmang,countkivano]
if min(s1)%n == 0:
    print(min(s1),n)
else:
    print(min(s1),min(s1)%n)","0.0"
"c4a7e827-63de-424a-aec0-aea743d3b5f2","def f():
    k, n = map(int, input().split())
    if (1, 1) == (k, n):
        return print(1, 1)
    print(n // k + int(k != 1), n % k)


f()","0.0"
"c4a7e827-63de-424a-aec0-aea743d3b5f2","k, n = map(int, input().split())
print(n // k + 1, n % k)","0.0"
"c4a7e827-63de-424a-aec0-aea743d3b5f2","def f():
    k, n = map(int, input().split())
    if k == 1:
        return print(n // k, n)
    print(n // k + 1, n % k)


f()","0.0"
"c4a7e827-63de-424a-aec0-aea743d3b5f2","s = input().split()
n = int(s[1])
k = int(s[0])
print(n//(k+1)+1, n%k)","0.0"
"6d204921-764f-452c-a01d-578e51695a98","n=int(input())
s=[]
for i in range(n):
    a,b,c=map(int,input().split())
    if a+b==c or a+c==b or c+b==a:
        s.append(""YES"")
    else:
        s.append(""NO"")
for i in range(n):
    print(s[i])","0.0"
"6d204921-764f-452c-a01d-578e51695a98","q=int(input())
e=[]
for i in range(0,q):
    w=[int(x) for x in input().split()]
    if w[0]+w[1]!=w[2]:
        if w[1] + w[2] != w[0]:
            if w[0] + w[2] != w[1]:
                e.append('NO')
            else:
                e.append('YES')
        else:
            e.append('YES')
    else:
        e.append('YES')
for i in e:
    print(*i,sep='')","0.0"
"6d204921-764f-452c-a01d-578e51695a98","n = int(input())
for i in range(n):
    a, b, c =map(int, input().split())
    if  a==b+c or b==a+c or c==a+b:
        print(""YES"")
    else:
        print(""NO"")","0.0"
"15f19bc8-7be3-4a44-a7b1-fc7505badaed","a=int(input())
for i in range(a):
    g=input()
    g=g.lower()
    if g=='python':
        print('YES')
    else:
        print('NO')","0.0"
"15f19bc8-7be3-4a44-a7b1-fc7505badaed","for i in range(int(input())):
    if input().upper() == 'PYTHON':
        print('YES')
    else:
        print('NO')","0.0"
"15f19bc8-7be3-4a44-a7b1-fc7505badaed","t=int(input())
for i in range(t):
    k=0
    s=input()
    if s[0]=='p' or s[0]=='P':
        k=k+1
    if s[1]=='y' or s[1]=='Y':
        k=k+1
    if s[2]=='t' or s[2]=='T':
        k=k+1
    if s[3]=='h' or s[3]=='H':
        k=k+1
    if s[4]=='o' or s[4]=='O':
        k=k+1
    if s[5]=='n' or s[5]=='N':
        k=k+1
    if k==6:
        print('YES')
    else:
        print('NO')","0.0"
"36d58b20-7fe1-452b-ac10-e1ed680aa6b3","n,k,t,c,d,p,nl,np=map(int,input().split())
t=k*t
d=d*c
a=0
b=0
while(t>=nl and d>=1 and p>=np):
    a+=1
    b+=1
    t-=nl
    d-=1
    p-=np
    if b>n:
        b=1
print(a,b)","0.0"
"6d204921-764f-452c-a01d-578e51695a98","n = int(input())
for i in range(n):
    a,b,c = map(int,input().split())
    if a == b + c or b == a + c or c == a + b:
        print('YES')
    else:
        print('NO')","0.0"
"36d58b20-7fe1-452b-ac10-e1ed680aa6b3","n, k, t, c, d, p, nl, np=map(int,input().split())
cnt=0
g=c*d
j=k*t
while (j>=nl and g>=1 and p>=np):
    j-=nl
    g-=1 
    p-=np
    cnt+=1 
if cnt%n==0:
    print(cnt,n)
else:
    print(cnt,cnt%n)","0.0"
"0024e95a-bf71-4dac-a246-626b5821e403","n1, p1, m1, t1, s1 = map(int, input().split())
n2, p2, m2, t2, s2 = map(int, input().split())
h1=0
h2=0
for i in range(n1):
    h1+=p1+s1+t1*m1
for g in range(n2):
    h2+=p2+s2+t2*m2
if h1==h2:
    print('Draw', h1)
elif h1>h2:
    print('Pascal', h2)
else:
    print('Python', h1)","0.0"
"fa181552-a073-4c25-928c-1a5c48505a6b","n = int(input())
a = list(map(int,input().split()))
ans=[]
last=-1
for i in a:
    if i!=last:
        ans.append(1)
        ans.append(i)
        last=i
    else:
        ans[-2]+=1
print(*ans)","0.0"
"c4a7e827-63de-424a-aec0-aea743d3b5f2","def f():
    k, n = map(int, input().split())
    if k == 1:
        return print(n // k, n)
    if n == 1:
        return print(1, 1)
    print(n // k + 1, n % k)


f()","0.0"
"c4a7e827-63de-424a-aec0-aea743d3b5f2","a=[int(i) for i in input().split()]
b = (a[1] - 1) // a[0] + 1
c = a[1] % a[0]
if c == 0:
    c = a[0]
print(b, end="" "")
print(c)","0.0"
"0024e95a-bf71-4dac-a246-626b5821e403","n1, p1, m1, t1, s1 = map(int, input().split())
n2, p2, m2, t2, s2 = map(int, input().split())
su1 = n1*(p1 + m1*t1 + s1)
su2 = n2*(p2 + m2*t2 + s2)
if su2 == su1:
    print('Draw', su1)
elif su1<su2:
    print('Python', su1)
else:
    print('Pascal', su2)","0.0"
"c4a7e827-63de-424a-aec0-aea743d3b5f2","k, n = map(int,input().split())
from math import * 
a = n/k 
b = n//k
if n%k == 0:
    c = k
else:
    c = n-k*b
print(ceil(a),c)","0.0"
"36d58b20-7fe1-452b-ac10-e1ed680aa6b3","n, k, t, c2, d, c, nl, np = map(int,input().split())
a = k*t
b = c2*d


a1 = a//nl
c1 = c // np



ko = min(a1,b,c1)
if ko%n == 0:
    print(ko,n)
else:
    print(ko,ko%n)","0.0"
"36d58b20-7fe1-452b-ac10-e1ed680aa6b3","a = [int(x) for x in input().split()]
n = a[0]
ncok = a[6]
nman = 1
nkiv = a[7]
cok = a[1] * a[2]
man = a[3] * a[4]
kiv = a[5]
k = 0
while (cok >= ncok) and (man >= nman) and (kiv >= nkiv):
    k += 1
    cok -= ncok
    man -= nman
    kiv -= nkiv
kompl = k
drug = k % n
if drug == 0:
    drug = n
print(kompl, drug)","0.0"
"6d204921-764f-452c-a01d-578e51695a98","def iff(a, b, c):
    if a == b + c or b == c+a or c == b+a:
        return True
    else:
        return False

t = int(input())
for i in range(t):
    a, b, c = list(map(int, input().split()))
    if iff(a, b, c):
        print('YES')
    else:
        print('NO')","0.0"
"13bcf8ad-b139-4bf6-8b16-b99b7cccf65d","t = int(input())
for i in range(t):
    n,k = (int(i) for i in input().split())
    l=0
    while n!=1:
        if n%k==0:
            n=n//k
            l+=1
        else:
            n-=1
            l+=1
    print(l+1)","0.0"
"c4a7e827-63de-424a-aec0-aea743d3b5f2","s = input().split()
n = int(s[1])
k = int(s[0])
if n%k==0:
    c=1
else:
    c = n%k
print(n//(k+1)+1, c)","0.0"
"c4a7e827-63de-424a-aec0-aea743d3b5f2","k,n= map(int,input(). split() )
l=0
if k>n:
    print('1', n)
else:
    l=n%k
    n=n//k+1
    print(n,l)","0.0"
"0024e95a-bf71-4dac-a246-626b5821e403","n1, p1, m1, t1, s1 = map(int, input().split())
n2, p2, m2, t2, s2 = map(int, input().split())
res1 = ((p1 + s1) + (m1 * t1)) * n1
res2 = ((p2 + s2) + (m2 * t2)) * n2
if res1 == res2:
    print(""Draw"", res1)
elif res1 < res2:
    print(""Python"", res1)
else:
    print(""Pascal"", res2)","0.0"
"15f19bc8-7be3-4a44-a7b1-fc7505badaed","q=int(input())
e=[]
for i in range(0,q):
    w=input()
    w=w.lower()
    if w=='python':
        e.append('YES')
    else:
        e.append('NO')
for i in e:
    print(*i,sep='')","0.0"
"c4a7e827-63de-424a-aec0-aea743d3b5f2","k,n=map(int,input().split(' '))
f=n//k+1
s=n%k
print(f,s)","0.0"
"15f19bc8-7be3-4a44-a7b1-fc7505badaed","def ifp(s):
    s = s.lower()
    if s == 'python':
        return True
    else:
        return False

t = int(input())
for i in range(t):
    s = input()
    if ifp(s):
        print('YES')
    else:
        print('NO')","0.0"
"36d58b20-7fe1-452b-ac10-e1ed680aa6b3","n,k,t,c,d,p,nl,np=map(int,input().split())
vm=k*t
vmn=c*d
kk=min(vm//nl,vmn,p//np)
print(kk,end=' ')
if kk%n ==0:
    print(n)
else:
    print(kk%n)","0.0"
"13bcf8ad-b139-4bf6-8b16-b99b7cccf65d","t = int(input())
for i in range(t):
    n,k = (int(i) for i in input().split())
    l=0
    while n!=1:
        if n%k==0:
            n=n//k
            l+=1
        else:
            n-=1
            l+=1
    print(l+1)","0.0"
"36d58b20-7fe1-452b-ac10-e1ed680aa6b3","n, k, t, c, d, p, nl, np=map(int,input().split())
t=t*k
d=c*d
p=p
s=min(t//nl,d,p//np)
print(s,s//n+1)","0.0"
"36d58b20-7fe1-452b-ac10-e1ed680aa6b3","n, k, t, c, d, p, nl, np=map(int, input().split())
a=k*t
b=c*d
q=0
l=0
while a-nl>=0 and b-1>=0 and p-np>=0:
    a-=nl
    b-=1
    p-=np
    q+=1
    l+=1
if l%n!=0:
    print(q, l%n)
else:
    print(q, n)","0.0"
"c4a7e827-63de-424a-aec0-aea743d3b5f2","k,n=map(int,input().split(' '))
f=n//k
s=n%k
if n!=0: f+=1
print(f,s)","0.0"
"fa181552-a073-4c25-928c-1a5c48505a6b","length = int(input())
arr = [int(s) for s in input().split()]
counter = 1
answer = []
for i in range(len(arr) - 1):
    if arr[i] == arr[i + 1]:
        counter += 1
    else:
        answer.append(counter)
        answer.append(arr[i])
        counter = 1

if counter != 0:
    answer.append(counter)
    answer.append(arr[-1])
print(*answer)","0.0"
"0024e95a-bf71-4dac-a246-626b5821e403","n1, p1, m1, t1, s1 = map(int,input().split())
n2, p2, m2, t2, s2 = map(int,input().split())
py = n1*(p1+(m1*t1)+s1)
pa = n2 * (p2+(m2*t2)+s2)
if py>pa:
    print('Pascal', pa)
elif pa>py:
    print('Python',py)
else:
    print('Draw', py)","0.0"
"36d58b20-7fe1-452b-ac10-e1ed680aa6b3","q = [int(x) for x in input().split()]
n = q[0]
k = q[1]
t = q[2]
c = q[3]
d = q[4]
p = q[5]
nl = q[6]
np = q[7]
vj = (k * t)/nl
mangd = c * d
kiwano = p / np
z = int(min(vj, mangd, kiwano))
w = z//n
x = z - w*n
if x == 0:
    x = n
print(z, x)","0.0"
"36d58b20-7fe1-452b-ac10-e1ed680aa6b3","n, k, t, c, d, p, nl, np=map(int,input().split())
t=t*k
d=c*d
p=p
s=min(t//nl,d,p//np)
if s >n:
    print(s,s//n+1)
else:
    print(s, s)","0.0"
"598ac092-b788-4134-867c-8e307d515e67","n = int(input())
a = []
for i in range(n):
    a.append([int(i) for i in input().split()])

m = 0
w = 0
for i in range(n):
    if a[i][1] > m:
        m = a[i][1]
        q = i
for i in range(n):
    if i != q:
        while a[i][1] != m:
            a[i][1] += 1
            w += a[i][0]
print(w)","0.0"
"0024e95a-bf71-4dac-a246-626b5821e403","n1,p1,m1,t1,s1=map(int,input().split())
n2,p2,m2,t2,s2=map(int,input().split())
x1=n1*(p1+m1*t1+s1)
x2=n2*(p2+m2*t2+s2)
if x2<x1:
    print(""Pascal"",x2)
elif x1<x2:
    print('Python',x1)
else:
    print(""Draw"",x1)","0.0"
"0024e95a-bf71-4dac-a246-626b5821e403","def bal(mas):
    banan=mas[0]*(mas[1]+(mas[2]*mas[3])+mas[4])
    return banan
pyzon=list(map(int,input().split()))
pacal=list(map(int,input().split()))
x=bal(pyzon)
y=bal(pacal)
if x>y:
    print('Pascal', y)
elif y>x:
    print('Python',x)
else:
    print('Draw', x)","0.0"
"c4a7e827-63de-424a-aec0-aea743d3b5f2","import math
k, n = map(int, input().split("" ""))
f = math.ceil(n/k)
print(f, (n - (k*(f-1))))","0.0"
"15f19bc8-7be3-4a44-a7b1-fc7505badaed","n=int(input())
a=[]
for i in range(n):
    s=input()
    if (s[0]=='p' or s[0]==""P"") and (s[1]=='y' or s[1]==""Y"") and (s[2]=='T' or s[2]==""t"") and (s[3]=='h' or s[3]==""H"") and (s[4]=='o' or s[4]==""O"") and (s[5]=='n' or s[5]==""N""):
        a.append(""YES"")
    else:
        a.append(""NO"")
for i in range(n):
    print(a[i])","0.0"
"0024e95a-bf71-4dac-a246-626b5821e403","n1, p1, m1, t1, s1=map(int,input().split())
n2, p2, m2, t2, s2=map(int,input().split())
x=n1*(p1+m1*t1+s1)
x2=n2*(p2+m2*t2+s2)
if x<x2:
    print('Python',x)
else:
    print('Pascal',x2)","0.0"
"13bcf8ad-b139-4bf6-8b16-b99b7cccf65d","t = int(input())

for i in range(t):
    n, k = map(int, input().split())
    counter = 0
    while n != 0:
        if n % k == 0:
            n //= k
            counter += 1
        else:
            n -= 1
            counter += 1
    print(counter)","0.0"
"13bcf8ad-b139-4bf6-8b16-b99b7cccf65d","t = int(input())

for i in range(t):
    n, k = map(int, input().split())
    counter = 0
    while n != 0:
        if n % k == 0:
            n //= k
            counter += 1
        else:
            n -= 1
            counter += 1
    print(counter)","0.0"
"6d204921-764f-452c-a01d-578e51695a98","d = int (input())
k = []
for i in range (0, d):
    a, b, c = map(int, input().split())
    if (a == b + c) or  (b == a + c) or  (c == a + b) and (a>=0) and (b>=0) and (c>=0):
        k.append('YES')
    else:
        k.append('NO')
for i in range (0, d):
    print (k[i])","0.0"
"0024e95a-bf71-4dac-a246-626b5821e403","n1, p1, m1, t1, s1=map(int,input().split())
n2, p2, m2, t2, s2=map(int,input().split())
x=n1*(p1+m1*t1+s1)
x2=n2*(p2+m2*t2+s2)
if x<x2:
    print('Python',x)
elif x==x2:
    print('Draw',x)
elif x>x2:
    print('Pascal',x2)","0.0"
"36d58b20-7fe1-452b-ac10-e1ed680aa6b3","n, k, t, c, d, p, nl, np= list(map(int, input().split()))
m = []
kt = k * t
cd = c * d

m.append(kt // nl)
m.append(cd)
m.append(p // np)

if min(m) % n != 0:
    print(min(m), min(m) % n)
else:
    print(min(m), n)","0.0"
"c4a7e827-63de-424a-aec0-aea743d3b5f2","y = input().split()
k = int(y[0])
n = int(y[1])
j = 1
if n <= k:
    print(1, n)
else:
    while n > k:
        n -= k
        j += 1
    print(j, n)","0.0"
"fa181552-a073-4c25-928c-1a5c48505a6b","n = int(input())
a = list(map(int, input().split()))
b = []
ct = 0
r = a[0]
for i in a:
    if i != r:
        b.append(ct)
        b.append(r)
        r = i
        ct = 1
    else:
        ct += 1
b.append(ct)
b.append(r)
print(*b)","0.0"
"0024e95a-bf71-4dac-a246-626b5821e403","n1, p1, m1, t1, s1=map(int, input().split())
n2, p2, m2, t2, s2=map(int, input().split())
a=n1*p1+n1*m1*t1+n1*s1
b=n2*p2+n2*m2*t2+n2*s2
if a<b:
    print('Python', a)
elif b<a:
    print('Pascal', b)
else:
    print('Draw', a)","0.0"
"13bcf8ad-b139-4bf6-8b16-b99b7cccf65d","from functools import lru_cache


@lru_cache(maxsize=None)
def uwu(x, y, ans):
    if not x:
        return ans
    now = uwu(x // y, y, ans + 1) if not x % y else 324342334204334
    return min(uwu(x - 1, y, ans + 1), now)


def f():
    for _ in range(int(input())):
        n, k = map(int, input().split())
        print(uwu(n, k, 0))


f()","0.0"
"0024e95a-bf71-4dac-a246-626b5821e403","n1, p1, m1, t1, s1=map(int,input().split())
n2, p2, m2, t2, s2 =map(int,input().split())
f1=n1*(p1+m1*t1+s1)
f2=n2*(p2+m2*t2+s2)
if f1<f2:
    print('Python',f1)
elif f2<f1:
    print('Pascal',f2)
else:
    print('Draw',f1)","0.0"
"36d58b20-7fe1-452b-ac10-e1ed680aa6b3","n, k, t, c, d, p, nl, np=map(int, input(). split())
f=k*t
e=c*d
j=0
while f>=nl and e>0 and p>np:
    j=j+1
    f=f-nl
    e=e-1
    p=p-np
q=j%n
if q==0:
    q=n
print(j, q)","0.0"
"6d204921-764f-452c-a01d-578e51695a98","n = int(input())
for i in range(n):
    i = input().split()
    n -= 1
    a = int(i[0])
    b = int(i[1])
    c = int(i[2])
    if a + b == c or b + c == a or a + c == b:
        print('YES')
    else:
        print('NO')","0.0"
"15f19bc8-7be3-4a44-a7b1-fc7505badaed","n = int(input())
for i in range(n):
    a = input()
    a = str(a.lower())
    w = 0
    q= ['p','y','t','h','o','n']
    for i in range(len(a)):
        for j in range(len(q)):
            if a[i] == q[j]:
                q.pop(j)
                w +=1
                break
    if w == 6:
        print('YES')
    else:
        print('NO')","0.0"
"6d204921-764f-452c-a01d-578e51695a98","t = int(input())
for i in range(t):
    a,b,c = map(int, input().split("" ""))
    if a==b+c or b ==a+c or c==a+b:
        print(""YES"")
    else:
        print(""NO"")","0.0"
"13bcf8ad-b139-4bf6-8b16-b99b7cccf65d","t = int(input())
for _ in range(t):
    n , k =map(int,input().split())
    ans=0
    while (n!=0):
        ans+=1
        if (n%k==0):
            n=n//k
        else:
            n-=1
    print(ans)","0.0"
"13bcf8ad-b139-4bf6-8b16-b99b7cccf65d","t = int(input())
for _ in range(t):
    n , k =map(int,input().split())
    ans=0
    while (n!=0):
        ans+=1
        if (n%k==0):
            n=n//k
        else:
            n-=1
    print(ans)","0.0"
"36d58b20-7fe1-452b-ac10-e1ed680aa6b3","s=[int(i) for i in input().split()]
n,k,t,c,d,p,nl,np=s[0],s[1],s[2],s[3],s[4],s[5],s[6],s[7]
mar=k*t
man=c*d
mya=p
su=0
while mar>0 and man>0 and mya>0:
    mar-=nl
    man-=1
    mya-=np
    su+=1
if mar<0 or man<0 or mya<0:
    su-=1
print(su,(su-1)%n+1)","0.0"
"0024e95a-bf71-4dac-a246-626b5821e403","pi = [int(x) for x in input().split()]
n1 = pi[0]
beg1 = pi[1]
mah1 = pi[2]
bros1 = pi[3]
beeg1 = pi[4]
pit = n1 * (beg1 + mah1*bros1 + beeg1)
pa = [int(x) for x in input().split()]
n2 = pa[0]
beg2 = pa[1]
mah2 = pa[2]
bros2 = pa[3]
beeg2 = pa[4]
pas = n2 * (beg2 + mah2*bros2 + beeg2)
if pit == pas:
    print('Draw', n1 * (beg1 + mah1*bros1 + beeg1))
elif pit < pas:
    print('Python', n1 * (beg1 + mah1*bros1 + beeg1))
elif pas < pit:
    print('Pascal', n2 * (beg2 + mah2*bros2 + beeg2))","0.0"
"c4a7e827-63de-424a-aec0-aea743d3b5f2","k,n=map(int,input().split())
c=1
if k>n:
    print('1',n)
if k<n:
    s=n-k
    c+=1
    if s>k:
        s=s-k
        c+=1

    print(c,s)","0.0"
"c4a7e827-63de-424a-aec0-aea743d3b5f2","k, n = map(int,input().split())
if k > n:
    print(1, n)
elif k < n:
    a = (n//k)+1
    if n%k == 0:
        b = 1
    else:
        b = n%k
    print(a, b)","0.0"
"36d58b20-7fe1-452b-ac10-e1ed680aa6b3","n, k, t, c, d, p, nl, np = [int(x) for x in input().split()]
res = min((k*t)//nl, c*d, p//np)
print(res, (res-1)%3+1)","0.0"
"36d58b20-7fe1-452b-ac10-e1ed680aa6b3","n, k, t, c, d, p, nl, np = [int(x) for x in input().split()]
res = min((k*t)//nl, c*d, p//np)
print(res, (res-1)%n+1)","0.0"
"13bcf8ad-b139-4bf6-8b16-b99b7cccf65d","t = int(input())
for _ in range(t):
    n , k =map(int,input().split())
    ans=0
    while (n!=0):
        if (n%k==0):
            n=n//k
            ans+=1
        else:
            t=n%k
            ans+=t
            n-=t
    print(ans)","0.0"
"13bcf8ad-b139-4bf6-8b16-b99b7cccf65d","res = 0
for i in range(int(input())):
    n,k = [int(i) for i in input().split()]
    while n != 0:
        if n % k == 0:
            n //=k
            res += 1
        else:
            n -= 1
            res += 1
    print(res)
    res = 0","0.0"
"0024e95a-bf71-4dac-a246-626b5821e403","n1, p1, m1, t1, s1 = list(map(int, input().split()))
n2, p2, m2, t2, s2 = list(map(int, input().split()))

python = n1 * (p1 + m1 * t1 + s1)
pascal = n2 * (p2 + m2 * t2 + s2)

if python < pascal:
    print('Python', python)
elif pascal < python:
    print('Pascal', pascal)
else:
    print('Draw', python)","0.0"
"0024e95a-bf71-4dac-a246-626b5821e403","n1, p1, m1, t1, s1 = map(int,input().split())
n2, p2, m2, t2, s2 = map(int,input().split())
if (p1 + (m1 * t1) + s1)*n1 > (p2 + (m2 * t2) + s2)*n2:
    print('Pascal',(p2 + (m2 * t2) + s2)*n2)
else:
    print('Python',(p1 + (m1 * t1) + s1)*n1)","0.0"
"36d58b20-7fe1-452b-ac10-e1ed680aa6b3","n, k, t, c, d, p, nl, np = map(int, input().split())
juice = k * t
mango = c * d
kivano = p
counter = 0

while juice >= nl and mango != 0 and kivano >= np:
    counter += 1
    juice -= nl
    mango -= 1
    kivano -= np

if counter % n == 0:
    print(counter, n)
else:
    print(counter, counter % n)","0.0"
"c4a7e827-63de-424a-aec0-aea743d3b5f2","k, n = map(int,input().split())
if k > n:
    print(1, n)
elif k < n:
    a = (n//k)+1
    if n%k == 0:
        b = 1
    else:
        b = n%k
    print(a, b)
else:
    print(2, 1)","0.0"
"15f19bc8-7be3-4a44-a7b1-fc7505badaed","a = int(input())
k = ['p', 'y', 't', 'h', 'o', 'n']
c = []
for i in range (0, a):
    b = input()
    if list(b.lower())==k:
        c.append('YES')
    else:
        c.append('NO')
for i in range (0, a):
    print (c[i])","0.0"
"15f19bc8-7be3-4a44-a7b1-fc7505badaed","t = int(input())
for i in range(t):
    a = input()
    if a.lower()==""python"":
        print(""YES"")
    else:
        print(""NO"")","0.0"
"0024e95a-bf71-4dac-a246-626b5821e403","n1, p1, m1, t1, s1 = map(int,input().split())
n2, p2, m2, t2, s2 = map(int,input().split())
if (p1 + (m1 * t1) + s1)*n1 > (p2 + (m2 * t2) + s2)*n2:
    print('Pascal',(p2 + (m2 * t2) + s2)*n2)
elif (p1 + (m1 * t1) + s1)*n1 < (p2 + (m2 * t2) + s2)*n2:
    print('Python',(p1 + (m1 * t1) + s1)*n1)
else:
    print('Draw',(p1 + (m1 * t1) + s1)*n1)","0.0"
"fa181552-a073-4c25-928c-1a5c48505a6b","n=int(input())
a=list(map(int,input().split()))
a.append(-1)
k=1
st=''
for i in range(n):
    if a[i]==a[i+1]:
        k+=1
    else:
        st+=str(k)+' '+str(a[i])+' '
        k=1

print(st)","0.0"
"0024e95a-bf71-4dac-a246-626b5821e403","n1, p1, m1, t1, s1 =map(int,input().split())
n2, p2, m2, t2, s2 =map(int,input().split())
vv=p1+m1*t1+s1
v2=p2+m2*t2+s2
if vv*n1>v2*n2:
    print('Pascal', v2*n2)
elif vv*n1<v2*n2:
    print('Python',vv*n1)
else:
    print('Draw',vv*n1)","0.0"
"fa181552-a073-4c25-928c-1a5c48505a6b","d1234 = int(input())
a = list(map(int,input().split()))
a1 = []
a2 = []
c = 0
ch = a[0]
a.append(-1)
a3 = []
for i in range(d1234+1):
    if a[i]==ch:
        c += 1
    else:
        a1.append(c)
        a2.append(ch)
        ch = a[i]
        c = 1
for i in range(len(a2)):
    a3.append(a1[i])
    a3.append(a2[i])
print(*a3)","0.0"
"0024e95a-bf71-4dac-a246-626b5821e403","q = [int(x) for x in input().split()]
n1 = q[0]
p1 = q[1]
m1 = q[2]
t1 = q[3]
s1 = q[4]
w = [int(x) for x in input().split()]
n2 = w[0]
p2 = w[1]
m2 = w[2]
t2 = w[3]
s2 = w[4]

tpy = n1 * (p1 + t1*m1 + s1)
tpa = n2 * (p2 + t2*m2 + s2)

if (tpy > tpa):
    print(""Pascal"", tpa)
elif (tpa > tpy):
    print(""Pythonl"", tpy)
else:
    print(""Draw"", tpy)","0.0"
"36d58b20-7fe1-452b-ac10-e1ed680aa6b3","n, k, t, c, d, p, nl, np = map(int, input().split())
q = 0
kt = k * t
cd = c * d
while cd > 0 and p > 0 and kt > 0:
    q += 1
    kt -= nl
    cd -= 1
    p -= np
if cd < 0 or p < 0 or kt < 0:
    q -= 1
w = q % n
if w == 0:
    w = 3
print(q, w)","0.0"
"9e91eca3-2074-49fc-a46e-35630d7d0e53","n = int(input())
a = list(map(int,input().split()))
sum1=0
sum2=0
for i in a:
    if i>0:
        sum1+=i
    else:
        sum2-=i
print(sum2+sum1)","0.0"
"36d58b20-7fe1-452b-ac10-e1ed680aa6b3","def f():
    n, k, t, c, d, p, nl, np = map(int, input().split())
    uwu1 = k * t
    uwu2 = c * d
    uwu3 = p
    ans = min((uwu1 // nl), uwu2, uwu3 // np)
    print(ans, ans//n + 1)


f()","0.0"
"36d58b20-7fe1-452b-ac10-e1ed680aa6b3","n, k, t, c, d, p, nl, np = map(int, input().split())
q = 0
kt = k * t
cd = c * d
while cd > 0 and p > 0 and kt > 0:
    q += 1
    kt -= nl
    cd -= 1
    p -= np
if cd < 0 or p < 0 or kt < 0:
    q -= 1
w = q % n
if w == 0 and q != 0:
    w = 3
print(q, w)","0.0"
"13bcf8ad-b139-4bf6-8b16-b99b7cccf65d","res = 0
for i in range(int(input())):
    n, k = [int(i) for i in input().split()]
    while n != 0:
        if n % k == 0:
            n //=k
            res += 1
        else:
            r = n%k
            n -= r
            res += r
    print(res)
    res = 0","0.0"
"fa181552-a073-4c25-928c-1a5c48505a6b","n=int(input())
a=list(map(int, input().split()))
b=[]
k=1
for i in range(len(a)):
    if i!=0:
        if a[i]==a[i-1]:
            k+=1
        else:
            b.append(k)
            b.append(a[i-1])
            k=1
if k!=1:
    b.append(k)
    b.append(a[-1])
print(*b)","0.0"
"c4a7e827-63de-424a-aec0-aea743d3b5f2","k, n = map(int, input().split())
if k == n:
    print(1, k)
else:
    print(n // k + 1, n % k)","0.0"
"13bcf8ad-b139-4bf6-8b16-b99b7cccf65d","t = int(input())
counter = 0
for i in range(t):
    n,k = map(int,input().split())
    while n>0:
        if n % k == 0:
            while n % k == 0:
                n = n // k
                counter += 1
        else:
            while n % k != 0:
                n -= 1
                counter += 1
    print(counter)
    counter = 0","0.0"
"c4a7e827-63de-424a-aec0-aea743d3b5f2","k,n=map(int,input().split())
c=1
if k>n:
    print('1',n)
if k<n:
    s=n-k
    c+=1
    if s>k:
        s=s-k
        c+=1
    if s==k:
        s=s-k
        c+=1
    print(c,s)","0.0"
"36d58b20-7fe1-452b-ac10-e1ed680aa6b3","n, k, t, c, d, p, nl, np = map(int, input().split())
q = 0
kt = k * t
cd = c * d
while cd > 0 and p > 0 and kt > 0:
    q += 1
    kt -= nl
    cd -= 1
    p -= np
if cd < 0 or p < 0 or kt < 0:
    q -= 1
w = q % n
if w == 0 and q != 0:
    w = n
print(q, w)","0.0"
"0024e95a-bf71-4dac-a246-626b5821e403","py=[int(i) for i in input().split()]
pa=[int(i) for i in input().split()]
s1=py[0]*(py[1]+py[2]*py[3]+py[4])
s2=pa[0]*(pa[1]+pa[2]*pa[3]+pa[4])
if s1<s2:
    print(""Python"",s1,)
elif s2<s1:
    print(""Pascal"",s2,)
else:
    print(""Draw"", s1)","0.0"
"13bcf8ad-b139-4bf6-8b16-b99b7cccf65d","n=int(input())
for i in range(n):
    s=list(map(int, input().split()))
    count=0
    while s[0] != 0:
        if s[0] % s[1] == 0:
            count+=1
            s[0]//=s[1]
        else:
            count+=1
            s[0]-=1
    print(count)","0.0"
"0024e95a-bf71-4dac-a246-626b5821e403","n1, p1, m1, t1, s1 = [int(x) for x in input().split()]
n2, p2, m2, t2, s2 = [int(x) for x in input().split()]
res1 = n1 * (p1 + s1 + m1 * t1)
res2 = n2 * (p2 + s2 + m2 * t2)
if res1 < res2:
    print('Python', res1)
else:
    print('Pascal', res2)","0.0"
"36d58b20-7fe1-452b-ac10-e1ed680aa6b3","a=[int(i) for i in input().split()]
b=a[1]*a[2]//a[6]
c=a[3]*a[4]//1
d=a[5]//a[7]
r=0
if b<c:
    r=b
else:
    r=c
if r>d:
    r=d
print(r, end="" "")
r=r%a[0]
if r==0:
    r=a[0]
print(r)","0.0"
"13bcf8ad-b139-4bf6-8b16-b99b7cccf65d","t = int(input())
counter = 0
for i in range(t):
    n,k = map(int,input().split())
    while n>0:
        while n % k == 0:
            n = n // k
            counter += 1
        n -= 1
        counter += 1
    print(counter)
    counter = 0","0.0"
"0024e95a-bf71-4dac-a246-626b5821e403","n1, p1, m1, t1, s1 = [int(x) for x in input().split()]
n2, p2, m2, t2, s2 = [int(x) for x in input().split()]
res1 = n1 * (p1 + s1 + m1 * t1)
res2 = n2 * (p2 + s2 + m2 * t2)
if res1 < res2:
    print('Python', res1)
elif res1 == res2:
    print(draw, res1)
else:
    print('Pascal', res2)","0.0"
"0024e95a-bf71-4dac-a246-626b5821e403","n1, p1, m1, t1, s1 = [int(x) for x in input().split()]
n2, p2, m2, t2, s2 = [int(x) for x in input().split()]
res1 = n1 * (p1 + s1 + m1 * t1)
res2 = n2 * (p2 + s2 + m2 * t2)
if res1 < res2:
    print('Python', res1)
elif res1 == res2:
    print(draw, res1)
else:
    print('Pascal', res2)","0.0"
"13bcf8ad-b139-4bf6-8b16-b99b7cccf65d","n=int(input())
for i in range(n):
    s=list(map(int, input().split()))
    count=0
    while s[0] != 0:
        if s[0] % s[1] == 0:
            count+=1
            s[0]//=s[1]
        else:
            count += s[0]%s[1]
            s[0]=s[0]-(s[0]%s[1])
    print(count)","0.0"
"0024e95a-bf71-4dac-a246-626b5821e403","n1, p1, m1, t1, s1 = [int(x) for x in input().split()]
n2, p2, m2, t2, s2 = [int(x) for x in input().split()]
res1 = n1 * (p1 + s1 + m1 * t1)
res2 = n2 * (p2 + s2 + m2 * t2)
if res1 < res2:
    print('Python', res1)
elif res1 == res2:
    print(draw, res1)
else:
    print('Pascal', res2)","0.0"
"0024e95a-bf71-4dac-a246-626b5821e403","n1, p1, m1, t1, s1 = [int(x) for x in input().split()]
n2, p2, m2, t2, s2 = [int(x) for x in input().split()]
res1 = n1 * (p1 + s1 + m1 * t1)
res2 = n2 * (p2 + s2 + m2 * t2)
if res1 < res2:
    print('Python', res1)
elif res1 == res2:
    print('Draw', res1)
else:
    print('Pascal', res2)","0.0"
"c4a7e827-63de-424a-aec0-aea743d3b5f2","k, n = map(int,input().split())
if k > n:
    print(1, n)
elif k < n:
    a = (n//k)+1
    if n%k == 0:
        b = 1
    else:
        b = n%k
    print(a, b)
else:
    print(1, n)","0.0"
"c4a7e827-63de-424a-aec0-aea743d3b5f2","k,n = map(int,input().split())
if not n%k:
  w=n//k
  a=k
else:
  w = n//k + 1
  a = n%k
print(w,a)","0.0"
"15f19bc8-7be3-4a44-a7b1-fc7505badaed","n = int(input())
g = 'python'
for i in range(n):
    s = input()
    if s.lower() == g:
        print('YES')
    else:
        print('NO')
    n -= 1","0.0"
"36d58b20-7fe1-452b-ac10-e1ed680aa6b3","n, k, t, c, d, p, nl, np=map(int, input(). split())
f=k*t
e=c*d
j=0
while f>=nl and e>0 and p>np:
    j=j+1
    f=f-nl
    e=e-1
    p=p-np
if j>n:
    q=j-j//n-1
elif j==n:
    q=n
elif j<n:
    q=j
print(j, q)","0.0"
"9e91eca3-2074-49fc-a46e-35630d7d0e53","n = int(input())
s = 0
m = [int(x) for x in input().split()]
for i in m:
    if i < 0:
        s+=-i
    else:
        s+=i
print(s)","0.0"
"9e91eca3-2074-49fc-a46e-35630d7d0e53","n = int(input())
s = 0
a = [int(s) for s in input().split()]
for i in range(len(a)):
    s+=abs(a[i])
print(s)","0.0"
"36d58b20-7fe1-452b-ac10-e1ed680aa6b3","n, k, t, c, d, p, nl, np=map(int, input().split())
A=k*t//nl
B=c*d
C=p//np
D=min(A, B, C)
E=D%n
if E==0:
    E=n
print(D, E)","0.0"
"13bcf8ad-b139-4bf6-8b16-b99b7cccf65d","t = int(input())
for i in range(t):
    n, k = map(int, input().split())
    ct = 0
    while n != 0:
        if n == 1:
            ct += 1
            n -= 1
        else:
            if n % k == 0:
                n //= k
                ct += 1
            else:
                n -= 1
                ct += 1
    print(ct)","0.0"
"fa181552-a073-4c25-928c-1a5c48505a6b","n=int(input())
a=[int(i) for i in input().split()]
s=[["""",0]]
while a!=[]:
    t=a.pop()
    if s[-1][0]==t:
        s[-1][1]+=1
    else:
        s.append([t,1])
s=s[::-1]
for i in s[:-1]:
    print(i[1],i[0],end="" "")","0.0"
"0024e95a-bf71-4dac-a246-626b5821e403","a=[int(i) for i in input().split()]
b=[int(i) for i in input().split()]
c=a[0]*a[1]+a[0]*a[2]*a[3]+a[0]*a[4]
d=b[0]*b[1]+b[0]*b[2]*b[3]+b[0]*b[4]
if c<d:
    print(""Python "", c)
elif c==d:
    print(""Draw"", c)
else:
    print(""Pascal"", d)","0.0"
"36d58b20-7fe1-452b-ac10-e1ed680aa6b3","n, k, t, c, d, p, nl, np = list(map(int, input().split()))
t = t*k
c = c*d
re = min(c, t//nl, p//np)
re %= n
if re == 0:
    re = n
print(min(c, t//nl, p//np), re)","0.0"
"13bcf8ad-b139-4bf6-8b16-b99b7cccf65d","q=int(input())
e=[]
r=0
t=0
for i in range(0,q):
    w=[int(x) for x in input().split()]
    t=w[0]
    while t!=0:
        if t%w[1]==0:
            r=r+1
            t=t//w[1]
        else:
            r=r+1
            t = t-1
    e.append(r)
    r=0
for i in e:
    print(i,sep='')","0.0"
"fa181552-a073-4c25-928c-1a5c48505a6b","def f():
    n = int(input())
    a = list(map(int, input().split()))
    now, nowel = 1, a[0]
    for i in a[1:]:
        if i != nowel:
            print(now, nowel, end="" "")
            now, nowel = 1, i
        else:
            now += 1
    if now:
        print(now, nowel, end="" "")


f()","0.0"
"fa181552-a073-4c25-928c-1a5c48505a6b","n=int(input())
h=[]
otvet=[]
mas=list(map(int,input().split()))
for i in range(n):
    if i!=0:
        if mas[i]==mas[i-1]:
            bara=i
        else:
            h+=[i]
    if i==0:
        h+=[0]
for i in range(len(h)):
    if i!=len(h)-1:
        otvet+=[mas[h[i]:h[i+1]]]
    else:
        otvet+=[mas[h[i]:]]
otvetrue=[]
for i in otvet:
    otvetrue+=[len(i)]
    otvetrue+=[i[0]]
print(*otvetrue)","0.0"
"36d58b20-7fe1-452b-ac10-e1ed680aa6b3","n,k,t,c,d,p,nl,np=map(int,input().split())
litr=k*t//nl
dolki=c*d//1
gramm=p//np
count=min(litr,dolki,gramm)
friend=count
while friend>n:
    friend-=n
print(count,friend)","0.0"
"0024e95a-bf71-4dac-a246-626b5821e403","n1, p1, m1, t1, s1 = map(int, input().split())
n2, p2, m2, t2, s2 = map(int, input().split())
q1 = n1 * (p1 + s1 + m1 * t1)
q2 = n2 * (p2 + s2 + m2 * t2)
if q1 == q2:
    print(""Draw"", q1)
elif q1 > q2:
    print(""Pascal"", q2)
else:
    print(""Python"", q1)","0.0"
"fa181552-a073-4c25-928c-1a5c48505a6b","n=int(input())
s=list(map(int, input().split()))+['dasfsdfsdfsd']
s1=[]
i=0
while i < len(s)-1:
    count=1
    while s[i] == s[i+1]:
        count += 1
        i += 1
    s1.append(count)
    s1.append(s[i])
    i+=1
print(*s1)","0.0"
"9e91eca3-2074-49fc-a46e-35630d7d0e53","n = int(input())
mas = list(map(int, input().split()))
mr = -99999999999999
for a in range(len(mas)):
    s1 = sum(mas[:a])
    s2 = sum(mas[a:])
    mr = max(mr, abs(s2-s1))
print(mr)","0.0"
"c4a7e827-63de-424a-aec0-aea743d3b5f2","k, n = map(int,input().split())
if k > n:
    print(1, n)
elif k < n:
    a = (n//k)+1
    if n%k == 0:
        b = 1
    else:
        b = n%k
    print(a, b)
else:
    print(2, 1)","0.0"
"0024e95a-bf71-4dac-a246-626b5821e403","n1,p1,m1,t1,s1=map(int,input().split())
n2,p2,m2,t2,s2=map(int,input().split())
a1=p1+t1*m1+s1
b1=a1*n1
a2=p2+t2*m2+s2
b2=a2*n2    
if b1<b2:
    print(""Python"",b1)
elif b2<b1:
    print(""Pascal"",b2)
elif b1==b2:
    print(""Draw"",b1)","0.0"
"36d58b20-7fe1-452b-ac10-e1ed680aa6b3","n, k, t, c, d, p, nl, np = map(int, input().split())

k = k*t # ÐºÐ¾Ð»Ð¸ÑÐµÑÑÐ²Ð¾ Ð¼Ð¼ Ð¼Ð°ÑÐ°ÐºÑÑ
c = c*d # dolki
a = min(k/nl, c, p/np)
print (int(a), int(a//n) + 1)","0.0"
"36d58b20-7fe1-452b-ac10-e1ed680aa6b3","a,b,c,d,e,f,g,q = map(int,input().split())
b *= c
e*=d
if min(b//g,e,f//q) == b//g:
    w = b//g
elif min(b//g,e,f//q) == e:
    w = e
else:
    w = f//q
if w% a != 0:
    print(w,w%a)
else:
    print(w,a)","0.0"
"9e91eca3-2074-49fc-a46e-35630d7d0e53","n = int(input())
mas = list(map(int, input().split()))
mr = -99999999999999
for a in range(len(mas)+1):
    s1 = sum(mas[:a])
    s2 = sum(mas[a:])
    mr = max(mr, abs(s2-s1))
print(mr)","0.0"
"c4a7e827-63de-424a-aec0-aea743d3b5f2","k,n = map(int, input().split())
a = 1
b = 0
if n > k:
    a = (n // k)+1
    b = n - (k*(n//k))
    print(round(a),b)
elif k>n:
    print(1,n)
else:
    print(1,n)","0.0"
"36d58b20-7fe1-452b-ac10-e1ed680aa6b3","n, k, t, c, d, p, nl, np=map(int, input().split())
v = (p//np)
b = (c*d//1)
m = (k*t//nl)
print( min(v, b, m), (min(v, b, m)-1)%n+1)","0.0"
"13bcf8ad-b139-4bf6-8b16-b99b7cccf65d","import time
t=int(input())
s=[[int(i) for i in input().split()] for j in range(t)]
for i in s:
    n=i[0]
    k=i[1]
    s1=0
    while n!=0:
        if n%k==0:
            n//=k
            s1+=1
        else:
            n-=1
            s1+=1
    print(s1)","0.0"
"c4a7e827-63de-424a-aec0-aea743d3b5f2","k,n = map(int, input().split())
a = 1
b = 0
if n > k:
    a = (n // k)+1
    b = n - (k*(n//k))
    print(round(a),b)
elif k>n:
    print(1,n)
else:
    print(2,0)","0.0"
"0024e95a-bf71-4dac-a246-626b5821e403","n1,p1,m1,t1,s1 = map(int, input().split("" ""))
n2,p2,m2,t2,s2 = map(int, input().split("" ""))
t1 = n1*(p1 + m1*t1 + s1)
t2 = n2*(p2 + m2*t2 + s2)
if t1<t2:
    print(""Python"", t1)
elif t1>t2:
    print(""Pascal"", t2)
else:
    print(""Draw"", t1)","0.0"
"598ac092-b788-4134-867c-8e307d515e67","n = int(input())
a=[[] for i in range(n)]
m = [0 for i in range(n)]
for i in range(n):
    a[i]= list(map(int,input().split()))
    for j in range(1,a[i][0]+1):
        m[i]=max(m[i],a[i][j])
ans=0
maxim=max(m)
for i in range(n):
    ans+=a[i][0]*(maxim-m[i])
print(ans)","0.0"
"0024e95a-bf71-4dac-a246-626b5821e403","n1, p1, m1, t1, s1 = list(map(int, input().split()))
n2, p2, m2, t2, s2 = list(map(int, input().split()))
python = n1*(p1+s1+m1*t1)
fyy = n2*(p2+s2+m2*t2)
print('Python' if min(python, fyy) == python else 'Pascal', min(python, fyy))","0.0"
"c4a7e827-63de-424a-aec0-aea743d3b5f2","k, n = map(int, input().split())
print((n // k)+1, n % k)","0.0"
"13bcf8ad-b139-4bf6-8b16-b99b7cccf65d","q=int(input())
e=[]
r=0
t=0
for i in range(0,q):
    w=[int(x) for x in input().split()]
    t=w[0]
    while t!=0:
        if t%w[1]==0:
            r=r+1
            t=t//w[1]
        else:
            r=r+t-(t//w[1]*w[1])
            t = t//w[1]*w[1]
    e.append(r)
    r=0
for i in e:
    print(i,sep='')","0.0"
"36d58b20-7fe1-452b-ac10-e1ed680aa6b3","n,k,t,c,d,p,nl,np = map(int,input().split())
sumk = k*t
sumc = c*d
counter = 0
guest = 0
while sumk>nl and sumc>0 and p>np:
    sumk -= nl
    sumc -= 1
    p -= np
    counter += 1
if counter == 0:
    print(1,1)
else:
    guest = counter % n
    if guest == 0:
        guest = n
    print(counter,guest)","0.0"
"0024e95a-bf71-4dac-a246-626b5821e403","n1, p1, m1, t1, s1 = list(map(int, input().split()))
n2, p2, m2, t2, s2 = list(map(int, input().split()))
python = n1*(p1+s1+m1*t1)
fyy = n2*(p2+s2+m2*t2)
if python == fyy:
    print('Draw', python)
else:
    print('Python' if min(python, fyy) == python else 'Pascal', min(python, fyy))","0.0"
"13bcf8ad-b139-4bf6-8b16-b99b7cccf65d","a = int(input())
g = 0
b = []
for i in range(a):
    i = input().split()
    n = int(i[0])
    k = int(i[1])
    while n != 0:
        if n % k == 0:
            n //= k
            g += 1
        else:
            n -= 1
            g += 1
    b.append(g)
    g = 0
for i in b:
    print(i)","0.0"
"fa181552-a073-4c25-928c-1a5c48505a6b","input()
l, a, c, res = [int(x) for x in input().split()], -1, 0, []
for i in l:
    if i == a:
        c += 1
    else:
        res.extend([str(c+1), str(a)])
        c = 0
    a = i
else:
    res.extend([str(c+1), str(a)])
print(' '.join(res[2:]))","0.0"
"6d204921-764f-452c-a01d-578e51695a98","a=int(input())
for i in range(a):
    a,b,c=map(int,input().split(' '))
    if a+b==c or a+c==b or b+c==a:print('YES')
    else:print('NO')","0.0"
"36d58b20-7fe1-452b-ac10-e1ed680aa6b3","n, k, t, c, d, p, nl, np = map(int, input().split())

k = k*t # ÐºÐ¾Ð»Ð¸ÑÐµÑÑÐ²Ð¾ Ð¼Ð¼ Ð¼Ð°ÑÐ°ÐºÑÑ
c = c*d # dolki
a = min(k/nl, c, p/np)

if n == 0:
    print (0, 0)
else:
    print (int(a), int(a//n) + 1)","0.0"
"c4a7e827-63de-424a-aec0-aea743d3b5f2","k, n = map(int, input().split())

g1 = 1
g2 = k
page = 1
while True:
    if n >= g1 and n <= g2:
        s = n - g1 + 1
        print(page, s)
        break

    g1 = k * page + 1
    page += 1
    g2 = k * page","0.0"
"fa181552-a073-4c25-928c-1a5c48505a6b","n = int(input())
a = [int(i) for i in input().split()]
q = a[0]
w = 0
b = []
for i in range(n):
    if q == a[i]:
        w += 1
    else:
        b.append(w)
        b.append(q)
        w = 1
        q = a[i]
b.append(w)
b.append(q)
print(*b)","0.0"
"36d58b20-7fe1-452b-ac10-e1ed680aa6b3","n,k,t,c,d,p,nl,np = map(int,input().split())
sumk = k*t
sumc = c*d
counter = 0
guest = 0
while sumk>=nl and sumc>=0 and p>=np:
    sumk -= nl
    sumc -= 1
    p -= np
    counter += 1
guest = counter % n
if guest == 0:
    guest = n
print(counter,guest)","0.0"
"15f19bc8-7be3-4a44-a7b1-fc7505badaed","t=int(input())
for i in range ( t):
    s =input()
    if (s[0]==""p"" or s[0]==""P"" ) and (s[1]==""y"" or s[1]==""Y"") and (s[2]==""t"" or s[2]==""T"" )and  (s[3]==""h"" or s[3]==""H"" ) and (s[4]==""o"" or s[4]==""O"" )and (s[5]==""n"" or s[5]==""N""):
        print(""YES"")
    else:
        print(""NO"")","0.0"
"13bcf8ad-b139-4bf6-8b16-b99b7cccf65d","p=int(input())
for i in range(p):
    n, k= map(int, input().split())
    t=0
    while n!=0:
        if n%k==0:
            n=n//k
        else:
            n=n-1
        t+=1
    print(t)","0.0"
"0024e95a-bf71-4dac-a246-626b5821e403","a,b,c,d,e = map(int,input().split())
f,g,q,w,r = map(int,input().split())
s = (c * d + e+b)*a
h = (q*w+r+g)*f
if min(s,h) == s and s != h:
    print('Python',s)
elif min(s,h) ==h and s != h:
    print('Pascal',h)
else:
    print('Draw',h)","0.0"
"0024e95a-bf71-4dac-a246-626b5821e403","n1,p1,m1,t1,s1=map(int,input().split())
n2,p2,m2,t2,s2=map(int,input().split())
x1=(m1*t1+s1+p1)*n1
x2=(m2*t2+s2+p2)*n2
if x1<x2:
    print('Pyton',x1)
elif x1>x2:
    print('Pascal',x2)
elif x1==x2:
    print('Draw',x1)","0.0"
"b962261e-7638-421f-9ea1-ecd77520e209","def f():
    n = int(input())
    ans = 0
    while n ** 0.5 > 0:
        now = int(n ** 0.5) ** 2
        if now == 1:
            break
        n -= int(n ** 0.5) ** 2
        ans += 1
    print(ans)


f()","0.0"
"36d58b20-7fe1-452b-ac10-e1ed680aa6b3","n, k, t, c, d, p, nl, np = map(int, input().split())

k = k*t # ÐºÐ¾Ð»Ð¸ÑÐµÑÑÐ²Ð¾ Ð¼Ð¼ Ð¼Ð°ÑÐ°ÐºÑÑ
c = c*d # dolki
a = min(k/nl, c, p/np)
if a == 0:
    a = 1

if n == 0:
    print (0, 0)
else:
    print (int(a), int(a//n) + 1)","0.0"
"b962261e-7638-421f-9ea1-ecd77520e209","def f():
    n = int(input())
    ans = 0
    while n ** 0.5 > 0:
        now = int(n ** 0.5) ** 2
        if now == 1:
            break
        n -= now
        ans += 1
    print(ans)


f()","0.0"
"9e91eca3-2074-49fc-a46e-35630d7d0e53","n = int(input())
b = list(map(int, input().split()))
ct = 0
for i in b:
    ct += abs(i)
print(ct)","0.0"
"c4a7e827-63de-424a-aec0-aea743d3b5f2","k, n = map(int, input().split())
if k == n:
    print(1, k)
else:
    print(n // k + 1, n % k)","0.0"
"36d58b20-7fe1-452b-ac10-e1ed680aa6b3","n, k, t, c, d, p, nl, np = map(int, input().split())

k = k*t # ÐºÐ¾Ð»Ð¸ÑÐµÑÑÐ²Ð¾ Ð¼Ð¼ Ð¼Ð°ÑÐ°ÐºÑÑ
c = c*d # dolki
a = min(k/nl, c, p/np)
if a == 0:
    a = 1

if n == 0:
    print (0, 0)
else:
    print (int(a), int(a/n) + 1)","0.0"
"b962261e-7638-421f-9ea1-ecd77520e209","def f():
    n = int(input())
    ans = 0
    while n ** 0.5 > 1:
        n -= int(n ** 0.5) ** 2
        ans += 1
    print(ans)


f()","0.0"
"6d204921-764f-452c-a01d-578e51695a98","t = int(input())
mas = []
for i in range(t):
    mas.append(list(map(int, input().split())))
for i in range(0, len(mas)):
    for i2 in range(0, len(mas[i])):
        if mas[i][i2] + mas[i][i2+1] == mas[i][i2+2] or mas[i][i2] + mas[i][i2+2] == mas[i][i2+1] or mas[i][i2+1] + mas[i][i2+2]== mas[i][i2]:
            print('YES')
            break
        else:
            print('NO')
            break","0.0"
"0024e95a-bf71-4dac-a246-626b5821e403","n1, p1, m1, t1, s1= map(int, input().split())
n2, p2, m2, t2, s2= map(int, input().split())
rez1= n1*(p1+(m1*t1)+s1)
rez2= n2*(p2+(m2*t2)+s2)
if rez1<rez2:
    print(""Python"", rez1)
elif rez1>rez2:
    print(""Pascal"", rez2)
else:
    print(""Draw"", rez1)","0.0"
"0024e95a-bf71-4dac-a246-626b5821e403","n1, p1, m1, t1, s1=map(int,input().split())
n2, p2, m2, t2, s2=map(int,input().split())
py=n1*(p1+(m1*t1)+s1)
pa=n2*(p2+(m2*t2)+s2)
if py<pa:
    print(""Python"", py)
elif py>pa:
    print(""Pascal"", pa)
elif pa==py:
    print(""Draw"", py)","0.0"
"13bcf8ad-b139-4bf6-8b16-b99b7cccf65d","a=int(input())
for i in range(a):
    x=0
    n,k=map(int,input().split())
    while(n!=0):
        if n%k!=0:
            n-=1
            x+=1
        else:
            n=n//k
            x+=1
    print(x)","0.0"
"9e91eca3-2074-49fc-a46e-35630d7d0e53","t=int(input())
s=[int(i) for i in input().split()]
sp=[]
for i in range(len(s)+1):
    s1=s[:i]
    s2=s[i:]
    sp.append(abs(sum(s1)-sum(s2)))
print(max(sp))","0.0"
"9e91eca3-2074-49fc-a46e-35630d7d0e53","n=int(input())
s=list(map(int, input().split()))
maxx=0
for i in range(n):
    sp1=s[:i+1]
    sp2=s[i+1:]
    p=[sum(sp1),sum(sp2)]
    if max(p)-min(p) > maxx:
        maxx=max(p)-min(p)
print(maxx)","0.0"
"9e91eca3-2074-49fc-a46e-35630d7d0e53","n = int(input())
a = [int(s) for s in input().split()]
counter = 0
for i in range(len(a)):
    if abs(sum(a[:i]) - sum(a[i:])) > counter:
        counter = abs(sum(a[:i]) - sum(a[i:]))
print(counter)","0.0"
"36d58b20-7fe1-452b-ac10-e1ed680aa6b3","n, k, t, c, d, p, nl, np = map(int, input().split())

k = k*t # ÐºÐ¾Ð»Ð¸ÑÐµÑÑÐ²Ð¾ Ð¼Ð¼ Ð¼Ð°ÑÐ°ÐºÑÑ
c = c*d # dolki
if nl != 0 and np != 0:
    a = min(k/nl, c, p/np)
    if a == 0:
        a = 1
        if n == 0:
            print (0, 0)
    else:
        print (int(a), int(a/n) + 1)
else:
    print (1, 1)","0.0"
"13bcf8ad-b139-4bf6-8b16-b99b7cccf65d","t=int(input())
s=0
for i in range(t):
    s=0
    n, k=map(int, input().split())
    if k==1:
        print(n)
    else:
        while n>0:
            if n%k!=0:
                n-=1
                s+=1
            else:
                n=min(n-1, n/k)
                s+=1
        print(s)","0.0"
"fa181552-a073-4c25-928c-1a5c48505a6b","q=int(input())
w=[int(x) for x in input().split()]
e=[]
r=1
for i in range(1,q):
    if w[i]==w[i-1]:
        r=r+1
    else:
        e.append(r)
        e.append(w[i-1])
        r=1
e.append(r)
e.append(w[-1])
print(*e)","0.0"
"36d58b20-7fe1-452b-ac10-e1ed680aa6b3","n, k, t, c, d, p, nl, np = map(int, input().split())

k = k*t # ÐºÐ¾Ð»Ð¸ÑÐµÑÑÐ²Ð¾ Ð¼Ð¼ Ð¼Ð°ÑÐ°ÐºÑÑ
c = c*d # dolki
if nl != 0 and np != 0:
    a = min(k/nl, c, p/np)
    if a == 0:
        a = 1
        if n == 0:
            print (0, 0)
    else:
        print (int(a), int(a/n) + 1)
else:
    print (1, 1)","0.0"
"fa181552-a073-4c25-928c-1a5c48505a6b","a = input()
a = input().split() + ['r']
f = []
k = 1
for i in range(len(a)-1):
    if a[i+1]=='r':
        f.append(k)
        f.append(a[i])
        break
    elif a[i+1] != a[i]:
        f.append(k)
        f.append(a[i])
        k = 1
    else:
        k += 1
print(*[str(i) for i in f])","0.0"
"36d58b20-7fe1-452b-ac10-e1ed680aa6b3","n, k, t, c, d, p, nl, np = map(int, input().split())

k = k*t # ÐºÐ¾Ð»Ð¸ÑÐµÑÑÐ²Ð¾ Ð¼Ð¼ Ð¼Ð°ÑÐ°ÐºÑÑ
c = c*d # dolki
if nl != 0 and np != 0:
    a = min(k/nl, c, p/np)
    if a == 0:
        a = 1
        if n == 0:
            print (0, 0)
    else:
        print (int(a), int(a/n) + 1)
else:
    print (1, 1)","0.0"
"36d58b20-7fe1-452b-ac10-e1ed680aa6b3","lst = [int(x) for x in input().split()]
n = lst[0]
k = lst[1]
t = lst[2]
c =lst[3]
d =lst[4]
p =lst[5]
nl = lst[6]
np = lst[7]
m = min(((k*t)//nl),(c*d),(p//np))
r = m%n
if r==0:
    r = n
print(m,r)","0.0"
"fa181552-a073-4c25-928c-1a5c48505a6b","a = int(input())
b = list(map(int, input().split()))
b.append(-1)
c = []
t = [0, b[0]]
for i in range(len(b)-1):
    if b[i] != b[i+1]:
        t[0] +=1
        c.append(t[0])
        c.append(t[1])
        t[0] = 0
        t[1] = b[i+1]
    else:
        t[0] += 1
print(*c)","0.0"
"9e91eca3-2074-49fc-a46e-35630d7d0e53","n=int(input())
s=list(map(int, input().split()))
maxx=0
for i in range(n):
    sp1=s[:i]
    sp2=s[i:]
    p=[sum(sp1),sum(sp2)]
    if max(p)-min(p) > maxx:
        maxx=max(p)-min(p)
print(maxx)","0.0"
"0024e95a-bf71-4dac-a246-626b5821e403","n, p, m, t, s = map(int, input().split())
n1, p1, m1, t1, s1 = map(int, input().split())
r1 = n *(p+s+(m*t))
r2 = n1 *(p1+s1+(m1*t1))
if r1 < r2:
    print('Python', r1)
elif r1 == r2:
    print('Draw', r1)
elif r1 > r2:
    print('Pascal', r2)","0.0"
"fa181552-a073-4c25-928c-1a5c48505a6b","g=int(input())
a=[int(i) for i in input().split()]
c=[]
b=0
d=a[0]
a.append(10000)
for i in a:
    if d==i:
        b=b+1
    else:
        c.append(b)
        c.append(d)
        d=i
        b=1
for i in range(len(c)):
    print(c[i], end="" "")","0.0"
"c4a7e827-63de-424a-aec0-aea743d3b5f2","k, n = map(int, input().split())
if n % k == 0:
    print (n // k, k)
else:
    print(n // k + 1, n % k)","0.0"
"36d58b20-7fe1-452b-ac10-e1ed680aa6b3","n, k, t, c, d, p, nl, np = map(int, input().split())

k = k*t # ÐºÐ¾Ð»Ð¸ÑÐµÑÑÐ²Ð¾ Ð¼Ð¼ Ð¼Ð°ÑÐ°ÐºÑÑ
c = c*d # dolki
if nl != 0 and np != 0 and k != 0 and c!=0:
    a = min(k/nl, c, p/np)
    if a == 0:
        a = 1
        if n == 0:
            print (0, 0)
    else:
        print (int(a), int(a/n) + 1)
else:
    print (1, 1)","0.0"
"9e91eca3-2074-49fc-a46e-35630d7d0e53","n=int(input())
a= list(map(int, input().split()))
kp=0
ko=0
for i in range(n):
    if a[i]>=0:
        kp+=a[i]
    else:
        ko += a[i]
print(kp-ko)","0.0"
"36d58b20-7fe1-452b-ac10-e1ed680aa6b3","n, k, t, c, d, p, nl, np = map(int, input().split())

k = k*t # ÐºÐ¾Ð»Ð¸ÑÐµÑÑÐ²Ð¾ Ð¼Ð¼ Ð¼Ð°ÑÐ°ÐºÑÑ
c = c*d # dolki
if nl != 0 and np != 0 and k != 0 and c!=0:
    a = min(k/nl, c, p/np)
    if a == 0:
        a = 1
        if n == 0:
            print (0, 0)
    else:
        print (int(a), int(a/n) + 1)
else:
    print (0, 1)","0.0"
"9e91eca3-2074-49fc-a46e-35630d7d0e53","n = int(input())
a = [int(x) for x in input().split()]
bestr = 0
for i in range(len(a)):
    aa =sum(a[:i+1])
    bb = sum(a[i+1:])
    if abs(aa - bb) > bestr :
        bestr = abs(aa - bb)
print(bestr)","0.0"
"fa181552-a073-4c25-928c-1a5c48505a6b","a = int(input())
k = []
b = input().split()
f = b[0]
b.pop(0)
g = 1
for i in b:
    if i == f:
        g += 1
    else:
        k.append(g)
        k.append(f)
        g = 1
    f = i
k.append(g)
k.append(f)
print(*k)","0.0"
"c4a7e827-63de-424a-aec0-aea743d3b5f2","b=input()
v=b.split()
n=int(v[0])
m=int(v[1])
print(m//n+1,m % n)","0.0"
"0024e95a-bf71-4dac-a246-626b5821e403","n1, p1, m1, t1, s1 = map(int, input().split())
n2, p2, m2, t2, s2 = map(int, input().split())
pit = n1 * (p1 + m1 * t1 + s1)
pas = n2 * (p2 + m2 * t2 + s2)
if pit > pas:
    print('Pascal', pas)
elif pas > pit:
    print('Python', pit)
else:
    print('Draw', pas)","0.0"
"13bcf8ad-b139-4bf6-8b16-b99b7cccf65d","t = int(input())
for i in range(t):
    n, k = list(map(int, input().split()))
    c = 0
    while n != 0:
        if n%k == 0:
            n//=k
        else:
            n-=1
        c +=1
    print(c)","0.0"
"b962261e-7638-421f-9ea1-ecd77520e209","n = int(input())
dp=[999999 for i in range(n+1)]
dp[0]=0
dp[1]=1
for i in range(2,n+1):
    t=1
    while ((t+1)*(t+1)<=i):
        dp[i]=min(dp[i],dp[i-(t+1)*(t+1)]+1)
        t+=1
print(dp[n])","0.0"
"13bcf8ad-b139-4bf6-8b16-b99b7cccf65d","def igr(n,k):
    cnt=0
    while n!=0:
        if n%k==0:
            n//=k 
            cnt+=1
        else:
            n-=1
            cnt+=1
    return cnt 
a=int(input())
ot=[]
for i in range(a):
    n,k=map(int,input().split())
    ot.append(igr(n,k))
for i in ot:
    print(i)","0.0"
"fa181552-a073-4c25-928c-1a5c48505a6b","n = int(input())
s = list(map(int, input().split()))
m = []
a = 1
sum = 0
k = s[0]

for i in range(n - 1):
    if s[i] == s[i+1]:
        a = a + 1
    else:
        m.append(a)
        m.append(k)
        k = s[i+1]
        sum += a
        a = 1

if sum < n:
    m.append(n - sum)
    m.append(s[-1])

print(*m)","0.0"
"13bcf8ad-b139-4bf6-8b16-b99b7cccf65d","t=int(input())
h=0
for i in range(t):
    n, k=map(int, input().split())
    while n>0:
        if n%k==0:
            n//=k
            h+=1
        else:
            n-=1
            h+=1
    print(h)
    h=0","0.0"
"c4a7e827-63de-424a-aec0-aea743d3b5f2","k, n = map(int, input().split())

if n % k == 0:
    print(n // k, k)
else:
    print(n // k + 1, n % k)","0.0"
"c4a7e827-63de-424a-aec0-aea743d3b5f2","k, n = map(int, input().split())
print((n-1)//k+1, (n-1)%k+1)","0.0"
"0024e95a-bf71-4dac-a246-626b5821e403","n1, p1, m1, t1, s1 = map(int, input().split())
n2, p2, m2, t2, s2 = map(int, input().split())
if (n1*p1 + n1*m1*t1 + s1*n1) > (n2*p2 + n2*m2*t2 + s2*n2):
    print('Pascal', (n2*p2 + n2*m2*t2 + s2*n2))
elif (n1*p1 + n1*m1*t1 + s1*n1) == (n2*p2 + n2*m2*t2 + s2*n2):
    print('Draw', (n1*p1 + n1*m1*t1 + s1*n1))
else:
    print('Python', (n1*p1 + n1*m1*t1 + s1*n1))","0.0"
"0024e95a-bf71-4dac-a246-626b5821e403","lst = [int(x) for x in input().split()]
lst2 = [int(x) for x in input().split()]
res1=lst[0]*(lst[1]+lst[2]*lst[3]+lst[4])
res2=lst2[0]*(lst2[1]+lst2[2]*lst2[3]+lst2[4])
if res1<res2:
    print(""Python"", res1)
elif res1==res2:
    print(""Draw"", res1)
else:
    print(""Pascal"", res2)","0.0"
"13bcf8ad-b139-4bf6-8b16-b99b7cccf65d","t = int(input())

for i in range(t):
    n, k = map(int, input().split())
    counter = 0
    while n != 0:
        if n % k == 0:
            n //= k
            
        else:
            n -= 1
        counter += 1
    print(counter)","0.0"
"b962261e-7638-421f-9ea1-ecd77520e209","n = int(input())
dp=[999999 for i in range(n+1)]
dp[0]=0
dp[1]=1
for i in range(2,n+1):
    t=0
    while ((t+1)*(t+1)<=i):
        dp[i]=min(dp[i],dp[i-(t+1)*(t+1)]+1)
        t+=1
print(dp[n])","0.0"
"b962261e-7638-421f-9ea1-ecd77520e209","n = int(input())
dp=[999999 for i in range(n+1)]
dp[0]=0
dp[1]=1
for i in range(2,n+1):
    t=0
    while ((t+1)*(t+1)<=i):
        dp[i]=min(dp[i],dp[i-(t+1)*(t+1)]+1)
        t+=1
print(dp[n])","0.0"
"13bcf8ad-b139-4bf6-8b16-b99b7cccf65d","t = int(input())
q = 0
for i in range(t):
    n, k = map(int, input().split())
    while n!=0:
        if n == k or n%k == 0:
            n = n//k
        else:
            n-=1
        q+=1
    print(q)
    q = 0","0.0"
"13bcf8ad-b139-4bf6-8b16-b99b7cccf65d","n = int(input())
for i in range(n):
    a = [int(x) for x in input().split()]
    n = a[0]
    k = a[1]
    hod = 0
    while n != 0:
        if n%k==0:
            if n//k <= n-1:
                n //= k
            else:
                n -= 1
        else:
            n -= 1
        hod += 1
    print(hod)","0.0"
"13bcf8ad-b139-4bf6-8b16-b99b7cccf65d","t=int(input())
h=0
for i in range(t):
    n, k=map(int, input().split())
    for q in range(n):
        if n==0:
            print(h)
            break
        if n%k==0:
            n//=k
            h+=1
        else:
            n-=1
            h+=1
    h=0","0.0"
"9e91eca3-2074-49fc-a46e-35630d7d0e53","n=int(input())
a=0
b=0
c=[int(x)for x in input().split()]
for i in range(n):
    if c[i]>0:
        a+=c[i]
    else:
        b+=c[i]
a-=b
print(a)","0.0"
"9e91eca3-2074-49fc-a46e-35630d7d0e53","a = int(input())
c = []
c1 = []
c2 = []
b = list(map(int,input().split()))
for i in range(a+1):
    if i == 0:
        c1.append(b[0])
    else:
        c1 = b[0:i]
    c2 = sum(b)-sum(c1)
    c.append(abs(sum(c1)-c2))
print(max(c))","0.0"
"9e91eca3-2074-49fc-a46e-35630d7d0e53","n=int(input())
mas=list(map(int,input().split()))
if min(mas)<0:
    naidy=mas.index(min(mas))
    mas1=mas[naidy:]
    mas2=mas[:naidy]
    print(abs(sum(mas1)-sum(mas2)))
else:
    print(sum(mas))","0.0"
"36d58b20-7fe1-452b-ac10-e1ed680aa6b3","def f():
    n, k, t, c, d, p, nl, np = map(int, input().split())
    ans = min(k * t // nl, c * d, p // np)
    print(ans, ans//n + 1)


f()","0.0"
"36d58b20-7fe1-452b-ac10-e1ed680aa6b3","n, k, t, c, d, p, nl, np = map(int, input().split())

k = k*t # ÐºÐ¾Ð»Ð¸ÑÐµÑÑÐ²Ð¾ Ð¼Ð¼ Ð¼Ð°ÑÐ°ÐºÑÑ
c = c*d # dolki
a = min(k/nl, c, p/np)
if a == 0:
    a = 1
if int(a)%n == 0:
    q = n
else:
    q = int(a)%n 
print (int(a), q)","0.0"
"c4a7e827-63de-424a-aec0-aea743d3b5f2","k, n = map(int, input().split())
s = 1
k2 = k
l = True
m = 1
while l:
    if n >= s and n<= k2:
        s2 = n - s + 1
        print(m,s2)
        l = False
    s = k * m + 1
    m += 1
    k2 = k * m","0.0"
"c4a7e827-63de-424a-aec0-aea743d3b5f2","k,n=map(int,input().split())
c=1
if k>n:
    print('1',n)
if k<n:
    s=n-k
    c+=1
    if s>k:
        s=s-k
        c+=1
    if s==k:
        s=s-k
        s+=1
        c+=1
    print(c,s)","0.0"
"9e91eca3-2074-49fc-a46e-35630d7d0e53","a = int(input())
c = []
c1 = []
c2 = []
b = list(map(int,input().split()))
b .append(0)
for i in range(a+2):
    if i == 0:
        c1.append(b[0])
    else:
        c1 = b[0:i]
    c2 = sum(b)-sum(c1)
    c.append(abs(sum(c1)-c2))
print(max(c))","0.0"
"13bcf8ad-b139-4bf6-8b16-b99b7cccf65d","def hhhh(n, k):
    hod = 0
    while n != 0:
        if n % k == 0:
            if n // k <= n - 1:
                n //= k
            else:
                n -= 1
        else:
            n -= 1
        hod += 1
    return hod



n = int(input())
for i in range(n):
    a = [int(x) for x in input().split()]
    n = a[0]
    k = a[1]
    print(hhhh(n,k))","0.0"
"c4a7e827-63de-424a-aec0-aea743d3b5f2","k,n=map(int,input().split())
c=1
if k>n:
    print('1',n)
if k<n:
    s=n-k
    c+=1
    if s>k:
        s=s-k
        c+=1
    if s==k:
        s=s-k
        s+=1
        c+=1
    print(c,s)","0.0"
"c4a7e827-63de-424a-aec0-aea743d3b5f2","k, n = map(int, input().split())
a = (n-1) // k + 1
b = (n-1) % k + 1
print(a, b)","0.0"
"0024e95a-bf71-4dac-a246-626b5821e403","n1, p1, m1, t1, s1=map(int, input().split())
n2, p2, m2, t2, s2=map(int, input().split())
j1=(n1*(p1+s1))+(n1*m1*t1)
j2=(n2*(p2+s2))+(n2*m2*t2)
if  j1<j2:
    print('Python', j1)
elif j2<j1:
    print('Pascal', j2)
else:
    print('Draw', j1)","0.0"
"36d58b20-7fe1-452b-ac10-e1ed680aa6b3","n, k, t, c, d, p, nl, np=map(int,input().split())
t=t*k
d=c*d
p=p
s=min(t//nl,d,p//np)
if s >n:
    print(s,s//n+1)
else:
    print(s, s-s//n*n)","0.0"
"c4a7e827-63de-424a-aec0-aea743d3b5f2","b=input()
v=b.split()
n=int(v[0])
m=int(v[1])
if m==0 or n==0:
    print(1,0)
else:
    print(m//n+1,m % n)","0.0"
"13bcf8ad-b139-4bf6-8b16-b99b7cccf65d","b=int(input())
c=[]
d=0
for i in range(b):
    a = [int(i) for i in input().split()]
    while a[0]!=0:
        if a[0]%a[1]==0:
            a[0]=a[0]//a[1]
            d=d+1
        else:
            a[0]=a[0]-1
            d=d+1
    c.append(d)
    d=0
for i in range(b):
    print(c[i])","0.0"
"0024e95a-bf71-4dac-a246-626b5821e403","n1, p1, m1, t1, s1= map(int,input().split())
n2, p2, m2, t2, s2= map(int,input().split())
if (n1*p1)+(m1*t1*n1)+(s1*n1)>(n2*p2)+(m2*t2*n2)+(s2*n2):
    print('Pascal',(n2*p2)+(m2*t2*n2)+(s2*n2))
elif (n1*p1)+(m1*t1*n1)+(s1*n1)==(n2*p2)+(m2*t2*n2)+(s2*n2):
    print('Draw',(n1*p1)+(m1*t1*n1)+(s1*n1))
else :
    print('Python',(n1*p1)+(m1*t1*n1)+(s1*n1))","0.0"
"36d58b20-7fe1-452b-ac10-e1ed680aa6b3","n, k, t, c, d, p, nl, np = map(int, input().split())

vlm = k * t
slices = c * d
comp = min(vlm // nl, slices, p // np)
friend = comp // n

print(comp, friend + 1)","0.0"
"9e91eca3-2074-49fc-a46e-35630d7d0e53","n=int(input())
gugugaga=[]
mas=list(map(int,input().split()))
if min(mas)<0:
    naidy=mas.index(min(mas))
    mas1=mas[naidy:]
    mas2=mas[:naidy]
    gugugaga+=[abs(sum(mas1)-sum(mas2))]
    if naidy!=len(mas):
        mas1=mas[naidy+1:]
        mas2=mas[:naidy-1]
        gugugaga+=[abs(sum(mas1)-sum(mas2))]
    print(max(gugugaga))
else:
    print(sum(mas))","0.0"
"13bcf8ad-b139-4bf6-8b16-b99b7cccf65d","import math
t = int(input())
for i in range(t):
    n, m = map(int, input().split())
    s = -1
    while n:
        s += 1
        s += n % m
        n = math.floor(n / m)
    print(s)","0.0"
"9e91eca3-2074-49fc-a46e-35630d7d0e53","a = int(input())
c = []
c1 = []
c2 = []
b = list(map(int,input().split()))
b .append(0)
b.reverse()
b.append(0)
b.reverse()
for i in range(1, len(b)):
    c1 = b[0:i]
    c2 = sum(b)-sum(c1)
    c.append(abs(sum(c1)-c2))
print(max(c))","0.0"
"36d58b20-7fe1-452b-ac10-e1ed680aa6b3","def f():
    n, k, t, c, d, p, nl, np = map(int, input().split())
    ans = min(k * t // nl, c * d, p // np)
    print(ans, ans % n if ans % n else n)


f()","0.0"
"13bcf8ad-b139-4bf6-8b16-b99b7cccf65d","t = int(input())
for i in range(t):
    n, k = list(map(int, input().split()))
    c = 0
    while n != 0:
        if n%k == 0:
            n//=k
        else:
            n-=1
        c +=1
    print(c)","0.0"
"9e91eca3-2074-49fc-a46e-35630d7d0e53","t=int(input())
s=[int(i) for i in input().split()]
sp=[]
for i in range(len(s)+1):
    s1=s[:i]
    s2=s[i:]
    sp.append(sum(s1)-sum(s2))
print(max(sp))","0.0"
"0024e95a-bf71-4dac-a246-626b5821e403","n1,p1,m1,t1,s1=map(int,input().split())
n2,p2,m2,t2,s2=map(int,input().split())
x1=(m1*t1+s1+p1)*n1
x2=(m2*t2+s2+p2)*n2
if x1<x2:
    print('Pyton',x1)
elif x1>x2:
    print('Pascal',x2)
elif x1==x2:
    print('Draw',x1)","0.0"
"13bcf8ad-b139-4bf6-8b16-b99b7cccf65d","t=int(input())
a=0
h=0
for i in range(t):
    n, k=map(int, input().split())
    for q in range(n):
        h+=1
        h+=n%k
        n//=k
        if n==0:
            print(h-1)
            break
    h=0
    a=0","0.0"
"0024e95a-bf71-4dac-a246-626b5821e403","Py = input().split()
Pa = input().split()
n1 = int(Py[0])
p1 = int(Py[1])
m1 = int(Py[2])
t1 = int(Py[3])
s1 = int(Py[4])
n2 = int(Pa[0])
p2 = int(Pa[1])
m2 = int(Pa[2])
t2 = int(Pa[3])
s2 = int(Pa[4])
if n1*(p1+(m1*t1)+s1) < n2*(p2+(m2*t2)+s2):
    print('Python', n1*(p1+(m1*t1)+s1))
elif n2*(p2+m2+t2+s2) < n1*(p1+(m1*t1)+s1):
    print('Pascal', n2*(p2+(m2*t2)+s2))
else:
    print('Draw', n1*(p1+(m1*t1)+s1))","0.0"
"36d58b20-7fe1-452b-ac10-e1ed680aa6b3","n,k,t,c,d,p,nl,np=map(int,input().split(' '))
a1=k*t//nl
a2=c*d
a3=p//np
a=min(a1,a2,a3)
b=a//n
print(a,b+1)","0.0"
"0024e95a-bf71-4dac-a246-626b5821e403","n1,p1,m1,t1,s1 = map(int,input().split())
n2,p2,m2,t2,s2 = map(int,input().split())
time1 = n1*(p1+m1*t1+s1)
time2 = n2*(p2+m2*t2+s2)
if time1 < time2:
    print(""Python"", time1)
if time2 < time1:
    print(""Pascal"", time2)
if time1 == time2:
    print(""Draw"", time1)","0.0"
"0024e95a-bf71-4dac-a246-626b5821e403","n1, p1, m1, t1, s1 = map(int, input().split())
n2, p2, m2, t2, s2 = map(int, input().split())

res1 = (p1 + m1 * t1 + s1) * n1     # Python
res2 = (p2 + m2 * t2 + s2) * n2     # Pascal

if res1 > res2:
    print('Pascal', res2)
elif res2 > res1:
    print('Python', res1)
else:
    print('Draw', res1)","0.0"
"36d58b20-7fe1-452b-ac10-e1ed680aa6b3","n, k, t, c, d, p, nl, np=map(int,input().split())
t=t*k
d=c*d
p=p
s=min(t//nl,d,p//np)
h=s
h=s-s//n*n
if h==0:
    h=n
print(s,h)","0.0"
"0024e95a-bf71-4dac-a246-626b5821e403","Py = input().split()
Pa = input().split()
n1 = int(Py[0])
p1 = int(Py[1])
m1 = int(Py[2])
t1 = int(Py[3])
s1 = int(Py[4])
n2 = int(Pa[0])
p2 = int(Pa[1])
m2 = int(Pa[2])
t2 = int(Pa[3])
s2 = int(Pa[4])
if n1*(p1+(m1*t1)+s1) < n2*(p2+(m2*t2)+s2):
    print('Python', n1*(p1+(m1*t1)+s1))
elif n2*(p2+(m2*t2)+s2) < n1*(p1+(m1*t1)+s1):
    print('Pascal', n2*(p2+(m2*t2)+s2))
else:
    print('Draw', n1*(p1+(m1*t1)+s1))","0.0"
"fa181552-a073-4c25-928c-1a5c48505a6b","n = int(input())
a = [int(i) for i in input().split()]
a+=[0]
s=[]
k=0
for i in range(1,len(a)):
    k+=1
    if a[i]!=a[i-1]:
        s+=[k,a[i-1]]
        k=0
print(*s)","0.0"
"0024e95a-bf71-4dac-a246-626b5821e403","n1, p1, m1, t1, s1 = [int(i) for i in input().split()]
n2, p2, m2, t2, s2 = [int(i) for i in input().split()]
sum1 = n1*(p1+m1*t1+s1)
sum2 = n2*(p2+m2*t2+s2)
if sum1 < sum2:
    print('Python', sum1)
else:
    print('Pascal', sum2)","0.0"
"13bcf8ad-b139-4bf6-8b16-b99b7cccf65d","t = int(input())
for i in range(t):
    n, k = list(map(int, input().split()))
    c = 0
    while n != 0:
        if n%k == 0:
            n//=k
            c += 1
        else:
            a = n % k
            n-=a
            c+=a
    print(c)","0.0"
"9e91eca3-2074-49fc-a46e-35630d7d0e53","n=int(input())
a=[int(s) for s in input().split()]
b=[]
c=[]
s=0
k=0
for i in range(len(a)):
    if a[i]<=0:
        b.append(a[i])
    else:
        c.append(a[i])
for g in range(len(b)):
    s+=b[g]
for j in range(len(c)):
    k+=c[g]
print(k-s)","0.0"
"9e91eca3-2074-49fc-a46e-35630d7d0e53","n = int(input())
a = [int(s) for s in input().split()]
counter = 0
for i in range(len(a)):
    if abs(sum(a[:i]) - sum(a[i:])) > counter:
        counter = abs(sum(a[:i]) - sum(a[i:]))
print(counter)","0.0"
"9e91eca3-2074-49fc-a46e-35630d7d0e53","n=int(input())
a=[int(s) for s in input().split()]
b=[]
c=[]
s=0
k=0
for i in range(len(a)):
    if a[i]<=0:
        b.append(a[i])
    else:
        c.append(a[i])
for g in range(len(b)):
    s+=b[g]
for j in range(len(c)):
    k+=c[j]
print(k-s)","0.0"
"0024e95a-bf71-4dac-a246-626b5821e403","def f():
    n1, p1, m1, t1, s1 = map(int, input().split())
    n2, p2, m2, t2, s2 = map(int, input().split())
    uwu1 = n1 * (p1 + s1 + m1 * t1)
    uwu2 = n2 * (p2 + s2 + m2 * t2)
    if uwu1 > uwu2:
        print(""Pascal"", end="" "")
    if uwu1 < uwu2:
        print(""Python"", end="" "")
    if uwu1 == uwu2:
        print(""Draw"", end="" "")
    print(min(uwu1, uwu2))


f()","0.0"
"0024e95a-bf71-4dac-a246-626b5821e403","n1, p1, m1, t1, s1 = [int(i) for i in input().split()]
n2, p2, m2, t2, s2 = [int(i) for i in input().split()]
sum1 = n1*(p1+m1*t1+s1)
sum2 = n2*(p2+m2*t2+s2)
if sum1 < sum2:
    print('Python', sum1)
elif sum1 == sum2:
    print('Draw', sum1)
else:
    print('Pascal', sum2)","0.0"
"13bcf8ad-b139-4bf6-8b16-b99b7cccf65d","n = int(input())
a = 0

for i in range(n):
    s, k = list(map(int, input().split()))

    while s > 0:
        if s % k != 0:
            s -= 1
            a += 1
        else:
            s = s // k
            a += 1
    print(a)
    a = 0","0.0"
"13bcf8ad-b139-4bf6-8b16-b99b7cccf65d","q = int(input())
for i in range(q):
    w = 0
    n, k = map(int, input().split())
    while n != 0:
        if n % k == 0:
            n = n // k
        else:
            n -= 1
        w += 1
    print(w)","0.0"
"6d204921-764f-452c-a01d-578e51695a98","t=int(input())
for i in range(t):
    a,b,c=map(int,input().split())
    if a==b+c or b==a+c or c==a+b:
        print('YES')
    else:
        print('NO')","0.0"
"c4a7e827-63de-424a-aec0-aea743d3b5f2","k,n=map(int,input().split())
if n<k:
   a=1
   b=n
elif n>k and n%k<k:
    a=n//k+1
    b=n-n//k*k
print(a,b)","0.0"
"13bcf8ad-b139-4bf6-8b16-b99b7cccf65d","for i in range(int(input())):
    w = 0
    n, k = map(int, input().split())
    while n != 0:
        if n % k == 0:
            n = n // k
        else:
            n -= 1
        w += 1
    print(w)","0.0"
"c4a7e827-63de-424a-aec0-aea743d3b5f2","b=input()
v=b.split()
n=int(v[0])
m=int(v[1])
if m%n==0:
    print(m//n,n)
else:
    print(m//n+1,m%n)","0.0"
"13bcf8ad-b139-4bf6-8b16-b99b7cccf65d","p=int(input())
for i in range(p):
    n, k= map(int, input().split())
    t=0
    while n!=0:
        if n%k==0:
            n=n//k
        else:
            n=n-1
        t+=1
    print(t)","0.0"
"13bcf8ad-b139-4bf6-8b16-b99b7cccf65d","for i in range(int(input())):
    w = 0
    n, k = map(int, input().split())
    while n != 0:
        if n % k == 0:
            n = n / k
        else:
            n -= 1
        w += 1
    print(w)","0.0"
"13bcf8ad-b139-4bf6-8b16-b99b7cccf65d","a = int(input())
b = []
c = 0
for i in range (0, a):
    n, k = map(int, input().split())
    while True:
        if (n%k)!=0 and n!=0:
            n=n-1
            c = c+1
        if (n % k) == 0:
            n = n/k
            c = c + 1
        if n == 0:
            break
        
    b.append(c)
    c = 0
for i in range (0, a):
    print(b[i] -1)","0.0"
"9e91eca3-2074-49fc-a46e-35630d7d0e53","n=int(input())
b=0
k=0
g=0
a=list(map(int, input().split()))
for i in range(n):
    if a[i]<0:
        k+=a[i]
    else:
        b+=a[i]
if k==0:
    c=min(a)
    for i in range(n):
        if a[i]!=c:
            g+=a[i]
    print(g+c)
else:
    print(b+abs(k))","0.0"
"0024e95a-bf71-4dac-a246-626b5821e403","p1 = [int(i) for i in input().split()]
p2 = [int(i) for i in input().split()]
s1=p1[0]*(p1[1]+p1[2]*p1[3]+p1[4])
s2 = p2[0]*(p2[1]+p2[2]*p2[3]+p2[4])
if s1>=s2:
    print('Pascal',s2)
else:
    print('Python',s1)","0.0"
"c4a7e827-63de-424a-aec0-aea743d3b5f2","k,n=map(int,input().split())
if n<k:
   a=1
   b=n
elif n>k and n%k<k:
    a=n//k+1
    b=n-n//k*k
elif n==k:
    a=n//k
    b=k
print(a,b)","0.0"
"13bcf8ad-b139-4bf6-8b16-b99b7cccf65d","for i in range(int(input())):
    w = 0
    n, k = map(int, input().split())
    while n != 0:
        if n % k == 0:
            n = int(n / k)
        else:
            n -= 1
        w += 1
    print(w)","0.0"
"0024e95a-bf71-4dac-a246-626b5821e403","p1 = [int(i) for i in input().split()]
p2 = [int(i) for i in input().split()]
s1=p1[0]*(p1[1]+p1[2]*p1[3]+p1[4])
s2 = p2[0]*(p2[1]+p2[2]*p2[3]+p2[4])
if s1>s2:
    print('Pascal',s2)
elif s2>s1:
    print('Python',s1)
else:
    print('Draw')","0.0"
"0024e95a-bf71-4dac-a246-626b5821e403","p1 = [int(i) for i in input().split()]
p2 = [int(i) for i in input().split()]
s1=p1[0]*(p1[1]+p1[2]*p1[3]+p1[4])
s2 = p2[0]*(p2[1]+p2[2]*p2[3]+p2[4])
if s1>s2:
    print('Pascal',s2)
elif s2>s1:
    print('Python',s1)
else:
    print('Draw',s1)","0.0"
"36d58b20-7fe1-452b-ac10-e1ed680aa6b3","n, k, t, c, d, p, nl, np = [int(i) for i in input().split()]
komp = min((t*k)//nl, d*c, p//np)
if komp % n == 0:
    n = n
else:
    n = komp % n
print(komp, n)","0.0"
"13bcf8ad-b139-4bf6-8b16-b99b7cccf65d","for i in range(int(input())):
    w = 0
    n, k = map(int, input().split())
    while n != 0:
        if n % k == 0:
            n = n // k
        else:
            n -= 1
        w += 1
    print(w)","0.0"
"13bcf8ad-b139-4bf6-8b16-b99b7cccf65d","for i in range(int(input())):
    w = 0
    n, k = map(int, input().split())
    while n != 0:
        if n % k == 0:
            n //= k
        else:
            n -= 1
        w += 1
    print(w)","0.0"
"0024e95a-bf71-4dac-a246-626b5821e403","n1,p1,m1,t1,s1=map(int,input().split())
n2,p2,m2,t2,s2=map(int,input().split())
x1=(m1*t1+s1+p1)*n1
x2=(m2*t2+s2+p2)*n2
if x1<x2:
    print('Python',x1)
elif x1>x2:
    print('Pascal',x2)
elif x1==x2:
    print('Draw',x1)","0.0"
"fa181552-a073-4c25-928c-1a5c48505a6b","n = int(input())
f = input()
result = []
k = 0
thelist = f.split()
thelist2 = map(int, thelist)
thelist3 = list(thelist2)
s = thelist3[0]
for i in range(n):
    if thelist3[i]==s:
        k+=1
    else:
        result.append(k)
        result.append(s)
        s = thelist3[i]
        k = 1
result.append(k)
result.append(s)        
print("" "".join(map(str, result)))","0.0"
"13bcf8ad-b139-4bf6-8b16-b99b7cccf65d","for i in range(int(input())):
    w = 0
    n, k = map(int, input().split())
    if k != 1:
        while n != 0:
            if n % k == 0:
                n //= k
            else:
                n -= 1
            w += 1
        print(w)
    else:
        print(n)","0.0"
"9e91eca3-2074-49fc-a46e-35630d7d0e53","t=int(input())
s=[int(i) for i in input().split()]
sp=[]
for i in range(len(s)+1):
    s1=s[:i]
    s2=s[i:]
    sp.append(sum(s1)-sum(s2))
print(max(sp))","0.0"
"13bcf8ad-b139-4bf6-8b16-b99b7cccf65d","a1 = []
for i in range(int(input())):
    c = 0
    a,b = map(int, input().split())
    while a != 0:
        if a%b != 0:
            c += a%b
            a =a - a%b
        else:
            a = a//b
            c+=1

    a1.append(c)
for i in a1:
    print(i)","0.0"
"fa181552-a073-4c25-928c-1a5c48505a6b","n=int(input())
x=[int(x) for x in input().split()]
x.append(11)
h=1
z=[]
for i in range(len(x)-1):
    if x[i]==x[i+1]:
        h+=1
    else:
        z.append(h)
        z.append(x[i])
        h=1
print(*z)","0.0"
"13bcf8ad-b139-4bf6-8b16-b99b7cccf65d","a = int(input())
b = []
c = 0
for i in range (0, a):
    n, k = map(int, input().split())
    while True:
        if (n%k)!=0 and n!=0:
            n=n-1
            c = c+1
        if (n % k) == 0 and n!=0:
            n = n/k
            c = c + 1
        if n == 0:
            break
        
    b.append(c)
    c = 0
for i in range (0, a):
    print(b[i])","0.0"
"c4a7e827-63de-424a-aec0-aea743d3b5f2","k, n = [int(i) for i in input().split()]
print(n//k+1, n%k)","0.0"
"13bcf8ad-b139-4bf6-8b16-b99b7cccf65d","def d(n, k):
    return n - k*(n//k)

c = int(input())

m = []
p = 0
for i in range(c):
    q = [int(x) for x in input().split()]
    n = q[0]
    k = q[1]
    while (n >= k):
        if (n%k == 0):
            p+=1
            n//=k
        else:
            z = d(n,k)
            p+=z
            n-=z
    p+=n
    m.append(p)
    p = 0
for x in m:
    print(x)","0.0"
"fa181552-a073-4c25-928c-1a5c48505a6b","n = int(input())
p = list(map(int, input().split()))
p.append('a')

count = 1
lst = []
for i in range(n):
    if p[i] == p[i + 1]:
        count += 1
    else:
        lst.append(count)
        lst.append(p[i])
        count = 1


print(*lst)","0.0"
"36d58b20-7fe1-452b-ac10-e1ed680aa6b3","n, k, t, c, d, p, nl, np = map(int,input().split())
s1 = k*t
s2 = c*d
s = 0
while s1 >= nl and s2 >= 1 and p >= np:
    s1 = s1-nl
    s2 = s2-1
    p = p-np
    s += 1
print(s, s//n+1)","0.0"
"13bcf8ad-b139-4bf6-8b16-b99b7cccf65d","a = int(input())
b = []
c = 0
for i in range (0, a):
    n, k = map(int, input().split())
    while True:
        if n == 0:
            break
        if (n%k)!=0 and n!=0:
            n=n-1
            c = c+1
        if (n % k) == 0 and n!=0:
            n = n/k
            c = c + 1
        
    b.append(c)
    c = 0
for i in range (0, a):
    print(b[i])","0.0"
"13bcf8ad-b139-4bf6-8b16-b99b7cccf65d","n = int(input())
a = 0

for i in range(n):
    s, k = list(map(int, input().split()))

    while s > 0:
        if s % k != 0:
            a = a + (s % k)
            s = s - (s % k)
        else:
            s = s // k
            a += 1
    print(a)
    a = 0","0.0"
"c4a7e827-63de-424a-aec0-aea743d3b5f2","a,b=map(int,input().split())
q= b - (b//a)*a
if b %a ==0:
    q= b - (b//a-1)*a
    print(b//a, q)
else:
    q= b - (b//a)*a
    print(b//a+1,q)","0.0"
"c4a7e827-63de-424a-aec0-aea743d3b5f2","s = input().split()
k = int(s[0])
n = int(s[1])
if n%k==0:
    ns = n//k
    st = 1
else:
    ns = n//k+1
    st = n%k
print(ns,st)","0.0"
"b962261e-7638-421f-9ea1-ecd77520e209","from math import sqrt


def main():
    number = int(input())
    for k in range(1, 5):
        decompose = to_sum_of_squares(number, k)
        if decompose:
            print(len(decompose))
            break


def to_sum_of_squares(n: int, k: 'squares count:int') -> list:
    if (n < 0) or (k <= 0):
        return []
    maximum = round(sqrt(n))
    if n == maximum * maximum:
        return [n]
    for c in range(1, maximum + 1):
        decomposition = to_sum_of_squares((n - c * c), k - 1)
        if decomposition:
            return [c * c] + decomposition


if __name__ == '__main__':
    main()","0.0"
"9e91eca3-2074-49fc-a46e-35630d7d0e53","def f():
    n = int(input())
    a = list(map(int, input().split()))
    ans = 0
    sl, sp = 0, sum(a)
    for i in a:
        ans = max(ans, abs(sp - sl))
        sp -= i
        sl += i
    print(ans)


f()","0.0"
"c4a7e827-63de-424a-aec0-aea743d3b5f2","a, b = map(int, input().split())

if a>=b:
    print(1,b)
else:
    if b%a == 0:
        print(b//a+1,1)
    else:
        print(b//a+1,b%a)","0.0"
"0024e95a-bf71-4dac-a246-626b5821e403","n1, p1, m1, t1, s1=map(int,input().split())
n2, p2, m2, t2, s2=map(int,input().split())
n1=n1*(p1+s1+m1*t1)
n2=n2*(p2+s2+m2*t2)
if n1<n2:
    print('Pyton',n1)
elif n2<n1:
    print('Pascal',n2)
else:
    print('Draw',n1)","0.0"
"36d58b20-7fe1-452b-ac10-e1ed680aa6b3","n, k, t, c, d, p, nl, np = map(int, input().split())
count = 0
l = True
soka = k * t
man = c * d
while l:
    if soka < nl:
        l = False
        break
    if man == 0:
        l = False
        break
    if p < np:
        l = False
        break
    count += 1
    soka -= nl
    man -= 1
    p -= np
if count > n:
    s = count - (count // (n + 1) * (n))
else:
    s = count
print(count, s)","0.0"
"36d58b20-7fe1-452b-ac10-e1ed680aa6b3","n, k, t, c, d, p, nl, np = map(int, input().split())

vlm = k * t
slices = c * d
comp = min(vlm // nl, slices, p // np)
if comp % n == 0:
    friend = n
else:
    friend = comp - (comp // n)

print(comp, friend)","0.0"
"9e91eca3-2074-49fc-a46e-35630d7d0e53","def f():
    n = int(input())
    a = list(map(int, input().split()))
    ans = 0
    sl, sp = 0, sum(a)
    for i in a:
        ans = max(ans, abs(max(sp - sl, sl - sp)))
        sp -= i
        sl += i
    print(ans)

f()","0.0"
"13bcf8ad-b139-4bf6-8b16-b99b7cccf65d","t = int(input())
f = 0
for i in range(t):
    n,k = map(int, input().split("" ""))
    while n!=0:
        if n%k==0:
            n/=k
        else:
            n-=1
        f+=1
    print(f)
    f=0","0.0"
"36d58b20-7fe1-452b-ac10-e1ed680aa6b3","n, k, t, c, d, p, nl, np = map(int, input().split())

vlm = k * t
slices = c * d
comp = min(vlm // nl, slices, p // np)
if comp % n == 0:
    friend = n
else:
    friend = comp - (comp // n) * n

print(comp, friend)","0.0"
"13bcf8ad-b139-4bf6-8b16-b99b7cccf65d","t = int(input())
f = 0
for i in range(t):
    n,k = map(int, input().split("" ""))
    while n!=0 and k!=1:
        if n%k==0:
            n/=k
        else:
            n-=1
        f+=1
    print(f)
    f=0","0.0"
"9e91eca3-2074-49fc-a46e-35630d7d0e53","a = input()
a = [int(i) for i in input().split()]
m = -100000000000000000000
for i in range(len(a)):
    if sum(a[:i]) - sum(a[i:]) > m:
        m = sum(a[:i]) - sum(a[i:])
print(m)","0.0"
"36d58b20-7fe1-452b-ac10-e1ed680aa6b3","n, k, t, c, d, p, nl, np=map(int, input(). split())
f=k*t
e=c*d
j=0
while f>=nl and e>0 and p>=np:
    j=j+1
    f=f-nl
    e=e-1
    p=p-np
if j>n:
    q=j%n
    if q==0:
        q=n
elif j==n:
    q=n
elif j<n:
    q=j
print(j, q)","0.0"
"c4a7e827-63de-424a-aec0-aea743d3b5f2","k,n=map(int,input().split())
if n%k==0 :
    print(n//k)
    print(k)
else:
    print(n//k+1, end=' ')
    print(n%k)","0.0"
"13bcf8ad-b139-4bf6-8b16-b99b7cccf65d","a = int(input())
b = []
c = 0
for i in range (0, a):
    n, k = map(int, input().split())
    while True:
        if n == 0:
            break
        if (n%k)!=0 and n!=0:
            n=n-1
            c = c+1
        if (n % k) == 0 and n!=0:
            n = n/k
            c = c + 1    
    b.append(c)
    c = 0
for i in range (0, a):
    print(b[i])","0.0"
"fa181552-a073-4c25-928c-1a5c48505a6b","n = int(input())
lst = [int(x) for x in input().split()]
s = []
l = lst[0]
t = -1
lst.append(-1)
for i in lst:
    if i == l:
        t +=1
    else:
        s.append(t+1)
        t = 0
        s.append(l)
        l = i
for k in s:
    print(k, end="" "")","0.0"
"c4a7e827-63de-424a-aec0-aea743d3b5f2","a, b = map(int, input().split())

if a>=b:
    print(1,b)
else:
    if b%a == 0:
        print(b//a,1)
    else:
        print(b//a+1,b%a)","0.0"
"9e91eca3-2074-49fc-a46e-35630d7d0e53","n = int(input())
s = list(map(int, input().split()))
m = []

for i in range(n):
    sum1 = 0
    j = 0
    while j <= i:
        sum1 += s[j]
        j += 1
    sum2 = sum(s) - sum1
    m.append(sum1 - sum2)
    m.append(sum2 - sum1)

print(max(m))","0.0"
"fa181552-a073-4c25-928c-1a5c48505a6b","n = int(input())
m = [int(x) for x in input().split()]
l = []
c = 0
z = 0
for i in range(len(m)-1):
    c+=1
    z = m[i]
    if (m[i] != m[i+1]):
        l.append(c)
        l.append(m[i])
        c = 0
if (z == m[n-1]):
    c+=1
    l.append(c)
    l.append(z)
else:
    l.append(c)
    l.append(z)
    l.append(1)
    l.append(m[n-1])
print(*l)","0.0"
"9e91eca3-2074-49fc-a46e-35630d7d0e53","def f():
    n = int(input())
    a = list(map(int, input().split()))
    ans = 0
    sl, sp = 0, sum(a)
    for i in a:
        if sl > 0 and sp > 0:
            razn = (max(sp, sl) - min(sp, sl))
        if sl > 0 and sp < 0:
            razn = abs(sl) + abs(sp)
        if sl < 0 and sp > 0:
            razn = abs(sp) + abs(sl)
        if sl < 0 and sp < 0:
            razn = min(sl, sp) - max(sl, sp)
        if 0 in [sl, sp]:
            razn = max(abs(sl), abs(sp))
        ans = max(ans, razn)
        sp -= i
        sl += i
    print(ans)


f()","0.0"
"13bcf8ad-b139-4bf6-8b16-b99b7cccf65d","t = int(input())
f = 0
for i in range(t):
    n,k = map(int, input().split("" ""))
    while n!=0:
        if n%k==0:
            n/=k
        else:
            n-=1
        f+=1
    print(f)
    f=0","0.0"
"c4a7e827-63de-424a-aec0-aea743d3b5f2","k,n=map(int,input().split())
if n%k==0 :
    print(n//k,end=' ')
    print(k)
else:
    print(n//k+1, end=' ')
    print(n%k)","0.0"
"c4a7e827-63de-424a-aec0-aea743d3b5f2","import math

a, b = list(map(int, input().split()))
ls = math.ceil(b/a)
lst = b%a+a*(b%a == 0)
print(ls, lst)","0.0"
"9e91eca3-2074-49fc-a46e-35630d7d0e53","n = int(input())
s = list(map(int, input().split()))
m = []

for i in range(n):
    sum1 = 0
    j = 0
    while j <= i:
        sum1 += s[j]
        j += 1
    sum2 = sum(s) - sum1
    m.append(sum1 - sum2)
    m.append(sum2 - sum1)

m.append(sum(s))

print(max(m))","0.0"
"9e91eca3-2074-49fc-a46e-35630d7d0e53","a = input()
a = [int(i) for i in input().split()]
m = -100000000000000000000
for i in range(len(a)):
    if abs(sum(a[:i]) - sum(a[i:])) > m:
        m = abs(sum(a[:i]) - sum(a[i:]))
print(m)","0.0"
"9e91eca3-2074-49fc-a46e-35630d7d0e53","a = input()
a = [int(i) for i in input().split()]
m = -100000000000000000000000000000000000000000000000000000000000000000000
for i in range(len(a)):
    if abs(sum(a[:i]) - sum(a[i:])) > m:
        m = abs(sum(a[:i]) - sum(a[i:]))
print(m)","0.0"
"13bcf8ad-b139-4bf6-8b16-b99b7cccf65d","q = int(input())
for i in range(q):
    w = 0
    n, k = map(int, input().split())
    while n != 0:
        if n % k == 0:
            n //= k
            w += 1
        else:
            w += n % k
            n -= n % k
    print(w)","0.0"
"13bcf8ad-b139-4bf6-8b16-b99b7cccf65d","p=int(input())
for i in range(p):
    n, k= map(int, input().split())
    t=0
    while n!=0:
        if n%k==0 and k>1:
            n=n//k
        else:
            n=n-1
        t+=1
    print(t)","0.0"
"13bcf8ad-b139-4bf6-8b16-b99b7cccf65d","t = int(input())


for i in range(t):
    a, b = map(int, input().split())

    count = 0
    while a != 0:
        if a % b == 0:
            a //= b
        else:
            a -= 1
        count += 1

    print(count)","0.0"
"13bcf8ad-b139-4bf6-8b16-b99b7cccf65d","t = int(input())
f = 0
for i in range(t):
    n,k = map(int, input().split("" ""))
    while n!=0:
        if n%k==0:
            n/=k
        else:
            n-=1
        f+=1
    print(f)
    f=0","0.0"
"598ac092-b788-4134-867c-8e307d515e67","l, j, res = [], [], 0
for i in range(int(input())):
    l.append([int(x) for x in input().split()])
j = [i[0] for i in l]
l = [sorted(i[1:], reverse = True) for i in l]
m = max([i[0] for i in l])
for i in range(len(j)):
    res += j[i]*(m-l[i][0])
print(res)","0.0"
"c4a7e827-63de-424a-aec0-aea743d3b5f2","k,n=map(int,input().split())
print(n//k+1,n%k)","0.0"
"c4a7e827-63de-424a-aec0-aea743d3b5f2","k,n=map(int,input().split())
if  n%k==0:
    print(n//k,n%k)
else :
    print(n//k+1,n%k)","0.0"
"c4a7e827-63de-424a-aec0-aea743d3b5f2","k,n=map(int,input().split())
if  n%k==0 :
    print(n//k,k)
else :
    print(n//k+1,n%k)","0.0"
"6d204921-764f-452c-a01d-578e51695a98","t=int(input())
for i in range(t):
    a,b,c=map(int,input().split())
    if a==b+c or b==a+c or c==a+b :
        print('YES')
    else :
        print('NO')","0.0"
"c4a7e827-63de-424a-aec0-aea743d3b5f2","k, n = map(int, input().split())
x = 0
y = 0
x = (n - 1) // k + 1
y = n % k
print(x, y)","0.0"
"6d204921-764f-452c-a01d-578e51695a98","t = int(input())
for i in range(t):
    a, b, c = sorted(map(int, input().split()))
    if a + b == c:
        print(""YES"")
    else:
        print(""NO"")","0.0"
"15f19bc8-7be3-4a44-a7b1-fc7505badaed","t = int(input())
for i in range(t):
    s = input()
    if s.lower() == 'python':
        print('YES')
    else:
        print('NO')","0.0"
"1b689872-4b61-4615-a14e-24e7a0bcb1ba","n = int(input())
a = [int(s) for s in input().split()]
print(len(set(a)))","0.0"
"190516a0-6ed3-4c42-9f36-dc481a3adb70","a = int(input())
b = int(input())
print(a + b)","0.0"
"c4a7e827-63de-424a-aec0-aea743d3b5f2","k, n = map(int, input().split())

if n % k == 0:
    page = n // k
else:
    page = n // k + 1

rows = n - (page - 1) * k

print(page, rows)","0.0"
"6d204921-764f-452c-a01d-578e51695a98","t = int(input())

for i in range(t):
    sides = list(map(int, input().split()))
    sides.sort()

    if sides[2] == sides[0] + sides[1]:
        print('YES')
    else:
        print('NO')","0.0"
"15f19bc8-7be3-4a44-a7b1-fc7505badaed","t = int(input())

for i in range(t):
    txt = input()
    if txt.lower() == 'python':
        print('YES')
    else:
        print('NO')","0.0"
"9e91eca3-2074-49fc-a46e-35630d7d0e53","n = int(input())
mas = list(map(int, input().split()))
mas1 = []
mas2 = []
for i in range(len(mas)):
    if mas[i] > 0:
        mas1.append(mas[i])
    else:
        mas2.append(mas[i])
print(sum(mas1) - sum(mas2))","0.0"
"c4a7e827-63de-424a-aec0-aea743d3b5f2","k,n = map(int, input().split())
print ((n-1)// k+1, (n-1)%k +1)","0.0"
"c4a7e827-63de-424a-aec0-aea743d3b5f2","from math import *
k,n = map(int, input().split())
print (ceil (n/k), (n-1)%k +1)","0.0"
"dc7df795-44d0-4efc-a04b-f0701610200f","a,b=map(int,input().split())

sp=[]
for m in range(1,50,2):
    for n in range(0,50,2):
        if a<=2**m*3**n and a<2**m*3**n<=b :
            sp.append(2**m*3**n)
sp.sort()
for i in sp:
    print(i)","0.0"
"9e91eca3-2074-49fc-a46e-35630d7d0e53","length = input()
arr = [int(s) for s in input().split()]
plus = 0
minus = 0

for item in arr:
    if item > 0:
        plus += item
    else:
        minus += item

print(plus - minus)","0.0"
"7da74132-0efc-4c1f-9755-f247bbba2ab9","x=int(input())


def ko(x):
    sp=[]
    for t in range(1,int(x**0.5)+1):
        if x%t==0:
            sp.append(t)
            if t!=x//t:
                sp.append(x//t)
    sp.sort()
    sp.reverse()
    return sp
k=0
for i in range(x+1,x*10000):
    spd=ko(i)
    if len(spd)>5:
        print(i,spd[5])
        k+=1
    if k==5:
        break","0.0"
"13bcf8ad-b139-4bf6-8b16-b99b7cccf65d","t = int(input())

for i in range(t):
    n, k = map(int, input().split())
    counter = 0
    while n != 0:
        if n % k != 0:
            counter += n % k
            n -= n % k
        else:
            n //= k
            counter += 1
    print(counter)","0.0"
"7da74132-0efc-4c1f-9755-f247bbba2ab9","a=int(input())
def kd(x):
    sp=[]
    for t in range(2,int(x**0.5)+1):
        if x%t==0:
            sp.append(t)
            if x//t!=t:
                sp.append(x//t)
    sp.sort()
    sp.reverse()
    return(sp)
spd=[]
k=0
for i in range(a+1, a**10):
    spd=kd(i)
    if len(spd)>=5:
        k+=1
        print(i,spd[4])
        if k==5:
            break","0.0"
"13bcf8ad-b139-4bf6-8b16-b99b7cccf65d","a=int(input())
for i in range(a):
    x=0
    n,k=map(int,input().split())
    while(n!=0):
        if n%k!=0:
            x+=n%k
            n-=n%k
        else:
            n=n//k
            x+=1
    print(x)","0.0"
"aea68e26-3891-4316-b0ca-0091e0125d96","a=int(input())
def kd(x):
    sp=[]
    for t in range(1,int(x**0.5)+1):
        if x%t==0:
            sp.append(t)
            if x//t!=t:
                sp.append(x//t)
    sp.sort()
    return(sp)
spd=[]
k=0
for i in range(a+1,a**100):
    spd=kd(i)
    for j in spd:
        if j%10==7 and j!=7 and j!=i:
            k+=1
            print(i,j)
            break
    if k>=5:
        break","0.0"
"aea68e26-3891-4316-b0ca-0091e0125d96","a=int(input())
def f(n):
    sp=[]
    for t in range(1,int(n**0.5)+1):
        if n%t==0:
            sp.append(t)
            if n//t!=t:
                sp.append(n//t)
    sp.sort()
    return sp


k=0
for i in range(a+1,a*10):
    spf=[]
    spf=f(i)
    for u in spf:
        if u%10==7 and u!=7 and u!=i:
            print(i,u)
            k+=1
            break
    if k>=5:
        break","0.0"
"4e22855c-d210-4e19-8715-87f6cf4bba7c","a,b=map(int,input().split())
def kd(x):
    sp=[]
    for t in range(1,int(x**0.5)+1):
        if x%t==0:
            sp.append(t)
            if x//t!=t:
                sp.append(x//t)
    sp.sort()
    return(sp)
spd=[]
k=0
for i in range(a,b):
    spd=kd(i)
    bl=[]
    for j in spd:
        if j%2==0:
            bl.append(j)
    if len(bl)==3:
        print(i)","0.0"
"4e22855c-d210-4e19-8715-87f6cf4bba7c","a,b=map(int,input().split())
def kd(x):
    sp=[]
    for t in range(1,int(x**0.5)+1):
        if x%t==0:
            sp.append(t)
            if x//t!=t:
                sp.append(x//t)
    sp.sort()
    return(sp)
spd=[]
k=0
for i in range(a,b):
    spd=kd(i)
    bl=[]
    for j in spd:
        if j%2==0:
            bl.append(j)
    if len(bl)==3:
        print(i)","0.0"
"91935175-de25-4b6f-bbaf-d836a8e01406","x=int(input())
sp=[]
for c in range(0,10):
    for i in range(0,10):
        p=int('12'+str(c)+str(i)+'156')
        if p%x==0:
                
            sp.append(p)
        for o in range(0,10):   
            
                
                
            p=int('12'+str(c)+str(i)+'1'+str(o)+'56')
            if p%x==0:
                
                sp.append(p)
            
        
sp.sort()

for p in sp:
    print(p,p//x)","0.0"
"7da74132-0efc-4c1f-9755-f247bbba2ab9","x=int(input())


def ko(x):
    sp=[]
    for t in range(1,int(x**0.5)+1):
        if x%t==0:
            sp.append(t)
            if t!=x//t:
                sp.append(x//t)
    sp.sort()
    sp.reverse()
    return sp
k=0
for i in range(x+1,x*10000):
    spd=ko(i)
    if len(spd)>=5:
        print(i,spd[5])
        k+=1
    if k==5:
        break","0.0"
"7da74132-0efc-4c1f-9755-f247bbba2ab9","x=int(input())


def ko(x):
    sp=[]
    for t in range(1,int(x**0.5)+1):
        if x%t==0:
            sp.append(t)
            if t!=x//t:
                sp.append(x//t)
    sp.sort()
    sp.reverse()
    return sp
k=0
for i in range(x+1,x*10000):
    spd=ko(i)
    if k==5:
        break
    if len(spd)>=5:
        print(i,spd[5])
        k+=1","0.0"
"7da74132-0efc-4c1f-9755-f247bbba2ab9","x=int(input())


def ko(x):
    sp=[]
    for t in range(2,int(x**0.5)+1):
        if x%t==0:
            sp.append(t)
            if t!=x//t:
                sp.append(x//t)
    sp.sort()
    sp.reverse()
    return sp
k=0
for i in range(x+1,x*10000):
    spd=ko(i)
    if len(spd)>=5:
        print(i,spd[4])
        k+=1
        if k==5:
            break","0.0"
"dc7df795-44d0-4efc-a04b-f0701610200f","a,b=map(int,input().split())
sp=[]
for m in range(1,50,2):
    for n in range(0,50,2):
        if 2**m*3**n>a and 2**m*3**n<b:
            sp.append(2**m*3**n)
sp.sort()
for i in sp:
    print(i)","0.0"
"4e22855c-d210-4e19-8715-87f6cf4bba7c","a,b=map(int,input().split())
def f(n):
    sp=[]
    for t in range(1,int(n**0.5)+1):
        if n%t==0:
            sp.append(t)
            if n//t!=t:
             sp.append(n//t)
    sp.sort()
    return(sp)
spd=[]
spt=[]
for i in range(a,b+1):
     spd=f(i)
     spt=[]
     for u in spd:
         if u%2==0:
             spt.append(u)
     if len(spt)==3:
        print(spt[-1])","0.0"
"b962261e-7638-421f-9ea1-ecd77520e209","from math import *
n=int(input())
if sqrt(n)%1==0:
    print(1)
x=ceil(sqrt(n))
for i in range(1,x):
    if sqrt(n-i*i)%1==0:
        print(2)
        break
else:
    print(3)","0.0"
"4e22855c-d210-4e19-8715-87f6cf4bba7c","a,b=map(int,input().split())
def f(n):
    sp=[]
    for t in range(1,int(n**0.5)+1):
        if n%t==0:
            sp.append(t)
            if n//t!=t:
             sp.append(n//t)
    sp.sort()
    return(sp)
spd=[]
spt=[]
for i in range(a,b+1):
     spd=[]
     spd=f(i)
     spt=[]
     for u in spd:
         if u%2==0:
             spt.append(u)
     if len(spt)==3:
        print(spt[-1])","0.0"
"c4a7e827-63de-424a-aec0-aea743d3b5f2","from math import *
k,n = map(int, input().split())
print (ceil (n/k), (n-1)%k +1)","0.0"
"4e22855c-d210-4e19-8715-87f6cf4bba7c","a,b=map(int,input().split())
def kd(x):
    sp=[]
    bl=[]
    for t in range(1,int(x**0.5)+1):
        if x%t==0:
            sp.append(t)
            if x//t!=t:
                sp.append(x//t)
    for j in sp:
        if j%2==0:
            bl.append(j)
    sp.sort()
    return(bl)
spd=[]
k=0
for i in range(a,b):
    spd=kd(i)
    if len(spd)==3:
        print(i)","0.0"
"4e22855c-d210-4e19-8715-87f6cf4bba7c","a,b=map(int,input().split())
def f(n):
    sp=[]
    for t in range(1,int(n**0.5)+1):
        if n%t==0:
            if t%2==0:
                sp.append(t)
                if len(sp)>3:
                    break
            if n//t!=t:
             if (n//t)%2==0:
                 sp.append(n//t)
                 if len(sp)>3:
                     break
    sp.sort()
    return(sp)
spd=[]
spt=[]
for i in range(a,b+1):
     spd=[]
     spd=f(i)
     if len(spd)==3:
         print(i)","0.0"
"c4a7e827-63de-424a-aec0-aea743d3b5f2","k,n=map(int,input().split())
print((n//k+1),n%k)","0.0"
"4e22855c-d210-4e19-8715-87f6cf4bba7c","a,b=map(int,input().split())
def f(n):
    sp=[]
    for t in range(1,int(n**0.5)+1):
        if n%t==0:
            if t%2==0:
                sp.append(t)
                if len(sp)>3:
                    return sp
            if n//t!=t:
                if (n//t)%2==0:
                    sp.append(n//t)
                    if len(sp)>3:
                        return sp
    return(sp)
spd=[]
spt=[]
for i in range(a,b+1):
     spd=[]
     spd=f(i)
     if len(spd)==3:
         print(i)","0.0"
"c4a7e827-63de-424a-aec0-aea743d3b5f2","from math import *
k,n=map(int, input().split())
print(ceil (n/k),(n-1)%k+1)","0.0"
"c4a7e827-63de-424a-aec0-aea743d3b5f2","from math import *
k,n=map(int,input().split())
print(ceil(n/k),(n-1)%k+1)","0.0"
"c4a7e827-63de-424a-aec0-aea743d3b5f2","from math import *
k, n = map(int, input().split())
print(ceil(n/k), (n-1)%k +1)","0.0"
"6d204921-764f-452c-a01d-578e51695a98","t = int(input())
for i in range(t):
    a,b,c = map(int,input().split())
    if a + b == c or a + c == b or b + c == a:
        print('YES')
    else:
        print('NO')","0.0"
"c4a7e827-63de-424a-aec0-aea743d3b5f2","k,n=map(int, input().split())
summ=1
while n>k:
    n=n-k
    summ+=1
print(summ, n, sep="" "")","0.0"
"c4a7e827-63de-424a-aec0-aea743d3b5f2","from math import *
k,n=map(int,input().split())
print(ceil(n/k), (n-1)%k+1)","0.0"
"c4a7e827-63de-424a-aec0-aea743d3b5f2","from math import*
k,n=map(int,input().split())
print(ceil(n/k),(n-1)%k +1)","0.0"
"c4a7e827-63de-424a-aec0-aea743d3b5f2","from math import *
k,n =map(int,input().split())
print (ceil (n/k),(n-1)% k+1)","0.0"
"4e22855c-d210-4e19-8715-87f6cf4bba7c","a,b=map(int,input().split())
def f(n):
    sp=[]
    k=0
    for t in range(1,int(n**0.5)+1):
        if n%t==0:
            if t%2==0:
                sp.append(t)
                k+=1
                if k>3:
                    return sp
            if n//t!=t:
                if (n//t)%2==0:
                    sp.append(n//t)
                    k+=1
                    if k>3:
                        return sp
    return(sp)
spd=[]
for i in range(a,b+1):
     spd=[]
     spd=f(i)
     if len(spd)==3:
         print(i)","0.0"
"4e22855c-d210-4e19-8715-87f6cf4bba7c","a,b=map(int,input().split())
def f(n):
    sp=[]
    k=0
    for t in range(1,int(n**0.5)+1):
        if n%t==0:
            if t%2==0:
                #sp.append(t)
                k+=1
                if k>3:
                    break
            if n//t!=t:
                if (n//t)%2==0:
                    #sp.append(n//t)
                    k+=1
                    if k>3:
                        break
    return(k)
spd=[]
for i in range(a,b+1):
     spd=[]
     tt=f(i)
     if tt==3:
         print(i)","0.0"
"4e22855c-d210-4e19-8715-87f6cf4bba7c","a,b=map(int,input().split())
def f(n):
    sp=[]
    k=0
    for t in range(1,int(n**0.5)+1):
        if n%t==0:
            if t%2==0:
                k+=1
                if k>3:
                    break
            if n//t!=t:
                if (n//t)%2==0:
                    k+=1
                    if k>3:
                        break
    return(k)
spd=[]
for i in range(a,b+1):
     spd=[]
     tt=f(i)
     if tt==3:
         print(i)","0.0"
"b962261e-7638-421f-9ea1-ecd77520e209","n = int(input())
t = 4
for x in range(1, int(n ** 0.5) + 1):
    for y in range(1, int(n ** 0.5) + 1):
        if ((n - x ** 2 - y ** 2) > 0) and (((n - x ** 2 - y ** 2) ** 0.5) == int((n - x ** 2 - y ** 2) ** 0.5)):
            t = 3
for x in range(1, int(n ** 0.5) + 1):
    if ((n - x ** 2) > 0) and (((n - x ** 2) ** 0.5) == int((n - x ** 2)** 0.5)):
        t = 2
if int(n ** 0.5) == n ** 0.5:
    t = 1     
print(t)","0.0"
"b962261e-7638-421f-9ea1-ecd77520e209","import math
n = int(input())
ans = 4
for i in range(1, int(math.sqrt(n)) + 1):
    for y in range(1, int(math.sqrt(n)) + 1):
        if (n - i ** 2 - y ** 2 > 0) and ((n - i ** 2 - y ** 2) ** 0.5 == int((n - i ** 2 - y ** 2) ** 0.5)):
            ans = 3

for i in range(1, int(math.sqrt(n)) + 1):
    if ((n - i ** 2) > 0) and (((n - i ** 2) ** 0.5) == int((n - i ** 2) ** 0.5)):
        ans = 2
        break
if math.sqrt(n) % 1 == 0:
    ans = 1
print(ans)","0.0"
"598ac092-b788-4134-867c-8e307d515e67","k = int(input())
arr = []

for i in range(k):
    arr1 = [int(s) for s in input().split()]
    arr1.pop(0)
    arr.append(arr1)

summ = 0

for i in range(len(arr) - 1):
    for j in range(len(arr[i])):
        arr[i][j] += abs(max(arr[i]) - max(arr[i + 1]))
        summ += abs(max(arr[i]) - max(arr[i + 1]))
print(summ)","0.0"
"598ac092-b788-4134-867c-8e307d515e67","n = int(input())
a = []
m = []
p = []
mx = 0
for i in range(n):
    a.append(list(map(int, input().split())))
    m.append(a[i].pop(0))
    x = max(a[i])
    p.append(x)
    if x > mx:
        mx = x
        y = i
s = 0
for i in range(n):
    if i != y:
        s += m[i] * (mx - p[i])
print(s)","0.0"
"408e0ac8-b3c0-4123-bcb2-e396802f5399","n = int(input())

if (n < 4) or (n % 2 == 1):
    print(0)
else:
    n //= 2
    if n % 2 == 1:
        print(n // 2)
    else:
        print(n // 2 - 1)","0.0"
"3d109570-fadd-47bd-b0cb-2d9d34ba11ca","x, p, y, t = map(int, input().split())
print(x ** p + y ** t)","0.0"
"c4a7e827-63de-424a-aec0-aea743d3b5f2","k,n=map(int,input().split())
b=n//k+1
a=n%k
print(b,a)","0.0"
"c4a7e827-63de-424a-aec0-aea743d3b5f2","k,n=map(int,input().split())
b=n//k+1
a=n%k
print(b,a)","0.0"
"15f19bc8-7be3-4a44-a7b1-fc7505badaed","t=int(input())
for i in range(1,t+1):
    s=input()
    if (s[0]=='P' or s[0]=='p') and (s[1]=='Y' or s[1]=='y') and (s[2]=='T' or s[2]=='t') and (s[3]=='H' or s[3]=='h') and (s[4]=='O' or s[4]=='o') and (s[5]=='N' or s[5]=='n')   :
        print(""YES"")
    else:
        print(""NO"")","0.0"
"fa181552-a073-4c25-928c-1a5c48505a6b","r=int(input())
s=list(map(int, input().split()))
s.append(0)
b=[]
k=1
n=0
for i in range(r):
       if s[i]==s[i+1]:
           k=k+1
           n=s[i]
       elif k==1:
           b.append(k)
           b.append(s[i])
       else :
           b.append(k)
           b.append(n)
           k=1
print(*b)","0.0"
"36d58b20-7fe1-452b-ac10-e1ed680aa6b3","n,k,t,c,d,p,nl,np=map(int,input().split())
s1=k*t//nl
s2=c*d
s3=p//np
a=min(s1,s2,s3)
b=a//n+1
print(a,b)","0.0"
"3afc315a-4d55-4193-8135-d8dd5c533c49","a,b=map(int,input().split())
sp=[]
for i in range(1,b+1):
    x=int(input())
    sp.append(x)
sp.sort()
summa=0
k=0
maxc=0
for d in range(b):
    if summa+sp[d]<=a:
        k+=1
        summa+=sp[d]
        maxc=sp[d]
    else:
        summa=summa-maxc+sp[d]
        if summa<=a:
            maxc=sp[d]
print(k,maxc)","0.0"
"6c2adae3-f5f9-4088-9bc6-567fe66476fb","a,b=map(int,input().split())
sp=[]
for i in range(1,a+1):
    x=int(input())
    sp.append(x)
sp.sort()
sp.reverse()
k=b
summa=0
for d in range(b):
    summa+=sp[d]*0.2
        
    
print(sp[k],int(summa))","0.0"
"6c2adae3-f5f9-4088-9bc6-567fe66476fb","a,b=map(int,input().split())
sp=[]
for i in range(1,a+1):
    x=int(input())
    sp.append(x)
sp.sort()
sp.reverse()
k=b
summa=0
for d in range(b):
    summa+=sp[d]*0.2
      
print(sp[k],int(summa))","0.0"
"6c2adae3-f5f9-4088-9bc6-567fe66476fb","a,b=map(int,input().split())
sp=[]
for i in range(1,a+1):
    x=int(input())
    sp.append(x)
sp.sort()
sp.reverse()
k=b
summa=0
for d in range(b):
    summa+=sp[d]
        
    
print(sp[k],int(summa*0.2))","0.0"
"dc2ce7e3-6bb9-4308-8c20-15410d948a3c","a=int(input())
sp=[]
for i in range(1,a+1):
    x=int(input())
    sp.append(x)
sp.sort()
dv=1
d=0
k=0
while d+dv<=a:
    if sp[d]+sp[-dv]==100:
        k+=1

        dv+=1
        d+=1
    elif sp[d]+sp[-dv]>100:
        dv+=1
    else:
        d+=1
        
print(k)","0.0"
"dc2ce7e3-6bb9-4308-8c20-15410d948a3c","a=int(input())
sp=[]
for i in range(1,a+1):
    x=int(input())
    sp.append(x)
sp.sort()
dv=a-1
d=0
k=0


while d<dv:
    if sp[d]+sp[dv]==100:
        k+=1
      
        dv-=1
        d+=1
    elif sp[d]+sp[dv]>100:
        dv-=1
    else:
        d+=1

print(k)","0.0"
"f2fd916a-4061-4f42-aa02-2ae337339c7a","n,k,m=map(int,input().split())
sp=[]
for s in range(0,n):
    x=int(input())
    sp.append(x)
sp.sort()
sp.reverse()

print(sp[k+m-1],sp[k-1])","0.0"
"7f4176cf-336a-4612-9d4d-31057447b99e","n,k=map(int,input().split())
sp=[]
for s in range(0,n):
    x=int(input())
    sp.append(x)
sp.sort()
sp.reverse()
spd=sp[0:k:]
spf=sp[k:k*2:]
print(sum(spf)//k,sum(spd)//k)","0.0"
"6bd877c6-1740-408f-a6ca-2f8adeae08f5","a=int(input())
b=int(input())

def ko(x):
    sp=[]
    for t in range(1,int(x**0.5)+1):
        if x%t==0:
            sp.append(t)
            if t!=x//t:
                sp.append(x//t)
    
    return sp
summa=0
for i in range(a,b+1):
    spd=ko(i)
    if len(spd)==3:
        while i>0:
            
            summa+=i%10
            i=i//10
print(summa)","0.0"
"931dc9d6-3183-4d35-bee6-95b210e0268a","a=int(input())


def ko(x):
    sp=[]
    for t in range(1,int(x**0.5)+1):
        if x%t==0:
            sp.append(t)
            if t!=x//t:
                sp.append(x//t)
    sp.sort()
    
    return sp
spf=ko(a)
print(*spf)","0.0"
"c6175ed3-a33c-4dbf-8f71-6ef2f9e31411","n = int(input())
A,B,C = map(int,input().split())
a,b,c = map(int, input().split())
n = n+1
k = (n*A*a)+(n*B*b)+(n*C*c)
print(k)","0.0"
"d49e80f4-ce33-4ded-aa53-337f8d0f73b8","n,k=map(int,input().split())
sp=[]
for i in range(n):
    s=int(input())
    sp.append(s)
sp.sort()
spd=[]
spd=sp[k:n-k]
print(max(spd),sum(spd)//len(spd))","0.0"
"ea085abc-b6a7-4545-86cb-85395a6c5937","n,k,m=map(int,input().split())
sp=[]
for i in range(n):
    s=int(input())
    sp.append(s)
sp.sort()
spd=[]
h=m
spd=sp[0:k]
spf=[]
spf=sp[n-m:n]

print(min(spf),sum(spd)//len(spd))","0.0"
"ffc65b57-d995-421d-a0bd-b34cc8cf34a5","print(sum(map(int, list(input()))))","0.0"
"ffc65b57-d995-421d-a0bd-b34cc8cf34a5","print(sum(map(int, list(input()))))","0.0"
"5d02ab7a-4394-4098-9f7a-ed3912083888","a=int(input())
b=int(input())
a+=1
b+=15
if a>=24:
    a-=24
if b>=60:
    print(a+1,b-60)
else:
    print(a,b)","0.0"
"1ff5a639-82a9-46d5-99e8-90b0529a5016","import math

a=int(input())
print(math.ceil(a/3))","0.0"
"510dc5c7-a46e-4b15-be50-4ecfa1e046bd","import math

a=int(input())
sp=list(map(int,input().split()))
if sum(sp)/a%1<0.5:
    
    print(math.floor(sum(sp)/a))
else:
    print(math.ceil(sum(sp)/a))","0.0"
"bbb640ed-435c-4dc9-8625-87b81a5a9b22","a,b=map(int,input().split())
if a>0:
    if b>0:
        print(""1"")
    else:
        print(""2"")
else:
    if b>0:
        print(""4"")
    else:
        print(""3"")","0.0"
"e5e8f4d5-0b0f-4a52-b5a7-12f8ef0a52f0","a = int(input())
b = int(input())
c = int(input())
array = [a, b, c]
array = sorted(array)
print(*array)","0.0"
"311d9bb7-84d8-4a04-9af9-fba11c6f224b","a, b = map(int, input().split())
print(a ** b)","0.0"
"6749cc47-75b3-4622-915b-5601e3963b66","x, y = map(int, input().split())
counter = 1
while x < y:
    x *= 1.1
    counter += 1
print(counter)","0.0"
"6749cc47-75b3-4622-915b-5601e3963b66","x, y = map(float, input().split())
counter = 1
while x < y:
    x *= 1.1
    counter+= 1
print(counter)","0.0"
"48f237db-e593-4be6-b3f9-10757a1d07ec","print(input())","0.0"
"f6f2af27-2624-4cd5-8ebf-27aa0c54e92c","a = int(input())
x = int(input())
b = int(input())
y = int(input())
c = int(input())
if a+c*x > b+c*y:
    print(""Mani"")
elif a+c*x < b+c*y:
    print(""Pulja"")
else:
    print(""Draw"")","0.0"
"c1d9340f-9135-4375-a447-490e2e1ff2e6","n = int(input())
m = int(input())
a = min(n, m // 2);
b = min(m, n // 2);
print (max(a,b))","0.0"
"e89d534d-5861-4b7b-b06d-d37e247dc249","t = int(input())
for i in range (t):
    n = int(input())
    a = set()
    for i in range (1,round(n ** 0.5)+1):
        x = i ** 2
        y = i ** 3
        if x <= n:  
            a.add(x)
        if y <= n:  
            a.add(y)
    print(len(a))","0.0"
"150821fb-095d-4519-b21f-2462c0415618","k, s = map(int,input().split())
p = 2 ** k
while p > s:
    p //= 2
    k -= 1
m = 0
y = s // p
m = m + y
s = s - y * p
while s > 0: 
    p //= 2
    if s >= p:
        s -= p
        m += 1   
print(m)","0.0"
"dd42948f-07fd-4e99-98e0-2696850335fe","s = input()
l = 1
while l == 1:
    k = 0
    for i in range (len(s)):
        if s[i] == '1':
            k += 1
    if k < 2:
        l = 2 
    else:
        s = str(k)
if k == 0:
    print(0)
else:
    print(1)","0.0"
"48f237db-e593-4be6-b3f9-10757a1d07ec","print(input())","0.0"
"6bda3287-a2ae-483d-9171-8373a20531d9","a = float(input())
b = float(input())

if a == b:
    print(""="")
elif a > b:
    print("">"")
else:
    print(""<"")","0.0"
"c0df7d49-26f5-451c-b44a-1e0bca60bca5","l = list(map(int, input().split()))
m, n =0, 0
for el in l:
  if el == 0:
    break
  n+=1
print(n)","0.0"
"48f237db-e593-4be6-b3f9-10757a1d07ec","print(input())","0.0"
"48f237db-e593-4be6-b3f9-10757a1d07ec","print(1)","0.0"
"48f237db-e593-4be6-b3f9-10757a1d07ec","print(input())","0.0"
"0dca2e13-f1bc-4578-8818-48b97c2d7490","n,m=map(int,input().split("" ""))
if n%2!=0:
    n+=1
if m%2!=0:
    m+=1
print(max(0,abs(m//2-n//2)-1))","0.0"
"f09f326d-8329-4d39-b628-04a1b3d99f07","n,k=map(int,input().split())
ans=0
ans+=n*2//k if (2*n%k)==0 else n*2//k+1
ans+=n*5//k if (5*n%k)==0 else n*5//k+1
ans+=n*8//k if (8*n%k)==0 else n*8//k+1
print(ans)","0.0"
"83c25cac-cf59-44a9-9214-be35c0bd5e06","a=int(input())
b=int(input())
c=int(input())
st=set()
v=[a,b,c]
ans=0
for i in range(1,4):
    for j in range(3):
        s=0
        for z in range(i):
            s+=v[(j+z)%3]
        st.add(s)
        for r in v:
            s-=r
            st.add(abs(s))
            s+=r
if 0 in st:
    st.remove(0)
print(len(st))","0.0"
"5d367d53-2714-49cb-b00d-72626739e49c","n=int(input())
s=input()
ans=0
for letter in s:
    if letter=='+':
        ans+=1
    else:
        ans-=1
    if ans<0:
        ans=0
print(ans)","0.0"
"33a72323-4374-42f2-8f8b-28a1ec69a960","s=input()
n=len(s)
st=set()
for i in range(n):
    s2=""""
    s2+=s[i]
    st.add(s2)
    for j in range(1,n-i):
        s2+=s[i+j]
        st.add(s2)
print(len(st))","0.0"
"267f2223-0096-4b57-bc54-1c2372772391","n=int(input())
l=list(map(int,input().split()))
for k in l:
    if k>= 15 and 0<k%14<=6:
        print(""YES"")
    else:
        print(""NO"")","0.0"
"7615eb4d-49ce-4586-825b-56ea69f157b5","n,m,k=map(int,input().split())
b=n%(10**k)
for i in range(m-1):
    b=(b*n)%(10**k)
print(b)","0.0"
"1877a515-ff97-43f2-8362-bc2952a26b5e","n = int(input())
cnt=0
for i in range(1,n//4+1):
    for j in range(i,n//3+1):
        for k in range(j,n//2+1):
            h=n-(i+j+k)
            if h>=k:
                cnt+=1
print(cnt)
","0.0"
"bfa57871-3996-4c10-b9f9-fcb21a8e6518","n,a,b=map(int,input().split())
if n%(a+b)==0:
  print(n//(a+b))
else:
  print(n//(a+b)+1)","0.0"
"461e80bc-c9f7-403f-9a42-3f1d08a78b1a","n=int(input())
l=list(map(int,input().split()))
a=[0 for x in range(10**6+1)]
fav=0
for i in range(1,n+1):
    sym=l[i-1]
    a[sym]+=1
    if a[sym]>a[fav]:
        fav=sym
    if a[fav]>(i//2):
        print(fav,end="" "")
    else:
        print(-1,end="" "")","0.0"
"4b81460a-5cad-47e0-b9ab-83fcd6a089ea","n=int(input())
a=[[0 for _ in range(101) ] for x in range(101)]
a[0]=[1 for _ in range(101) ]
for i in range(1,n+1):
	for j in range(1,n+1):
		a[i][j] = a[i][j - 1]
		if i-j>=0:
			a[i][j] += a[i-j][j-1]
print(a[n][n])
# a[i][j] - ÐºÐ¾Ð»-Ð²Ð¾ ÑÐ¿Ð¾ÑÐ¾Ð±Ð¾Ð² Ð¿ÑÐµÐ´ÑÑÐ°Ð²Ð¸ÑÑ i ÐºÑÐ±Ð¸ÐºÐ¾Ð²
# ÑÐµÑÐµÐ· Ð¿Ð¸ÑÐ°Ð¼Ð¸Ð´Ñ, Ð³Ð´Ðµ Ð½Ð¸Ð¶Ð½Ð¸Ð¹ ÑÐ»Ð¾Ð¹ Ð½Ðµ Ð±Ð¾Ð»ÑÑÐµ j","0.0"
"48531b77-6537-4389-a998-5c74e35ac9af","a=int(input ())
if a %3==0: print ('YES')
else: print ('NO')","0.0"
"1d86615d-36be-40a7-9d08-193f1af8b6b8","a, b, c, d = map(int, input().split())
x1 = min(a, b)
y1 = max(a, b)
x2 = min(c, d)
y2 = max(c, d)
if y1 < x2 or y2 < x1:
    res = y1- x1 + y2 - x2 + 2
elif x1 <= x2 and y2 <= y1:
    res = y1 - x1 + 1
elif x2 <= x1 and y1 <= y2:
    res = y2 - x2 + 1
elif x2 <= x1:
    res = y1 - x2 + 1
elif x1 <= x2:
    res = y2 - x1 + 1   
print(res)
","0.0"
"54c95a3e-10bc-4388-9722-619f9c35563c","a = int(input())
b = int(input())
k = int(input())
x = k / (b - a)
print('%.2f' %(x * a),'%.2f' %(x * b),end=' ')","0.0"
"787d2a09-3617-4050-820e-a01d43b2b188","a,b = map(int,input().split())
if a <= 2 and b >=5:
    print (1)
else:
    print (0)","0.0"
"31c3dbe2-53d4-4355-a73f-50d94fe0dd67","t = int(input())
s = 0
for i in range (1, t+1):
     k = int(input())
     y = 0
     j = 0
     while j<k:
          if y % 3 == 0 or y % 10 == 3:
               y += 1               
          else:
               y += 1
               j += 1
     print(y-1)    
     
     ","0.0"
"2289a224-3dec-40f4-935f-a614d8469cf0","a=int(input())
b=int(input())
c=int(input())

print(2*(2 * a + b + c))","0.0"
"2289a224-3dec-40f4-935f-a614d8469cf0","a=int(input())
b=int(input())
c=int(input())

print(2*(2 * a + b + c))","0.0"
"1d86615d-36be-40a7-9d08-193f1af8b6b8","a, b, c, d = map(int, input().split())
x1 = min(a, b)
y1 = max(a, b)
x2 = min(c, d)
y2 = max(c, d)
if y1 < x2 or y2 < x1:
    res = y1- x1 + y2 - x2 + 2
elif x1 <= x2 and y2 <= y1:
    res = y1 - x1 + 1
elif x2 <= x1 and y1 <= y2:
    res = y2 - x2 + 1
elif x2 <= x1:
    res = y1 - x2 + 1
elif x1 <= x2:
    res = y2 - x1 + 1   
print(res)
","0.0"
"3a5391b3-7918-4fa8-9eb6-8478632f15f0","h, m = list(map(int, input().split(':')))
time = h*60+m-30
if 500*60<=time<1200*60:
    print('morning')
elif 1200*60<=time<1750*60:
    print('day')
elif 1750*60<=time<2700*60:
    print('evening')
else:
    print('night')","0.0"
"addeb428-01ba-4987-9b50-6ad4f8c62a74","from math import log2
n = int(input())
while n!=0:
    print(int(log2(n))+1,end=' ')
    n-=2**(int(log2(n)))","0.0"
"addeb428-01ba-4987-9b50-6ad4f8c62a74","from math import log2
n = int(input())
while n!=0:
    print(int(log2(n))+1,end=' ')
    n-=2**(int(log2(n)))","0.0"
"0d9002cd-2fbd-461d-8c43-ba0350fe2e8e","n,x,y=map(int,input().split())
print ((x+y)*n)","0.0"
"702fc37e-8257-458c-aedd-8ca35534289a","a, b = map(int, input().split())
c, d = map(int , input().split())

if (a + b > c + d):
    print(a, b)
elif (a + b < c + d):
    print(c, d)
else:
    print(a, b, c, d)","0.0"
"31e85273-27d5-4648-8ff3-298be60d690e","a = int(input())
b = int(input())
c = int(input())
print((c-a)//b)
","0.0"
"ef110cdc-5bfe-4426-8a9b-fe4ca7392895","n = int(input())
if n==1:
    print(""  #"")
    print("" ##"")
    print(""# #"")
    print(""  #"")
    print(""  #"")
elif n==2:
    print(""###"")
    print(""  #"")
    print(""###"")
    print(""#  "")
    print(""###"")
elif n==3:
    print(""###"")
    print(""  #"")
    print(""###"")
    print(""  #"")
    print(""###"")
elif n==4:
    print(""# #"")
    print(""# #"")
    print(""###"")
    print(""  #"")
    print(""  #"")
elif n==5:
    print(""###"")
    print(""#  "")
    print(""###"")
    print(""  #"")
    print(""###"")
elif n==6:
    print(""###"")
    print(""#  "")
    print(""###"")
    print(""# #"")
    print(""###"")
elif n==7:
    print(""###"")
    print(""  #"")
    print(""  #"")
    print(""  #"")
    print(""  #"")
elif n==8:
    print(""###"")
    print(""# #"")
    print(""###"")
    print(""# #"")
    print(""###"")
elif n==9:
    print(""###"")
    print(""# #"")
    print(""###"")
    print(""  #"")
    print(""###"")
else:
    print(""###"")
    print(""# #"")
    print(""# #"")
    print(""# #"")
    print(""###"")
","0.0"
"6a5a3a27-897e-4d43-8eba-5774b08efba5","a = int(input())
b = int(input())
c = int(input())
if a>=b and c>=b:
    print(a+c-b-b)
elif a>=c and b>=c:
    print(a+b-c-c)
elif b>=a and c>=a:
    print(b+c-a-a)
","0.0"
"d545163d-9cf7-4877-9ec9-53b8c4b1b499","x,n,t = map(int,input().split())
cum=x
n=n-x
cum+=min(n,240//t)
print(cum)
","0.0"
"bcf28659-36f2-4add-99d1-7b600b104c71","x, y, z = map(int,input().split())
if x == y and z == 0:
        res = '0'
elif x + z < y: 
        res = '-'
elif y + z < x:
        res = '+'
else:
        res = '?'
print(res)
","0.0"
"d0c2eebb-d0a4-4fc8-9a98-9d5781c4d2d7","a, b = map(int, input().split())
# s = a
s = k = 0
while a != 0:
    s += a
    k += a % b
    a = a // b
while k != 0:
    k = k // b
    s += k
    
print(s)","0.0"
"d0c2eebb-d0a4-4fc8-9a98-9d5781c4d2d7","a, b = map(int, input().split())
# s = a
s = k = 0
while a != 0:
    s += a
    k += a % b
    a = a // b
while k != 0:
    k = k // b
    s += k
    
print(s)","0.0"
"6723979a-b30c-4944-b9fd-970aabedbea3","p, a, b, c = map(int,input().split())
a1 = a - ((p-1) % a +1)
b1 = b - ((p-1) % b +1)
c1 = c - ((p-1) % c +1)
print(min(a1,b1,c1))
","0.0"
"94c2e814-50e3-4d66-a2b1-fa52ccfc19ef","n = int(input())
d = list(map(int,input().split()))
a,b = map(int,input().split())
cum =0
for i in range(a,b):
    cum+=d[i-1]
print(cum)","0.0"
"bee15a15-bd8c-4a01-911e-ddf3e5ba6f80","n,m = map(int,input().split())
s = ''
for i in range(m-n%m):
    s+= str(n//m) + ' '

for i in range(n%m):
    s+= str((n//m)+1) + ' '

#print(s[0:len(s)])
print(s)","0.0"
"8e83aa88-b80e-4a89-97a6-773e94a0acf3","n =  int(input())
a = list(map(int,input().split()))
s = sum(a)
b = [0 for i in range (s + 1)]
x = 1
y = 0
for i in range(n):
    y = y + a[i]
    for j in range(x, y + 1):
        b[j] = i + 1
    x = y + 1
m = int(input())
c = list(map(int,input().split()))
for i in range(m):
    print(b[c[i]])
    
    
        ","0.0"
"8e83aa88-b80e-4a89-97a6-773e94a0acf3","n =  int(input())
a = list(map(int,input().split()))
s = sum(a)
b = [0 for i in range (s + 1)]
x = 1
y = 0
for i in range(n):
    y = y + a[i]
    for j in range(x, y + 1):
        b[j] = i + 1
    x = y + 1
m = int(input())
c = list(map(int,input().split()))
for i in range(m):
    print(b[c[i]])
    
    
        ","0.0"
"a62a737e-0fbc-451b-9f67-2d7804740ccf","a = int(input())
b = int(input())
c = int(input())
print((c - a) // b)
","0.0"
"d5e4d47f-6494-4c3f-b408-6562c81ae4e7","p, k, t, r = [int(i) for i in input().split()]
if p % k == 0:
    res = p // k *(t + r) - r
else:
    res = (p // k + 1) * t + (p // k * r)
print(res)
","0.0"
"a62a737e-0fbc-451b-9f67-2d7804740ccf","a=int(input())
b=int(input())
c=int(input())
c2=0
k=0
if c>=a:
    c2=c-a
    k=c2//b
print(k)
","0.0"
"a62a737e-0fbc-451b-9f67-2d7804740ccf","a = int(input())
b = int(input())
c = int(input())
print((c-a)//b)","0.0"
"94224cd9-666a-4814-8edb-60beb14ea59a","d = int(input())
m = int(input())
g = int(input())
if 2021 - g == 11:
    print('YES')
else:
    print('NO')
","0.0"
"a62a737e-0fbc-451b-9f67-2d7804740ccf","a=int(input())
b=int(input())
c=int(input())
print((c-a)//b)","0.0"
"6d14c7f2-95e1-464c-a3cb-bcab860928ae","d1, d2, d3 = [int(i) for i in input().split()]
print(min(d1 + d3 + d2, d1 + d1 + d2 + d2))
","0.0"
"6d14c7f2-95e1-464c-a3cb-bcab860928ae","d1, d2, d3 = [int(i) for i in input().split()]
print(min(d1 + d3 + d2, d1 + d1 + d2 + d2, d1 + d3 + d3 + d1))
","0.0"
"6d14c7f2-95e1-464c-a3cb-bcab860928ae","d1, d2, d3 = [int(i) for i in input().split()]
print(min(d1 + d3 + d2, d1 + d1 + d2 + d2, d1 + d3 + d3 + d1, d2 + d3 + d3 + d2))
","0.0"
"a62a737e-0fbc-451b-9f67-2d7804740ccf","A=int(input())
B=int(input())
C=int(input())
if B<=C:
    v=(C-A)//B
print(v)","0.0"
"d5e4d47f-6494-4c3f-b408-6562c81ae4e7","p, k, t, r = map(int, input().split())
if p % k == 0:
    print(((round(p//k))*t)+((p//k)-1)*r)
else:
    print(((round(p//k)+1)*t)+(p//k)*r)","0.0"
"cc10dddd-3324-493a-b0ac-ec2ff8c66cf6","string = input()
vowels = 'Ð°Ð±Ð²Ð³Ð´ÐµÑÐ¶Ð·Ð¸Ð¹ÐºÐ»Ð¼Ð½Ð¾Ð¿ÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑ'

string = string.lower()
counter_vowels = 0
counter_digits = 0

for i in range(len(string)):
    if (string[i] in vowels):
        counter_vowels += 1
    elif (string[i].isdigit()):
        counter_digits += 1

if (counter_vowels > counter_digits): print(1)
elif (counter_vowels < counter_digits): print(2)
else: print(0)

    
","0.0"
"abd77e3f-81bd-4c24-afdb-b64873f7c1c3","n = int(input())
digits = [int(s) for s in input().split()]

sm = 0

for i in digits:
    sm += i

print(sm / n)","0.0"
"abd77e3f-81bd-4c24-afdb-b64873f7c1c3","n = int(input())
digits = [int(s) for s in input().split()]

sm = 0

for i in digits:
    sm += i

print(round(sm / n, 1))","0.0"
"1d7d28c9-4d1b-4d70-b2e1-b0393775ab4a","string = input()

vowels = 'ÐÐÐÐÐÐ£Ð«Ð­Ð®Ð¯'
number = ''
counter = 0

for i in range(len(string)):
    if (string[i].isdigit()):
        number += string[i]
    elif (string[i] in vowels):
        counter += 1

print(int(number) % counter)
","0.0"
"3d109570-fadd-47bd-b0cb-2d9d34ba11ca","def exponent(number, exp):
    n = number
    for i in range(exp - 1):
        number *= n

    return number


x, p, y, t = map(int, input().split())

print(exponent(x, p) + exponent(y, t))

","0.0"
"0c2c7e3c-f232-46ee-b1a9-748e4ac46772","string = input().lower()

vowels = 'Ð°Ð±Ð²Ð³Ð´ÐµÑÐ¶Ð·Ð¸Ð¹ÐºÐ»Ð¼Ð½Ð¾Ð¿ÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑ'



event = False

for i in range(len(string)):
    if (string[i] in vowels) or string[i].isspace(): pass
    else:
        event = True
        break

if event: print(""YES"")
else: print(""NO"")","0.0"
"6d5943fe-80bb-4799-adf9-505069a003c1","string = input().lower()

vowels = 'abcdefghijklmnopqrstuvwzxyz'

indexes = []

for i in range(len(string)):
    if (string[i] in vowels): indexes.append(i + 1);

if len(indexes) == 0:
    print(-1)
else:
    print(*indexes)
","0.0"
"11f5282e-266d-41b6-b87e-01642625b2bd","number = input()

print(str(bin(int(number)))[2:])
print(str(oct(int(number)))[2:])
print(str(hex(int(number)))[2:])","0.0"
"84118453-37c4-4256-a8f0-5dc2707d4e35","number = int(input())

print(str(bin(number))[2:])","0.0"
"58443c34-5e1c-4cd5-b526-6442bc1c012d","string = input()
arr = string.split()

print(*arr)","0.0"
"6671bab8-0e57-4f15-bc39-c933a2495f50","a = int(input())
l = list(map(int, input().split()))
k = list()
if a % 2 !=0:
    l.append('k')
for i in range(0,a,2):
    k.append(l[i+1])
    k.append(l[i])
if a % 2 !=0:
    k.remove('k')
print(*k)","0.0"
"9cb9b7da-39db-403e-8612-483ae6cb4067","a = list(map(int, input().split()))
s = list()
for i in range(len(a)):
    if a[i] == 0:
        break
    else:
        s.append(a[i])
print(max(s))","0.0"
"aab4a01c-6efb-47a1-8fa2-2ea3e02303c7","import math
a = int(input())
b = int(input())
print(math.ceil(b/a))","0.0"
"1c8423df-d978-4e69-b8d5-886b1c2c745b","h = int(input())
m = int(input())
h+=1
m+=30
if h > 25:
    h = h - 24
if m >= 60:
    m = m - 60
    h+=1
print(h,m)","0.0"
"48f237db-e593-4be6-b3f9-10757a1d07ec","a = int(input())
print(a)","0.0"
"3d109570-fadd-47bd-b0cb-2d9d34ba11ca","a,b,c,d = map(int,input().split())
print(a**b+c**d)","0.0"
"3d109570-fadd-47bd-b0cb-2d9d34ba11ca","a,b,c,d = map(int,input().split())
print(pow(a,b)+pow(c,d))","0.0"
"3d109570-fadd-47bd-b0cb-2d9d34ba11ca","a,b,c,d = map(int,input().split())
print(pow(a,b)+pow(c,d))","0.0"
"3d109570-fadd-47bd-b0cb-2d9d34ba11ca","a,b,c,d = map(int,input().split())
def optimize(val, power):
    result = pow(val, power//2)
    result = result * result
    if power % 2 != 0:
        result = result * val
    return result
cal = optimize(a, b)
cal2 = optimize(c, d)
print(cal+cal2)","0.0"
"3d109570-fadd-47bd-b0cb-2d9d34ba11ca","a,b,c,d = map(int,input().split())
def power(x, y):
    temp = 0
    if(y == 0):
        return 1
    temp = power(x, int(y / 2))
    if y % 2 == 0:
        return temp * temp
    else:
        return x * temp * temp
cal = power(a, b)
cal2 = power(c, d)
print(cal+cal2)
","0.0"
"3d109570-fadd-47bd-b0cb-2d9d34ba11ca","a,b,c,d = map(int,input().split())
def fast_pow(x, y):
    if y == 0:
        return 1
    if y == -1:
        return 1. / x
    p = fast_pow(x, y // 2)
    p *= p
    if y % 2:
        p *= x
    return p
cal = fast_pow(a, b)
cal2 = fast_pow(c, d)
print(cal+cal2)
","0.0"
"84118453-37c4-4256-a8f0-5dc2707d4e35","a = int(input())
print(str(bin(a))[2:])","0.0"
"5be45c97-769f-45be-9ed4-b4dd633ac057","print(*input().split())","0.0"
"6749cc47-75b3-4622-915b-5601e3963b66","x, y = map(float, input().split())
counter = 1
while x < y:
    x *= 1.1
    counter+= 1
print(counter)","0.0"
"c4a7e827-63de-424a-aec0-aea743d3b5f2","import math
a,b = map(int, input().split())
k = math.ceil(b/a)
print(k, b - ((k-1)*a))

","0.0"
"e5e8f4d5-0b0f-4a52-b5a7-12f8ef0a52f0","a = int(input())
b = int(input())
c = int(input())
k = list()
k.append(a)
k.append(b)
k.append(c)
print(*sorted(k))","0.0"
"6749cc47-75b3-4622-915b-5601e3963b66","a,b = map(int, input().split())
k = 1
while a <= b:
    k+=1
    a = a * 1.1
print(k)","0.0"
"16305713-d2dc-4ab1-8bbd-107594c55519","a = int(input())
b = int(input())
c = int(input())
x = max(a,b,c)
if a+b < c and a+c < b and c+b<a:
    print('impossible')
else:   
    if x == a:
        if x**2 == b**2+c**2:
            print('right')
        elif x**2 > b**2+c**2:
            print('obtuse')
        else:
            print('acute')
    elif x == b:
        if x**2 == a**2+c**2:
            print('right')
        elif x**2 == a**2+c**2:
            print('obtuse')
        else:
            print('acute')
    else:
        if x**2 == b**2+a**2:
            print('right')
        elif x**2 == b**2+a**2:
            print('obtuse')
        else:
            print('acute')","0.0"
"16305713-d2dc-4ab1-8bbd-107594c55519","a = int(input())
b = int(input())
c = int(input())
x = max(a,b,c)
if a+b < c and a+c < b and c+b<a:
    print('impossible')
else:   
    if x == a:
        if x**2 == b**2+c**2:
            print('right')
        elif x**2 > b**2+c**2:
            print('obtuse')
        else:
            print('acute')
    elif x == b:
        if x**2 == a**2+c**2:
            print('right')
        elif x**2 > a**2+c**2:
            print('obtuse')
        else:
            print('acute')
    else:
        if x**2 == b**2+a**2:
            print('right')
        elif x**2 > b**2+a**2:
            print('obtuse')
        else:
            print('acute')","0.0"
"893cc270-337f-4829-bb45-0f60d1209419","import math
n = int(input())
print(math.ceil(math.log(n,2)))","0.0"
"ffc65b57-d995-421d-a0bd-b34cc8cf34a5","a = input()
k = 0
for i in a:
    k = k + int(i)
print(k)","0.0"
"c519c7c3-cc1b-42eb-ae0d-77219a6ca340","a = input()
k = 0
for i in a:
    if i == '0':
        k+=1
print(k)","0.0"
"3d57ecc4-72d1-43f5-ae17-2cc26c570f11","a = input()
print(a[::-1])","0.0"
"3d7a3219-e451-4f8b-894c-c96623eba5e5","a = input()
k = a[::-1]
if a == k:
    print('YES')
else:
    print('NO')","0.0"
"1516a6df-2eca-4d9d-8705-395d2d5f3a1d","a = input()
k = list()
s = 0
for i in a:
    s = int(i)
    k.append(s)
print(min(k),max(k))","0.0"
"05c50d73-fe75-4975-9d19-7e26e8c8d05f","a = input()
word_list = a.split()
print(len(word_list))","0.0"
"521b1be0-3bd5-45f4-94f5-dad4b82ad375","n = int(input())
c = list(map(int,input().split()))
print(max(c))","0.0"
"7488edcd-5001-458e-955c-d220494cffde","n = int(input())
c = list(map(int,input().split()))
print(min(c))","0.0"
"44c593b7-23d8-44af-b1aa-6e5ecbdf6cf1","n = int(input())
c = list(map(int,input().split()))
print((max(c)+min(c))/2)","0.0"
"9f26801e-6448-47ab-af7c-8cd9ec482ddf","n = int(input())
c = list(map(int,input().split()))
print(sum(c))","0.0"
"abd77e3f-81bd-4c24-afdb-b64873f7c1c3","n = int(input())
c = list(map(int,input().split()))
print(sum(c)/len(c))","0.0"
"1a27e016-52ff-4e78-89cb-956f0a7cac6b","n = int(input())
c = list(map(int,input().split()))
c.sort()
print(*c)","0.0"
"94a4304c-1628-4b48-a1bb-62970467c416","n = int(input())
c = list(map(int,input().split()))
c.sort()
print(*c)","0.0"
"702fc37e-8257-458c-aedd-8ca35534289a","a,b = map(int,input().split())
c,d = map(int,input().split())
if a+b>c+d:
    print(a,b)
if a+b<c+d:
    print(c,d)
if a+b == c+d:
    print(a,b,c,d)","0.0"
"702fc37e-8257-458c-aedd-8ca35534289a","a,b = map(int,input().split())
c,d = map(int,input().split())
if a+b>c+d:
    print(a,b)
if a+b<c+d:
    print(c,d)
if a+b == c+d:
    print(a,b,c,d)","0.0"
"702fc37e-8257-458c-aedd-8ca35534289a","a,b = map(int,input().split())
c,d = map(int,input().split())
if a+b>c+d:
    print(a,b)
elif a+b<c+d:
    print(c,d)
else: 
    print(a,b,c,d)","0.0"
"3ac18983-f406-44b5-96bf-2aa5ce5a6c3d","a = int(input())
b = list(map(int, input().split()))
k2 =0
k3=0
k4=0
k5=0
for i in b:
    if i == 5:
        k5 +=1
    if i == 4:
        k4+=1
    if i == 3:
        k3+=1
    if i == 2:
        k2+=1
print(5,k5)
print(4,k4)
print(3,k3)
print(2,k2)","0.0"
"510dc5c7-a46e-4b15-be50-4ecfa1e046bd","a = int(input())
b = list(map(int, input().split()))
print(round(sum(b)/len(b)))","0.0"
"3d13981c-49a5-449f-aef6-a62cad45d8f4","import math
a,b = map(int,input().split())
print(int(math.factorial(a)*math.factorial(b)/math.factorial(a-b)))","0.0"
"6d204921-764f-452c-a01d-578e51695a98","a = int(input())
for i in range(a):
    x,y,z = map(int, input().split())
    if x+y==z or x+z==y or z+y==x:
        print('YES')
    else:
        print('NO')
","0.0"
"a0f460df-bf11-47a1-b164-d95c2d265cc6","a = int(input())
k = list(map(int,input().split()))
k.sort()
k.reverse()
print(*k)","0.0"
"5be45c97-769f-45be-9ed4-b4dd633ac057","a = input()
print("" "".join(a.split()))


","0.0"
"645dbba8-e48e-4111-abe4-d1ca480792d6","a = input()
k = list()
for i in a:
    k.append(int(i))
print(*k)","0.0"
"4ecec1ec-211d-4ce0-bd4b-ee2498ae1afa","a = input()
k = list()
for i in a:
    k.append(int(i))
k.reverse()
print(*k)","0.0"
"2488a6a1-fc84-46c8-bd28-ea8791f78298","a = int(input())
b = int(input())
c = int(input())
print(a*c+(b*c)//100,b*c%100)","0.0"
"5b2cb964-e915-4506-b4fe-22b78644939c","a = int(input())
b = int(input())
c = int(input())
if a==b and a==c:
    print('3')
elif a==b and a!=c or b!=a and b==c or c==a and c!=b:
    print('2')
else:
    print('0')","0.0"
"1b689872-4b61-4615-a14e-24e7a0bcb1ba","n = int(input())
k = list(map(int, input().split()))
s=0
k.append('d')
for i in range(n):
    if k[i] != k[i+1]:
        s+=1
print(s)","0.0"
"22e720bb-1b6c-470d-bb7b-da0de5a83f45","import math

x1, y1, x2, y2, x3, y3 = list(map(int, input().split()))
a = math.sqrt((x2 - x1) ** 2 + (y2 - y1) ** 2)
b = math.sqrt((x3 - x1) ** 2 + (y3 - y1) ** 2)
c = math.sqrt((x2 - x3) ** 2 + (y2 - y3) ** 2)
p = (a + b + c) / 2
res = math.sqrt(p * (p - a) * (p - b) * (p - c))
print('%.5f' % res)","0.0"
"22e720bb-1b6c-470d-bb7b-da0de5a83f45","import math

x1, y1, x2, y2, x3, y3 = list(map(int, input().split()))
a = math.sqrt((x2 - x1) ** 2 + (y2 - y1) ** 2)
b = math.sqrt((x3 - x1) ** 2 + (y3 - y1) ** 2)
c = math.sqrt((x2 - x3) ** 2 + (y2 - y3) ** 2)
p = (a + b + c) / 2
res = math.sqrt(p * (p - a) * (p - b) * (p - c))
print('%.5f' % res)","0.0"
"150f8ae8-1577-4cb8-98b7-775b5ddba6c1","import math
a,b = map(int,input().split())
print(math.gcd(a,b))","0.0"
"5773ddc5-745f-44f7-aab7-59268bb9c5cd","a,b,c = map(int,input().split())
x,y,z = map(int,input().split())
print((x-a)*3600 + (y-b)*60 + z - c)","0.0"
"0ef5465b-370a-4084-bd37-fb4d3b6b398a","a = int(input())
print(a//10%10)","0.0"
"b85b4d55-02c5-4f5b-9c58-538068bf5699","import math
a,b,c = map(int, input().split())
suma = a+b+c
print(math.ceil(suma/2))","0.0"
"180b3b37-5ed9-4f3c-9300-48ae0b5121fa","a = int(input())
b = int(input())
l = int(input())
N = int(input())
print(2 * l + (2 * N - 1) * a + 2 * (N - 1) * b)","0.0"
"bbb640ed-435c-4dc9-8625-87b81a5a9b22","a,b = map(int,input().split())
if a > 0 and b >0:
    print(1)
if a > 0 and b<0:
    print(4)
if a < 0 and b <0:
    print(3)
if a < 0 and b > 0:
    print(2)","0.0"
"58d6743b-8cff-47a7-bd29-e0ba865928f3","n, i, j = map(int, input().split())

if i < j:
    a = i + abs(j - n) - 1
else:
    a = j + abs(i - n) - 1

b = abs(i - j) - 1

if a < b:
    print(a)
else:
    print(b)","0.0"
"2ee76cc8-f815-4807-a797-4059ae8a8d76","a = int(input())
k = list(map(int, input().split()))
kl = list()
k.append(10101)
k.sort()
for i in range(len(k)-1):
    if k[i] != k[i+1]:
        kl.append(k[i])
        print(k[i],k.count(k[i]))","0.0"
"076a1e7a-9e4f-40ff-a271-7a009406d02d","a = int(input())
k = list(map(int, input().split()))
k.sort()
print(*k)","0.0"
"3bda5701-c742-4f44-9bdb-d4b772de2705","a,b = map(int, input().split())
x,y = map(int, input().split())
if a*b < x*y:
    print('YES')
else:
    print('NO')
","0.0"
"3bda5701-c742-4f44-9bdb-d4b772de2705","a,b = map(int, input().split())
x,y = map(int, input().split())
if a*b <= x*y:
    print('YES')
else:
    print('NO')
","0.0"
"443dff94-1bdb-4880-8ae7-7a899a197e4e","a,b,c = map(int, input().split())
if a+b == c or a+c == b or b+c == a:
    print('YES')
else:
    print('NO')","0.0"
"e5e8f4d5-0b0f-4a52-b5a7-12f8ef0a52f0","a = int(input())
k = list()
b = int(input())
c = int(input())
k.append(a)
k.append(b)
k.append(c)
k.sort()
print(*k)","0.0"
"e5e8f4d5-0b0f-4a52-b5a7-12f8ef0a52f0","a = int(input())
k = list()
b = int(input())
c = int(input())
k.append(a)
k.append(b)
k.append(c)
k.sort()
print(*k)","0.0"
"6749cc47-75b3-4622-915b-5601e3963b66","a,b = map(float, input().split())
k = 1
while a < b:
    k+=1
    a= a*1.1
print(k)","0.0"
"efe1a482-a2db-4971-a769-8b60a0beaf64","a = int(input())
k = 0
b = list(map(int, input().split()))
b.append(0)
for i in range(0,a):
    if b[i] > b[i+1]:
        k+=1
print(k-1)","0.0"
"48531b77-6537-4389-a998-5c74e35ac9af","a = int(input())
if a%3 == 0:
    print('YES')
else:
    print('NO')","0.0"
"8ce41d60-130a-4863-a45a-1fd4e48e5f32","x,y = map(int, input().split())
if x>0 and y>0:
    print('1')
elif x<0 and y>0:
    print('2')
elif x<0 and y<0:
    print('3')
else:
    print('4')","0.0"
"2fbbe9c8-9707-450c-82c7-1239bb38b1cd","a =input()
print(a.count('!'))","0.0"
"e291f79e-b00b-4223-8250-eb7e45d39e54","a =input()
a = a.replace(""R"",'Z')
a = a.replace('r','z')
print(a)","0.0"
"7c143f80-2e7e-4890-bee7-ffbdcbf5b05b","a = list(map(str,input().split()))
k = 0
for i in a:
    if len(i) == 1:
        k+=1
print(k)","0.0"
"b85b4d55-02c5-4f5b-9c58-538068bf5699","import math
a,b,c = map(int,input().split())
print(math.ceil(a/2)+math.ceil(b/2)+math.ceil(c/2))","0.0"
"5ae76e60-094f-4777-acc2-83ebca17f84c","n = int(input())
if n == 100:
    print(""C"")
else:
    tens = n // 10
    ones = n % 10
    if tens == 1:
        print(""X"", end="""")
    elif tens == 2:
        print(""XX"", end="""")
    elif tens == 3:
        print(""XXX"", end="""")
    elif tens == 4:
        print(""XL"", end="""")
    elif tens == 5:
        print(""L"", end="""")
    elif tens == 6:
        print(""LX"", end="""")
    elif tens == 7:
        print(""LXX"", end="""")
    elif tens == 8:
        print(""LXXX"", end="""")
    elif tens == 9:
        print(""XC"", end="""")
    
    if ones == 1:
        print(""I"")
    elif ones == 2:
        print(""II"")
    elif ones == 3:
        print(""III"")
    elif ones == 4:
        print(""IV"")
    elif ones == 5:
        print(""V"")
    elif ones == 6:
        print(""VI"")
    elif ones == 7:
        print(""VII"")
    elif ones == 8:
        print(""VIII"")
    elif ones == 9:
        print(""IX"")
","0.0"
"1b689872-4b61-4615-a14e-24e7a0bcb1ba","n = int(input())
print(len(list(set(input().split()))))","0.0"
"521b1be0-3bd5-45f4-94f5-dad4b82ad375","n = int(input())
print(max(list(map(int, input().split()))))","0.0"
"c6175ed3-a33c-4dbf-8f71-6ef2f9e31411","n=int(input())
a=[int(i) for i in input().split()]
b=[int(i) for i in input().split()]
summa=0
for i in range(3):
    summa+=a[i]*b[i]

print(summa*(n+1))","0.0"
"a4b90367-4dc9-4d5f-84d6-56245ea5afc4","a=[int(x) for x in input().split()]
if a[2]<=a[0]:
  t = 2*a[1]
elif a[2]*2 % a[0]==0:
  t = a[1]*(a[2]*2 // a[0])
else:
  t = a[1]*(1+(a[2]*2 // a[0]))
print(t)","0.0"
"c270a9c3-67af-4113-8e7d-a7a94792013d","c = []
for i in range(int(input())):
    a,b = map(int,input().split())
    b1 = 0
    for i in range(b):
        b1+=i
    if b1>a:
        c.append('NO')
    else:
        c.append(""YES"")
for i in c:
    print(i)","0.0"
"f2d92959-39d9-49fe-a9b1-5868567eeedf","n = int(input())
n = n*2.54
print(int(n//1))","0.0"
"1ff5a639-82a9-46d5-99e8-90b0529a5016","n = int(input())
print((n-1)//3+1)","0.0"
"f2d92959-39d9-49fe-a9b1-5868567eeedf","p = int(input())
d = 2.54
for x in range (2, 101):
    l = p*d
print(round(l))","0.0"
"f2d92959-39d9-49fe-a9b1-5868567eeedf","p = int(input())
d = 2.54
l = p*d
print(round(l))","0.0"
"5d02ab7a-4394-4098-9f7a-ed3912083888","h = int(input())
m = int(input())
j = h*60+m
j = j+75
k = j%1440
print(k//60, k%60, sep="" "")","0.0"
"f2d92959-39d9-49fe-a9b1-5868567eeedf","x=int(input())
y=x*2.54
print(int(y))    ","0.0"
"f2d92959-39d9-49fe-a9b1-5868567eeedf","p = int(input())
d = 2.54
l = p*d
print(int(l))","0.0"
"f2d92959-39d9-49fe-a9b1-5868567eeedf","x=int(input())
y=x*2.54
print(int(y))","0.0"
"13bcf8ad-b139-4bf6-8b16-b99b7cccf65d","t = int(input())
s = 1
array = []
for i in range(t):
    n, k = map(int,input().split())
    summa = 0
    while n != 0:
        if n % k == 0:
            n //= k
            summa += 1
        else:
            n -= 1
            summa += 1
    array.append(summa)
for k in array:
    print(k)
","0.0"
"13bcf8ad-b139-4bf6-8b16-b99b7cccf65d","t = int(input())
s = 1
array = []
for i in range(t):
    n, k = map(int,input().split())
    summa = 0
    while n != 0:
        if n % k == 0:
            n //= k
            summa += 1
        else:
            n -= 1
            summa += 1
    print(summa)
","0.0"
"f2d92959-39d9-49fe-a9b1-5868567eeedf","l = int(input())
lcm = l*2.54
print(round(lcm))","0.0"
"5d02ab7a-4394-4098-9f7a-ed3912083888","h = int(input())
m = int(input())
c = (h * 60 + m)+ 75
c1 = int(c/60)
c12 = c1%24
c2 = c%60
print(c12, c2)","0.0"
"5d02ab7a-4394-4098-9f7a-ed3912083888","h=int(input())
m=int(input())
c=h*60+m+75 
c1=int(c/60)%24
c2=c%60
print(c1,c2)","0.0"
"5d02ab7a-4394-4098-9f7a-ed3912083888","h=int(input())
m=int(input())
c=(h*60+m)+75
c1=int(c/60%24)
c2=c%60
print(c1,c2)","0.0"
"f2d92959-39d9-49fe-a9b1-5868567eeedf","import math
l = int(input())
lcm = l*2.54
print(math.floor(lcm))","0.0"
"1ff5a639-82a9-46d5-99e8-90b0529a5016","n = int(input())
c = n//3
print(c+1)","0.0"
"1ff5a639-82a9-46d5-99e8-90b0529a5016","x=int(input())
print((x//3)+1)","0.0"
"1ff5a639-82a9-46d5-99e8-90b0529a5016","x=int(input())
print((x//3)+1)","0.0"
"c4a7e827-63de-424a-aec0-aea743d3b5f2","a, b = map(int, input().split())
h = (b-1)//a+1
m = b%a
print(h, m, sep=' ')","0.0"
"f2d92959-39d9-49fe-a9b1-5868567eeedf","l=int(input())
n=l*2.54 
print(round(n//1))
","0.0"
"c4a7e827-63de-424a-aec0-aea743d3b5f2","a, b = map(int, input().split())
h = (b-1)//a+1
m = b%a
if m==0:
    m=1
print(h, m, sep=' ')","0.0"
"52fd296b-798f-4462-889c-5b49172bf987","x=int(input())
y=int(input())
z=int(input())
c=26*x
d=38*y
a=42*z
q=2*17*29
print(q-a-d-c)","0.0"
"52fd296b-798f-4462-889c-5b49172bf987","n = int(input())
m = int(input())
k = int(input())
d = 2 * 17 * 29
n1 = n * 26
m1 = m * 38
k1 = k * 42
print(d - n1 - m1 - k1)","0.0"
"52fd296b-798f-4462-889c-5b49172bf987","n=int(input())
m=int(input())
k=int(input())
c=26*n
d=38*m
a=42*k
q=2*17*29
print(q-a-d-c)","0.0"
"15f19bc8-7be3-4a44-a7b1-fc7505badaed","t = int(input())
for i in range(t):
    s = input()
    if s.upper() == 'PYTHON':
        print('YES')
    else:
        print('NO')
","0.0"
"1ff5a639-82a9-46d5-99e8-90b0529a5016","x=int(input())
print((x//3)+1)","0.0"
"c4a7e827-63de-424a-aec0-aea743d3b5f2","k,n = map(int,input().split())
h = (n-1)//k+1
d = n%k
if d==0:
    d=1
print(h,d)
","0.0"
"1ff5a639-82a9-46d5-99e8-90b0529a5016","x=int(input())
s=x//3+(x%3!=0)
print(s)
","0.0"
"1ff5a639-82a9-46d5-99e8-90b0529a5016","n = int(input())
k = n//3+(n%3 != 0) 
print(k)
","0.0"
"1ff5a639-82a9-46d5-99e8-90b0529a5016","x=int(input())
s=x//3+(x%3!=0)
print(s)","0.0"
"311d9bb7-84d8-4a04-9af9-fba11c6f224b","a,b = map(int, input().split())
print(a**b)","0.0"
"645dbba8-e48e-4111-abe4-d1ca480792d6","print("" "".join(list(input())))","0.0"
"a4b90367-4dc9-4d5f-84d6-56245ea5afc4","import math
k,m,n=map(int,input().split())
S=math.ceil(n/k)
print(S*m*2)","0.0"
"c270a9c3-67af-4113-8e7d-a7a94792013d","x=int(input())
for i in range(x):
    k,n=map(int,input().split())
    if k>n**2:
        print(""YES"")
    else:
        print('NO')","0.0"
"c270a9c3-67af-4113-8e7d-a7a94792013d","x=int(input())
for i in range(x):
    n,m=map(int,input().split())
    for k in range(m):
        i=i+m-1
        if n>i**2:
            print(""YES"")
            break
        else:
            print('NO')
            break","0.0"
"4f8b54ae-eb36-4c4d-91da-256fc6302b91","a,b,c,d = map(int,input().split())
x =a*60+b
y= c*60+d
if y<x:
    y=y+1440
h= int((y-x)/60)
m =(y-x)%60
print(h,m)","0.0"
"4f8b54ae-eb36-4c4d-91da-256fc6302b91","a,b,c,d=map(int,input().split())
x=a*60+b
y=c*60+d
if y<x:
    y=y+1440
h=(y-x)/60
m=(y-x)%60
print(int(h),int(m))","0.0"
"c6175ed3-a33c-4dbf-8f71-6ef2f9e31411","n=int(input())
a,b,c=map(int,input().split())
d,e,f=map(int,input().split())
print((n+1)*a*d+(n+1)*b*e+(n+1)*c*f)","0.0"
"19c885d8-a7aa-480c-946b-9742a59e1d41","x1, x2, x3 = map(int, input().split())
print(max(x1, x2, x3) - min(x1, x2, x3))","0.0"
"db113d71-211d-446c-8cc7-3fa4c4772bf5","n, m = map(int, input().split())
a = [0] * (n * 4 + 4)
k = 1
p = 1
if m <= 2 * n:
    for i in range(1, m + 1):
        print(i, end = ' ')
else: 
    k = 2 * n + 1
    for i in range (1, 2 * n + 1):
        a[i * 2] = i
        a[i * 2 + 2] = i + 1
        a[i * 2 - 1] = k
        a[i * 2 + 1] = k + 1
        k += 1
    for i in range(1, n * 4 + 1):
        if a[i] != 0 and a[i] <= m:
            print(a[i], end = ' ')
","0.0"
"db113d71-211d-446c-8cc7-3fa4c4772bf5","n, m = map(int, input().split())
a = [0] * (n * 4 + 4)
k = 1
p = 1
if m <= 2 * n:
    for i in range(1, m + 1):
        print(i, end = ' ')
else: 
    k = 2 * n + 1
    for i in range (1, 2 * n + 1):
        a[i * 2] = i
        a[i * 2 + 2] = i + 1
        a[i * 2 - 1] = k
        a[i * 2 + 1] = k + 1
        k += 1
    for i in range(1, n * 4 + 1):
        if a[i] != 0 and a[i] <= m:
            print(a[i], end = ' ')
","0.0"
"db113d71-211d-446c-8cc7-3fa4c4772bf5","n, m = map(int, input().split())
a = [0] * (n * 4 + 4)
k = 1
p = 1
if m <= 2 * n:
    for i in range(1, m + 1):
        print(i, end = ' ')
else: 
    k = 2 * n + 1
    for i in range (1, 2 * n + 1):
        a[i * 2] = i
        a[i * 2 + 2] = i + 1
        a[i * 2 - 1] = k
        a[i * 2 + 1] = k + 1
        k += 1
    for i in range(1, n * 4 + 1):
        if a[i] != 0 and a[i] <= m:
            print(a[i], end = ' ')
","0.0"
"db113d71-211d-446c-8cc7-3fa4c4772bf5","n, m = map(int, input().split())
a = [0] * (n * 4 + 4)
k = 1
p = 1
if m <= 2 * n:
    for i in range(1, m + 1):
        print(i, end = ' ')
else: 
    k = 2 * n + 1
    for i in range (1, 2 * n + 1):
        a[i * 2] = i
        a[i * 2 + 2] = i + 1
        a[i * 2 - 1] = k
        a[i * 2 + 1] = k + 1
        k += 1
    for i in range(1, n * 4 + 1):
        if a[i] != 0 and a[i] <= m:
            print(a[i], end = ' ')
","0.0"
"9f7a68f4-0125-4e43-a65d-6c66ee1629ec","p = set()
s1 = input()
s2 = input()
p.add(s1[0])
p.add(s1[1])
p.add(s2[0])
p.add(s2[1])
print(len(p) - 1)                

    ","0.0"
"b436a20f-3378-407b-9d0c-adf4962d847a","a, b = map(int,input().split())
s = input()
l = False
for j in range(a):
    if s[j] < str(b):
        s = s[:j] + str(b) + s[j:]
        l = True
        break
if not l:
    s += str(b)
print(s)","0.0"
"d29dd9ba-3ac3-462f-b2dd-7531b3f01171","
b, c, h = map(int, input().split())
if b <= c + h:
    ans = b * 2 - 1
else:
    ans = (c + h) * 2 + 1
print(ans)","0.0"
"a137070a-e421-4d52-9cf8-8a31ac9eb188","n = int(input())
maxx = -1
maxy = -1
minx = 31401
miny = 31401
s = 0
for i in range(n):
    x1, y1, x2, y2 = map(int, input().split())
    minx = min(minx, x1)
    miny = min(miny, y1)
    maxx = max(maxx, x2)
    maxy = max(maxy, y2)
    s += (x2 - x1) * (y2 - y1)
if (maxx - minx) * (maxy - miny) == s and (maxx - minx) == (maxy - miny):
    print('YES')
else:
    print('NO')","0.0"
"19c885d8-a7aa-480c-946b-9742a59e1d41","x1, x2, x3 = map(int, input().split())
print(max(x1, x2, x3) - min(x1, x2, x3))","0.0"
"9f7a68f4-0125-4e43-a65d-6c66ee1629ec","p = set()
s1 = input()
s2 = input()
p.add(s1[0])
p.add(s1[1])
p.add(s2[0])
p.add(s2[1])
print(len(p) - 1)                

    ","0.0"
"a137070a-e421-4d52-9cf8-8a31ac9eb188","n = int(input())
maxx = -1
maxy = -1
minx = 31401
miny = 31401
s = 0
for i in range(n):
    x1, y1, x2, y2 = map(int, input().split())
    minx = min(minx, x1)
    miny = min(miny, y1)
    maxx = max(maxx, x2)
    maxy = max(maxy, y2)
    s += (x2 - x1) * (y2 - y1)
if (maxx - minx) * (maxy - miny) == s and (maxx - minx) == (maxy - miny):
    print('YES')
else:
    print('NO')","0.0"
"db113d71-211d-446c-8cc7-3fa4c4772bf5","n, m = map(int, input().split())
a = [0] * (n * 4 + 4)
k = 1
p = 1
if m <= 2 * n:
    for i in range(1, m + 1):
        print(i, end = ' ')
else: 
    k = 2 * n + 1
    for i in range (1, 2 * n + 1):
        a[i * 2] = i
        a[i * 2 + 2] = i + 1
        a[i * 2 - 1] = k
        a[i * 2 + 1] = k + 1
        k += 1
    for i in range(1, n * 4 + 1):
        if a[i] != 0 and a[i] <= m:
            print(a[i], end = ' ')
","0.0"
"d29dd9ba-3ac3-462f-b2dd-7531b3f01171","
b, c, h = map(int, input().split())
if b <= c + h:
    ans = b * 2 - 1
else:
    ans = (c + h) * 2 + 1
print(ans)","0.0"
"f7c03795-0238-4dc2-a83e-5674ef35ad88","import math
x, y, a, b = map(int, input().split())
p1 = b // ((x * y) // math.gcd(x, y))
p2 = (a - 1) // ((x * y) // math.gcd(x, y))
print(p1 - p2)","0.0"
"51da05db-a06f-4b98-98be-db263befcf2e","n, d = map(int, input().split())
a = list(map(int, input().split()))
a.sort()        
k = 0
for i in range(n - 1):
    for j in range(i + 1, n):
        if a[j] - a[i] <= d:
            k += 1
        else:
            break
print(k)","0.0"
"cf10d30e-74e0-4d68-b804-84b51b2900e3","a = int(input())
if a >= 5:
    print('ROBOT')
else:
    print('NOT ROBOT')","0.0"
"dea8d696-205a-4637-aa51-cf7d02c29a02","n = int(input())
a = list(map(int,input().split()))
t = set()
mx = 0 
k = 0
for i in range(n*2):
    x = a[i]
    if x in t: 
        t.discard(x)
        k -= 1
    else:
        t.add(x)
        k += 1
    mx = max(mx, k)
print(mx)
        
        ","0.0"
"09441e0b-3a6a-4c17-a1e3-6bec7305e997","n = int(input())
a = list(map(int, input().split()))
c = [a[0]]
for j in range(0, n - 1 ):
    if a[j+1] != a[j]:
        c.append(a[j+1])
#print(c)
k = len(c)
s = k
for j in range(1, k - 1):
    if c[j-1] < c[j] < c[j+1]:
        s -= 1
    if c[j-1] > c[j] > c[j+1]:
        s -= 1        
print(s)
    ","0.0"
"83fac1d9-f429-4153-9332-5af26eae0378","def slov(x1, y1, x2, y2):
	if(d.get((x1, y1, x2, y2)) == None):
		d[(x1, y1, x2, y2)] = 1
		d[(x2, y2, x1, y1)] = 1
		return 5
	else:
		return 1   
s = input()  
x = 0
y = 0
n = len(s)
d = {}
sum = 0
for j in range(n):
	if s[j] == 'U':
		sum += slov(x, y, x, y + 1)
		y += 1
	if s[j] == 'D':
		sum += slov(x, y, x, y - 1)
		y -= 1
	if s[j] == 'L':
		sum += slov(x - 1, y, x, y)
		x -= 1
	if s[j] == 'R':
		sum += slov(x + 1, y, x, y)
		x += 1
print(sum)","0.0"
"f7c03795-0238-4dc2-a83e-5674ef35ad88","import math
x, y, a, b = map(int, input().split())
p1 = b // ((x * y) // math.gcd(x, y))
p2 = (a - 1) // ((x * y) // math.gcd(x, y))
print(p1 - p2)","0.0"
"f7c03795-0238-4dc2-a83e-5674ef35ad88","import math
x, y, a, b = map(int, input().split())
p1 = b // ((x * y) // math.gcd(x, y))
p2 = (a - 1) // ((x * y) // math.gcd(x, y))
print(p1 - p2)","0.0"
"b436a20f-3378-407b-9d0c-adf4962d847a","a, b = map(int,input().split())
s = input()
l = False
for j in range(a):
    if s[j] < str(b):
        s = s[:j] + str(b) + s[j:]
        l = True
        break
if not l:
    s += str(b)
print(s)
    ","0.0"
"51da05db-a06f-4b98-98be-db263befcf2e","n, d = map(int, input().split())
a = list(map(int, input().split()))
a.sort()        
k = 0
for i in range(n - 1):
    for j in range(i + 1, n):
        if a[j] - a[i] <= d:
            k += 1
        else:
            break
print(k)","0.0"
"cf10d30e-74e0-4d68-b804-84b51b2900e3","a = int(input())
if a >= 5:
    print('ROBOT')
else:
    print('NOT ROBOT')","0.0"
"dea8d696-205a-4637-aa51-cf7d02c29a02","n = int(input())
a = list(map(int,input().split()))
t = set()
mx = 0 
k = 0
for i in range(n*2):
    x = a[i]
    if x in t: 
        t.discard(x)
        k -= 1
    else:
        t.add(x)
        k += 1
    mx = max(mx, k)
print(mx)
        
        ","0.0"
"09441e0b-3a6a-4c17-a1e3-6bec7305e997","n = int(input())
a = list(map(int, input().split()))
c = [a[0]]
for j in range(0, n - 1 ):
    if a[j+1] != a[j]:
        c.append(a[j+1])
#print(c)
k = len(c)
s = k
for j in range(1, k - 1):
    if c[j-1] < c[j] < c[j+1]:
        s -= 1
    if c[j-1] > c[j] > c[j+1]:
        s -= 1        
print(s)
    ","0.0"
"83fac1d9-f429-4153-9332-5af26eae0378","def slov(x1, y1, x2, y2):
	if(d.get((x1, y1, x2, y2)) == None):
		d[(x1, y1, x2, y2)] = 1
		d[(x2, y2, x1, y1)] = 1
		return 5
	else:
		return 1   

s = input()  
x = 0
y = 0
n = len(s)
d = {}
sum = 0
for j in range(n):
	if s[j] == 'U':
		sum += slov(x, y, x, y + 1)
		y += 1
	if s[j] == 'D':
		sum += slov(x, y, x, y - 1)
		y -= 1
	if s[j] == 'L':
		sum += slov(x - 1, y, x, y)
		x -= 1
	if s[j] == 'R':
		sum += slov(x + 1, y, x, y)
		x += 1
print(sum)","0.0"
"83fac1d9-f429-4153-9332-5af26eae0378","s = input()  
x = 0
y = 0
b = []
n = len(s)
for j in range(n):
    if s[j] == 'U':
        y += 1
    if s[j] == 'D':
        y -= 1
    if s[j] == 'L':
        x -= 1
    if s[j] == 'R':
        x += 1
    b.append([x, y])        
#b.append([0, 0])
b.sort(key = lambda x: (x[0], x[1]))
#print(b)
k = 0
sum = 5
m = 0
for j in range(1, n):
    if b[j] == [0, 0]:
        m = 1
    if b[j - 1] == b[j]:
        k += 1
    else:
        sum += 5 + k
        k = 0
if b[0] == [0, 0]:
    m = 1
if m == 1:
    sum += m - 5
if k > 0:
    sum += k
print(sum)","0.0"
"ade9b273-aad8-49ba-b6a7-7ffcb02b0011","a = input()
s1 = a.count('1')
s2 = a.count('2')
s3 = a.count('3')
s4 = a.count('4')
s5 = a.count('5')
s6 = a.count('6')
s7 = a.count('7')
s8 = a.count('8')
s9 = a.count('9')
s = s1+s2+s3+s4+s5+s6+s7+s8+s9
if s > 0:
    print('YES')
else:
    print('NO')","0.0"
"190516a0-6ed3-4c42-9f36-dc481a3adb70","a = int(input())
b = int(input())
print(a+b)","0.0"
"19c885d8-a7aa-480c-946b-9742a59e1d41","pisa,piska,pipiska = map(int,input().split())
print(max(piska,pipiska,pisa)-min(pisa,piska,pipiska))","0.0"
"19c885d8-a7aa-480c-946b-9742a59e1d41","m1, m2, m3 = map(int, input().split())

max_num = max(m1, m2, m3)
min_num = min(m1, m2, m3)
vsego = max_num - min_num

print(vsego)","0.0"
"19c885d8-a7aa-480c-946b-9742a59e1d41","a = list(map(int, input().split()))
a.sort()
print(a[1] - a[0] + a[2] - a[1])
","0.0"
"19c885d8-a7aa-480c-946b-9742a59e1d41","a = list(map(int, input().split()))
print(max(a) - min(a))","0.0"
"19c885d8-a7aa-480c-946b-9742a59e1d41","n = list(map(int, input().split()))
n.sort()
print((n[1]-n[0])+(n[2]-n[1]))","0.0"
"19c885d8-a7aa-480c-946b-9742a59e1d41","m1, m2, m3 = map(int, input().split())
ans = 1000
for i in range(1, 101):
    ans = min(ans, abs(i - m1) + abs(i - m2) + abs(i - m3))
print(ans)","0.0"
"19c885d8-a7aa-480c-946b-9742a59e1d41","a = list(map(int, input().split()))
a.sort()
print(a[2]-a[0])
","0.0"
"19c885d8-a7aa-480c-946b-9742a59e1d41","a, b, c = map(int, input().split())

pos = a + b + c - min(a, b, c) - max(a, b, c)

print(max(a, b, c) - pos + pos - min(a, b, c))","0.0"
"19c885d8-a7aa-480c-946b-9742a59e1d41","s = list(map(int, input().split()))
s.sort()
a = s[1] - s[0] + s[2] - s[1]
print(a)","0.0"
"19c885d8-a7aa-480c-946b-9742a59e1d41","lst = list(map(int, input().split()))
m1 = min(lst)
m2 = max(lst)
print(m2 - m1)","0.0"
"19c885d8-a7aa-480c-946b-9742a59e1d41","m1, m2, m3 = map(int, input().split())

arr = [m1, m2, m3]
arr = sorted(arr)

print((arr[2] - arr[1]) + (arr[1] - arr[0]))","0.0"
"19c885d8-a7aa-480c-946b-9742a59e1d41","a=list(map(int,input().split()))
a1=min(a)
a2=max(a)
print(a2-a1)","0.0"
"19c885d8-a7aa-480c-946b-9742a59e1d41","L = list(map(int, input().split()))
print(max(L) - min(L))
","0.0"
"19c885d8-a7aa-480c-946b-9742a59e1d41","ar = sorted(list(map(int, input().split())))
print(abs(ar[0] - ar[1]) + abs(ar[2] - ar[1]))","0.0"
"b436a20f-3378-407b-9d0c-adf4962d847a","pisa,piska = map(int,input().split())
pipiska = input()
pisechki = ''
tr = True
for i in pipiska:
    if int(i) <= piska and tr:
        pisechki += str(piska)
        tr = False
    pisechki += i
if tr:
    pisechki += str(piska)
print(pisechki)
# sisechki pisechki popochki","0.0"
"19c885d8-a7aa-480c-946b-9742a59e1d41","a, b, c = (map(int, input().split()))
mas = [0] * 101
for i in range(101):
    mas[i] = abs(a-i) + abs(b-i) + abs(c-i)
print(min(mas))
","0.0"
"19c885d8-a7aa-480c-946b-9742a59e1d41","m1, m2, m3 = sorted([int(i) for i in input().split()])
print((m2 - m1) + (m3 - m2))
","0.0"
"19c885d8-a7aa-480c-946b-9742a59e1d41","m1,m2,m3=map(int,input().split())
ma=max(m1,m2,m3)
mi=min(m1,m2,m3)
s=m1+m2+m3-ma-mi
print(abs(ma-s)+abs(mi-s))","0.0"
"19c885d8-a7aa-480c-946b-9742a59e1d41","m1, m2, m3 = map(int, input().split())
a = [m1, m2, m3]
a.sort()
print(a[-1] - a[0])
","0.0"
"19c885d8-a7aa-480c-946b-9742a59e1d41","m1, m2, m3 = map(int, input().split())
ma = max(m1, m2, m3)
mi = min(m1, m2, m3)
if ma <= m1 >= mi:
    mid = m1
if ma <= m2 >= mi:
    mid = m2
if ma <= m3 >= mi:
    mid = m3
print((ma - mid) + (mid - mi))","0.0"
"b436a20f-3378-407b-9d0c-adf4962d847a","pisa,piska = map(int,input().split())
pipiska = input()
pisechki = ''
tr = True
for i in pipiska:
    if int(i) <= piska and tr:
        pisechki += str(piska)
        tr = False
    pisechki += i
if tr:
    pisechki += str(piska)
print(int(pisechki))
","0.0"
"b436a20f-3378-407b-9d0c-adf4962d847a","a = list(map(int, input().split()))
b = input()
for i in b:
    if int(i) < a[1]:
        b = b[:b.index(i)] + str(a[1]) + b[b.index(i):]
        print(b)
        exit()
print(b + '0')","0.0"
"b436a20f-3378-407b-9d0c-adf4962d847a","a = list(map(int, input().split()))
b = input()
for i in b:
    if int(i) <= a[1]:
        b = b[:b.index(i)] + str(a[1]) + b[b.index(i):]
        print(b)
        exit()
print(b + '0')","0.0"
"b436a20f-3378-407b-9d0c-adf4962d847a","n, z = map(int, input().split())
s = input()
for i in range(n):
    if int(s[i])<=z:
        print(s[:i]+str(z)+s[i:])
        exit()
print(int(s)*10+z)
","0.0"
"b436a20f-3378-407b-9d0c-adf4962d847a","n, z = map(int, input().split())
s = input()
ans = 0
for i in range(n + 1):
    ans = max(ans, int(s[:i] + str(z) + s[i:]))
print(ans)
","0.0"
"b436a20f-3378-407b-9d0c-adf4962d847a","a = list(map(int, input().split()))
b = input()
for i in b:
    if int(i) < a[1]:
        b = b[:b.index(i)] + str(a[1]) + b[b.index(i):]
        print(b)
        exit()
print(b + str(a[1]))","0.0"
"19c885d8-a7aa-480c-946b-9742a59e1d41","a, b, c = map(int,input().split())
mn = 300
s = 0
for i in range(1, 100):
    s = 0
    s += abs(a - i)
    s += abs(b - i)
    s += abs(c - i)
    if s <= mn:
        mn = s
print(mn)
","0.0"
"b436a20f-3378-407b-9d0c-adf4962d847a","n, z = map(int, input().split())
s = input()
if  z==0:
    print(int(s)*10)
else:
    for i in range(n):
        if int(s[i])<=z:
            print(s[:i]+str(z)+s[i:])
            exit()
    print(int(s)*10+z)","0.0"
"b436a20f-3378-407b-9d0c-adf4962d847a","n, m = map(int, input().split())
s = input()
q = 1
for i in range(n):
    if int(s[i]) <= m:
        print(s[:i] + str(m) + s[i:])
        q = 0
        break
if q:
    print(s + str(m))","0.0"
"b436a20f-3378-407b-9d0c-adf4962d847a","n, k = map(int, input().split())
s = input()
flag = 0
for i in range(n):
    if k > int(s[i]):
        print(s[:i] + str(k) + s[i:])
        flag = 1
        break
if flag == 0:
    print(s + str(k))","0.0"
"b436a20f-3378-407b-9d0c-adf4962d847a","mas = list(map(int, input().split()))
n = input()
for i in range(len(n)):
    if n[i]<str(mas[1]):
        a = n[:i]
        b = n[i:]
        d = a + str(mas[1]) + b
        break
    else:
        d = n+str(mas[1])
print(d)","0.0"
"cf10d30e-74e0-4d68-b804-84b51b2900e3","n = int(input())
if n not in [2, 3, 4]:
    print('ROBOT')
else:
    print('NOT ROBOT')","0.0"
"b436a20f-3378-407b-9d0c-adf4962d847a","a, b = map(int, input().split())
c = input()

for i in range(len(c)):
    if int(c[i]) <= b:
        break

print(c[:i + 1] + str(b) + c[i + 1:])","0.0"
"19c885d8-a7aa-480c-946b-9742a59e1d41","m1,m2,m3=map(int,input().split())
s=[]
s.append(m1)
s.append(m2)
s.append(m3)
mx=max(s)
mn=min(s)
print(mx-mn)","0.0"
"b436a20f-3378-407b-9d0c-adf4962d847a","a, b = map(int, input().split())
c = input()

if b > int(c[0]):
    print(str(b) + c)
else:

    for i in range(len(c)):
        if int(c[i]) <= b:
            break

    print(c[:i + 1] + str(b) + c[i + 1:])","0.0"
"db113d71-211d-446c-8cc7-3fa4c4772bf5","n, lim = map(int, input().split())
res = ''
for i in range(1, 2*n+1):
	if 2*n + i <= lim:
		res += str(2*n+i) + ' '
	if i <= lim:
		res += str(i) + ' '
print(res[:-1])
","0.0"
"9f7a68f4-0125-4e43-a65d-6c66ee1629ec","a=input()
b=input()
a2=a[::-1]
b2=b[::-1]
if a==b:
    print(0)
elif a==b2:
    print(1)
elif a==a2 and b==b2:
    print(1)
elif (a==a2 and b!=b2) or (a!=a2 and b==b2):
    print(2)
else:
    print(3)","0.0"
"b436a20f-3378-407b-9d0c-adf4962d847a","a, b = map(int, input().split())
c = input()

if b >= int(c[0]):
    print(str(b) + c)

else:
    for i in range(len(c)):
        if int(c[i]) <= b:
            break

    print(c[:i + 1] + str(b) + c[i + 1:])","0.0"
"b436a20f-3378-407b-9d0c-adf4962d847a","n, k = map(int, input().split())
s = list(input())
for i, num in enumerate(s):
    if int(num) <= k:
        s.insert(i, str(k))
        break
else:
    s += [str(k)]
print(''.join(s))","0.0"
"19c885d8-a7aa-480c-946b-9742a59e1d41","st=list(map(int, input().split()))
st=sorted(st)
print(st[2]-st[0])","0.0"
"19c885d8-a7aa-480c-946b-9742a59e1d41","m1,m2,m3 = map(int, input().split())
a = max(m1,m2,m3)
b = min(m1,m2,m3)
c = (m1+m2+m3)-a-b
print((a-c)+(c-b))
","0.0"
"19c885d8-a7aa-480c-946b-9742a59e1d41","m1, m2, m3=map(int, input().split())
a=abs(m1-m2)
b=abs(m2-m3)
c=abs(m3-m1)
d=a+b+c-max(a, b, c)
print(d)
","0.0"
"cf10d30e-74e0-4d68-b804-84b51b2900e3","n = int(input())
if n <= 4:
	print(""NOT ROBOT"")
else:
	print(""ROBOT"")","0.0"
"19c885d8-a7aa-480c-946b-9742a59e1d41","a, b, c = map(int, input().split())
summ = a + b + c
sred = summ - max(a, b, c) - min(a, b, c)
znach = (sred - min(a, b, c) + max(a, b, c) - sred)
print(znach)
","0.0"
"51da05db-a06f-4b98-98be-db263befcf2e","pisa,piska = map(int,input().split())
myaso = list(map(int,input().split()))
popochki = 0
for i in range(pisa):
    for j in range(pisa):
        if i != j and abs(myaso[i]-myaso[j])<= piska:
            popochki += 1
print(popochki//2)","0.0"
"19c885d8-a7aa-480c-946b-9742a59e1d41","m1,m2,m3 = map(int,input().split())
a=[m1,m2,m3]
a=sorted(a)
print(min((a[2]-a[0])+(a[1]-a[0]),(a[2]-a[1])+(a[1]-a[0]),(a[2]-a[1])+(a[2]-a[0])))
","0.0"
"b436a20f-3378-407b-9d0c-adf4962d847a","n, z = map(int, input().split())
string = input()
mn = 9

for i in range(len(string)):
    if int(string[i]) <= mn: mn = int(string[i])

if mn >= z:
    print(string + str(z))

else:
    for i in range(len(string)):
        if string[i] == str(mn):
            string = string[:i] + str(z) + string[i:]
    print(string)
","0.0"
"19c885d8-a7aa-480c-946b-9742a59e1d41","m1, m2, m3 = map(int, input().split(' '))
mn=10**10
a=[m1, m2, m3]
for i in range(3):
    sm=0
    for j in range(3):
        sm+=abs(a[i]-a[j])
    mn=min(sm, mn)
print(mn)","0.0"
"19c885d8-a7aa-480c-946b-9742a59e1d41","a = list(map(int, input().split()))
a = sorted(a)
ans = (a[2] - a[1]) + (a[1] - a[0])
print(ans)","0.0"
"19c885d8-a7aa-480c-946b-9742a59e1d41","from itertools import permutations

num = input().split()
resault = []

for i in permutations(num, r=3):
    n = list(map(int, i))
    resault.append(abs(n[1] - n[0]) + abs(n[2] - n[1]))

print(min(resault))","0.0"
"db113d71-211d-446c-8cc7-3fa4c4772bf5","n, m = map(int, input().split())
a = [[0, 0, 0, 0] for i in range(n)]
p = 1
for i in range(min(m, n * 2)):
    if i % 2 == 0:
        a[i // 2][0] = p
    else:
        a[i // 2][3] = p
    p += 1
for i in range(m - n * 2):
    if i % 2 == 0:
        a[i // 2][1] = p
    else:
        a[i // 2][2] = p
    p += 1
for i in range(n):
    for j in [1, 0, 2, 3]:
        if a[i][j] != 0:
            print(a[i][j], end = ' ')","0.0"
"b436a20f-3378-407b-9d0c-adf4962d847a","n = input().split()[1]
num = input()
res = []

for i in range(len(num)+1):
    res.append(int(num[:i] + n + num[i:]))

print(max(res))","0.0"
"83fac1d9-f429-4153-9332-5af26eae0378","coord = [0, 0]
time = 0
sled = set() # {'1,2;2,2'}
ks = {'U': [0, 1], 'D': [0, -1], 'R': [1,0], 'L':[-1,0]}

cmds = input()

for cmd in cmds:
	old_len = len(sled)
	sled.add(str(';'.join([','.join(list(map(str, coord))), ','.join([str(coord[0]+ks[cmd][0]), str(coord[1]+ks[cmd][1])])])))
	sled.add(str(';'.join([','.join([str(coord[0]+ks[cmd][0]), str(coord[1]+ks[cmd][1])]), ','.join(list(map(str, coord)))])))
	if len(sled) == old_len:
		time += 1
	else:
		time += 5
	coord = [coord[0]+ks[cmd][0], coord[1] + ks[cmd][1]]

print(time)","0.0"
"b436a20f-3378-407b-9d0c-adf4962d847a","n = input().split()[1]
num = input()
res = -100000000000

for i in range(len(num)+1):
    res = max(res, int(num[:i] + n + num[i:]))

print(res)
","0.0"
"b436a20f-3378-407b-9d0c-adf4962d847a","n1, n2 = map(int, input().split())
s = list(input())
for i in range(n1):
    if int(s[i]) < n2:
        s.insert(s.index(s[i]), n2)
        break
    if i == n1 - 1:
        s.insert(n1, n2)
s = list(map(str, s))
print(''.join(s))","0.0"
"b436a20f-3378-407b-9d0c-adf4962d847a","n, z = map(int, input().split())
string = input()
mx = 0
for i in range(len(string)):
    new_string = string[:i] + str(z) + string[i:]
    if int(new_string) > mx:
        mx = int(new_string)

new_string = string + str(z)
if int(new_string) > mx:
    mx = int(new_string)
print(mx)","0.0"
"b436a20f-3378-407b-9d0c-adf4962d847a","n, z = map(int, input().split())
num = input()

for i in range(n):
    if int(num[i]) < z:
        num = num[:i] + str(z) + num[i:]
        break

else:
    num += str(z)

print(num)
","0.0"
"b436a20f-3378-407b-9d0c-adf4962d847a","n = input().split()[1]
num = input()
res = -10000000

for i in range(len(num)+1):
    res = max(res, int(num[:i] + n + num[i:]))

print(res)","0.0"
"b436a20f-3378-407b-9d0c-adf4962d847a","n, z = input().split()
s = input()
flag = True
for i in range(int(n) - 1, -1, -1):
    if int(s[i]) > int(z):
        flag = False
        print(s[:i + 1] + z + s[i + 1:])
        break
if flag:
    print(z + s)","0.0"
"51da05db-a06f-4b98-98be-db263befcf2e","n, d = map(int, input().split())
a = list(map(int, input().split()))
ans = 0
for i in range(n):
    for j in range(i + 1, n):
        if abs(a[i] - a[j]) <= d:
            ans += 1
print(ans)","0.0"
"b436a20f-3378-407b-9d0c-adf4962d847a","n,z=map(int,input().split())
chis=input()
a=-1
for i in range(n+1):
    a=max(int(chis[:i]+str(z)+chis[i:]),a)
print(a)","0.0"
"b436a20f-3378-407b-9d0c-adf4962d847a","a = input().split()
b = a[1]
n = int(a[0])
c = input()
i = 0
for x in range(0, n):
    if int(c[x]) <= int(b):
        c = c[0:x] + str(b) + c[x:]
        break
    else:
        i += 1
if i == n:
    print(c+b)
else:
    print(c)","0.0"
"b436a20f-3378-407b-9d0c-adf4962d847a","a, b = map(int, input().split())
s = input()

l = [int(str(b)+s)]

for i in range(1, len(s)+1):
    l.append(int(s[:i] + str(b) + s[i:]))
print(max(l))
    
","0.0"
"9f7a68f4-0125-4e43-a65d-6c66ee1629ec","n = input()
l = input()
mass = set([n[0], n[1], l[0], l[1]])
if len(mass) == 2: 
    print(1)
elif len(mass) == 3: 
    print(2)
elif len(mass)== 4: 
    print(3)
else: 
    print(0)","0.0"
"b436a20f-3378-407b-9d0c-adf4962d847a","n, c = map(int, input().split())
s1 = input()
s = ''
for i in range(n-1):
  if int(s1[i+1]) >= c:
    s += s1[i]
  else:
    s += str(c)
    s += s1[i:]
    break
if len(s) < n+1:
  if int(s1[n-1]) >= c:
    s += s1[n-1]
    s+=str(c)
  else:
    s+=str(c)
    s += s1[n-1]
print(s)","0.0"
"51da05db-a06f-4b98-98be-db263befcf2e","n, d = [int(i) for i in input().split()]
m = [int(i) for i in input().split()]
x1=[]
for x in range(len(m)):
    for y in range(len(m)):
        if x==y:
            pass
        else:
            if abs(m[x]-m[y])<=d:
                x1.append([m[x],m[y]])
print(len(x1)//2)
","0.0"
"b436a20f-3378-407b-9d0c-adf4962d847a","n, k = map(int, input().split())
s = list(input())
if k==0:
    s += ['0']
else:
    for i, num in enumerate(s):
        if int(num) <= k:
            s.insert(i, str(k))
            break
    else:
        s += [str(k)]
print(''.join(s))","0.0"
"b436a20f-3378-407b-9d0c-adf4962d847a","a, b = map(int, input().split())
c = input()

if b >= int(c[0]):
    print(str(b) + c)

else:
    for i in range(len(c)):
        if int(c[i]) <= b:
            break

    print(c[:i + 1] + str(b) + c[i + 1:])","0.0"
"b436a20f-3378-407b-9d0c-adf4962d847a","n = input().split()[1]
num = input()
res = -10000000

for i in range(len(num)+1):
    res = max(res, int(num[:i] + n + num[i:]))

print(res)","0.0"
"51da05db-a06f-4b98-98be-db263befcf2e","a,d=map(int,input().split())
c=[int(i) for i in input().split()]
q = 0
for j in range(len(c)):
    for l in range(len(c)):
        if abs(c[j] - c[l]) <=d and (j!=l):
            q += 1
print(q//2)","0.0"
"51da05db-a06f-4b98-98be-db263befcf2e","n, d = [int(i) for i in input().split()]
m = [int(i) for i in input().split()]
x1=0
for x in range(len(m)):
    for y in range(len(m)):
        if x==y:
            pass
        else:
            if abs(m[x]-m[y])<=d:
                x1+=1
print(x1//2)
","0.0"
"19c885d8-a7aa-480c-946b-9742a59e1d41","a = list(map(int, input().split()))
b = [max(a), min(a)]
print(abs(sum([0 if i in b else i for i in a]) - max(a)) + abs(sum([0 if i in b else i for i in a]) - min(a)))","0.0"
"19c885d8-a7aa-480c-946b-9742a59e1d41","a, b, c=map(int, input().split())
if a > b > c:
    v = b - c
    f = a - b
    print(f+v)
elif b > a > c:
    f = b - a
    v = a - c
    print(f+v)
elif c > a > b:
    f = c - a
    v = a - b
    print(f+v)
elif c > b > a:
    f = c - b
    v = b - a
    print(f+v)
elif a > c > b:
    f = a - c
    v = c - b
    print(f+v)
elif b > c > a:
    f =  b - c
    v = c - a
    print(f+v)","0.0"
"19c885d8-a7aa-480c-946b-9742a59e1d41","m_1, m_2, m_3 = map( int, input(). split() )
a=min(m_1, m_2, m_3)
b=max(m_1, m_2, m_3)
print(int(b-a))","0.0"
"cf10d30e-74e0-4d68-b804-84b51b2900e3","n = int(input())
if n<5:
    print('NOT ROBOT')
else:
    print('ROBOT')","0.0"
"19c885d8-a7aa-480c-946b-9742a59e1d41","houses = list(map(int, input().split()))

members = {}
num_house = set(houses)
for i in num_house:
	members[i] = houses.count(i)

s = []
what_house = {}
for number in houses:
	if number in what_house:
		s.append(what_house[number])
	else:
		c = 0
		for i in num_house:
			c += abs(i - number) * houses.count(i)
		what_house[number] = c
		s.append(c)
print(min(s))","0.0"
"9f7a68f4-0125-4e43-a65d-6c66ee1629ec","s = input() + input()
print(3 - len(s) + len(set(s)))
","0.0"
"51da05db-a06f-4b98-98be-db263befcf2e","n, d = input().split()
ws = input().split()
ws = list(map(int, ws))
d = int(d)

count = 0
for w in range(len(ws)-1):
	for i in ws[w+1:]:
		count+= 1 if abs(ws[w]-i)<=d else 0
	# count += 1 if abs(ws[w]-i)>1 else 0 for i in ws[w+1:]
print(count)
","0.0"
"9f7a68f4-0125-4e43-a65d-6c66ee1629ec","st1 = input()
st2 = input()
st = st1 + st2
dele = []
res = []
c = 0
for x in st:
    for y in st:
        if x == y and y not in dele:
            c += 1
    dele.append(x)
    res.append(c)
    c = 0
if max(res) == 4:
    print(0)
elif max(res) == 3:
    print(1)
elif max(res) == 2:
    if res.count(2) == 1:
        print(2)
    else: print(1)
else: print(3)
","0.0"
"51da05db-a06f-4b98-98be-db263befcf2e","n, d = map(int, input().split())
arr = [int(s) for s in input().split()]

counter = 0
for i in range(len(arr) - 1):
    for j in range(i + 1, len(arr)):
        if abs(arr[i] - arr[j]) <= d:
            counter += 1

print(counter)","0.0"
"db113d71-211d-446c-8cc7-3fa4c4772bf5","n, m = list(map(int, input().split()))
a = [i for i in range(1, min(m+1, n*2+1))]
b = [2*n+i for i in range(1, min(m-2*n+1, n*4+1))]
f = 2
while len(a) + len(b) > 0:
    if f == 1:
        f = 2
        if len(a) != 0:
            print(a[0], end = ' ')
            a.pop(0)
    if f == 2:
        f = 1
        if len(b) != 0:
            print(b[0], end = ' ')
            b.pop(0)","0.0"
"b436a20f-3378-407b-9d0c-adf4962d847a","n, z = map(int, input().split())
number = input()

position = 0

while position < n and int(number[position]) >= z:
    position += 1

new_number = number[:position] + str(z) + number[position:]

print(new_number)
","0.0"
"b436a20f-3378-407b-9d0c-adf4962d847a","n, m = map(int, input().split())
s = input()
ma = int(s + str(m))
for i in range(n - 1):
    q = int(s[:i] + str(m) + s[i:])
    if ma < q:
        ma = q
print(ma)","0.0"
"cf10d30e-74e0-4d68-b804-84b51b2900e3","print('ROBOT' if int(input()) > 4 else 'NOT ROBOT')","0.0"
"51da05db-a06f-4b98-98be-db263befcf2e","c, d = map(int, input().split())
ves = [int(i) for i in input().split()]
ves.sort(reverse=True)
count = 0

while len(ves) > 0:
    for j in range(1, len(ves)):
        if ves[0] - ves[j] <= d:
            count += 1
    del ves[0]

print(count)
","0.0"
"b436a20f-3378-407b-9d0c-adf4962d847a","a, b = map(int, input().split())
s = input()

m = int(str(b)+s)

for i in range(1, a+1):
    if int(s[:i] + str(b) + s[i:]) > m:
        m = int(s[:i] + str(b) + s[i:])
print(m)
    
","0.0"
"b436a20f-3378-407b-9d0c-adf4962d847a","l = list(map(str, input().split()))
a = str(l[1])
s = input()
o = 0
x = ''
for i in range(len(s)):
    if int(a) >= int(s[i]):
        x += s[:i] + a + s[i:]
        o = 1
        break
if o == 0:
    x += s + a
print(x)","0.0"
"19c885d8-a7aa-480c-946b-9742a59e1d41","N = list(map(int,input().split()))
if N[0] > 100 or N[1] > 100 or N[2] > 100 or N[0] < 0 or N[1] < 0 or N[2] < 0 :
    while N[0] >=100 or N[1] >=100 or N[2] >=100 or N[0] <=1 or N[1] <=1 or N[2] <=1:
        N.clear()
        N = list(map(int, input().split()))
k=0
N.sort()
while N[2] != N[1]:
    N[2]-=1
    k+=1
while N[0] !=N[1]:
    N[0] +=1
    k+=1
print(k)

","0.0"
"b436a20f-3378-407b-9d0c-adf4962d847a","n, k = map(int, input().split())
s = list(input())
if k==0:
    s += ['0']
else:
    for i, num in enumerate(s):
        if int(num) <= k:
            s.insert(i, str(k))
            break
    else:
        s += [str(k)]
print(int(''.join(s)))","0.0"
"dea8d696-205a-4637-aa51-cf7d02c29a02","n = int(input())
a = []
s = input()
a = s.split()
ans = 0
c = 0
b = []
for i in a:
    if (i in b):
        c -= 1
    else:
        c += 1
    ans = max(ans, c)
    b.append(i)
print(ans)","0.0"
"d29dd9ba-3ac3-462f-b2dd-7531b3f01171","g, c, h=map(int, input().split())
if g==0:
    print(0)
elif g<=c+h:
    print(2*g-1)
else:
    print(2*(c+h)+1)
","0.0"
"9f7a68f4-0125-4e43-a65d-6c66ee1629ec","n,m = input(),input()
nn = n+m
c = 0
mas=[]
for i in range(4):
    if not(nn[i] in mas):
        mas+=[nn[i]]
print(len(mas)-1)","0.0"
"b436a20f-3378-407b-9d0c-adf4962d847a","n, z = input().split()
s = input()
flag = True
for i in range(int(n)):
    if int(s[i]) <= int(z):
        flag = False
        print(s[:i] + z + s[i:])
        break
if flag:
    print(s + z)","0.0"
"83fac1d9-f429-4153-9332-5af26eae0378","s = str(input())

M = []
x, y = 0, 0
for i in s:
    if i == 'U':
        y += 1
        if [x, y - 1, 1] not in M:
            M.append([x, y - 1, 1])
    if i == 'D':
        y -= 1
        if [x, y, 1] not in M:
            M.append([x, y, 1])
    if i == 'L':
        x -= 1
        if [x + 1, y, 0] not in M:
            M.append([x + 1, y, 0])
    if i == 'R':
        x += 1
        if [x, y, 0] not in M:
            M.append([x, y, 0])

print(len(M) * 4 + len(s))
","0.0"
"cf10d30e-74e0-4d68-b804-84b51b2900e3","n = int(input())

if n < 5:
    print('NOT ROBOT')
else:
    print('ROBOT')
","0.0"
"d29dd9ba-3ac3-462f-b2dd-7531b3f01171","tov, c,h = input().split()

print(int(tov)*2-1 if int(c)+int(h)>= int(tov)-1 else (int(c)+int(h))*2+1)","0.0"
"b436a20f-3378-407b-9d0c-adf4962d847a","s1=list(map(int, input().split()))
num=[k for k in input()]

mx=0
for i in range(0, len(num)+1):
    num.insert(i, str(s1[1]))
    mx=max(mx, int(''.join(num)))
    num.pop(i)
print(mx)
    
    ","0.0"
"b436a20f-3378-407b-9d0c-adf4962d847a","n, z = map(int, input().split())
num = input()

for i in range(n):
    if int(num[i]) < z:
        num = num[:i] + str(z) + num[i:]
        break

else:
    num += str(z)

print(num)","0.0"
"b436a20f-3378-407b-9d0c-adf4962d847a","n, m = map(int, input().split())
s = input()
ma = int(s + str(m))
for i in range(n):
    q = int(s[:i] + str(m) + s[i:])
    ma = max(q, ma)
print(ma)","0.0"
"b436a20f-3378-407b-9d0c-adf4962d847a","def f():
    n, z = map(int, input().split())
    s = input()
    l = 0
    r = 0
    mx = 0
    a = 0
    for i in range(1, n):
        l = int(s)//(10**i)
        r = int(s)%(10**i)
        a = l*(10**(i+1))+(z*(10**i))+r
        if a>mx:
            mx = a
    if n == 1:
        if int(s) > int(z):
            print(s+str(z))
        else:
            print(str(z) + s)
    else:
        if int(str(z)+s) > mx:
            print(str(z)+s)
        elif int(s+str(z)) > mx:
            print(s+str(z))
        else:
            print(mx)
f()","0.0"
"b436a20f-3378-407b-9d0c-adf4962d847a","l = list(map(str, input().split()))
a = str(l[1])
s = input()
o = 0
x = ''
for i in range(len(s)):
    if int(a) >= int(s[i]):
        x += s[:i] + a + s[i:]
        o = 1
        break
if o == 0:
    x += s + a
print(x)","0.0"
"b436a20f-3378-407b-9d0c-adf4962d847a","i = input()
i = i.split()
i[0] = int(i[0])
i[1] = int(i[1])
l = True
strk = """"
b = input()
for q in b:
    if int(q) <= i[1] and l == True:
        strk = strk + str(i[1])
        l = False
    strk = strk + q
if(l == True):
    strk = strk + str(i[1])
print(strk)","0.0"
"83fac1d9-f429-4153-9332-5af26eae0378","s = input()
m = [[0,0]]
u = 0
l = 0
k=0
for i in s:
    if i=='D':
        u-=1
    if i=='U':
        u+=1
    if i=='L':
        l+=1
    if i=='R':
        l-=1
    if [u,l] in m:
        k+=1
    else:
        k+=5
    m.append([u,l])
print(k)
","0.0"
"9f7a68f4-0125-4e43-a65d-6c66ee1629ec","a, b = input(), input()
s = a+b
elem1 = s.count(s[0])
elem2 = s.count(s[1])
elem3 = s.count(s[2])
elem4 = s.count(s[3])

if elem1 == 4:
    print(0)
elif elem1 == 3 or elem2 == 3 or elem3 == 3 or elem4 == 3:
    print(1)
elif elem1 == 2 or elem2 == 2 or elem3 == 2 or elem4 == 2:
    if elem1 == elem2 == elem3 == elem4:
        print(1)
    else:
        print(2)
else:
    print(3)
    
","0.0"
"db113d71-211d-446c-8cc7-3fa4c4772bf5","sp = input().split()
n = int(sp[0])
m = int(sp[1])
suuuu = 2 * n
if m > suuuu:
    sp1 = [i for i in range(1, suuuu+1)]
    sp2 = [i for i in range(suuuu+1, m+1)]
    print()
    for _ in range(len(sp2)):
        print(sp2[0], sp1[0], end=' ')
        del sp1[0]
        del sp2[0]
    for _ in range(len(sp1)):
        print(sp1[0], end=' ')
        del sp1[0]
else:
    print(*[i for i in range(1, m+1)])","0.0"
"51da05db-a06f-4b98-98be-db263befcf2e","n, d = map(int, input().split())
weights = list(map(int, input().split()))

# Ð¸Ð½Ð¸ÑÐ¸Ð°Ð»Ð¸Ð·Ð°ÑÐ¸Ñ Ð¿ÐµÑÐµÐ¼ÐµÐ½Ð½Ð¾Ð¹ count
count = 0

# Ð¿ÐµÑÐµÐ±Ð¾Ñ Ð²ÑÐµÑ Ð²Ð¾Ð·Ð¼Ð¾Ð¶Ð½ÑÑ Ð¿Ð°Ñ ÑÐµÐ±ÑÑÐ¸ÑÐµÐº Ð¸ Ð¿Ð¾Ð´ÑÑÐµÑ ÐºÐ¾Ð»Ð¸ÑÐµÑÑÐ²Ð° Ð¿Ð°Ñ, ÑÐ´Ð¾Ð²Ð»ÐµÑÐ²Ð¾ÑÑÑÑÐ¸Ñ ÑÑÐ»Ð¾Ð²Ð¸Ñ Ð½Ð° ÑÐ°Ð·Ð½Ð¸ÑÑ Ð²ÐµÑÐ¾Ð²
for i in range(n):
    for j in range(i+1, n):
        if abs(weights[i] - weights[j]) <= d:
            count += 1

# Ð²ÑÐ²Ð¾Ð´ ÑÐµÐ·ÑÐ»ÑÑÐ°ÑÐ°
print(count)
","0.0"
"9f7a68f4-0125-4e43-a65d-6c66ee1629ec","n = input()
m = input()
mas = [n[0], n[1], m[0], m[1]]

if mas.count(mas[0]) == 4:
    print(0)
elif (mas.count(mas[0]) == 3) or (mas.count(mas[1]) == 3):
    print(1)
elif ((mas.count(mas[0]) == 2) and (mas.count(mas[1]) == 2) and (mas.count(mas[2]) == 2) and (mas.count(mas[3]) == 2)):
    print(1)
elif len(set(mas)) == 4:
    print(3)
else: print(2)
","0.0"
"b436a20f-3378-407b-9d0c-adf4962d847a","l = list(map(str, input().split()))
a = str(l[1])
s = input()
o = 0
x = ''
for i in range(int(l[0])):
    if int(a) >= int(s[i]):
        x += s[:i] + a + s[i:]
        o = 1
        break
if o == 0:
    x += s + a
print(x)","0.0"
"19c885d8-a7aa-480c-946b-9742a59e1d41","line = input()
s = line.split()
sm = 0
a = int(s[0])
b = int(s[1])
c = int(s[2])
if (a >= b and a <= c) or (a <= b and a >= c):
    mid = a
if (b >= a and b <= c) or (b <= a and b >= c):
    mid = b
if (c >= b and c <= a) or (c <= b and c >= a):
    mid = c
if a > mid:
    sm += a - mid
else:
    sm += mid - a
if b > mid:
    sm += b - mid
else:
    sm += mid - b
if c > mid:
    sm += c - mid
else:
    sm += mid - c
print(sm)
","0.0"
"dea8d696-205a-4637-aa51-cf7d02c29a02","n = int(input())
a = list(map(int, input().split()))
b = []
ml = 0
for i in a:
    if len(b) > ml:
        ml = len(b)
    if len(b) == 0:
        b.append(i)
    elif i in b:
        b.remove(i)
    else:
        b.append(i)
    if len(b) > ml:
        ml = len(b)
print(ml)","0.0"
"9f7a68f4-0125-4e43-a65d-6c66ee1629ec","s = input() + input()
d = (3 - len(s) + len(set(s)))
print(d if d else 2)","0.0"
"b436a20f-3378-407b-9d0c-adf4962d847a","n, z = map(int, input().split())
a = int(input())
d = str(a)
zz = str(z)
b = list(d)
bul = set()
i = 0
while True:
    if int(b[i]) <= z:
        b.append(zz)
        b[-1] += b[i]
        b[i], b[-1] = b[-1], b[i]
        b.pop(-1)
        bul.add(True)
        break
    else:
        bul.add(False)
    i += 1
    if i == n:
        break

if len(bul) == 2:
    print(*b, sep='')
else:
    b.append(zz)
    print(*b, sep='')","0.0"
"b436a20f-3378-407b-9d0c-adf4962d847a","lenn, dop = map(int, input().split())
ch = input()
maxx = 0
if dop == 0:
	print(int(ch + str(dop)))
else:
	for i in range(lenn):
		maxx = max(maxx, int(ch[:i] + str(dop) + ch[i:]))
	print(maxx)
","0.0"
"cf10d30e-74e0-4d68-b804-84b51b2900e3","if n := int(input()) <= 4:
	print('NOT ROBOT')
else:
	print('ROBOT')
	","0.0"
"9f7a68f4-0125-4e43-a65d-6c66ee1629ec","a = input()
b = input()
x = [a[0], b[0], a[1], b[1]]
s = set(x)
print(len(x) - 1)","0.0"
"b436a20f-3378-407b-9d0c-adf4962d847a","lenn, dop = map(int, input().split())
ch = input()
maxx = 0
if dop == 0:
	print(int(ch + str(dop)))
else:
	for i in range(lenn+1):
		maxx = max(maxx, int(ch[:i] + str(dop) + ch[i:]))
	print(maxx)
","0.0"
"b436a20f-3378-407b-9d0c-adf4962d847a","p = [int(i) for i in input().split()]
n = input()
n1 = ''
for i in range(p[0]):
    if p[1] >= int(n[i]) and i == 1:
        n1 = str(p[1]) + n
        break
    elif p[1] >= int(n[i]):
        n1 = n[0:i+1] + str(p[1]) + n[i+1:]
        break
    elif p[1] <= int(n[i]) and i == p[0]-1:
        n1 = n + str(p[1])
        break
print(int(n1))
","0.0"
"b436a20f-3378-407b-9d0c-adf4962d847a","b, a = map(int, input().split())
f = int(input())
sp=[int(i) for i in str(f)]
for i in sp[::-1]:
    if i<a:
        sp.insert(i+1,a)
    if a==0:
        sp.append(a)
    break
print(str(sp)[1:-1].replace("", "", """"))
","0.0"
"83fac1d9-f429-4153-9332-5af26eae0378","s = input()
m = [[0,0]]
u = 0
l = 0
k=0
for i in s:
    if i=='D':
        u-=1
        if [u,l] in m:
            k+=1
        else:
            k+=5
        m.append([u,l])
        continue
    if i=='U':
        u+=1
        if [u,l] in m:
            k+=1
        else:
            k+=5
        m.append([u,l])
        continue
    if i=='L':
        l+=1
        if [u,l] in m:
            k+=1
        else:
            k+=5
        m.append([u,l])
        continue
    if i=='R':
        l-=1
        if [u,l] in m:
            k+=1
        else:
            k+=5
        m.append([u,l])
        continue
print(k)
","0.0"
"9f7a68f4-0125-4e43-a65d-6c66ee1629ec","a = input()
b = input()
x = [a[0], b[0], a[1], b[1]]
s = set(x)
print(len(s) - 1)","0.0"
"83fac1d9-f429-4153-9332-5af26eae0378","n = input()
cur = [0,0]
l = []
l.append(cur.copy())
for i in n:
    if i == ""D"":
        cur[1] -= 1
        if cur not in l:
            l.append(cur.copy())
    if i == ""U"":
        cur[1] += 1
        if cur not in l:
            l.append(cur.copy())
    if i == ""L"":
        cur[0] -= 1
        if cur not in l:
            l.append(cur.copy())
    if i == ""R"":
        cur[0] += 1
        if cur not in l:
            l.append(cur.copy())
ans = (len(l) - 1) * 5 + (len(n) + 1 - len(l))
print(ans)

","0.0"
"b436a20f-3378-407b-9d0c-adf4962d847a","b, a = map(int, input().split())
f = int(input())
sp=[int(i) for i in str(f)]
for i in sp[::-1]:
    if i<a:
        sp.insert(i+1,a)
    if a==0:
        sp.append(a)
    break
print(str(sp)[1:-1].replace("", "", """"))
","0.0"
"f7c03795-0238-4dc2-a83e-5674ef35ad88","x, y, a, b=map(int, input().split())
h=[]
for i in range(a, b+1):
    if i%x==0 and i%y==0:
        h.append(i)
print(len(h))
","0.0"
"19c885d8-a7aa-480c-946b-9742a59e1d41","a = input().split()
for x in range(3):
    a[x] = int(a[x])
a.sort()
b = int(a[2]) - int(a[0])
print(b)","0.0"
"b436a20f-3378-407b-9d0c-adf4962d847a","p = [int(i) for i in input().split()]
n = input()
n1 = ''
for i in range(p[0]):
    if p[1] >= int(n[i]) and i == 0:
        n1 = str(p[1]) + n
        break
    elif p[1] >= int(n[i]):
        n1 = n[0:i+1] + str(p[1]) + n[i+1:]
        break
    elif p[1] <= int(n[i]) and i == p[0]-1:
        n1 = n + str(p[1])
        break
print(int(n1))
","0.0"
"dea8d696-205a-4637-aa51-cf7d02c29a02","n = int(input())
a = list(map(int, input().split()))
s = set()
ans = 0
for i in a:
    if i in s:
        s.discard(i)
    else:
        s.add(i)
        ans = max(ans, len(s))
print(ans)","0.0"
"b436a20f-3378-407b-9d0c-adf4962d847a","a,d=input().split()
c=input()
mx=0
for i in range(1,int(a)+1):
    if int(c[:i]+d+c[i:])>mx:
        #print(mx,c[:i]+d+c[i:])
        mx=int(c[:i]+d+c[i:])
print(mx)","0.0"
"db113d71-211d-446c-8cc7-3fa4c4772bf5","n, m = map(int, input().split())
if m <= n * 4 // 2:
    for i in range(m):
        print(i + 1, end=' ')
else:
    for i in range(m // 2):
        print(n * 2 + i + 1, i + 1, end=' ')
    if m % 2 == 1:
        print(i * 2)","0.0"
"b436a20f-3378-407b-9d0c-adf4962d847a","n, c = map(int, input().split())
s = input()
if int(s[-1]) >= c:
    print(s + str(c))
else:
    for i in range(n):
        if int(s[i]) <= c:
            s = s[:i] + str(c) + s[i:]
            break
    print(s)","0.0"
"d29dd9ba-3ac3-462f-b2dd-7531b3f01171","a,b,c = map(int,input().split())
masiv = [1]
a -= 1
for i in range(20000):
    if masiv[-1] == 1:
        if b > 0:
            b -= 1
            masiv += [0]
            continue
        if c > 0:
            c -= 1
            masiv += [0]
            continue
    else:
        if a > 0:
            a -= 1
            masiv += [1]

print(len(masiv)+(-1 if masiv[-1] == 0 else 0))
","0.0"
"cf10d30e-74e0-4d68-b804-84b51b2900e3","def isRobotWin(n):
    dp = [False] * (n + 1)

    for i in range(2, n + 1):
        dp[i] = True
    for j in range(1, i // 2 + 1):
        if i % j == 0 and not (dp[i - j]):
            dp[i] = False
            break

    return ""ROBOT"" if dp[n] else ""NOT ROBOT""

n = int(input())
print(isRobotWin(n))","0.0"
"cf10d30e-74e0-4d68-b804-84b51b2900e3","a=int(input())
if a<=4:
    print(""NOT ROBOT"")
else:
    print(""ROBOT"")","0.0"
"b436a20f-3378-407b-9d0c-adf4962d847a","a,d=input().split()
c=input()
mx=0
for i in range(int(a)+1):
    if int(c[:i]+d+c[i:])>mx:
        #print(mx,c[:i]+d+c[i:])
        mx=int(c[:i]+d+c[i:])
print(mx)","0.0"
"19c885d8-a7aa-480c-946b-9742a59e1d41","a, b, c = map(int, input().split())
m = 100000000000
k = 0
for i in range(min(a, b, c), max(a, b, c) + 1):
    k = abs(a - i) + abs(b - i) + abs(c - i)
    if k < m:
        m = k
print(m)","0.0"
"dea8d696-205a-4637-aa51-cf7d02c29a02","n = int(input())
arr = [int(s) for s in input().split()]

kover = []
mx = len(kover)

for i in range(len(arr)):
    if arr[i] not in kover:
        kover.append(arr[i])
        if len(kover) > mx: mx = len(kover)
    else:
        kover.remove(arr[i])

print(mx)","0.0"
"d29dd9ba-3ac3-462f-b2dd-7531b3f01171","g, c, h = list(map(int, input().split()))
print(min(g-1, c+h)*2+1)","0.0"
"51da05db-a06f-4b98-98be-db263befcf2e","n, d = map(int, input().split())
lst = sorted(list(map(int, input().split())))

ct = 0
for i in range(n):
    j = i + 1
    while j < n:
        if abs(lst[i] - lst[j]) <= d:
            ct += 1
            j += 1
        else:
            break

print(ct)




","0.0"
"cf10d30e-74e0-4d68-b804-84b51b2900e3","a = int(input())
if a <= 4:
    print('NOT ROBOT')
else:
    print('ROBOT')","0.0"
"b436a20f-3378-407b-9d0c-adf4962d847a","n, z = map(int, input().split())
a = int(input())
d = str(a)
zz = str(z)
b = list(d)
bul = set()
i = 0
while True:
    if int(b[i]) <= z:
        b.append(zz)
        b[-1] += b[i]
        b[i], b[-1] = b[-1], b[i]
        b.pop(-1)
        bul.add(True)
        break
    else:
        bul.add(False)
    i += 1
    if i == n:
        break

if len(bul) == 2:
    print(*b, sep='')
else:
    b.append(z)
    print(*b, sep='')","0.0"
"dea8d696-205a-4637-aa51-cf7d02c29a02","num = int(input())
n = list(map(int, input().split()))
sock = []
max_s = 0
for i in range(2*num): 
    if n[i] in sock:
        sock.remove(n[i])
    else:
        sock.append(n[i])
        max_s = max(max_s, len(sock))
print(max_s)","0.0"
"d29dd9ba-3ac3-462f-b2dd-7531b3f01171","d, c, h = map(int, input().split())
print(min(d - 1, c + h) * 2 + 1)","0.0"
"d29dd9ba-3ac3-462f-b2dd-7531b3f01171","g, c, h = list(map(int, input().split()))

print(min(2*g-1, 2*c+2*h+1))
","0.0"
"d29dd9ba-3ac3-462f-b2dd-7531b3f01171","g, c, h = map(int, input().split())
print(min(g*2-1, 2*(c+h)+1))
","0.0"
"83fac1d9-f429-4153-9332-5af26eae0378","s=input()
k=0
for i in range(len(s)):
    k+=5
    if i>0:
        if s[i]=='L' and s[i-1]=='R':
            k-=4
        elif s[i]=='R' and s[i-1]=='R':
            k-=4
        if s[i]=='U' and s[i-1]=='D':
            k-=4
        elif s[i]=='D' and s[i-1]=='U':
            k-=4
print(k)","0.0"
"b436a20f-3378-407b-9d0c-adf4962d847a","line = input()
s = line.split()
sm = 0
length = int(s[0])
num = s[1]
st = input()
mx = 0
ex = ''
for i in range(0, length+1):
    ex = st[:i] + num + st[i:]
    if int(ex) >= mx:
        mx = int(ex)

print(mx)","0.0"
"d29dd9ba-3ac3-462f-b2dd-7531b3f01171","sp = input().split()
g = int(sp[0])
c = int(sp[1])
h = int(sp[2])
vn = c + h
if vn >= g-1:
    print(g+g-1)
else:
    print(vn + vn + 1)","0.0"
"d29dd9ba-3ac3-462f-b2dd-7531b3f01171","a = list(map(int, input().split()))
g = a[0]
c = a[1]
h = a[2]
if g * 2 >= (c + h ) * 2 + 1:
    print((c + h) * 2 +1 )
else:
    print( g * 2 -1)","0.0"
"83fac1d9-f429-4153-9332-5af26eae0378","piska = input()
gey = [0,0]
qw = set(tuple(gey))
c = 0
for i in piska:
    if i == 'D':
        gey[0] -= 1
    if i == 'U':
        gey[0] += 1
    if i == 'L':
        gey[1] -= 1
    if i == 'R':
        gey[1] += 1
    kaka = tuple(gey)
    if kaka not in qw:
        c += 5
        qw.add(kaka)
    else:
        c += 1
print(c)","0.0"
"db113d71-211d-446c-8cc7-3fa4c4772bf5","n1, n2 = map(int, input().split())
n = 1
lst = []
if n2 % 2 == 1:
    while len(lst) < n2 - 1:
        if (2 * n1 + n) <= n2:
            lst.append(2 * n1 + n)
        lst.append(n)
        n += 1
    if n2 % 2 == 1:
        lst.append(n)
    lst = list(map(str, lst))
    print(' '.join(lst))
else:
    while len(lst) < n2:
        if (2 * n1 + n) <= n2:
            lst.append(2 * n1 + n)
        lst.append(n)
        n += 1
    if n2 % 2 == 1:
        lst.append(n)
    lst = list(map(str, lst))
    print(' '.join(lst))    ","0.0"
"b436a20f-3378-407b-9d0c-adf4962d847a","def question(val, z):
    mas = list(val)
    for p in range(len(mas)):
        mas[p] = int(mas[p])
    mn = min(mas)

    if z == 0:
        return val + '0'
    elif z <= mn:
        return val + str(z)
    elif z >= int(val[0]):
        return str(z) + val
    else:
        ans = ''
        ln = len(val)
        for i in range(0, ln - 1):
            if int(val[i]) > z and z >= int(val[i + 1]):
                ans += val[i] + str(z)
                return ans + val[i + 1:]

            ans += val[i]




n, z = map(int, input().split())
val = input()
print(question(val, z))","0.0"
"83fac1d9-f429-4153-9332-5af26eae0378","piska = input()
gey = [0,0]
qw = set(tuple(gey))
c = 0
for i in piska:
    if i == 'D':
        gey[0] -= 1
    if i == 'U':
        gey[0] += 1
    if i == 'R':
        gey[1] -= 1
    if i == 'L':
        gey[1] += 1
    kaka = tuple(gey)
    if kaka not in qw:
        c += 5
        qw.add(kaka)
    else:
        c += 1
print(c)","0.0"
"db113d71-211d-446c-8cc7-3fa4c4772bf5","n, m = map(int, input().split())

if m <= 2*n:
    print(*range(1, m+1))
else:
    for q in range(1, 2*n+1):
        a = 2*n + q
        if a <= m:
            print(a,end=' ')
        print(q, end=' ')

    

","0.0"
"9f7a68f4-0125-4e43-a65d-6c66ee1629ec","a = input()
b = input()
p = [a[1], a[0], b[1], b[0]]
q = p.count(a[1]) + p.count(a[0]) + p.count(b[1]) + p.count(b[0])
if q == 4:
    print(3)
elif q == 6:
    print(2)
elif q == 8 or q == 10:
    print(1)
else:
    print(0)","0.0"
"f7c03795-0238-4dc2-a83e-5674ef35ad88","from math import *
x, y, a, b = list(map(int, input().split()))
f = gcd(x, y)
f = y*x//f
print(b//f - (a-1)//f)","0.0"
"db113d71-211d-446c-8cc7-3fa4c4772bf5","n, m = map(int, input().split())
if m <= n * 2:
    for i in range(m):
        print(i + 1, end=' ')
else:
    count = 0
    for i in range(m // 2):
        if i + 1 + n * 2 <= m:
            print(n * 2 + i + 1, i + 1, end=' ')
            count += 1
        else:
            print(i + 1, end=' ')
        count += 1
    if count < m:
        print(n * 2, end=' ')","0.0"
"83fac1d9-f429-4153-9332-5af26eae0378","piska = input()
gey = [0,0]
qw = {(0,0)}
c = 0
for i in piska:
    if i == 'D':
        gey[0] -= 1
    if i == 'U':
        gey[0] += 1
    if i == 'R':
        gey[1] -= 1
    if i == 'L':
        gey[1] += 1
    kaka = tuple(gey)
    if kaka not in qw:
        c += 5
        qw.add(kaka)
    else:
        c += 1
print(c)






# pipiska = input()
# pisechki = ''
# tr = True
# for i in pipiska:
#     if int(i) <= piska and tr:
#         pisechki += str(piska)
#         tr = False
#     pisechki += i
# if tr:
#     pisechki += str(piska)
# print(int(pisechki))
","0.0"
"51da05db-a06f-4b98-98be-db263befcf2e","a, d = map(int, input().split())
k = 0
v = [int(b) for b in input().split()]
for c in range(len(v)):
    for i in range(len(v)):
        if abs(v[c]-v[i]) <= d:
            k+=1
print((k-len(v))//2)
        
","0.0"
"f7c03795-0238-4dc2-a83e-5674ef35ad88","from math import gcd
x, y, a, b = map(int, input().split())
z = x * y // gcd(x, y)
print(b // z - (a - 1) // z)","0.0"
"f7c03795-0238-4dc2-a83e-5674ef35ad88","s=list(map(int, input().split(' ')))
k=0
for i in range(s[2], s[3]+1):
    if i%s[0]==0 and i%s[1]==0:
        k+=1
print(k)
        
","0.0"
"b436a20f-3378-407b-9d0c-adf4962d847a","n, z = map(int, input().split())
s = input()
k = 0
for i in range(n + 1):
    a = s[:i] + str(z) + s[i:]
    if int(a) > k:
        k = int(a)
print(k)","0.0"
"f7c03795-0238-4dc2-a83e-5674ef35ad88","import math
x, y, a, b = map(int, input().split())
lcm = (x * y) // math.gcd(x, y)
count = (b // lcm) - ((a-1) // lcm)

print(count)","0.0"
"f7c03795-0238-4dc2-a83e-5674ef35ad88","x, y, a, b = map(int, input().split())

counter = 0
for i in range(a, b + 1):
    if i % x == 0 and i % y == 0: counter += 1

print(counter)","0.0"
"b436a20f-3378-407b-9d0c-adf4962d847a","n, z = map(int, input().split())
a = int(input())
d = str(a)
zz = str(z)
b = list(d)
bul = set()
i = 0
while True:
    if int(b[i]) <= z:
        b.append(zz)
        b[-1] += b[i]
        b[i], b[-1] = b[-1], b[i]
        b.pop(-1)
        bul.add(True)
        break
    else:
        bul.add(False)
    i += 1
    if i == n:
        break

if len(bul) == 2 or bul == {True}:
    print(*b, sep='')
if len(bul) == 1 and bul == {False}:
    b.append(z)
    print(*b, sep='')","0.0"
"a137070a-e421-4d52-9cf8-8a31ac9eb188","n = int(input())
S = 0
x1, y1 = 100000, 100000
x2, y2 = 0, 0
for i in range(n):
    M = list(map(int, input().split()))
    S += (M[2] - M[0]) * (M[3] - M[1])
    x1 = min(x1, M[0])
    y1 = min(y1, M[1])
    x2 = max(x2, M[2])
    y2 = max(y2, M[3])

if x2 - x1 == y2 - y1 and (x2 - x1) * (y2 - y1) == S:
    print(""YES"")
else:
    print(""NO"")
","0.0"
"83fac1d9-f429-4153-9332-5af26eae0378","piska = input()
gey = [0,0]
qw = {(0,0)}
c = 0
for i in piska:
    if i == 'D':
        gey[0] -= 1
    if i == 'U':
        gey[0] += 1
    if i == 'R':
        gey[1] -= 1
    if i == 'L':
        gey[1] += 1
    kaka = tuple(gey)
    if kaka not in qw:
        c += 5
        qw.add(kaka)
    else:
        c += 1
print(c)","0.0"
"d29dd9ba-3ac3-462f-b2dd-7531b3f01171","g, c, h = map(int, input().split())
m = c + h
ss = 0
if m >= (g-1):
    ss = 2*g - 1
else:
    ss = 2*m + 1
print(ss)
","0.0"
"83fac1d9-f429-4153-9332-5af26eae0378","s = input()
k = []
x = 0
y = 0
t = 0
for i in s:
    k.append([x, y])
    if i == 'U':
        y += 1
    elif i == 'R':
        x += 1
    elif i == 'D':
        y -= 1
    elif i == 'L':
        x -= 1
    if [x, y] in k:
        t += 1
    else:
        t += 5
print(t)","0.0"
"dea8d696-205a-4637-aa51-cf7d02c29a02","n = int(input())
od=0
maxi=-1
s = list(map(int, input().split()))
sp = [0]*n*2
for i in s:
    p = sp[i]
    if p==1:
        od-=1
    else:
        sp[i]=1
        od+=1
    if od>maxi:
        maxi=od
print(maxi)","0.0"
"19c885d8-a7aa-480c-946b-9742a59e1d41","abc = input()
a,b,c = abc.split()

a = int(a)
b = int(b)
c = int(c)

data = [a, b, c]
data.sort()
module_a = data[1] - data[0]
module_b = data[2] - data[1]
colc = module_a + module_b
print(colc)","0.0"
"d29dd9ba-3ac3-462f-b2dd-7531b3f01171","t, p, g = map(int, input().split())
ob = p + g
if t > ob:
    print(ob + ob + 1)
else:
    print(t + t - 1)","0.0"
"f7c03795-0238-4dc2-a83e-5674ef35ad88","x, y, a, b = map(int, input().split())

# Ð¸Ð½Ð¸ÑÐ¸Ð°Ð»Ð¸Ð·Ð°ÑÐ¸Ñ ÑÑÐµÑÑÐ¸ÐºÐ°
cnt = 0

# Ð¿ÐµÑÐµÐ±Ð¾Ñ ÐºÐ»ÐµÑÐ¾Ðº
for i in range(a, b+1):
    if i % x == 0 and i % y == 0:
        cnt += 1

# Ð²ÑÐ²Ð¾Ð´ ÑÐµÐ·ÑÐ»ÑÑÐ°ÑÐ°
print(cnt)","0.0"
"cf10d30e-74e0-4d68-b804-84b51b2900e3","if int(input())<5:
    print('NOT ROBOT')
else:
    print('ROBOT')
","0.0"
"19c885d8-a7aa-480c-946b-9742a59e1d41","abc = input()
a,b,c = abc.split()

a = int(a)
b = int(b)
c = int(c)

data = [a, b, c]
data.sort()
module_a = data[1] - data[0]
module_b = data[2] - data[1]
colc = module_a + module_b
print(colc)","0.0"
"9f7a68f4-0125-4e43-a65d-6c66ee1629ec","st1 = input()
st2 = input()
s = set([st1[0], st1[1], st2[0], st2[1]])
if len(s) == 1:
    print(0)
elif len(s) == 2:
    print(1)
elif len(s) == 3:
    print(2)
else:
    print(3)","0.0"
"f7c03795-0238-4dc2-a83e-5674ef35ad88","x, y, a, b = map(int, input().split())
c = 0
for i in range(a, b+1):
    if i % x == 0 and i % y == 0:
        c += 1
print(c)
","0.0"
"19c885d8-a7aa-480c-946b-9742a59e1d41","p = [int(i) for i in input().split()]
m1 = int(max(p))
m2 = int(min(p))
m3 = ((int(p[0]) + int(p[1]) + int(p[2])) - m1) - m2
print((m3 - m2)+(m1 - m3))","0.0"
"f7c03795-0238-4dc2-a83e-5674ef35ad88","import math
x, y, left, right = map(int, input().split())
lcm = x*y/math.gcd(x, y)
print(int((right-right%lcm-((left-1)//lcm+1)*lcm)//lcm+1))","0.0"
"9f7a68f4-0125-4e43-a65d-6c66ee1629ec","a=input()
b=input()
c=(a+b).count(a[0])+(a+b).count(a[1])+(a+b).count(b[0])+(a+b).count(b[1])
if c==8:
    print(1)
elif c==6:
    print(2)
elif c==16:
    print(0)
else:
    print(3)
","0.0"
"d29dd9ba-3ac3-462f-b2dd-7531b3f01171","a,b,c=[int(i) for i in input().split()]
q = b + c
w = a - 1
z = 0
if w < q:
    z = 2*w+1
else:
    z = 2*q+1
print(z)","0.0"
"9f7a68f4-0125-4e43-a65d-6c66ee1629ec","a=input()
b=input()
c=(a+b).count(a[0])+(a+b).count(a[1])+(a+b).count(b[0])+(a+b).count(b[1])
if c==8:
    print(1)
elif c==6:
    print(2)
elif c==16:
    print(0)
else:
    print(3)
","0.0"
"9f7a68f4-0125-4e43-a65d-6c66ee1629ec","a=input()
b=input()
c=(a+b).count(a[0])+(a+b).count(a[1])+(a+b).count(b[0])+(a+b).count(b[1])
if c==8:
    print(1)
elif c==6:
    print(2)
elif c==16:
    print(0)
else:
    print(3)
","0.0"
"f7c03795-0238-4dc2-a83e-5674ef35ad88","import math
x, y, a, b = map(int, input().split())

first_number_x = math.ceil(a / x) * x
first_number_y = math.ceil(a / y) * y

arr1 = []
arr2 = []

while first_number_x <= b or first_number_y <= b:
    if first_number_x <= b:
        arr1.append(first_number_x)
        first_number_x += x
    if first_number_y <= b:
        arr2.append(first_number_y)
        first_number_y += y

arr1 = set(arr1)
arr2 = set(arr2)

arr3 = arr1.intersection(arr2)

print(len(arr3))","0.0"
"dea8d696-205a-4637-aa51-cf7d02c29a02","n = int(input())
p = [int(i) for i in input().split()]
count = 0
cover = []
max_count = 0

for i in p:
    if i not in cover:
        cover.append(i)
        count += 1
    else:
        del cover[cover.index(i)]
        count -= 1
    max_count = max(max_count, count)

print(max_count)","0.0"
"d29dd9ba-3ac3-462f-b2dd-7531b3f01171","a = list(map(int, input().split()))
g = a[0]
c = a[1]
h = a[2]
if g > c+h:
    print((c+h)*2+1)
else:
    print(g*2-1)","0.0"
"d29dd9ba-3ac3-462f-b2dd-7531b3f01171","g, c, h = map(int, input().split())
print(min(g, c + h + 1) * 2 - 1)","0.0"
"51da05db-a06f-4b98-98be-db263befcf2e","n, d = map(int, input().split())
ar = sorted(list(map(int, input().split())))
c = 0
for i in range(n):
    for j in range(i+1, n):
        if ar[j]-ar[i] <= d:
            c += 1
print(c)","0.0"
"f7c03795-0238-4dc2-a83e-5674ef35ad88","x, y, a,b = map(int, input().split())
rez = 0
for i in range(a, b + 1):
    if i % x == 0 and i % y == 0:
        rez += 1
print(rez)","0.0"
"dea8d696-205a-4637-aa51-cf7d02c29a02","n = int(input())
sp=list(map(int,input().split()))
k = 0
m = 0
spd = []
for i in sp:
    spd.append(i)
    k = len(spd)
   
    if spd.count(i)==2:
        spd.remove(i)
        spd.remove(i)
        k-=1
    m=max(m, k)
  
    
print(m)","0.0"
"b436a20f-3378-407b-9d0c-adf4962d847a","n,z=map(int,input().split())
a=int(input())
c=[int(i) for i in str(a)]
for i in range(n):
    if (c[i]<=z):
        c.insert(i,z)
        break
if len(c)==n:
    c.append(z)
print(''.join(map(str, c)))
","0.0"
"51da05db-a06f-4b98-98be-db263befcf2e","n, d = map(int, input().split())
l = [int(x) for x in input().split()]
l.sort()
R = 0
ans = 0
for L in range(n - 1):
    while R+1 < n and (l[R+1] - l[L] <= d or R <= L):
        R += 1
    if (l[R] - l[L] <= d):
        ans += R - L
print(ans)
","0.0"
"51da05db-a06f-4b98-98be-db263befcf2e","n, d = map(int, input().split())
s = list(map(int, input().split()))
c = 0
for i in range(len(s)):
	for j in range(i+1, len(s)):
		if abs(s[i]-s[j]) <= d:
			c += 1
print(c)","0.0"
"cf10d30e-74e0-4d68-b804-84b51b2900e3","n = int(input())

r = ""ROBOT""
nr = ""NOT ROBOT""

if n == 1:
    print(r)
elif n <= 4:
    print(nr)
else:
    print(r)","0.0"
"d29dd9ba-3ac3-462f-b2dd-7531b3f01171","g, c, h = [int(i) for i in input().split()]
g -= 1
res = 1
z = c+h
if z >= g:
    res += g*2
else:
    res += z*2
print(res)","0.0"
"b436a20f-3378-407b-9d0c-adf4962d847a","n = list(map(int,input().split()))
z = int(input())
digits = list(map(int, str(z)))
end = []
for i in range(n[0]):
    digits.insert(i+1,n[1])
    number = int(''.join(map(str, digits)))
    end.append(number)
    digits = list(map(int, str(z)))
print(max(end))","0.0"
"b436a20f-3378-407b-9d0c-adf4962d847a","n, m = map(int, input().split())
s = list(map(int, list(input())))
ans = 0
cnt = 0
for i in range(n):
    if cnt == 0 and s[i] < m:
        ans *= 10
        ans += m
        cnt += 1
    ans *= 10
    ans += s[i]
if cnt == 0:
    ans *= 10
    ans += m
print(ans)","0.0"
"51da05db-a06f-4b98-98be-db263befcf2e","n, d = map(int, input().split())
i = 0
k = 0
lst = sorted(list(map(int, input().split())))
while i != n:
    for j in lst[i + 1:]:
        if j - lst[i] <= d:
            k += 1
        else:
            break
    i += 1
print(k)","0.0"
"b436a20f-3378-407b-9d0c-adf4962d847a","n, z = map(int, input().split())
seq = input()
for x in range(n):
    if z >= int(seq[x]):
        break
print(int(seq[:x+1] + str(z) + seq[x+1:]))","0.0"
"f7c03795-0238-4dc2-a83e-5674ef35ad88","def find_crosses_in_circles(x, y, a, b):
    def gcd(a, b):
        while b:
            a, b = b, a % b
        return a

    lcm = (x * y) // gcd(x, y)
    min_range = (a + lcm - 1) // lcm
    max_range = b // lcm
    return max(0, max_range - min_range + 1)

x, y, a, b = map(int, input().split())
print(find_crosses_in_circles(x, y, a, b))","0.0"
"51da05db-a06f-4b98-98be-db263befcf2e","
n,d = (map(int, input().split()))
mas = (list(map(int, input().split())))
k = 0

for i in range(len(mas)-1):
    for j in range(i+1, len(mas)):
        if abs(mas[i] - mas[j]) <= d:

            k += 1


print(k)","0.0"
"51da05db-a06f-4b98-98be-db263befcf2e","n, d = map(int, input().split())
a = sorted(map(int, input().split()))
result = 0

for i in range(n):
    for j in range(i + 1, n):
        if a[j] - a[i] <= d:
            result += 1
        else:
            break

print(result)","0.0"
"f7c03795-0238-4dc2-a83e-5674ef35ad88","import math

x, y, a, b = map(int, input().split())
z = x * y // math.gcd(x, y)

a = ((a + z - 1) // z) * z
if b >= a:
    print((b - a) // z + 1)
else:
    print(0)
","0.0"
"db113d71-211d-446c-8cc7-3fa4c4772bf5","import math
s = str(input()).split(' ')
n = int(s[0])
m = int(s[1])
r = ''


for i in range(1, (2 * n) + 1):
    if m > 2*n:
        if 2*n + i <= m:
            r += str(2*n + i) + ' '
        r += str(i) + ' '
    else:
        for i in range(1, m+1):
            r += str(i) + ' '
        break


print(r)","0.0"
"cf10d30e-74e0-4d68-b804-84b51b2900e3","print(""NOT ROBOT"") if int(input()) <= 4 else print(""ROBOT"")","0.0"
"b436a20f-3378-407b-9d0c-adf4962d847a","n, z = map(int, input().split())
seq = input()
for x in range(n):
    if z >= int(seq[x]):
        break
if x == n-1:
    print(seq + str(z))
else:
    print(int(seq[:x] + str(z) + seq[x:]))

        
","0.0"
"83fac1d9-f429-4153-9332-5af26eae0378","a = input()
s = set()
x = y = 0
hx, hy, h = [0, 0, -1, 1], [1, -1, 0, 0], 'UDLR'
ans = 0
for i in a:
    ind = h.index(i)
    nx, ny = x + hx[ind], y + hy[ind]
    if (x, y, nx, ny) in s or (nx, ny, x, y) in s:
        ans += 1
    else:
        ans += 5
        s.add((x, y, nx, ny))
    x, y = nx, ny
print(ans)","0.0"
"dea8d696-205a-4637-aa51-cf7d02c29a02","n = int(input())
arr = list(map(int, input().split()))
max_dist = 0
num_indices = []
for i in range(2*n):
  if arr[i] not in num_indices:
    num_indices.append(arr[i])
  else:
    num_indices.remove(arr[i])
  max_dist = max(max_dist, len(num_indices))
print(max_dist)","0.0"
"51da05db-a06f-4b98-98be-db263befcf2e","# Ð²Ð²Ð¾Ð´ Ð´Ð°Ð½Ð½ÑÑ
n, d = map(int, input().split())
weights = list(map(int, input().split()))

# Ð¸Ð½Ð¸ÑÐ¸Ð°Ð»Ð¸Ð·Ð°ÑÐ¸Ñ Ð¿ÐµÑÐµÐ¼ÐµÐ½Ð½Ð¾Ð¹ count
count = 0

# Ð¿ÐµÑÐµÐ±Ð¾Ñ Ð²ÑÐµÑ Ð²Ð¾Ð·Ð¼Ð¾Ð¶Ð½ÑÑ Ð¿Ð°Ñ ÑÐµÐ±ÑÑÐ¸ÑÐµÐº Ð¸ Ð¿Ð¾Ð´ÑÑÐµÑ ÐºÐ¾Ð»Ð¸ÑÐµÑÑÐ²Ð° Ð¿Ð°Ñ, ÑÐ´Ð¾Ð²Ð»ÐµÑÐ²Ð¾ÑÑÑÑÐ¸Ñ ÑÑÐ»Ð¾Ð²Ð¸Ñ Ð½Ð° ÑÐ°Ð·Ð½Ð¸ÑÑ Ð²ÐµÑÐ¾Ð²
for i in range(n):
    for j in range(i+1, n):
        if abs(weights[i] - weights[j]) <= d:
            count += 1

# Ð²ÑÐ²Ð¾Ð´ ÑÐµÐ·ÑÐ»ÑÑÐ°ÑÐ°
print(count)","0.0"
"b436a20f-3378-407b-9d0c-adf4962d847a","n, z = map(int, input().split())
number = input()

i = 0
j = n - 1

while i <= j:
    if int(number[i]) < z:
        break
    i += 1

if i > j:
    number += str(z)
else:
    number = number[:i] + str(z) + number[i:]

print(number)","0.0"
"19c885d8-a7aa-480c-946b-9742a59e1d41","m1,m2,m3=map(int,input().split("" ""))
a=max(m1,m2,m3)-min(m1,m2,m3)
print (a)

","0.0"
"f7c03795-0238-4dc2-a83e-5674ef35ad88","x, y, a, b = map(int, input().split())
r = 0
l = (a+x-1)//x
h = (b)//x
for i in range(l, h+1):
    k = i*x
    if k%y == 0: 
        r+= 1
print(r)","0.0"
"d29dd9ba-3ac3-462f-b2dd-7531b3f01171","a, b, c = map(int, input().split())
a -= 1
res = min(a, b + c) * 2 + 1
print(res)
","0.0"
"51da05db-a06f-4b98-98be-db263befcf2e","n, d = map(int, input().split())
weights = list(map(int, input().split()))

count = 0

for i in range(n):
    for j in range(i+1, n):
        if abs(weights[i] - weights[j]) <= d:
            count += 1

print(count)
","0.0"
"db113d71-211d-446c-8cc7-3fa4c4772bf5","n, m = map(int, input().split())
a = []
b = []
for i in range(min(n * 2, m)):
    a += [i + 1]
k = n * 2
if k < m:
    for i in range(m - k):
        b += [i + k + 1, a[i]]
    if i < k:
        b += a[i + 1:]
else:
    b = a
print(*b)
","0.0"
"d29dd9ba-3ac3-462f-b2dd-7531b3f01171","t,c,h = (map(int, input().split()))
c = c + h
if c > t:
    print(t+t-1)
elif c==t:
    print(c+t-1)
else:
    print(c+c+1)","0.0"
"f7c03795-0238-4dc2-a83e-5674ef35ad88","import math
s=list(map(int, input().split(' ')))
k=0
for i in range(s[2], s[3]+1):
    
    if i%s[0]==0 and i%s[1]==0:
        k=i
        
        break

print(int(1+(s[3]-k)//(s[0]*s[1]/math.gcd(s[0], s[1]))))

        
","0.0"
"d29dd9ba-3ac3-462f-b2dd-7531b3f01171","p = [int(i) for i in input().split()]
t = p[0]
k = p[1]
h = p[2]
n = k + h
if n >= t:
    print(t + (t - 1))
else:
    print(n * 2 + 1)","0.0"
"b436a20f-3378-407b-9d0c-adf4962d847a","n,z=map(int,input().split())
a=int(input())
c=[int(i) for i in str(a)]
for i in range(n):
    if (c[i]<z):
        c.insert(i,z)
        break
if len(c)==n:
    c.append(z)
print(''.join(map(str, c)))
","0.0"
"d29dd9ba-3ac3-462f-b2dd-7531b3f01171","g, c, h=map(int, input().split(' '))
if g<2:
    print(0)
elif c+h>=g-1:
    print((g-1)*2+1)
elif c+h<g-1:
    print((c+h)*2+1)","0.0"
"9f7a68f4-0125-4e43-a65d-6c66ee1629ec","a, b = input(), input()
s = a+b
elem1 = s.count(s[0])
elem2 = s.count(s[1])
elem3 = s.count(s[2])
elem4 = s.count(s[3])

if elem1 == 4:
    print(0)
elif elem1 == 3 or elem2 == 3 or elem3 == 3 or elem4 == 3:
    print(1)
elif elem1 == 2 or elem2 == 2 or elem3 == 2 or elem4 == 2:
    if elem1 == elem2 == elem3 == elem4:
        print(1)
    else:
        print(2)
else:
    print(3)
","0.0"
"b436a20f-3378-407b-9d0c-adf4962d847a","n, z = map(int, input().split())
seq = input()
for x in range(n):
    if z >= int(seq[x]):
        break
if x == n-1:  
    print(int(seq + str(z)))
elif x == 0:
    print(int(str(z) + seq))
else:
    print(int(seq[:x] + str(z) + seq[x:]))

        


","0.0"
"9f7a68f4-0125-4e43-a65d-6c66ee1629ec","s1 = input()
s2 = input()
if s1==s2:
    print(0)
elif s1==s2[::-1]:
    print(1)
elif (s1[0]==s1[1]) and (s2[0]!=s2[1]):
    print(2)
elif (s2[0]==s2[1]) and (s1[0]!=s1[1]):
    print(2)
elif (s1[0]!=s1[1]) and (s1[0]!=s2[1]) and (s2[0]!=s2[1]):
    print(3)
elif (s1[0]==s1[1]) and (s2[0]==s2[1]) and (s2[0]!=s1[0]):
    print(1)","0.0"
"9f7a68f4-0125-4e43-a65d-6c66ee1629ec","s1 = input()
s2 = input()
s = [s1[0], s1[1], s2[0], s2[1]]
k = len(set(s))
print(k - 1)","0.0"
"b436a20f-3378-407b-9d0c-adf4962d847a","n, z = map(int, input().split())
num = input()

for i in range(n):
    if int(num[i]) < z:
        num = num[:i] + str(z) + num[i:]
        break

else:
    num += str(z)

print(num)","0.0"
"9f7a68f4-0125-4e43-a65d-6c66ee1629ec","a = [input().strip() for _ in range(2)]
print(len(set("""".join(a))) - 1)
","0.0"
"d29dd9ba-3ac3-462f-b2dd-7531b3f01171","t, z, p = map(int, input().split())
zp = z + p
if zp > t - 1:
  print(t * 2 - 1)
else:
  print(zp * 2 + 1)","0.0"
"9f7a68f4-0125-4e43-a65d-6c66ee1629ec","a=input()
b=input()
if a[0]==a[1]:
    if a==b:
        print(0)
    elif b[0]==b[1]:
        print(1)
    elif b[0]==a[0] or b[1]==a[0]:
        print(1)
    else:
        print(2)
elif a[1]==b[0] and a[0]==b[1]:
    print(1)
else:
    print(3)","0.0"
"f7c03795-0238-4dc2-a83e-5674ef35ad88","def find_crosses_in_circles(x, y, a, b):
    def gcd(a, b):
        while b:
            a, b = b, a % b
        return a

    lcm = (x * y) // gcd(x, y)
    min_range = (a + lcm - 1) // lcm
    max_range = b // lcm
    return max(0, max_range - min_range + 1)

x, y, a, b = map(int, input().split())
print(find_crosses_in_circles(x, y, a, b))","0.0"
"cf10d30e-74e0-4d68-b804-84b51b2900e3","import random
i = input()
mass = ['NOT ROBOT', 'ROBOT']
print(random.choice(mass))","0.0"
"b436a20f-3378-407b-9d0c-adf4962d847a","n, z = map(int, input().split())
num = input()

for i in range(n):
    if int(num[i]) < z:
        num = num[:i] + str(z) + num[i:]
        break

else:
    num += str(z)

print(num)","0.0"
"19c885d8-a7aa-480c-946b-9742a59e1d41","N = list(map(int,input().split()))
if N[0] > 100 or N[1] > 100 or N[2] > 100 or N[0] < 0 or N[1] < 0 or N[2] < 0 :
    while N[0] >=100 or N[1] >=100 or N[2] >=100 or N[0] <=1 or N[1] <=1 or N[2] <=1:
        N.clear()
        N = list(map(int, input().split()))
k=0
N.sort()
while N[2] != N[1]:
    N[2]-=1
    k+=1
while N[0] !=N[1]:
    N[0] +=1
    k+=1
print(k)","0.0"
"dea8d696-205a-4637-aa51-cf7d02c29a02","n = int(input())
ch = list(map(int, input().split()))
sl = {}
count = 0
ma = 0
for i in range(2 * n):
    try:
        sl[ch[i]] += 1
        ma = max(count, ma)
        count -= 1
    except Exception:
        sl[ch[i]] = 1
        count += 1
print(ma)","0.0"
"9f7a68f4-0125-4e43-a65d-6c66ee1629ec","s1 = input()
s2 = input()
if s1==s2:
    if s1[0]==s1[1]:
        print(0)
    else:
        print(1)
elif s1==s2[::-1]:
    print(1)
elif (s1[0]==s1[1]) and (s2[0]!=s2[1]):
    print(2)
elif (s2[0]==s2[1]) and (s1[0]!=s1[1]):
    print(2)
elif (s1[0]!=s1[1]) and (s1[0]!=s2[1]) and (s2[0]!=s2[1]):
    print(3)
elif (s1[0]==s1[1]) and (s2[0]==s2[1]) and (s2[0]!=s1[0]):
    print(1)

","0.0"
"b436a20f-3378-407b-9d0c-adf4962d847a","n, z = map(int, input().split())
seq = input()
for x in range(n):
    if z >= int(seq[x]):
        break
if n == 1:
    if z >= int(seq):
        print(str(z) + seq)
    else:
        print(seq + str(z))
elif x == 0:
    print(int(str(z) + seq))
elif x == n-1:
    print(int(seq + str(z)))
else:
    print(int(seq[:x] + str(z) + seq[x:]))
","0.0"
"9f7a68f4-0125-4e43-a65d-6c66ee1629ec","a=input()
b=input()
if a[0]==a[1]:
    if a==b:
        print(0)
    elif b[0]==b[1]:
        print(1)
    elif b[0]==a[0] or b[1]==a[0]:
        print(1)
    else:
        print(2)
elif (a[1]==b[0] and a[0]==b[1]) or a==b:
    print(1)
else:
    print(3)
","0.0"
"9f7a68f4-0125-4e43-a65d-6c66ee1629ec","s1 = input()
s2 = input()
if s1==s2:
    if s1[0]==s1[1]:
        print(0)
    else:
        print(2)
elif s1==s2[::-1]:
    print(1)
elif (s1[0]==s1[1]) and (s2[0]!=s2[1]):
    print(2)
elif (s2[0]==s2[1]) and (s1[0]!=s1[1]):
    print(2)
elif (s1[0]!=s1[1]) and (s1[0]!=s2[1]) and (s2[0]!=s2[1]):
    print(3)
elif (s1[0]==s1[1]) and (s2[0]==s2[1]) and (s2[0]!=s1[0]):
    print(1)
","0.0"
"db113d71-211d-446c-8cc7-3fa4c4772bf5","n, m = map(int, input().split())
n *= 4
for i in range(1, int(n/2), 2):
	if int(i + n/2) <= m:
		print(int(i + n/2), end="" "")
	if i <= m:
		print(i, end="" "")
	if int(i + 1 + n/2) <= m:
		print(int(i + 1 + n/2), end="" "")
	if i + 1 <= m:
		print(i + 1, end="" "")","0.0"
"b436a20f-3378-407b-9d0c-adf4962d847a","a, b = map(int, input().split())
c = input()
l = list(c)

for i in range(len(l)):
    if int(l[i]) <= b:
        l.insert(i, b)
        break

c = c[:i + 1] + str(b) + c[i + 1:]
l = ''.join(map(str, l))
if l > c:
    print(l)
else:
    print(c)","0.0"
"51da05db-a06f-4b98-98be-db263befcf2e","a=list(map(int, input().split()))
b=list(map(int, input().split()))
c=0
for i in range(len(b)):
    for j in range(len(b)):
        if i!=j and abs(b[i]-b[j])<=a[1]:
            c+=1
print(str(c/2)[:-2])","0.0"
"83fac1d9-f429-4153-9332-5af26eae0378","s = input()
k = []
x = 0
y = 0
for i in s:
    if i == 'U':
        y += 1
        k.append((x, y-1, x, y))
        k.append((x, y, x, y-1))
    elif i == 'R':
        x += 1
        k.append((x-1, y, x, y))
        k.append((x, y, x-1, y))
    elif i == 'D':
        y -= 1
        k.append((x, y+1, x, y))
        k.append((x, y, x, y+1))
    elif i == 'L':
        x -= 1
        k.append((x+1, y, x, y))
        k.append((x, y, x+1, y))

print((len(k) * 5 - 4 * (len(k) - len(set(k))))//2)","0.0"
"f7c03795-0238-4dc2-a83e-5674ef35ad88","x, y, a, b = map(int, input().split())
s = []
e = []

for j in [x, y]:
    if a % j != 0:
        s.append(a // j * j + j)
    else:
        s.append(a // j * j)

for j in [x, y]:
    e.append(b // j * j)

    
nums_x = set([i for i in range(s[0], e[0]+1, x)])
nums_y = set([i for i in range(s[1], e[1]+1, y)])

print(len(nums_x & nums_y))","0.0"
"b436a20f-3378-407b-9d0c-adf4962d847a","l = list(map(str, input().split()))
a = str(l[1])
s = input()
o = 0
x = ''
for i in range(int(l[0])):
    if int(a) >= int(s[i]):
        x += s[:i] + a + s[i:]
        o = 1
        break
if o == 0:
    x = s + a
print(x)","0.0"
"9f7a68f4-0125-4e43-a65d-6c66ee1629ec","a=input()
b=input()
if a[0]==a[1]:
    if a==b:
        print(0)
    elif b[0]==b[1]:
        print(1)
    elif b[0]==a[0] or b[1]==a[0]:
        print(1)
    else:
        print(2)
elif b[0]==b[1]:
    if a==b:
        print(0)
    elif a[0]==a[1]:
        print(1)
    elif b[0]==a[0] or b[1]==a[0]:
        print(1)
    else:
        print(2)
elif (a[1]==b[0] and a[0]==b[1]) or a==b:
    print(1)
else:
    print(3)
        

","0.0"
"9f7a68f4-0125-4e43-a65d-6c66ee1629ec","a=input().strip()
b=input().strip()
a = list(a) + list(b)
a=len(set(a))
print(a-1)","0.0"
"dea8d696-205a-4637-aa51-cf7d02c29a02","n = int(input())
mas2 = list(map(int,input().split()))
mas = []
mx = -9
for i in range(2*n):
    a = mas2[i]
    if a not in mas:
        mas.append(a)
    else:
        mas.remove(a)
    mx = max(mx, len(mas))
print(mx)","0.0"
"f7c03795-0238-4dc2-a83e-5674ef35ad88","x, y, a, b = map(int, input().split())
s=0
for i in range(a, b+1):
    if i%x==0 and i%y==0:
        s+=1
print(s)","0.0"
"cf10d30e-74e0-4d68-b804-84b51b2900e3","a=int(input())
if a%3%2==0:
    print(""NOT ROBOT"")
else:
    print(""ROBOT"")","0.0"
"9f7a68f4-0125-4e43-a65d-6c66ee1629ec","s = input() + input()
for i in range(len(s)):
    if s.count(s[i]) != 1:
        break
    if i == len(s) - 1:
        print(3)
for i in range(len(s)):
    if s.count(s[i]) == 4:
        print(0)
        break
    if s.count(s[i]) == 3:
        print(1)
        break    
if s.count(s[0]) != 4 and ((s[0] == s[1] and s[2] == s[3]) or (s[0] == s[2] and s[1] == s[3]) or (s[0] == s[3] and s[1] == s[2])):
    print(1)
for i in range(len(s) - 1):
    if s.count(s[i]) == 2 and s.count(s[i + 1]) == 1:
        print(2)
        break","0.0"
"09441e0b-3a6a-4c17-a1e3-6bec7305e997","n = int(input())
a = list(map(int, input().split()))
b = [a[0]]
for i in a:
    if b[-1] != i:
        b.append(i)
ans = 0
for i in range(len(b)):
    if i == 0 or i == len(b) - 1:
        ans += 1
    elif b[i - 1] > b[i] < b[i + 1] or b[i - 1] < b[i] > b[i + 1]:
        ans += 1
print(ans)","0.0"
"b436a20f-3378-407b-9d0c-adf4962d847a","n, z = map(int, input().split())
num = input()

for i in range(n):
    if int(num[i]) < z:
        result = num[:i] + str(z) + num[i:]
        break
else:
    result = num +str(z)

print(int(result))
","0.0"
"b436a20f-3378-407b-9d0c-adf4962d847a","a, b = map(int, input().split())
c = input()
l = list(c)

for i in range(len(l)):
    if int(l[i]) < b:
        l.insert(i, b)
        break

c = c[:i + 1] + str(b) + c[i + 1:]
l = ''.join(map(str, l))
if l > c:
    print(l)
else:
    print(c)","0.0"
"9f7a68f4-0125-4e43-a65d-6c66ee1629ec","print(len(set(list(input().strip()) + list(input().strip())))-1)","0.0"
"f7c03795-0238-4dc2-a83e-5674ef35ad88","x, y, a, b = map(int, input().split())
s = []
e = []

for j in [x, y]:
    if a % j != 0:
        s.append(a // j * j + j)
    else:
        s.append(a // j * j)

for j in [x, y]:
    e.append(b // j * j)

count = 0 
nums_x = set([i for i in range(s[0], e[0]+1, x)])

for i in range(s[1], e[1]+1, y):
    if i in nums_x:
        count += 1

print(count)","0.0"
"b436a20f-3378-407b-9d0c-adf4962d847a","n, m = map(int, input().split())
st = input()
s = list(map(int, list(st)))
ans = 0
cnt = 0
if m == 0:
    print(st + str(m))
else:
    for i in range(n):
        if cnt == 0 and s[i] < m:
            ans *= 10
            ans += m
            cnt += 1
        ans *= 10
        ans += s[i]
    if cnt == 0:
        ans *= 10
        ans += m
    print(ans)
","0.0"
"b436a20f-3378-407b-9d0c-adf4962d847a","n, z = map(int, input().split())
seq = input()
if n == 1:
    if z >= int(seq):
        print(str(z) + seq)
    else:
        print(seq + str(z))
else:
    for x in range(n):
        if z >= int(seq[x]):
            break
    if x == n-1:
        print(seq + str(z))
    else:
        print(int(seq[:x] + str(z) + seq[x:]))

","0.0"
"51da05db-a06f-4b98-98be-db263befcf2e","n, d = map(int,(input()).split())
a=[int(x) for x in  input().split()]
c = 0
for i in range(n):
    for j in range (n):
        if abs(a[i]-a[j])<=d and i!=j:
            c = c + 1
print(int(c/2))
","0.0"
"b436a20f-3378-407b-9d0c-adf4962d847a","sp = input().split()
n, z = int(sp[0]), int(sp[1])
ch = input()
mx = ch
for i in range(len(ch) + 1):
    new = ch[:i] + str(z) + ch[i:]
    if new > mx:
        mx = new
print(mx)

","0.0"
"9f7a68f4-0125-4e43-a65d-6c66ee1629ec","s = input() + input()
for i in range(len(s)):
    if s.count(s[i]) != 1:
        break
    if i == len(s) - 1:
        print(3)
for i in range(len(s)):
    if s.count(s[i]) == 4:
        print(0)
        break
    if s.count(s[i]) == 3:
        print(1)
        break    
if s.count(s[0]) != 4 and ((s[0] == s[1] and s[2] == s[3]) or (s[0] == s[2] and s[1] == s[3]) or (s[0] == s[3] and s[1] == s[2])):
    print(1)
for i in range(len(s) - 1):
    if (s.count(s[i]) == 2 and s.count(s[i + 1]) == 1) or s[i] == s[i + 1]:
        print(2)
        break","0.0"
"d29dd9ba-3ac3-462f-b2dd-7531b3f01171","x,y,z=map(int,input().split())
s=y+z
if x-1<s:
    k=x+x-1
else:
    k=s+s+1
print(k)
","0.0"
"d29dd9ba-3ac3-462f-b2dd-7531b3f01171","i = input()
i = i.split()
g = int(i[0])
c = int(i[1])
h = int(i[2])
if g - 2 >= c+h:
    print(((c+h) * 2) +1)
else:
    print(g + g-1)
","0.0"
"9f7a68f4-0125-4e43-a65d-6c66ee1629ec","a=input()
b=input()
sp=[]
for i in range(2):
    sp.append(a[i])
for t in range(2):
    sp.append(b[t])
sp2=[]
for f in range(4):
    sp2.append(sp.count(sp[f]))
if sp2==[2,2,2,2]:
    print(1)
elif sp2==[1,1,1,1]:
    print(3)
elif sp2==[4,4,4,4]:
    print(0)
else:
    print(2)","0.0"
"a137070a-e421-4d52-9cf8-8a31ac9eb188","n = int(input())
s = 0
kx1 = ky1 = float('inf')
kx2 = ky2 = -float('inf')
for i in range(n):
    x1, y1, x2, y2 = map(int, input().split())
    kx1 = min(kx1, x1)
    ky1 = min(ky1, y1)
    kx2 = max(kx2, x2)
    ky2 = max(ky2, y2)
    s += (x2 - x1) * (y2 - y1)
print('YES' if s == (kx2 - kx1) * (ky2 - ky1) else 'NO')","0.0"
"f7c03795-0238-4dc2-a83e-5674ef35ad88","x,y,a,b=map(int,input().split())
sp=[]
sd=[]
k=0
for o in range(1,10000):
    if (a<=o*x<=b):
        sp.append(o*x)
for o in range(1,10000):
    if (a<=o*y<=b):
        sd.append(o*y)
for t in sp:
    if t in sd:
        k+=1
print(k)
        
","0.0"
"dea8d696-205a-4637-aa51-cf7d02c29a02","n = int(input())
M2 = list(map(int, input().split()))
res, k = 0, 0
M = [0 for i in range(10 ** 6)]

for ind in M2:
    M[ind] += 1
    if M[ind] == 1:
        k += 1
    else:
        k -= 1
    res = max(res, k)
print(res)
","0.0"
"f7c03795-0238-4dc2-a83e-5674ef35ad88","x, y, a, b = map(int, input().split())
xxx = []
yyy = []

for i in range(1, 100001):
	xxx.append(x*i)
	yyy.append(y*i)
	if min(x*i, y*i) > b:
		break
c = 0
for i in xxx:
	if i in yyy and a <= i <= b:
		c += 1
print(c)
","0.0"
"b436a20f-3378-407b-9d0c-adf4962d847a","n, z = map(int, input().split())
seq = input()
if n == 1:
    if z >= int(seq):
        print(str(z) + seq)
    else:
        print(seq + str(z))
else:
    for x in range(n):
        if z >= int(seq[x]):
            break
    if x == n-1:
        if z <= int(seq[-1]):
            print(seq + str(z))
        else:
            print(seq[:-1] + str(z) + seq[-1])
    else:
        print(int(seq[:x] + str(z) + seq[x:]))

","0.0"
"51da05db-a06f-4b98-98be-db263befcf2e","n, d = map(int, input().split())
a = list(map(int, input().split()))
count = 0
for i in range(len(a) - 1):
    for j in range(i + 1, len(a)):
        if abs(a[i] - a[j]) <= d:
            count += 1
print(count)
","0.0"
"a137070a-e421-4d52-9cf8-8a31ac9eb188","n = int(input())
s = 0
kx1 = ky1 = 31401
kx2 = ky2 = 0
for i in range(n):
    x1, y1, x2, y2 = map(int, input().split())
    kx1 = min(kx1, x1)
    ky1 = min(ky1, y1)
    kx2 = max(kx2, x2)
    ky2 = max(ky2, y2)
    s += (x2 - x1) * (y2 - y1)
print('YES' if s == (kx2 - kx1) * (ky2 - ky1) else 'NO')","0.0"
"f7c03795-0238-4dc2-a83e-5674ef35ad88","x,y,a,b=map(int,input().split())
sp=[]
sd=[]
k=0
for o in range(1,10000):
    if (a<=o*x<=b):
        sp.append(o*x)
    if x*o>b:
        break
for o in range(1,10000):
    if (a<=o*y<=b):
        sd.append(o*y)
    if y*o>b:
        break
for t in sp:
    if t in sd:
        k+=1
print(k)
        
","0.0"
"db113d71-211d-446c-8cc7-3fa4c4772bf5","n, m = map(int, input().split())
a = 1
b = 2*n+1
c = 2*n+2
d = 2
sp = []
for i in range(n*4):
    if m >= b and b <= n*4-1:
        sp.append(b)
        b = b + 2
    if m >= a and a <= (n*2 - 1):
        sp.append(a)
        a = a + 2
    if m >= c and c <= (n*4):
        sp.append(c)
        c = c + 2
    if m >= d and d <= n*2:
        sp.append(d)
        d = d + 2
print(*sp)","0.0"
"b436a20f-3378-407b-9d0c-adf4962d847a","n, z = map(int, input().split())
seq = input()
if n == 1:
    if z >= int(seq):
        print(str(z) + seq)
    else:
        print(seq + str(z))
else:
    for x in range(n):
        if z >= int(seq[x]):
            break
    if z <= int(seq[x]):
        print(seq[:x+1] + str(z) + seq[x+1:])
    else:
        print(seq[:x] + str(z) + seq[x:])

","0.0"
"b436a20f-3378-407b-9d0c-adf4962d847a","a,b = map(int, input().split())
c= input().strip()

for i in range(len(c)-1, -1, -1):
    if int(c[i]) <=  b:
        c = c[:i] + str(b) + c[i:]
        break
if len(c) == a:
    print(c+str(b))
else:
    print(c)","0.0"
"b436a20f-3378-407b-9d0c-adf4962d847a","a,b = map(int, input().split())
c= input().strip()

for i in range(len(c)-1, -1, -1):
    if int(c[i]) <  b:
        c = c[:i] + str(b) + c[i:]
        break
if len(c) == a:
    print(c+str(b))
else:
    print(c)","0.0"
"9f7a68f4-0125-4e43-a65d-6c66ee1629ec","a=input()
b=input()
sp=[]
for i in range(2):
    sp.append(a[i])
for t in range(2):
    sp.append(b[t])
sp2=[]
for f in range(4):
    sp2.append(sp.count(sp[f]))
if sp2==[2,2,2,2]:
    print(1)
elif sp2==[1,1,1,1]:
    print(3)
elif sp2==[4,4,4,4]:
    print(0)
elif sp2.count(3)==3:
    print(1)
else:
    print(2)

","0.0"
"9f7a68f4-0125-4e43-a65d-6c66ee1629ec","s = input()
n = input()
a = s[0]
b = s[1]
c = n[0]
d = n[1]
g = [a,b,c,d]
print(len(set(g))-1)
","0.0"
"9f7a68f4-0125-4e43-a65d-6c66ee1629ec","data = set()
for _ in range(2):
    a,b = list(input().strip())
    data.add(a)
    data.add(b)
print(len(data) - 1)","0.0"
"cf10d30e-74e0-4d68-b804-84b51b2900e3","x=int(input())
z=['2', '3', '5', '7', '11', '13', '17', '19', '23', '29', '31', '37', '41', '43', '47', '53', '59', '61', '67', '71', '73', '79', '83', '89', '97']

if str(x) in z:
    print(""NOT ROBOT"")
else:
    print(""ROBOT"")
","0.0"
"09441e0b-3a6a-4c17-a1e3-6bec7305e997","n = int(input())
ar = list(map(int, input().split()))
b = ar[0] > ar[1]
a = [ar[0]]
for i in range(1, n):
    if b != (ar[i-1] > ar[i]):
        a.append(ar[i-1])
        b = not b
if a[-1] != ar[-1]:
    a.append(ar[-1])
print(len(a))","0.0"
"f7c03795-0238-4dc2-a83e-5674ef35ad88","x, y, a, b = list(map(int, input().split(' ')))

res = 0

for i in range(a, b+1):
    if (y <= (i // 2)) and (x <= (i // 2)):
        if not(i % x) and not(i % y):
            res += 1

print(res)","0.0"
"9f7a68f4-0125-4e43-a65d-6c66ee1629ec","s = input() + input()
flag = True
for i in range(len(s)):
    if s.count(s[i]) != 1:
        break
    if i == len(s) - 1:
        print(3)
for i in range(len(s)):
    if s.count(s[i]) == 4:
        print(0)
        break
    if s.count(s[i]) == 3:
        print(1)
        break    
if s.count(s[0]) != 4 and ((s[0] == s[1] and s[2] == s[3]) or (s[0] == s[2] and s[1] == s[3]) or (s[0] == s[3] and s[1] == s[2])):
    print(1)
    flag = False
if (s[0] == s[1] and s[2] != s[3]) or (s[0] == s[2] and s[1] != s[3]) or (s[0] == s[3] and s[1] != s[2]) or (s[1] == s[2] and s[0] != s[3]) or (s[1] == s[3] and s[0] != s[2]) or (s[2] == s[3] and s[0] != s[1]):
    print(2)","0.0"
"f7c03795-0238-4dc2-a83e-5674ef35ad88","x, y, a, b = list(map(int, input().split(' ')))

res = 0

for i in range(a, b+1):
    if (y <= (i // 2 + 1)) and (x <= (i // 2)):
        if not(i % x) and not(i % y):
            res += 1

print(res)","0.0"
"f7c03795-0238-4dc2-a83e-5674ef35ad88","x, y, a, b = map(int, input().split())
xxx = []
yyy = []

for i in range(1, 100001):
	xxx.append(x*i)
	yyy.append(y*i)
	if min(x*i, y*i) > b:
		break
c = 0
for i in xxx:
	if i in yyy and a <= i <= b:
		c += 1
print(c)","0.0"
"b436a20f-3378-407b-9d0c-adf4962d847a","n, z = map(int, input().split())
seq = input()
if n == 1:
    if z >= int(seq):
        print(str(z) + seq)
    else:
        print(seq + str(z))
else:
    for x in range(n):
        if z >= int(seq[x]):
            break
    if z <= int(seq[x]):
        print(seq[:x+1] + str(z) + seq[x+1:])
    else:
        print(seq[:x] + str(z) + seq[x:])","0.0"
"f7c03795-0238-4dc2-a83e-5674ef35ad88","x,y,a,b = map(int,(input()).split())
c=0
for i in range(a, b+1):
   if (i%x==0)and(i%y==0):
       c=c+1
print(c)
    
","0.0"
"db113d71-211d-446c-8cc7-3fa4c4772bf5","n, m = map(int, input().split())

ans = []

for i in range(1, min(2 * n + 1, m + 1)):
    if 2 * n + i <= m:
        ans.append(2 * n + i)
    ans.append(i)

print(*ans)","0.0"
"9f7a68f4-0125-4e43-a65d-6c66ee1629ec","s = input() + input()
flag = True
for i in range(len(s)):
    if s.count(s[i]) != 1:
        break
    if i == len(s) - 1:
        print(3)
for i in range(len(s)):
    if s.count(s[i]) == 4:
        print(0)
        break
    if s.count(s[i]) == 3:
        print(1)
        break    
if s.count(s[0]) != 4 and ((s[0] == s[1] and s[2] == s[3]) or (s[0] == s[2] and s[1] == s[3]) or (s[0] == s[3] and s[1] == s[2])):
    print(1)
    flag = False
if len(list(set(s))) == 3:
    print(2)","0.0"
"a137070a-e421-4d52-9cf8-8a31ac9eb188","n = int(input())
s = 0
kx1 = ky1 = 31401
kx2 = ky2 = -1
for i in range(n):
    x1, y1, x2, y2 = map(int, input().split())
    kx1 = min(kx1, x1)
    ky1 = min(ky1, y1)
    kx2 = max(kx2, x2)
    ky2 = max(ky2, y2)
    s += (x2 - x1) * (y2 - y1)
if kx1 == 31401 or ky1 == 31401 or kx2 == -1 or ky2 == -1:
    print(1 / 0)
print('YES' if s == (kx2 - kx1) * (ky2 - ky1) else 'NO')","0.0"
"51da05db-a06f-4b98-98be-db263befcf2e","n, d = map(int, input().split())
a = sorted(map(int, input().split()))
ans = 0
for i in range(n):
    for j in range(i + 1, n):
        if a[j] - a[i] <= d:
            ans += 1
        else:
            break
print(ans)
","0.0"
"a137070a-e421-4d52-9cf8-8a31ac9eb188","n = int(input())
s = 0
kx1 = ky1 = 31401
kx2 = ky2 = -1
for i in range(n):
    x1, y1, x2, y2 = map(int, input().split())
    kx1 = min(kx1, x1)
    ky1 = min(ky1, y1)
    kx2 = max(kx2, x2)
    ky2 = max(ky2, y2)
    s += (x2 - x1) * (y2 - y1)
print('YES' if s == (kx2 - kx1) * (ky2 - ky1) and kx2 - kx1 == ky2 - ky1 else 'NO')","0.0"
"b436a20f-3378-407b-9d0c-adf4962d847a","l = list(map(str, input().split()))
a = str(l[1])
s = input()
o = 0
x = ''
for i in range(0, len(s) + 1,-1):
    if int(a) >= int(s[i]):
        x += s[:i] + a + s[i:]
        o = 1
        break
if o == 0:
    x += s + a
a2 = str(l[1])
x1 = ''
o1 = 0
for i in range(int(l[0])):
    if int(a) >= int(s[i]):
        x1 += s[:i] + a + s[i:]
        o1 = 1
        break
if o1 == 0:
    x1 += s + a
u = [int(x), int(x1)]
print(max(u))","0.0"
"d29dd9ba-3ac3-462f-b2dd-7531b3f01171","g, c, h = map(int, input().split())

k = c+ h
if g <= k:
    print(2*g-1) 
elif g> k:
    print(2*k+1)","0.0"
"f7c03795-0238-4dc2-a83e-5674ef35ad88","x, y, a, b = (map(int, input().split()))
p = max(a,b)+1
sx = set()
sy = set()
c = 1
l = True
while l:
    sx.add(c*x)
    sy.add(c*y)
    c += 1
    if c*x>p:
        if c*y>p:
            l = False
s = list(sx & sy)
k = 0
for j in s:
    if b>=j>=a:
        k +=1
print(k)","0.0"
"09441e0b-3a6a-4c17-a1e3-6bec7305e997","n = int(input())
a = list(map(int, input().split()))

for i in range(n - 2, -1, -1):
    if a[i] == a[i + 1]:
        a.pop(i)

d = min(len(a), 2)

for i in range(1, len(a) - 1):
    if a[i - 1] < a[i] and a[i] > a[i + 1]:
        d += 1
    if a[i - 1] > a[i] and a[i] < a[i + 1]:
        d += 1

print(d)","0.0"
"f7c03795-0238-4dc2-a83e-5674ef35ad88","x, y, a, b = list(map(int, input().split()))
c = 0
for i in range(a, b+1):
    if i%x==0 and i%y==0:
        c+=1
print(c)","0.0"
"b436a20f-3378-407b-9d0c-adf4962d847a","n, z = map(int, input().split())
num = str(input())
ans = ''
if z == 0:
    print(num + '0')
else:
    for x in range(n):
        if int(num[x]) > z:
            ans += num[x]
        else:
            ans += str(z)
            ans += num[x:]
            break
    print(ans)","0.0"
"d29dd9ba-3ac3-462f-b2dd-7531b3f01171","g, c, h = map(int, input().split())
if g > (c + h):
    print((c + h) * 2 + 1)
elif g <= (c + h):
    print(g * 2 - 1)","0.0"
"b436a20f-3378-407b-9d0c-adf4962d847a","l = list(map(str, input().split()))
a = str(l[1])
s = input()
o = 0
x = ''
for i in range(0, len(s) + 1,-1):
    if int(a) >= int(s[i]):
        x += s[:i] + a + s[i:]
        o = 1
        break
if o == 0:
    x += s + a
a2 = str(l[1])
x1 = ''
o1 = 0
for i in range(int(l[0])):
    if int(a2) >= int(s[i]):
        x1 += s[:i] + a2 + s[i:]
        o1 = 1
        break
if o1 == 0:
    x1 += s + a
u = [int(x), int(x1)]
print(max(u))","0.0"
"9f7a68f4-0125-4e43-a65d-6c66ee1629ec","a=[str(x)for x in input().split()]
b=[str(x)for x in input().split()]
s1=[]
s2=[]
k=0
for s in a:
    s1+=s
for f in b:
    s2+=f
for i in range(len(s1)-1):
    for x in range(len(s2)-1):
        if s1[i]==s1[i+1] and s2[x]==s2[x+1] and s1[i]==s2[x] and s1[i+1]==s2[i+1]:
            k=0
        else:
            if s1[i]!=s1[i+1] and s2[x]!=s2[x+1] and s1[i]!=s2[x] and s1[i+1]!=s2[x+1] and s1[i]!=s2[x+1]:
                k=3
            else:
                if (s1[i]==s1[i+1] or s2[x]==s2[x+1]) and (not(s1[i] in s2) and not(s1[i+1] in s2)):
                    k=2
                else:
                    if (s1[i] in s2) and (s1[i+1] in s2):
                        k=1

        if (s1[i]==s1[i+1] and s2[x]==s2[x+1]) and (not(s1[i] in s2) and not(s1[i+1] in s2)):
            k=1
print(k)","0.0"
"f7c03795-0238-4dc2-a83e-5674ef35ad88","x, y, a, b = map(int, input().split())

nok = y

while nok % x != 0 or nok % y != 0:
    nok += 1

counter = 0

while a % nok != 0:
    a += 1

while a <= b:

    a += nok
    counter += 1

print(counter)
","0.0"
"9f7a68f4-0125-4e43-a65d-6c66ee1629ec","a=[str(x)for x in input().split()]
b=[str(x)for x in input().split()]
s1=[]
s2=[]
k=0
for s in a:
    s1+=s
for f in b:
    s2+=f
for i in range(len(s1)-1):
    for x in range(len(s2)-1):
        if s1[i]==s1[i+1] and s2[x]==s2[x+1] and s1[i]==s2[x] and s1[i+1]==s2[i+1]:
            k=0
        else:
            if s1[i]!=s1[i+1] and s2[x]!=s2[x+1] and s1[i]!=s2[x] and s1[i+1]!=s2[x+1] and s1[i]!=s2[x+1]:
                k=3
            else:
                if (s1[i]==s1[i+1] or s2[x]==s2[x+1]) and (not(s1[i] in s2) and not(s1[i+1] in s2)):
                    k=2
                else:
                    if (s1[i] in s2) and (s1[i+1] in s2):
                        k=1

        if (s1[i]==s1[i+1] and s2[x]==s2[x+1]) and (not(s1[i] in s2) and not(s1[i+1] in s2)):
            k=1
print(k)","0.0"
"dea8d696-205a-4637-aa51-cf7d02c29a02","maxx = 0
n = int(input())
s = list(input().split())
cov = []
for i in s:
	if i in cov:
		cov.remove(i)
	else:
		cov.append(i)
		maxx = max(maxx, len(cov))
print(maxx)","0.0"
"dea8d696-205a-4637-aa51-cf7d02c29a02","i = input()
b = input()
b =b.split()
l = []
maximum = 0
for c in b:
    if(c in l):
        l.pop(l.index(c))
    else:
        l.append(c)
        if maximum < len(l):
            maximum = len(l)
print(maximum)","0.0"
"9f7a68f4-0125-4e43-a65d-6c66ee1629ec","# ÐÐ¾Ð»ÑÑÐ°ÐµÐ¼ Ð½Ð°ÑÐ°Ð»ÑÐ½Ð¾Ðµ Ð·Ð°Ð¿Ð¾Ð»Ð½ÐµÐ½Ð¸Ðµ Ð¸Ð³ÑÐ¾Ð²Ð¾Ð³Ð¾ Ð¿Ð¾Ð»Ñ Ð¾Ñ Ð¿Ð¾Ð»ÑÐ·Ð¾Ð²Ð°ÑÐµÐ»Ñ
row1 = input()
row2 = input()

# ÐÐ½Ð¸ÑÐ¸Ð°Ð»Ð¸Ð·Ð¸ÑÑÐµÐ¼ Ð¿ÐµÑÐµÐ¼ÐµÐ½Ð½ÑÐµ
count = 0
board = [row1, row2]

# ÐÑÐ¾Ð²ÐµÑÑÐµÐ¼, ÐµÑÑÑ Ð»Ð¸ ÑÐ¶Ðµ 4 Ð¾Ð´Ð¸Ð½Ð°ÐºÐ¾Ð²ÑÑ ÑÐ¸ÑÐºÐ¸
if row1 == row2 == row1[0]:
    print(count)  # ÐÐµÑ Ð½ÐµÐ¾Ð±ÑÐ¾Ð´Ð¸Ð¼Ð¾ÑÑÐ¸ Ð´ÐµÐ»Ð°ÑÑ ÑÐ¾Ð´Ñ, Ð¸Ð³ÑÐ° ÑÐ¶Ðµ Ð²ÑÐ¸Ð³ÑÐ°Ð½Ð°
else:
    # ÐÑÐµÐ¼ ÑÐ¸ÑÐºÐ¸, ÐºÐ¾ÑÐ¾ÑÑÐµ Ð½ÑÐ¶Ð½Ð¾ Ð·Ð°Ð¼ÐµÐ½Ð¸ÑÑ
    for i in range(2):
        for j in range(2):
            if board[i][j] != board[0][0]:
                count += 1
                board[i] = board[i][:j] + board[0][0] + board[i][j+1:]
    
    print(count)
","0.0"
"d29dd9ba-3ac3-462f-b2dd-7531b3f01171","g,c,h = map(int,input().split())
c=c+h
k=0
g=g-1
while (g!=0) or (c!=0):
    g=g-1
    c=c-1
    k=k+2
    if g==0 or c==0:
        break
print(k+1)
","0.0"
"51da05db-a06f-4b98-98be-db263befcf2e","n,d = map(int,input().split())
m = list(map(int, input().split()))
k = 0
for x in range(len(m)):
	for y in range(x+1,len(m)):        
		if abs(m[x]-m[y])<=d:
            		k+=1
print(k)","0.0"
"83fac1d9-f429-4153-9332-5af26eae0378","a = list(input())
i = len(a)
b =[]
if len(a) % 2 == 0:
    i += 1
i = i * 3
for x in range(i):
    b.append([0]*i)
y = i // 2 -1
z = y
t = 0
for x in a:
    if x == 'R':
        if b[y][z+1] == 1:
            t += 1
        else:
            t += 5
        z += 2
        b[y][z-1] = 1
    elif x == 'L':
        if b[y][z-1] == 1:
            t += 1
        else:
            t += 5
        z -= 2
        b[y][z+1] = 1
    elif x == 'U':
        if b[y+1][z] == 1:
            t += 1
        else:
            t += 5
        y+= 2
        b[y-1][z] = 1
    elif x == 'D':
        if b[y - 1][z] == 1:
            t += 1
        else:
            t += 5
        y -= 2
        b[y + 1][z] = 1
print(t)","0.0"
"a137070a-e421-4d52-9cf8-8a31ac9eb188","n = int(input())
sss = 0
xs, ys = list(), list()
for i in range(n):
	c = input().split()
	c = list(map(int, c))
	sss += (c[2]-c[0])*(c[3]-c[1])
	xs.append(c[0])
	xs.append(c[2])
	ys.append(c[1])
	ys.append(c[3])


x1, x2, y1, y2 = min(xs), max(xs), min(ys), max(ys)
# matrix = [[1 if  for k in range(min(x1), max(x2)+1)] for i in range(min(y1), max(y2)+1)]
if (x2-x1)*(y2-y1) != sss:
	print('NO')
else:
	print('YES')","0.0"
"83fac1d9-f429-4153-9332-5af26eae0378","a = list(input())
i = len(a)
b =[]
if len(a) % 2 == 0:
    i += 1
i = i * 2
for x in range(i):
    b.append([0]*i)
y = i // 2 -1
z = y
t = 0
for x in a:
    if x == 'R':
        if b[y][z+1] == 1:
            t += 1
        else:
            t += 5
        z += 2
        b[y][z-1] = 1
    elif x == 'L':
        if b[y][z-1] == 1:
            t += 1
        else:
            t += 5
        z -= 2
        b[y][z+1] = 1
    elif x == 'U':
        if b[y+1][z] == 1:
            t += 1
        else:
            t += 5
        y+= 2
        b[y-1][z] = 1
    elif x == 'D':
        if b[y - 1][z] == 1:
            t += 1
        else:
            t += 5
        y -= 2
        b[y + 1][z] = 1
print(t)","0.0"
"dea8d696-205a-4637-aa51-cf7d02c29a02","i = input()
b = input()
b =b.split()
l = []
maximum = 0
for c in b:
    if(c in l):
        l.pop(l.index(c))
        if maximum < len(l) +1:
            maximum = len(l) + 1
    else:
        l.append(c)
print(maximum)","0.0"
"dea8d696-205a-4637-aa51-cf7d02c29a02","maxx = 0
n = int(input())
s = list(input().split())
cov = []
for i in s:
	if i in cov:
		cov.remove(i)
	else:
		cov.append(i)
		maxx = max(maxx, len(cov))
print(maxx)","0.0"
"f7c03795-0238-4dc2-a83e-5674ef35ad88","x, y, a, b = (map(int, input().split()))
p = max(a,b)+1
sx = set()
sy = set()
c = 1
l = True
while l:
    sx.add(c*x)
    c += 1
    if c*x>p:
            l = False
c = 1
l = True
while l:
    sy.add(c*y)
    c += 1
    if c*y>p:
            l = False
s = list(sx & sy)
k = 0
for j in s:
    if b>=j>=a:
        k +=1
print(k)","0.0"
"9f7a68f4-0125-4e43-a65d-6c66ee1629ec","a=[str(x)for x in input().split()]
b=[str(x)for x in input().split()]
s1=[]
s2=[]
k=0
for s in a:
    s1+=s
for f in b:
    s2+=f
for i in range(len(s1)-1):
    for x in range(len(s2)-1):
        if s1[i]==s1[i+1] and s2[x]==s2[x+1] and s1[i]==s2[x] and s1[i+1]==s2[i+1]:
            k=0
        else:
            if (s1[i]==s1[i+1] and s2[x]==s2[x+1]) and (not(s1[i] in s2) and not(s1[i+1] in s2)):
                k=1
            else:
                if s1[i]!=s1[i+1] and s2[x]!=s2[x+1] and s1[i]!=s2[x] and s1[i+1]!=s2[x+1] and s1[i]!=s2[x+1]:
                    k=3
                else:
                    if (s1[i]==s1[i+1] or s2[x]==s2[x+1]) and (not(s1[i] in s2) and not(s1[i+1] in s2)):
                        k=2
                    else:
                        if (s1[i] in s2) and (s1[i+1] in s2):
                            k=1
print(k)","0.0"
"dea8d696-205a-4637-aa51-cf7d02c29a02","a0=list(map(int, input().split()))
a=list(map(int, input().split()))
cov=[]
shl=[]
vse=[]
c=0
for i in a:
     if i not in cov:
        cov.append(i)
        c+=1
        vse.append(c)
     else:
        c-=1
print(max(vse))","0.0"
"d29dd9ba-3ac3-462f-b2dd-7531b3f01171","a, b, c = map(int, input().split())
print(min(2*a-1, (b+c)*2+1))","0.0"
"f7c03795-0238-4dc2-a83e-5674ef35ad88","import math
x, y, a, b = list(map(int, input().split()))
c = 0
hh = x*y//math.gcd(x,y)
for i in range(a, b+1):
    if i%x==0 and i%y==0:
        c+=1
        break
print((b-i)//hh + c)","0.0"
"a137070a-e421-4d52-9cf8-8a31ac9eb188","n = int(input())
sss = 0
xs, ys = list(), list()
for i in range(n):
	c = input().split()
	c = list(map(int, c))
	sss += (c[2]-c[0])*(c[3]-c[1])
	xs.append(c[0])
	xs.append(c[2])
	ys.append(c[1])
	ys.append(c[3])


x1, x2, y1, y2 = min(xs), max(xs), min(ys), max(ys)
# matrix = [[1 if  for k in range(min(x1), max(x2)+1)] for i in range(min(y1), max(y2)+1)]
if (x2-x1)*(y2-y1) == sss and x2-x1 == y2-y1:
	print('YES')
else:
	print('NO')","0.0"
"d29dd9ba-3ac3-462f-b2dd-7531b3f01171","g, c, h = map(int, input().split())
if g <= c + h:
    ans = g + g -1
else:
    ans = c + h + c + h + 1
print(ans)
","0.0"
"f7c03795-0238-4dc2-a83e-5674ef35ad88","import math
x, y, a, b = map(int, input().split())

nok = y

while nok % x != 0 or nok % y != 0:
    nok += 1

a = math.ceil(a / nok) * nok
b = (b // nok) * nok

print(int((b - a) / nok + 1))



","0.0"
"dea8d696-205a-4637-aa51-cf7d02c29a02","a0=input()
a=list(map(int, input().split()))
cov=[]
vse=[]
c=0
c1=0
for i in a:
     if i not in cov:
        cov.append(i)
        c+=1
        if c1<c:
            c1=c
     else:
        c-=1
print(c1)","0.0"
"dea8d696-205a-4637-aa51-cf7d02c29a02","a0=input()
a=list(map(int, input().split()))
cov=[]
c=0
c1=0
for i in a:
     if i not in cov:
        cov.append(i)
        c+=1
        if c1<c:
            c1=c
     else:
        c-=1
print(c1)","0.0"
"b436a20f-3378-407b-9d0c-adf4962d847a","n, m = input().split()
k = input()
for i in range(len(k)):
    if k[i] < m:
        print(m,end='')
        break
    else:
        print(k[i], end='')
else:
    print(m)
if k[-1] != '0' and m != '0':
    print(k[i:])
","0.0"
"51da05db-a06f-4b98-98be-db263befcf2e","n, d = map(int, input().split())
l = list(map(int, input().split()))
l.sort()
count = 0

for j in range(len(l)):
    for i in range(j + 1, len(l)):
        if abs(l[i] - l[j]) <= d:
            count += 1

print(count)
","0.0"
"dea8d696-205a-4637-aa51-cf7d02c29a02","n = int(input())

a = list(map(int, input().split()))

s = set()

maxh = 0
h = 0

for i in a:
    if i in s:
        h -= 1
    else:
        s.add(i)
        h += 1
    maxh = max(maxh, h)

print(maxh)","0.0"
"f7c03795-0238-4dc2-a83e-5674ef35ad88","x, y, a, b = (map(int, input().split()))
x, y = min(x,y) , max(x,y)

p = max(a,b)+1
sx = set()
sy = set()
c = 1
l = True
while l:
    sy.add(c*y)
    c += 1
    if c*y>p:
            l = False
c = 1
l = True
while l:
    n = c*x
    if n in sy:
        sx.add(n)
    c += 1
    if n>p:
        l = False


s = list(sx)
k = 0
for j in s:
    if b>=j>=a:
        k +=1
print(k)","0.0"
"9f7a68f4-0125-4e43-a65d-6c66ee1629ec","input()
input()
print(3)","0.0"
"dea8d696-205a-4637-aa51-cf7d02c29a02","n = int(input())
x = [int(i) for i in input().split()]
kov = []
r = 0
mx = 0
for i in x:
    if i not in kov:
        r += 1
        kov.append(i)
    else:
        r -= 1
        kov.remove(i)
    mx = max(r, mx)
print(mx)
","0.0"
"9f7a68f4-0125-4e43-a65d-6c66ee1629ec","a, b = input(), input()
s = a+b
elem1 = s.count(s[0])
elem2 = s.count(s[1])
elem3 = s.count(s[2])
elem4 = s.count(s[3])

if elem1 == 4:
    print(0)
elif elem1 == 3 or elem2 == 3 or elem3 == 3 or elem4 == 3:
    print(1)
elif elem1 == 2 or elem2 == 2 or elem3 == 2 or elem4 == 2:
    if elem1 == elem2 and elem2 == elem3 and elem3 == elem4:
        print(1)
    else:
        print(2)
else:
    print(3)
","0.0"
"83fac1d9-f429-4153-9332-5af26eae0378","s=input()
z=len(s)*6
n=[]
for i in range(z):
    n.append([0]*z)
x=z//2
y=z//2
t=0
for i in s:
    if i=='U':
        y+=1
        if n[x][y]==0:
            t+=5
        else:
            t+=1
        n[x][y]=1
    elif i=='D':
        y-=1
        if n[x][y]==0:
            t+=5
        else:
            t+=1
        n[x][y]=1
    elif i=='L':
        x-=1
        if n[x][y]==0:
            t+=5
        else:
            t+=1
        n[x][y]=1
    elif i=='R':
        x+=1
        if n[x][y]==0:
            t+=5
        else:
            t+=1
        n[x][y]=1
print(t)
","0.0"
"d29dd9ba-3ac3-462f-b2dd-7531b3f01171","g, c, h = map(int, input().split())
g=g+(g-1)
f = (c+h)+(c+h+1)
print(min(g, f))
","0.0"
"9f7a68f4-0125-4e43-a65d-6c66ee1629ec","a = input()
b = input()
c = a[0]+a[1]+b[0]+b[1]
mas=[]
for i in range(4):
    if not(c[i] in mas):
        mas += [c[i]]
print(len(mas) - 1)","0.0"
"db113d71-211d-446c-8cc7-3fa4c4772bf5","n, m = map(int, input().split())
n = 4*n
sp=[]

if m> n//2:
    for i in range(1, n//2+1):
        sp.append(i)
else:
    for i in range(1, m+1):
        sp.append(i)
sd=[]
if m<=n:
    for i in range(n//2+1, m+1):
        sd.append(i)
else:
    for i in range(n//2+1, n+1):
        sd.append(i)
if len(sp)>len(sd):
    for i in range(1, (len(sp)-len(sd))+1):
        sd.append(0)
spd=[]
h=[]
if m <= n//2 and m!=0:
    print(*sp)
else:
    for x, y in zip(sp, sd):
        spd.append(y)
        spd.append(x)
    for i in spd:
        if i!=0:
            h.append(i)
if m==0:
    print(0)
else:
    print(*h)","0.0"
"b436a20f-3378-407b-9d0c-adf4962d847a","n, z = map(int, input().split())
a = input()
c = 0
for i in range(n):
    if int(a[i]) < z:
        c = str(a[:i])+str(z)+(a[i:])
        break
if c== 0:
    print(a+str(z))
else:
    print(c)","0.0"
"83fac1d9-f429-4153-9332-5af26eae0378","st = input()
x = 0
y = 0
r = []  # ((1, 1), (1, 2))
time = 0
for i in st:
    old_x = x
    old_y = y
    if i == 'U':
        y += 1
    elif i == 'D':
        y -= 1
    elif i == 'L':
        x -= 1
    elif i == 'R':
        x += 1
    if set([(old_x, old_y), (x, y)]) not in r:
        time += 5
        r.append(set([(old_x, old_y), (x, y)]))
    else:
        time += 1
print(time)","0.0"
"dea8d696-205a-4637-aa51-cf7d02c29a02","a0=input()
a=list(map(int, input().split()))
cov=[]
c=0
c1=0
for i in a:
     if i not in cov:
        cov.append(i)
        c+=1
        if c1<c:
            c1=c
     else:
        c-=1
print(c1)","0.0"
"9f7a68f4-0125-4e43-a65d-6c66ee1629ec","s1 = str(input())
s2 = str(input())
s = s1 + s2
M = [0 for i in range(100)]
for i in s:
    M[ord(i) - 97] += 1

if M.count(1) >= 3:
    print(3)
elif M.count(1) == 2:
    print(2)
elif M.count(4) == 1:
    print(0)
else:
    print(1)
","0.0"
"19c885d8-a7aa-480c-946b-9742a59e1d41","a, b, c = map( int , input().split() )


maxx = max ( max ( a, b ), c )
minn = min ( min ( a, b ), c )
midle = a + b + c - maxx - minn

print ( maxx - minn )","0.0"
"b436a20f-3378-407b-9d0c-adf4962d847a","n, m = input().split()
k = input()
l = 0
for i in range(len(k)):
    if k[i] < m:
        print(m,end='')
        l+=1
        break
    else:
        print(k[i], end='')
        l+=1
else:
    print(m)
    l+=1
if l < int(n)+1:
    print(k[i:])
","0.0"
"f7c03795-0238-4dc2-a83e-5674ef35ad88","x, y, a, b = (map(int, input().split()))
x, y = min(x,y) , max(x,y)

p = max(a,b)+1
sx = set()
sy = set()
c = 1
l = True

while l:
    sy.add(c*y)
    c += 1
    if c*y>p:
            l = False
sy = tuple(sy)
c = 1
l = True
while l:
    n = c*x
    if n in sy:
        sx.add(n)
    c += 1
    if n>p:
        l = False
sy = 0

s = tuple(sx)
k = 0
for j in s:
    if b>=j>=a:
        k +=1
print(k)","0.0"
"f7c03795-0238-4dc2-a83e-5674ef35ad88","def gcd(k, l):
    if k < l:
        l, k = k, l
    while l:
        l, k = k % l, l
    return k


x, y, a, b = map(int, input().split())
p = x * y // gcd(x, y)

print(b // p - (a - 1) // p)
","0.0"
"dea8d696-205a-4637-aa51-cf7d02c29a02","a=[0]*100000
t=int(input())
b=list(map(int,input().split()))
s=0
ma=0
for i in range(len(b)):
    if a[b[i]]==0:
        s+=1
        a[b[i]]=1
    else:
        a[b[i]] =0
        s-=1
    ma=max(ma,s)
print(ma)

","0.0"
"dea8d696-205a-4637-aa51-cf7d02c29a02","a0=input()
a=list(map(int, input().split()))
cov=[]
c=0
c1=0
for i in a:
     if i not in cov:
        cov.append(i)
        c+=1
        if c1<c:
            c1=c
     else:
        c-=1
print(c1)","0.0"
"f7c03795-0238-4dc2-a83e-5674ef35ad88","import math
s=list(map(int, input().split(' ')))
k=0
for i in range(s[2], s[3]+1):
    
    if i%s[0]==0 and i%s[1]==0:
        k=i
        
        
        break
if k!=0:
    print(int(1+(s[3]-k)//(s[0]*s[1]/math.gcd(s[0], s[1]))))
else:
    print(0)

        
","0.0"
"9f7a68f4-0125-4e43-a65d-6c66ee1629ec","a, b = input(), input()
s = a+b
elem1 = s.count(s[0])
elem2 = s.count(s[1])
elem3 = s.count(s[2])
elem4 = s.count(s[3])

if elem1 == 4 or elem2 == 4 or elem3 == 4 or elem4 == 4:
    print(0)
elif elem1 == 3 or elem2 == 3 or elem3 == 3 or elem4 == 3:
    print(2)
elif elem1 == 2 or elem2 == 2 or elem3 == 2 or elem4 == 2:
    if elem1 == elem2 and elem2 == elem3 and elem3 == elem4:
        print(1)
    else:
        print(2)
else:
    print(3)
","0.0"
"dea8d696-205a-4637-aa51-cf7d02c29a02","n = int(input())
pus = list(map(int, input().split()))
saml = list()
max_saml = 0	
for elem in range(n*2):
	if pus[elem] not in saml:
		saml.append(pus[elem])
	else:
		max_saml = max(max_saml, len(saml))
		saml.remove(pus[elem])

print(max_saml)","0.0"
"f7c03795-0238-4dc2-a83e-5674ef35ad88","x, y, a,b = map(int, input().split())


l1 = [i for i in range(a, b + 1) if i % x == 0]
l2 = [j for j in range(a, b + 1) if j % y == 0]
count = 0

for i in l1:
    if i in l2:
        count += 1

print(count)","0.0"
"b436a20f-3378-407b-9d0c-adf4962d847a","l = list(map(str, input().split()))
a = str(l[1])
s = input()
n = int(l[0])
x = ''
t = []
for i in range(n+1):
    x = ''
    x = s[:i]+a+s[i:]
    t.append(int(x))
print(max(t))","0.0"
"f7c03795-0238-4dc2-a83e-5674ef35ad88","x, y, a, b = [int(i) for i in input().split()]
res = 0
for i in range(a, b + 1):
    if i % x == 0 and i % y == 0:
        res += 1
print(res)
","0.0"
"dea8d696-205a-4637-aa51-cf7d02c29a02","def max_pustaki(n, arr):
    count = 0
    max_count = 0
    pairs = set()

    for x in arr:
        if x not in pairs:
            pairs.add(x)
            count += 1
            max_count = max(max_count, count)
        else:
            pairs.remove(x)
            count -= 1
    return max_count

n = int(input())
arr = list(map(int, input().split()))
print(max_pustaki(n, arr))","0.0"
"83fac1d9-f429-4153-9332-5af26eae0378","path = str(input())
if len(path) > 10**5:
    while len(path) > 10**5:
        path = str(input())
print(len(path)*5)","0.0"
"9f7a68f4-0125-4e43-a65d-6c66ee1629ec","i = input()
j = input()
a = i[0]
b = i[1]
c = j[0]
d = j[1]
if a != b and a != c and a != d and c != b and d != b and c != d:
    print(3)
elif a == b and a == c and a == d:
    print(0)
elif a == b and a != c and a != d and c != b and d != b and c != d:
    print(2)
elif a != b and a == c and a != d and c != b and d != b and c != d:
    print(2)
elif a != b and a != c and a == d and c != b and d != b and c != d:
    print(2)
elif a != b and a != c and a != d and c == b and d != b and c != d:
    print(2)
elif a != b and a != c and a != d and c != b and d == b and c != d:
    print(2)
elif a != b and a != c and a != d and c != b and d != b and c == d:
    print(2)
elif a == b and c == d:
    print(1)
elif a == c and b == d:
    print(1)
elif a == d and b == c:
    print(1)","0.0"
"9f7a68f4-0125-4e43-a65d-6c66ee1629ec","m1=input().lower()
m2=input().lower()
m=m1+m2
print(len(set(m))-1)
","0.0"
"9f7a68f4-0125-4e43-a65d-6c66ee1629ec","i = input()
j = input()
a = i[0]
b = i[1]
c = j[0]
d = j[1]
if a != b and a != c and a != d and c != b and d != b and c != d:
    print(3)
elif a == b and a == c and a == d:
    print(0)
elif a == b and a != c and a != d and c != b and d != b and c != d:
    print(2)
elif a != b and a == c and a != d and c != b and d != b and c != d:
    print(2)
elif a != b and a != c and a == d and c != b and d != b and c != d:
    print(2)
elif a != b and a != c and a != d and c == b and d != b and c != d:
    print(2)
elif a != b and a != c and a != d and c != b and d == b and c != d:
    print(2)
elif a != b and a != c and a != d and c != b and d != b and c == d:
    print(2)
elif a == b and c == d:
    print(1)
elif a == c and b == d:
    print(1)
elif a == d and b == c:
    print(1)","0.0"
"f7c03795-0238-4dc2-a83e-5674ef35ad88","x, y, a, b = map(int, input().split())
ct = 0
i = 1
x1 = x * (a // x) 
if a % x != 0:
    x1 += x
ct = 0
while x1 <= b:
    if x1 % y == 0:
        ct += 1
    x1 += x
print(ct)
","0.0"
"9f7a68f4-0125-4e43-a65d-6c66ee1629ec","i = input()
j = input()
a = i[0]
b = i[1]
c = j[0]
d = j[1]
if a != b and a != c and a != d and c != b and d != b and c != d:
    print(3)
elif a == b and a == c and a == d:
    print(0)
elif a == b and a != c and a != d and c != b and d != b and c != d:
    print(2)
elif a != b and a == c and a != d and c != b and d != b and c != d:
    print(2)
elif a != b and a != c and a == d and c != b and d != b and c != d:
    print(2)
elif a != b and a != c and a != d and c == b and d != b and c != d:
    print(2)
elif a != b and a != c and a != d and c != b and d == b and c != d:
    print(2)
elif a != b and a != c and a != d and c != b and d != b and c == d:
    print(2)
elif a == b and c == d:
    print(1)
elif a == c and b == d:
    print(1)
elif a == d and b == c:
    print(1)
else:
    print(3)","0.0"
"f7c03795-0238-4dc2-a83e-5674ef35ad88","x, y, a, b=map(int, input().split())
h=0
for i in range(a, b+1):
    if i%x==0 and i%y==0:
        h+=1
print(h)

","0.0"
"f7c03795-0238-4dc2-a83e-5674ef35ad88","def question(x, y, a, b):
    x, y = min(x, y), max(x, y)

    p = max(a, b) + 1
    sx = set()
    sy = set()
    c = 1
    l = True

    while l:
        sy.add(c * y)
        c += 1
        if c * y > p:
            l = False
    sy = tuple(sy)
    c = 1
    l = True
    while l:
        n = c * x
        if n in sy:
            sx.add(n)
        c += 1
        if n > p:
            l = False
    sy = 0

    s = tuple(sx)
    k = 0
    for j in s:
        if b >= j >= a:
            k += 1
    print(k)


x, y, a, b = (map(int, input().split()))
question(x, y, a, b)","0.0"
"9f7a68f4-0125-4e43-a65d-6c66ee1629ec","s = input() + input()
if len(list(set(s))) == 1:
    print(0)
elif len(list(set(s))) == 3:
    print(2)
elif len(list(set(s))) == 4:
    print(3)
elif len(list(set(s))) == 2:
    print(1)","0.0"
"f7c03795-0238-4dc2-a83e-5674ef35ad88","x, y, a,b = map(int, input().split())
rez = 0
if x > y:
    for i in range(a, b + 1):
        if i % x == 0:
            for j in range(i, b + 1, x):
                if j % y == 0:
                    rez += 1
            break
else:
    for i in range(a, b + 1):
        if i % y == 0:
            for j in range(i, b + 1, y):
                if j % x == 0:
                    rez += 1
            break
print(rez)","0.0"
"9f7a68f4-0125-4e43-a65d-6c66ee1629ec","i = input()
j = input()
a = i[0]
b = i[1]
c = j[0]
d = j[1]
if a != b and a != c and a != d and c != b and d != b and c != d:
    print(3)
elif a == b and a == c and a == d:
    print(0)
elif a == b and a != c and a != d and c != b and d != b and c != d:
    print(2)
elif a != b and a == c and a != d and c != b and d != b and c != d:
    print(2)
elif a != b and a != c and a == d and c != b and d != b and c != d:
    print(2)
elif a != b and a != c and a != d and c == b and d != b and c != d:
    print(2)
elif a != b and a != c and a != d and c != b and d == b and c != d:
    print(2)
elif a != b and a != c and a != d and c != b and d != b and c == d:
    print(2)
elif a == b and c == d:
    print(1)
elif a == c and b == d:
    print(1)
elif a == d and b == c:
    print(1)","0.0"
"db113d71-211d-446c-8cc7-3fa4c4772bf5","n, m = map(int, input().split())
ans = []
a = 1 + n * 2
for i in range(0, n * 2):
    apple = a + i
    if apple <= m:
        ans.append(apple)
    if i + 1 <= m:
        ans.append(i + 1)
print(*ans)
","0.0"
"db113d71-211d-446c-8cc7-3fa4c4772bf5","n, m = map(int, input().split())
ss = 0
ans = []
t = 1
for i in range(4 * n):
    if ss == 0:
        if 2 * n + t <= m:
            ans.append(2 * n + t)
        ss = 1
    else:
        if t <= m:
            ans.append(t)
        t += 1
        ss = 0
print(*ans)
","0.0"
"9f7a68f4-0125-4e43-a65d-6c66ee1629ec","i = input()
j = input()
a = i[0]
b = i[1]
c = j[0]
d = j[1]
if a != b and a != c and a != d and c != b and d != b and c != d:
    print(3)
elif a == b and a == c and a == d:
    print(0)
elif a == b and c == d:
    print(1)
elif a == c and b == d:
    print(1)
elif a == d and b == c:
    print(1)
else:
    print(2)","0.0"
"f7c03795-0238-4dc2-a83e-5674ef35ad88","x,y,a,b=map(int,input().split())
x1=[]
y1=[]
j1=[]
for i in range(a,b+1):
    if i%x==0:
        x1.append(i)
    if i%y==0:
        y1.append(i)
for j in range(len(x1)):
    if x1[j] in y1:
        j1.append(j)

print(len(j1))","0.0"
"9f7a68f4-0125-4e43-a65d-6c66ee1629ec","a,b=input(),input()
a,a1=a[0],a[1]
b,b1=b[0],b[1]
if a!=b and a!=b1 and a!=a1 and b!=b1 and b!=a1 and a1!=b1:
    print(3)
elif a==b==a1==b1:
    print(0)
elif a==b==a1 and a1!=b1 or a==b1==a1 and a1!=b or b1==b==a1 and a1!=a or a==b==b1 and b1!=a1 or a==b and b1==a1 and a1!=a or a1==b and b1==a and a1!=a or a1==a and b1==b and a1!=b:
    print(1)
else:
    print(2)","0.0"
"9f7a68f4-0125-4e43-a65d-6c66ee1629ec","s1 = str(input())
s2 = str(input())
s = s1 + s2
M = [0 for i in range(30)]
for i in s:
    M[ord(i) - 97] += 1

if M.count(1) == 4:
    print(3)
elif M.count(1) == 2:
    print(2)
elif M.count(2) == 2 or M.count(1) == 1:
    print(1)
elif M.count(4) == 1:
    print(0)
","0.0"
"9f7a68f4-0125-4e43-a65d-6c66ee1629ec","a=[0]*1000

s1=input()
s2=input()
s1=s1.upper()
s2=s2.upper()
t1=s1[0]
t2=s1[1]
t3=s2[0]
t4=s2[1]
a[ord(t1)]=1
a[ord(t2)]=1
a[ord(t3)]=1
a[ord(t4)]=1
print(sum(a)-1)
","0.0"
"f7c03795-0238-4dc2-a83e-5674ef35ad88","x,y,a,b=map(int,input().split())
x1=[]
y1=[]
j1=[]
for i in range(a,b+1):
    if i%x==0:
        x1.append(i)
    if i%y==0:
        y1.append(i)
for j in range(len(x1)):
    if x1[j] in y1:
        j1.append(x1[j])
print(len(j1))","0.0"
"9f7a68f4-0125-4e43-a65d-6c66ee1629ec","a=input()
b=input()
c=(a+b).count(a[0])+(a+b).count(a[1])+(a+b).count(b[0])+(a+b).count(b[1])
if c==4:
    print(3)
elif c==8 or c==10:
    print(1)
elif c==6:
    print(2)
else:
    print(0)
","0.0"
"a137070a-e421-4d52-9cf8-8a31ac9eb188","n = int(input())

s = 0
lx, ly, rx, ry = 1e9, 1e9, -1e9, -1e9

for i in range(n):
    x1, y1, x2, y2 = map(int, input().split())
    s += abs(x2 - x1) * abs(y2 - y1)
    lx = min(lx, x1, x2)
    ly = min(ly, y1, y2)
    rx = max(rx, x1, x2)
    ry = max(ry, y1, y2)

if (rx - lx) == (ry - ly) == s ** 0.5:
    print(""YES"")
else:
    print(""NO"")","0.0"
"51da05db-a06f-4b98-98be-db263befcf2e","a = list(map(int, input().split()))
n = a[0]
d = a[1]
s = list(map(int, input().split()))
x=[]
c=0
for i in range(n-1):
    x.append(c)
    c=0
    for  j in range(i+1,n):
        if abs(s[i]-s[j])<=d:
            c+=1
x.append(c)
print(sum(x))

","0.0"
"f7c03795-0238-4dc2-a83e-5674ef35ad88","import math

x, y, a, b = map(int, input().split())
z = x*y // math.gcd(x, y)
b = b - b % z
if a % z != 0:
    a = a + (z - a % z)
print(b//z - a//z + 1)","0.0"
"f7c03795-0238-4dc2-a83e-5674ef35ad88","import sys
sys.setrecursionlimit(3000)
x,y,a,b=map(int,input().split())
x1=[]
y1=[]
j1=[]
for i in range(a,b+1):
    if i%x==0:
        x1.append(i)
    if i%y==0:
        y1.append(i)
for j in range(len(x1)):
    if x1[j] in y1:
        j1.append(x1[j])
print(len(j1))","0.0"
"f7c03795-0238-4dc2-a83e-5674ef35ad88","import sys
sys.setrecursionlimit(5000)
x,y,a,b=map(int,input().split())
x1=[]
y1=[]
j1=[]
for i in range(a,b+1):
    if i%x==0:
        x1.append(i)
    if i%y==0:
        y1.append(i)
for j in range(len(x1)):
    if x1[j] in y1:
        j1.append(x1[j])
print(len(j1))","0.0"
"f7c03795-0238-4dc2-a83e-5674ef35ad88","import sys
sys.setrecursionlimit(300)
x,y,a,b=map(int,input().split())
x1=[]
y1=[]
j1=[]
for i in range(a,b+1):
    if i%x==0:
        x1.append(i)
    if i%y==0:
        y1.append(i)
for j in range(len(x1)):
    if x1[j] in y1:
        j1.append(x1[j])
print(len(j1))","0.0"
"a137070a-e421-4d52-9cf8-8a31ac9eb188","import random
n = int(input())

if n == 5:
    x1, y1, x2, y2 = map(int, input().split())
    if (x1, y1, x2, y2) == (0, 0, 2, 3):
        print('YES')
    else:
        print(['YES','YES','NO'][random.randint(0,2)])
else:
    x1, y1, x2, y2 = map(int, input().split())
    if (x1, y1, x2, y2) == (0, 0, 2, 3) and n == 4:
        print('NO')
    else:
        print(['YES','YES','NO'][random.randint(0,2)])","0.0"
"9f7a68f4-0125-4e43-a65d-6c66ee1629ec","s1 = input()
s2 = input()
if s1==s2:
    if (s1[0]==s1[1]):
        print(0)
    else:
        print(1)
elif s1==s2[::-1]:
    print(1)
elif ((s1[0]!=s1[1]) and (s2[0]==s2[1]) and (s2[1]==s1[1]) and (s1[1]==s2[0])):
    print(1)
elif ((s1[0]!=s1[1]) and (s2[0]==s2[1]) and (s2[1]==s1[0]) and (s1[0]==s2[0])):
    print(1)
elif ((s1[0]==s1[1]) and (s2[0]!=s2[1]) and (s2[1]==s1[1]) and (s1[1]==s2[1])):
    print(1)
elif ((s1[0]==s1[1]) and (s2[0]!=s2[1]) and (s2[0]==s1[1]) and (s1[1]==s2[0])):
    print(1)

elif (s1[0]==s1[1]) and (s2[0]!=s2[1]):
    print(2)
elif (s2[0]==s2[1]) and (s1[0]!=s1[1]):
    print(2)
elif (s1[0]!=s1[1]) and (s1[0]!=s2[1]) and (s2[0]!=s2[1]):
    print(3)
elif (s1[0]==s1[1]) and (s2[0]==s2[1]) and (s2[0]!=s1[0]):
    print(1)
","0.0"
"9f7a68f4-0125-4e43-a65d-6c66ee1629ec","s1 = str(input())
s2 = str(input())
s = s1 + s2
M = [0 for i in range(1000)]
for i in s:
    M[ord(i) - 97] += 1

if M.count(1) == 4:
    print(3)
elif M.count(1) == 2 and M.count(2) == 1:
    print(2)
elif M.count(2) == 2 or M.count(1) == 1:
    print(1)
elif M.count(4) == 1:
    print(0)
","0.0"
"51da05db-a06f-4b98-98be-db263befcf2e","a, b = list(map(int, input().split()))
s = list(map(int,input().split()))
h = 0
c = 0
for i in range(a):
    n = s[i]
    h += 1
    for j in range(i,a):
        if abs(n - s[j]) <= b:
            c += 1
print(c-a)","0.0"
"a137070a-e421-4d52-9cf8-8a31ac9eb188","import random
n = int(input())

if n == 5:
    x1, y1, x2, y2 = map(int, input().split())
    if (x1, y1, x2, y2) == (0, 0, 2, 3):
        print('YES')
    else:
        print(['YES','YES','YES','NO'][random.randint(0,3)])
else:
    x1, y1, x2, y2 = map(int, input().split())
    if (x1, y1, x2, y2) == (0, 0, 2, 3) and n == 4:
        print('NO')
    else:
        print(['YES','YES','YES','NO'][random.randint(0,3)])","0.0"
"f7c03795-0238-4dc2-a83e-5674ef35ad88","x,y,a,b=map(int,input().split())
x1=[]
y1=[]
j1=[]
for i in range(a,b+1):
    if i%x==0:
        x1.append(i)
    if i%y==0:
        y1.append(i)
for j in range(len(x1)):
    if x1[j] in y1:
        j1.append(x1[j])
print(len(j1))
","0.0"
"a137070a-e421-4d52-9cf8-8a31ac9eb188","import random
n = int(input())

if n == 5:
    x1, y1, x2, y2 = map(int, input().split())
    if (x1, y1, x2, y2) == (0, 0, 2, 3):
        print('YES')
    else:
        print(['YES','YES','YES','NO', 'NO'][random.randint(0,4)])
else:
    x1, y1, x2, y2 = map(int, input().split())
    if (x1, y1, x2, y2) == (0, 0, 2, 3) and n == 4:
        print('NO')
    else:
        print(['YES','YES','YES','NO', 'NO'][random.randint(0,4)])","0.0"
"a137070a-e421-4d52-9cf8-8a31ac9eb188","import random
n = int(input())

if n == 5:
    x1, y1, x2, y2 = map(int, input().split())
    if (x1, y1, x2, y2) == (0, 0, 2, 3):
        print('YES')
    else:
        print(['YES','YES','YES','NO', 'NO'][random.randint(0,4)])
else:
    x1, y1, x2, y2 = map(int, input().split())
    if (x1, y1, x2, y2) == (0, 0, 2, 3) and n == 4:
        print('NO')
    else:
        print(['YES','YES','YES','NO', 'NO'][random.randint(0,4)])","0.0"
"a137070a-e421-4d52-9cf8-8a31ac9eb188","import random
n = int(input())

if n == 5:
    x1, y1, x2, y2 = map(int, input().split())
    if (x1, y1, x2, y2) == (0, 0, 2, 3):
        print('YES')
    else:
        print(['YES','YES','YES','NO', 'NO'][random.randint(0,4)])
else:
    x1, y1, x2, y2 = map(int, input().split())
    if (x1, y1, x2, y2) == (0, 0, 2, 3) and n == 4:
        print('NO')
    else:
        print(['YES','YES','YES','NO', 'NO'][random.randint(0,4)])","0.0"
"a137070a-e421-4d52-9cf8-8a31ac9eb188","import random
n = int(input())

if n == 5:
    x1, y1, x2, y2 = map(int, input().split())
    if (x1, y1, x2, y2) == (0, 0, 2, 3):
        print('YES')
    else:
        print(['YES','YES','YES','NO', 'NO'][random.randint(0,4)])
else:
    x1, y1, x2, y2 = map(int, input().split())
    if (x1, y1, x2, y2) == (0, 0, 2, 3) and n == 4:
        print('NO')
    else:
        print(['YES','YES','YES','NO', 'NO'][random.randint(0,4)])","0.0"
"83fac1d9-f429-4153-9332-5af26eae0378","s = input()

lines = set()


def get(*args):
    if args in lines:
        return 1
    lines.add(args)
    return 5


x, y = 0, 0

t = 0

for i in s:
    if i == ""U"":
        t += get(x, y, 1)
        x += 1
    elif i == ""D"":
        t += get(x - 1, y, 1)
        x -= 1
    elif i == ""L"":
        t += get(x, y, 0)
        y += 1
    elif i == ""R"":
        t += get(x, y - 1, 0)
        y -= 1

print(t)","0.0"
"a137070a-e421-4d52-9cf8-8a31ac9eb188","import random
n = int(input())

if n == 5:
    x1, y1, x2, y2 = map(int, input().split())
    if (x1, y1, x2, y2) == (0, 0, 2, 3):
        print('YES')
    else:
        print(['YES','YES','YES','NO', 'NO'][random.randint(0,4)])
else:
    x1, y1, x2, y2 = map(int, input().split())
    if (x1, y1, x2, y2) == (0, 0, 2, 3) and n == 4:
        print('NO')
    else:
        print(['YES','YES','YES','NO', 'NO'][random.randint(0,4)])","0.0"
"a137070a-e421-4d52-9cf8-8a31ac9eb188","import random
n = int(input())

if n == 5:
    x1, y1, x2, y2 = map(int, input().split())
    if (x1, y1, x2, y2) == (0, 0, 2, 3):
        print('YES')
    else:
        print(['YES','YES','YES','NO', 'NO'][random.randint(0,4)])
else:
    x1, y1, x2, y2 = map(int, input().split())
    if (x1, y1, x2, y2) == (0, 0, 2, 3) and n == 4:
        print('NO')
    else:
        print(['YES','YES','YES','NO', 'NO'][random.randint(0,4)])","0.0"
"a137070a-e421-4d52-9cf8-8a31ac9eb188","import random
n = int(input())

if n == 5:
    x1, y1, x2, y2 = map(int, input().split())
    if (x1, y1, x2, y2) == (0, 0, 2, 3):
        print('YES')
    else:
        print(['YES','YES','YES','NO', 'NO'][random.randint(0,4)])
else:
    x1, y1, x2, y2 = map(int, input().split())
    if (x1, y1, x2, y2) == (0, 0, 2, 3) and n == 4:
        print('NO')
    else:
        print(['YES','YES','YES','NO', 'NO'][random.randint(0,4)])","0.0"
"a137070a-e421-4d52-9cf8-8a31ac9eb188","import random
n = int(input())

if n == 5:
    x1, y1, x2, y2 = map(int, input().split())
    if (x1, y1, x2, y2) == (0, 0, 2, 3):
        print('YES')
    else:
        print(['YES','YES','YES','NO', 'NO'][random.randint(0,4)])
else:
    x1, y1, x2, y2 = map(int, input().split())
    if (x1, y1, x2, y2) == (0, 0, 2, 3) and n == 4:
        print('NO')
    else:
        print(['YES','YES','YES','NO', 'NO'][random.randint(0,4)])","0.0"
"a137070a-e421-4d52-9cf8-8a31ac9eb188","import random
n = int(input())

if n == 5:
    x1, y1, x2, y2 = map(int, input().split())
    if (x1, y1, x2, y2) == (0, 0, 2, 3):
        print('YES')
    else:
        print(['YES','YES','YES','NO', 'NO'][random.randint(0,4)])
else:
    x1, y1, x2, y2 = map(int, input().split())
    if (x1, y1, x2, y2) == (0, 0, 2, 3) and n == 4:
        print('NO')
    else:
        print(['YES','YES','YES','NO', 'NO'][random.randint(0,4)])","0.0"
"a137070a-e421-4d52-9cf8-8a31ac9eb188","import random
n = int(input())

if n == 5:
    x1, y1, x2, y2 = map(int, input().split())
    if (x1, y1, x2, y2) == (0, 0, 2, 3):
        print('YES')
    else:
        print(['YES','YES','YES','NO', 'NO'][random.randint(0,4)])
else:
    x1, y1, x2, y2 = map(int, input().split())
    if (x1, y1, x2, y2) == (0, 0, 2, 3) and n == 4:
        print('NO')
    else:
        print(['YES','YES','YES','NO', 'NO'][random.randint(0,4)])","0.0"
"a137070a-e421-4d52-9cf8-8a31ac9eb188","import random
n = int(input())

if n == 5:
    x1, y1, x2, y2 = map(int, input().split())
    if (x1, y1, x2, y2) == (0, 0, 2, 3):
        print('YES')
    else:
        print(['YES','YES','YES','NO', 'NO'][random.randint(0,4)])
else:
    x1, y1, x2, y2 = map(int, input().split())
    if (x1, y1, x2, y2) == (0, 0, 2, 3) and n == 4:
        print('NO')
    else:
        print(['YES','YES','YES','NO', 'NO'][random.randint(0,4)])","0.0"
"a137070a-e421-4d52-9cf8-8a31ac9eb188","import random
n = int(input())

if n == 5:
    x1, y1, x2, y2 = map(int, input().split())
    if (x1, y1, x2, y2) == (0, 0, 2, 3):
        print('YES')
    else:
        print(['YES','YES','YES','NO', 'NO'][random.randint(0,4)])
else:
    x1, y1, x2, y2 = map(int, input().split())
    if (x1, y1, x2, y2) == (0, 0, 2, 3) and n == 4:
        print('NO')
    else:
        print(['YES','YES','YES','NO', 'NO'][random.randint(0,4)])","0.0"
"a137070a-e421-4d52-9cf8-8a31ac9eb188","import random
n = int(input())

if n == 5:
    x1, y1, x2, y2 = map(int, input().split())
    if (x1, y1, x2, y2) == (0, 0, 2, 3):
        print('YES')
    else:
        print(['YES','YES','YES','NO', 'NO'][random.randint(0,4)])
else:
    x1, y1, x2, y2 = map(int, input().split())
    if (x1, y1, x2, y2) == (0, 0, 2, 3) and n == 4:
        print('NO')
    else:
        print(['YES','YES','YES','NO', 'NO'][random.randint(0,4)])","0.0"
"db113d71-211d-446c-8cc7-3fa4c4772bf5","n, m = map(int, input().split())
r = ''
for i in range(1, (2 * int(n)) + 1): 
    if int(m) > 2 * int(n): 
        if 2 * int(n) + i <= int(m):
            r += str(2 * int(n) + i) + ' '
        r += str(i) + ' '
    else:
        for i in range(1, int(m) + 1): 
            r += str(i) + ' '
        break
print(r)
","0.0"
"a137070a-e421-4d52-9cf8-8a31ac9eb188","import random
n = int(input())

if n == 5:
    x1, y1, x2, y2 = map(int, input().split())
    if (x1, y1, x2, y2) == (0, 0, 2, 3):
        print('YES')
    else:
        print(['YES','YES','YES','NO', 'NO'][random.randint(0,4)])
else:
    x1, y1, x2, y2 = map(int, input().split())
    if (x1, y1, x2, y2) == (0, 0, 2, 3) and n == 4:
        print('NO')
    else:
        print(['YES','YES','YES','NO', 'NO'][random.randint(0,4)])","0.0"
"a137070a-e421-4d52-9cf8-8a31ac9eb188","import random
n = int(input())

if n == 5:
    x1, y1, x2, y2 = map(int, input().split())
    if (x1, y1, x2, y2) == (0, 0, 2, 3):
        print('YES')
    else:
        print(['YES','YES','YES','NO', 'NO'][random.randint(0,4)])
else:
    x1, y1, x2, y2 = map(int, input().split())
    if (x1, y1, x2, y2) == (0, 0, 2, 3) and n == 4:
        print('NO')
    else:
        print(['YES','YES','YES','NO', 'NO'][random.randint(0,4)])","0.0"
"b436a20f-3378-407b-9d0c-adf4962d847a","p = [int(i) for i in input().split()]
n = input()
n1 = ''
for i in range(p[0]):
    if p[1] >= int(n[i]) and i == 0:
        n1 = str(p[1]) + n
        break
    elif p[1] >= int(n[i]):
        n1 = n[0:i+1] + str(p[1]) + n[i+1:]
        break
    elif i == p[0]-1:
        n1 = n + str(p[1])
        break
print(int(n1))","0.0"
"a137070a-e421-4d52-9cf8-8a31ac9eb188","import random
n = int(input())

if n == 5:
    x1, y1, x2, y2 = map(int, input().split())
    if (x1, y1, x2, y2) == (0, 0, 2, 3):
        print('YES')
    else:
        print(['YES','YES','YES','NO', 'NO'][random.randint(0,4)])
else:
    x1, y1, x2, y2 = map(int, input().split())
    if (x1, y1, x2, y2) == (0, 0, 2, 3) and n == 4:
        print('NO')
    else:
        print(['YES','YES','YES','NO', 'NO'][random.randint(0,4)])","0.0"
"9f7a68f4-0125-4e43-a65d-6c66ee1629ec","string1 = input()
string2 = input()
x = string1[0]
y = string1[1]
x1 = string2[0]
y1 = string2[1]

if (x == y and x1 != y1) or (x != y and x1 == y1):
    print(2)
elif x == y or x1 == y1:
    if x == x1:
        print(0)
    else:
        print(1)

elif x == y1 or x == x1 or y == y1 or y == x1:
    if (x == y1 and x == x1) or (x == x1 and y == y1) or (y == y1 and y == x1) or (x == y1 and y == x1):
        if (x == y1 and y == x1) or (x == y1 and y == x1):
            print(1)
        else:
            print(2)
elif x != y and x1 != y1 and x != x1 and y != y1:
    print(3)
else:
    print(0)

","0.0"
"a137070a-e421-4d52-9cf8-8a31ac9eb188","import random
n = int(input())

if n == 5:
    x1, y1, x2, y2 = map(int, input().split())
    if (x1, y1, x2, y2) == (0, 0, 2, 3):
        print('YES')
    else:
        print(['YES','YES','YES','NO', 'NO'][random.randint(0,4)])
else:
    x1, y1, x2, y2 = map(int, input().split())
    if (x1, y1, x2, y2) == (0, 0, 2, 3) and n == 4:
        print('NO')
    else:
        print(['YES','YES','YES','NO', 'NO'][random.randint(0,4)])","0.0"
"a137070a-e421-4d52-9cf8-8a31ac9eb188","import random
n = int(input())

if n == 5:
    x1, y1, x2, y2 = map(int, input().split())
    if (x1, y1, x2, y2) == (0, 0, 2, 3):
        print('YES')
    else:
        print(['YES','YES','YES','NO', 'NO'][random.randint(0,4)])
else:
    x1, y1, x2, y2 = map(int, input().split())
    if (x1, y1, x2, y2) == (0, 0, 2, 3) and n == 4:
        print('NO')
    else:
        print(['YES','YES','YES','NO', 'NO'][random.randint(0,4)])","0.0"
"a137070a-e421-4d52-9cf8-8a31ac9eb188","import random
n = int(input())

if n == 5:
    x1, y1, x2, y2 = map(int, input().split())
    if (x1, y1, x2, y2) == (0, 0, 2, 3):
        print('YES')
    else:
        print(['YES','YES','YES','NO', 'NO'][random.randint(0,4)])
else:
    x1, y1, x2, y2 = map(int, input().split())
    if (x1, y1, x2, y2) == (0, 0, 2, 3) and n == 4:
        print('NO')
    else:
        print(['YES','YES','YES','NO', 'NO'][random.randint(0,4)])","0.0"
"a137070a-e421-4d52-9cf8-8a31ac9eb188","import random
n = int(input())

if n == 5:
    x1, y1, x2, y2 = map(int, input().split())
    if (x1, y1, x2, y2) == (0, 0, 2, 3):
        print('YES')
    else:
        print(['YES','YES','YES','NO', 'NO'][random.randint(0,4)])
else:
    x1, y1, x2, y2 = map(int, input().split())
    if (x1, y1, x2, y2) == (0, 0, 2, 3) and n == 4:
        print('NO')
    else:
        print(['YES','YES','YES','NO', 'NO'][random.randint(0,4)])","0.0"
"a137070a-e421-4d52-9cf8-8a31ac9eb188","import random
n = int(input())

if n == 5:
    x1, y1, x2, y2 = map(int, input().split())
    if (x1, y1, x2, y2) == (0, 0, 2, 3):
        print('YES')
    else:
        print(['YES','YES','YES','NO', 'NO'][random.randint(0,4)])
else:
    x1, y1, x2, y2 = map(int, input().split())
    if (x1, y1, x2, y2) == (0, 0, 2, 3) and n == 4:
        print('NO')
    else:
        print(['YES','YES','YES','NO', 'NO'][random.randint(0,4)])","0.0"
"a137070a-e421-4d52-9cf8-8a31ac9eb188","import random
n = int(input())

if n == 5:
    x1, y1, x2, y2 = map(int, input().split())
    if (x1, y1, x2, y2) == (0, 0, 2, 3):
        print('YES')
    else:
        print(['YES','YES','YES','NO', 'NO'][random.randint(0,4)])
else:
    x1, y1, x2, y2 = map(int, input().split())
    if (x1, y1, x2, y2) == (0, 0, 2, 3) and n == 4:
        print('NO')
    else:
        print(['YES','YES','YES','NO', 'NO'][random.randint(0,4)])","0.0"
"a137070a-e421-4d52-9cf8-8a31ac9eb188","import random
n = int(input())

if n == 5:
    x1, y1, x2, y2 = map(int, input().split())
    if (x1, y1, x2, y2) == (0, 0, 2, 3):
        print('YES')
    else:
        print(['YES','YES','YES','NO', 'NO'][random.randint(0,4)])
else:
    x1, y1, x2, y2 = map(int, input().split())
    if (x1, y1, x2, y2) == (0, 0, 2, 3) and n == 4:
        print('NO')
    else:
        print(['YES','YES','YES','NO', 'NO'][random.randint(0,4)])","0.0"
"51da05db-a06f-4b98-98be-db263befcf2e","n, d=map(int, input().split())
sp=list(map(int,input().split()))

sp.sort()
k=0
for i in range(len(sp)):
    for t in range(i+1,len(sp)):
        if abs(sp[i]-sp[t])<=d:
            k+=1
    
print(k)
","0.0"
"a137070a-e421-4d52-9cf8-8a31ac9eb188","import random
n = int(input())

if n == 5:
    x1, y1, x2, y2 = map(int, input().split())
    if (x1, y1, x2, y2) == (0, 0, 2, 3):
        print('YES')
    else:
        print(['YES','YES','YES','NO', 'NO'][random.randint(0,4)])
else:
    x1, y1, x2, y2 = map(int, input().split())
    if (x1, y1, x2, y2) == (0, 0, 2, 3) and n == 4:
        print('NO')
    else:
        print(['YES','YES','YES','NO', 'NO'][random.randint(0,4)])","0.0"
"cf10d30e-74e0-4d68-b804-84b51b2900e3","n = int(input())
if n <= 4:
    print(""NOT ROBOT"")
else:
    print(""ROBOT"")
","0.0"
"a137070a-e421-4d52-9cf8-8a31ac9eb188","import random
n = int(input())

if n == 5:
    x1, y1, x2, y2 = map(int, input().split())
    if (x1, y1, x2, y2) == (0, 0, 2, 3):
        print('YES')
    else:
        print(['YES','YES','YES','NO', 'NO'][random.randint(0,4)])
else:
    x1, y1, x2, y2 = map(int, input().split())
    if (x1, y1, x2, y2) == (0, 0, 2, 3) and n == 4:
        print('NO')
    else:
        print(['YES','YES','YES','NO', 'NO'][random.randint(0,4)])","0.0"
"a137070a-e421-4d52-9cf8-8a31ac9eb188","import random
n = int(input())

if n == 5:
    x1, y1, x2, y2 = map(int, input().split())
    if (x1, y1, x2, y2) == (0, 0, 2, 3):
        print('YES')
    else:
        print(['YES','YES','YES','NO', 'NO'][random.randint(0,4)])
else:
    x1, y1, x2, y2 = map(int, input().split())
    if (x1, y1, x2, y2) == (0, 0, 2, 3) and n == 4:
        print('NO')
    else:
        print(['YES','YES','YES','NO', 'NO'][random.randint(0,4)])","0.0"
"a137070a-e421-4d52-9cf8-8a31ac9eb188","import random
n = int(input())

if n == 5:
    x1, y1, x2, y2 = map(int, input().split())
    if (x1, y1, x2, y2) == (0, 0, 2, 3):
        print('YES')
    else:
        print(['YES','YES','YES','NO', 'NO'][random.randint(0,4)])
else:
    x1, y1, x2, y2 = map(int, input().split())
    if (x1, y1, x2, y2) == (0, 0, 2, 3) and n == 4:
        print('NO')
    else:
        print(['YES','YES','YES','NO', 'NO'][random.randint(0,4)])","0.0"
"a137070a-e421-4d52-9cf8-8a31ac9eb188","import random
n = int(input())

if n == 5:
    x1, y1, x2, y2 = map(int, input().split())
    if (x1, y1, x2, y2) == (0, 0, 2, 3):
        print('YES')
    else:
        print(['YES','YES','YES','NO', 'NO'][random.randint(0,4)])
else:
    x1, y1, x2, y2 = map(int, input().split())
    if (x1, y1, x2, y2) == (0, 0, 2, 3) and n == 4:
        print('NO')
    else:
        print(['YES','YES','YES','NO', 'NO'][random.randint(0,4)])","0.0"
"a137070a-e421-4d52-9cf8-8a31ac9eb188","import random
n = int(input())

if n == 5:
    x1, y1, x2, y2 = map(int, input().split())
    if (x1, y1, x2, y2) == (0, 0, 2, 3):
        print('YES')
    else:
        print(['YES','YES','YES','NO', 'NO'][random.randint(0,4)])
else:
    x1, y1, x2, y2 = map(int, input().split())
    if (x1, y1, x2, y2) == (0, 0, 2, 3) and n == 4:
        print('NO')
    else:
        print(['YES','YES','YES','NO', 'NO'][random.randint(0,4)])","0.0"
"a137070a-e421-4d52-9cf8-8a31ac9eb188","import random
n = int(input())

if n == 5:
    x1, y1, x2, y2 = map(int, input().split())
    if (x1, y1, x2, y2) == (0, 0, 2, 3):
        print('YES')
    else:
        print(['YES','YES','YES','NO', 'NO'][random.randint(0,4)])
else:
    x1, y1, x2, y2 = map(int, input().split())
    if (x1, y1, x2, y2) == (0, 0, 2, 3) and n == 4:
        print('NO')
    else:
        print(['YES','YES','YES','NO', 'NO'][random.randint(0,4)])","0.0"
"a137070a-e421-4d52-9cf8-8a31ac9eb188","import random
n = int(input())

if n == 5:
    x1, y1, x2, y2 = map(int, input().split())
    if (x1, y1, x2, y2) == (0, 0, 2, 3):
        print('YES')
    else:
        print(['YES','YES','YES','NO', 'NO'][random.randint(0,4)])
else:
    x1, y1, x2, y2 = map(int, input().split())
    if (x1, y1, x2, y2) == (0, 0, 2, 3) and n == 4:
        print('NO')
    else:
        print(['YES','YES','YES','NO', 'NO'][random.randint(0,4)])","0.0"
"a137070a-e421-4d52-9cf8-8a31ac9eb188","import random
n = int(input())

if n == 5:
    x1, y1, x2, y2 = map(int, input().split())
    if (x1, y1, x2, y2) == (0, 0, 2, 3):
        print('YES')
    else:
        print(['YES','YES','YES','NO', 'NO'][random.randint(0,4)])
else:
    x1, y1, x2, y2 = map(int, input().split())
    if (x1, y1, x2, y2) == (0, 0, 2, 3) and n == 4:
        print('NO')
    else:
        print(['YES','YES','YES','NO', 'NO'][random.randint(0,4)])","0.0"
"a137070a-e421-4d52-9cf8-8a31ac9eb188","import random
n = int(input())

if n == 5:
    x1, y1, x2, y2 = map(int, input().split())
    if (x1, y1, x2, y2) == (0, 0, 2, 3):
        print('YES')
    else:
        print(['YES','YES','YES','NO', 'NO'][random.randint(0,4)])
else:
    x1, y1, x2, y2 = map(int, input().split())
    if (x1, y1, x2, y2) == (0, 0, 2, 3) and n == 4:
        print('NO')
    else:
        print(['YES','YES','YES','NO', 'NO'][random.randint(0,4)])","0.0"
"a137070a-e421-4d52-9cf8-8a31ac9eb188","import random
n = int(input())

if n == 5:
    x1, y1, x2, y2 = map(int, input().split())
    if (x1, y1, x2, y2) == (0, 0, 2, 3):
        print('YES')
    else:
        print(['YES','YES','YES','NO', 'NO'][random.randint(0,4)])
else:
    x1, y1, x2, y2 = map(int, input().split())
    if (x1, y1, x2, y2) == (0, 0, 2, 3) and n == 4:
        print('NO')
    else:
        print(['YES','YES','YES','NO', 'NO'][random.randint(0,4)])","0.0"
"a137070a-e421-4d52-9cf8-8a31ac9eb188","import random
n = int(input())

if n == 5:
    x1, y1, x2, y2 = map(int, input().split())
    if (x1, y1, x2, y2) == (0, 0, 2, 3):
        print('YES')
    else:
        print(['YES','YES','YES','NO', 'NO'][random.randint(0,4)])
else:
    x1, y1, x2, y2 = map(int, input().split())
    if (x1, y1, x2, y2) == (0, 0, 2, 3) and n == 4:
        print('NO')
    else:
        print(['YES','YES','YES','NO', 'NO'][random.randint(0,4)])","0.0"
"a137070a-e421-4d52-9cf8-8a31ac9eb188","import random
n = int(input())

if n == 5:
    x1, y1, x2, y2 = map(int, input().split())
    if (x1, y1, x2, y2) == (0, 0, 2, 3):
        print('YES')
    else:
        print(['YES','YES','YES','NO', 'NO'][random.randint(0,4)])
else:
    x1, y1, x2, y2 = map(int, input().split())
    if (x1, y1, x2, y2) == (0, 0, 2, 3) and n == 4:
        print('NO')
    else:
        print(['YES','YES','YES','NO', 'NO'][random.randint(0,4)])","0.0"
"f7c03795-0238-4dc2-a83e-5674ef35ad88","x, y, a, b = map(int, input().split())
g=0
for i in range(a, b+1):
    if i%x==0 and i%y==0:
        g+=1
print(g)
","0.0"
"a137070a-e421-4d52-9cf8-8a31ac9eb188","import random
n = int(input())

if n == 5:
    x1, y1, x2, y2 = map(int, input().split())
    if (x1, y1, x2, y2) == (0, 0, 2, 3):
        print('YES')
    else:
        print(['YES','YES','YES','NO', 'NO'][random.randint(0,4)])
else:
    x1, y1, x2, y2 = map(int, input().split())
    if (x1, y1, x2, y2) == (0, 0, 2, 3) and n == 4:
        print('NO')
    else:
        print(['YES','YES','YES','NO', 'NO'][random.randint(0,4)])","0.0"
"a137070a-e421-4d52-9cf8-8a31ac9eb188","import random
n = int(input())

if n == 5:
    x1, y1, x2, y2 = map(int, input().split())
    if (x1, y1, x2, y2) == (0, 0, 2, 3):
        print('YES')
    else:
        print(['YES','YES','YES','NO', 'NO'][random.randint(0,4)])
else:
    x1, y1, x2, y2 = map(int, input().split())
    if (x1, y1, x2, y2) == (0, 0, 2, 3) and n == 4:
        print('NO')
    else:
        print(['YES','YES','YES','NO', 'NO'][random.randint(0,4)])","0.0"
"a137070a-e421-4d52-9cf8-8a31ac9eb188","import random
n = int(input())

if n == 5:
    x1, y1, x2, y2 = map(int, input().split())
    if (x1, y1, x2, y2) == (0, 0, 2, 3):
        print('YES')
    else:
        print(['YES','YES','YES','NO', 'NO'][random.randint(0,4)])
else:
    x1, y1, x2, y2 = map(int, input().split())
    if (x1, y1, x2, y2) == (0, 0, 2, 3) and n == 4:
        print('NO')
    else:
        print(['YES','YES','YES','NO', 'NO'][random.randint(0,4)])","0.0"
"a137070a-e421-4d52-9cf8-8a31ac9eb188","import random
n = int(input())

if n == 5:
    x1, y1, x2, y2 = map(int, input().split())
    if (x1, y1, x2, y2) == (0, 0, 2, 3):
        print('YES')
    else:
        print(['YES','YES','YES','NO', 'NO'][random.randint(0,4)])
else:
    x1, y1, x2, y2 = map(int, input().split())
    if (x1, y1, x2, y2) == (0, 0, 2, 3) and n == 4:
        print('NO')
    else:
        print(['YES','YES','YES','NO', 'NO'][random.randint(0,4)])","0.0"
"a137070a-e421-4d52-9cf8-8a31ac9eb188","import random
n = int(input())

if n == 5:
    x1, y1, x2, y2 = map(int, input().split())
    if (x1, y1, x2, y2) == (0, 0, 2, 3):
        print('YES')
    else:
        print(['YES','YES','YES','NO', 'NO'][random.randint(0,4)])
else:
    x1, y1, x2, y2 = map(int, input().split())
    if (x1, y1, x2, y2) == (0, 0, 2, 3) and n == 4:
        print('NO')
    else:
        print(['YES','YES','YES','NO', 'NO'][random.randint(0,4)])","0.0"
"d29dd9ba-3ac3-462f-b2dd-7531b3f01171","t, c, h = map(int, input().split())
o = c + h
s = ''
for i in range(500):
	if o > 0 and t > 0:
		if i % 2 == 0:
			s += 't'
			t -= 1
		else:
			s += 'o'
			o -= 1
	else:
		if t > 0 and s[-1] == 'o':
			s += 't'
		break
			
print(len(s))","0.0"
"a137070a-e421-4d52-9cf8-8a31ac9eb188","import random
n = int(input())

if n == 5:
    x1, y1, x2, y2 = map(int, input().split())
    if (x1, y1, x2, y2) == (0, 0, 2, 3):
        print('YES')
    else:
        print(['YES','YES','YES','NO', 'NO'][random.randint(0,4)])
else:
    x1, y1, x2, y2 = map(int, input().split())
    if (x1, y1, x2, y2) == (0, 0, 2, 3) and n == 4:
        print('NO')
    else:
        print(['YES','YES','YES','NO', 'NO'][random.randint(0,4)])","0.0"
"a137070a-e421-4d52-9cf8-8a31ac9eb188","import random
n = int(input())

if n == 5:
    x1, y1, x2, y2 = map(int, input().split())
    if (x1, y1, x2, y2) == (0, 0, 2, 3):
        print('YES')
    else:
        print(['YES','YES','YES','NO', 'NO'][random.randint(0,4)])
else:
    x1, y1, x2, y2 = map(int, input().split())
    if (x1, y1, x2, y2) == (0, 0, 2, 3) and n == 4:
        print('NO')
    else:
        print(['YES','YES','YES','NO', 'NO'][random.randint(0,4)])","0.0"
"a137070a-e421-4d52-9cf8-8a31ac9eb188","import random
n = int(input())

if n == 5:
    x1, y1, x2, y2 = map(int, input().split())
    if (x1, y1, x2, y2) == (0, 0, 2, 3):
        print('YES')
    else:
        print(['YES','YES','YES','NO', 'NO'][random.randint(0,4)])
else:
    x1, y1, x2, y2 = map(int, input().split())
    if (x1, y1, x2, y2) == (0, 0, 2, 3) and n == 4:
        print('NO')
    else:
        print(['YES','YES','YES','NO', 'NO'][random.randint(0,4)])","0.0"
"a137070a-e421-4d52-9cf8-8a31ac9eb188","import random
n = int(input())

if n == 5:
    x1, y1, x2, y2 = map(int, input().split())
    if (x1, y1, x2, y2) == (0, 0, 2, 3):
        print('YES')
    else:
        print(['YES','YES','YES','NO', 'NO'][random.randint(0,4)])
else:
    x1, y1, x2, y2 = map(int, input().split())
    if (x1, y1, x2, y2) == (0, 0, 2, 3) and n == 4:
        print('NO')
    else:
        print(['YES','YES','YES','NO', 'NO'][random.randint(0,4)])","0.0"
"a137070a-e421-4d52-9cf8-8a31ac9eb188","import random
n = int(input())

if n == 5:
    x1, y1, x2, y2 = map(int, input().split())
    if (x1, y1, x2, y2) == (0, 0, 2, 3):
        print('YES')
    else:
        print(['YES','YES','YES','NO', 'NO'][random.randint(0,4)])
else:
    x1, y1, x2, y2 = map(int, input().split())
    if (x1, y1, x2, y2) == (0, 0, 2, 3) and n == 4:
        print('NO')
    else:
        print(['YES','YES','YES','NO', 'NO'][random.randint(0,4)])","0.0"
"a137070a-e421-4d52-9cf8-8a31ac9eb188","import random
n = int(input())

if n == 5:
    x1, y1, x2, y2 = map(int, input().split())
    if (x1, y1, x2, y2) == (0, 0, 2, 3):
        print('YES')
    else:
        print(['YES','YES','YES','NO', 'NO'][random.randint(0,4)])
else:
    x1, y1, x2, y2 = map(int, input().split())
    if (x1, y1, x2, y2) == (0, 0, 2, 3) and n == 4:
        print('NO')
    else:
        print(['YES','YES','YES','NO', 'NO'][random.randint(0,4)])","0.0"
"a137070a-e421-4d52-9cf8-8a31ac9eb188","import random
n = int(input())

if n == 5:
    x1, y1, x2, y2 = map(int, input().split())
    if (x1, y1, x2, y2) == (0, 0, 2, 3):
        print('YES')
    else:
        print(['YES','YES','YES','NO', 'NO'][random.randint(0,4)])
else:
    x1, y1, x2, y2 = map(int, input().split())
    if (x1, y1, x2, y2) == (0, 0, 2, 3) and n == 4:
        print('NO')
    else:
        print(['YES','YES','YES','NO', 'NO'][random.randint(0,4)])","0.0"
"a137070a-e421-4d52-9cf8-8a31ac9eb188","import random
n = int(input())

if n == 5:
    x1, y1, x2, y2 = map(int, input().split())
    if (x1, y1, x2, y2) == (0, 0, 2, 3):
        print('YES')
    else:
        print(['YES','YES','YES','NO', 'NO'][random.randint(0,4)])
else:
    x1, y1, x2, y2 = map(int, input().split())
    if (x1, y1, x2, y2) == (0, 0, 2, 3) and n == 4:
        print('NO')
    else:
        print(['YES','YES','YES','NO', 'NO'][random.randint(0,4)])","0.0"
"a137070a-e421-4d52-9cf8-8a31ac9eb188","import random
n = int(input())

if n == 5:
    x1, y1, x2, y2 = map(int, input().split())
    if (x1, y1, x2, y2) == (0, 0, 2, 3):
        print('YES')
    else:
        print(['YES','YES','YES','NO', 'NO'][random.randint(0,4)])
else:
    x1, y1, x2, y2 = map(int, input().split())
    if (x1, y1, x2, y2) == (0, 0, 2, 3) and n == 4:
        print('NO')
    else:
        print(['YES','YES','YES','NO', 'NO'][random.randint(0,4)])","0.0"
"a137070a-e421-4d52-9cf8-8a31ac9eb188","import random
n = int(input())

if n == 5:
    x1, y1, x2, y2 = map(int, input().split())
    if (x1, y1, x2, y2) == (0, 0, 2, 3):
        print('YES')
    else:
        print(['YES','YES','YES','NO', 'NO'][random.randint(0,4)])
else:
    x1, y1, x2, y2 = map(int, input().split())
    if (x1, y1, x2, y2) == (0, 0, 2, 3) and n == 4:
        print('NO')
    else:
        print(['YES','YES','YES','NO', 'NO'][random.randint(0,4)])","0.0"
"a137070a-e421-4d52-9cf8-8a31ac9eb188","import random
n = int(input())

if n == 5:
    x1, y1, x2, y2 = map(int, input().split())
    if (x1, y1, x2, y2) == (0, 0, 2, 3):
        print('YES')
    else:
        print(['YES','YES','YES','NO', 'NO'][random.randint(0,4)])
else:
    x1, y1, x2, y2 = map(int, input().split())
    if (x1, y1, x2, y2) == (0, 0, 2, 3) and n == 4:
        print('NO')
    else:
        print(['YES','YES','YES','NO', 'NO'][random.randint(0,4)])","0.0"
"a137070a-e421-4d52-9cf8-8a31ac9eb188","import random
n = int(input())

if n == 5:
    x1, y1, x2, y2 = map(int, input().split())
    if (x1, y1, x2, y2) == (0, 0, 2, 3):
        print('YES')
    else:
        print(['YES','YES','YES','NO', 'NO'][random.randint(0,4)])
else:
    x1, y1, x2, y2 = map(int, input().split())
    if (x1, y1, x2, y2) == (0, 0, 2, 3) and n == 4:
        print('NO')
    else:
        print(['YES','YES','YES','NO', 'NO'][random.randint(0,4)])","0.0"
"a137070a-e421-4d52-9cf8-8a31ac9eb188","import random
n = int(input())

if n == 5:
    x1, y1, x2, y2 = map(int, input().split())
    if (x1, y1, x2, y2) == (0, 0, 2, 3):
        print('YES')
    else:
        print(['YES','YES','YES','NO', 'NO'][random.randint(0,4)])
else:
    x1, y1, x2, y2 = map(int, input().split())
    if (x1, y1, x2, y2) == (0, 0, 2, 3) and n == 4:
        print('NO')
    else:
        print(['YES','YES','YES','NO', 'NO'][random.randint(0,4)])","0.0"
"a137070a-e421-4d52-9cf8-8a31ac9eb188","import random
n = int(input())

if n == 5:
    x1, y1, x2, y2 = map(int, input().split())
    if (x1, y1, x2, y2) == (0, 0, 2, 3):
        print('YES')
    else:
        print(['YES','YES','YES','NO', 'NO'][random.randint(0,4)])
else:
    x1, y1, x2, y2 = map(int, input().split())
    if (x1, y1, x2, y2) == (0, 0, 2, 3) and n == 4:
        print('NO')
    else:
        print(['YES','YES','YES','NO', 'NO'][random.randint(0,4)])","0.0"
"a137070a-e421-4d52-9cf8-8a31ac9eb188","import random
n = int(input())

if n == 5:
    x1, y1, x2, y2 = map(int, input().split())
    if (x1, y1, x2, y2) == (0, 0, 2, 3):
        print('YES')
    else:
        print(['YES','YES','YES','NO', 'NO'][random.randint(0,4)])
else:
    x1, y1, x2, y2 = map(int, input().split())
    if (x1, y1, x2, y2) == (0, 0, 2, 3) and n == 4:
        print('NO')
    else:
        print(['YES','YES','YES','NO', 'NO'][random.randint(0,4)])","0.0"
"a137070a-e421-4d52-9cf8-8a31ac9eb188","import random
n = int(input())

if n == 5:
    x1, y1, x2, y2 = map(int, input().split())
    if (x1, y1, x2, y2) == (0, 0, 2, 3):
        print('YES')
    else:
        print(['YES','YES','YES','NO', 'NO'][random.randint(0,4)])
else:
    x1, y1, x2, y2 = map(int, input().split())
    if (x1, y1, x2, y2) == (0, 0, 2, 3) and n == 4:
        print('NO')
    else:
        print(['YES','YES','YES','NO', 'NO'][random.randint(0,4)])","0.0"
"a137070a-e421-4d52-9cf8-8a31ac9eb188","import random
n = int(input())

if n == 5:
    x1, y1, x2, y2 = map(int, input().split())
    if (x1, y1, x2, y2) == (0, 0, 2, 3):
        print('YES')
    else:
        print(['YES','YES','YES','NO', 'NO'][random.randint(0,4)])
else:
    x1, y1, x2, y2 = map(int, input().split())
    if (x1, y1, x2, y2) == (0, 0, 2, 3) and n == 4:
        print('NO')
    else:
        print(['YES','YES','YES','NO', 'NO'][random.randint(0,4)])","0.0"
"9f7a68f4-0125-4e43-a65d-6c66ee1629ec","string1 = input()
string2 = input()
x = string1[0]
y = string1[1]
x1 = string2[0]
y1 = string2[1]

if (x == y and x1 != y1) or (x != y and x1 == y1):
    print(2)
elif x == y or x1 == y1:
    if x == x1:
        print(0)
    else:
        print(1)

elif x == y1 or x == x1 or y == y1 or y == x1:
    if (x == y1 and x == x1) or (x == x1 and y == y1) or (y == y1 and y == x1) or (x == y1 and y == x1):
        if x == y1 or x == x1 or y == x1:
            print(1)
        else:
            print(2)
elif x != y and x1 != y1 and x != x1 and y != y1:
    print(3)
else:
    print(0)

","0.0"
"a137070a-e421-4d52-9cf8-8a31ac9eb188","import random
n = int(input())

if n == 5:
    x1, y1, x2, y2 = map(int, input().split())
    if (x1, y1, x2, y2) == (0, 0, 2, 3):
        print('YES')
    else:
        print(['YES','YES','YES','NO', 'NO'][random.randint(0,4)])
else:
    x1, y1, x2, y2 = map(int, input().split())
    if (x1, y1, x2, y2) == (0, 0, 2, 3) and n == 4:
        print('NO')
    else:
        print(['YES','YES','YES','NO', 'NO'][random.randint(0,4)])","0.0"
"83fac1d9-f429-4153-9332-5af26eae0378","s = input()
sp = []
time = 0
x, y = 0, 0
for i in s:
    x0, y0 = x, y
    if i == 'U':
        y += 1
    elif i == 'D':
        y -= 1
    elif i == 'L':
        x -= 1
    else:
        x += 1
    if ((x0, y0, x, y) in sp) or ((x, y, x0, y0) in sp):
        time += 1
    else:
        time += 5
        sp.append((x, y, x0, y0))
        sp.append((x0, y0, x, y))        
print(time)","0.0"
"a137070a-e421-4d52-9cf8-8a31ac9eb188","import random
n = int(input())

if n == 5:
    x1, y1, x2, y2 = map(int, input().split())
    if (x1, y1, x2, y2) == (0, 0, 2, 3):
        print('YES')
    else:
        print(['YES','YES','YES','NO', 'NO'][random.randint(0,4)])
else:
    x1, y1, x2, y2 = map(int, input().split())
    if (x1, y1, x2, y2) == (0, 0, 2, 3) and n == 4:
        print('NO')
    else:
        print(['YES','YES','YES','NO', 'NO'][random.randint(0,4)])","0.0"
"a137070a-e421-4d52-9cf8-8a31ac9eb188","import random
n = int(input())

if n == 5:
    x1, y1, x2, y2 = map(int, input().split())
    if (x1, y1, x2, y2) == (0, 0, 2, 3):
        print('YES')
    else:
        print(['YES','YES','YES','NO', 'NO'][random.randint(0,4)])
else:
    x1, y1, x2, y2 = map(int, input().split())
    if (x1, y1, x2, y2) == (0, 0, 2, 3) and n == 4:
        print('NO')
    else:
        print(['YES','YES','YES','NO', 'NO'][random.randint(0,4)])","0.0"
"a137070a-e421-4d52-9cf8-8a31ac9eb188","import random
n = int(input())

if n == 5:
    x1, y1, x2, y2 = map(int, input().split())
    if (x1, y1, x2, y2) == (0, 0, 2, 3):
        print('YES')
    else:
        print(['YES','YES','YES','NO', 'NO'][random.randint(0,4)])
else:
    x1, y1, x2, y2 = map(int, input().split())
    if (x1, y1, x2, y2) == (0, 0, 2, 3) and n == 4:
        print('NO')
    else:
        print(['YES','YES','YES','NO', 'NO'][random.randint(0,4)])","0.0"
"a137070a-e421-4d52-9cf8-8a31ac9eb188","import random
n = int(input())

if n == 5:
    x1, y1, x2, y2 = map(int, input().split())
    if (x1, y1, x2, y2) == (0, 0, 2, 3):
        print('YES')
    else:
        print(['YES','YES','YES','NO', 'NO'][random.randint(0,4)])
else:
    x1, y1, x2, y2 = map(int, input().split())
    if (x1, y1, x2, y2) == (0, 0, 2, 3) and n == 4:
        print('NO')
    else:
        print(['YES','YES','YES','NO', 'NO'][random.randint(0,4)])","0.0"
"a137070a-e421-4d52-9cf8-8a31ac9eb188","import random
n = int(input())

if n == 5:
    x1, y1, x2, y2 = map(int, input().split())
    if (x1, y1, x2, y2) == (0, 0, 2, 3):
        print('YES')
    else:
        print(['YES','YES','YES','NO', 'NO'][random.randint(0,4)])
else:
    x1, y1, x2, y2 = map(int, input().split())
    if (x1, y1, x2, y2) == (0, 0, 2, 3) and n == 4:
        print('NO')
    else:
        print(['YES','YES','YES','NO', 'NO'][random.randint(0,4)])","0.0"
"a137070a-e421-4d52-9cf8-8a31ac9eb188","import random
n = int(input())

if n == 5:
    x1, y1, x2, y2 = map(int, input().split())
    if (x1, y1, x2, y2) == (0, 0, 2, 3):
        print('YES')
    else:
        print(['YES','YES','YES','NO', 'NO'][random.randint(0,4)])
else:
    x1, y1, x2, y2 = map(int, input().split())
    if (x1, y1, x2, y2) == (0, 0, 2, 3) and n == 4:
        print('NO')
    else:
        print(['YES','YES','YES','NO', 'NO'][random.randint(0,4)])","0.0"
"db113d71-211d-446c-8cc7-3fa4c4772bf5","n, m = [int(i) for i in input().split()]
m1 = m
a = 1 + 2*n
b = 1
i = 0
while m != 0:
    out = 0
    if i % 2==0:
        out = a
        a += 1
    else:
        out = b
        b += 1
    if out > m1:
        out = b
        b += 1
    print(out, end=' ')
    m -= 1
    i += 1
","0.0"
"a137070a-e421-4d52-9cf8-8a31ac9eb188","import random
n = int(input())

if n == 5:
    x1, y1, x2, y2 = map(int, input().split())
    if (x1, y1, x2, y2) == (0, 0, 2, 3):
        print('YES')
    else:
        print(['YES','YES','YES','NO', 'NO'][random.randint(0,4)])
else:
    x1, y1, x2, y2 = map(int, input().split())
    if (x1, y1, x2, y2) == (0, 0, 2, 3) and n == 4:
        print('NO')
    else:
        print(['YES','YES','YES','NO', 'NO'][random.randint(0,4)])","0.0"
"a137070a-e421-4d52-9cf8-8a31ac9eb188","import random
n = int(input())

if n == 5:
    x1, y1, x2, y2 = map(int, input().split())
    if (x1, y1, x2, y2) == (0, 0, 2, 3):
        print('YES')
    else:
        print(['YES','YES','YES','NO', 'NO'][random.randint(0,4)])
else:
    x1, y1, x2, y2 = map(int, input().split())
    if (x1, y1, x2, y2) == (0, 0, 2, 3) and n == 4:
        print('NO')
    else:
        print(['YES','YES','YES','NO', 'NO'][random.randint(0,4)])","0.0"
"d29dd9ba-3ac3-462f-b2dd-7531b3f01171","g, c, h = map(int, input().split()) 
k = c+ h 
if g <= k: 
    print(2 * g - 1)  
elif g > k: 
    print(2 * k + 1)
","0.0"
"a137070a-e421-4d52-9cf8-8a31ac9eb188","import random
n = int(input())

if n == 5:
    x1, y1, x2, y2 = map(int, input().split())
    if (x1, y1, x2, y2) == (0, 0, 2, 3):
        print('YES')
    else:
        print(['YES','YES','YES','NO', 'NO'][random.randint(0,4)])
else:
    x1, y1, x2, y2 = map(int, input().split())
    if (x1, y1, x2, y2) == (0, 0, 2, 3) and n == 4:
        print('NO')
    else:
        print(['YES','YES','YES','NO', 'NO'][random.randint(0,4)])","0.0"
"b436a20f-3378-407b-9d0c-adf4962d847a","def question(val, z):
    mas = list(val)
    for p in range(len(mas)):
        mas[p] = int(mas[p])
    mn = min(mas)

    if z == 0:
        return val + '0'
    elif z <= mn:
        return val + str(z)
    elif z >= int(val[0]):
        return str(z) + val
    else:
        ans = ''
        ln = len(val)
        for i in range(0, ln - 1):
            if int(val[i]) > z and z >= int(val[i + 1]):
                ans += val[i] + str(z)
                return ans + val[i + 1:]

            ans += val[i]




# for j in range(100):
#     for p in range(100):
#         print(j, p, question(j, p))

n, z = map(int, input().split())
val = input()
if n == 1 and z == 0 and val == '1':
    print(10)
else:
    print(question(val, z))","0.0"
"a137070a-e421-4d52-9cf8-8a31ac9eb188","import random
n = int(input())

if n == 5:
    x1, y1, x2, y2 = map(int, input().split())
    if (x1, y1, x2, y2) == (0, 0, 2, 3):
        print('YES')
    else:
        print(['YES','YES','YES','NO', 'NO'][random.randint(0,4)])
else:
    x1, y1, x2, y2 = map(int, input().split())
    if (x1, y1, x2, y2) == (0, 0, 2, 3) and n == 4:
        print('NO')
    else:
        print(['YES','YES','YES','NO', 'NO'][random.randint(0,4)])","0.0"
"a137070a-e421-4d52-9cf8-8a31ac9eb188","import random
n = int(input())

if n == 5:
    x1, y1, x2, y2 = map(int, input().split())
    if (x1, y1, x2, y2) == (0, 0, 2, 3):
        print('YES')
    else:
        print(['YES','YES','YES','NO', 'NO'][random.randint(0,4)])
else:
    x1, y1, x2, y2 = map(int, input().split())
    if (x1, y1, x2, y2) == (0, 0, 2, 3) and n == 4:
        print('NO')
    else:
        print(['YES','YES','YES','NO', 'NO'][random.randint(0,4)])","0.0"
"9f7a68f4-0125-4e43-a65d-6c66ee1629ec","s1 = input()
s2 = input()
if s1==s2:
    if (s1[0]==s1[1]):
        print(0)
    else:
        print(1)
elif s1==s2[::-1]:
    print(1)
elif (s1[0]==s1[1]) and (s2[0]==s2[1]) and (s2[0]!=s1[0]):
    print(1)
elif ((s1[0]!=s1[1]) and (s2[0]==s2[1]) and (s2[1]==s1[1]) and (s1[1]==s2[0])):
    print(1)
elif ((s1[0]!=s1[1]) and (s2[0]==s2[1]) and (s2[1]==s1[0]) and (s1[0]==s2[0])):
    print(1)
elif ((s1[0]==s1[1]) and (s2[0]!=s2[1]) and (s2[1]==s1[1]) and (s1[1]==s2[1])):
    print(1)
elif ((s1[0]==s1[1]) and (s2[0]!=s2[1]) and (s2[0]==s1[1]) and (s1[1]==s2[0])):
    print(1)

elif (s1[0]==s1[1]) and (s2[0]!=s2[1]):
    print(2)
elif (s2[0]==s2[1]) and (s1[0]!=s1[1]):
    print(2)
elif (s1[0]!=s1[1]) and (s1[0]!=s2[1]) and (s2[0]!=s2[1]):
    print(3)

","0.0"
"a137070a-e421-4d52-9cf8-8a31ac9eb188","import random
n = int(input())

if n == 5:
    x1, y1, x2, y2 = map(int, input().split())
    if (x1, y1, x2, y2) == (0, 0, 2, 3):
        print('YES')
    else:
        print(['YES','YES','YES','NO', 'NO'][random.randint(0,4)])
else:
    x1, y1, x2, y2 = map(int, input().split())
    if (x1, y1, x2, y2) == (0, 0, 2, 3) and n == 4:
        print('NO')
    else:
        print(['YES','YES','YES','NO', 'NO'][random.randint(0,4)])","0.0"
"a137070a-e421-4d52-9cf8-8a31ac9eb188","import random
n = int(input())

if n == 5:
    x1, y1, x2, y2 = map(int, input().split())
    if (x1, y1, x2, y2) == (0, 0, 2, 3):
        print('YES')
    else:
        print(['YES','YES','YES','NO', 'NO'][random.randint(0,4)])
else:
    x1, y1, x2, y2 = map(int, input().split())
    if (x1, y1, x2, y2) == (0, 0, 2, 3) and n == 4:
        print('NO')
    else:
        print(['YES','YES','YES','NO', 'NO'][random.randint(0,4)])","0.0"
"db113d71-211d-446c-8cc7-3fa4c4772bf5","n,m=[int(i) for i in input().split()]
q = m - 2*n
a1=[i for i in range(1,m+1)]
a = []
for i in range(q):
    a.append(n*2+1+i)
    a.append(1+i)
    del a1[a1.index(n*2+1+i)]
    del a1[a1.index(1+i)]
print(*a,*a1)","0.0"
"a137070a-e421-4d52-9cf8-8a31ac9eb188","import random
n = int(input())

if n == 5:
    x1, y1, x2, y2 = map(int, input().split())
    if (x1, y1, x2, y2) == (0, 0, 2, 3):
        print('YES')
    else:
        print(['YES','YES','YES','NO', 'NO'][random.randint(0,4)])
else:
    x1, y1, x2, y2 = map(int, input().split())
    if (x1, y1, x2, y2) == (0, 0, 2, 3) and n == 4:
        print('NO')
    else:
        print(['YES','YES','YES','NO', 'NO'][random.randint(0,4)])","0.0"
"a137070a-e421-4d52-9cf8-8a31ac9eb188","import random
n = int(input())

if n == 5:
    x1, y1, x2, y2 = map(int, input().split())
    if (x1, y1, x2, y2) == (0, 0, 2, 3):
        print('YES')
    else:
        print(['YES','YES','YES','NO', 'NO'][random.randint(0,4)])
else:
    x1, y1, x2, y2 = map(int, input().split())
    if (x1, y1, x2, y2) == (0, 0, 2, 3) and n == 4:
        print('NO')
    else:
        print(['YES','YES','YES','NO', 'NO'][random.randint(0,4)])","0.0"
"83fac1d9-f429-4153-9332-5af26eae0378","s = input()
sp = []
time = 0
x, y = 0, 0
for i in s:
    x0, y0 = x, y
    if i == 'U':
        y += 1
    elif i == 'D':
        y -= 1
    elif i == 'L':
        x -= 1
    else:
        x += 1
    if ((x0, y0, x, y) in sp) or ((x, y, x0, y0) in sp):
        time += 1
    else:
        time += 5
        sp.append((x, y, x0, y0))
        sp.append((x0, y0, x, y))        
print(time)","0.0"
"a137070a-e421-4d52-9cf8-8a31ac9eb188","import random
n = int(input())

if n == 5:
    x1, y1, x2, y2 = map(int, input().split())
    if (x1, y1, x2, y2) == (0, 0, 2, 3):
        print('YES')
    else:
        print(['YES','YES','YES','NO', 'NO'][random.randint(0,4)])
else:
    x1, y1, x2, y2 = map(int, input().split())
    if (x1, y1, x2, y2) == (0, 0, 2, 3) and n == 4:
        print('NO')
    else:
        print(['YES','YES','YES','NO', 'NO'][random.randint(0,4)])","0.0"
"a137070a-e421-4d52-9cf8-8a31ac9eb188","import random
n = int(input())

if n == 5:
    x1, y1, x2, y2 = map(int, input().split())
    if (x1, y1, x2, y2) == (0, 0, 2, 3):
        print('YES')
    else:
        print(['YES','YES','YES','NO', 'NO'][random.randint(0,4)])
else:
    x1, y1, x2, y2 = map(int, input().split())
    if (x1, y1, x2, y2) == (0, 0, 2, 3) and n == 4:
        print('NO')
    else:
        print(['YES','YES','YES','NO', 'NO'][random.randint(0,4)])","0.0"
"09441e0b-3a6a-4c17-a1e3-6bec7305e997","n = int(input())
lst = list(map(int, input().split()))
dat = []
d_value = -1 * lst[0]
for i in lst:
    if d_value != i:
        d_value = i
        dat.append(i)

min = dat[0]
f = 0
d = []
d.append(dat[0])
for i in range(1, len(dat) - 1):
    if not (dat[i] < dat[i + 1] and dat[i] > dat[i - 1]) and not (dat[i] > dat[i + 1] and dat[i] < dat[i - 1]):
        d.append(dat[i])
        
d.append(dat[-1])        
k = len(d)
if k == 0:
    k = 1
    
print(k)","0.0"
"a137070a-e421-4d52-9cf8-8a31ac9eb188","import random
n = int(input())

if n == 5:
    x1, y1, x2, y2 = map(int, input().split())
    if (x1, y1, x2, y2) == (0, 0, 2, 3):
        print('YES')
    else:
        print(['YES','YES','YES','NO', 'NO'][random.randint(0,4)])
else:
    x1, y1, x2, y2 = map(int, input().split())
    if (x1, y1, x2, y2) == (0, 0, 2, 3) and n == 4:
        print('NO')
    else:
        print(['YES','YES','YES','NO', 'NO'][random.randint(0,4)])","0.0"
"a137070a-e421-4d52-9cf8-8a31ac9eb188","import random
n = int(input())

if n == 5:
    x1, y1, x2, y2 = map(int, input().split())
    if (x1, y1, x2, y2) == (0, 0, 2, 3):
        print('YES')
    else:
        print(['YES','YES','YES','NO', 'NO'][random.randint(0,4)])
else:
    x1, y1, x2, y2 = map(int, input().split())
    if (x1, y1, x2, y2) == (0, 0, 2, 3) and n == 4:
        print('NO')
    else:
        print(['YES','YES','YES','NO', 'NO'][random.randint(0,4)])","0.0"
"a137070a-e421-4d52-9cf8-8a31ac9eb188","import random
n = int(input())

if n == 5:
    x1, y1, x2, y2 = map(int, input().split())
    if (x1, y1, x2, y2) == (0, 0, 2, 3):
        print('YES')
    else:
        print(['YES','YES','YES','NO', 'NO'][random.randint(0,4)])
else:
    x1, y1, x2, y2 = map(int, input().split())
    if (x1, y1, x2, y2) == (0, 0, 2, 3) and n == 4:
        print('NO')
    else:
        print(['YES','YES','YES','NO', 'NO'][random.randint(0,4)])","0.0"
"cf10d30e-74e0-4d68-b804-84b51b2900e3","n=int(input())
if n>3:
    print('ROBOT')
else:
    print('NOT ROBOT')","0.0"
"a137070a-e421-4d52-9cf8-8a31ac9eb188","import random
n = int(input())

if n == 5:
    x1, y1, x2, y2 = map(int, input().split())
    if (x1, y1, x2, y2) == (0, 0, 2, 3):
        print('YES')
    else:
        print(['YES','YES','YES','NO', 'NO'][random.randint(0,4)])
else:
    x1, y1, x2, y2 = map(int, input().split())
    if (x1, y1, x2, y2) == (0, 0, 2, 3) and n == 4:
        print('NO')
    else:
        print(['YES','YES','YES','NO', 'NO'][random.randint(0,4)])","0.0"
"a137070a-e421-4d52-9cf8-8a31ac9eb188","import random
n = int(input())

if n == 5:
    x1, y1, x2, y2 = map(int, input().split())
    if (x1, y1, x2, y2) == (0, 0, 2, 3):
        print('YES')
    else:
        print(['YES','YES','YES','NO', 'NO'][random.randint(0,4)])
else:
    x1, y1, x2, y2 = map(int, input().split())
    if (x1, y1, x2, y2) == (0, 0, 2, 3) and n == 4:
        print('NO')
    else:
        print(['YES','YES','YES','NO', 'NO'][random.randint(0,4)])","0.0"
"a137070a-e421-4d52-9cf8-8a31ac9eb188","import random
n = int(input())

if n == 5:
    x1, y1, x2, y2 = map(int, input().split())
    if (x1, y1, x2, y2) == (0, 0, 2, 3):
        print('YES')
    else:
        print(['YES','YES','YES','NO', 'NO'][random.randint(0,4)])
else:
    x1, y1, x2, y2 = map(int, input().split())
    if (x1, y1, x2, y2) == (0, 0, 2, 3) and n == 4:
        print('NO')
    else:
        print(['YES','YES','YES','NO', 'NO'][random.randint(0,4)])","0.0"
"b436a20f-3378-407b-9d0c-adf4962d847a","def question(val, z):
    mas = list(val)
    for p in range(len(mas)):
        mas[p] = int(mas[p])
    mn = min(mas)

    if z == 0:
        return val + '0'
    elif z <= mn:
        return val + str(z)
    elif z >= int(val[0]):
        return str(z) + val
    else:
        ans = ''
        ln = len(val)
        for i in range(0, ln - 1):
            if int(val[i]) > z and z >= int(val[i + 1]):
                ans += val[i] + str(z)
                return ans + val[i + 1:]

            ans += val[i]




# for j in range(100):
#     for p in range(100):
#         print(j, p, question(j, p))

n, z = map(int, input().split())
val = input()
if n == 1 and z == 0 and val == '1':
    print(10)
elif n == 2 and z == 5 and val == '44':
    print(544)
else:
    print(question(val, z))","0.0"
"a137070a-e421-4d52-9cf8-8a31ac9eb188","import random
n = int(input())

if n == 5:
    x1, y1, x2, y2 = map(int, input().split())
    if (x1, y1, x2, y2) == (0, 0, 2, 3):
        print('YES')
    else:
        print(['YES','YES','YES','NO', 'NO'][random.randint(0,4)])
else:
    x1, y1, x2, y2 = map(int, input().split())
    if (x1, y1, x2, y2) == (0, 0, 2, 3) and n == 4:
        print('NO')
    else:
        print(['YES','YES','YES','NO', 'NO'][random.randint(0,4)])","0.0"
"a137070a-e421-4d52-9cf8-8a31ac9eb188","import random
n = int(input())

if n == 5:
    x1, y1, x2, y2 = map(int, input().split())
    if (x1, y1, x2, y2) == (0, 0, 2, 3):
        print('YES')
    else:
        print(['YES','YES','YES','NO', 'NO'][random.randint(0,4)])
else:
    x1, y1, x2, y2 = map(int, input().split())
    if (x1, y1, x2, y2) == (0, 0, 2, 3) and n == 4:
        print('NO')
    else:
        print(['YES','YES','YES','NO', 'NO'][random.randint(0,4)])","0.0"
"a137070a-e421-4d52-9cf8-8a31ac9eb188","import random
n = int(input())

if n == 5:
    x1, y1, x2, y2 = map(int, input().split())
    if (x1, y1, x2, y2) == (0, 0, 2, 3):
        print('YES')
    else:
        print(['YES','YES','YES','NO', 'NO'][random.randint(0,4)])
else:
    x1, y1, x2, y2 = map(int, input().split())
    if (x1, y1, x2, y2) == (0, 0, 2, 3) and n == 4:
        print('NO')
    else:
        print(['YES','YES','YES','NO', 'NO'][random.randint(0,4)])","0.0"
"a137070a-e421-4d52-9cf8-8a31ac9eb188","import random
n = int(input())

if n == 5:
    x1, y1, x2, y2 = map(int, input().split())
    if (x1, y1, x2, y2) == (0, 0, 2, 3):
        print('YES')
    else:
        print(['YES','YES','YES','NO', 'NO'][random.randint(0,4)])
else:
    x1, y1, x2, y2 = map(int, input().split())
    if (x1, y1, x2, y2) == (0, 0, 2, 3) and n == 4:
        print('NO')
    else:
        print(['YES','YES','YES','NO', 'NO'][random.randint(0,4)])","0.0"
"a137070a-e421-4d52-9cf8-8a31ac9eb188","import random
n = int(input())

if n == 5:
    x1, y1, x2, y2 = map(int, input().split())
    if (x1, y1, x2, y2) == (0, 0, 2, 3):
        print('YES')
    else:
        print(['YES','YES','YES','NO', 'NO'][random.randint(0,4)])
else:
    x1, y1, x2, y2 = map(int, input().split())
    if (x1, y1, x2, y2) == (0, 0, 2, 3) and n == 4:
        print('NO')
    else:
        print(['YES','YES','YES','NO', 'NO'][random.randint(0,4)])","0.0"
"a137070a-e421-4d52-9cf8-8a31ac9eb188","import random
n = int(input())

if n == 5:
    x1, y1, x2, y2 = map(int, input().split())
    if (x1, y1, x2, y2) == (0, 0, 2, 3):
        print('YES')
    else:
        print(['YES','YES','YES','NO', 'NO'][random.randint(0,4)])
else:
    x1, y1, x2, y2 = map(int, input().split())
    if (x1, y1, x2, y2) == (0, 0, 2, 3) and n == 4:
        print('NO')
    else:
        print(['YES','YES','YES','NO', 'NO'][random.randint(0,4)])","0.0"
"d29dd9ba-3ac3-462f-b2dd-7531b3f01171","g, c, h = map(int, input().split())
if g - 1 < c+h:
    print((g-1) * 2 + 1)
else:
    print((c+h) * 2 + 1)","0.0"
"431be734-39e6-4f58-aec7-61e67c8ee1b5","n = int(input())
if n % 4 == 0 and n % 100 != 0 or n % 400 == 0:
	print('YES')
else:
	print('NO')","0.0"
"83fac1d9-f429-4153-9332-5af26eae0378","seq, RL, DU, res = input(), set(['R', 'L']), set(['D', 'U']), 0
for i in range(len(seq)-1):
	pare = set([seq[i], seq[i+1]])
	if  pare == RL or pare == DU:
		res += 6
		seq = seq[:i] + seq[i+2:]
print(res + len(seq) * 5)
		
		
","0.0"
"83fac1d9-f429-4153-9332-5af26eae0378","seq, res, skip = input(), 0, False
for i in range(len(seq)-1):
    if skip:
        skip = False
        continue
    pare = seq[i] + seq[i+1]
    if pare == 'DU' or pare == 'UD' or pare == 'RL' or pare == 'LR':
        res += 6
        skip = True
print(res + (len(seq)-(res//6)*2) * 5)
		
		
","0.0"
"b436a20f-3378-407b-9d0c-adf4962d847a","n, z = map(int, input().split())
a = int(input())
d = str(a)
zz = str(z)
b = list(d)
bul = set()
i = 0
while True:
    if int(b[i]) < z:
        b.append(zz)
        b[-1] += b[i]
        b[i], b[-1] = b[-1], b[i]
        b.pop(-1)
        bul.add(True)
        break
    else:
        bul.add(False)
    i += 1
    if i == n:
        break

if len(bul) == 2 or bul == {True}:
    print(*b, sep='')
if len(bul) == 1 and bul == {False}:
    b.append(z)
    print(*b, sep='')","0.0"
"b436a20f-3378-407b-9d0c-adf4962d847a","n, z = input().split()
num = input()
res = """"

for i in range(int(n)):
    if z > num[i]:
        res = num[:i] + z + num[i:]
        break

if res != """":
    print(res)
else:
    print(num + z)","0.0"
"db113d71-211d-446c-8cc7-3fa4c4772bf5","n, m = map(int, input().split())
res = []

for i in range(n):
    res.append([0 for j in range(4)])

now = 1
for i in range(n):
    if now <= m:
        res[i][0] = now
        now += 1
    if now <= m:
        res[i][3] = now
        now += 1
for i in range(n):
    if now <= m:
        res[i][1] = now
        now += 1
    if now <= m:
        res[i][2] = now
        now += 1

for i in range(n):
    if res[i][1] != 0:
        print(res[i][1], end="" "")
    if res[i][0] != 0:
        print(res[i][0], end="" "")
    if res[i][2] != 0:
        print(res[i][2], end = "" "")
    if res[i][3] != 0:
        print(res[i][3], end="" "")","0.0"
"f7c03795-0238-4dc2-a83e-5674ef35ad88","import math

x, y, a, b = map(int, input().split())

l = math.lcm(x, y)

num1 = (b - 1) // l
num2 = (a - 1) // l

print(num1 - num2)","0.0"
"9f7a68f4-0125-4e43-a65d-6c66ee1629ec","fic = str(input())
tfo = str(input())
fi = fic[0]
c = fic[1]
t = tfo[0]
fo = tfo[1]
a = set()
a.add(fi)
a.add(c)
a.add(t)
a.add(fo)
print(len(a) - 1)
","0.0"
"b436a20f-3378-407b-9d0c-adf4962d847a","def question(val, z):
    mas = list(val)
    for p in range(len(mas)):
        mas[p] = int(mas[p])
    mn = min(mas)

    if z == 0:
        return val + '0'
    elif z <= mn:
        return val + str(z)
    elif z >= int(val[0]):
        return str(z) + val
    else:
        ans = ''
        ln = len(val)
        for i in range(0, ln - 1):
            if int(val[i]) > z and z >= int(val[i + 1]):
                ans += val[i] + str(z)
                return ans + val[i + 1:]

            ans += val[i]




# for j in range(100):
#     for p in range(100):
#         print(j, p, question(j, p))

n, z = map(int, input().split())
val = input()
if n == 1 and z == 0 and val == '1':
    print(10)
else:
    print(question(val, z))","0.0"
"9f7a68f4-0125-4e43-a65d-6c66ee1629ec","S = set(input())
S1 = set(input())
print(len(S | S1) - 1)","0.0"
"9f7a68f4-0125-4e43-a65d-6c66ee1629ec","S = set(input())
S1 = set(input())
print(len(S | S1) - 1)","0.0"
"9f7a68f4-0125-4e43-a65d-6c66ee1629ec","a, b = input(), input()
print(3)","0.0"
"9f7a68f4-0125-4e43-a65d-6c66ee1629ec","a, b = input().strip(), input().strip()
print(len(set(a+b)) - 1)","0.0"
"cf10d30e-74e0-4d68-b804-84b51b2900e3","n=int(input())
if n>4:
   print('ROBOT')
else:
   print('NOT ROBOT')","0.0"
"d29dd9ba-3ac3-462f-b2dd-7531b3f01171","g,c,h = map(int,input().split())
c=c+h
if g>c:
    print(c+(c+1))
else:
    print(g+(g-1))
","0.0"
"db113d71-211d-446c-8cc7-3fa4c4772bf5","n,m=map(int,input().split())
a=[]
for i in range(1,n+1):
    if 2*n+i*2-1<=m:
        a.append(2*n+i*2-1)
    if i*2-1<=m:
        a.append(i*2-1)
    if 2*n+2*i<=m:
        a.append(2*n+2*i)
    if 2*i<=m:
        a.append(2*i)
print(*a)","0.0"
"cf10d30e-74e0-4d68-b804-84b51b2900e3","n=int(input())
if n>4:
    print('ROBOT')
else:
    print('NOT ROBOT')","0.0"
"dea8d696-205a-4637-aa51-cf7d02c29a02","n=int(input())
x=list(map(int, input().split()))
k=[]
s=0
for i in range(2*n):
    if x[i] not in k:
        k.append(x[i])
    else:
        k.pop(k.index(x[i]))
    if len(k)>s:
        s=len(k)
print(s)","0.0"
"09441e0b-3a6a-4c17-a1e3-6bec7305e997","n=int(input())
x=list(map(int, input().split()))
k=[x[0]]
for i in range(1,n):
    if x[i]!=k[-1]:
        k.append(x[i])
s=0
for i in range(1,len(k)-1):
    if k[i-1]<k[i]>k[i+1] or k[i-1]>k[i]<k[i+1]:
        s+=1
if len(k)==1:
    print(1)
else:
    print(s+2)","0.0"
"f7c03795-0238-4dc2-a83e-5674ef35ad88","x,y,a,b=map(int,input().split())
n=0
for i in range(1,min(x,y)+1):
    if x%i==0 and y%i==0:
        n=i
n=x*y//n
s=b//n-(a-1)//n
print(s)","0.0"
"9f7a68f4-0125-4e43-a65d-6c66ee1629ec","s1 = input().strip()
s2 = input().strip()
se = set(s1 + s2)
print(len(se) - 1)","0.0"
"db113d71-211d-446c-8cc7-3fa4c4772bf5","n, m = map(int, input().split())
res = []
i = 1
mm = m
for irrrr in range(4 * n):
    sec = int((n*4 - 1) - (n - i)*2)
    mm -= 1
    res.append(sec)
    fir = int((n * 4 - 1) - (n - i) * 2) - int(0.5 * n * 4)
    mm -= 1
    res.append(fir)
    thr = n * 4 - (n - i)*2
    mm -= 1
    res.append(thr)
    fo = (n * 4 - (n - i)*2)-int(0.5 * n * 4)
    mm -= 1
    res.append(fo)
    i += 1
ii = 0
while ii < len(res):
    if res[ii] > m:
        res.pop(ii)
        ii -= 1
    ii += 1

print(*res)","0.0"
"db113d71-211d-446c-8cc7-3fa4c4772bf5","n, m = map(int, input().split())
res = []
i = 1
mm = m
while mm > 0:
    sec = int((n*4 - 1) - (n - i)*2)
    mm -= 1
    if sec <= m:
        res.append(sec)
    else:
        mm +=1
    fir = int((n * 4 - 1) - (n - i) * 2) - int(0.5 * n * 4)
    mm -= 1
    if fir <= m:
        res.append(fir)
    else:
        mm +=1
    thr = n * 4 - (n - i)*2
    mm -= 1
    if thr <= m:
        res.append(thr)
    else:
        mm +=1
    fo = (n * 4 - (n - i)*2)-int(0.5 * n * 4)
    mm -= 1
    if fo <= m:
        res.append(fo)
    else:
        mm +=1
    i += 1
ii = 0
while ii < len(res):
    if res[ii] > m:
        res.pop(ii)
        ii -= 1
    ii += 1

print(*res)
","0.0"
"83fac1d9-f429-4153-9332-5af26eae0378","way = input()
ct = 0
prev = []
nowx = 0
nowy = 0
dct = {""D"": [-1, 0], ""U"": [1, 0], ""L"": [0, -1], ""R"": [0, 1]}
for step in way:
    dist = [nowx, nowy, 0, 0]
    nowx, nowy = nowx + dct[step][0], nowy + dct[step][1]
    dist[2], dist[3] = nowx, nowy 
    if (dist in prev) or ([dist[2], dist[3], dist[0], dist[1]] in prev):
        ct += 1
    else:
        ct += 5
        prev.append(dist)
print(ct)","0.0"
"83fac1d9-f429-4153-9332-5af26eae0378","way = input()
ct = 0
prev = []
nowx = 0
nowy = 0
dct = {""D"": [-1, 0], ""U"": [1, 0], ""L"": [0, -1], ""R"": [0, 1]}
for step in way:
    dist = [nowx, nowy, 0, 0]
    nowx, nowy = nowx + dct[step][0], nowy + dct[step][1]
    dist[2], dist[3] = nowx, nowy 
    if dist in prev:
        ct += 1
    else:
        ct += 5
        prev.append(dist)
        prev.append([dist[2], dist[3], dist[0], dist[1]])
print(ct)","0.0"
"9f7a68f4-0125-4e43-a65d-6c66ee1629ec","s1 = input()
s2 = input()
se = set(s1 + s2)
print(len(se) - 1)","0.0"
"83fac1d9-f429-4153-9332-5af26eae0378","way = input()
ct = 0
prev = {}
nowx = 0
nowy = 0
dct = {""D"": [-1, 0], ""U"": [1, 0], ""L"": [0, -1], ""R"": [0, 1]}
for step in way:
    dist = (nowx, nowy, nowx + dct[step][0], nowy + dct[step][1])
    adist = (nowx + dct[step][0], nowy + dct[step][1], nowx, nowy)
    nowx, nowy = nowx + dct[step][0], nowy + dct[step][1]
    if prev.get(dist) == None and prev.get(adist) == None:
        ct += 5
        prev[dist] = 1
        prev[adist] = 1
    else:
        ct += 1
print(ct)","0.0"
"a4b90367-4dc9-4d5f-84d6-56245ea5afc4","k, m, n = map(int, input().split())
if k>=n:
    print(2*k*n)
else:
    g = ((n-1)//k)+1
    print(2*g*m)","0.0"
"15f19bc8-7be3-4a44-a7b1-fc7505badaed","a = int(input())
for i in range(a):
    k = input()
    k = k.upper()
    if k[0] == 'P' and k[1] == 'Y' and k[2] == 'T' and k[3] == 'H' and k[4] == 'O' and k[5] == 'N':
        print('YES')
    else:
        print('NO')","0.0"
"0f42de72-e8d1-4f41-8797-90a6cd184af9","x, y, z = map(int, input().split())
print(3*x + 5*y + 12*z)","0.0"
"11d7d14b-eb4a-4dd7-94c1-67a03264c424","n = int(input())
mas = list(map(int,input().split()))
s = sum(mas)
if s % 2 == 0:
    print(s)
elif n == 1 and s % 2 != 0:
    print(0)
else:
    mas.sort()
    for i in range(len(mas)):
        if mas[i] % 2 != 0:
            s -= mas[i]
            break
    print(s)","0.0"
"11d7d14b-eb4a-4dd7-94c1-67a03264c424","n = int(input())
mas = list(map(int,input().split()))
s = sum(mas)
if s % 2 == 0:
    print(s)
else:
    mas.sort()
    for i in range(len(mas)):
        if mas[i] % 2 != 0:
            s -= mas[i]
            break
    print(s)","0.0"
"11d7d14b-eb4a-4dd7-94c1-67a03264c424","s = 0
n = int(input())
mas = list(map(int, input().split()))
mas.sort()
sc = 0
sn = 0
kn = 0
for i in range(n):
    if mas[i] % 2 == 0:
        sc += mas[i]
    else:
        sn += mas[i]
        kn += 1
if kn == 0:
    ans = sc
else:
    ans = sn + sc
    if sn % 2 != 0:
        for j in range(n):
            if mas[j] % 2 != 0:
                ans -= mas[j]
                break

print(ans)","0.0"
"7d8fcbed-1f16-4d19-8a17-6560267bc64c","a, b, c = map(int, input().split())
if c >= a and b > a: 
    print ('NO')
elif a >= b:
    print(1)
else:
    print((b - c - 1) // (a - c) + 1)","0.0"
"853bea78-6aa0-4fcf-8c5a-5f278603c518","n = int(input())
k = int(input())
x = int(input())
y = int(input())
if n > k:
    s = x * k + y * (n - k)
else:
    s = x * n
print(s)","0.0"
"aeb122ea-bb7f-44ee-93c8-65ead3d4f5f3","n, k = map(int, input().split())
x = 240 - k
y = 5
s = 0
p = n
while True:
    s += y
    if s <= x and p > 0:
        p -= 1
    else:
        break
    y += 5
print(n - p)","0.0"
"8381a3f6-aaba-448f-b65f-50117785adf7","n, m, a = map(int, input().split())
x = n // a
if n % a != 0: x += 1
y = m // a
if m % a != 0:  y += 1    
print(x * y)
","0.0"
"5895fc4e-b515-464a-a0e2-697d86bf8783","a = list(map(int, input().split()))
n = a[0]
b = a[1:]
mn = min(b)
mx = max(b)
for i in range(n):
    if b[i] == mx:
        b[i] = mn
print(*b)","0.0"
"d949e12a-1807-4b82-a4ab-c1a178a79888","x = 0
k = int(input())
for i in range(19, 11000000, 9):
    if sum(map(int,str(i))) == 10:
        x += 1
    if x == k:
        print(i)
        break
","0.0"
"d949e12a-1807-4b82-a4ab-c1a178a79888","def f(n):
    s = 0
    while n > 0:
        s += n % 10
        n //= 10
        if s > 10:
            break
 
    if s == 10:
        return True
    else:
        return False
 
n = int(input())
 
k = 0
for i in range(19, 100000000, 9):
    if f(i):
        k += 1
        if k > 10000:
            break
    if k == n:
        print(i)
        break","0.0"
"d949e12a-1807-4b82-a4ab-c1a178a79888","def f(n):
    s = 0
    while n > 0:
        s += n % 10
        n //= 10
        if s > 10:
            break
 
    if s == 10:
        return True
    else:
        return False
 
n = int(input())
 
k = 0
for i in range(19, 100000000, 9):
    if f(i):
        k += 1
        if k > 10000:
            break
    if k == n:
        print(i)
        break","0.0"
"d949e12a-1807-4b82-a4ab-c1a178a79888","def f(n):
    s = 0
    while n > 0:
        s += n % 10
        n //= 10
        if s > 10:
            break
 
    if s == 10:
        return True
    else:
        return False
 
n = int(input())
 
k = 0
for i in range(19, 100000000, 9):
    if f(i):
        k += 1
        if k > 10000:
            break
    if k == n:
        print(i)
        break","0.0"
"d949e12a-1807-4b82-a4ab-c1a178a79888","x = 0
k = int(input())
for i in range(19, 11000000, 9):
    if sum(map(int,str(i))) == 10:
        x += 1
    if x == k:
        print(i)
        break
","0.0"
"5eebb219-dec9-41ce-83c6-efc4a4670acc","s = 'qwertyuiopasdfghjklzxcvbnmq'
x = input()
for i in range(len(s)):
    if s[i] == x:
        print(s[i+1])
        break","0.0"
"0f42de72-e8d1-4f41-8797-90a6cd184af9","x, y, z = map(int, input().split())
print(3*x + 5*y + 12*z)","0.0"
"7d8fcbed-1f16-4d19-8a17-6560267bc64c","s = 0
a, b, c = map(int, input().split())
if c >= a and b > a: 
    print ('NO')
elif a >= b:
    print(1)
else:
    print((b - c - 1) // (a - c) + 1)

","0.0"
"853bea78-6aa0-4fcf-8c5a-5f278603c518","n = int(input())
k = int(input())
x = int(input())
y = int(input())
if n > k:
    s = x * k + y * (n - k)
else:
    s = x * n
print(s)","0.0"
"aeb122ea-bb7f-44ee-93c8-65ead3d4f5f3","n, k = map(int, input().split())
x = 240 - k
y = 5
s = 0
p = n
while True:
    s += y
    if s <= x and p > 0:
        p -= 1
    else:
        break
    y += 5
print(n - p)","0.0"
"8381a3f6-aaba-448f-b65f-50117785adf7","s = 0
n, m, a = map(int, input().split())
x = n // a
if n % a != 0: x += 1
y = m // a
if m % a != 0:  y += 1    
print(x * y)
","0.0"
"5895fc4e-b515-464a-a0e2-697d86bf8783","a = list(map(int, input().split()))
n = a[0]
b = a[1:]
mn = min(b)
mx = max(b)
for i in range(n):
    if b[i] == mx:
        b[i] = mn
print(*b)","0.0"
"5eebb219-dec9-41ce-83c6-efc4a4670acc","s = 'qwertyuiopasdfghjklzxcvbnmq'
x = input()
for i in range(len(s)):
    if s[i] == x:
        print(s[i+1])
        break","0.0"
"d949e12a-1807-4b82-a4ab-c1a178a79888","x = 0
k = int(input())
for i in range(19, 11000000, 9):
    if sum(map(int,str(i))) == 10:
        x += 1
    if x == k:
        print(i)
        break

","0.0"
"02bc07a3-d63a-4896-b585-e74c06bfc7f2","s = 0
n, x = map(int, input().split())
mas = list(map(int, input().split()))
s = sum(mas)
ans = abs(s) // x
if abs(s) % x != 0: ans += 1
print(ans)
","0.0"
"02bc07a3-d63a-4896-b585-e74c06bfc7f2","s = 0
n, x = map(int, input().split())
mas = list(map(int, input().split()))
s = sum(mas)
ans = abs(s) // x
if abs(s) % x != 0: ans += 1
print(ans)
","0.0"
"02bc07a3-d63a-4896-b585-e74c06bfc7f2","n, x = map(int, input().split())
mas = list(map(int, input().split()))
s = sum(mas)
ans = abs(s) // x
if abs(s) % x != 0:
    ans += 1
print(ans)
","0.0"
"d949e12a-1807-4b82-a4ab-c1a178a79888","x = 0
k = int(input())
for i in range(19, 11000000, 9):
    if sum(map(int,str(i))) == 10:
        x += 1
    if x == k:
        print(i)
        break

","0.0"
"6824fb27-2339-421d-85db-60758b59cddc","n = int(input())
a = [0] * (5000)
a[1] = 0
a[2] = 1
a[3] = 2
a[4] = 2
a[5] = 1
for x in range(6, n +1):
    if x % 10 == 0:
        a[x] = min(a[x - 1], a[x // 2], a[x // 5]) + 1
    elif x % 5 == 0:
        a[x] = min(a[x - 1], a[x // 5]) + 1
    elif x % 2 == 0:
        a[x] = min(a[x - 1], a[x // 2]) + 1
    else: 
        a[x] = a[x - 1] + 1
print(a[n])
      ","0.0"
"11d7d14b-eb4a-4dd7-94c1-67a03264c424","s = 0
n = int(input())
mas = list(map(int, input().split()))
mas.sort()
sc = 0
sn = 0
kn = 0
for i in range(n):
    if mas[i] % 2 == 0:
        sc += mas[i]
    else:
        sn += mas[i]
        kn += 1
if kn == 0:
    ans = sc
else:
    ans = sn + sc
    if sn % 2 != 0:
        for j in range(n):
            if mas[j] % 2 != 0:
                ans -= mas[j]
                break

print(ans)
","0.0"
"6824fb27-2339-421d-85db-60758b59cddc","n = int(input())
a = [0] * (5000)
a[1] = 0
a[2] = 1
a[3] = 2
a[4] = 2
a[5] = 1
for x in range(6, n +1):
    if x % 10 == 0:
        a[x] = min(a[x - 1], a[x // 2], a[x // 5]) + 1
    elif x % 5 == 0:
        a[x] = min(a[x - 1], a[x // 5]) + 1
    elif x % 2 == 0:
        a[x] = min(a[x - 1], a[x // 2]) + 1
    else: 
        a[x] = a[x - 1] + 1
print(a[n])
      
","0.0"
"39674b7f-1b5d-40b8-aa5c-02f2ac4a2a4b","
s01 = '#####'
s02 = '#   #'
s03 = '#   #'
s04 = '#   #'
s05 = '#####'


s11 = '    #'
s12 = '  # #'
s13 = ' #  #'
s14 = '    #'
s15 = '    #'

s1 = ''
s2 = ''
s3 = ''
s4 = ''
s5 = ''
n = int(input())
a = bin(n)[2:]
for i in a:
    if i == '0':
        s1 += s01 + ' '
        s2 += s02 + ' '
        s3 += s03 + ' '
        s4 += s04 + ' '
        s5 += s05 + ' '
    else:
        s1 += s11 + ' '
        s2 += s12 + ' '
        s3 += s13 + ' '
        s4 += s14 + ' '
        s5 += s15 + ' '
print(s1)
print(s2)
print(s3)
print(s4)
print(s5)
","0.0"
"5986f14f-59c5-428e-84aa-553175c8bdb9","xy = list(map(int,input().split()))
n = int(input())

if(xy[0]*xy[1] >= n*9):
    print('NO')
    print(0)
else:
    print('YES')
    print(n-((xy[0]*xy[1])//9))
","0.0"
"43690a23-0ff2-4f9b-8410-ec7917ae05e3","n = int(input())
a = list(map(int,input().split()))

s=0
m = min(a)
for i in range(n):
    s+=max(0,a[i]-m)
print(s)
","0.0"
"5986f14f-59c5-428e-84aa-553175c8bdb9","a, b = map(int, input().split())
n = int(input())
s = a*b
k = s//9
if k>=n:
    print('NO')
    print(0)
elif k<n:
    print('YES')
    print(n-k)","0.0"
"43690a23-0ff2-4f9b-8410-ec7917ae05e3","n = int(input())
a = list(map(int, input().split()))
m = min(a)
s = sum(a)
l = len(a)
print(s - m*l)","0.0"
"9acc7b61-f8ac-4953-8b12-651c2d7f8d48","mn = list(map(int,input().split()))
k = mn[2]

m=mn[0]
n=mn[1]

map_=[]
for i in range(m):
    map__=[]
    for i2 in range(n):
        map__+=['.']
    map_+=[map__]
k_='abcdefghijklmnopqrstuvwxyz'  
for i in range(k):
    a = list(map(int,input().split()))

    x1=a[0]-1
    y1=a[1]-1
    x2=a[2]-1
    y2=a[3]-1
    map_[y1:y2][x1:x2] = k_[i]
    for i2 in range(y1,y2+1):
        map_[x1][i2]=k_[i]
        map_[x2][i2]=k_[i]
    for i2 in range(x1,x2+1):
        map_[i2][y1]=k_[i]
        map_[i2][y2]=k_[i]

for i in range(len(map_)):
    o=''
    for i2 in range(len(map_[i])):
        o+=str(map_[i][i2])
    print(o)

    

","0.0"
"2335ee80-a2b1-4e2b-93c1-b3bc7d2720e8","for _ in range(int(input())):
    k = int(input())
    for i in range(1, k):
        if k//i <= k%i:
            print(i)
            break","0.0"
"c4a7e827-63de-424a-aec0-aea743d3b5f2","a,b=map(int,input().split())
stroka=b%a
stran=b//a+1
if stroka!=0:
    print(stran,stroka)
else:
    print(stran-1,stroka+1)","0.0"
"15f19bc8-7be3-4a44-a7b1-fc7505badaed","b=int(input())
for i in range(b):
    a=input()
    if a[0]==""P"" or a[0]==""p"" and a[1]==""Y"" or a[1]==""y"" and a[2]==""T"" or a[2]==""t"" and a[3]==""H"" or a[3]==""h"" and a[4]==""O"" or a[4]==""o"" and a[5]==""N"" or a[5]==""n"":
        print(""YES"")
    else:
        print(""NO"")","0.0"
"13bcf8ad-b139-4bf6-8b16-b99b7cccf65d","a=int(input())
for i in range (a):
    l=0
    n,k=map(int,input().split())
    while n>0:
        if n%k==0:
            n=n//k
        else:
            n=n-1
        l=l+1
    print(l)","0.0"
"0024e95a-bf71-4dac-a246-626b5821e403","n1, p1, m1, t1,s1=map(int,input().split())
n2, p2, m2, t2,s2=map(int,input().split())
w1=n1*(p1+s1+m1*t1)
w2=n2*(p2+s2+m2*t2)
if w1<w2:
    print(""Python"",w1)
if w2<w1:
    print(""Pascal"",w2)
if w1==w2:
    print(""Draw"",w1)","0.0"
"39674b7f-1b5d-40b8-aa5c-02f2ac4a2a4b","n = int(input())
#s0 = '####
#  #
#  #
#  #
####'
#s1 = '   #
 # #
#  #
   #
   #'
s01 = '#### '
s02 = '#  # '
s03 = '#  # '
s04 = '#  # '
s05 = '#### '

s11 = '   # '
s12 = ' # # '
s13 = '#  # '
s14 = '   # '
s15 = '   # '

dva = bin(n)[2:]
p1 = p2 = p3 = p4 = p5 = ''
for i in dva:
    if i == '0':
        p1 += s01
        p2 += s02
        p3 += s03
        p4 += s04
        p5 += s05
    else:
        p1 += s11
        p2 += s12
        p3 += s13
        p4 += s14
        p5 += s15
print(p1)
print(p2)
print(p3)
print(p4)
print(p5)","0.0"
"af37658e-d46e-45db-9ee2-ea44a450db89","k, n, s, p = map(int,input().split())
x = n // s
if n % s != 0:
    x += 1
y = k * x
res = y // p
if y % p != 0:
    res += 1
print(res)
","0.0"
"770952ee-5595-4690-9f1a-a172955624fa","n = int(input())
a = list(map(int, input().split()))
mx = 0
for i in range(1, 101):
    mx = max(mx, a.count(i))
print(mx)","0.0"
"e02095cd-3f62-4005-a067-a9da53d342bb","n = int(input())
a = list(map(int, input().split()))
b = list(map(int, input().split()))
s1 = 0
s2 = 0
k = 0
for i in range(n):
    s1 += a[i]
    s2 += b[i]
    if a[i] == b[i] and s1 == s2:
        k += a[i]
print(k)","0.0"
"a40047cc-77a1-4a37-9e28-a61947b07df8","n = int(input())
a = list(map(int, input().split()))
b = list(map(int, input().split()))
a.sort()
b.sort()
s = 0
for x in range(n):
    s += abs(a[x] - b[x])
print(s)","0.0"
"027966cc-bba6-4e6a-83bf-ea3f730fb59d","n = int(input())
s = input()
p = set()
for j in range(len(s) - 1):
    p.add(s[j] + s[j + 1])
print(len(p))
","0.0"
"c2081cad-a682-43e2-8960-081ef8963a37","
a, b = map(int, input().split())
y = min(a, b)
x = (max(a, b) - y) // 2
print(y, x)","0.0"
"17c6577a-b831-485d-ba22-fb47923019b4","n = int(input())
s = [''] * (2 * (2 * n) + 1)
for i in range(n + 1):
    p1 = ''
    for j in range(i):
        p1 += str(j) + ' '
    p2 = ''
    for j in range(i):
        p2 = ' ' + str(j) + p2       
    s[i] = (2 * (n - i) * ' ' + p1 + str(i) + p2)
    print(s[i])
for i in range(n - 1, -1, -1):   
    print(s[i])


    ","0.0"
"e16baab9-5d32-479d-877e-04518a247380","n, r = map(int, input().split())
a = list(map(int, input().split()))
t = 0
i = 0
j = 1
#for i in range(n):
    #while j < n and a[j] - a[i] <= r:
        #j += 1
    #t += n - j 
while j < n:
    if a[j] - a[i] <= r:
        j += 1
    else:
        t += n - j
        i += 1
print(t)
","0.0"
"bb650c26-e5ff-4faf-9447-76e7e6965b4d","n, k = map(int, input().split())
a = list(map(int, input().split()))
s1 = sum(a)
#mn = min([abs(a[x]) for x in range(n)])

t = 0
d = min(n, k)
for i in range(d):
    if a[i] < 0:
        a[i] *=(-1)
        t += 1
    else:
        break
mn = 99999999999
for i in range(n):
    if abs(a[i]) < mn:
        mn = abs(a[i])
        m = a[i]
        im = i
ost = k - t
if ost % 2 != 0:
    a[im] *= (-1)
s2 = sum(a)
print(s2)","0.0"
"7aef5f21-3d8a-4711-9507-28bcb1b28522","n = int(input())
m = n ** 0.5
mm = int(m)
d = n - mm ** 2
res = mm * (mm + 1) * 2
if m == int(m):
    print(res)
else:
    t3 = ((d - 1)// mm) + 1
    t2 = (d - t3) 
    res = res + t3 * 3 + t2 * 2
    print(res)    


    ","0.0"
"af37658e-d46e-45db-9ee2-ea44a450db89","k, n, s, p = map(int,input().split())
x = n // s
if n % s != 0:
    x += 1
y = k * x
res = y // p
if y % p != 0:
    res += 1
print(res)
","0.0"
"027966cc-bba6-4e6a-83bf-ea3f730fb59d","n = int(input())
s = input()
p = set()
for j in range(len(s) - 1):
    p.add(s[j] + s[j + 1])
print(len(p))
","0.0"
"42d47feb-cba9-4d18-8ccc-2c20605db82d","
n, m = map(int, input().split())
print(n * (m // 2))","0.0"
"a4accdf7-f726-49d2-b19a-aeb590224402","def f(n):
    p = 1
    for i in range(1, n + 1):
        p *= i
    return p
n = int(input())
s = 0
x = n + 10 - 1
x1 = f(x) // (f(x - n) * f(n))
print(x1)

","0.0"
"a4accdf7-f726-49d2-b19a-aeb590224402","n = int(input())
a = [[0] * 11 for _ in range(n + 1)]
a[0][0] = 1
a[0] = [1] * 11
for k in range(1, n + 1):
   for i in range(1, 11):
      a[k][i] = a[k-1][i] + a[k][i-1]
   #print(a[k])
print(a[n][10])
","0.0"
"39674b7f-1b5d-40b8-aa5c-02f2ac4a2a4b","n = int(input())
#s0 = '####
#  #
#  #
#  #
####'
#s1 = '   #
 # #
#  #
   #
   #'  
s01 = '#### '
s02 = '#  # '
s03 = '#  # '
s04 = '#  # '
s05 = '#### '

s11 = '   # '
s12 = ' # # '
s13 = '#  # '
s14 = '   # '
s15 = '   # '

dva = bin(n)[2:]
p1 = p2 = p3 = p4 = p5 = ''
for i in dva:
    if i == '0': 
        p1 += s01 
        p2 += s02
        p3 += s03
        p4 += s04
        p5 += s05
    else:
        p1 += s11
        p2 += s12
        p3 += s13
        p4 += s14
        p5 += s15        
print(p1) 
print(p2)
print(p3)
print(p4)
print(p5)
","0.0"
"5177ddd2-f17e-4d0a-bf78-21fd90df671f","a, b = map(int, input().split()) 
x = list(map(int, input().split()))
count = 0
t = 1
for i in range(1, len(x)):
    if x[i-1] != x[i]:
        t += 1 
        count = max(count, t)
    else:
        t = 1
print(count)","0.0"
"a62a737e-0fbc-451b-9f67-2d7804740ccf","A=int(input())
B=int(input())
C=int(input())
print((C-A)//B)","0.0"
"c6175ed3-a33c-4dbf-8f71-6ef2f9e31411","n=int(input())
a,b,c=map(int,input().split())
d,e,f=map(int,input().split())
s=(n+1)*a*d+(n+1)*b*e+(n+1)*c*f
print(s)","0.0"
"c6175ed3-a33c-4dbf-8f71-6ef2f9e31411","n=int(input())
a,b,c=map(int,input().split())
d,e,f=map(int,input().split())
s=(n+1)*a*d+(n+1)*b*e+(n+1)*c*f
print(s)","0.0"
"a4b90367-4dc9-4d5f-84d6-56245ea5afc4","k,m,n=map(int,input().split())
if n%k==0 and n>=k:
    s=n//k
else:
    s=n//k+1
print(s*m*2)","0.0"
"c6175ed3-a33c-4dbf-8f71-6ef2f9e31411","n=int(input())
a,b,c=map(int,input().split())
d,e,f=map(int,input().split())
x=(n+1)*((a*d)+(b*e)+(c*f))
print(x)","0.0"
"c6175ed3-a33c-4dbf-8f71-6ef2f9e31411","n=int(input())
A,B,C=map(int,input().split())
D,E,F=map(int,input().split())
s=(n+1)*A*D+(n+1)*B*E+(n+1)*C*F
print(s)","0.0"
"c6175ed3-a33c-4dbf-8f71-6ef2f9e31411","n=int(input())
a,b,c=map(int,input().split())
d,e,f=map(int,input().split())
q=(n+1)*a*d+(n+1)*b*e+(n+1)*c*f
print(q)
","0.0"
"c6175ed3-a33c-4dbf-8f71-6ef2f9e31411","n=int(input())
a,b,c=map(int,input().split())
d,e,f=map(int,input().split())
s=(n+1)*a*d+(n+1)*b*e+(n+1)*c*f
print(s)
","0.0"
"c6175ed3-a33c-4dbf-8f71-6ef2f9e31411","n=int(input())
a,b,c=map(int, input().split())
d,e,f=map(int, input().split())
s=a*d+b*e+c*f
print(s*(n+1))
","0.0"
"c6175ed3-a33c-4dbf-8f71-6ef2f9e31411","n=int(input())
a,b,c=map(int,input().split())
d,e,f=map(int,input().split())
s=(n+1)*a*d+(n+1)*b*e+(n+1)*c*f
print(s)","0.0"
"c6175ed3-a33c-4dbf-8f71-6ef2f9e31411","n=int(input())
a,b,c=map(int,input().split())
d,e,f=map(int,input().split())
s=(n+1)*a*d+(n+1)*b*e+(n+1)*c*f
print(s)

","0.0"
"c6175ed3-a33c-4dbf-8f71-6ef2f9e31411","n=int(input())
a,b,c=map(int,input().split())
d,e,f=map(int,input().split())
S=(n+1)*a*d+(n+1)*b*e+(n+1)*c*f
print(S)
","0.0"
"c6175ed3-a33c-4dbf-8f71-6ef2f9e31411","n=int(input())
a,b,c=map(int,input().split())
d,e,f=map(int,input().split())
s=(n+1)*a*d+(n+1)*b*e+(n+1)*c*f
print(s)
","0.0"
"a4b90367-4dc9-4d5f-84d6-56245ea5afc4","k,m,n=map(int,input().split())
if k>=n:
    print(2*m)
else:
    if n%k==0:
        print(2*m*(n//k))
    else:
        print(2*m*(n//k+1))

","0.0"
"a4b90367-4dc9-4d5f-84d6-56245ea5afc4","k,m,n=map(int,input().split())
if k>=n:
    print(2*m)
else:
    if n%k==0:
        print(2*m*(n//k))
    else:
        print(2*m*(n//k+1))

","0.0"
"a4b90367-4dc9-4d5f-84d6-56245ea5afc4","k,m,n=map(int,input().split())
if k>=n:
    print(2*m)
else:
    if n%k==0:
        print(2*m*(n//k))
    else:
        print(2*m*(n//k+1))","0.0"
"a4b90367-4dc9-4d5f-84d6-56245ea5afc4","k,m,n=map(int,input().split())
if k>=n:
    print(2*m)
else:
    if n%k==0:
        print(2*m*(n//k))
    else:
        print(2*m*(n//k+1))","0.0"
"c270a9c3-67af-4113-8e7d-a7a94792013d","k=int(input())
for i in range(k):
    n,m=map(int,input().split())
    s=(1+m)//2*m
    if s>n:
        print(""NO"")
    else:
        print(""YES"")
","0.0"
"fb76df8b-f50e-400b-aa83-29cd6b682372","print((int(input())-1)*3)","0.0"
"c270a9c3-67af-4113-8e7d-a7a94792013d","k=int(input())
for i in range(k):
    n,m=map(int,input().split())
    s=(1+m)*m//2
    if s<=n:
        print('YES')
    else:
        print('NO')
        ","0.0"
"c270a9c3-67af-4113-8e7d-a7a94792013d","k=int(input())
for i in range(k):
    n,m=map(int,input().split())
    s=(1+m)*m//2
    if s<=n:
        print(""YES"")
    else:
        print(""NO"")
","0.0"
"c270a9c3-67af-4113-8e7d-a7a94792013d","k=int(input())
for i in range(k):
    n,m=map(int,input().split())
    s=(1+m)*m//2
    if s<=n:
        print('YES')
    else:
        print('NO')
","0.0"
"c270a9c3-67af-4113-8e7d-a7a94792013d","k=int(input())
for i in range(k):
    n,m=map(int,input().split())
    s=(1+m)*m//2
    if s<=n:
        print('YES')
    else:
        print('NO')
","0.0"
"c270a9c3-67af-4113-8e7d-a7a94792013d","k=int(input())
for i in range(k):
    n,m=map(int,input().split())
    s=(1+m)*m//2
    if s<=n:
        print('YES')
    else:
        print('NO')
","0.0"
"c270a9c3-67af-4113-8e7d-a7a94792013d","k=int(input())
for i in range(k):
    n,m=map(int,input().split())
    s=(1+m)*m//2
    if s<=n:
        print('YES')
    else:
        print('NO')
","0.0"
"c270a9c3-67af-4113-8e7d-a7a94792013d","k=int(input())
for i in range(k):
    n,m=map(int,input().split())
    s=(1+m)*m//2
    if s<=n:
        print('YES')
    else:
        print('NO')
","0.0"
"fb76df8b-f50e-400b-aa83-29cd6b682372","n=int(input())
print(3*(n-1))","0.0"
"fb76df8b-f50e-400b-aa83-29cd6b682372","n=int(input())
print(3*(n-1))
","0.0"
"fb76df8b-f50e-400b-aa83-29cd6b682372","n=int(input())
print(3*(n-1))
","0.0"
"fb76df8b-f50e-400b-aa83-29cd6b682372","n=int(input())
print(3*(n-1))
","0.0"
"fb76df8b-f50e-400b-aa83-29cd6b682372","n=int(input())
print(3*(n-1))","0.0"
"fb76df8b-f50e-400b-aa83-29cd6b682372","n=int(input())
print(3*(n-1))
","0.0"
"fb76df8b-f50e-400b-aa83-29cd6b682372","n=int(input())
print (3*(n-1))","0.0"
"fb76df8b-f50e-400b-aa83-29cd6b682372","n=int(input())
print(3*(n-1))
","0.0"
"fb76df8b-f50e-400b-aa83-29cd6b682372","n=int(input())
print(3*(n-1))
","0.0"
"4f8b54ae-eb36-4c4d-91da-256fc6302b91","a,b,c,d=map(int,input().split())
n1=a*60+b
n2=c*60+d
x=0
x=n2-n1
print(x//60,x%60)","0.0"
"4f8b54ae-eb36-4c4d-91da-256fc6302b91","a,b,c,d=map(int,input().split())
n1=a*60+b
n2=c*60+d
s=n2-n1
print(s//60,s%60)","0.0"
"4f8b54ae-eb36-4c4d-91da-256fc6302b91","a,b,c,d=map(int,input().split())
n1=a*60+b
n2=c*60+d
s=n2-n1
print(s//60,s%60)","0.0"
"4f8b54ae-eb36-4c4d-91da-256fc6302b91","a,b,c,d=map(int,input().split())
n1=a*60+b
n2=c*60+d
s=n2-n1
print(s//60,s%60)
","0.0"
"4f8b54ae-eb36-4c4d-91da-256fc6302b91","a,b,c,d=map(int,input().split())
n1=a*60+b
n2=c*60+d
s=n2-n1
print(s//60,s%60)
","0.0"
"4f8b54ae-eb36-4c4d-91da-256fc6302b91","a,b,c,d=map(int,input().split())
n1=a*60+b
n2=c*60+d
s=n2-n1
print(s//60,s%60)
","0.0"
"4f8b54ae-eb36-4c4d-91da-256fc6302b91","a,b,c,d=map(int,input().split())
n1=a*60+b
n2=c*60+d
s=n2-n1
print(s//60,s%60)","0.0"
"4f8b54ae-eb36-4c4d-91da-256fc6302b91","a,b,c,d=map(int,input().split())
n1=a*60+b
n2=c*60+d
s=n2-n1
print(s//60,s%60)
","0.0"
"4f8b54ae-eb36-4c4d-91da-256fc6302b91","a,b,c,d=map(int,input().split())
n1=a*60+b
n2=c*60+d
S=n2-n1
print(S//60,S%60)
","0.0"
"bb8bf498-d02f-48f2-a15a-f8cc813a5c5f","a1,b1=map(int,input().split())
a2,b2=map(int,input().split())
a3,b3=map(int,input().split())
print(a1-a3,b1-b2)
","0.0"
"bb8bf498-d02f-48f2-a15a-f8cc813a5c5f","a1,b1=map(int,input().split())
a2,b2=map(int,input().split())
a3,b3=map(int,input().split())
print(a1-a3,b1-b2)","0.0"
"bb8bf498-d02f-48f2-a15a-f8cc813a5c5f","a1,b1=map(int,input().split())
a2,b2=map(int,input().split())
a3,b3=map(int,input().split())
print(a1-a3,b1-b2)
","0.0"
"bb8bf498-d02f-48f2-a15a-f8cc813a5c5f","a1,b1=map(int,input().split())
a2,b2=map(int,input().split())
a3,b3=map(int,input().split())
print(a1-a3,b1-b2)
","0.0"
"bb8bf498-d02f-48f2-a15a-f8cc813a5c5f","a1,b1=map(int,input().split())
a2,b2=map(int,input().split())
a3,b3=map(int,input().split())
print(a1-a3,b1-b2)","0.0"
"bb8bf498-d02f-48f2-a15a-f8cc813a5c5f","a1,b1=map(int,input().split())
a2,b2=map(int,input().split())
a3,b3=map(int,input().split())
print(a1-a3,b1-b2)","0.0"
"bb8bf498-d02f-48f2-a15a-f8cc813a5c5f","a1,b1=map(int,input().split())
a2,b2=map(int,input().split())
a3,b3=map(int,input().split())
print(a1-a3,b1-b2)","0.0"
"bb8bf498-d02f-48f2-a15a-f8cc813a5c5f","a1,b1=map(int,input().split())
a2,b2=map(int,input().split())
a3,b3=map(int,input().split())
print(a1-a3,b1-b2)
","0.0"
"bb8bf498-d02f-48f2-a15a-f8cc813a5c5f","a1,b1=map(int,input().split())
a2,b2=map(int,input().split())
a3,b3=map(int,input().split())
print(a1-a3,b1-b2)
","0.0"
"bb8bf498-d02f-48f2-a15a-f8cc813a5c5f","a1,b1=map(int,input().split())
a2,b2=map(int,input().split())
a3,b3=map(int,input().split())
print(a1-a3,b1-b2)
","0.0"
"fb76df8b-f50e-400b-aa83-29cd6b682372","n=int(input())
print(3*(n-1))","0.0"
"4f8b54ae-eb36-4c4d-91da-256fc6302b91","a,b,c,d=map(int,input().split())
n1=a*60+b
n2=c*60+d
s=n2-n1
print(s//60,s%60)
","0.0"
"6dcac6bd-9973-47eb-8912-187a2999dc6b","n = int(input())
m = set()
l = list(map(int,input().split()))
for i in l:
    m.add(i)
l.append(0)
for i in range(len(l)-1):
    for j in range(1,len(l)-1):
        if abs(l[i]-l[j]) != 0:
            if abs(l[i]-l[j]) not in l:
                l.append(abs(l[i]-l[j]))
            m.add(abs(l[i]-l[j]))
print(len(m))","0.0"
"ae532d4a-9564-46c8-a30b-9f1fe7f95bf9","sau,che,ket = map(int,input().split())
n = int(input())
l = list()
m = 1
for i in range(n):
    l.append(input())
for i in l:
    if i == 'sausage':
        m*=sau
    elif i == 'cheese':
        m*=che
    else:
        m*=ket
print(m)","0.0"
"5986f14f-59c5-428e-84aa-553175c8bdb9","a, b=map(int, input().split())
n=int(input())
if a*b>=9*n:
    print('NO')
    print(0)
else:
    print('YES')
    print(n-a*b//9)","0.0"
"43690a23-0ff2-4f9b-8410-ec7917ae05e3","n=int(input())
sp=list(map(int, input().split()))
print(sum(map(lambda t: t-min(sp), sp)))","0.0"
"5177ddd2-f17e-4d0a-bf78-21fd90df671f","n, k=map(int, input().split())
sp=list(map(int, input().split()))
res=0
c=0
mx=0
for i in range(len(sp)-1):
    if sp[i]!=sp[i+1]:
        c+=1
        mx=max(mx, c+1)
    else:
        mx=max(mx, c+1)
        c=0
print(mx)","0.0"
"ae532d4a-9564-46c8-a30b-9f1fe7f95bf9","s1, s2, s3=map(int, input().split())
n=int(input())
res=1
for _ in range(n):
    cur=input()
    if cur=='sausage':
        res*=s1
    if cur=='cheese':
        res*=s2
    if cur=='ketchup':
        res*=s3
print(res)","0.0"
"a62a737e-0fbc-451b-9f67-2d7804740ccf","A=int(input())
B=int(input())
C=int(input())
Sh=(C-A)//B
print(Sh)","0.0"
"430aade4-55bd-42b3-9586-1389412540a7","n=int(input())
k=0
while n>1:
    if n%2==0:
        k+=1
        n=n//2
    else:
        k+=1
        n=(n+1)//2
print(k)","0.0"
"4495049c-7679-4fd3-804c-70c67ad5a1dc","a, b= map (int, input (). split ())
if a>0:
    c=1
else : c=0
if b>0:
    d=1
else : d=0
if  c==d:
    print (a+b)
else:
    print (a-b)
","0.0"
"4495049c-7679-4fd3-804c-70c67ad5a1dc","a, b= map (int, input (). split ())
if a>0:
    c=1
else : c=0
if b>0:
    d=1
else : d=0
if  c==d:
    print (a+b)
else:
    print (a-b)
","0.0"
"431be734-39e6-4f58-aec7-61e67c8ee1b5","g=int(input())
if g//4==g/4 and g//100!=g/100 and g//400==g/400:
    print('YES')
else:
    print('NO')","0.0"
"4495049c-7679-4fd3-804c-70c67ad5a1dc","a, b= map (int, input (). split ())
if a>0:
    c=1
else : c=0
if b>0:
    d=1
else : d=0
if  c==d:
    print (a+b)
else:
    print (a-b)
","0.0"
"84b45b43-cc73-4b14-ab6e-8b970134fb03","n, m=map(int, input().split())
c=1
while True:
    if c==n:
        if m>=c:
            m-=c
        else:
            print(m)
        c=1 
        
    elif m>=c:
        m-=c
        c+=1
    
    else:
        print(m)
        break
    ","0.0"
"84b45b43-cc73-4b14-ab6e-8b970134fb03","n, m=map(int, input().split())
c=1
while True:
    if c==n:
        if m>=c:
            m-=c
        else:
            print(m)
            break
        c=1 
        
    elif m>=c:
        m-=c
        c+=1
    
    else:
        print(m)
        break
    ","0.0"
"4495049c-7679-4fd3-804c-70c67ad5a1dc","i = input()
a,b = i.split("" "")
a = int(a)
b = int(b)
if(a >= 0 and b >= 0 or a <= 0 and b <= 0):
    print(a+b)
else:
    print(a-b)","0.0"
"db8534b0-ffa9-4c1b-9d86-4797814b3074","i = input()
a = i.split("" "")

print(len(a))","0.0"
"5986f14f-59c5-428e-84aa-553175c8bdb9","a, b = map(int, input().split())
n = int(input())
if a*b >= n*9:
    print(""NO"")
else:
    print(""YES"")
print(n - (a*b)//9)","0.0"
"5986f14f-59c5-428e-84aa-553175c8bdb9","a, b = map(int, input().split())
n = int(input())
if a*b >= n*9:
    print(""NO"")
    print(0)
else:
    print(""YES"")
    print(n - (a*b)//9)
","0.0"
"5986f14f-59c5-428e-84aa-553175c8bdb9","a, b = map(int, input().split())
n = int(input())
if a*b//9>=n:
	print('NO')
	print(0)
else:
	print('YES')
	print(n-(a*b//9))","0.0"
"0f42de72-e8d1-4f41-8797-90a6cd184af9","q,w,e=map(int, input().split())
print(q*3+w*5+e*12)","0.0"
"0f42de72-e8d1-4f41-8797-90a6cd184af9","x, y, z = map(int, input().split())
xp = 3
yp = 5
zp = 12
print(x * xp + y * yp + z * zp)
","0.0"
"0f42de72-e8d1-4f41-8797-90a6cd184af9","a,b,c = map(int, input().split())
print(a*3 + b*5 + c*12)","0.0"
"0f42de72-e8d1-4f41-8797-90a6cd184af9","x,y,z=[int(i) for i in input().split()]
print(x*3+y*5+z*12)","0.0"
"af37658e-d46e-45db-9ee2-ea44a450db89","k, n, s, p = map(int, input().split())
if n%s==0:
    q=n//s
else:
    q=n//s+1
q*=k
if q%p==0:
    print(q//p)
else:
    print(q//p+1)","0.0"
"af37658e-d46e-45db-9ee2-ea44a450db89","from math import ceil
k, n, s, p = map(int, input().split())

print(ceil((k * ceil(n / s)) / p))","0.0"
"0f42de72-e8d1-4f41-8797-90a6cd184af9","x, y, z = map(int, input().split())
print(x * 3 + y * 5 + z * 12)
","0.0"
"c2081cad-a682-43e2-8960-081ef8963a37","a, b = map(int, input().split())
print(min(a, b), (max(a, b) - min(a, b)) // 2)
","0.0"
"0f42de72-e8d1-4f41-8797-90a6cd184af9","x, y, z = map(int, input().split())
print(x * 3 + y * 5 + z * 12)
","0.0"
"0f42de72-e8d1-4f41-8797-90a6cd184af9","X,Y,Z = map(int,input().split())
print(3*X+5*Y+12*Z)
","0.0"
"0f42de72-e8d1-4f41-8797-90a6cd184af9","x, y, z = map(int, input().split())
print(3 * x + 5 * y + 12 * z)","0.0"
"0f42de72-e8d1-4f41-8797-90a6cd184af9","xyz = list(map(int, input().split()))
x = xyz[0] * 3
y = xyz[1] * 5
z = xyz[2] * 12
print(x+y+z)","0.0"
"af37658e-d46e-45db-9ee2-ea44a450db89","k, n, s, p = map(int,input().split())
print(((n+s-1)//s * k +p-1)// p)","0.0"
"0f42de72-e8d1-4f41-8797-90a6cd184af9","x,y,z=map(int, input().split())
print(x*3+y*5+z*12)
","0.0"
"0f42de72-e8d1-4f41-8797-90a6cd184af9","a = list(map(int,input().split()))
summa=a[0]*3+a[1]*5+a[2]*12
print(summa)
","0.0"
"770952ee-5595-4690-9f1a-a172955624fa","n = int(input())
a = list(map(int, input().split()))
s = {}
for i in a:
    if i not in s:
        s[i]=1
    else:
        s[i]+=1
print(max(s.values()))","0.0"
"0f42de72-e8d1-4f41-8797-90a6cd184af9","print(3 * (lst := list(map(int, input().split())))[0] + 5 * lst[1] + 12 * lst[2])","0.0"
"0f42de72-e8d1-4f41-8797-90a6cd184af9","x, y, z= map (int, input (). split ())
print (3*x+5*y+12*z)
","0.0"
"0f42de72-e8d1-4f41-8797-90a6cd184af9","costCake = 3
costMarshmallow = costCake + 2
costChocolate = costMarshmallow +7

userInput = input()
x,y,z = userInput.split("" "")
x,y,z = int(x),int(y),int(z)

result = x * costCake + y * costMarshmallow + z * costChocolate
print(result)","0.0"
"0f42de72-e8d1-4f41-8797-90a6cd184af9","X, Y, Z=map(int, input().split())
print(3*X+5*Y+12*Z)","0.0"
"0f42de72-e8d1-4f41-8797-90a6cd184af9","a = input().split()
h = int(a[0])*3 + int(a[1])*5 + int(a[2])*12
print(h)","0.0"
"0f42de72-e8d1-4f41-8797-90a6cd184af9","x,y,z=map(int,input().split())
s=x*3+y*5+z*12
print(s)
","0.0"
"0f42de72-e8d1-4f41-8797-90a6cd184af9","x, y, z =list(map(int, input().split()))
print(x*3+y*5+z*12)","0.0"
"770952ee-5595-4690-9f1a-a172955624fa","from collections import Counter

input()
a = list(map(int, input().split()))
print(max(Counter(a).values()))","0.0"
"af37658e-d46e-45db-9ee2-ea44a450db89","k,n,s,p=map(int,input().split())
a=n//s
if n%s>0:
    a+=1
a*=k
b=a//p
if a%p>0:
    b+=1
print(b)","0.0"
"af37658e-d46e-45db-9ee2-ea44a450db89","k, n, s, p = map(int, input().split())
a = n // s
if n % s > 0:
    a += 1
a *= k
b = a // p
if a % p > 0:
    b += 1
print (b)","0.0"
"11d7d14b-eb4a-4dd7-94c1-67a03264c424","n = int(input())
nums = list(map(int, input().split()))
if sum(nums) % 2 == 0:
    print(sum(nums))
else:
    m = 1000000000000
    for num in nums:
        if num % 2 == 1 and m > num:
            m = num
    print(sum(nums) - m)
","0.0"
"af37658e-d46e-45db-9ee2-ea44a450db89","import math

k, n, s, p = [int(i) for i in input().split()]


a = math.ceil(n / s)
a = a * k
print(math.ceil(a / p))","0.0"
"af37658e-d46e-45db-9ee2-ea44a450db89","from math import ceil
k,n,s,p=map(int,input().split())
print(ceil(ceil(n/s)*k/p))","0.0"
"0f42de72-e8d1-4f41-8797-90a6cd184af9","x,y,z=map(int,input().split())
x1=x*3
y1=5*y
z1=12*z
print(x1+y1+z1)
","0.0"
"770952ee-5595-4690-9f1a-a172955624fa","from collections import Counter
n = int(input())
arr = list(map(int,input().split()))
d=Counter(arr)

print(max(d.values()))","0.0"
"af37658e-d46e-45db-9ee2-ea44a450db89","k, n, s, p = map(int, input().split())
l = n//s + 1 if n / s > n//s else n//s
answ = k*l//p +1 if k*l/p > k*l//p else k*l//p
print(answ)
","0.0"
"af37658e-d46e-45db-9ee2-ea44a450db89","k, n, s, p = map(int, input().split())
vsego = k *n
s_pachki = s * p
if n%s == 0:
    na_det = n//s
else:
    na_det = n//s +1
l = (na_det * k)
if l%p == 0:
    print(l//p)
else:
    print(l//p +1)","0.0"
"af37658e-d46e-45db-9ee2-ea44a450db89","k, n, s, p = map(int, input().split())
if n % s == 0:
    l = n // s
else:
    l = n // s + 1
need = k * l
if need % p == 0:
    print(need // p)
else:
    print(need // p + 1)
","0.0"
"0f42de72-e8d1-4f41-8797-90a6cd184af9","costCake = 3
costMarshmallow = costCake + 2
costChocolate = costMarshmallow +7

userInput = input()
x,y,z = userInput.split("" "")
x,y,z = int(x),int(y),int(z)

result = x * costCake + y * costMarshmallow + z * costChocolate
print(result)","0.0"
"0f42de72-e8d1-4f41-8797-90a6cd184af9","def calculate_total_cost(x, y, z):
  """"""ÐÑÑÐ¸ÑÐ»ÑÐµÑ Ð¾Ð±ÑÑÑ ÑÑÐ¾Ð¸Ð¼Ð¾ÑÑÑ Ð¿Ð¾ÐºÑÐ¿ÐºÐ¸, ÑÑÐ¸ÑÑÐ²Ð°Ñ ÑÐµÐ½Ñ Ð¿Ð¸ÑÐ¾Ð¶Ð½ÑÑ, Ð·ÐµÑÐ¸ÑÐ° Ð¸ ÑÐ¾ÐºÐ¾Ð»Ð°Ð´Ð°.""""""
  cake_price = 3  
  marshmallow_price = cake_price + 2  
  chocolate_price = marshmallow_price + 7  

  total_cost = x * cake_price + y * marshmallow_price + z * chocolate_price
  return total_cost


x, y, z = map(int, input().split())


total_cost = calculate_total_cost(x, y, z)
print(total_cost)
","0.0"
"e02095cd-3f62-4005-a067-a9da53d342bb","n = int(input())
a = list(map(int, input().split()))
b = list(map(int, input().split()))
sa = 0
sb = 0
s = 0
for i in range(n):
    if a[i]==b[i] and sa==sb:
        sa+=a[i]
        sb+=b[i]
        s+=a[i]
    else:
        sa += a[i]
        sb += b[i]
print(s)","0.0"
"11d7d14b-eb4a-4dd7-94c1-67a03264c424","a = int(input())
b = list(map(int, input().split()))
c = []
s = 0
for x in range(a):
    if b[x] % 2 == 0:
        s += b[x]
    else:
        c.append(b[x])
c = sorted(c)
if len(c) % 2 == 0:
    s += sum(c)
else:
    s += sum(c[1:])
print(s)","0.0"
"0f42de72-e8d1-4f41-8797-90a6cd184af9","a = input()
b = a.split(' ')
x = 3
y = 5
z = 12
print(int(int(b[0])*x)+int(int(b[1])*y)+int(int(b[2])*z))","0.0"
"0f42de72-e8d1-4f41-8797-90a6cd184af9","a = list(map(int,input().split()))
print(a[0]*3+a[1]*5+a[2]*12)","0.0"
"770952ee-5595-4690-9f1a-a172955624fa","n=int(input())
x=list(map(int,input().split()))
s=set(x)
ans=[]
for i in s:
    ans.append(x.count(i))
print(max(ans))
","0.0"
"0f42de72-e8d1-4f41-8797-90a6cd184af9","def calculate_total_cost(x, y, z):

  cake_price = 3  
  marshmallow_price = cake_price + 2  
  chocolate_price = marshmallow_price + 7 

  total_cost = x * cake_price + y * marshmallow_price + z * chocolate_price
  return total_cost

x, y, z = map(int, input().split())

total_cost = calculate_total_cost(x, y, z)
print(total_cost)
","0.0"
"e02095cd-3f62-4005-a067-a9da53d342bb","n = int(input())
a = list(map(int, input().split()))
b = list(map(int, input().split()))

s1 = 0
s2 = 0
ans = 0
for i in range(n):
    s1 += a[i]
    s2 += b[i]

    if s1 == s2 and a[i] == b[i]:
        ans += a[i]
print(ans)","0.0"
"0f42de72-e8d1-4f41-8797-90a6cd184af9","x,y,z=map(int, input().split())
x1=x*3
y1=3*y+y*2
z1=z*(3+2)+z*7
print(x1+y1+z1)","0.0"
"770952ee-5595-4690-9f1a-a172955624fa","n=int(input())
a=list(map(int,input().split()))
b=set(a)
b=list(b)
mx=0
for i in range(len(b)):
    c=a.count(b[i])
    if c>mx:
        mx=c
print(mx)","0.0"
"770952ee-5595-4690-9f1a-a172955624fa","input()
a = [int(j) for j in input().split()]
dict1 = {}
for j in a:
    if j in dict1:
        dict1[j] += 1
    else:
        dict1[j] = 1
print(max(dict1.values()))","0.0"
"0f42de72-e8d1-4f41-8797-90a6cd184af9","x,y, z=map(int,input().split())
a=0
a=x*3+y*(3+2)+z*(3+2+7)
print(a)","0.0"
"0f42de72-e8d1-4f41-8797-90a6cd184af9","s=input()
a=list(map(int, s.split()))
b=a[0]*3+a[1]*5+a[2]*12
print(b)","0.0"
"af37658e-d46e-45db-9ee2-ea44a450db89","from math import ceil

k, n, s, p = map(int, input().split())
print(ceil(ceil(n / s) * k / p))
","0.0"
"af37658e-d46e-45db-9ee2-ea44a450db89","from math import ceil
a, b, c, d = map(int, input().split())

print(ceil((ceil(b/c)*a)/d))","0.0"
"0f42de72-e8d1-4f41-8797-90a6cd184af9","x, y, z=map(int,input().split())
a=3
b=a+2
c=a+2+7
d=x*a
e=y*b
f=z*c
s=d+e+f
print(s)","0.0"
"af37658e-d46e-45db-9ee2-ea44a450db89","k, n, s, p =map(int, input().split())

d = ((n-1)//s)+1
dk = d*k
dkp = ((dk-1)//p)+1
print(dkp)","0.0"
"af37658e-d46e-45db-9ee2-ea44a450db89","import math
k, n, s, p = map(int, input().split())
l = math.ceil(n/s)
kl = k * l
pa = math.ceil(kl / p)
print(pa)","0.0"
"0f42de72-e8d1-4f41-8797-90a6cd184af9","a, s, d = map(int, input().split())
print(a*3+s*5+d*12)","0.0"
"af37658e-d46e-45db-9ee2-ea44a450db89","k, n, s, p = map(int, input().split())
a = n//s + int(n/s > n//s)
b = a*k
c = b//p + int(b/p > b//p)
print(c)","0.0"
"0f42de72-e8d1-4f41-8797-90a6cd184af9","costCake = 3
costMarshmallow = costCake + 2
costChocolate = costMarshmallow +7

userInput = input()
x,y,z = userInput.split("" "")
x,y,z = int(x),int(y),int(z)

result = x * costCake + y * costMarshmallow + z * costChocolate
print(result)
","0.0"
"11d7d14b-eb4a-4dd7-94c1-67a03264c424","n = int(input())
xyz = list(map(int, input().split()))
t = 0
nech = []
ch = []
for i in xyz:
    if i >= 0:
        if i % 2 == 0:
            ch.append(i)
            t += i
        else:
            nech.append(i)
if len(nech) % 2 == 0:
    for i in nech:
        t += i
else:
    nech.remove(min(nech))
    for i in nech:
        t += i
print(t)","0.0"
"11d7d14b-eb4a-4dd7-94c1-67a03264c424","x = int(input())
l = list(map(int, input().split()))
summ = 0
l1 = []
for i in l:
    if i % 2 == 0:
        summ += i
    else:
        l1.append(i)

while len(l1) != 1:
    summ += max(l1)
    del l1[l1.index(max(l1))]

if summ % 2 == 1:
    summ += max(l1)

print(summ)","0.0"
"af37658e-d46e-45db-9ee2-ea44a450db89","from math import ceil
k, n, s, p = map(int, input().split())
print(ceil(ceil(n/s)*k/p))","0.0"
"a40047cc-77a1-4a37-9e28-a61947b07df8","n = int(input())
a = list(map(int, input().split()))
b = list(map(int, input().split()))
a.sort()
b.sort()
s = 0
for i in range(n):
    s+=abs(a[i]-b[i])
print(s)","0.0"
"af37658e-d46e-45db-9ee2-ea44a450db89","k, n, s, p = map(int, input().split())
pap = n//s+(1 if n%s!=0 else 0)
print((k*pap)//p+(1 if (pap*k)%p!=0 else 0))","0.0"
"770952ee-5595-4690-9f1a-a172955624fa","n = int(input())
data = {}
for el in input().split():
    num = int(el)
    try:
        data[num] += 1
    except KeyError:
        data[num] = 1
    
print(max(data.values()))","0.0"
"af37658e-d46e-45db-9ee2-ea44a450db89","k, n, s, p = [int(i) for i in input().split()]
ls = 0
if n % s == 0:
    ls = n // s
else:
    ls = n // s + 1
if ls * k % p == 0:
    print(ls * k // p)
else:
    print(ls * k // p + 1)","0.0"
"0f42de72-e8d1-4f41-8797-90a6cd184af9","def calculate_total_cost(x, y, z):

  cake_price = 3  
  marshmallow_price = cake_price + 2  
  chocolate_price = marshmallow_price + 7  

  total_cost = x * cake_price + y * marshmallow_price + z * chocolate_price
  return total_cost

x, y, z = map(int, input().split())


total_cost = calculate_total_cost(x, y, z)
print(total_cost)
","0.0"
"770952ee-5595-4690-9f1a-a172955624fa","d = dict()
n = int(input())
data = list(map(int,input().split()))
maxx = 0
for i in data:
    if i not in d:
        d[i] = 1
        if d[i] > maxx:
            maxx = d[i]
    else:
        d[i] += 1
        if d[i] > maxx:
            maxx = d[i]
print(maxx)
","0.0"
"770952ee-5595-4690-9f1a-a172955624fa","def intt (a):
    for i in range (len(a)):
        a[i] = int(a[i])
    return a


n = int(input())
a = [0] * 100
b = intt(input().split())
for i in range (n):
    a[b[i] - 1] += 1
print(max(a))","0.0"
"11d7d14b-eb4a-4dd7-94c1-67a03264c424","a=int(input())
s=[int(i) for i in input().split()]
minim=max(s)
if sum(s)%2==1:
    for i in s:
        if i<minim and i%2==1:
            minim=i
    s.remove(minim)
print(sum(s))","0.0"
"af37658e-d46e-45db-9ee2-ea44a450db89","k,n, s, p = map(int,input().split())

print(((n + s - 1)//s * k + p - 1)//p)","0.0"
"0f42de72-e8d1-4f41-8797-90a6cd184af9","a = input()
b = a.split(' ')
x = 3
y = 5
z = 12
print(int(int(b[0])*x)+int(int(b[1])*y)+int(b[2])*z)","0.0"
"0f42de72-e8d1-4f41-8797-90a6cd184af9","p = list(input().split())
X = int(p[0]) * 3
Y = int(p[1]) * (3 + 2)
Z = int(p[2]) * (3 + 2 + 7)
print(X + Y + Z)","0.0"
"e02095cd-3f62-4005-a067-a9da53d342bb","n = int(input())
a= list(map(int,input().split()))
b = list(map(int,input().split()))

ans = 0
s1, s2 = 0, 0
for i in range(n):
    if s1 == s2 and a[i]==b[i]:
        ans+=a[i]
    s1 += a[i]
    s2 += b[i]
print(ans)","0.0"
"af37658e-d46e-45db-9ee2-ea44a450db89","l = [int(i) for i in input().split()]
k = l[0]
n = l[1]
s = l[2]
p = l[3]
if n%s == 0:
    m = n//s
else:
    m = n//s + 1
d = m*k
if d%p == 0:
    print(d//p)
else:
    print(d//p+1)
","0.0"
"a40047cc-77a1-4a37-9e28-a61947b07df8","n = int(input())
a = list(map(int, input().split()))
b = list(map(int, input().split()))

a.sort()
b.sort()

print(sum([abs(i - j) for i, j in zip(a, b)]))","0.0"
"af37658e-d46e-45db-9ee2-ea44a450db89","from math import ceil
k, n, s, p=map(int, input().split(' '))
q=ceil(n/s)*k
print(ceil(q/p))
","0.0"
"770952ee-5595-4690-9f1a-a172955624fa","n = int(input())
pisechki = list(map(int,input().split()))
kaka = dict()
for i in pisechki:
    if i not in kaka.keys():
        kaka[i] = 1
        continue
    kaka[i] += 1
print(max(kaka.values()))","0.0"
"0f42de72-e8d1-4f41-8797-90a6cd184af9","x,y,z = map(int,input().split())
print(3*x + 5*y + 12*z)
","0.0"
"7d8fcbed-1f16-4d19-8a17-6560267bc64c","one, every, back = map(int, input().split())
es = every
k = 0
t = True
while every > 0:
    if k:
        every += back
        if es < every:
            print('NO')
            t = False
            break
    k += 1
    every -= one
if t:
    print(k)
","0.0"
"e02095cd-3f62-4005-a067-a9da53d342bb","a = int(input())
b = [int(i) for i in input().split()]
c = [int(i) for i in input().split()]
su1 = 0
su2 = 0
sum1 = 0
for i in range(a):
    if su1 == su2 and b[i] == c[i]:
        sum1 += b[i]
    else:
        su1 += b[i]
        su2 += c[i]
print(sum1)","0.0"
"af37658e-d46e-45db-9ee2-ea44a450db89","import math

k, n, s, p = map(int, input().split())
print(math.ceil((math.ceil(n / s) * k) / p))","0.0"
"11d7d14b-eb4a-4dd7-94c1-67a03264c424","n = int(input())
nums = list(map(int, input().split()))
nums_nch = [i for i in nums if i%2]
print(sum(nums) - min(nums_nch) if sum(nums) % 2 else sum(nums))","0.0"
"027966cc-bba6-4e6a-83bf-ea3f730fb59d","n = int(input())
a = input()
s = set()
for i in range(n-1):
    s.add(a[i]+a[i+1])
print(len(s))","0.0"
"770952ee-5595-4690-9f1a-a172955624fa","n = int(input())
a = [int(i) for i in input().split()]
l = []
for i in a:
    l.append(a.count(i))
print(max(l))","0.0"
"af37658e-d46e-45db-9ee2-ea44a450db89","import math
i = input()
i = list(map(int, i.split()))
l = math.ceil(math.ceil(i[1]/i[2]) * i[0] /i[3])
print(l)","0.0"
"af37658e-d46e-45db-9ee2-ea44a450db89","import math
k,n,s,p=map(int,input().split())
a=math.ceil(n/s)
a*=k
a=math.ceil(a/p)
print(a)
","0.0"
"af37658e-d46e-45db-9ee2-ea44a450db89","from math import ceil
k, n, s, p = map(int, input().split())
print(ceil(ceil(n / s) * k / p))","0.0"
"af37658e-d46e-45db-9ee2-ea44a450db89","k, n, s, p = map(int, input().split())
m = 0
if n%s == 0: m = n//s
else: m = n//s + 1
if (k * m) % p == 0: print(k*m//p)
else: print(k*m//p + 1)","0.0"
"af37658e-d46e-45db-9ee2-ea44a450db89","k, n, s, p = map(int,input().split())
m=n//s
if n%s==0:
    m=m
else:
    m=m+1
v=m*k
l=v//p
if v%p==0:
    l=l
else:
    l=l+1
print(l)
","0.0"
"770952ee-5595-4690-9f1a-a172955624fa","n = int(input())
a = list(map(int, input().split()))
m = -float('inf')
for x in range(len(a)):
    if a.count(a[x]) > m:
        m = a.count(a[x])
print(m)
","0.0"
"6824fb27-2339-421d-85db-60758b59cddc","q=int(input())
w=1
e=0
while w!=q:
    if w*5<q:
        w=w*5
    elif w*2<q:
        w=w*2
    else:
        w=w+1
    e=e+1
print(e)

","0.0"
"770952ee-5595-4690-9f1a-a172955624fa","n = int(input())
chl = [int(i) for i in input().split()]
print(chl.count(max(chl)))
","0.0"
"a40047cc-77a1-4a37-9e28-a61947b07df8","n = int(input())

b = list(map(int,input().split()))
g = list(map(int,input().split()))

b.sort()
g.sort()

ans = sum([abs(x-y) for x, y in zip(b, g)])
print(ans)","0.0"
"853bea78-6aa0-4fcf-8c5a-5f278603c518","n, k, x, y = int(input()), int(input()), int(input()), int(input())
print(k * x + (n - k) * y)
","0.0"
"af37658e-d46e-45db-9ee2-ea44a450db89","k, n, s, p = map(int, input().split())
if n%s==0:
    c=0
else:
    c=1
a = n//s+c
b = a*k
if b%p==0:
    d = 0
else:
    d=1
print(b//p+d)","0.0"
"e02095cd-3f62-4005-a067-a9da53d342bb","n=int(input())
a=list(map(int,input().split()))
b=list(map(int,input().split()))
m=0
k=0
f=0
for i in range(len(a)):
    if k==f and a[i]==b[i]:
        m+=a[i]
    k+=a[i]
    f+=b[i]
print(m)","0.0"
"af37658e-d46e-45db-9ee2-ea44a450db89","k, n, s, p = map(int, input().split(' '))
if n % s != 0:
    x = (n // s) + 1
else:
    x = n // s
y = k * x
if y % p != 0:
    print((y // p) + 1)
else:
    print(y // p)","0.0"
"853bea78-6aa0-4fcf-8c5a-5f278603c518","n, k, x, y = int(input()), int(input()), int(input()), int(input())
if n >= k:
    print(k * x + (n - k) * y)
else:
    print(n * x)
","0.0"
"a40047cc-77a1-4a37-9e28-a61947b07df8","a = int(input())
b = [int(i) for i in input().split()]
c = [int(i) for i in input().split()]
b.sort()
c.sort()
sum1 = 0
for i in range(a):
    sum1 += abs(b[i] - c[i])
print(sum1)","0.0"
"11d7d14b-eb4a-4dd7-94c1-67a03264c424","n = int(input())
k = list(map(int,input().split()))
a = []
b = []
S = 0
for i in range(n):
    if k[i]%2==0:
        a.append(k[i])
    else: b.append(k[i])
for i in range(len(b)):
    S += b[i]
if len(b)%2==1:
    S -= min(b)
for i in range(len(a)):
    S += a[i]
print(S)","0.0"
"e02095cd-3f62-4005-a067-a9da53d342bb","n = int(input())
pisechki1 = list(map(int,input().split()))
pisechki2 = list(map(int,input().split()))
c1 = 0
c2 = 0
rast_titanickov = 0
for i in range(n):
    if pisechki2[i] == pisechki1[i] and c1 == c2:
        rast_titanickov += pisechki2[i]
    c1 += pisechki1[i]
    c2 += pisechki2[i]
print(rast_titanickov)","0.0"
"c2081cad-a682-43e2-8960-081ef8963a37","n, m = map(int, input().split())
print(min(n,m), (max(n,m)-min(n,m))//2)","0.0"
"af37658e-d46e-45db-9ee2-ea44a450db89","k,n,s,p = map(int,input().split())

h1 = n//s
if n % s != 0:
    h1 += 1
l = h1*k
if l % p == 0:
    print(l//p)
else:
    print(l//p+1)","0.0"
"e02095cd-3f62-4005-a067-a9da53d342bb","n = int(input())
a = list(map(int, input().split()))
b = list(map(int, input().split()))
cnt_a = 0
cnt_b = 0
cnt = 0
for i in range(n):
    if cnt_a == cnt_b:
        cnt_a += a[i]
        cnt_b += b[i]
        if cnt_a == cnt_b:
            cnt += a[i]
    else:
        cnt_a += a[i]
        cnt_b += b[i]
print(cnt)","0.0"
"af37658e-d46e-45db-9ee2-ea44a450db89","import math
k, n, s, p = map(int, input().split())
a=math.ceil(n/s) #listov na pacana
b=a*k #na vseh listov
print(math.ceil(b/p))
","0.0"
"e02095cd-3f62-4005-a067-a9da53d342bb","def intt (a):
    for i in range (len(a)):
        a[i] = int(a[i])
    return a
def spisok ():
    return intt(input().split())


n = int(input())
a = spisok()
b = spisok()
aa = 0
bb = 0
c = 0
for i in range (n):
    aa += a[i]
    bb += b[i]
    if aa == bb and a[i] == b[i]:
        c += a[i]
print (c)","0.0"
"af37658e-d46e-45db-9ee2-ea44a450db89","import math
k,n,s,p= map(int,input().split())
kl = math.ceil(n/s)
print(math.ceil((kl*k)/p))","0.0"
"770952ee-5595-4690-9f1a-a172955624fa","a = int(input())
n = list(map(int, input().split()))

t=0
for i in range(a):
    t = max(t, n.count(n[i]))
print(t)","0.0"
"770952ee-5595-4690-9f1a-a172955624fa","n = int(input())
s = input().split()
c = 0
for i in range(n):
    if s.count(s[i]) > c:
        c = s.count(s[i])
print(c)","0.0"
"11d7d14b-eb4a-4dd7-94c1-67a03264c424","n = int(input())
a = input().split()
x = 0
s = 1000000001
for i in range(n):
    x += int(a[i])
    if int(a[i])%2 == 1 and int(a[i]) < s:
        s = int(a[i])
if x%2 == 1:
    print(x-s)
else:
    print(x)","0.0"
"770952ee-5595-4690-9f1a-a172955624fa","n = int(input())
lst = list(map(int, input().split()))
print(lst.count(max(lst, key=lambda x: lst.count(x))))","0.0"
"853bea78-6aa0-4fcf-8c5a-5f278603c518","N = int(input())
K = int(input())
X = int(input())
Y = int(input())
if K >= N:
    s = N*X
else:
    s = (N-K)*Y + K*X
print(s)","0.0"
"770952ee-5595-4690-9f1a-a172955624fa","input()
L = list(map(int, input().split()))
print(max(L.count(x) for x in set(L)))
","0.0"
"af37658e-d46e-45db-9ee2-ea44a450db89","k,n,s,p = list(map(int, input().split(' ')))
# all str
lists = n//s if n%s==0 else n//s+1
print(k*lists//p if k*lists%p == 0 else k*lists//p+1)
","0.0"
"770952ee-5595-4690-9f1a-a172955624fa","n = int(input())
a = list(map(int, input().split()))
s = [[]]
c = 1
for i in a:
    key = 0
    for k in range(c):
        if not(i in s[k]):
            s[k].append(i)
            key = 1
    if key == 0:
        s.append([])
        s[c].append(i)
        c = c + 1
print(len(s))
","0.0"
"af37658e-d46e-45db-9ee2-ea44a450db89","n=[int(i) for i in input().split()]
if  n[1]%n[2]==0:
    n[1]= n[1]//n[2]
else:
    n[1]=n[1]//n[2]+1
r=n[1]*n[0]
if r%n[3]==0:
    print(r//n[3])
else:
    print(r//n[3]+1)
","0.0"
"0f42de72-e8d1-4f41-8797-90a6cd184af9","x, y, z = input().split()
x = int(x)
y = int(y)
z = int(z)

print(x*3+y*5+z*12)","0.0"
"7d8fcbed-1f16-4d19-8a17-6560267bc64c","n,m,k=list(map(int, input().split()))
if m>n and k>=n:
    print('NO')
else:
    count=0
    while m>0:
        if m-n<=0:
            count+=1
            break
        else:
            m=m-n+k
            count+=1
    print(count)","0.0"
"770952ee-5595-4690-9f1a-a172955624fa","n = int(input())
a = list(map(int, input().split()))
print(a.count(max(a, key=lambda x: a.count(x))))
","0.0"
"770952ee-5595-4690-9f1a-a172955624fa","n = int(input())
c = list(map(int, input().split()))
m = 1
for i in range(1, n+1):
    if c.count(i) > m:
        m = c.count(i)
print(m)","0.0"
"e02095cd-3f62-4005-a067-a9da53d342bb","n = int(input())
a = [int(i) for i in input().split()]
b = [int(i) for i in input().split()]
la = 0
lb = 0
res = 0
for i in range(n):
    if la == lb and a[i] == b[i]:
        res += a[i]
    la += a[i]
    lb += b[i]

print(res)","0.0"
"0f42de72-e8d1-4f41-8797-90a6cd184af9","x, y, z= input().split()
x = int(x)
y = int(y)
z = int(z)
x_price = 3
y_price = x_price+2
z_price = y_price+7
print(x*x_price+y*y_price+z*z_price)","0.0"
"11d7d14b-eb4a-4dd7-94c1-67a03264c424","a = int(input())
q = list(map(int, input().split()))
w = 0
e = 0
r = 10**9
for i in range(a):
    if q[i] % 2 == 1:
        w = w+1
        if r>q[i]:
            r = q[i]
    e = e + q[i]
if w%2==0:
    print(e)
else:
    print(e-r)","0.0"
"7d8fcbed-1f16-4d19-8a17-6560267bc64c","s=0
n,m,k=map(int,input().split())
n1=n-k
if n1>0:
    while m>0:
        s+=1
        m=m-n
        if m<=0:
            break
        m=m+k
    print(s)
else:
    print(""NO"")
","0.0"
"11d7d14b-eb4a-4dd7-94c1-67a03264c424","n = int(input())
s = list(map(int, input().split()))
b = 100000000
for i in range(len(s)):
    if s[i] % 2 != 0:
        if s[i] < b:
            b = s[i]
if sum(s) % 2 == 0:
    print(sum(s))
else:
    print(sum(s) - b)","0.0"
"0f42de72-e8d1-4f41-8797-90a6cd184af9","a = input()
s = int(a[0])*3 + int(a[2])*5 + int(a[4])*12
print(s)","0.0"
"770952ee-5595-4690-9f1a-a172955624fa","n=int(input())
m=0
a=list(map(int, input().split()))
for i in range(n):
    m= max(a.count(a[i]), m)
print(m)","0.0"
"0f42de72-e8d1-4f41-8797-90a6cd184af9","def calculate_total_cost(x, y, z):
  """"""ÐÑÑÐ¸ÑÐ»ÑÐµÑ Ð¾Ð±ÑÑÑ ÑÑÐ¾Ð¸Ð¼Ð¾ÑÑÑ Ð¿Ð¾ÐºÑÐ¿ÐºÐ¸, ÑÑÐ¸ÑÑÐ²Ð°Ñ ÑÐµÐ½Ñ Ð¿Ð¸ÑÐ¾Ð¶Ð½ÑÑ, Ð·ÐµÑÐ¸ÑÐ° Ð¸ ÑÐ¾ÐºÐ¾Ð»Ð°Ð´Ð°.""""""
  cake_price = 3  # Ð¦ÐµÐ½Ð° Ð¿Ð¸ÑÐ¾Ð¶Ð½Ð¾Ð³Ð¾
  marshmallow_price = cake_price + 2  # Ð¦ÐµÐ½Ð° Ð·ÐµÑÐ¸ÑÐ°
  chocolate_price = marshmallow_price + 7  # Ð¦ÐµÐ½Ð° ÑÐ¾ÐºÐ¾Ð»Ð°Ð´Ð°

  total_cost = x * cake_price + y * marshmallow_price + z * chocolate_price
  return total_cost

# Ð¡ÑÐ¸ÑÑÐ²Ð°Ð½Ð¸Ðµ Ð²ÑÐ¾Ð´Ð½ÑÑ Ð´Ð°Ð½Ð½ÑÑ
x, y, z = map(int, input().split())

# ÐÑÑÐ¸ÑÐ»ÐµÐ½Ð¸Ðµ Ð¸ Ð²ÑÐ²Ð¾Ð´ ÑÐµÐ·ÑÐ»ÑÑÐ°ÑÐ°
total_cost = calculate_total_cost(x, y, z)
print(total_cost)
","0.0"
"7d8fcbed-1f16-4d19-8a17-6560267bc64c","n,m,k=[int(i) for i in input().split()]
i=0
if m<1:
    print(0)
elif m>=1:
    if k>=n and m>n:
        print(""NO"")
    elif k<n and m>n:
        while m>0:
            m-=n
            i+=1
            if m<=0:
                print(i)
            else:
                m+=k
    elif m<=n:
        print(1)","0.0"
"770952ee-5595-4690-9f1a-a172955624fa","n = int(input())
chl = [int(i) for i in input().split()]
chl_2 = set(chl)
cnt = -1
for i in chl_2:
    if cnt < chl.count(int(i)):
        cnt = chl.count(int(i))

print(cnt)","0.0"
"0f42de72-e8d1-4f41-8797-90a6cd184af9","x = 3
y = 5
z = 12
q, w, e = map(int, input() .split())
print(q*x + w*y + z*e)
","0.0"
"11d7d14b-eb4a-4dd7-94c1-67a03264c424","x = int(input())
l = list(map(int, input().split()))
summ = 0
l.sort()
if sum(l) % 2 == 0:
    print(sum(l))
else:
    summ = sum(l)
    l1 = []
    if summ % 2 == 1:
        for i in range(len(l)):
            if l[i] % 2 == 1 or l[i] == 1:
                summ -= l[i]
                break
    print(summ)
","0.0"
"0f42de72-e8d1-4f41-8797-90a6cd184af9","vvod = input()
vvod = vvod.split()
x = int(vvod[0])
y = int(vvod[1])
z = int(vvod[2])
xc = 3
yc = 5
zc = 12
print(x * xc + y * yc + z * zc)","0.0"
"aeb122ea-bb7f-44ee-93c8-65ead3d4f5f3","rounds, route = map(int, input().split())
time = 240 - route
for i in range(rounds + 1):
    time -= 5 * (i + 1)
    if time < 0:
        break
print(i)
","0.0"
"7d8fcbed-1f16-4d19-8a17-6560267bc64c","n,m,k=map(int,input().split())
a=0
if n<=k:
    print('NO')
else:
    for i in range(m):
        m=m-n
        a+=1
        if m<=0:
            print(a)
            break
        else:
            m=m+k
    
    
","0.0"
"770952ee-5595-4690-9f1a-a172955624fa","n=int(input())
n1=input().split()
c=0
for i in range(0,n):
    if n1.count(n1[i])>c:
        c=n1.count(n1[i])
print(c)
","0.0"
"a40047cc-77a1-4a37-9e28-a61947b07df8","n = int(input())
pisechki1 = list(map(int,input().split()))
pisechki2 = list(map(int,input().split()))
pisechki2.sort()
pisechki1.sort()
lubov_na_rastoyaniy = 0
for i in range(n):
    lubov_na_rastoyaniy += abs(pisechki2[i]-pisechki1[i])
print(lubov_na_rastoyaniy)","0.0"
"027966cc-bba6-4e6a-83bf-ea3f730fb59d","n = int(input())
s = input()
ans = set()

for i in range(n - 1):
    ans.add(s[i:i + 2])

print(len(ans))","0.0"
"c2081cad-a682-43e2-8960-081ef8963a37","r, b = map(int,input().split())

ans_1 = min(r,b)
r-=ans_1
b-=ans_1

ans_2 = r//2 + b//2

print(ans_1, ans_2)","0.0"
"0f42de72-e8d1-4f41-8797-90a6cd184af9","a = list(map(int, input().split("" "")))
print(a[0]*3+a[1]*5+a[2]*12)","0.0"
"027966cc-bba6-4e6a-83bf-ea3f730fb59d","input()
a = input()
b = set()
for i in range(len(a) - 1):
    b.add((a[i] + a[i+1]))
print(len(b))","0.0"
"af37658e-d46e-45db-9ee2-ea44a450db89","k, n, s, p = map(int, input().split())

cnt = 0

pages = n // s

if pages != n / s:
    pages += 1



pages *= k

cnt = pages // p

if cnt != pages / p:
    cnt += 1

print(cnt)


","0.0"
"770952ee-5595-4690-9f1a-a172955624fa","n = int(input())
a = list(map(int, input().split()))
s = [[]]
c = 1
for i in a:
    key = 0
    for k in range(c):
        if not(i in s[k]):
            s[k].append(i)
            key = 1
            break
    if key == 0:
        s.append([])
        s[c].append(i)
        c = c + 1
print(len(s))","0.0"
"a40047cc-77a1-4a37-9e28-a61947b07df8","n = int(input())
arr1 = sorted([int(s) for s in input().split()])
arr2 = sorted([int(s) for s in input().split()])
s = 0

for i in range(n):
    s += abs(arr1[i] - arr2[i])

print(s)","0.0"
"a40047cc-77a1-4a37-9e28-a61947b07df8","n=int(input())
a=list(map(int,input().split()))
b=list(map(int,input().split()))
a.sort()
b.sort()
k=0
for i in range(len(a)):
    k+=abs(a[i]-b[i])
print(k)","0.0"
"e02095cd-3f62-4005-a067-a9da53d342bb","n = int(input())
a1 = list(map(int, input().split()))
a2 = list(map(int, input().split()))

s1, s2 = 0, 0
k = 0

for i in range(n):
	s1 += a1[i]
	s2 += a2[i]
	if s1 == s2 and a1[i] == a2[i]:
		k += a1[i]

print(k)","0.0"
"770952ee-5595-4690-9f1a-a172955624fa","n = int(input())
mas = list(map(int,input().split()))
mas2=[]
for a in range(n):
    mas2.append(mas.count(mas[a]))
print(max(mas2))
","0.0"
"7d8fcbed-1f16-4d19-8a17-6560267bc64c","n, m, k = list(map(int, input().split()))
if n < m and n <= k:
    print('NO')
else:
    m = m - n
    print(m//(n-k) + bool(m % (n-k)) + 1)","0.0"
"a40047cc-77a1-4a37-9e28-a61947b07df8","n = int(input())
a = sorted([int(i) for i in input().split()])
b = sorted([int(i) for i in input().split()])
l = [abs(a[i] - b[i]) for i in range(n)]
print(sum(l))
","0.0"
"853bea78-6aa0-4fcf-8c5a-5f278603c518","n = int(input())
k = int(input())
x = int(input())
y = int(input())
if n < k:
	print(n*x)
else:
	print(k*x+y*(n-k))","0.0"
"7d8fcbed-1f16-4d19-8a17-6560267bc64c","n,m,k=map(int,input().split())
if n<=k:
    print('NO')
else:
    s=0
    while n<m:
        m=m-n+k
        s+=1
    print(s+1)
        
","0.0"
"af37658e-d46e-45db-9ee2-ea44a450db89","k, n, s, p = map(int, input().split())
lst = 0
for i in range(k):
    if n % s != 0:
        lst += (n // s + 1)
    else:
        lst += n // s

if lst % p != 0:
    print(lst // p + 1)
else:
    print(lst // p)
","0.0"
"770952ee-5595-4690-9f1a-a172955624fa","a=int(input())
b=list(map(int,input().split()))
if a==1:
    print(1)
else:
    b.sort()
    b.append(-1)
    k=1
    ma=0
    for i in range(len(b)-1):
        if b[i]==b[i+1]:
            k+=1
        else:
            ma=max(ma,k)
            k=1
    print(ma)

","0.0"
"0f42de72-e8d1-4f41-8797-90a6cd184af9","a = 3  
X, Y, Z = map(int, input().split()) 

b = a + 2
c = b + 7

d = X * a
e = Y * b
g= Z * c

l = d + e + g

print(l)

","0.0"
"770952ee-5595-4690-9f1a-a172955624fa","n = int(input())
m = list(map(int, input().split()))
maxi = max(m.count(i) for i in set(m))
print(maxi)","0.0"
"c2081cad-a682-43e2-8960-081ef8963a37","a, b = map(int, input().split())
x = min(a, b)
print(x, max(a - x, b - x) // 2)","0.0"
"770952ee-5595-4690-9f1a-a172955624fa","n=int(input())
c=list(map(int, input().split(' ')))
a=set(c)
m=0
for i in a:
    m=max(m, c.count(i))
print(m)
","0.0"
"853bea78-6aa0-4fcf-8c5a-5f278603c518","a = int(input())                     #a, b, c = map(int, input().split())
b = int(input())                     #if a <= c and a < b:
c = int(input())                     #    print('NO')
d = int(input())                     #else:
print(b*c + (a-b)*d)                 #    b -= a
                                     #    if b < 0:
                                     #        b = 0
                                     #    b += b%(a-c)
                                     #    print(b//(a-c) + 1)","0.0"
"027966cc-bba6-4e6a-83bf-ea3f730fb59d","n = int(input())
s = input()
se = set()
for i in range(1, n):
    se.add(s[i] + s[i - 1])
print(len(se))","0.0"
"e02095cd-3f62-4005-a067-a9da53d342bb","n = int(input())
a = list(map(int, input().split()))
b = list(map(int, input().split()))
xa = 0
xb = 0
vmeste = 0
for i in range(n):
    if xa == xb:
        s = True
    else:
        s = False

    if a[i] == b[i] and s:
        vmeste += a[i]
    xa += a[i]
    xb += b[i]
print(vmeste)","0.0"
"e02095cd-3f62-4005-a067-a9da53d342bb","n = int(input())
a = [int(i) for i in input().split()]
b = [int(i) for i in input().split()]
sa= 0
sb = 0
s = 0
for i in range(n):
    if sa == sb and a[i] == b[i]:
        s += a[i]
    sa += a[i]
    sb += b[i]
print(s)","0.0"
"c2081cad-a682-43e2-8960-081ef8963a37","a, b = [int(i) for i in input().split()]

print(min(a, b), abs(a - b) // 2)","0.0"
"770952ee-5595-4690-9f1a-a172955624fa","n = int(input())
x = list(map(int, input().split(' ')))
arr = []
for i in x:
    arr.append((x.count(i)))
print(max(arr))","0.0"
"af37658e-d46e-45db-9ee2-ea44a450db89","from math import ceil
k, n, s, p = [int(x) for x in input().split()]
print(ceil(ceil(n / s) * k / p))","0.0"
"7d8fcbed-1f16-4d19-8a17-6560267bc64c","n, m, k = list(map(int, input().split()))
if n < m and n <= k:
    print('NO')
else:
    m = m - n
    if m > 0:
        print(m//(n-k) + bool(m % (n-k)) + 1)
    else:
        print(1)","0.0"
"5eebb219-dec9-41ce-83c6-efc4a4670acc","
def next_letter(letter):
    keyboard_mapping = {
        'a': 's', 'b': 'n', 'c': 'x', 'd': 'f', 
        'e': 'r', 'f': 'g', 'g': 'h', 'h': 'j',
        'i': 'o', 'j': 'k', 'k': 'l', 'l': 'z',
        'm': 'q', 'n': 'b', 'o': 'p', 'p': 'a',
        'q': 'w', 'r': 't', 's': 'd', 't': 'y',
        'u': 'i', 'v': 'c', 'w': 'e', 'x': 'v',
        'y': 'u', 'z': 'm'
    }
    return keyboard_mapping.get(letter, '')

input_letter = input()
next_letter_result = next_letter(input_letter)
print(next_letter_result)

","0.0"
"853bea78-6aa0-4fcf-8c5a-5f278603c518","n=int(input())
k=int(input())
x=int(input())
y=int(input())
if n<=k:
    print(n*x)
else:
    print(k*x+(n-k)*y)","0.0"
"a40047cc-77a1-4a37-9e28-a61947b07df8","n = int(input())
a = sorted(map(int, input().split()))
b = sorted(map(int, input().split()))
print(sum(abs(i - j) for i, j in zip(a, b)))
","0.0"
"770952ee-5595-4690-9f1a-a172955624fa","n=int(input())
arr=[int(x)for x in input().split()]
m=set(arr)
m=list(m)
k=0
for i in range(len(m)):
    if arr.count(m[i])>k:
        k=arr.count(m[i])
print(k)
","0.0"
"af37658e-d46e-45db-9ee2-ea44a450db89","import math
k,n,s,p=map(int,input().split())
s1=n/s
s1=math.ceil(s1)
sum=s1*k
X=sum/p
X=math.ceil(X)
print(X)","0.0"
"0f42de72-e8d1-4f41-8797-90a6cd184af9","s = input()
for i in range(len(s)):
    if s[i]==' ':
        m = i
        break
x = s[ :m]
s = s[m+1: ]
for u in range(len(s)):
    if s[u]==' ':
        m = u
        break
y = s[ :m]
z = s[m+1: ]
y = int(y)
z = int(z)
x = int(x)
print(x*3+y*5+z*12)","0.0"
"0f42de72-e8d1-4f41-8797-90a6cd184af9","x,y,z = input().split()
x = int(x)
y = int(y)
z = int(z)
cake = 3
marshmallow = cake + 2
chocolatte = marshmallow + 7
total = x*cake + y*marshmallow + z*chocolatte
print(total)","0.0"
"e02095cd-3f62-4005-a067-a9da53d342bb","n = int(input())
a = list(map(int, input().split()))
b = list(map(int, input().split()))
s1 = 0
s2 = 0
d = 0
for i in range(n):
    if s1 == s2 and a[i] == b[i]:
        d += a[i]
    s1 += a[i]
    s2 += b[i]
print(d)","0.0"
"770952ee-5595-4690-9f1a-a172955624fa","n = int(input())
k = list(map(int,input().split()))
k.sort()
m = 0
c = list()
num = set()
for i in range(n):
    num.add(k[i])
for i in num:
    if k.count(i) > m:
        m = k.count(i)
print(m)","0.0"
"027966cc-bba6-4e6a-83bf-ea3f730fb59d","n = int(input())
s = input()
a = set()
for i in range(n - 1):
    a.add(s[i] + s[i+1])

print(len(a))","0.0"
"af37658e-d46e-45db-9ee2-ea44a450db89","k, n, s, p = map(int, input().split())
if n % s == 0:
    a = n // s
else:
    a = n // s + 1
b = a * k
if b % p == 0:
    print(b // p)
else:
    print(b // p + 1)","0.0"
"853bea78-6aa0-4fcf-8c5a-5f278603c518","N, K, X, Y=int(input()),int(input()),int(input()),int(input())
if N<=K:
    print(X*N)
else:
    a=X*K
    N-=K
    a=a+Y*N
    print(a)","0.0"
"7d8fcbed-1f16-4d19-8a17-6560267bc64c","nmk = list(map(int, input().split()))
m = nmk[1]
n = nmk[0]
k = nmk [2]
t = 0
if n <= k:
    if m <= n:
        print(1)
    else:
        print('NO')

else:
    while m > 0:
        m = m - (n)
        t += 1
        if m <= 0:
            print(t)
            exit()
        m += k
    print(t)","0.0"
"e02095cd-3f62-4005-a067-a9da53d342bb","n=int(input())
m=0
xa=0
xb=0
a=list(map(int, input().split()))
b=list(map(int, input().split()))
for i in range(n):
    xa+=a[i]
    xb+=b[i]
    if xa==xb and a[i]==b[i]:
        m+=a[i]
print(m)","0.0"
"853bea78-6aa0-4fcf-8c5a-5f278603c518","N=int(input())
K=int(input())
X=int(input())
Y=int(input())
a=0
for i in range(1,N+1):
    if i<=K:
        a+=X
    else:
        a+=Y
print(a)
","0.0"
"e02095cd-3f62-4005-a067-a9da53d342bb","n = int(input())

a = list(map(int, input().split()))
b = list(map(int, input().split()))

s=0
k1=0
k2=0
for i in range(n):
    if(k1==k2 and a[i]==b[i]):
        s+=a[i]
    k1+=a[i]
    k2+=b[i]
print(s)
","0.0"
"a40047cc-77a1-4a37-9e28-a61947b07df8","n = int(input())
a1 = list(map(int, input().split()))
a2 = list(map(int, input().split()))

a1.sort()
a2.sort()

print(sum([abs(i - j) for i, j in zip(a1, a2)]))","0.0"
"af37658e-d46e-45db-9ee2-ea44a450db89","def del_no(n):
    if n % 1 == 0:
        return n
    return int(n) + 1


k, n, s, p = map(int, input().split("" ""))
print(int(del_no(k * del_no(n / s) / p)))","0.0"
"853bea78-6aa0-4fcf-8c5a-5f278603c518","a = int(input())
b = int(input())
c = int(input())
d = int(input())
if a-b<0:
    print(b * c)
else:
    print(b * c + (a - b) * d)","0.0"
"770952ee-5595-4690-9f1a-a172955624fa","n = int(input())
num = [int(x) for x in input().split()]
comand = [[]]
for i in num:
    f = True
    for j in range(len(comand)):
        if i in comand[j]:
            f = False
        else:
            comand[j].append(i)
            f = True
            break
    if not f:
        comand.append([i])

print(len(comand))","0.0"
"c2081cad-a682-43e2-8960-081ef8963a37","a, b = map(int, input().split())
s = 0

while a > 0 and b > 0:
    a -= 1
    b -= 1
    s += 1

if a > 0:
    print(s, a // 2)
else:
    print(s, b // 2)","0.0"
"c2081cad-a682-43e2-8960-081ef8963a37","n, m = map(int, input().split())

print(min(n, m), (max(n, m) - min(n, m)) // 2)","0.0"
"6824fb27-2339-421d-85db-60758b59cddc","s=0
w=1
a=int(input())
while w*5<=a:
    w*=5
    s+=1
while w*2<=a:
    w*=2
    s+=1
while w<a:
    w+=1
    s+=1
print(s)","0.0"
"7d8fcbed-1f16-4d19-8a17-6560267bc64c","def calculate_defeat_dave(n, m, k):
  """"""Calculates the number of hits needed to defeat Dave.

  Args:
    n: Number of tentacles Rico cuts with one hit.
    m: Initial number of Dave's tentacles.
    k: Number of tentacles Dave regenerates after each hit.

  Returns:
    The number of hits needed to defeat Dave, or ""NO"" if impossible.
  """"""
  hits = 0
  while m > 0:
    m -= n
    hits += 1
    if m <= 0:
      break
    m += k
    if m >= n and k >= n:  # Check for impossible scenario
      return ""NO""
  return hits

# Get the input values
n, m, k = map(int, input().split())

# Calculate and print the result
result = calculate_defeat_dave(n, m, k)
print(result)
","0.0"
"e02095cd-3f62-4005-a067-a9da53d342bb","n = int(input())
a = list(map(int, input().split()))
b = list(map(int, input().split()))
ans = 0
sa = 0
sb = 0
for i in range(n):
    if sa == sb and a[i] == b[i]:
        ans = ans + a[i]
    sa = sa + a[i]
    sb = sb + b[i]
print(ans)","0.0"
"770952ee-5595-4690-9f1a-a172955624fa","n = int(input())
# n = 1
pls = list(map(int, input().split(' ')))
# ls = dict()
mx = 1
for elem in pls:
	# ls[str(elem)] = pls.count(elem)
	mx = max([mx, pls.count(elem)])

print(mx)
","0.0"
"853bea78-6aa0-4fcf-8c5a-5f278603c518","n=int(input())
k=int(input())
x=int(input())
y=int(input())
s=0
for i in range(k):
    s+=x
for i in range(n-k):
    s+=y
print(s)
","0.0"
"c2081cad-a682-43e2-8960-081ef8963a37","a , b = map(int,input().split())

print(min(a,b), (max(a,b) - min(a,b))//2)","0.0"
"e02095cd-3f62-4005-a067-a9da53d342bb","n=int(input())
n1=[int(i) for i in input().split()]
n2=[int(i) for i in input().split()]
s1=0
s2=0
c=0
for i in range(n):
    if n1[i]==n2[i] and s1==s2:
        c+=n1[i]
    s1+=n1[i]
    s2+=n2[i]
print(c)
       
","0.0"
"770952ee-5595-4690-9f1a-a172955624fa","n = int(input())
sp = [int(i) for i in input().split()]
sp.sort()
maxx = 0
types = list(set(sp))
for i in types:
    f = sp.count(i)
    if f>maxx:
        maxx=f
print(maxx)","0.0"
"0f42de72-e8d1-4f41-8797-90a6cd184af9","x = 3
y = 5
z = 12
a = input()
b = a.split(' ')
print(int(int(b[0])*x)+int(int(b[1])*y)+int(b[2])*z)","0.0"
"a40047cc-77a1-4a37-9e28-a61947b07df8","n = int(input())
a = list(map(int, input().split()))
b = list(map(int, input().split()))
a.sort()
b.sort()
s = 0
for i in range(n):
    s += abs(a[i] - b[i])
print(s)","0.0"
"853bea78-6aa0-4fcf-8c5a-5f278603c518","n, k, x, y = [int(input()) for i in range(4)]
print(n*x if n <= k else (k*x + (n-k)*y))","0.0"
"027966cc-bba6-4e6a-83bf-ea3f730fb59d","n=int(input())
s=input()
c=[]
k=0
for i in range(1, len(s)):
    if s[i-1]+s[i] not in c:
        c.append(s[i-1]+s[i])
        k+=1
print(k)
","0.0"
"7d8fcbed-1f16-4d19-8a17-6560267bc64c","a = list(map(int,input().split()))
n = a[0]
m = a[1]
k = a[2]
if n<=k:
    print('NO')
else:
    if (m - k)%(n-k)==0:
        print((m - k) // (n-k))
    else:
        print((m - k) // (n - k)+1)","0.0"
"17c6577a-b831-485d-ba22-fb47923019b4","n = int(input())
a = []
for i in range(n*2+1):
    a.append([-1]*(n*2+1))
for i in range(n+1):
    for k in range(i+1):
        for j in range(k*2+1):
            a[i][n-k+j]+=1
for i in range(n):
    for k in range(i+1):
        for j in range(k*2+1):
            a[2*n-i][n-k+j]+=1
for i in a:
    s = ''
    for j in i:
        if j!=-1:
            s+=str(j)+' '
        else:
            s+='  '
    print(s[:-1])","0.0"
"af37658e-d46e-45db-9ee2-ea44a450db89","a = input().split()
k,n,s,p = [int(a[i]) for i in range(4)]
k1 = 1
if n > s:
    if n % s !=0:
        k1 = (n // s)+1
    else:
        k1 = (n // s)
if (k * k1) % p != 0:
    print(((k * k1) // p)+1)
else:
    print((k * k1) // p)","0.0"
"a40047cc-77a1-4a37-9e28-a61947b07df8","n=int(input())
men=list(map(int,input().split()))
notmen=list(map(int,input().split()))
notmen.sort()
men.sort()
v=0
for i in range(n):
    v+=abs(notmen[i]-men[i])
print(v)","0.0"
"853bea78-6aa0-4fcf-8c5a-5f278603c518","a = int(input())
b = int(input())
c = int(input())
d = int(input())
if a-b<0:
    print(a*c)
else:
    print(b * c + (a - b) * d)","0.0"
"5eebb219-dec9-41ce-83c6-efc4a4670acc","def sled (letter):
    klav = {
        'a': 's', 'b': 'n', 'c': 'x', 'd': 'f', 
        'e': 'r', 'f': 'g', 'g': 'h', 'h': 'j',
        'i': 'o', 'j': 'k', 'k': 'l', 'l': 'z',
        'm': 'q', 'n': 'b', 'o': 'p', 'p': 'a',
        'q': 'w', 'r': 't', 's': 'd', 't': 'y',
        'u': 'i', 'v': 'c', 'w': 'e', 'x': 'v',
        'y': 'u', 'z': 'm'
    }
    return klav.get(letter, '')

pol = input()
res = sled(pol)
print(res)","0.0"
"770952ee-5595-4690-9f1a-a172955624fa","n = int(input())
s = list(map(int, input().split()))
s.sort()
k = 0
m = 0
k1 = 0
if n==1:
    print(1)
    exit()
for i in range(1, n):
    if s[i-1]==s[i]:
        k+=1
    else:
        k=0
    k1 = k + 1
    m = max(m, k1)
print(m)","0.0"
"7d8fcbed-1f16-4d19-8a17-6560267bc64c","n, m, k=map(int, input().split())
s=0
if m==0:
    print(0)
elif n<=k:
    print('NO')
else:
    while m>0:
        s+=1
        m-=n
        if m<=0:
             print(s)
             break
        m+=k
        if m <= 0:
            print(s)
            break
","0.0"
"17c6577a-b831-485d-ba22-fb47923019b4","n = int(input())
m = 2 * n + 1

for i in range(n):
    a = ["" ""] * (n - i) + list(range(i + 1)) + list(range(i))[::-1] + ["" ""] * (n - i)
    print(*a)

for i in range(n, -1, -1):
    a = ["" ""] * (n - i) + list(range(i + 1)) + list(range(i))[::-1] + ["" ""] * (n - i)
    print(*a)
","0.0"
"17c6577a-b831-485d-ba22-fb47923019b4","n = int(input())

arr = [[0] * (i*2 + 1) for i in range(n+1)]

for i in range(1, n+1):
    for j in range(1, len(arr[i])//2+1):
        arr[i][j] = arr[i][j-1]+1
    for j in range(len(arr[i])//2+1, len(arr[i])-1):
        arr[i][j] = arr[i][j-1]-1

for i in range(n+1):
    s = ["" ""] * ((2*n+1-len(arr[i]))//2) + arr[i] + ["" ""] * ((2*n+1-len(arr[i]))//2-1)
    print(*s)
for i in range(n-1, -1, -1):
    s = ["" ""] * ((2*n+1-len(arr[i]))//2) + arr[i] + ["" ""] * ((2*n+1-len(arr[i]))//2-1)
    print(*s)","0.0"
"853bea78-6aa0-4fcf-8c5a-5f278603c518","n = int(input())
k = int(input())
x = int(input())
y = int(input())
if k > n:
    print(x*n)
else:
    d = k*x
    p = (n-k) * y
    print(d+p)","0.0"
"853bea78-6aa0-4fcf-8c5a-5f278603c518","n=int(input())
k=int(input())
x=int(input())
y=int(input())
if n<=k:
    print(n*x)
else:
    print((n-k)*y+k*x)
","0.0"
"c2081cad-a682-43e2-8960-081ef8963a37","def f(a, b):
    max_1 = min(a, b)
    s = (max(a, b) - max_1) // 2
    return max_1, s
a, b = map(int, input().split())
print(*f(a, b))
","0.0"
"d949e12a-1807-4b82-a4ab-c1a178a79888","a = int(input())
b = 0
while a > 0:
    b = b + 1
    d = 0
    c = b
    while c > 0:
        d = d + c%10
        c = c//10
    if d == 10:
        a = a - 1
print(b)","0.0"
"7d8fcbed-1f16-4d19-8a17-6560267bc64c","n,m,k=map(int, input().split())
ans=0
if n<k:
    print('NO')
else:
    while m>n:
        ans+=1
        m-=n
        m+=k
    if m>0:
        print(ans+1)
    else:
        print(ans)
","0.0"
"aeb122ea-bb7f-44ee-93c8-65ead3d4f5f3","q,r=map(int,input().split())
w=0
e=240-r
while e>=0:
    w=w+1
    if (e-5*w)>=0 and w<=q:
        e=e-5*w
    else:
        w=w-1
        break
if w>q:
    w=q
print(w)","0.0"
"a40047cc-77a1-4a37-9e28-a61947b07df8","n = int(input())
m = [int(i) for i in input().split()]
d = [int(i) for i in input().split()]
m.sort()
d.sort()
s = [abs(d[i]-m[i]) for i in range(n)]
print(sum(s))
","0.0"
"853bea78-6aa0-4fcf-8c5a-5f278603c518","n=int(input())
k=int(input())
x=int(input())
y=int(input())
if n<=k:
    print(n*x)
else:
    print((n-k)*y+k*x)

","0.0"
"0f42de72-e8d1-4f41-8797-90a6cd184af9","q, w, e = map(int, input().split())
print((q*3)+(w*5)+(e*12))","0.0"
"770952ee-5595-4690-9f1a-a172955624fa","import math
n = input()
b = input().replace("" "","""")
d = []
for i in set(b):
    d.append(b.count(i))
print(max(d))","0.0"
"853bea78-6aa0-4fcf-8c5a-5f278603c518","n=int(input())
k=int(input())
x=int(input())
y=int(input())
s=0
if n>k:
    for i in range(k):
        s+=x
    for i in range(n-k):
        s+=y
    print(s)
else:
    for i in range(n):
        s+=x
    print(s)
","0.0"
"027966cc-bba6-4e6a-83bf-ea3f730fb59d","n=int(input())
s=input()
h=[]
k=0
for i in range(2,len(s)+1):
    a=s[i-2:i]
    if a not in h:
        k+=1
    h.append(a)
print(k)","0.0"
"a40047cc-77a1-4a37-9e28-a61947b07df8","n = int(input())

a = [int(s) for s in input().split()]
b = [int(s) for s in input().split()]

a = sorted(a)
b = sorted(b)

counter = 0
for i in range(n):
    counter += abs(a[i] - b[i])

print(counter)","0.0"
"a40047cc-77a1-4a37-9e28-a61947b07df8","n = int(input())

a = sorted(list(map(int, input().split())))
b = sorted(list(map(int, input().split())))

s=0
for i in range(n):
    s+=abs(a[i]-b[i])
print(s)
","0.0"
"a40047cc-77a1-4a37-9e28-a61947b07df8","n=int(input())
a=list(map(int,input().split()))
b=list(map(int,input().split()))
a.sort()
b.sort()
k=0
for i in range(n):
    k+=abs(a[i]-b[i])
print(k)

","0.0"
"853bea78-6aa0-4fcf-8c5a-5f278603c518","n = int(input())
k = int(input())
x = int(input())
y = int(input())
if n >= k:

    print((n-k)*y + k*x)
else:
    print(n*x)","0.0"
"e02095cd-3f62-4005-a067-a9da53d342bb","n = int(input())
k1 = list(map(int,input().split()))
k2 = list(map(int,input().split()))
s1 = 0
s2 = 0
k = 0
for i in range(n):
    if k1[i] == k2[i] and s1 == s2:
        k+=k1[i]
        s1+=k1[i]
        s2+=k2[i]
    else:
        s1+=k1[i]
        s2+=k2[i]
print(k)","0.0"
"027966cc-bba6-4e6a-83bf-ea3f730fb59d","from itertools import pairwise

n = int(input())
s = input()
print(len(set(i + j for i, j in pairwise(s))))
","0.0"
"c2081cad-a682-43e2-8960-081ef8963a37","a,b=map(int, input().split())
x=min(a,b)
print(x, (max(a,b)-x)//2)
","0.0"
"770952ee-5595-4690-9f1a-a172955624fa","n = int(input())

mas = list(map(int, input().split()))

ans = [0] * 101

for i in mas:
    ans[i] += 1

print(max(ans))","0.0"
"e02095cd-3f62-4005-a067-a9da53d342bb","n = int(input())
lst1 = list(map(int, input().split()))
lst2 = list(map(int, input().split()))
current_s1, current_s2 = 0, 0
sums = 0
for i in range(n):
    current_s1 += lst1[i]
    current_s2 += lst2[i]
    if current_s1 == current_s2 and lst1[i] == lst2[i]:
        sums += lst1[i]
print(sums)","0.0"
"a40047cc-77a1-4a37-9e28-a61947b07df8","n=int(input())
m=0
xa=0
xb=0
a=sorted(list(map(int, input().split())))
b=sorted(list(map(int, input().split())))
for i in range(n):
    m+=abs(a[i]-b[i])
print(m)","0.0"
"853bea78-6aa0-4fcf-8c5a-5f278603c518","def calculate_hotel_cost(n, k, x, y):
  """"""Calculates the total cost of staying at the hotel.

  Args:
    n: Total number of nights stayed.
    k: Number of nights with the higher rate (X).
    x: Cost per night for the first K nights.
    y: Cost per night after the Kth night.

  Returns:
    The total cost of the hotel stay.
  """"""
  cost_first_k_nights = min(n, k) * x
  cost_remaining_nights = max(0, n - k) * y
  total_cost = cost_first_k_nights + cost_remaining_nights
  return total_cost


n = int(input())
k = int(input())
x = int(input())
y = int(input())


total_cost = calculate_hotel_cost(n, k, x, y)
print(total_cost)
","0.0"
"7d8fcbed-1f16-4d19-8a17-6560267bc64c","n, m, k = map(int, input().split())
e = n - k
ww = 0
if n-k<=0:
    print('NO')
else:
    while m > 0:
        if ww%2==0:
            m = m - n
        else:
            m = m + k
        ww += 1
if ww != 0:
    if ww%2==0:
        print(ww//2)
    else:
        print(ww//2+1)
","0.0"
"7d8fcbed-1f16-4d19-8a17-6560267bc64c","n, m, k = map(int, input().split())

if n < k:
    print('NO')
elif m - n == -k:
    print(1)
else:
    count = 0
    while m > 0:
        if m > 0:
            m -= n
            count += 1
        else:
            print(count)
            break
        if m > 0:
            m += k
        else:
            print(count)
            break
","0.0"
"5eebb219-dec9-41ce-83c6-efc4a4670acc","def sled (letter):
    klav = {
        'a': 's', 'b': 'n', 'c': 'x', 'd': 'f', 
        'e': 'r', 'f': 'g', 'g': 'h', 'h': 'j',
        'i': 'o', 'j': 'k', 'k': 'l', 'l': 'z',
        'm': 'q', 'n': 'b', 'o': 'p', 'p': 'a',
        'q': 'w', 'r': 't', 's': 'd', 't': 'y',
        'u': 'i', 'v': 'c', 'w': 'e', 'x': 'v',
        'y': 'u', 'z': 'm'
    }
    return klav.get(letter, '')

pol = input()
res = sled(pol)
print(res)","0.0"
"a40047cc-77a1-4a37-9e28-a61947b07df8","n = int(input())
a = list(map(int, input().split()))
b = list(map(int, input().split()))
a.sort()
b.sort()
ans = 0
for i in range(n):
    ans = ans + abs(a[i] - b[i])
print(ans)
","0.0"
"af37658e-d46e-45db-9ee2-ea44a450db89","import math
k, n, s, p = map(int, input().split())
kagdomu = math.ceil(n/s)
print(math.ceil((k * kagdomu)/p))","0.0"
"c2081cad-a682-43e2-8960-081ef8963a37","a,b=map(int,input().split())
c=min(a,b)
a-=c
b-=c
print(c,max(a,b)//2)","0.0"
"d949e12a-1807-4b82-a4ab-c1a178a79888","n = int(input())
print(str(n) + str(10 - sum(list(map(int, list(str(n)))))))
","0.0"
"c2081cad-a682-43e2-8960-081ef8963a37","krasnue,sinie = map(int,input().split())
print(min(krasnue,sinie), abs(krasnue-sinie)//2)
# â â â â â â â â¡â â â£â£â£â¡â â¢â¡â â¢â£â£â â¡â â â â â â 
# â â â â â â£ â£â£â£â£ â£¿â£¿â£¿â£¿â£¿â£¿â£¿â£¿â£¿â£¿â£¿â£¿â£¿â£¿â£¶â¡â â â â 
# â â â â â£°â£¿â£¿â£¿â£¿â£¿â£¿â£¿â£¿â£¿â£¿â£¿â£¿â£¿â£¿â£¿â£¿â£¿â£¿â£¿â£¿â£¿â£â â â 
# â â â â¢°â£¿â£¿â£¿â£¿â£¿â£¿â£¿â£¿â£¿â¡¿â¡¿â â ¿â ¿â ¿â ¿â ¿â£¿â£¿â£¿â£¿â£¿â£¿â¡â â 
# â â â â£¿â£¿â£¿â£¿â£¿â£¿â¡¿â¢¿â â â â â â â â¡â â â â¢¿â£¿â£¿â£¿â£¿â£§â â 
# â â â¢°â£¿â£¿â£¿â£¿â â¢â â â â â â â â â â â â â¡â â »â£¿â£¿â£¿â£¿â â 
# â â â£¼â£¿â£¿â¡¿â â â¢¸â â â¢³â£¶â£¤â£â â â â â â â â¢â â ¹â£¿â£¿â¡â â 
# â â â£¿â£¿â£¿â â â â£¼â¡â â â »â â â â â â â¢¤â£â¡â â â â£¿â£¿â â â 
# â â â£¿â£¿â£¿â¡â â â¡â¡â â â â â â â â â â ¸â£¿â¡¿â â¢°â¢ â£¿â¡â â â 
# â â â£¿â£¿â£¿â¡â â â¢·â¡â â â¢â¡â â â â â â â â â£´â£¯â£¾â¡â â â â 
# â â â£¿â£¿â£¿â¡¿â â â£¼â£¿â¡â â â â¢â ¶â â â â â¢â£¾â£¿â£¿â£¿â¡â â â â 
# â â â£¿â£¿â£¿â â â â£¿â£¿â â â â â¢â£â£ â£¤â£¤â£´â â£¿â£¿â£¿â£¿â¡â â â â 
# â â â â¢¿â â â â¢¸â£¿â£â â â¢â£¤â£¾â£¿â£¿â£¿â â â¢°â£¿â£¿â£¿â£¿â â â â â 
# â â â  â ´â â â â ¿â ¿â ¿â §â ¾â ¿â ¿â ¿â ¿â ¿â â â â ¾â ¿â ¿â â â ","0.0"
"42d47feb-cba9-4d18-8ccc-2c20605db82d","n, m = map(int, input().split())
if m%2==0:
    print(n*m//2)
else:
    print(n*(m-1)//2)","0.0"
"027966cc-bba6-4e6a-83bf-ea3f730fb59d","n=int(input())
s=input()
ans=set()
for i in range(n-1):
    ans.add(s[i:i+2])
print(len(ans))","0.0"
"11d7d14b-eb4a-4dd7-94c1-67a03264c424","n=int(input())
a = list(map(int, input().split("" "")))
s=a[0]
c=0
for i in range(n):
    c=c+a[i]
if c%2==0:
    print(c)
else:
    for r in range(n):
        if a[r] < s and a[r]%2==1:
            s=a[r]
    print(c-s)","0.0"
"c2081cad-a682-43e2-8960-081ef8963a37","a,b=map(int,input().split())
z=(max(a,b)-min(a,b))//2
print(min(a,b),z)
","0.0"
"7d8fcbed-1f16-4d19-8a17-6560267bc64c","s=input()
a=list(map(int, s.split()))
b=a[0]
c=a[1]
d=a[2]
q=0
if b>d:
    while c>0:
        c=c-b
        q=q+1
        if c<=0:
            print(q)
        else: c=c+d
else:
    print('NO')","0.0"
"a40047cc-77a1-4a37-9e28-a61947b07df8","n = int(input())
a = list(map(int, input().split()))
b = list(map(int, input().split()))
a.sort()
b.sort()
s = 0
for i in range(n):
    s += abs(a[i] - b[i])
print(s)","0.0"
"770952ee-5595-4690-9f1a-a172955624fa","n = int(input())

arr = [int(s) for s in input().split()]
set_arr = set(arr)

set_arr = list(set_arr)

mx = 0
for i in range(len(set_arr)):
    if arr.count(set_arr[i]) > mx:
        mx = arr.count(set_arr[i])

print(mx)
","0.0"
"853bea78-6aa0-4fcf-8c5a-5f278603c518","q = int(input())
w = int(input())
e = int(input())
r = int(input())
if w > q:
    print(e*q)
else:
    d=w*e
    p=(q-w)*r
    print(d+p)","0.0"
"770952ee-5595-4690-9f1a-a172955624fa","a = int(input())
s = list(map(int, input().split()))
best = 0
c = 0
d = []
for i in range(a):
    if s[i] not in d:
        for j in range(a):
            if s[j] == s[i]:
                c += 1
        if c > best:
            best = c
        c = 0
print(best)","0.0"
"853bea78-6aa0-4fcf-8c5a-5f278603c518","N=int(input())
K=int(input())
X=int(input())
Y=int(input())
if N<=K:
    print(X*N)
else:
    print(X*K+Y*(N-K))","0.0"
"a40047cc-77a1-4a37-9e28-a61947b07df8","n = int(input())
s1 = [int(i) for i in input().split()]
s2 = [int(i) for i in input().split()]
s1.sort()
s2.sort()
cnt = 0
for i in range(n):
    cnt += abs(s1[i] - s2[i])
print(cnt)","0.0"
"a40047cc-77a1-4a37-9e28-a61947b07df8","n = int(input())
lst1 = sorted(list(map(int, input().split())))
lst2 = sorted(list(map(int, input().split())))
print(sum([abs(lst1[i] - lst2[i]) for i in range(n)]))","0.0"
"770952ee-5595-4690-9f1a-a172955624fa","n = int(input())
a = list(map(int, input().split()))
pov = [x for x in a if a.count(x) > 1]
mx = 0
for x in pov:
    if pov.count(x) > mx:
        mx = pov.count(x)

if mx == 0:
    print(1)
else:
    print(mx)
","0.0"
"027966cc-bba6-4e6a-83bf-ea3f730fb59d","n = int(input())
s=input()

s_ = set()
ans=0

for i in range(n-1):
    if s[i]+s[i+1] not in s_:
        ans+=1
        s_.add((s[i]+s[i+1]))
print(ans)","0.0"
"d949e12a-1807-4b82-a4ab-c1a178a79888","n = int(input())
k = 0
for i in range(10000000000):
    if sum(list(map(int, list(str(i))))) == 10:
        k += 1
        if k == n:
            break
print(i)
","0.0"
"027966cc-bba6-4e6a-83bf-ea3f730fb59d","n = int(input())

a = input()

t = []

s=0
for i in range(n-1):
    if not(a[i]+a[i+1] in t):
        s+=1
        t+=[a[i]+a[i+1]]
print(s)
","0.0"
"853bea78-6aa0-4fcf-8c5a-5f278603c518","n=int(input())
k=int(input())
x=int(input())
y=int(input())
if n>k:
    k1=x*k
    k2=y*(n-k)
    print(k1+k2)
else:
    print(n*x)","0.0"
"aeb122ea-bb7f-44ee-93c8-65ead3d4f5f3","a, b = map(int, input().split())
i = 0
x = 0
c = 240 - b
while x + 5*(i+1) <= c:
    x += 5*(i+1)
    i += 1
if i > a:
    i = a
print(i)
","0.0"
"e02095cd-3f62-4005-a067-a9da53d342bb","n = int(input())
a = list(map(int, input().split()))
b = list(map(int, input().split()))
o = 0
r1 = 0
r2 = 0
for i in range(n):
    if r1 == r2 and a[i]==b[i]:
        o+=a[i]
    r1+=a[i]
    r2 += b[i]
print(o)
","0.0"
"770952ee-5595-4690-9f1a-a172955624fa","n=int(input())
sp=list(map(int, input().split()))
sp.sort()
mx=0
c=0
for i in range(len(sp)-1):
    if sp[i]==sp[i+1]:
        c+=1
        mx=max(c+1, mx)
    else:
        mx=max(mx, c+1)
        c=0
        
print(mx)","0.0"
"853bea78-6aa0-4fcf-8c5a-5f278603c518","n, k, x, y = int(input()), int(input()), int(input()), int(input())
if n >= k:
    count = k * x
    n -= k
    count += n * y
else:
    count = n * x

print(count)
","0.0"
"7d8fcbed-1f16-4d19-8a17-6560267bc64c","p = list(input().split())
n = int(p[0])
m = int(p[1])
k = int(p[2])
if k >= n and n < m:
    print('NO')
else:
    counter = 0
    while m > 0:
        if m <= n:
            m -= n
        else:
            m -= n
            m += k
        counter += 1
print(counter)","0.0"
"aeb122ea-bb7f-44ee-93c8-65ead3d4f5f3","n, k = list(map(int, input().split()))
time = 240 - k
won = 0
for i in range(1, n+1):
    rnd = 5 * i
    if time - rnd >= 0:
        time -= rnd
        won += 1
    else:
        break
print(won)
","0.0"
"17c6577a-b831-485d-ba22-fb47923019b4","n = int(input()) + 1
s = [0]
for i in range(n):
    print("" ""*2*(n - i - 1),end = """")
    print(*s,end = "" "")
    print(*sorted(s[:-1],reverse=True))
    s.append(i+1)

s.pop()
s.pop()
for i in range(n-1):
    print("" "" * 2 * (i + 1),end = """")
    print(*s, end="" "")
    print(*sorted(s[:-1], reverse=True))
    s.pop()


'''
    0
  0 1 0
0 1 2 1 0
  0 1 0
    0
'''","0.0"
"027966cc-bba6-4e6a-83bf-ea3f730fb59d","n = int(input())
s = input()
data = set()
for i in range(n-1):
    data.add(s[i:i+2])

print(len(data))","0.0"
"a40047cc-77a1-4a37-9e28-a61947b07df8","n = int(input())
m = list(map(int,input().split()))
d = list(map(int,input().split()))
m.sort()
d.sort()
l = 0
for i in range(n):
    l+= abs(m[i]-d[i])
print(l)","0.0"
"17c6577a-b831-485d-ba22-fb47923019b4","n=int(input())
k=["" ""] * (n + 1)
for i in range(n + 1):
    k=k[1:]+[i]
    print(*k, *k[-2::-1])
for i in range(n):
    k=["" ""]+k[:-1]
    print(*k, *k[-2::-1])","0.0"
"7d8fcbed-1f16-4d19-8a17-6560267bc64c","p = list(input().split())
n = int(p[0])
m = int(p[1])
k = int(p[2])
if k >= n and n < m:
    print('NO')
else:
    counter = 0
    while m > 0:
        if m <= n:
            m -= n
        else:
            m -= n
            m += k
        counter += 1
    print(counter)","0.0"
"a40047cc-77a1-4a37-9e28-a61947b07df8","n = int(input())
a = list(map(int, input().split()))
b = list(map(int, input().split()))
a.sort()
b.sort()
ct = 0
for i in range(n):
    ct += abs(a[i] - b[i])
print(ct)
","0.0"
"02bc07a3-d63a-4896-b585-e74c06bfc7f2","s1=1
w=0
n,x=map(int,input().split())
a=list(map(int,input().split()))
for i in range(len(a)):
    w+=a[i]
if w<0:
    w=w*-1
if w%x==0:
    s1=0
print(w//x+s1)
","0.0"
"42d47feb-cba9-4d18-8ccc-2c20605db82d","n, m = map(int, input().split())
print(n * (m // 2))","0.0"
"853bea78-6aa0-4fcf-8c5a-5f278603c518","n = int(input())
k = int(input())
x = int(input())
y = int(input())
if n<=k:
    print(x*n)
else:
    print(k*x+y*(n-k))","0.0"
"e02095cd-3f62-4005-a067-a9da53d342bb","n = int(input())
a = list(map(int, input().split()))
b = list(map(int, input().split()))
first = 0
second = 0
res = 0
for x in range(n):
    first += a[x]
    second += b[x]
    if first == second and a[x] == b[x]:
            res += a[x]
print(res)
        
    
","0.0"
"770952ee-5595-4690-9f1a-a172955624fa","input()
data = list(map(int, input().split(' ')))
data = list(map(lambda x: data.count(x), data))
print(max(data))","0.0"
"a40047cc-77a1-4a37-9e28-a61947b07df8","def intt (a):
    for i in range (len(a)):
        a[i] = int(a[i])
    return a
def spisok ():
    return intt(input().split())


n = int(input())
a = spisok()
b = spisok()
a.sort()
b.sort()
d = 0
for i in range (n):
    d += max(a[i], b[i]) - min(a[i], b[i])
print (d)























'''
for i in range (n):
    c = a[i]
    for j in range (1600):
        if j % 2 == 0:
            if c + (j // 2) in b:

                d += max(c, c + (j // 2)) - min(c, c + (j // 2))
                print(c, c + (j // 2), 1, d)
                b.pop(b.index(c + (j // 2)))
                break
        else:
            if c - (j // 2) in b:

                d += max(c, c - (j // 2)) - min(c, c - (j // 2))
                print(c, c - (j // 2), 2, d)
                b.pop(b.index(c - (j // 2)))
                break
'''","0.0"
"c2081cad-a682-43e2-8960-081ef8963a37","a,b=map(int,input().split())
print(min(a,b),(max(a,b)-min(a,b))//2)","0.0"
"e02095cd-3f62-4005-a067-a9da53d342bb","n = int(input())
mas1 = list(map(int, input().split()))
mas2 = list(map(int, input().split()))
s1 = 0
s2 = 0
k = 0
for i in range(n):
    s1 += mas1[i]
    s2 += mas2[i]
    if (s1 == s2) and (mas1[i]==mas2[i]):
        k += mas1[i]
print(k)
","0.0"
"e02095cd-3f62-4005-a067-a9da53d342bb","n = int(input())
sp1 = [int(i) for i in input().split()]
sp2 = [int(i) for i in input().split()]
d = 0
s1 = 0
s2 = 0
for i in range(0, n):
    if sp1[i]==sp2[i] and s1==s2:
        d+=sp1[i]
    s1+=sp1[i]
    s2+=sp2[i]

print(d)","0.0"
"0f42de72-e8d1-4f41-8797-90a6cd184af9","def total_cost(x, y, z):
    cake_price = 3
    zephyr_price = cake_price + 2
    chocolate_price = zephyr_price + 7
    total = x * cake_price + y * zephyr_price + z * chocolate_price
    return total
x, y, z = map(int, input().split())
print(total_cost(x, y, z))","0.0"
"af37658e-d46e-45db-9ee2-ea44a450db89","m, ns, k1, l = map(int, input().split())

if ns%k1==0:
    y = ns//k1
else:
    y = (ns//k1)+1
if m * y % l == 0:
    print(y*m//l)
else:
    print(y*m//l + 1)","0.0"
"e02095cd-3f62-4005-a067-a9da53d342bb","n = int(input())
a = list(map(int, input().split()))
b = list(map(int, input().split()))
sa = 0
sb = 0
s = 0
for x, y in zip(a, b):
    if (sa == sb) and (x == y):
        s += x
    sa += x
    sb += y
print(s)","0.0"
"0f42de72-e8d1-4f41-8797-90a6cd184af9","q=3
x,y,z=map(int, input().split())
a=q+2
d=a+7
f=x*q
r=y*a
g=z*d
w=f+r+g
print(w)","0.0"
"c2081cad-a682-43e2-8960-081ef8963a37","ab = list(map(int, input().split()))

k1 = min(ab[0], ab[1])
k2 = ((max(ab[0], ab[1]))-k1)//2
print(k1,k2)","0.0"
"7d8fcbed-1f16-4d19-8a17-6560267bc64c","a = list(map(int,input().split()))
n = a[0]
m = a[1]
k = a[2]
i = 0
x = 0
if n<=k:
    print('NO')
else:
    while x == 0:
        m-=n
        if m<=0:
            x = 1
        i+=1
        m+=k
print(i)","0.0"
"7d8fcbed-1f16-4d19-8a17-6560267bc64c","import math
n, m, k = map(int, input().split())
if n <= k:
    print('NO')
else:
    c = abs(n - k)
    j = m - n
    print(1 + math.ceil(j / c))","0.0"
"e16baab9-5d32-479d-877e-04518a247380","n, m = map(int, input().split())
a = list(map(int, input().split()))
s = 0
r = 0
l = 0
while r!=n:
    if a[r]-a[l]<=m:
        r+=1
    else:
        l+=1
        s+=(n-r)
print(s)","0.0"
"c2081cad-a682-43e2-8960-081ef8963a37","a, b = map(int, input().split())
s = abs(a-b)
print(min(a,b), s//2)","0.0"
"027966cc-bba6-4e6a-83bf-ea3f730fb59d","n = int(input())
a = input()
x = ""ABCDEFG""
ans = 0
for i1 in x:
    for i2 in x:
        if (i1 + i2) in a:
            ans = ans + 1
print(ans)","0.0"
"42d47feb-cba9-4d18-8ccc-2c20605db82d","n, m = map(int,input().split())

g = m//2 * n

print(g)","0.0"
"e02095cd-3f62-4005-a067-a9da53d342bb","n = int(input())
a = list(map(int, input().split()))
b = list(map(int, input().split()))

a_way = 0
b_way = 0

cnt = 0

for i in range(n):
    if a_way == b_way:
        if a[i] == b[i]:
            cnt += a[i]
    a_way += a[i]
    b_way += b[i]

print(cnt)

","0.0"
"7d8fcbed-1f16-4d19-8a17-6560267bc64c","a = list(map(int,input().split()))
n = a[0]
m = a[1]
k = a[2]
i = 0
x = 0
if n<=k:
    print('NO')
else:
    while x == 0:
        m-=n
        if m<=0:
            x = 1
        i+=1
        m+=k
    print(i)","0.0"
"8381a3f6-aaba-448f-b65f-50117785adf7","n,m,a=list(map(int, input().split()))
if m%a==0:
    m1=m//a
else:
    m1=m//a+1
if n%a==0:
    n1=n//a
else:
    n1=n//a+1
print(m1*n1)","0.0"
"027966cc-bba6-4e6a-83bf-ea3f730fb59d","n = int(input())
s = input()
l= []
c = 0
for i in range(n-1):
    if s[i:i+2] not in l:
        l.append(s[i:i+2])
        c += 1
print(c)","0.0"
"42d47feb-cba9-4d18-8ccc-2c20605db82d","n, m = map(int, input().split())
max_1 = n * (m // 2)
print(max_1)



","0.0"
"8381a3f6-aaba-448f-b65f-50117785adf7","n, m, a =map(int, input().split())
n += (a - (n % a)) % a
m += (a - (m % a)) % a
print(n*m//a//a)","0.0"
"aeb122ea-bb7f-44ee-93c8-65ead3d4f5f3","n,k=[int(i) for i in input().split()]
t=4*60
tt=t-k
def a_kak(n,tt):
    a=[int(i) for i in range(1,n+1)]
    while sum(a)*5>tt:
        a=a[:-1]
    return a[-1]
print(a_kak(n, tt))","0.0"
"aeb122ea-bb7f-44ee-93c8-65ead3d4f5f3","kn = list(map(int, input().split()))
n = kn[0]
k = kn[1]
r = 0
e = 240
for i in range(1, n+1):
    if k >= e:
        print(r)
        exit()
    if k > e-i*5:
        print(r)
        exit()
    r += 1
    e -= i*5
print(r)","0.0"
"0f42de72-e8d1-4f41-8797-90a6cd184af9","X, Y, Z=map(int,input().split())
summa=3*X+5*Y+12*Z
print(summa)
","0.0"
"7d8fcbed-1f16-4d19-8a17-6560267bc64c","q,w,e=map(int,input().split())
r=0
if q<=e:
    print('NO')
    exit()
while w>0:
    w=w-q
    if w>0:
        w=w+e
    r=r+1
print(r)","0.0"
"853bea78-6aa0-4fcf-8c5a-5f278603c518","n=int(input())
k=int(input())
x=int(input())
y=int(input())
q=0
for i in range(n):
    if k>0:
        q=q+x
    else:
        q=q+y
    k=k-1
print(q)","0.0"
"6824fb27-2339-421d-85db-60758b59cddc","n = 1
need = int(input())
k = 0
while n != need:
    if 5 * n <= need:
        n *= 5
    elif 2 * n <= need:
        n *= 2
    else:
        n += 1
    k += 1
print(k)
","0.0"
"42d47feb-cba9-4d18-8ccc-2c20605db82d","n , m = map(int,input().split())
print((m + 0)//2 * n)","0.0"
"17c6577a-b831-485d-ba22-fb47923019b4","n = int(input())
for i in range(n + 1):
    print("" "" * (abs(n - i) * 2), end='')
    for j in range(0, i):
        print(j, end=' ')
    for j in range(i, -1, -1):
        print(j, end=' ')
    print()
for i in range(n - 1, -1, -1):
    print("" "" * (abs(n - i) * 2), end='')
    for j in range(0, i):
        print(j, end=' ')
    for j in range(i, -1, -1):
        print(j, end=' ')
    print()","0.0"
"c2081cad-a682-43e2-8960-081ef8963a37","a, b = map(int, input().split())

print(min(a,b), (max(a,b)-min(a,b))//2)","0.0"
"aeb122ea-bb7f-44ee-93c8-65ead3d4f5f3","n, k=map(int, input().split())
t=240-k
i=1
while t>=0:
    t=t-5*i
    i+=1
print(min(n, i-2))
","0.0"
"8381a3f6-aaba-448f-b65f-50117785adf7","n, m, a = list(map(int, input().split()))
n, m = n + (a-n%a)%a,  m + (a-m%a)%a
print(n*m//(a*a))","0.0"
"853bea78-6aa0-4fcf-8c5a-5f278603c518","n = int(input())
k = int(input())
x = int(input())
y = int(input())
c = 0
for i in range(n):
    if k > 0:
        c += x
    else:
        c += y
    k -= 1
print(c)","0.0"
"e02095cd-3f62-4005-a067-a9da53d342bb","n = int(input())
a = list(map(int, input().split()))
b = list(map(int, input().split()))
# a = list(map(int, '5 2 3 3 2'.split()))
# b = list(map(int, '3 4 3 2 3'.split()))
# n = 5
s1, s2 = 0,0
c = 0

for i in range(n):
	if s1 == s2 and a[i] == b[i]:
		c += a[i]
	s1 += a[i]
	s2 += b[i]
print(c)
","0.0"
"0f42de72-e8d1-4f41-8797-90a6cd184af9","a,b,c = map(int, input().split())
x = 3
y = 5
z = 12
print(x*a+y*b+z*c)
","0.0"
"a40047cc-77a1-4a37-9e28-a61947b07df8","n = int(input())
a = list(map(int, input().split()))
b = list(map(int, input().split()))
a.sort()
b.sort()
s = 0
for i in range(n):
    s+=abs(a[i]-b[i])
print(s)","0.0"
"af37658e-d46e-45db-9ee2-ea44a450db89","# k      n         s         p
deti, korab, korabnalist, listi = map(int, input().split())

answer = korab 

if answer % korabnalist != 0:
    answer = answer // korabnalist + 1
else:
    answer //= korabnalist

answer *= deti

if answer % listi != 0:
    answer = answer // listi + 1
else:
    answer //= listi

print(answer)","0.0"
"853bea78-6aa0-4fcf-8c5a-5f278603c518","time = int(input())
K = int(input())
X = int(input())
Y = int(input())
Ans = 0
if time < K:
    print(time*X)
else:
    print(K * X + (time - K) * Y)","0.0"
"853bea78-6aa0-4fcf-8c5a-5f278603c518","n = int(input())
k = int(input())
x = int(input())
y = int(input())
h = 0
if n > k:
    h = n - k
    print(h * y + k * x)
else:
    print(n * x)
    
","0.0"
"af37658e-d46e-45db-9ee2-ea44a450db89","k,n,s,p=map(int,input().split())
t=k*( (n+s-1)//s )
print( (t+p-1)//p )","0.0"
"a40047cc-77a1-4a37-9e28-a61947b07df8","n = int(input())
sp1 = [int(i) for i in input().split()]
sp2 = [int(i) for i in input().split()]
sp1.sort()
sp2.sort()
r=0
for i in range(0, n):
    r+=abs(sp1[i]-sp2[i])
print(r)","0.0"
"027966cc-bba6-4e6a-83bf-ea3f730fb59d","n = int(input())
s = input()
new_s = s[0]
for i in range(1, n-1):
    new_s += s[i] * 2
new_s += s[-1]
lst = []
for i in range(1, 2*n, 2):
    if new_s[i-1:i+1] not in lst:
        lst.append(new_s[i-1:i+1])
print(len(lst)-1)","0.0"
"0f42de72-e8d1-4f41-8797-90a6cd184af9","x,y,z=map(int,input().split())
k=3*x+5*y+12*z
print(k)

    
","0.0"
"a40047cc-77a1-4a37-9e28-a61947b07df8","n = int(input())
a = [int(x) for x in input().split()]
b = [int(x) for x in input().split()]
a.sort()
b.sort()
c = 0
for i in range(n):
    c += abs(a[i]-b[i])
print(c)","0.0"
"0f42de72-e8d1-4f41-8797-90a6cd184af9","x,y,z=map(int,input().split())
w=x*3+y*5+z*12
print(w)","0.0"
"c2081cad-a682-43e2-8960-081ef8963a37","a, b = map(int, input().split())
r = min(a, b)
s = (max(a,b) - r)//2
print(r, s)
","0.0"
"027966cc-bba6-4e6a-83bf-ea3f730fb59d","n=int(input())
a=input()
b=set()
for i in range(n-1):
    b.add(a[i:i+2])
print(len(b))","0.0"
"0f42de72-e8d1-4f41-8797-90a6cd184af9","x,y,z=map(int,input().split())
a=x*3+y*5+z*12
print(a)","0.0"
"027966cc-bba6-4e6a-83bf-ea3f730fb59d","s1 = set()
n = int(input())
s = input()
for i in range(n - 1):
    s1.add(s[i:i+2])
print(len(s1))","0.0"
"17c6577a-b831-485d-ba22-fb47923019b4","n = int(input())
a = []
for i in range(n):
    a.append(
        "" "".join(
            ["" ""] * (n - i)
            + list(map(str, range(i + 1)))
            + list(map(str, range(i - 1, -1, -1)))
        )
    )
now = a.copy()
a.append("" "".join(list(map(str, range(n + 1))) + list(map(str, range(n - 1, -1, -1)))))
a += now[::-1]
for i in a:
    print(i)
","0.0"
"a40047cc-77a1-4a37-9e28-a61947b07df8","n = int(input())

boys = list(map(int, input().split()))
girls = list(map(int, input().split()))

boys.sort()
girls.sort()

cnt = 0
for i in range(n):
    cnt += abs(boys[i] - girls[i])

print(cnt)
","0.0"
"6824fb27-2339-421d-85db-60758b59cddc","x = int(input())
y = 0
if x != 0:
    if x % 5 == 0:
        y += 1
        x /= 5
        while x % 5 == 0:
            y += 1
            x /= 5

    if x % 2 == 0:
        y += 1
        x /= 2
        while x % 2 == 0:
            y += 1
            x /= 2
        
    while x != 0:
        y += 1
        x -= 1

print(y-1)","0.0"
"e02095cd-3f62-4005-a067-a9da53d342bb","n = int(input())
data1 = list(map(int, input().split()))
data2 = list(map(int, input().split()))

s1 = 0
s2 = 0
a = 0
for i in range(n):
    if s1 == s2 and data1[i] == data2[i]:
        a += data1[i]
    s1 += data1[i]
    s2 += data2[i]
print(a)","0.0"
"770952ee-5595-4690-9f1a-a172955624fa","n = int(input())
numbs = list(map(int,input().split()))
count=0
c=[]
for element in numbs:
    for element1 in numbs:
        if element==element1:
            count+=1
    c.append(count)
    count=0
c=sorted(c)
print(c[-1])
","0.0"
"a40047cc-77a1-4a37-9e28-a61947b07df8","n = int(input())
boys = sorted(map(int, input().split()))
girls = sorted(map(int, input().split()))
print(sum(abs(boy - girl) for boy, girl in zip(boys, girls)))","0.0"
"d949e12a-1807-4b82-a4ab-c1a178a79888","k=int(input())
a1=k*10
a2=10-k
print(a1+a2)
","0.0"
"027966cc-bba6-4e6a-83bf-ea3f730fb59d","def intt (a):
    for i in range (len(a)):
        a[i] = int(a[i])
    return a
def spisok ():
    return intt(input().split())


n = int(input())
s = input()
ss = []
for i in range (n - 1):
    if not s[i:i + 2] in ss:
        ss.append(s[i:i + 2])
print (len(ss))
","0.0"
"a4accdf7-f726-49d2-b19a-aeb590224402","n=int(input())

d=[[-1]*10 for _ in range(n)]

for i in range(n):
    for j in range(10):
        if i==0:
            d[i][j]=1
            continue
        d[i][j]=0
        for k in range(j, 10):
            d[i][j]+=d[i - 1][k]

print(sum(d[-1]))","0.0"
"8381a3f6-aaba-448f-b65f-50117785adf7","x, y, a = map(int, input().split())
print((x // a + bool(x % a)) * (y // a + bool(y % a)))
","0.0"
"c2081cad-a682-43e2-8960-081ef8963a37","l = [int(i) for i in input().split()]
b = min(l)
for i in range(2):
    l[i] -= b
if l[0] != l[1]:
    for i in range(2):
        if l[i] != 0:
            n = l[i]//2
else:
    n =0
print(b, n)","0.0"
"027966cc-bba6-4e6a-83bf-ea3f730fb59d","n = int(input())
s = input()
a = set()
for i in range(1, n):
    a.add(s[i] + s[i-1])
print(len(a))","0.0"
"0f42de72-e8d1-4f41-8797-90a6cd184af9","x,y,z=input().split()
print(int(x)*3+int(y)*5+int(z)*12)
","0.0"
"7d8fcbed-1f16-4d19-8a17-6560267bc64c","a = input()

b = a.split(' ')
a1 = b[0]
b1 = b[1]
c1 = b[2]
a = int(a1)
b = int(b1)
c = int(c1)
if a < c:
    print(""NO"")
else:
    q = 1
    while True:
        b -= a
        if b <= 0:
            print(q)
            break
        b += c
        q += 1
    
","0.0"
"c2081cad-a682-43e2-8960-081ef8963a37","n=[int(i) for i in input().split()]
k=min(n)
n1=0
for i in range(2):
    n[i]-=k
for i in range(2):
    if n[i]!=0:
        n1=n[i]//2
print(k,n1)
","0.0"
"a40047cc-77a1-4a37-9e28-a61947b07df8","n = int(input())
m = list(map(int, input().split()))
d = list(map(int, input().split()))
m.sort()
d.sort()
razn = []
for x in range(n):
    razn.append(abs(m[x] - d[x]))
print(sum(razn))
    
","0.0"
"d949e12a-1807-4b82-a4ab-c1a178a79888","k=int(input())
a1=k*10
a2=10-k
print(a1+a2)","0.0"
"0f42de72-e8d1-4f41-8797-90a6cd184af9","x,y,z=map(int,input().split())
a=x*3+y*5+z*12
print(a)","0.0"
"a40047cc-77a1-4a37-9e28-a61947b07df8","n=int(input())
m=[int(x)for x in input().split()]
d=[int(x)for x in input().split()]
m.sort()
d.sort()
k=0
for i in range(n):
    k+=abs(m[i]-d[i])
print(k)
","0.0"
"e02095cd-3f62-4005-a067-a9da53d342bb","a = int(input())
k1 = list(map(int, input().split()))
k2 = list(map(int, input().split()))
r1 = 0
r2 = 0
ans = 0
for i in range(a):
    r1 += k1[i]
    r2 += k2[i]
    if r1 == r2 and k1[i] == k2[i]:
        ans += k1[i]
print(ans)","0.0"
"5895fc4e-b515-464a-a0e2-697d86bf8783","a = list(map(int, input().split()))
b = max(a[1:])
c = min(a[1:])
for x in range(len(a)-1):
    if a[x+1] == b:
        print(c, end=' ')
    else:
        print(a[x+1], end=' ')","0.0"
"aeb122ea-bb7f-44ee-93c8-65ead3d4f5f3","n,k=map(int, input().split())
x=(24*60)-k
ans=0
i=0
while x>=20*60+(i+1)*5 and i<n:
    ans+=1
    i+=1
    x-=i*5
print(ans)","0.0"
"e02095cd-3f62-4005-a067-a9da53d342bb","n = int(input())
a = list(map(int, input().split()))
b = list(map(int, input().split()))
a1 = 0
b1 = 0
count = 0
for i in range(n):
    a1 += a[i]
    b1 += b[i]
    if a[i] == b[i] and b1==a1:
        count+= a[i]
    i+=1 
print(count)","0.0"
"8381a3f6-aaba-448f-b65f-50117785adf7","kn = list(map(int, input().split()))
n = kn[0]
m = kn[1]
a = kn[2]
n1 = n % a
n2 = n // a
n3 = 0
if n1 > 0:
    n3 = n2 + 1
else:
    m3 = m2
m1 = m % a
m2 = m // a
m3 = 0
if m1 > 0:
    m3 = m2 + 1
else:
    m3 = m2
print(m3 * n3)","0.0"
"17c6577a-b831-485d-ba22-fb47923019b4","skolko = int(input())
for i in range(skolko):
    probeli = ((skolko-i)*2)*' '
    stroka = probeli
    cifri = ''
    for j in range(i):
        cifri += str(j)+' '
    stroka += cifri + str(i) + cifri[::-1]
    print(stroka + probeli)
for i in range(skolko,-1, -1):
    probeli = ((skolko - i) * 2) * ' '
    stroka = probeli
    cifri = ''
    for j in range(i):
        cifri += str(j) + ' '
    stroka += cifri + str(i) + cifri[::-1]
    print(stroka + probeli)
# ââââââââââââââââââââââââââââââââ
# ââââââââââââââââââââââââââââââââ
# âââââââââââââââââââââââââââââââ
# âââââââââââââââââââââââââââââââ
# âââââââââââââââââââââââââââââ
# ââââââââââââââââââââââââââââââ
# âââââââââââââââââââââââââââââââ
# âââââââââââââââââââââââââââââââ
# ââââââââââââââââââââââââââââââ","0.0"
"c2081cad-a682-43e2-8960-081ef8963a37","a, b = map(int, input().split())
print(min(a,b), (a+b-2*min(a,b))//2)","0.0"
"5895fc4e-b515-464a-a0e2-697d86bf8783","n, lst = (a := list(map(int, input().split())))[0], a[1:]
lst = [min(lst) if i == max(lst) else i for i in lst]
print(*lst)","0.0"
"8381a3f6-aaba-448f-b65f-50117785adf7","kn = list(map(int, input().split()))
n = kn[0]
m = kn[1]
a = kn[2]
n1 = n % a
n2 = n // a
n3 = 0
if n1 > 0:
    n3 = n2 + 1
else:
    n3 = n2
m1 = m % a
m2 = m // a
m3 = 0
if m1 > 0:
    m3 = m2 + 1
else:
    m3 = m2
print(m3 * n3)","0.0"
"0f42de72-e8d1-4f41-8797-90a6cd184af9","a,b,c = input().split()
print(int(a)*3+int(b)*5+int(c)*12)
","0.0"
"aeb122ea-bb7f-44ee-93c8-65ead3d4f5f3","s=input()
a=list(map(int, s.split()))
n=a[0]
k=a[1]
w=240-k
q=0
for i in range(1, n+1):
    if w-5*i>=0:
        q=q+1
        w=w-5*i
print(q)","0.0"
"8381a3f6-aaba-448f-b65f-50117785adf7","n,k,a=[int(i) for i in input().split()]
if n%a==0 and k%a==0:
    print((n//a)*(k//a))
elif n%a!=0 and k%a==0:
    print((k//a)*((n//a)+1))
elif n % a == 0 and k % a != 0:
    print((n // a) * ((k // a) + 1))
else:
    print(((n//a)+1) * ((k // a) + 1))","0.0"
"027966cc-bba6-4e6a-83bf-ea3f730fb59d","from itertools import permutations

n = int(input())
s = input()
dct = dict()
ct = 0
for i in permutations(""ABCDEFG"", 2):
    dct[''.join(i)] = 0
dct[""AA""] = 0
dct[""BB""] = 0
dct[""CC""] = 0
dct[""DD""] = 0
dct[""EE""] = 0
dct[""FF""] = 0
dct[""GG""] = 0
for i in range(n - 1):
    if dct[s[i] + s[i + 1]] == 0:
        ct += 1
        dct[s[i] + s[i + 1]] = 1
print(ct)","0.0"
"7d8fcbed-1f16-4d19-8a17-6560267bc64c","def calculate_hits(n, m, k):
    if n >= m:
        return 1
    if n > k:
        hits = (m - n + (n - k) - 1) // (n - k) + 1
        return hits
    return ""NO""

n, m, k = map(int, input().split())
print(calculate_hits(n, m, k))","0.0"
"aeb122ea-bb7f-44ee-93c8-65ead3d4f5f3","n,k=map(int,input().split())
v=0
r=0
c=240
for i in range(n):
    v=v+5*(i+1)
    if v+k>c:
        break
    r+=1
    if v+k>c:
        break
print(r)
    
    
    
","0.0"
"17c6577a-b831-485d-ba22-fb47923019b4","n=int(input())
s=''
h=[]
for i in range(n+1):
    for q in range(i+1):
        if q<i:
            s+=str(q)+' '
        else:
            s=s+str(i)+s[::-1]
    if len(s)<2*n+1+2*n:
        a=(2*n+1+2*n)-len(s)
        s=' '*(a//2)+s+' '*(a//2)
    h.append(s)
    s=''
k=len(h)-2
for i in range(2*n+1):
    if i<len(h):
        print(h[i])
    else:
        print(h[k])
        k-=1","0.0"
"c2081cad-a682-43e2-8960-081ef8963a37","a, b = map(int, input().split())
print(min(a, b), (max(a, b) - min(a, b)) // 2)","0.0"
"770952ee-5595-4690-9f1a-a172955624fa","n = int(input())
m = sorted([int(x) for x in input().split()])
m1 = []
m_c = 0
if n == 1:
    print(1)
else:
    for i in range(n):
        m1.append([])

    for i in range(len(m) - 1):
        if m[i] == m[i+1]:
            m_c += 1
            m1[m_c].append(m[i])
        else:
            m_c = 0
            m1[m_c].append(m[i])
    print(sum([1 for i in m1 if i]))
","0.0"
"a40047cc-77a1-4a37-9e28-a61947b07df8","n = int(input())
data2 = list(map(int, input().split()))
data2.sort()
data1 = list(map(int, input().split()))
data1.sort()
s = 0
for i in range(n):
    s += abs(data2[i] - data1[i])
print(s)
","0.0"
"0f42de72-e8d1-4f41-8797-90a6cd184af9","a,b,c = input().split()
print(int(a)*3+int(b)*5+int(c)*12)
","0.0"
"5eebb219-dec9-41ce-83c6-efc4a4670acc","a = input()
s = ['q','w','e','r','t','y','u','i','o','p','a','s','d','f','g','h','j','k','l','z','x','c','v','b','n','m']
for i in range(26):
    if a == s[i]:
        m = i + 1
        break
if m == 26:
    print('q')
else:
    print(s[m])","0.0"
"853bea78-6aa0-4fcf-8c5a-5f278603c518","N = int(input())
K = int(input())
X = int(input())
Y = int(input())
if N<=K:
    print(N*X)
else:
    print(K * X + (N-K)*Y)","0.0"
"7d8fcbed-1f16-4d19-8a17-6560267bc64c","a = input()

b = a.split(' ')
a1 = b[0]
b1 = b[1]
c1 = b[2]
a = int(a1)
b = int(b1)
c = int(c1)
if a < c:
	print(""NO"")
else:
	q = 1
	while True:
		b -= a
		if b <= 0:
			print(q)
			break
		b += c
		q += 1","0.0"
"d949e12a-1807-4b82-a4ab-c1a178a79888","k=int(input())
if k<=5:
    a1=k*10
    a2=10-k
    print(a1+a2)
else:
    a1=10-k
    a2=k*10
    print(a1+a2)
","0.0"
"853bea78-6aa0-4fcf-8c5a-5f278603c518","def calculate_hotel_cost(n, k, x, y):

  first_k_nights_cost = min(n, k) * x
  remaining_nights_cost = max(0, n - k) * y
  total_cost = first_k_nights_cost + remaining_nights_cost
  return total_cost

n = int(input())
k = int(input())
x = int(input())
y = int(input())

total_cost = calculate_hotel_cost(n, k, x, y)
print(total_cost)
","0.0"
"a40047cc-77a1-4a37-9e28-a61947b07df8","n = int(input())
mas1 = list(map(int, input().split()))
mas2 = list(map(int, input().split()))
mas1.sort()
mas2.sort()
res = 0
for i in range(n):
    res += abs(mas1[i]-mas2[i])
print(res)","0.0"
"0f42de72-e8d1-4f41-8797-90a6cd184af9","x,y,z= map(int,input().split())
p = 3
zs = p + 2
s = 12
print(p * x + zs *y + z*s)

","0.0"
"027966cc-bba6-4e6a-83bf-ea3f730fb59d","n = int(input())
pes = input()
c = set()
for i in range(n-1):
    c.add(pes[i:i+2])
print(len(c))","0.0"
"5895fc4e-b515-464a-a0e2-697d86bf8783","n, marks = input().split(maxsplit=1)
marks = list(map(int, marks.split()))
m = max(marks)
mi = min(marks)
for i in range(int(n)):
    if marks[i] == m:
        marks[i] = mi
print(*marks)
","0.0"
"d949e12a-1807-4b82-a4ab-c1a178a79888","n=int(input())
ch=1
count=0
while count<n:
    ch+=1
    sumc=ch%10
    p=1
    while ch//10**p>=1:
        sumc+=ch//10**p%10
        p+=1
    if sumc==10:
        count+=1
        chr=ch
print(chr)","0.0"
"aeb122ea-bb7f-44ee-93c8-65ead3d4f5f3","n, k = map(int, input().split())
c = 0
p = 240 - k
for i in range(1, n + 1):
    if p >= 5 * i:
        c += 1
        p -= 5 * i
print(c)
","0.0"
"a40047cc-77a1-4a37-9e28-a61947b07df8","n=int(input())
n1=[int(i) for i in input().split()]
n2=[int(i) for i in input().split()]
n1.sort()
n2.sort()
m=[]
for i in range(n):
    m.append(abs(n1[i]-n2[i]))
print(sum(m))
","0.0"
"aeb122ea-bb7f-44ee-93c8-65ead3d4f5f3","n, k = map(int, input().split())
q = 240-k
i = 1
while q > 0:
    q = q - i*5
    i += 1
    if q-i*5<=0:
        break
i = i-1
if i > n:
    print(n)
else:
    print(i)","0.0"
"c2081cad-a682-43e2-8960-081ef8963a37","def intt (a):
    for i in range (len(a)):
        a[i] = int(a[i])
    return a
def spisok ():
    return intt(input().split())


a, b = map(int, input().split())
if b > a:
    a, b = b, a
if (a + b) % 2 > 0:
    a -= 1
print (b, (a - b) // 2)","0.0"
"11d7d14b-eb4a-4dd7-94c1-67a03264c424","def max_even_sum(n, nums):
    even_nums = [num for num in nums if num % 2 == 0]
    odd_nums = [num for num in nums if num % 2 != 0]
    
    total_sum = sum(nums)
    if total_sum % 2 != 0: 
        if even_nums: 
            total_sum -= min(odd_nums)
        else: 
            total_sum -= sum(sorted(odd_nums)[:2])
    return total_sum
n = int(input())
nums = list(map(int, input().split()))
print(max_even_sum(n, nums))","0.0"
"d949e12a-1807-4b82-a4ab-c1a178a79888","print(10 + int(input()) * 9)
","0.0"
"027966cc-bba6-4e6a-83bf-ea3f730fb59d","n = int(input())
itog = input()
have = []
s = 0
for i in range(len(itog)-1):
    has = itog[i] + itog[i+1]
    if (itog[i] + itog[i+1]) not in have:
        s += 1
        have.append(has)
print(s)

","0.0"
"c2081cad-a682-43e2-8960-081ef8963a37","a,b= map(int,input().split())
t=min(a,b)
f=max(a,b)
print(t,(f-t) // 2)
","0.0"
"853bea78-6aa0-4fcf-8c5a-5f278603c518","n = int(input())
k = int(input())
x = int(input())
y = int(input())
if k > n:
    print(x*n)
else:
    d = k*x
    p = (n-k)*y
    print(d+p)","0.0"
"aeb122ea-bb7f-44ee-93c8-65ead3d4f5f3","n, k = map(int, input().split())
l = [i * 5 for i in range(1, n + 1)]
t = 4 * 60 - k
count = 0
summ = 0
while count < len(l):
    if summ + l[count] <= t:
        summ += l[count]
        count += 1
    else:
        print(count)
        break
else:
    print(count)
","0.0"
"5eebb219-dec9-41ce-83c6-efc4a4670acc","ogo=input()
ti='q.w.e.r.t.y.u.i.o.p.a.s.d.f.g.h.j.k.l.z.x.c.v.b.n.m'
ya=ti.split(""."")
s=ya.index(ogo)
if ogo==""m"":
    print(""q"")
else:
    print(ya[s+1])
","0.0"
"027966cc-bba6-4e6a-83bf-ea3f730fb59d","n = int(input())
sp = [str(i) for i in input()]
sp2=[]
for i in range(0, len(sp)-1):
    sp2.append(sp[i]+sp[i+1])
print(len(set(sp2)))","0.0"
"027966cc-bba6-4e6a-83bf-ea3f730fb59d","n = int(input())
a = input()
r = set()
for i in range(n - 1):
    r.add(a[i] + a[i + 1])
print(len(r))
","0.0"
"027966cc-bba6-4e6a-83bf-ea3f730fb59d","n = int(input())
song = input()
tracks = set()
for a, b in zip(song, song[1:]):
    tracks.add(a + b)
print(len(tracks))","0.0"
"a40047cc-77a1-4a37-9e28-a61947b07df8","a = int(input())
k1 = list(map(int, input().split()))
k2 = list(map(int, input().split()))
ans = 0
for i in range(a):
    ans += abs(min(k1) - min(k2))
    k1.remove(min(k1))
    k2.remove(min(k2))
print(ans)","0.0"
"c2081cad-a682-43e2-8960-081ef8963a37","a, b = map(int, input().split())
c1 = min(a, b)
a -= c1
b -= c1
c2 = a // 2 + b // 2
print(c1, c2)","0.0"
"17c6577a-b831-485d-ba22-fb47923019b4","n = int(input())
for i in range(n+1):
    l = [j for j in range(i)] + [k for k in range(i,-1,-1)]
    print(' '*(2*(n-i)), *l)
for i in range(n-1, -1,-1):
    l = [j for j in range(i)] + [k for k in range(i,-1,-1)]
    print(' '*(2*(n-i)), *l)
","0.0"
"a40047cc-77a1-4a37-9e28-a61947b07df8","def min_difference_in_pairs(n, boys, girls):
    # Sort boys and girls in descending order
    boys.sort(reverse=True)
    girls.sort(reverse=True)

    # Calculate the difference for each pair
    total_difference = 0
    for b, g in zip(boys, girls):
        total_difference += abs(b - g)

    return total_difference

# Read input
n = int(input())
boys = list(map(int, input().split()))
girls = list(map(int, input().split()))

# Calculate and print the result
print(min_difference_in_pairs(n, boys, girls))
","0.0"
"c2081cad-a682-43e2-8960-081ef8963a37","k, s = map(int, input().split())
a = min(k, s)
b = k + s - a
print(a, (b-a)//2)","0.0"
"853bea78-6aa0-4fcf-8c5a-5f278603c518","n = int(input())
k = int(input())
x = int(input())
y = int(input())
s = k*x+y*(n-k)
print(s)","0.0"
"027966cc-bba6-4e6a-83bf-ea3f730fb59d","n = int(input())
data = input()
dat = []
for i in range(n - 1):
    dat.append(data[i:i+2])
print(len(set(dat)))
","0.0"
"7d8fcbed-1f16-4d19-8a17-6560267bc64c","a = list(map(int, input().split("" "")))
if a[0]>a[2] or a[0]>=a[1]:
    s=1+((a[1]-a[2]-1)//(a[0]-a[2]))
    print(s)
else:
    print('NO')","0.0"
"aeb122ea-bb7f-44ee-93c8-65ead3d4f5f3","n, k = map(int, input().split())
q = 240-k+1
i = 0
while q > 0:
    q = q - (i+1)*5
    i += 1
    if q-i*5<=0:
        break
if i > n:
    print(n)
else:
    print(i)","0.0"
"853bea78-6aa0-4fcf-8c5a-5f278603c518","n = int(input())
k = int(input())
x = int(input())
y = int(input())
if n <= k:
    print(n*x)
else:
    n = n-k
    print(k*x+n*y)","0.0"
"027966cc-bba6-4e6a-83bf-ea3f730fb59d","n = int(input())
a = str(input())
elem = []
k = ''
for x in range(n-1):
    k = a[x] + a[x+1]
    elem.append(k)
elem = set(elem)
print(len(elem))
    
","0.0"
"770952ee-5595-4690-9f1a-a172955624fa","n = int(input())
m = sorted([int(x) for x in input().split()]) + ['O']
m1 = []
m_c = 0
if n == 1:
    print(1)
else:
    for i in range(n):
        m1.append([])

    for i in range(len(m)-1):
        if m[i] == m[i+1]:
            m_c += 1
            m1[m_c].append(m[i])
        else:
            m_c = 0
            m1[m_c].append(m[i])
    print(sum([1 for i in m1 if i]))
","0.0"
"17c6577a-b831-485d-ba22-fb47923019b4","n=int(input())
ans=[]
for i in range(n+1):
    s=[]
    for g in range(i+1):
        s.append(g)
    s=s+s[-2::-1]
    ans.append(s)
ans=ans+ans[-2::-1]
mx=len(ans[n])
for i in range(len(ans)):
    if i!=n:print("" ""*(mx-1-len(ans[i])),*ans[i])
    else:print(*ans[i])","0.0"
"5eebb219-dec9-41ce-83c6-efc4a4670acc","sp = 'qwertyuiopasdfghjklzxcvbnm'
i = sp.find(input())
print(sp[(i + 1) % 26])
","0.0"
"17c6577a-b831-485d-ba22-fb47923019b4","n = int(input())

main_arr = []
for i in range(n + 1):
    arr = []
    arr.append("" "" * ((n - i) * 2 - 1))
    arr.append(0)
    for j in range(1, i + 1):
        arr.append(j)
    for j in range(i - 1, 0, -1):
        arr.append(j)

    if (i != 0): arr.append(0)

    main_arr.append(arr)

main_arr[-1].pop(0)
#for i in range(len(main_arr)):
    #print(*main_arr[i])

for i in range(len(main_arr) - 2, -1, -1):
    main_arr.append(main_arr[i])

for i in range(len(main_arr)):
    print(*main_arr[i])
","0.0"
"42d47feb-cba9-4d18-8ccc-2c20605db82d","n,m=map(int,input().split())
if m%2==0:
    a=n*(m//2)
else:
    a=n*((m-3)//2)+n
print(a)","0.0"
"42d47feb-cba9-4d18-8ccc-2c20605db82d","visota, shirina = map(int,input().split())

c = shirina//2
print(c*visota)

# â¢µâ£³â¡³â£¯â¡³â¡½â£½â£«â£¿â£½â£½â¡ªâ£¯â£¿â£ºâ¢½â¢¯â£â£¯â£â¡â¡â£®â£»â¢¯â¡ªâ£«â¡â¡®â¡ºâ£ªâ¢¿â£ºâ£â¢®â££â¢³â¢¹â¢ºâ¢â â¢â ±â¡¨â ¢â¡â¢â¢â¢â¢¢â¢â¢â¢¢â¢â¢â ¢â¡â¡â¡â¡ªâ¡â¡¢â ¡â¡â ªâ¡â â¢â ¨â ¢â¡â¢®â¢¿â£½â£¿â£¿â£¿â£¿â£¿â£¿â£¿â£¿â£¿â£¿â£¿â£¿â£¿â£¿â£¿â£¿â£¿â£¿â¡¿â£¿â£»â£â£â£â£â£¿
# â¢¯â£·â¢¿â£â£¯â¡¿â£â¡¿â£â¡¿â£¾â£»â£½â£â£¯â£¿â£³â£¯â¢¿â£â£â£¾â¡½â£¾â£â£¯â¢¾â¢®â¢§â¢¯â¢¯â¡«â¡ªâ¡®â£ºâ£ªâ¡³â£â£â¢â¢â ¢â¡â¢â¢â¢â ¢â£â¢â¢±â¢¨â¢¢â ±â¡¨â¢¢â¢â¢â ªâ¡â¢â °â¡â¡¢â¢â â¡¢â ¡â¡â â¡â¢ªâ ¨â¡«â¢·â£¿â£¿â£»â£¿â£¿â£¿â£¿â£¿â£¿â£¿â£¿â¡¿â£¿â£»â¡¯â£¿â£ºâ£â¡¿â£¯â¡·â£¯â¡¿â£½â£»â£¾
# â¢½â¡ºâ£â£¿â£½â£¿â¢¿â£»â£¿â£»â£¿â£â£¿â£½â£¿â£¯â£¿â£¾â£¿â£¿â£¿â£·â£¿â£¿â£¾â£¿â£¿â£·â£¯â¢¯â£»â£ºâ¢â¡½â£µâ£³â£â¢®â¡â¢â â¡â¢â¢â ¢â¡â¡â¡â¡â¡â¡â¡â¡â¡â¡¢â¡â¢â ±â¡¨â ¢â¡â â¢â ¢â ¡â ¢â¡â¢â â¡¢â â â â¢â¢»â¢¿â£¿â£¿â£¿â£¿â£¿â¢¿â£»â£½â¢¾â£»â£½â£â£¯â¢¿â£â£·â£»â£¯â£â£·â£»â£¯â¢·â£»
# â£·â£»â£·â£¯â£¿â£¾â£¿â£¿â£¿â£¿â¢¿â£¿â£¿â£¿â£¿â¢¿â£¿â¡¿â£¿â£¯â£·â£¿â¢¿â£¯â£â¡â¡â¡®â¡»â£â£¿â£½â£¯â£â£â£â£·â¡£â¡â¡â¢â â¡â¢â¢â¢¦â¡â¡â¡â¡â¡â¡â¢¬â¢â¢â¢â¢â¢â¢ªâ ¸â¡¨â¢â¢¢â¢â¢â¢â â¡¢â¢â â â â¡¡â¢â ¥â¡©â¡»â£¿â£¿â£»â£¾â£»â£½â¡½â£¯â¢¿â£ºâ£½â£¾â£»â£½â£â¢·â »â¡ºâ¡³â£»â£â£¿â¡½
# â£¿â£¿â£·â£¿â£¯â£¿â£¿â£»â£½â£¿â£¿â£¿â£·â£¿â¢¿â£»â£â¢¿â¢¯â¢¿â ½â¡â¡â¢â¢£â¢£â¢«â¢â¢â£â¢¯â£¿â£ºâ¢½â¡«â¡¿â¡¾â£¯â¢·â£ªâ¢¢â¢â¢â¢â¢â¢â¢â¢¢â ¡â¢£â¢£â¢£â¢â â¡â¢â ±â¡¨â¡¢â¡±â¡â¢â¢¢â ¡â¢â â â¡â ¢â¡â¡¡â¢â â¡â¡ªâ °â¡â¢â¢»â£â£¿â£ºâ¢·â£â£¿â£»â£¯â£·â¢¿â ½â¡ªâ£ªâ¡ªâ¡â£â¢µâ¡±â¡½â£¾â£»
# â£¿â£·â£¿â£¯â£¿â£¯â£¿â¡¿â£â£¿â£½â£·â¡¿â¡¯â¡»â¢â¡â¡â¡â¡â¢â¢â ¸â¡â¡â¡¸â¡â¡¬â¡£â¡ºâ ¹â¡â¢â¢¢â ±â¡â¢â¢±â ¹â£â¢·â£â¢â¡â¡â¡â¡â¡¸â¢¸â¢â¢±â¢¸â¢ªâ¡ªâ¡¸â¡â¢â¢â¢â¢â¢â ±â¡¨â¡â¡¢â¡â¡â¡â¡ªâ¡â¢â ¢â¡â¡â¡ªâ ¨â¢â â¡â¢â¢â£¾â¢¿â£½â£¯â¢¿â£¾â¢«â¡£â¡¯â¡â¡â¡â£â£â¢½â£ªâ¢¯â£»â£½
# â£¿â£½â£â£¿â£»â£¯â£¿â£â¡¿â£â¢â¢¯â¡«â¡ªâ¢ªâ ªâ¡â¡â¡â¢â¢â¢â¢â ±â¡¡â¡£â¡£â¡±â¢â¢â â¢â ªâ¡â¢â â¢â¢â¢±â¢â¢â¢â¢â£¯â¢¢â¢â â¢â¢â â¡â¢â¢£â¢³â¢¨â¢ªâ¢â ªâ£â¢â¢â¢â¡â¡â¡â¡â¡±â¡¨â¡â¡ªâ¢â â ¨â¡â â¡â¡¢â¡â¢â ¢â¡±â¡â£â£·â£â¡â¡â£â¡ªâ¡ºâ¡¸â£¸â¡±â¡µâ£ªâ¢â£½â¡³â£½â£¯
# â£½â£â¡½â£ºâ¢µâ£»â¢³â¡«â£ªâ¢â¢â¢â¢â¢â¢â â¡â¢â â¢â¡â¡â¡£â¡±â¡±â¡â¡â¢â ¢â¡â¢â â â¡â ¢â ¨â¢¢â ±â¡â¡â¡â¡â¢â¢â ¸â¡¨â¢â ªâ ¢â¡â¢â ªâ¡¢â¡â¡¯â£ªâ¢â¢â¢â¢â £â¡â¡â¢â¢â¢â ¦â¡±â¡¨â¡â â¢â â¢â ¡â¡â¢â ¨â¡â â¢â¢¢â¢±â¢±â¢£â¡³â¡¹â¡°â¡±â¢±â ©â¡¢â¢£â¢¹â¢â¢µâ¡³â¡»â£ºâ£½
# â£·â¢·â¢¯â£³â¡½â£ªâ¢â¡¯â¡¯â¡â¡â¡ºâ¡â¡â¡â¢â¢â¢ªâ¢ªâ¢±â ¸â¡¸â¡¸â¡â¡¢â¡â¡â¢â £â¡¡â¡â â¢â â â £â¡¡â ¡â¢£â¢±â ±â¡â¡â¡£â¡±â ¨â¢â â â¡â¡¢â¢â â¡â¡ªâ¡ºâ£â¢â¢â¢â¢â¢â â¡â¢¬â¢¢â¢£â ±â¡¨â¡â¢â ¢â¡â¡â â¡â¡¢â¡â¡â â¢â¢â¢â¢â¢â â¢â¢â¢â µâ¡±â¡±â£â¢µâ¡±â¡£â£â¡¯â£¾â£
# â¢µâ¡«â¡¿â£¾â¡±â£â£â¢®â£â£â¢â¡â¡â¢â ¨â¡¢â¢£â¢±â ±â£â£â â¡£â¢â â¡¢â¢â ¢â¡â¡â¢â â¡â â¢â â¢â¢â¢±â ¸â¡¸â¡â¡â¡â¢â¢â¢â â¢â¢â â¡¢â¢£â¢±â¢ªâ¢¸â¢¸â¢¸â ¼â¡¸â¡â¡â¢µâ¡±â¡â¡â¢â¢£â ±â¡â¡â¡£â¡â¢â¢â¢â¢â¢â¡¢â¡±â¡â¡¬â¡²â¡±â¡±â¡±â¡±â¡â¢â¢£â¢±â¢¨â¢²â ±â¡â¡â£â¢®â¡¿â£½
# â£¯â¡¿â£½â£¯â£¿â£³â¢â¡·â£³â¢¯â£³â¢µâ££â££â£±â¢¸â¢¸â¢â¡â¡¢â ¢â¡â â¡¡â¢â â¡¡â¢â â¢â¢â â â â â¡¸â ¨â¡â¢â¢â¢â¢â¢£â¢â â¡â â¡¨â¢â ¢â¡â¢â¢ªâ ªâ£â¢â¡â¡®â£â¡¼â£â¡¬â£§â£»â¢â¡â£â¢â£â¢®â£ªâ¡®â¡®â£®â£â¢¼â£¸â¢¼â¡®â£³â¢â¢®â¡³â¡â¡â¡â¡¢â¢ªâ ªâ¡¸â¡¨â¡¢â¢£â¢£â¢ªâ¢ªâ¡ºâ£ºâ£â£¯
# â¢·â£»â£â£â¢·â£½â£«â¢¿â£½â£»â£¾â£»â£¯â¡¿â£¾â£»â¡½â£â£§â£â£â£â¢â¢¢â ¡â ªâ¡â¡â¡â â¡¡â¢â¢â ªâ¡¨â¢â £â¡â¢â¢â¢â¢â¡ªâ¡â¡â¡¢â â¢â¢¢â¢â¢â â¢â â¡â¡®â¡¯â¡£â¡¯â¡«â¡â¡½â¡ªâ ªâ £â¡â â â¢â¢â â¡â£½â£³â£â¢â£¾â¡»â££â¡â¡­â¡ªâ ªâ¡¸â¡¨â¡ªâ¡â¢â £â¡â¡â£â¢â¢â¢â¢µâ¢â£·â¡¿â£¯
# â£â£¾â£â£¿â¢½â£â¢¾â£â£¾â£»â£â¢¿â£â£¿â¡½â£½â¡½â£½â£â£¾â£³â¡¿â£½â¢®â£â£â¡â¡â¡¢â¢â¢â â  â¡â¡â¢â¢£â¢±â ±â¡±â¡±â¡±â¡¨â¡â¡â â¢â¢â¢£â ¢â¡â¢â¢â¢â¢â¢â¢â¡â¡â¡â ¨â â¢â â¢â  â â¢â â â â¢â °â£¹â£ªâ£¿â¢ªâ¢â¡â£â£¼â¢â¢â¢â â¡â¡â¡¸â¡¸â¡¸â¡â¡¼â¡â¡â¡â¡µâ£¿â£¿â£¿â£¿
# â£½â£·â¢¿â£½â£½â¢â¢¿â£ºâ¢â£â£¯â¢·â£â¢®â¢¯â¢â£¯â£³â£¯â£¿â£³â£â£¿â¡½â£·â¢·â£·â£â¢â¢â¢¢â¢â¢â¢â¢â¢â¢â¢â¢â¢â¢®â¡ªâ¡â¡â¢â¢â ¢â¡â¢â¢â¢¬â£ºâ¢½â¢â â¡¸â¢½â¡ªâ â â¡â â  â â â¡â â â¡â¢â â â¢â¢¢â£»â£®â¡â¢â¢¸â£½â£¾â£«â£â¡¥â££â¢£â¢±â¢±â£â¢µâ¢±â¢â¢â¢â¢¼â£½â£¿â£¿â£¿â£¿
# â£³â¡¿â£½â¢¾â¢¾â¢½â£³â£â¡â£â¢·â¢â¡¾â£½â¢¯â£¿â¢·â¡¿â£â£·â¡»â£â¡¾â£¯â£â¡¿â¡·â£â£·â£³â¡µâ£â¢â¡¸â¡¨â¡§â£³â¢â¢â¢â¢â¢â¢§â¢â¢â¢¡â¢±â£¸â£ºâ£â£¾â£¼â£â¡¢â¢â¢â £â¢â ¡â â â â  â â â¡â â â¡â  â â â¡â â¢â ·â¡©â ªâ¡â¡ºâ¢½â¢¯â¡·â£¯â¢§â£³â¢£â¢³â¢³â¢±â¢±â¢â â¢µâ£»â£¿â£¿â£¿â£¿â£¿
# â£½â£«â¢¯â¡¯â£¯â¡«â£â¢·â£â£®â£·â£¯â£¿â£½â£¿â£»â£â£¿â£«â£·â¡»â¡½â£â£·â£«â¢¯â¢¯â£»â£â¡¾â£â£¿â£»â£¯â¡¿â£®â£¯â£â£§â££â¢§â£§â¡£â¡£â¡£â££â£·â£»â¢â¡â¢¿â¢¿â£¿â£¿â£·â£¦â¡¡â¢â â â¢â â¢â â â  â â¡â â â â¡â¢â â¡¢â¢â£¬â£¼â£¼â£¾â£¯â£·â£¿â£â£¯â¡·â£â¢â â¡â¡â¡â¡â¡â£½â£¿â£¿â£¿â£¿â£½
# â£â¢¿â¢½â¢½â£³â¢¯â¡¯â£³â£³â¡·â£¿â£¾â£¿â£½â£¾â¢¿â¡½â£â£¿â£ºâ¡½â£«â¢·â¡·â£â£¿â£»â£·â¢¿â£½â£¿â¢½â£¯â¡·â£¿â¢¿â¡·â£¿â£·â¢¿â¡¿â£¾â¢®â£ºâ¢½â¡½â£â£¯â¡·â£â¢â â¡¹â¢¿â£½â£¿â£â£§â  â â  â â â â¢â â¡â â â¡â¢â¢â¢ â¡µâ£¾â£¿â¡¿â£¿â£¿â£¿â£¿â£¿â¡¿â£â¢¯â£¿â£¯â£·â£¹â¢¸â¢¸â¡±â£â£â£½â£¿â£¿â£¯â£¿â£¿
# â£½â¡½â£â¢·â¢â£â¢¯â¡¿â£¾â¡¿â£¿â¡¿â£¾â£»â£â¡¿â£½â¢½â£ºâ¡³â¡¯â£â£â£¿â£¿â£â£¯â¢¿â£»â¢µâ¡¿â£½â£ºâ¡½â£â£â£¿â£»â£¾â£¿â¡¿â£¿â£»â£ºâ¢½â ¹â¡ºâ¡½â¡½â£â¢â¢â¢â â¡â â¢¼â¢â¢â â  â ¨â  â¢â â¡â  â¢â¢â â¡â¡â£¿â£¿â¡»â¡¿â¡¿â£¯â¢¿â¢â ·â¡«â¡«â¡®â£³â£³â¡¿â£¾â£â£®â¢·â¢½â£ºâ¡ªâ¡ºâ£¿â£¿â£¿â£¿â£¿
# â£â£¯â¡¿â£½â£³â£½â£»â£¾â£¿â¡¿â£â£¿â£«â£¿â£³â£»â£»â£â¢·â£½â£â£·â¢¿â£â£·â¡»â¡¼â¡½â¡½â£½â£½â£â£·â£¯â£¿â£¯â£¿â£¯â£·â£¿â¢¿â£¿â¢½â¢ºâ¢±â ¡â¡â â¢â â â â¡â â â â â¢â â¡â ¨â â¡â¢â â â â¢â â¢â â â «â¢â â¢â â â¡â¡â¡â¡¦â£«â¢¯â¢â£·â£¿â£¿â£â£¯â£·â£â¢§â¡³â¡¹â£½â£¿â£¿â¡¿â£¿
# â£â£¯â£¯â¢·â£»â£¾â¢¿â£»â£¾â£â£¿â£½â£³â£·â£»â£ªâ£·â£â£¿â£½â£â¡¿â¡·â¡½â¡®â£»â£ºâ¢½â£ºâ£¿â¡¾â£¿â¡·â£¿â£½â£¿â£½â£¿â£»â£¿â£»â ªâ ªâ¡ªâ£â¢â ªâ¡â¡â â¡â¢â â â  â â¡â¢â¢â â â¡â¡â¢â â â¡â ¢â ¨â¡â ¨â  â¢â â¡â â¡â¢â â â¡â ©â ¹â¡¹â£»â¢¿â¡½â¡¾â£â£¿â£¯â£¿â¡·â£¯â¡³â µâ£¿â£¿â£¿â£¿
# â£ºâ£ºâ£ºâ¢¿â£â£¿â¡¿â£¿â£»â£¾â¡³â£â¡·â£¯â¡¿â£¾â£¾â¡¿â£¯â¢·â¢¿â¢½â¢¯â£â£¯â¡·â£¯â£â£¾â£·â£¿â£¿â£»â¡¿â£¾â¢¿â£½â£¿â£¿â£»â ªâ â¢â¢â â¡â¢â ¢â¢â â â  â¢â ¡â â¡â â â¢â¢â â â¡â â â ¢â ¨â¡¨â¢â ªâ  â â¡â â¡â¢â  â â¡â â â ¨â ¨â¢â â¡£â¡³â¡â£â£¯â£¿â¡¿â£¿â¡£â¡£â¡«â¡¾â£¿â£¿â£¿
# â£¼â£ºâ£â£â£¿â¡¿â£¿â£»â£½â£ºâ¢¯â¢¿â£½â£â£¿â£¿â¢·â£»â£½â£»â¡½â¡½â£â£â£¾â£»â£¯â£¿â¢¿â£½â£·â£¿â£â£¿â¡¿â£¿â£¯â¢¿â£¯â¡â ¡â â â â â ¨â â¢â¢â â â ¡â¢â â  â â â ¡â¡±â¡â¡â â¡¢â ¨â ¨â¡¨â ¨â¢¢â¢â¢â â ¡â â¡â â  â â¡â¢â ¡â â â â¡â¢â¢â¡³â£â£³â£«â¡¿â¡¿â£¿â¢±â¢¹â¢¸â¢¸â¢¿â£¿â£¿
# â¡®â£â£¾â£¿â£¯â£¿â£¿â¢·â£³â£â£¿â¢¿â£½â£¿â¡¯â£â£¿â£»â¡¾â£·â£»â£»â£â£¿â¢¾â£»â£â£¿â£â£¿â£â£¯â£¿â£¯â£½â£³â£·â£â£â â¢â  â â â ¡â¢â ¨â¢â  â â¡â¢â â â  â â¡â â¡â â¢â¢â â¡¡â ±â¡¼â¡¾â ®â¡â â â¡â ¡â â¡â¢â â â â¡â â¡â¡â¢â¢â¡½â¡½â£¯â£¯â£·â£¿â£¿â¢³â¢±â¢£â¢£â¢³â¢½â£¿â£¿
# â£»â£¿â£½â£·â¡¿â£·â¢¯â¢¿â£¯â£¿â¢¿â£¿â£â£·â£â¢¿â¢¾â£â£¯â¢·â¡¯â£·â¡¿â£½â£¯â£¿â£½â£¿â£»â£¿â¡¿â£¿â£¯â£·â£¿â£¿â£«â¡·â£³â¢â â¢â â  â¢â â¡â¢â¢â ¡â â¡â ¨â â  â â â¢â  â â â¡¡â¡ªâ¡ªâ¡â¢â ¨â â â â¡â¢â¢â¢â¢â â â â â¡â¡â¡¢â¡£â£±â£â£â¡ºâ£³â£³â£â£â¢®â¡³â¡±â¡±â¡±â¡â£â£¾â£¿
# â¡¿â£¾â¡¿â£·â¡¿â£½â¡¯â£¿â£¾â¢¿â£¿â¢â¡¾â£â£â¡¯â£â¡¾â£¯â£¿â¢¾â£·â£¿â¢¿â£¾â£¿â£¯â£¿â£»â£½â£¿â£¿â¡¿â£â£¿â£ºâ¡½â¡­â ¨â â¡â â¢â â â â¡â¢â¢â ¨â¡â¢â ¨â¢â â¢â â â¢â ¨â â¢â¢â¢â â ¡â¢â â â¡â â¢â â¡â  â ¡â ¡â¢â ¡â¢â¢â¢¼â¢â¢´â ¬â¡ªâ£ªâ¡ºâ¡¼â¡¾â¡µâ£â¢â¢â¢â¢â¢â¢â¢¿â£¿
# â£¿â£¿â£¯â£â£¿â¢¿â£½â£¿â¡¿â£¿â£»â£¯â£¿â¡½â£¯â¢¯â¡¯â£¿â¢¿â£¾â¢¿â£·â£¿â¢¿â£â£·â£¿â£½â£¿â£»â£¿â£â£¿â£¿â¡½â£¿â¡¹â¡¨â â¢â â¢â â â â¢â â¡â¢â ¢â¢â â¡¨â¢â ¨â¢â ¨â¡â¡â¡ªâ¡â¡â£â£â¢â â¢â â¡¢â â¢â¢â °â¡â¢â â¡¡â¡±â¡â¡â£â¢¬â¢ªâ¢â¡â£â¢â£â¢¯â¢¯â¡£â¡³â¡¹â£¸â¢±â¡±â¡±â¡±â¢½â£¾
# â£¯â¡·â£â¡¾â£¯â£»â£·â£¿â¡¿â£¿â£»â£â£¾â£»â£¿â£»â£½â£¿â¢¿â£»â£¿â£¯â£¿â£â£¿â£½â£¾â£·â£¿â£¿â¡¿â£â£¿â£¾â¢¿â¢â¢â¡â â â¡â â â¡â¢â â â â¡â ¨â¢â¢â¢â¢â¢â¢¡â¢±â£¨â£²â¢¼â£¼â£¾â£¿â£¿â£¶â£µâ¡±â¡¨â£â¢£â¢â¢â â¡â£â¢µâ¢â£â¢â¡â¡´â£±â¢±â£â¢â£â¢µâ¢±â¢â¢â¢½â¢¸â¢â¢â£â¢³â¢±â ­â£â£¿
# â£¿â£»â¡¾â£â£¯â£¿â£·â£â£¿â£½â£â¡·â£¿â¢¾â£¿â¢¿â£»â£¿â£»â£¿â£»â£¾â£¯â£¿â£¯â£¿â£¿â£¿â¢¿â£½â£¿â£¿â¡¿â£¯â¢¯â¢â â¡â â â â  â â â¢â â¡â â â ¨â¢â¢â ªâ¡â£â¢â¡¯â¡¾â£â ½â£¿â¢¿â¡¿â£¿â¡¿â£¿â¡¿â¡¿â£¾â£¼â£¼â£â£®â¡¾â£â£·â¡¿â£®â¢³â¢±â¢±â¢±â¡±â¡â¡â¡µâ¢â¡ºâ£ªâ¢£â¡«â¢®â¢ªâ¡£â££â¢£â £â¡³â¡ªâ¡¾
# â£¯â¡·â£â£¿â£½â£¿â£¾â¡¿â¡·â£·â£¯â£¿â¢¿â£¿â£»â£¿â£¯â¢¿â£½â£â£¿â£¾â¢¿â£·â£¿â¡¿â£¿â£¾â£¿â£¿â£¿â¢·â£¿â£³â¢¯â¡«â â¡â â â â¢â â¡â  â â â¢â â¡â¢â â¡â ¨â¡â â¡â¢â¢â¡â¡©â¢â «â¢â »â »â¡â¢¬â¢¿â¢·â£¿â£»â¡·â£¿â£â¢¯â¢«â¢ªâ¢£â¢£â¢£â¢³â¢¹â¡ªâ£â£â¢§â¡»â¡â¡â¡â¡®â¡â¡â¢â¢ªâ¢¸â¡¸â¡³â£
# â£â£¯â£â£¾â£·â¢¿â£¾â£»â¡»â¡·â£·â£¿â£¿â£¯â¢¿â£â£¿â¢¿â£½â£¿â£½â£¿â¢¿â£¿â¡¿â£¿â£¿â£¯â£¿â£¿â£»â£â£·â¢¯â¢â¢â â¡â â â â¡â â â â â â¡â â¡â¢â â¡â¡â  â¢â â¢â¢â ±â¡¨â ¢â ¡â¡â â¡â¢â ¯â¡ºâ£½â¡«â¡â¡â¢â¢£â¢±â¢±â¢±â¢±â¢±â¢±â¡±â¡â¡â£â¢¯â¡«â¡â¡§â¡³â¡¹â¡â¡â¡â¡â¡â¢â¢â¢â£
# â¡½â£¯â£¿â£½â£¾â£¿â£¯â¢·â£â£¿â£½â£¾â£·â£¯â£¿â£»â£¿â£¿â¢¿â£»â£½â£¿â£¿â£¿â¢¿â£¿â£¿â£½â£·â£¿â¢½â¢¾â¢·â¡«â¡â¡â¡â â â â â¢â  â â â â â¡â â  â â â¡â¢â¢â â â â¡â¡±â¢â â¡â¢â¢ªâ ªâ¡ªâ¡£â¡¯â£³â¢¸â ¨â â¢â¢â¢¢â¢£â¡£â¡£â¡³â¡±â¡±â¡±â¡â¡â¡â¡â¡â¡µâ¢â¢â¢â â¢â¢â¢â â¡â¡£â¡»
# â£»â£·â¢¿â£¯â£¿â¡¾â£½â¡¿â£¿â¢¿â¡¿â£â£·â£»â£¾â¢¿â£¿â£¾â£¿â£¿â£¿â£¿â£â£¿â£¿â£¿â£¯â£¿â£½â£»â¡¿â£â£­â¢â â¡â¢â â â¢â â¢â â¡â â â  â â â â â â¡â¢â â¡â â¡â¡â¢â â¢â â¡â¡¢â¢â â¡£â¢â â¡¢â¡¡â¡©â¡¢â¢â¢â¢â â¡â¢â¢â â¡â¢â¢â ±â¡¡â¡£â¡â¡¯â¡ªâ¡£â¡«â¡¢â£â¢¢â £â¡±â¡±â¢½
# â£â£¿â£¿â£¿â£½â£â£¿â£»â£¿â£¿â£»â£»â£¯â£¿â£¾â£¿â£¿â£¿â£¿â£¿â£¿â£¿â£»â£¿â¢¿â£¯â£¿â¡·â£¿â£â£¯â¡»â¡â â¢â â â â â â  â â â¢â â â¢â â¡â â â â â â â â¢â¢â¢â â â¢â â¢â ¨â¡â¢â ¢â¡¡â¢±â ¨â¡¢â¡±â¡¸â¡â¢â¢â ªâ¡â¢â¢â¢£â ±â¡â¢â â¡â¡§â¡«â¡ºâ¡¸â¡ªâ¡ªâ¡â¡â¡£â¢£â¢ªâ¢â¢
# â£¿â¢¿â£¯â£¿â£¯â£¿â£â£¯â£¿â¡·â£â£¿â¡¾â£¯â£¿â£¿â£¿â£·â£¿â¡¿â£·â£¿â¢¿â¡¿â£¿â£»â£½â£¿â£»â£â¡¾â£â â¡â â â¢â â  â â¡â â â â â â  â â  â â¡â¢â  â â â¡â¡â¡â â â â¡¡â¢â¢â¢â¢â¢â £â¡â¡â¢â¢â¢â â¡â¡â¡â¡ªâ ¨â¡¢â¡â¢â £â¡â¢â â¡â£â¢â¢â¢â¢â¡â£â¢®â ¸â¡°â¢¡â¢£â¡³
# â£¿â£¿â¢¿â£·â£¿â¢·â£¿â£¿â£¯â£â£¯â£·â£¿â£¿â£¿â£¿â£¿â£¾â£¿â£â£¿â£¾â£¿â¢¿â¡¿â£¯â¡¿â£¾â¢³â£«â »â¡â â â â â â â â â¢â â¡â â â¡â¢â â  â â â  â â â â  â¢â ¨â¡¨â¢â¢â ¢â¡â â¢â¢â¢â¢â¢ªâ¢â¢â ¢â¡â¢â £â¡â¢â¡â¡ªâ °â¡â¡â¡â¢â ¢â£â¢â¢â¢â¢â¢â¢â¢â¢ºâ¢¸â¢â¢â¢â¢²â¢
# â£¿â¡¿â£¿â£»â£¾â£¿â¢¿â£¾â£»â£¾â£»â£½â£¿â£¿â¡¿â£¿â£¾â£¿â£¿â£½â£¯â£¿â£¾â£¿â¡¿â£¯â£â£â¢¿â¢ºâ ±â  â â â¡â â â â¡â¢â  â â â â â¡â  â â â â â¡â â â ¡â¢â â¡¨â¢â ¡â ¢â¡â¢â ªâ¡â¡¢â ±â¡â¢â ±â¡â¡â¢â ¢â¡â¡¨â¢â¢â¢â â¡¢â¢â¢â â¡±â¡¸â¡ªâ¡ªâ¢ªâ¢¸â¢¸â¢¸â ¸â¡¸â¡¸â¡â¡â¡â£â£¿
# â£¿â¢¿â£¿â£»â£½â£¿â£»â¡·â£¿â£¯â£¿â£¿â£¿â£¿â£¿â¢¿â£¿â£½â£¾â¢¿â£¾â¢·â£¿â£½â¢¿â£½â£ºâ¢µâ¢â¡â â¡â¡â â  â â â â¢â  â â â â â â¡â â â¢â  â â  â â¡â¢â â¡â¢â â¢â â¢â ¢â¡â¢â ªâ¢â ¨â¢â â¡â ¨â¡â â¢â ¨â¡â¡â â¡â â¡â¡¢â¢â¢â¢¼â¢¸â¢â¢â¢â¢â¢â¢â¢â¢â â¡â¡â£¯â£¿
# â£¿â£â£¯â£¿â£½â¢¿â¡¾â£â£¿â£â£¿â£¿â£»â£·â£¿â£¿â£¿â£â£¿â¢¿â£½â¢¿â£»â¡¿â£½â¢â¢®â£â¡â¡â â â â¡â â¡â¢â â¢â  â â ¡â â¡â â¡â â â â â â â â â¡â¢â â  â â â â¡â ¨â¢â¢â ¨â¢â ¨â¢â ¨â¢â¢â¢â¢â¢â ¡â¡â¡ªâ â â¡â¡â ¢â ¡â£â¢â¢â¢®â ªâ¡¢â¡£â¡±â¡¡â¡£â¡²â¡±â¡¸â¡¸â£½â£¿","0.0"
"c2081cad-a682-43e2-8960-081ef8963a37","a, b = map(int, input().split())
x = min(a, b)
y = (a+b-2*min(a, b))//2
print(x, y)","0.0"
"aeb122ea-bb7f-44ee-93c8-65ead3d4f5f3","p = list(input().split())
rounds_count = int(p[0])
time_to_zoo = int(p[1])
time_tourneer = 4 * 60
counter = 0
for i in range(rounds_count):
    if time_tourneer - 5 * (i + 1) < time_to_zoo:
        break
    else:
        counter += 1
        time_tourneer -= 5 * (i + 1)
print(counter)","0.0"
"c2081cad-a682-43e2-8960-081ef8963a37","a, b = map(int, input().split())
print(min(a, b), abs(a-b)//2)","0.0"
"42d47feb-cba9-4d18-8ccc-2c20605db82d","def intt (a):
    for i in range (len(a)):
        a[i] = int(a[i])
    return a
def spisok ():
    return intt(input().split())


a, b = map(int, input().split())
print(a * (b // 2))","0.0"
"8381a3f6-aaba-448f-b65f-50117785adf7","n,m,a=map(int,input().split())
n2=0
k=0
while n2<n:
    n2+=a
    k+=1
m2=a
d=k
while m2<m:
    m2+=a
    k+=d
print(k)
","0.0"
"e02095cd-3f62-4005-a067-a9da53d342bb","import math
n = int(input())
a = input()
b = input()
a = list(map(int, a.split()))
b = list(map(int, b.split()))
ia = 0
ib = 0
g = 0
for h in range(n):
    ia = ia + a[h]
    ib = ib + b[h]
    if(ia-ib==0 and a[h]==b[h]):
        g+=a[h]
print(g)","0.0"
"853bea78-6aa0-4fcf-8c5a-5f278603c518","n = int(input())
k = int(input())
x = int(input())
y = int(input())
if n<k:
    s = x*n
else:
    s = x*k+y*(n-k)
print(s)","0.0"
"d949e12a-1807-4b82-a4ab-c1a178a79888","a = int(input())
x = 10
while a > 0:
    x += 9
    while sum(list(map(int, list(str(x))))) != 10:
        x += 9
    a -= 1
print(x)","0.0"
"8381a3f6-aaba-448f-b65f-50117785adf7","import math
n, m, a = map(int, input().split())
if n == a or m == a:
    print(math.ceil(max(n, m) / a))
else:
    print(math.ceil(n / a) * math.ceil(m / a))","0.0"
"c2081cad-a682-43e2-8960-081ef8963a37","a, b = [int(i) for i in input().split()]
ost = max(a, b) - min(a, b)
print(min(a, b), ost // 2)","0.0"
"c2081cad-a682-43e2-8960-081ef8963a37","a, b = map(int,  input().split())
ded = min(a, b)
k = ((a+b)-ded*2)//2
print(ded, k)","0.0"
"42d47feb-cba9-4d18-8ccc-2c20605db82d","n,m = map(int, input().split())
print(n*(m//2))","0.0"
"c2081cad-a682-43e2-8960-081ef8963a37","a,b=map(int,input().split())
c = min(a,b)
a-=c
b-=c
d=max(a,b)//2
print(c,d)
","0.0"
"7d8fcbed-1f16-4d19-8a17-6560267bc64c","n, m, k = map(int, input().split())

if n <= k:  
    print(""NO"")
else:
    l = 0
    while m > 0:
        m -= n
        l += 1
        if m <= 0:
            break  
        m += k

    print(l)
","0.0"
"7d8fcbed-1f16-4d19-8a17-6560267bc64c","a = input()
b = a.split(' ')
a1 = b[0]
b1 = b[1]
c1 = b[2]
a = int(a1)
b = int(b1)
c = int(c1)
if a < c:
    print('NO')
else:
    q = 1
    while True:
        b -= a
        if b <= 0:
            print(q)
            break
        b += c
        q += 1","0.0"
"42d47feb-cba9-4d18-8ccc-2c20605db82d","from math import ceil
n, m=map(int, input().split())
print(ceil(m/2)*n)","0.0"
"af37658e-d46e-45db-9ee2-ea44a450db89","from math import  ceil

k, n, s, p = map(int, input().split())

one_kid_lists = ceil(n / s)
lists_count = one_kid_lists * k
print(ceil(lists_count / p)) # Ð¼Ð¸Ð½Ð¸Ð¼Ð°Ð»ÑÐ½Ð¾Ðµ ÐºÐ¾Ð»Ð¸ÑÐµÑÑÐ²Ð¾ Ð¿Ð°ÑÐµÐº","0.0"
"c2081cad-a682-43e2-8960-081ef8963a37","k, s = map(int, input().split())
res1 = min(k, s)
res2 = (max(k, s) - min(k, s)) // 2
print(res1, res2)","0.0"
"a40047cc-77a1-4a37-9e28-a61947b07df8","n = int(input())
a = list(map(int, input().split()))
b = list(map(int, input().split()))
count = 0
for i in range(n):
    if max(a)>= max(b):
        count+= max(a)-max(b)
    else:
        count+= max(b)-max(a)
    a.remove(max(a))
    b.remove(max(b))
print(count)","0.0"
"027966cc-bba6-4e6a-83bf-ea3f730fb59d","n=int(input())
c=input()
m=[]
c1=0
for i in range(n-1):
    if c[i:i+2] not in m:
        m.append(c[i:i+2])
        c1+=1
print(c1)
","0.0"
"5895fc4e-b515-464a-a0e2-697d86bf8783","s1=list(map(int, input().split()))
n=s1[0]
s=s1[1:len(s1)]
max_o=max(s)
min_o=min(s)
s_ans=[]
for i in range(n):
    if s[i]==max_o:
        s_ans.append(min_o)
    else:
        s_ans.append(s[i])
for i in range(n):
    print(s_ans[i], end=' ')

","0.0"
"0f42de72-e8d1-4f41-8797-90a6cd184af9","a, b, c = map(int, input().split())
d=a*3+b*5+c*12
print(d)
","0.0"
"17c6577a-b831-485d-ba22-fb47923019b4","n=int(input())
for i in range(n+1):
    m=""""
    m+="" ""*2*(n-i)
    for j in range(i+1):
        m+=str(j)+"" ""
    for j in range(i-1, -1, -1):
        m+=("" "" if j!=i-1 else """")+str(j)
    print(m)
for i in range(n-1, -1, -1):
    m=""""
    m+="" ""*2*(n-i)
    for j in range(i+1):
        m+=str(j)+"" ""
    for j in range(i-1, -1, -1):
        m+=("" "" if j!=i-1 else """")+str(j)
    print(m)","0.0"
"e02095cd-3f62-4005-a067-a9da53d342bb","n = int(input())
x = input()
x1 = input()
z = x.split(' ')
z1 = x1.split(' ')
summ = 0
s1 = 0
s2 = 0
for i in range(n):
    if int(z[i]) == int(z1[i]) and s1 == s2:
        summ += int(z[i])
    s1 += int(z[i])
    s2 += int(z1[i])
print(summ)","0.0"
"8381a3f6-aaba-448f-b65f-50117785adf7","n, m, a = map(int, input().split())
if n % a > 0:
    x = 1
else:
    x = 0
if m % a > 0:
    y = 1
else:
    y = 0

print((n // a + x) * (m // a + y))
","0.0"
"853bea78-6aa0-4fcf-8c5a-5f278603c518","n = int(input())
k = int(input())
x = int(input())
y = int(input())
print(k*x+(n-k)*y)

","0.0"
"17c6577a-b831-485d-ba22-fb47923019b4","n = int(input())
a = []
for _ in range(n+1):
    a.append([])
for i in range(n+1):
    for x in range(n-i):
        a[i].append("" "")
    for y in range(i+1):
        a[i].append(y)
    for y in range(i-1, -1, -1):
        a[i].append(y)
    for x in range(n-i):
        a[i].append("" "")
for x in a:
    print(*x)
a.pop(-1)
a.reverse()
for x in a:
    print(*x)","0.0"
"770952ee-5595-4690-9f1a-a172955624fa","a = int(input())
s = [int(i) for i in input().split()]
jmax = 0
for i in range(1,a+1):
    if s.count(s[i-1]) > jmax:
        jmax = s.count(s[i-1])
print(jmax)","0.0"
"e02095cd-3f62-4005-a067-a9da53d342bb","n=int(input())
a=list(map(int, input().split()))
b=list(map(int, input().split()))
sa=a[0]
sb=b[0]
r=0
if a[0]==b[0]:
    r+=a[0]
for i in range(1, n):
    if sa==sb and a[i]==b[i]:
        r+=a[i]
        sa+=a[i]
        sb+=b[i]
    else:
        sa+=a[i]
        sb+=b[i]        
print(r)","0.0"
"42d47feb-cba9-4d18-8ccc-2c20605db82d","n,m=map(int,input().split())
print(n*(m//2))","0.0"
"7d8fcbed-1f16-4d19-8a17-6560267bc64c","userInput = input()
n,m,k = userInput.split("" "")
n = int(n)
m = int(m)
k = int(k)
temp = m
countHit = 0
while True:
    m -= n
    countHit += 1
    if(m<=0):
        break
    m += k
    if(temp < m):
        print(""NO"")
        break
if(m <= 0 and countHit > 0):
    print(countHit)","0.0"
"d949e12a-1807-4b82-a4ab-c1a178a79888","k = int(input())
now = 10
for i in range(k):
    new = now + 9
    while sum(list(map(int, list(str(new))))) != 10:
        new += 9
    now = new
print(now)","0.0"
"42d47feb-cba9-4d18-8ccc-2c20605db82d","n, m = map(int, input().split())
print((m//2)*n)","0.0"
"42d47feb-cba9-4d18-8ccc-2c20605db82d","n, m = map(int, input().split())
print(n * (m // 2))","0.0"
"853bea78-6aa0-4fcf-8c5a-5f278603c518","n = int(input())
k = int(input())
x = int(input())
y = int(input())
if n>k:
    print(k*x+(n-k)*y)
else:
    print(n*x)

","0.0"
"e02095cd-3f62-4005-a067-a9da53d342bb","n, res, b = int(input()), 0, 0
L = list(map(int, input().split()))
K = list(map(int, input().split()))
for i in range(n):
    s = L[i]-K[i]
    b += s
    if not(s) and not(b):
        res += L[i]
print(res)
","0.0"
"027966cc-bba6-4e6a-83bf-ea3f730fb59d","def check(a,n):
    g = True;
    for i in a:
        if i==n:
            g = False
            return g
    return g;

k = int(input())
s=input()
a=[]
for i in range(k-1):
    if check(a,s[i]+s[i+1]):
        a+=[s[i]+s[i+1]]
print(len(a))
","0.0"
"027966cc-bba6-4e6a-83bf-ea3f730fb59d","n = int(input())

song = input()

uniq = []

for i in range(1, len(song)):
    uniq.append(song[i-1] + song[i])

print(len(set(uniq)))","0.0"
"5eebb219-dec9-41ce-83c6-efc4a4670acc","s=str(input())
if s=='q':
    print('w')
elif s=='w':
    print('e')
elif s=='e':
    print('r')
elif s=='r':
    print('t')
elif s=='t':
    print('y')
elif s=='y':
    print('u')
elif s=='u':
    print('i')
elif s=='i':
    print('o')
elif s=='o':
    print('p')
elif s=='p':
    print('q')
elif s=='a':
    print('s')
elif s=='s':
    print('d')
elif s=='d':
    print('f')
elif s=='f':
    print('g')
elif s=='g':
    print('h')
elif s=='h':
    print('j')
elif s=='j':
    print('k')
elif s=='k':
    print('l')
elif s=='l':
    print('a')
elif s=='z':
    print('x')
elif s=='x':
    print('c')
elif s == 'c':
    print('v')
elif s == 'v':
    print('b')
elif s == 'b':
    print('n')
elif s == '':
    print('n')
elif s == 'n':
    print('m')
else:
    print(z)","0.0"
"853bea78-6aa0-4fcf-8c5a-5f278603c518","a=int(input())
b=int(input())
c=int(input())
d=int(input())
print(b*c+(a-b)*d)","0.0"
"c2081cad-a682-43e2-8960-081ef8963a37","a, b = map(int, input().split())
print(min((a + b)//2, a, b), (max(a, b) - min((a + b)//2, a, b))//2)","0.0"
"027966cc-bba6-4e6a-83bf-ea3f730fb59d","n=int(input())
s=input()
s+=""0""
x=[]

for i in range(1,n):
    x.append(s[i-1:i+1])
x=set(x)
print(len(x))
","0.0"
"a40047cc-77a1-4a37-9e28-a61947b07df8","n = int(input())
x = [int(i) for i in input().split(' ')]
x1 = [int(i) for i in input().split(' ')]
# z = x.split(' ')
# z1 = x1.split(' ')
x = sorted(x)
x1 = sorted(x1)
s = 0
for i in range(n):
    s += abs(x[i] - x1[i])
print(s)","0.0"
"7d8fcbed-1f16-4d19-8a17-6560267bc64c","damage, count, regeneration = input().split()
damage = int(damage)
count = int(count)
regeneration = int(regeneration)
if regeneration>=damage:
    print('NO')
else:
    i = 0
    while count >0:
        i += 1
        count -=damage
        if count <= 0:
            break
        count += regeneration
    print(i)","0.0"
"8381a3f6-aaba-448f-b65f-50117785adf7","p = list(input().split())
a = int(p[2])
if int(p[0]) % a == 0:
    n = int(p[0])
else:
    n = (int(p[0]) // a) * a + a
if int(p[1]) % a == 0:
    m = int(p[1])
else:
    m = (int(p[1]) // a) * a + a
print((n * m) // (a * a))","0.0"
"5eebb219-dec9-41ce-83c6-efc4a4670acc","s=str(input())
if s=='q':
    print('w')
elif s=='w':
    print('e')
elif s=='e':
    print('r')
elif s=='r':
    print('t')
elif s=='t':
    print('y')
elif s=='y':
    print('u')
elif s=='u':
    print('i')
elif s=='i':
    print('o')
elif s=='o':
    print('p')
elif s=='p':
    print('a')
elif s=='a':
    print('s')
elif s=='s':
    print('d')
elif s=='d':
    print('f')
elif s=='f':
    print('g')
elif s=='g':
    print('h')
elif s=='h':
    print('j')
elif s=='j':
    print('k')
elif s=='k':
    print('l')
elif s=='l':
    print('z')
elif s=='z':
    print('x')
elif s=='x':
    print('c')
elif s == 'c':
    print('v')
elif s == 'v':
    print('b')
elif s == 'b':
    print('n')
elif s == '':
    print('n')
elif s == 'n':
    print('m')
else:
    print(q)


","0.0"
"8381a3f6-aaba-448f-b65f-50117785adf7","n, m, a = map(int, input().split())
if n%a==0:
    if m%a==0:
        print((n//a)*(m//a))
    else:
        print((n//a)*(m//a+1))
else:
    if n%a==0:
        print((n//a+1)*(m//a))
    else:
        print((n//a+1)*(m//a+1))","0.0"
"5eebb219-dec9-41ce-83c6-efc4a4670acc","a = ['q', 'w', 'e', 'r', 't', 'y', 'u', 'i', 'o', 'p', 'a', 's', 'd', 'f', 'g', 'h', 'j', 'k', 'l', 'z', 'x', 'c', 'v', 'b', 'n', 'm']
x = a.index(input())
print(a[(x+1)%len(a)])","0.0"
"027966cc-bba6-4e6a-83bf-ea3f730fb59d","a = int(input())
k = input()
d = []
for i in range(a):
    if (i+1) < a:
        if (k[i] + k[i+1]) not in d:
            d.append(k[i] + k[i+1])
print(len(d))","0.0"
"39674b7f-1b5d-40b8-aa5c-02f2ac4a2a4b","zero = [
    '####',
    '#  #',
    '#  #',
    '#  #',
    '####'
]
one = [
    '   #',
    ' # #',
    '#  #',
    '   #',
    '   #'
]
n = bin(int(input()))[2:]
for line in range(5):
    for i in range(len(n) - 1):
        if n[i] == '1':
            print(one[line], end=' ')
        else:
            print(zero[line], end=' ')
    if n[-1] == '1':
        print(one[line])
    else:
        print(zero[line])
","0.0"
"5895fc4e-b515-464a-a0e2-697d86bf8783","l = list(map(int, input().split()))
x = l[0]
del l[0]
y = max(l)
z = min(l)
for i in range(len(l)):
    if l[i] == y:
        l[i] = z

print(*l)
","0.0"
"5895fc4e-b515-464a-a0e2-697d86bf8783","s = list(map(int, input().split()))
v = []
for i in range(1, len(s)):
    v.append(s[i])
mini = min(v)
maxi = max(v)
p = []
for i in range(len(v)):
    if v[i] == maxi:
        p.append(mini)
    else:
        p.append(v[i])
print(*p)","0.0"
"bb650c26-e5ff-4faf-9447-76e7e6965b4d","n, k = map(int, input().split())
a = list(map(int, input().split()))
s = sum(a)
f = 0
p = 0
for i in range(min(k, n)):
    if a[i]<0:
        s-=a[i]*2
        k-=1
        p+=1
    elif a[i]==0:
        f = 1
        break
    else:
        break
if f==1:
    print(s)
else:
    if k%2==0:
        print(s)
    else:
        if p==n:
            s+=a[p-1]*2
        else:
            s-=min(-a[p-1], a[p])*2
        print(s)","0.0"
"c2081cad-a682-43e2-8960-081ef8963a37","a, b = map(int, input().split())

print(min(a, b), end=' ')

print(abs(a - b) // 2)
","0.0"
"5eebb219-dec9-41ce-83c6-efc4a4670acc","lst, n = list('qwertyuiopasdfghjklzxcvbnm'), input()
print(lst[(lst.index(n) + 1)%len(lst)])","0.0"
"8381a3f6-aaba-448f-b65f-50117785adf7","s=input()
A=list(map(int, s.split()))
n=A[0]
m=A[1]
a=A[2]
if n%a==0 and m%a==0:
    q=(n//a)*(m//a)
elif n%a==0 and m%a!=0:
    q=(n//a)*((m+(a-m%a))//a)
elif n%a!=0 and m%a==0:
    q=((n+(a-n%a))//a)*(m//a)
else:
    q=((n+(a-n%a))//a)*((m+(a-m%a))//a)
print(q)","0.0"
"17c6577a-b831-485d-ba22-fb47923019b4","n = int(input()) + 1
for i in range (n):
    for j in range (n):
        print (' ' if j + i - n + 1 < 0 else j + i - n + 1, end=' ')
    for j in range(n - 1, 0, -1):
        print (' ' if j + i - n < 0 else j + i - n, end=' ')
    print ('')
for i in range(n - 2, -1, -1):
    for j in range(n):
        print(' ' if j + i - n + 1 < 0 else j + i - n + 1, end=' ')
    for j in range(n - 1, 0, -1):
        print(' ' if j + i - n < 0 else j + i - n, end=' ')
    print ('')","0.0"
"0f42de72-e8d1-4f41-8797-90a6cd184af9","x,y,z=map(int,input().split())
x1=x*3
y1=3+2
y2=y1*y
z1=y1+7
z2=z1*z
d=z2+y2+x1
print (d)
","0.0"
"42d47feb-cba9-4d18-8ccc-2c20605db82d","n, m = map(int, input().split())
print(n*(m//2)-(m%2))","0.0"
"17c6577a-b831-485d-ba22-fb47923019b4","n = int(input())+1
l = ['0' ]*(n+1)
for i in range(1, n+1):
    l[i] = l[i-1] + ' '+ str(i)
d = []
for i in range(n):
    s = '  '*(n-i-1) + ' '+ l[i] + l[i][-2::-1]+ ' ' + '  '*(n-i-1)
    if i != n-1:
        d.append(s[:-1])
    print(s[:-1])
for i in range(-1, -len(d)-1, -1):
    print(d[i])","0.0"
"c2081cad-a682-43e2-8960-081ef8963a37","a, b = map(int,input().split())
x = 0
if a>=b:
    x += b 
    y = a-b
else:
    x += a 
    y = b-a
print(x, y//2)","0.0"
"42d47feb-cba9-4d18-8ccc-2c20605db82d","n, m = map(int, input().split())
a = m//2*n
print(a)
","0.0"
"c2081cad-a682-43e2-8960-081ef8963a37","a,b=map(int,input().split())
print(min(a,b), (max(a,b)-min(a,b)) // 2)
","0.0"
"42d47feb-cba9-4d18-8ccc-2c20605db82d","n, m = map(int,input().split())

print(n * (m//2))","0.0"
"5eebb219-dec9-41ce-83c6-efc4a4670acc","s=str(input())
if s=='q':
    print('w')
elif s=='w':
    print('e')
elif s=='e':
    print('r')
elif s=='r':
    print('t')
elif s=='t':
    print('y')
elif s=='y':
    print('u')
elif s=='u':
    print('i')
elif s=='i':
    print('o')
elif s=='o':
    print('p')
elif s=='p':
    print('a')
elif s=='a':
    print('s')
elif s=='s':
    print('d')
elif s=='d':
    print('f')
elif s=='f':
    print('g')
elif s=='g':
    print('h')
elif s=='h':
    print('j')
elif s=='j':
    print('k')
elif s=='k':
    print('l')
elif s=='l':
    print('z')
elif s=='z':
    print('x')
elif s=='x':
    print('c')
elif s == 'c':
    print('v')
elif s == 'v':
    print('b')
elif s == 'b':
    print('n')
elif s == '':
    print('n')
elif s == 'n':
    print('m')
else:
    print('q')

","0.0"
"c2081cad-a682-43e2-8960-081ef8963a37","a, b = [int(x) for x in input().split()]
if a >= b:
    print(b, int((a-b)/2))
else:
    print(a, int((b-a)/2))

","0.0"
"17c6577a-b831-485d-ba22-fb47923019b4","n = int(input())
print(' ' * (n * 2) + '0' + ' ' * (n * 2))
for i in range(1, n + 1):
    print(' ' * ((n - i) * 2), end='')
    for j in range(i):
        print(str(j) + ' ', end='')
    for j in range(i, 0, -1):
        print(str(j) + ' ', end='')
    print('0' + ' ' * ((n - i) * 2))
for i in range(n - 1, 0, -1):
    print(' ' * ((n - i) * 2), end='')
    for j in range(i):
        print(str(j) + ' ', end='')
    for j in range(i, 0, -1):
        print(str(j) + ' ', end='')
    print('0' + ' ' * ((n - i) * 2))
print(' ' * (n * 2) + '0' + ' ' * (n * 2))
","0.0"
"027966cc-bba6-4e6a-83bf-ea3f730fb59d","from itertools import *

n = int(input())
song = input()

c = 0
st = set(song)
for i in product(st, repeat=2):
    s = ''.join(i)
    if s in song:
        c += 1

print(c)
","0.0"
"853bea78-6aa0-4fcf-8c5a-5f278603c518","a=int(input())
b=int(input())
c=int(input())
d=int(input())
if a>=b:
    print(b*c+(a-b)*d)
else:
    print(a*c)","0.0"
"42d47feb-cba9-4d18-8ccc-2c20605db82d","n, m = map(int, input().split())

print(n*(m//2))
","0.0"
"027966cc-bba6-4e6a-83bf-ea3f730fb59d","n, b = int(input()), set()
seq = input().strip()
for i in range(n-1):
    t = seq[i:i+2]
    b.add(t)
print(len(b))

","0.0"
"11d7d14b-eb4a-4dd7-94c1-67a03264c424","n=int(input())
list = list(map(int, input().split()))
sum=0
naimn=10**9
for i in range(n):
    sum+=list[i]
    if list[i]<naimn and list[i]%2==1:
        naimn=list[i]
if sum%2==0:
    print(sum)
else:
    print(sum-naimn)","0.0"
"853bea78-6aa0-4fcf-8c5a-5f278603c518","n = int(input())
k = int(input())
x = int(input())
y = int(input())
result = 0
for i in range(n):
    if(i>=k):
        result += y
    else:
        result += x
print(result)","0.0"
"af37658e-d46e-45db-9ee2-ea44a450db89","import math
lis = list(map(int, input().split()))
k = lis[0]
n = lis[1]
s = lis[2]
p = lis[3]
dolg = k*math.ceil(n/s)


print(math.ceil(dolg/p))
","0.0"
"027966cc-bba6-4e6a-83bf-ea3f730fb59d","n = int(input())
a = input()
s = []
for i in range(1, n):
    p = a[i-1]+a[i]
    if p not in s:
        s.append(p)
print(len(s))
","0.0"
"a40047cc-77a1-4a37-9e28-a61947b07df8","n=int(input())
a=list(map(int, input().split()))
b=list(map(int, input().split()))
a.sort()
b.sort()
s=0
for i in range(n):
    s+=abs(a[i]-b[i])
print(s)","0.0"
"02bc07a3-d63a-4896-b585-e74c06bfc7f2","n, max_abs = map(int, input().split())
tabs = list(map(int, input().split()))
s = sum(tabs)
if s == 0:
    print(0)
elif abs(s) > max_abs:
    print(abs(s) // max_abs + bool(abs(s) % max_abs))
else:
    print(1)
","0.0"
"a4accdf7-f726-49d2-b19a-aeb590224402","n = int(input())

dp = [[0 for i in range(10)] for j in range(n+2)]
for i in range(0, 10):
    dp[1][i] = 1

for i in range(2, n + 2):
    for j in range(10):
        dp[i][j] = sum([dp[i-1][t] for t in range(j + 1)])

print(sum(dp[n]))

","0.0"
"c2081cad-a682-43e2-8960-081ef8963a37","a, b = map(int, input().split())
ans = [min(a, b)]
k = max(a, b)
m = min(a, b)
ans.append((k-m) // 2)
print(*ans)","0.0"
"39674b7f-1b5d-40b8-aa5c-02f2ac4a2a4b","q=int(input())
w=bin(q)[2:]
l1=''
l2=''
l3=''
l4=''
l5=''
for i in range(len(w)):
    if w[i]=='1':
        l1=l1+'   #'
        l2=l2+' # #'
        l3=l3+'#  #'
        l4=l4+'   #'
        l5=l5+'   #'
    if w[i]=='0':
        l1=l1+'####'
        l2=l2+'#  #'
        l3=l3+'#  #'
        l4=l4+'#  #'
        l5=l5+'####'
    if i!=len(w)-1:
        l1 = l1 + ' '
        l2 = l2 + ' '
        l3 = l3 + ' '
        l4 = l4 + ' '
        l5 = l5 + ' '
print(l1,l2,l3,l4,l5,sep='
')","0.0"
"d949e12a-1807-4b82-a4ab-c1a178a79888","k = int(input())
count = 0
for i in range(1000000000000):
    summ = sum(map(int, list(str(i))))
    if summ == 10:
        count += 1
    if count == k:
        print(i)
        break
","0.0"
"c2081cad-a682-43e2-8960-081ef8963a37","k,s=map(int,input().split())
a=min(k,s)
b=abs(k-s)
b=b//2
print(a,b)
","0.0"
"5eebb219-dec9-41ce-83c6-efc4a4670acc","a = input()
s = 'qwertyuiopasdfghjklzxcvbnmq'
t = s.find(a)
print(s[t+1])","0.0"
"42d47feb-cba9-4d18-8ccc-2c20605db82d","n, m = map(int,  input().split())
print((m//2)*n)","0.0"
"17c6577a-b831-485d-ba22-fb47923019b4","n = int(input())
g = n * 4 + 3

a = []
for i in range(n + 1):
    for j in range(i + 1):
        a.append(j)
    for j in range(i - 1, -1, -1):
        a.append(j)

    c = "" "" * ((g - len(a) * 2 - 1) // 2)
    print(c, sep="" "", end="""")
    print(*a)
    a = []

for i in range(n - 1, -1, -1):
    for j in range(i + 1):
        a.append(j)
    for j in range(i - 1, -1, -1):
        a.append(j)


    if i == 0:
        c = "" "" * ((g - len(a) * 2 - 1) // 2)
        print(c, sep="" "", end="""")
        print(*a, end="""")
        a = []
    else:
        c = "" "" * ((g - len(a) * 2 - 1) // 2)
        print(c, sep="" "", end="""")
        print(*a)
        a = []","0.0"
"7d8fcbed-1f16-4d19-8a17-6560267bc64c","a = input()
for i in range(len(a)):
    if a[i]==' ':
        x = i
        break
n = int(a[ :x])
a = a[x+1: ]
for s in range(len(a)):
    if a[s]==' ':
        x = s
        break
m = int(a[ :x])
k = int(a[x+1: ])
if k>=n:
    print('NO')
else:
    b = 0
    while m>0:
        if (m-n)<=0:
            m-=n
        else:
            m-=(n-k)
        b+=1
    print(b)","0.0"
"853bea78-6aa0-4fcf-8c5a-5f278603c518","n = int(input())
k = int(input())
x = int(input())
y = int(input())
if n > k:
    print(x * k + y * (n-k))
else:
    print(x * n)","0.0"
"d949e12a-1807-4b82-a4ab-c1a178a79888","k = int(input())
count = 0
for i in range(10 ** 1000):
    summ = sum(map(int, str(i)))
    if summ == 10:
        count += 1
    if count == k:
        print(i)
        break
","0.0"
"a4accdf7-f726-49d2-b19a-aeb590224402","n = int(input())

ans = [[0] * 10 for _ in range(n+1)]
for i in range(10):
    ans[1][i] = 1

for i in range(2, n+1):
    for j in range(10):
        for k in range(0, j+1):
            ans[i][j] += ans[i-1][k]

# print(*ans, sep='
')
print(sum(ans[-1]))","0.0"
"5eebb219-dec9-41ce-83c6-efc4a4670acc","sp=[""q"",'w','e','r','t','y','u','i','o','p','a','s','d','f','g','h','j','k','l','z','x','c','v','b','n','m']
s=input()
if s==""m"":
    print(""q"")
else:
    print(sp[sp.index(s)+1])","0.0"
"7d8fcbed-1f16-4d19-8a17-6560267bc64c","x, y, z = input().split()
x = int(x)
y = int(y)
z = int(z)

if y - x <= 0:
    print('1')
elif x<=z:
    print('NO')
elif x > z:
    cnt = 0
    while y - x > 0:
        y = y - x + z
        cnt += 1
    print(cnt+1)","0.0"
"17c6577a-b831-485d-ba22-fb47923019b4","n = int(input())
for i in range(n + 1):
    print("" "" * 2 *(n - i) + "" "".join(list(map(str, range(i + 1)))) + "" "" + "" "".join(reversed(list(map(str, range(i))))))
for i in range(n):
    print("" "" * 2 * (i + 1) + "" "".join(list(map(str, range(n - i)))) + "" "" + "" "".join(reversed(list(map(str, range(n - i - 1))))))","0.0"
"42d47feb-cba9-4d18-8ccc-2c20605db82d","n, m = map(int, input().split())
print(m//2*n)","0.0"
"d949e12a-1807-4b82-a4ab-c1a178a79888","def sum_of_digits(n):
    s = 0
    while n:
        s, n = s + n % 10, n // 10
    return s
k = int(input())
count = 0
num = 19
while count < k:
    num += 9
    if sum_of_digits(num) == 10:
        count += 1
print(num-9)","0.0"
"7d8fcbed-1f16-4d19-8a17-6560267bc64c","n,m,k=map(int,input().split())
if n<=k:
    print(""NO"")
else:
    v=0
    while n<m:
        m=m-n+k
        v=v+1
print(v+1)
    
    
","0.0"
"17c6577a-b831-485d-ba22-fb47923019b4","n = int(input())

map_=[]
for i in range(n*2+1):
    map__=[]
    for i2 in range(n*2+1):
        map__+=[0]
    map_+=[map__]

def bfs(x,y,n):
    if(map_[y][x]==0 or map_[y][x]<n):
        map_[y][x] = n+1
        if(n>0):
            bfs(x-1,y,n-1)
            bfs(x+1, y, n - 1)
            bfs(x, y-1, n - 1)
            bfs(x, y+1, n - 1)
bfs(n,n,n)

for i in range(n*2+1):
    l=''
    for i2 in range(n*2+1):
        if(map_[i2][i] == 0):
            l+=' '
        else:
            l+=str(map_[i2][i]-1)
        l+=' '

    print(l)
","0.0"
"d949e12a-1807-4b82-a4ab-c1a178a79888","k = int(input())
c = k // 10000 + k // 1000 % 10 + k // 100 % 10 + k // 10 % 10 + k % 10
j = 10 - c
print(str(k) + str(j))
","0.0"
"17c6577a-b831-485d-ba22-fb47923019b4","n = int(input())
if n ==2:
    print(""    0"")
    print(""  0 1 0"")
    print(""0 1 2 1 0"")
    print(""  0 1 0"")
    print(""    0"")
elif n == 3:
    print(""      0"")
    print(""    0 1 0"")
    print(""  0 1 2 1 0"")
    print(""0 1 2 3 2 1 0"")
    print(""  0 1 2 1 0"")
    print(""    0 1 0"")
    print(""      0"")

elif n == 4:
    print(""        0"")
    print(""      0 1 0"")
    print(""    0 1 2 1 0"")
    print(""  0 1 2 3 2 1 0"")
    print(""0 1 2 3 4 3 2 1 0"")
    print(""  0 1 2 3 2 1 0"")
    print(""    0 1 2 1 0"")
    print(""      0 1 0"")
    print(""        0"")
elif n == 5:
    print(""          0"")
    print(""        0 1 0"")
    print(""      0 1 2 1 0"")
    print(""    0 1 2 3 2 1 0"")
    print(""  0 1 2 3 4 3 2 1 0"")
    print(""0 1 2 3 4 5 4 3 2 1 0"")
    print(""  0 1 2 3 4 3 2 1 0"")
    print(""    0 1 2 3 2 1 0"")
    print(""      0 1 2 1 0"")
    print(""        0 1 0"")  
    print(""          0"")
elif n == 6:
    print(""            0"")
    print(""          0 1 0"")
    print(""        0 1 2 1 0"")
    print(""      0 1 2 3 2 1 0"")
    print(""    0 1 2 3 4 3 2 1 0"")
    print(""  0 1 2 3 4 5 4 3 2 1 0"")
    print(""0 1 2 3 4 5 6 5 4 3 2 1 0"")
    print(""  0 1 2 3 4 5 4 3 2 1 0"")
    print(""    0 1 2 3 4 3 2 1 0"")
    print(""      0 1 2 3 2 1 0"")
    print(""        0 1 2 1 0"") 
    print(""          0 1 0"")
    print(""            0"")
elif n == 7:
    print(""              0"")
    print(""            0 1 0"")
    print(""          0 1 2 1 0"")
    print(""        0 1 2 3 2 1 0"")
    print(""      0 1 2 3 4 3 2 1 0"")
    print(""    0 1 2 3 4 5 4 3 2 1 0"")
    print(""  0 1 2 3 4 5 6 5 4 3 2 1 0"")
    print(""0 1 2 3 4 5 6 7 6 5 4 3 2 1 0"")
    print(""  0 1 2 3 4 5 6 5 4 3 2 1 0"")
    print(""    0 1 2 3 4 5 4 3 2 1 0"")
    print(""      0 1 2 3 4 3 2 1 0"")
    print(""        0 1 2 3 2 1 0"")
    print(""          0 1 2 1 0"")
    print(""            0 1 0"")
    print(""              0"")
elif n == 8:
    print(""                0"")
    print(""              0 1 0"")
    print(""            0 1 2 1 0"")
    print(""          0 1 2 3 2 1 0"")
    print(""        0 1 2 3 4 3 2 1 0"")
    print(""      0 1 2 3 4 5 4 3 2 1 0"")
    print(""    0 1 2 3 4 5 6 5 4 3 2 1 0"")
    print(""  0 1 2 3 4 5 6 7 6 5 4 3 2 1 0"")
    print(""0 1 2 3 4 5 6 7 8 7 6 5 4 3 2 1 0"")
    print(""  0 1 2 3 4 5 6 7 6 5 4 3 2 1 0"")
    print(""    0 1 2 3 4 5 6 5 4 3 2 1 0"")
    print(""      0 1 2 3 4 5 4 3 2 1 0"")
    print(""        0 1 2 3 4 3 2 1 0"")
    print(""          0 1 2 3 2 1 0"")
    print(""            0 1 2 1 0"")
    print(""              0 1 0"")
    print(""                0"")
elif n ==9:
    print(""                  0"")
    print(""                0 1 0"")
    print(""              0 1 2 1 0"")
    print(""            0 1 2 3 2 1 0"")
    print(""          0 1 2 3 4 3 2 1 0"")
    print(""        0 1 2 3 4 5 4 3 2 1 0"")
    print(""      0 1 2 3 4 5 6 5 4 3 2 1 0"")
    print(""    0 1 2 3 4 5 6 7 6 5 4 3 2 1 0"")
    print(""  0 1 2 3 4 5 6 7 8 7 6 5 4 3 2 1 0"")
    print(""0 1 2 3 4 5 6 7 8 9 8 7 6 5 4 3 2 1 0"")
    print(""  0 1 2 3 4 5 6 7 8 7 6 5 4 3 2 1 0"")
    print(""    0 1 2 3 4 5 6 7 6 5 4 3 2 1 0"")
    print(""      0 1 2 3 4 5 6 5 4 3 2 1 0"")
    print(""        0 1 2 3 4 5 4 3 2 1 0"")
    print(""          0 1 2 3 4 3 2 1 0"")
    print(""            0 1 2 3 2 1 0"")
    print(""              0 1 2 1 0"")
    print(""                0 1 0"")
    print(""                  0"")
    
    ","0.0"
"7d8fcbed-1f16-4d19-8a17-6560267bc64c","n,m,k=map(int,input().split())
if n<=k:
    print(""NO"")
else:
    v=0
    while n<m:
        m=m-n+k
        v=v+1
print(v+1)
    
    
","0.0"
"d949e12a-1807-4b82-a4ab-c1a178a79888","k=int(input())
q=10*(k+1)-k
print(q)","0.0"
"5eebb219-dec9-41ce-83c6-efc4a4670acc","n = input()
al = ['q', 'w', 'e', 'r', 't', 'y', 'u', 'i' , 'o', 'p', 'a', 's', 'd', 'f', 'g', 'h', 'j' , 'k', 'l', 'z', 'x', 'c', 'v', 'b', 'n', 'm']
a = al.index(n)
if a == 25:
    print('q')
else:
    print( al[a+1])","0.0"
"d949e12a-1807-4b82-a4ab-c1a178a79888","k = int(input())
for i in range(10, 1000000000, 10):
    s = 0
    i2 = i
    while i2:
        s += i2 % 10
        i2 //= 10
    if s <= 10:
        k -= 1
    if k == 0:
        print(i + 10 - s)
        break
","0.0"
"5895fc4e-b515-464a-a0e2-697d86bf8783","p = list(input().split())
a = int(p[0])
p2 = []
for i in range(a):
    p2.append(int(p[i+1]))
Max = max(p2)
Min = min(p2)
for i in range(len(p2)):
    if p2[i] == Max:
        p2[i] = Min
print(*p2)","0.0"
"7d8fcbed-1f16-4d19-8a17-6560267bc64c","n,m,k=map(int,input().split())
if n<=k:
    print(""NO"")
else:
    v=0
    while n<m:
        m=m-n+k
        v=v+1
print(v+1)
    
    
","0.0"
"02bc07a3-d63a-4896-b585-e74c06bfc7f2","n, x=map(int, input().split())
a=[int(s) for s in input().split()]
from math import *
if sum(a)==0:
    print(0)
else:
    print(ceil(abs(sum(a))/x))","0.0"
"42d47feb-cba9-4d18-8ccc-2c20605db82d","a, b = [int(i) for i in input().split()]

print(b // 2 * a)","0.0"
"e02095cd-3f62-4005-a067-a9da53d342bb","a,k,k1,ob = int(input()),0,0,0
s = [int(i) for i in input().split()]
s1 = [int(i) for i in input().split()]
for i in range(a):
    k += s[i]
    k1+=s1[i]
    if  k == k1 and s[i] == s1[i]:
        ob +=s[i]
print(ob)","0.0"
"d949e12a-1807-4b82-a4ab-c1a178a79888","k = int(input())
c = k // 10000 + k // 1000 % 10 + k // 100 % 10 + k // 10 % 10 + k % 10
print(10 * (k + 1) - c)","0.0"
"7d8fcbed-1f16-4d19-8a17-6560267bc64c","a,b,c=input().split()
a,b,c=int(a),int(b),int(c)
s=0
if a<=c:
    print(""NO"")
else:
    while b>0:
        b=b-a
        s+=1
        if b<=0:
            break
        b=b+c
    print(s)
","0.0"
"853bea78-6aa0-4fcf-8c5a-5f278603c518","a=int(input())
b=int(input())
c=int(input())
d=int(input())
if a>b:
    e=b*c+(a-b)*d
else:
    e=a*c
print(e)","0.0"
"5eebb219-dec9-41ce-83c6-efc4a4670acc","n=input()
x1='qwertyuiop'
x2='asdfghjkl'
x3='zxcvbnm'
if n in x1:
    if x1.index(n)==9:
        print('q')
    else:
        print(x1[x1.index(n)+1])
if n in x2:
    if x2.index(n)==8:
        print('a')
    else:
        print(x2[x2.index(n)+1])
if n in x3:
    if x3.index(n)==6:
        print('z')
    else:
        print(x3[x3.index(n)+1])","0.0"
"17c6577a-b831-485d-ba22-fb47923019b4","n = int(input())
lst = []
k = 2 * n + 1
c = n
m = 1
lst2 = []
for i in range(k):
    if i <= n:
        z = ''
        z += ' ' * (c)
        for st in range(0, i):
            z += str(st)
        for st in range(i, -1, -1):
            z += str(st)
        z += ' ' * (c)
        c -= 1
        lst.append(z)
    else:
        z = ''
        z += ' ' * (m)
        for st in range(0, n - 1):
            z += str(st)
        for st in range(n - 1, -1, -1):
            z += str(st)
        z += ' ' * m
        m += 1
        n -= 1
        lst.append(z)
for s in lst:
    print(' '.join(s))","0.0"
"5eebb219-dec9-41ce-83c6-efc4a4670acc","n=input()
x1='qwertyuiop'
x2='asdfghjkl'
x3='zxcvbnm'
if n in x1:
    if x1.index(n)==9:
        print('a')
    else:
        print(x1[x1.index(n)+1])
if n in x2:
    if x2.index(n)==8:
        print('z')
    else:
        print(x2[x2.index(n)+1])
if n in x3:
    if x3.index(n)==6:
        print('q')
    else:
        print(x3[x3.index(n)+1])","0.0"
"770952ee-5595-4690-9f1a-a172955624fa","
n = int(input())
lis = list(map(str, input().split()))

temp = 1
for i in lis:
    if lis.count(i) > temp:
        temp = lis.count(i)

print(temp)
","0.0"
"853bea78-6aa0-4fcf-8c5a-5f278603c518","N = int(input())  
K = int(input())  
X = int(input())  
Y = int(input())  
a = K * X
b = max(0, N - K)  
c = b * Y

d = a + c
print(d)","0.0"
"5895fc4e-b515-464a-a0e2-697d86bf8783","q=list(map(int, input().split()))
w=q[1:]
e=min(w)
r=max(w)
for i in range(len(w)):
    if w[i]==r:
        w[i]=e
print(*w)","0.0"
"a40047cc-77a1-4a37-9e28-a61947b07df8","n = int(input())
a = input()
b=input()
a = list(map(int, a.split()))
b = list(map(int, b.split()))
a.sort()
b.sort()
g = 0
for i in range(n):
    g = g + abs(a[i] - b[i])
print(g)","0.0"
"d949e12a-1807-4b82-a4ab-c1a178a79888","k = int(input())
c = k // 10000 + k // 1000 % 10 + k // 100 % 10 + k // 10 % 10 + k % 10
print(str(k) + str(10 - c))","0.0"
"aeb122ea-bb7f-44ee-93c8-65ead3d4f5f3","a = input().split()
n = int(a[0])
k = int(a[1])
i = 0
while i*(i+1)/2*5<=(240-k):
    i+=1
i = int(i)
print(min(i-1,n))","0.0"
"c2081cad-a682-43e2-8960-081ef8963a37","a, b = map(int, input().split())
poi = 0
nepoi = 0
while True:
    if (a - 1) >= 0 and (b - 1) >= 0:
        poi += 1
        a = a - 1
        b = b - 1
    elif a == 0 and b >= 2:
        nepoi += 1
        b = b - 2
    elif a >= 2 and b == 0:
        nepoi += 1
        a = a - 2
    else: break

print(poi, nepoi)
","0.0"
"c2081cad-a682-43e2-8960-081ef8963a37","a, b = map(int, input().split())
print(min(a, b), (a - min(a, b)) // 2 + (b - min(a, b)) // 2)","0.0"
"5895fc4e-b515-464a-a0e2-697d86bf8783","s=[]
a=input().split()
for i in range(1,len(a)):
    s.append(int(a[i]))
smax=max(s)
smin=min(s)
for index, value in enumerate(s):
    if value == smax:
        s[index] = smin
print(*s)
","0.0"
"7d8fcbed-1f16-4d19-8a17-6560267bc64c","n,m,k=map(int,input().split())
if n<=k:
    print(""NO"")
else:
    v=0
    while n<m:
        m=m-n+k
        v=v+1
print(v+1)
    
    
","0.0"
"c2081cad-a682-43e2-8960-081ef8963a37","a, b = map(int, input().split(' '))
print(min(a, b), (a + b - (2 * min(a, b))) // 2)","0.0"
"42d47feb-cba9-4d18-8ccc-2c20605db82d","n, m = map(int, input().split())
print(m // 2 * n)
","0.0"
"853bea78-6aa0-4fcf-8c5a-5f278603c518","a=int(input())
b=int(input())
c=int(input())
d=int(input())
print(b*c+(a-b)*d)","0.0"
"42d47feb-cba9-4d18-8ccc-2c20605db82d","nm = list(map(int, input().split()))
n = nm[0]
m = nm[1]

s = (m//2)*n
print(s)","0.0"
"aeb122ea-bb7f-44ee-93c8-65ead3d4f5f3","a = input()

b = a.split(' ')
a1 = b[0]
b1 = b[1]
a = int(a1)
b = int(b1)

time = 240 - b
n = 0
time_ready = False
for i in range(a):
    x = 5*(i+1)
    time -= x
    n += 1
    if time <= x or time <= 0:
        print(n)
        time_ready = True
        break
if time_ready == False:
    print(n)","0.0"
"853bea78-6aa0-4fcf-8c5a-5f278603c518","n = int(input())
k = int(input())
x = int(input())
y = int(input())
summa=0
if n<k:
    print(n*x)
else:
    print(k*x+(n-k)*y)
","0.0"
"853bea78-6aa0-4fcf-8c5a-5f278603c518","n=input()
k=input()
x=input()
y=input()
q=int(n)-int(k)
p=int(k)*int(x)
r=int(y)*q
if q<=0:
    print(p)
else:
    print(p+r)
","0.0"
"17c6577a-b831-485d-ba22-fb47923019b4","def print_diamond(n):
    for i in range(n + 1):
        print("" "" * (n - i), end="""")
        for j in range(i + 1):
            print(j, end="" "")
        for j in range(i - 1, -1, -1):
            print(j, end="" "")
        print()

    for i in range(n - 1, -1, -1):
        print("" "" * (n - i), end="""")
        for j in range(i + 1):
            print(j, end="" "")
        for j in range(i - 1, -1, -1):
            print(j, end="" "")
        print()


n = int(input())
print_diamond(n)
","0.0"
"027966cc-bba6-4e6a-83bf-ea3f730fb59d","n=int(input())
s=input()
j=set()
for i in range(n-1):
    j.add(s[i:i+2])
print(len(j))","0.0"
"7d8fcbed-1f16-4d19-8a17-6560267bc64c","n,m,k=map(int,input().split())
if n<=k:
    print(""NO"")
else:
    v=0
    while n<m:
        m=m-n+k
        v=v+1
print(v+1)
    
    
","0.0"
"39674b7f-1b5d-40b8-aa5c-02f2ac4a2a4b","n = int(input())
binary_n = str(bin(n))[2:]
decor = [['####', '#  #', '#  #', '#  #', '####'] if not int(i) else ['   #', ' # #', '#  #', '   #', '   #'] for i in binary_n]
for i in range(5):
    for j in range(len(decor)):
        if j == len(decor) - 1:
            print(decor[j][i])
        else:
            print(decor[j][i], end=' ')","0.0"
"aeb122ea-bb7f-44ee-93c8-65ead3d4f5f3","a = list(map(int, input().split("" "")))
s=(240-a[1])//5
b=0
for i in range(a[0],0,-1):
    if i*(i+1)/2<=s and i>b:
        b=i
print(b)","0.0"
"42d47feb-cba9-4d18-8ccc-2c20605db82d","l = [int(i) for i in input().split()]
n = l[0]
m = l[1]
print(n * (m//2))","0.0"
"6824fb27-2339-421d-85db-60758b59cddc","n = int(input())
k = 0
now = 1
while now != n:
    if now * 5 <= n:
        now *= 5
    elif now * 2 <= n:
        now *= 2
    else:
        now += 1
    k += 1
print(k)
","0.0"
"5895fc4e-b515-464a-a0e2-697d86bf8783","list = list(map(int, input().split()))
mino=list[1]
maxo=list[1]
for i in range(list[0]):
    if list[i+1]<mino:
        mino=list[i]
    if list[i+1]>maxo:
        maxo=list[i+1]
newlist=[]
for i in range(list[0]):
    if list[i+1]==maxo:
        newlist+=[mino]
    else:
        newlist+=[list[i+1]]
print(*newlist)","0.0"
"8381a3f6-aaba-448f-b65f-50117785adf7","a = input().split()
n = int(a[0])
m = int(a[1])
a = int(a[2])
x = 0
y = 0
if n%a==0:
    x = n//a
else:
    x = n//a+1
if m%a==0:
    y = m//a
else:
    y = m//a+1
print(x*y)","0.0"
"853bea78-6aa0-4fcf-8c5a-5f278603c518","a=int(input())
b=int(input())
c=int(input())
d=int(input())
if a>b:
    print(b*c+(a-b)*d)
else:
    print(a*c)","0.0"
"17c6577a-b831-485d-ba22-fb47923019b4","def gen_str(i, p):
    s = ''
    if p != 0:
        s += ' ' * p
    s += '0 '
    for j in range(i):
        s += f'{j+1} '
    for j in range(i, 1, -1):
        s += f'{j-1} '
    if i > 0:
        s += '0'
    return s


x = int(input())
y = x * 2
sp = []
for i in range(x+1):
    sp.append(gen_str(i, y))
    print(gen_str(i, y))
    y -= 2

del sp[-1]

for i in reversed(sp):
    print(i)","0.0"
"42d47feb-cba9-4d18-8ccc-2c20605db82d","n, m = map(int,input().split())
if m % 2 ==0:
    print(n* (m // 2))
else:
    print(n * (m // 2) - 1)","0.0"
"8381a3f6-aaba-448f-b65f-50117785adf7","v = input()
for i in range(len(v)):
    if v[i]==' ':
        x = i
        break
a = int(v[ :x])
v = v[x+1: ]
for u in range(len(v)):
    if v[u]==' ':
        x = u
        break
b = int(v[ :x])
c = int(v[x+1: ])
while a%c!=0:
    a+=1
while b%c!=0:
    b+=1
print((a*b)//(c*c))","0.0"
"17c6577a-b831-485d-ba22-fb47923019b4","n = int(input())
if n == 2:
    print(
'''    0
  0 1 0
0 1 2 1 0
  0 1 0
    0''')
elif n == 3:
    print(
        '''      0
    0 1 0
  0 1 2 1 0
0 1 2 3 2 1 0
  0 1 2 1 0
    0 1 0
      0'''
    )
elif n == 4:
    print(
        '''                0
              0 1 0
            0 1 2 1 0
          0 1 2 3 2 1 0
        0 1 2 3 4 3 2 1 0
          0 1 2 3 2 1 0
            0 1 2 1 0
              0 1 0
                0'''
    )
elif n == 5:
    print(
        '''                          0
                        0 1 0
                      0 1 2 1 0
                    0 1 2 3 2 1 0
                  0 1 2 3 4 3 2 1 0
                0 1 2 3 4 5 4 3 2 1 0
                  0 1 2 3 4 3 2 1 0
                    0 1 2 3 2 1 0
                      0 1 2 1 0
                        0 1 0
                          0'''
    )
elif n == 6:
    print('''                    0
                  0 1 0
                0 1 2 1 0
              0 1 2 3 2 1 0
            0 1 2 3 4 3 2 1 0
          0 1 2 3 4 5 4 3 2 1 0
        0 1 2 3 4 5 6 5 4 3 2 1 0
          0 1 2 3 4 5 4 3 2 1 0
            0 1 2 3 4 3 2 1 0
              0 1 2 3 2 1 0
                0 1 2 1 0
                  0 1 0
                    0''')
elif n == 7:
    print('''
                          0
                    0 1 0
                  0 1 2 1 0
                0 1 2 3 2 1 0
              0 1 2 3 4 3 2 1 0
            0 1 2 3 4 5 4 3 2 1 0
          0 1 2 3 4 5 6 5 4 3 2 1 0
        0 1 2 3 4 5 6 7 6 5 4 3 2 1 0
          0 1 2 3 4 5 6 5 4 3 2 1 0
            0 1 2 3 4 5 4 3 2 1 0
              0 1 2 3 4 3 2 1 0
                0 1 2 3 2 1 0
                  0 1 2 1 0
                    0 1 0
                      0''')
elif n == 8:
    print('''                        0
                      0 1 0
                    0 1 2 1 0
                  0 1 2 3 2 1 0
                0 1 2 3 4 3 2 1 0
              0 1 2 3 4 5 4 3 2 1 0
            0 1 2 3 4 5 6 5 4 3 2 1 0
          0 1 2 3 4 5 6 7 6 5 4 3 2 1 0
        0 1 2 3 4 5 6 7 8 7 6 5 4 3 2 1 0
          0 1 2 3 4 5 6 7 6 5 4 3 2 1 0
            0 1 2 3 4 5 6 5 4 3 2 1 0
              0 1 2 3 4 5 4 3 2 1 0
                0 1 2 3 4 3 2 1 0
                  0 1 2 3 2 1 0
                    0 1 2 1 0
                      0 1 0
                        0''')
elif n == 9:
    print('''                          0
                        0 1 0
                      0 1 2 1 0
                    0 1 2 3 2 1 0
                  0 1 2 3 4 3 2 1 0
                0 1 2 3 4 5 4 3 2 1 0
              0 1 2 3 4 5 6 5 4 3 2 1 0
            0 1 2 3 4 5 6 7 6 5 4 3 2 1 0
          0 1 2 3 4 5 6 7 8 7 6 5 4 3 2 1 0
        0 1 2 3 4 5 6 7 8 9 8 7 6 5 4 3 2 1 0
          0 1 2 3 4 5 6 7 8 7 6 5 4 3 2 1 0
            0 1 2 3 4 5 6 7 6 5 4 3 2 1 0
              0 1 2 3 4 5 6 5 4 3 2 1 0
                0 1 2 3 4 5 4 3 2 1 0
                  0 1 2 3 4 3 2 1 0
                    0 1 2 3 2 1 0
                      0 1 2 1 0
                        0 1 0
                          0''')","0.0"
"d949e12a-1807-4b82-a4ab-c1a178a79888","a = int(input())
number = 0
summ = 0
count = 0
while a != 10 and count != a:
    number += 1
    summ = 0
    for i in range(len(str(number))):
        summ += int(str(number)[i])
    if summ == 10:
        count += 1
print(number)","0.0"
"853bea78-6aa0-4fcf-8c5a-5f278603c518","q=int(input())
w=int(input())
e=int(input())
r=int(input())
if q<=w:
    t=e*q
else:
    t=e*w+r*(q-w)
print(t)","0.0"
"42d47feb-cba9-4d18-8ccc-2c20605db82d","l=[int(i) for i in input().split()]
n=l[0]
m=l[1]
print(n*m//2)","0.0"
"770952ee-5595-4690-9f1a-a172955624fa","count = int(input())
nums = input()
result = [[]]

for num in nums.split():
    for command_index in range(len(result)):
        if num not in result[command_index]:
            result[command_index].append(num)
            continue
        else:
            if command_index == len(result) - 1:
                result.append([])
                result[len(result) - 1].append(num)

print(len(result))","0.0"
"5895fc4e-b515-464a-a0e2-697d86bf8783","s=list(map(int,input().split()))
s.pop(0)
ma=max(s)
mi=min(s)
c=s.count(ma)
for i in range(c):
    m=s.index(ma)
    s.pop(m)
    s.insert(m, mi)
print(*s)
","0.0"
"42d47feb-cba9-4d18-8ccc-2c20605db82d","n, m = map(int,input().split())
if m % 2 ==0:
    print(n* (m // 2))
else:
    print(n * (m // 2))","0.0"
"e02095cd-3f62-4005-a067-a9da53d342bb","n = int(input())
f = list(map(int, input().split()))
s = list(map(int, input().split()))

put1 = 0
put2 = 0

temp = 0
for i in range(0, n):
    if f[i] == s[i] and put1 == put2:
        temp += s[i]
    put1 += f[i]
    put2 += s[i]

print(temp)","0.0"
"42d47feb-cba9-4d18-8ccc-2c20605db82d","l=[int(i) for i in input().split()]
n=l[0]
m=l[1]
print(n*(m//2))
","0.0"
"c2081cad-a682-43e2-8960-081ef8963a37","a = input()
a = list(map(int, a.split()))
g = min(a)
b = (max(a)-min(a))//2
print(g,b)","0.0"
"d949e12a-1807-4b82-a4ab-c1a178a79888","a = int(input())
number = 0
summ = 0
count = 0
while a != 10 and count != a:
    number += 1
    summ = 0
    for i in range(len(str(number))):
        summ += int(str(number)[i])
    if summ == 10:
        count += 1
print(number)","0.0"
"5895fc4e-b515-464a-a0e2-697d86bf8783","p = list(map(int, input().split()))
q = 0
w = 101
z = p[0]
p = p[1: ]
for ii in range(z):
    if p[ii] > q:
        q = p[ii]
    elif p[ii] < w:
        w = p[ii]
for i in range(z):
    if p[i] == q:
        p[i] = w
print(*p)","0.0"
"17c6577a-b831-485d-ba22-fb47923019b4","
a=int(input())
t=a
p=a*2
print("" ""*p,0, sep='')
p=p-2
for i in range(1,t+1):
    print("" ""*p,end='')
    p=p-2
    for j in range(i+1):
        print(j, end=' ')
    for h in range(i-1,-1,-1):
        print( h, end=' ')
    print()

p=p+4
for i in range(t-1,-1,-1):
    print("" ""*p,end='')
    p=p+2
    for j in range(i+1):
        print(j, end=' ')
    for h in range(i-1,-1,-1):
        print( h, end=' ')
    print()
","0.0"
"853bea78-6aa0-4fcf-8c5a-5f278603c518","n = int(input())
k = int(input())
x = int(input())
y = int(input())

if n <= k:
    print(n*x)
else:
    print(k*x+(n-k)*y)","0.0"
"7aef5f21-3d8a-4711-9507-28bcb1b28522","import math
from math import sqrt

n = int(input())
m = math.inf
for i in range(1, int(sqrt(n)) + 1):
    if n % i != 0:
        continue
    x = i
    y = n // i

    m = min(m, x * (y + 1) + y * (x + 1))
print(m)","0.0"
"7d8fcbed-1f16-4d19-8a17-6560267bc64c","n,m,k=map(int,input().split())
if n<=k:
    print(""NO"")
else:
    v=0
    while n<m:
        m=m-n+k
        v=v+1
print(v+1)
    
    
","0.0"
"aeb122ea-bb7f-44ee-93c8-65ead3d4f5f3","userInput = input()
n,k = userInput.split("" "")
n, k = int(n), int(k)
time = 0
time += k
result = 0
for i in range(n):
    if((time + 5 * (i+1)) <= 240):
        time += 5 * (i+1)
        result += 1
    else:
        break
print(result)","0.0"
"c2081cad-a682-43e2-8960-081ef8963a37","a, b=map(int, input().split())
print(min(a, b), abs(a-b)//2)","0.0"
"853bea78-6aa0-4fcf-8c5a-5f278603c518","nights = int(input())
start_nights = int(input())
high_price = int(input())
low_price = int(input())
if nights > start_nights:
    print(start_nights*high_price+(nights - start_nights)*low_price)
elif nights == start_nights:
    print(start_nights*high_price)
else:
    print(nights*high_price)","0.0"
"0f42de72-e8d1-4f41-8797-90a6cd184af9","x, y, z = input().split()
x = int(x)
y = int(y)
z = int(z)
print(x*3 + y*5 + z*12)","0.0"
"42d47feb-cba9-4d18-8ccc-2c20605db82d","n, m = map(int,input().split())
if m%2==0:
    print((m//2)*n)
else:
    print(((m-1)//2)*n)","0.0"
"a40047cc-77a1-4a37-9e28-a61947b07df8","n = int(input())
a = list(map(int, input().split()))
b = list(map(int, input().split()))
# a = list(map(int, '1500 1600 1505'.split()))
# b = list(map(int, '1490 1501 1610'.split()))
# n = 3
a = sorted(a)
b = sorted(b)
x = 0
for i in range(n):
	x += abs(a[i]-b[i])
print(x)

","0.0"
"8381a3f6-aaba-448f-b65f-50117785adf7","a = list(map(int, input().split("" "")))
print(((a[0]+a[2]-1)//a[2])*((a[1]+a[2]-1)//a[2]))","0.0"
"5eebb219-dec9-41ce-83c6-efc4a4670acc","s = input()
v = 'qwertyuiopasdfghjklzxcvbnm'
if s == 'm':
    print('q')
else:
    print(v[v.index(s) + 1])
","0.0"
"42d47feb-cba9-4d18-8ccc-2c20605db82d","n, m=map(int, input().split())
max33=n*(m//2)
print(max33)
","0.0"
"7aef5f21-3d8a-4711-9507-28bcb1b28522","import math
from math import sqrt

n = int(input())
m = math.inf
for i in range(1, n + 1):
    if n % i != 0:
        continue
    x = i
    y = n // i

    m = min(m, x * (y + 1) + y * (x + 1))
print(m)","0.0"
"0f42de72-e8d1-4f41-8797-90a6cd184af9","q=3
x,y,z=map(int, input().split())
a=q+2
d=a+7
f=x*q
r=y*a
g=z*d
w=f+r+g
print(w)","0.0"
"5eebb219-dec9-41ce-83c6-efc4a4670acc","b=input()
if b=='q':
    print('w')
elif b=='w':
    print('e')
elif b=='e':
    print('r')
elif b=='r':
    print('t')
elif b=='t':
    print('y')
elif b=='y':
    print('u')
elif b=='u':
    print('i')
elif b=='i':
    print('o')
elif b=='o':
    print('p')
elif b=='p':
    print('a')
elif b=='a':
    print('s')
elif b=='s':
    print('d')
elif b=='d':
    print('f')
elif b=='f':
    print('g')
elif b=='g':
    print('h')
elif b=='h':
    print('j')
elif b=='j':
    print('k')
elif b=='k':
    print('l')
elif b=='l':
    print('z')
elif b=='z':
    print('x')
elif b=='x':
    print('c')
elif b=='c':
    print('v')
elif b=='v':
    print('b')
elif b=='b':
    print('n')
elif b=='n':
    print('m')
elif b=='m':
    print('q')
","0.0"
"5eebb219-dec9-41ce-83c6-efc4a4670acc","b=input()
if b=='q':
    print('w')
elif b=='w':
    print('e')
elif b=='e':
    print('r')
elif b=='r':
    print('t')
elif b=='t':
    print('y')
elif b=='y':
    print('u')
elif b=='u':
    print('i')
elif b=='i':
    print('o')
elif b=='o':
    print('p')
elif b=='p':
    print('a')
elif b=='a':
    print('s')
elif b=='s':
    print('d')
elif b=='d':
    print('f')
elif b=='f':
    print('g')
elif b=='g':
    print('h')
elif b=='h':
    print('j')
elif b=='j':
    print('k')
elif b=='k':
    print('l')
elif b=='l':
    print('z')
elif b=='z':
    print('x')
elif b=='x':
    print('c')
elif b=='c':
    print('v')
elif b=='v':
    print('b')
elif b=='b':
    print('n')
elif b=='n':
    print('m')
elif b=='m':
    print('q')
","0.0"
"39674b7f-1b5d-40b8-aa5c-02f2ac4a2a4b","a = int(input())
x = ''
z = a
c = ['','','','','']
while a > 1:
    x = str(a%2) + x
    a = a//2
    z = str(a%2)
x = z + x
x = int(x)
x = str(x)
for i in range(len(x)):
    if x[i] == '1':
        c[0] = c[0] + '   # '
        c[1] = c[1] + ' # # '
        c[2] = c[2] + '#  # '
        c[3] = c[3] + '   # '
        c[4] = c[4] + '   # '
    else:
        c[0] = c[0] + '#### '
        c[1] = c[1] + '#  # '
        c[2] = c[2] + '#  # '
        c[3] = c[3] + '#  # '
        c[4] = c[4] + '#### '
for i in range(5):
    print(c[i])","0.0"
"39674b7f-1b5d-40b8-aa5c-02f2ac4a2a4b","sp0=[[""####""],[""#  #""],[""#  #""],[""#  #""],[""####""]]
sp1=[[""   #""],["" # #""],[""#  #""],[""   #""],[""   #""]]
a=int(str(bin(int(input())))[2:])
s=list(str(a))
s=list(map(int,s))
for i in range(5):
    for j in range(len(s)):
        if s[j]==1:
            print(*sp1[i], end="" "")
        elif s[j]==0:
            print(*sp0[i], end="" "")
    print()","0.0"
"e16baab9-5d32-479d-877e-04518a247380","skolko, AAAAAAAAA_ZENSHINAAAAAAAAAA = map(int,input().split())
pamatniki = list(map(int,input().split()))
l = 0
r = 1
skolko1 = 0
while True:
    if pamatniki[r] - pamatniki[l] > AAAAAAAAA_ZENSHINAAAAAAAAAA:
        skolko1 += skolko-r
        l += 1
    else:
        r += 1
    if l == r:
        r = l + 1
    if l > skolko-1:
        l = skolko-1
    if r > skolko - 1:
        break

print(skolko1)
# â â â â â â â â â¢â â¡â¡â¡â¡â¡â¡â¡â¡â¡â¡â¡â¡â¡â¡â¡â¡â¡â¡â¡â¡â¡â¡â¡â¡â¡â¡â¡â¡â¡â¡â¡â¡â¡â¡â¡â¡â â â â 
# â â â â â¢â â¡â¢â¢â â¡â¡â¡â¡â¡â¡â¡â¡â¡â¡â¡â¡â¡â¡â¡â¡â¡â¡â¡â¡â¡â¡â¡â¡â¡â¡¢â¢â¢â ¢â¢â ¢â¢â â¡°â¢â â â â¢â ¨
# â â â¡â â¡â¢â â¡â¡â¢â ¢â¢â â¡¨â¢â¢â â â¡¨â¢â¢â â¡â â¡¨â¢â¢â â¡â â¡¨â¢â¢â â¡â¡â â¡â â¡¢â ¡â¡â¢â ¢â¡â¡¨â  â ¡â¢â ¢
# â â  â â¢â â¡â â¡â¡ªâ¡â â¢â ¨â¡¢â¢â¢â â¡â¢â ¢â ¡â¡â â¡¡â¢â â¡¢â ¡â¢â â¡¨â¢â¢â ¢â¢â¢â â¡¨â¢â ¢â¡â¢â ¢â¡â¢â â¡¡â¢â  â ¨
# â â â¡â  â â â¢â ¢â¡â¡ªâ¡â¡â¡ªâ¡â¢â ¢â¡â¢â ¢â¡¡â¡â¢â¢â ¢â¡â â¢â ¡â¡â¡°â¢â ¡â¡â â¢â¢â¢â â â¢â â¢â ªâ¡¨â¡â¢â¢â ¡â ¨â ¨
# â â â¢â â â¡â¢â ªâ¡â¡â¡â¡ªâ¡â¢â ¢â¡â¢â ¢â¡â â¡â¡¢â ¢â¡â¢â¢â ¢â¡â¢â ¢â¡â â¢â ¡â¡â¡â¢â ¡â £â¡â¡â¡£â¡â â¡â¡¢â ¡â¢â ¨â ¨
# â â â â¢â â¢â¢â¢â¢â â¢â¢â ªâ¡â¡â¢â¢¢â££â£ªâ£â¢â£â¢¬â¢¬â¡¢â£¥â£±â£¨â£¢â£±â¢¨â£ªâ¡â£â£â£â£â¢â £â¡â¢â ªâ¡¨â¢â ¢â¡â ¡â¢â â¢
# â â â â¢â â¡â¢â¢â °â¢¡â¢â â¡¡â¢â¢â ¢â¢¹â¡â£¿â¢¼â¡ºâ£¯â£»â£¹â¡â£¿â¢¾â¡ªâ¡§â£¿â¢¸â¡§â£â¢¾â¡â£¿â¢¸â¡â¢â¢¸â ¨â¢ªâ ¨â¡â¡£â ¡â¢â â¡â¡
# â â  â â  â â ¢â¡â¡â â â¡â¢â â â â¡¡â ¹â «â¡â¢â £â £â¡»â ªâ¡â¡«â¡â¢â¢â¢â¢â¢â¢â¢â¢â¢â â¡â¢â¢â¢£â ¡â¡â¢â ªâ¢â¢â¢â â¡¨
# â â â¡â¢â â¡â â â â  â â  â  â ¡â¡â¢â â â â¡â¡£â¡â¢â ªâ¡â¢â ªâ¡â¢â ¢â¡â¢â¢â¢£â¢â¢â¢â¢â ªâ¡¢â¢¡â¢â¢â ªâ  â ¡â¢â¢â â ¨
# â â â¡â â â  â â¡â¡â¡â â¢â â¡ªâ ¨â¡â¢â £â¢¡â¢â â ¨â â â â â â â¡â â¢â ¢â¡â¡â¡â¡â¡â¢â ªâ¡¨â ¢â¡â¡â â â â â  â  â¢
# â â¡â â ¨â â¡â â â ¨â¡â â¡¡â¢â â¡¡â¢â ¢â¡â¡¡â¢â ¢â¡â â¡â¡â â â  â â â¢â â¢â ¢â¡£â¢£â¢£â¢â¢â¢â¢ªâ ¨â  â â  â â ¨â â¡â¡
# â  â â¢â ¡â â â â â â¡â â¢â¢â ¡â¡â ¢â¡â¢â â¡â¡ªâ â¢â¢â â ¢â ¡â¡â â â â ¨â â¢â¢â¢â â¢â ¢â¡â â â â â â â ¡â â â ¨
# â â â¢â â â¢â â¡â â â â¢â ¤â¡â â ¡â ¨â¡â¡â â¡â¡¡â ¡â¢â â â¢â ¢â ¡â¡â¢â¢â ¡â¢â¢â¢â ªâ â â â â â¡â¢â ¡â ¨â â â â¡
# â¢â â â¡â â â¢â â â â â¡¸â¡â¡â â ¢â â â â¡â¡â â¡â¡â â â â â â¡â¢â¢â ªâ¡â¡â â â  â¡â â â â â â¡â â â¡â¡â¢
# â â¡â â¡â â  â â¢â  â â¢â¢â ªâ â â â  â¡â¡â¡â¡â¢°â ±â â â¡â¢â â¡â â¢â â¢â¢¸â ¨â ¨â ¨â â â â â â  â â  â â¡â¢â  â 
# â â â â â  â â â â â â¢â¢â¢â â¡â¢â â â â¡â¡â â¡â â¡â â â¡â¡â¢â¢¢â¢±â¢±â¢â ¨â ¨â â â â¢â â â â â¡â â â â  â ¨
# â â â â ¨â â â¢â â¢â  â â¢â ¡â¡â¡â¢â¢â â¡â¡â¡â â â ¢â  â â¡â â¡¢â¡±â¡±â¡±â¡±â â â â¡â â â â â â â â â¢â  â â  â ¨
# â â â â â â â  â â¡â â â¢â¢â â¡â¡¢â¢â â¢â¢â¢â ¡â ¡â ¨â  â¡â¡¢â¡â¢â¢¸â¢¸â ¨â â â â â â â â¢â  â â  â â â â  â â â ¨
# â â â â¡â â â â â  â â¢â ªâ¡¢â¡â¡ªâ¡â¢â¢¡â ¡â¡â¢â ªâ ¨â¢â â¡â¡¢â¢â ¢â¡â¡â â ¨â â¢â â â¡â  â â â â â â¡â â â â â¢
# â â â¡â â¢â â â¢â â¡â¢¢â £â¡±â¡¨â¡¢â¡£â¡£â¡±â¡¡â ªâ¡â â¢â ¢â ¨â¢â ¢â ¡â¡â â â â¡â¡â¡â¢â â  â â â â â â â â â â â â  
# â â â¡â  â â â â â â¢â¢â¢£â¢±â¢¸â¢¸â¢¸â¢¸â¢¨â ªâ¡â¡â¡â â¢â â â¡¨â¢ªâ ¸â â â â â â¢â â¡â  â â â â â â â â  â â â â 
# â â â â â¡â â¢â â¢â ±â¡±â¡±â¡±â¡±â¡±â¡±â¡â¢â¢â â¡¢â ¨â¡â ¢â¡¨â¢â¢â â â â â â â â¡â â â¢â â¢â ¡â â â â â â â â â 
# â â¢â â â â  â â¡â â¡â¢â £â¡£â¡â¡£â¡â¡â¡â¡â¡â¡â¢â â¢â ¢â¡±â¡¡â â â â¢â â â â â â â â â â â â â¡â â â â â â¢
# â â â¡â â¡â â  â â â¡â â ¡â¢â â¡â â¢ªâ ¨â¡â¡â ªâ¡¢â ¡â¡â¢â¢â â â â â â â â â â  â â â â â â â¢â â¡â â â â â¢
# â â¢â â â â â â  â â â â â â¡â â¢â¢â â¢â¢â ªâ¡â¡â¡ªâ ¨â  â â â â¡â â  â â â â â â â â â â â â â â â â â â¢
# â â â â â â â â â â â â â â â â â â â â â â â â â â â â â â â â â â â â â â â â â â â â â â â â â â¢","0.0"
"42d47feb-cba9-4d18-8ccc-2c20605db82d","n, m = map(int, input().split())
print(n * (m // 2))","0.0"
"42d47feb-cba9-4d18-8ccc-2c20605db82d","n, m = map(int, input().split())
if m % 2 == 0:
    print(n * m // 2)
else:
    print(n * (m - 1) // 2)","0.0"
"770952ee-5595-4690-9f1a-a172955624fa","count = int(input())
nums = input()
result = [[]]

for num in nums.split():
    is_added = False
    if is_added:
        continue
    for command_index in range(len(result)):
        if num not in result[command_index]:
            result[command_index].append(num)
            is_added = True
            break
        else:
            if command_index == len(result) - 1:
                result.append([])
                result[len(result) - 1].append(num)

print(len(result))","0.0"
"853bea78-6aa0-4fcf-8c5a-5f278603c518","n=int(input())
k=int(input())
x=int(input())
y=int(input())
if n>=k:
    print((x*k)+(n-k)*y)
else:
    print(n*x)
","0.0"
"02bc07a3-d63a-4896-b585-e74c06bfc7f2","n, x = map(int, input().split())
tbl = list(map(int, input().split()))
need = 0-sum(tbl)
print(abs(need)//x + bool(abs(need)%x))","0.0"
"42d47feb-cba9-4d18-8ccc-2c20605db82d","h, w = map(int, input().split())
print(w//2*h)","0.0"
"aeb122ea-bb7f-44ee-93c8-65ead3d4f5f3","v = input()
for i in range(len(v)):
    if v[i]==' ':
        x = i
        break
a = int(v[ :x])
v = int(v[x+1: ])
v = 240-v
n = 0
while v>0 and a>n:
    n+=1
    v-=n*5
    if v<0:
        n-=1
print(n)","0.0"
"42d47feb-cba9-4d18-8ccc-2c20605db82d","n, m = map(int, input().split())
print(m // 2 * n)","0.0"
"5eebb219-dec9-41ce-83c6-efc4a4670acc","n=input()
if n=='q':
    print('w')
if n=='w':
    print('e')
if n=='e':
    print('r')
if n=='r':
    print('t')
if n=='t':
    print('y')
if n=='y':
    print('u')
if n=='u':
    print('i')
if n=='i':
    print('o')
if n=='o':
    print('p')
if n=='p':
    print('a')
if n=='a':
    print('s')
if n=='s':
    print('d')
if n=='d':
    print('f')
if n=='f':
    print('g')
if n=='g':
    print('h')
if n=='h':
    print('j')
if n=='j':
    print('k')
if n=='k':
    print('l')
if n=='l':
    print('z')
if n=='z':
    print('x')
if n=='x':
    print('c')
if n=='c':
    print('v')
if n=='v':
    print('b')
if n=='b':
    print('n')
if n=='n':
    print('m')
if n=='m':
    print('q')","0.0"
"bb650c26-e5ff-4faf-9447-76e7e6965b4d","def m(): return map(int, input().split())
def spisok ():
    a = input().split()
    for i in range (len(a)):
        a[i] = int(a[i])
    return a

n, k = m()
a = spisok()
for i in range (n):
    if k == 0:
        break
    if a[i] < 0:
        a[i] *= -1
        k -= 1
    else:
        break
b = min(a)
print (sum(a) if k % 2 == 0 else sum(a) - b * 2)","0.0"
"5895fc4e-b515-464a-a0e2-697d86bf8783","a = input().split()
l = int(a[0])
b = []
for i in range(1,l+1):
    b.append(a[i])
m = max(b)
n = min(b)
for i in range(l):
    if b[i]==m:
        b[i]=n
print(*b)","0.0"
"af37658e-d46e-45db-9ee2-ea44a450db89","import math
k,n,s,p = map(int, input( ). split( ))
if 1<=k<=10000 and 1<=n<=10000 and 1<=s<=10000 and 1<=p<=10000:
    # ÑÐ¸ÑÐ»Ð¾ Ð»Ð¸ÑÑÐ¾Ð² Ð½Ð° 1 Ð¼Ð°Ð»ÑÑÐ°
    a=math.ceil(n/s)
    b=a*k
    c=(math.ceil(b/p))
    resultplus= int(math.ceil(c))
    print(c)
else:
    print('no')
","0.0"
"853bea78-6aa0-4fcf-8c5a-5f278603c518","n=input()
k=input()
x=input()
y=input()
q=int(n)-int(k)
p=int(k)*int(x)
r=int(y)*q
if q<=0:
    print(int(n)*int(x))
else:
    print(p+r)
","0.0"
"af37658e-d46e-45db-9ee2-ea44a450db89","import math
k, n, s, p = map(int, input().split())

a = math.ceil(n / s)

b = a * k

print(math.ceil(b / p))","0.0"
"7d8fcbed-1f16-4d19-8a17-6560267bc64c","n,m,k=map(int,input().split())
if n<=k:
    print(""NO"")
else:
    v=0
    while n<m:
        m=m-n+k
        v=v+1
print(v+1)
    
    
","0.0"
"02bc07a3-d63a-4896-b585-e74c06bfc7f2","a,b = map(int, input().split())
s = sum(list(map(int, input().split())))
s = abs(s)
s += (b-(s%b))%b
print(s//b)","0.0"
"17c6577a-b831-485d-ba22-fb47923019b4","n = int(input())
s = """"
x = n*2
for max_n in range(n+1):
    nums = ' '.join([str(i) for i in range(max_n+1)] + [str(i) for i in range(max_n-1, -1, -1)])
    s += "" ""*x + nums + ""
""
    x -= 2
x = 2
for max_n in range(n-1, -1, -1):
    nums = ' '.join([str(i) for i in range(max_n+1)] + [str(i) for i in range(max_n-1, -1, -1)])
    s += "" ""*x + nums + ""
""
    x += 2
print(s[:-1])","0.0"
"5eebb219-dec9-41ce-83c6-efc4a4670acc","a = input()
if a == 'q':
    print('w')
elif a == 'w':
    print('e')
elif a == 'e':
    print('r')
elif a == 'r':
    print('t')
elif a == 't':
    print('u')
elif a == 'u':
    print('o')
elif a == 'o':
    print('p')
elif a == 'p':
    print('a')
elif a == 'a':
    print('s')
elif a == 's':
    print('d')
elif a == 'd':
    print('f')
elif a == 'f':
    print('g')
elif a == 'g':
    print('h')
elif a == 'h':
    print('j')
elif a == 'j':
    print('k')
elif a == 'k':
    print('l')
elif a == 'l':
    print('z')
elif a == 'z':
    print('x')
elif a == 'x':
    print('c')
elif a == 'c':
    print('v')
elif a == 'v':
    print('b')
elif a == 'b':
    print('n')
elif a == 'n':
    print('m')
elif a == 'm':
    print('q')","0.0"
"5895fc4e-b515-464a-a0e2-697d86bf8783","n, *grades = map(int, input().split())
max_grade = max(grades)
min_grade = min(grades)
for grade in grades:
    if grade == max_grade:
        print(min_grade, end=' ')
    else:
        print(grade, end=' ')","0.0"
"aeb122ea-bb7f-44ee-93c8-65ead3d4f5f3","n, k =map(int,input().split())
summa=0
c=0
k1=240-k
for i in range(1,n+1):
    summa+=i*5
    c+=1
    if summa>k1:
        c-=1
        break
if c>n:
    print(n)
else:
    print(c)
","0.0"
"6824fb27-2339-421d-85db-60758b59cddc","n = int(input())
k = 0
while n != 1:
    if n % 10 in [1, 3, 6, 7, 9]:
        n -= 1
    elif n % 5 == 0:
        n //= 5
    elif n % 2 == 0:
        n //= 2
    else:
        n -= 1
    k += 1
print(k)
","0.0"
"5eebb219-dec9-41ce-83c6-efc4a4670acc","a = input()
p = ['q', 'w', 'e', 'r', 't', 'y', 'u', 'i', 'o', 'p', 'a', 's', 'd', 'f', 'g', 'h', 'j', 'k', 'l', 'z', 'x', 'c', 'v', 'b', 'n', 'm']
i = p.index(a)
if i == 25:
    print('q')
else:
    print(p[i + 1])","0.0"
"02bc07a3-d63a-4896-b585-e74c06bfc7f2","nk = list(map(int, input().split()))
n = nk[0]
x = nk[1]
nk = list(map(int, input().split()))
m = 0
for i in nk:
    m += i
if m > 0:
    m *= -1
e = 0
while m != 0 or m >= 0-x:
    m += x
    e += 1
    if m >= 0:
        print(e)
        exit()
if m < 0:
    print(e + 1)
else:
    print(e)","0.0"
"a40047cc-77a1-4a37-9e28-a61947b07df8","
n = int(input())
m = list(map(int, input().split()))
f = list(map(int, input().split()))
temp = []
put1 = 0
put2 = 0


for i in range(n):
    temp.append([min(m), min(f)])
    m.pop(m.index(min(m)))
    f.pop(f.index(min(f)))


ot = 0   
for i in temp:
    ot += abs(i[0] - i[1])

print(ot)
        ","0.0"
"5eebb219-dec9-41ce-83c6-efc4a4670acc","strr = 'qwertyuiopasdfghjklzxcvbnm'

x = input()
print(strr[strr.find(x) + 1])
","0.0"
"a4accdf7-f726-49d2-b19a-aeb590224402","def count_lucky_numbers(length):
    dp = [[0] * 10 for _ in range(length + 1)]

    for i in range(10):
        dp[1][i] = 1

    for l in range(2, length + 1):
        for d in range(10):
            for x in range(d + 1):
                dp[l][d] += dp[l - 1][x]

    count = sum(dp[length])
    return count


length = int(input())
result = count_lucky_numbers(length)
print(result)
","0.0"
"e16baab9-5d32-479d-877e-04518a247380","n, k = map(int,input().split())
a = list(map(int, input().split()))
i = 0
j = 1
s = a[1] - a[0]
c = 0
go  = True
while go:
    if s > k:
        c += n-j
        i += 1
        s -= a[i] - a[i-1]
    elif s <= k:
        if j == n - 1:
            go = False
        else:
            j +=1
            s += a[j] - a[j-1]
            
print(c)","0.0"
"5eebb219-dec9-41ce-83c6-efc4a4670acc","strr = 'qwertyuiopasdfghjklzxcvbnm'

x = input()
print(strr[(strr.find(x) + 1) % 26])
","0.0"
"027966cc-bba6-4e6a-83bf-ea3f730fb59d","n = int(input())
s = input()
# n = 6
# s = 'AAAAAA'
ls = list()
for i in range(1,n):
	try:
		ls.append(f'{s[i-1]}{s[i]}')
		ls.append(f'{s[i]}{s[i+1]}')
	except IndexError:
		pass
ls = set(ls)
print(len(ls))","0.0"
"8381a3f6-aaba-448f-b65f-50117785adf7","q,w,e=map(int,input().split())
r=(q//e)*(w//e)
if q%e!=0:
    r=r+w//e
if w%e!=0:
    r=r+q//e
if q%e!=0 and w%e!=0:
    r=r+1
print(r)","0.0"
"39674b7f-1b5d-40b8-aa5c-02f2ac4a2a4b","n = int(input())
s = bin(n)[2:]
a = []
b = []
c = []
d = []
e = []
for i in range(len(s)):
    if s[i] == '0':
        a.append('####')
    else:
        a.append('   #')
for i in range(len(s)):
    if s[i] == '0':
        b.append('#  #')
    else:
        b.append(' # #')
for i in range(len(s)):
    if s[i] == '0':
        c.append('#  #')
    else:
        c.append('#  #')
for i in range(len(s)):
    if s[i] == '0':
        d.append('#  #')
    else:
        d.append('   #')
for i in range(len(s)):
    if s[i] == '0':
        e.append('####')
    else:
        e.append('   #')
print(*a)
print(*b)
print(*c)
print(*d)
print(*e)","0.0"
"aeb122ea-bb7f-44ee-93c8-65ead3d4f5f3","a,b=input().split()
a,b=int(a),int(b)
b=240-b
c=0
s=0
for i in range(1,a+1):
    
    c+=i*5
    if c>b:
        break
    s+=1
print(s)
","0.0"
"7aef5f21-3d8a-4711-9507-28bcb1b28522","n = int(input())
l = n**0.5
if l == int(l):
    print(sum(range(1, int(l)+1))*4)
else:
    l = int(l)
    res = sum(range(1, l+1))*4+3+(n-l**2-1)*2
    print(res+(n-l**2-1 >= l))

    
","0.0"
"17c6577a-b831-485d-ba22-fb47923019b4","n = int(input())
if n == 2:
    print(' ' * n * 2 + '0')
    print(' ' * n + '0 1 0')
    print('0 1 2 1 0')
    print(' ' * n + '0 1 0')
    print(' ' * n * 2 + '0')

if n == 3:
    print(' ' * n * 2 + '0')
    print(' ' * 4 + '0 1 0')
    print(' ' * 2 + '0 1 2 1 0')
    print('0 1 2 3 2 1 0')
    print(' ' * 2 + '0 1 2 1 0')
    print(' ' * 4 + '0 1 0')
    print(' ' * n * 2 + '0')

if n == 4:
    print(' ' * n * 2 + '0')
    print(' ' * (n - 1) * 2 + '0 1 0')
    print(' ' * (n - 2) * 2 + '0 1 2 1 0')
    print(' ' * (n - 3) * 2 + '0 1 2 3 2 1 0')
    print('0 1 2 3 4 3 2 1 0')
    print(' ' * (n - 3) * 2 + '0 1 2 3 2 1 0')
    print(' ' * (n - 2) * 2 + '0 1 2 1 0')
    print(' ' * (n - 1) * 2 + '0 1 0')
    print(' ' * n * 2 + '0')
","0.0"
"853bea78-6aa0-4fcf-8c5a-5f278603c518","N = int(input())
K = int(input())
X = int(input())
Y = int(input())

if N <= K:
    b = N * X
else:
    b = K * X + (N - K) * Y

print(b)","0.0"
"853bea78-6aa0-4fcf-8c5a-5f278603c518","q=int(input())
w=int(input())
e=int(input())
r=int(input())
if q>=w:
    print((w*e)+((q-w)*r))
else:
    print(q*e)","0.0"
"853bea78-6aa0-4fcf-8c5a-5f278603c518","def calculate_hotel_payment(N, K, X, Y):
    if N <= K:  
        return N * X
    else:
         return K * X + (N - K) * Y
N = int(input())
K = int(input())
X = int(input())
Y = int(input())
result = calculate_hotel_payment(N, K, X, Y)
print(result)
","0.0"
"8381a3f6-aaba-448f-b65f-50117785adf7","import math
userInput = input()
n,m, a = userInput.split("" "")
n, m, a = int(n), int(m), int(a)
nCount = math.ceil(n/a)
mCount = math.ceil(m/a)
maxCount = nCount*mCount
print(maxCount)","0.0"
"7d8fcbed-1f16-4d19-8a17-6560267bc64c","n,m,k=map(int,input().split())
if n<=k:
    print(""NO"")
else:
    v=0
    while n<m:
        m=m-n+k
        v=v+1
print(v+1)
    
    
","0.0"
"853bea78-6aa0-4fcf-8c5a-5f278603c518","q=int(input())
w=int(input())
e=int(input())
r=int(input())
if q>w:
    print((w*e)+((q-w)*r))
else:
    print(q*e)

","0.0"
"853bea78-6aa0-4fcf-8c5a-5f278603c518","n=input()
k=input()
x=input()
y=input()
q=int(n)-int(k)
p=int(k)*int(x)
r=int(y)*q
if q<=0:
     print(int(n)*int(x))
else:
     print(p+r)","0.0"
"02bc07a3-d63a-4896-b585-e74c06bfc7f2","a,b=[int(i) for i in input().split()]
A=[int(i) for i in input().split()]
if sum(A)==0:
    print(0)
if abs(sum(A))<=b:
    print(1)
else:
    nado=(-1*(sum(A)))
    print(nado//b+1)","0.0"
"7d8fcbed-1f16-4d19-8a17-6560267bc64c","n,m,k=map(int,input().split())
if n<k:
    print(""NO"")
else:
    s=0
    while n<m:
        m=m-n+k
        s=s+1
print(s+1)
    
    
","0.0"
"aeb122ea-bb7f-44ee-93c8-65ead3d4f5f3","a = input()
b = a.split(' ')
a1 = b[0]
b1 = b[1]
a = int(a1)
b = int(b1)
time = 240-b
n = 0 
time_ready = False
for i in range(a):
	x = 5*(i+1)
	time -= x
	n += 1
	if time <= x or time <= 0:
	    print(n)
	    time_ready= True
	    break
if time_ready == False:
    print(n)","0.0"
"e02095cd-3f62-4005-a067-a9da53d342bb","intervals = int(input())
one = list(map(int, input().split()))
two = list(map(int, input().split()))

result = 0
one_alr = 0
two_alr = 0

for i in range(intervals):
    one_alr += one[i]
    two_alr += two[i]
    if one_alr == two_alr and one[i] == two[i]:
        result += one[i]
        
print(result)","0.0"
"e16baab9-5d32-479d-877e-04518a247380","n, r=map(int, input().split())
d=list(map(int, input().split()))
ans=0
i=0
j=1
while j<n and j<n-1:
    if d[j]-d[i]<=r:
        j+=1
    else:
        i+=1
        ans+=n-j
print(ans)","0.0"
"d949e12a-1807-4b82-a4ab-c1a178a79888","k = int(input())
l = 0
a = 18
while l<k:
    a += 1
    s = 0
    for i in range(len(str(a))):
        s += int(str(a)[i])
    if s==10:
        l+=1
print(a)","0.0"
"42d47feb-cba9-4d18-8ccc-2c20605db82d","
n,m=map(int,input().split())
if m%2!=0:
    m=m-1
print(n*m//2)","0.0"
"a4accdf7-f726-49d2-b19a-aeb590224402","n = int(input())
a = []
for i in range(n+1):
    a.append([0]*10)
for i in range(10):
    a[1][i] = 1
for i in range(2, n+1):
    for j in range(10):
        for k in range(j+1):
            a[i][j]+=a[i-1][k]
print(sum(a[-1]))","0.0"
"5eebb219-dec9-41ce-83c6-efc4a4670acc","q='qwertyuiopasdfghjklzxcvbnmq'
w=input()
e=q.find(w)
print(q[e+1])","0.0"
"17c6577a-b831-485d-ba22-fb47923019b4","n=int(input())
for i in range(0, n+1):
    print((2*n-i*2)*' '+' '.join([str(j) for j in range(0, i+1)])+' '+' '.join([str(j) for j in range(i-1, -1, -1)])+(n-i*2)*' ')
for i in range(n-1, -1, -1):
    print((2*n-i*2)*' '+' '.join([str(j) for j in range(0, i+1)])+' '+' '.join([str(j) for j in range(i-1, -1, -1)])+(n-i*2)*' ')","0.0"
"c2081cad-a682-43e2-8960-081ef8963a37","r,b = list(map(int, input().split(' ')))
print(min([r, b]), abs(r-b)//2)","0.0"
"11d7d14b-eb4a-4dd7-94c1-67a03264c424","n = int(input())
v = input()
p = []
p1 = []
while n>0:
    for i in range(len(v)):
        if v[i]==' ':
            x = i
            break
    a = int(v[ :x])
    v = v[x+1: ]
    p.append(a)
    if a%2==1:
        p1.append(a)
    n-=1
p.sort()
p1.sort()
x = sum(p)
if x%2==1:
    x-=p1[0]
print(x)","0.0"
"027966cc-bba6-4e6a-83bf-ea3f730fb59d","input()
a = input()
g = []
for h in range(len(a)):
    
    if h < len(a)-1 and (a[h] + a[h+1]) not in g:
        g.append(a[h] + a[h+1])
print(len(g))","0.0"
"853bea78-6aa0-4fcf-8c5a-5f278603c518","N = int(input())
K = int(input())
X = int(input())
Y = int(input())

if N <= K:
    b = N * X
else:
    b = K * X + (N - K) * Y

print(b)
","0.0"
"aeb122ea-bb7f-44ee-93c8-65ead3d4f5f3","def Ð¼Ð°ÐºÑ_ÐºÐ¾Ð»_ÑÐ°ÑÐ½Ð´Ð¾Ð²(n, k):
    Ð´Ð¾ÑÑÑÐ¿Ð½Ð¾Ðµ_Ð²ÑÐµÐ¼Ñ = 240 - k
    Ð¼Ð°ÐºÑ_ÐºÐ¾Ð»_ÑÐ°ÑÐ½Ð´Ð¾Ð² = 0
    for i in range(1, n + 1):
        Ð²ÑÐµÐ¼ÐµÐ½Ð¸_Ð½Ð°_ÑÐ°ÑÐ½Ð´ = 5 * i
        if Ð´Ð¾ÑÑÑÐ¿Ð½Ð¾Ðµ_Ð²ÑÐµÐ¼Ñ >= Ð²ÑÐµÐ¼ÐµÐ½Ð¸_Ð½Ð°_ÑÐ°ÑÐ½Ð´:
            Ð´Ð¾ÑÑÑÐ¿Ð½Ð¾Ðµ_Ð²ÑÐµÐ¼Ñ -= Ð²ÑÐµÐ¼ÐµÐ½Ð¸_Ð½Ð°_ÑÐ°ÑÐ½Ð´
            Ð¼Ð°ÐºÑ_ÐºÐ¾Ð»_ÑÐ°ÑÐ½Ð´Ð¾Ð² += 1
        else:
            break
    return Ð¼Ð°ÐºÑ_ÐºÐ¾Ð»_ÑÐ°ÑÐ½Ð´Ð¾Ð²
n, k = map(int, input().split())
print(Ð¼Ð°ÐºÑ_ÐºÐ¾Ð»_ÑÐ°ÑÐ½Ð´Ð¾Ð²(n, k))","0.0"
"7d8fcbed-1f16-4d19-8a17-6560267bc64c","n, m, k = map(int, input().split())

if n <= k:  
    print(""NO"")
else:
    l = 0
    while m > 0:
        m -= n
        l += 1
        if m <= 0:
            break  
        m += k

    print(l)
","0.0"
"17c6577a-b831-485d-ba22-fb47923019b4","n = int(input())
if n == 2:
    print(' ' * n * 2 + '0')
    print(' ' * n + '0 1 0')
    print('0 1 2 1 0')
    print(' ' * n + '0 1 0')
    print(' ' * n * 2 + '0')

if n == 3:
    print(' ' * n * 2 + '0')
    print(' ' * 4 + '0 1 0')
    print(' ' * 2 + '0 1 2 1 0')
    print('0 1 2 3 2 1 0')
    print(' ' * 2 + '0 1 2 1 0')
    print(' ' * 4 + '0 1 0')
    print(' ' * n * 2 + '0')

if n == 4:
    print(' ' * n * 2 + '0')
    print(' ' * (n - 1) * 2 + '0 1 0')
    print(' ' * (n - 2) * 2 + '0 1 2 1 0')
    print(' ' * (n - 3) * 2 + '0 1 2 3 2 1 0')
    print('0 1 2 3 4 3 2 1 0')
    print(' ' * (n - 3) * 2 + '0 1 2 3 2 1 0')
    print(' ' * (n - 2) * 2 + '0 1 2 1 0')
    print(' ' * (n - 1) * 2 + '0 1 0')
    print(' ' * n * 2 + '0')

if n == 5:
    print(' ' * n * 2 + '0')
    print(' ' * (n - 1) * 2 + '0 1 0')
    print(' ' * (n - 2) * 2 + '0 1 2 1 0')
    print(' ' * (n - 3) * 2 + '0 1 2 3 2 1 0')
    print(' ' * (n - 4) * 2 + '0 1 2 3 4 3 2 1 0')
    print('0 1 2 3 4 5 4 3 2 1 0')
    print(' ' * (n - 4) * 2 + '0 1 2 3 4 3 2 1 0')
    print(' ' * (n - 3) * 2 + '0 1 2 3 2 1 0')
    print(' ' * (n - 2) * 2 + '0 1 2 1 0')
    print(' ' * (n - 1) * 2 + '0 1 0')
    print(' ' * n * 2 + '0')

if n == 6:
    print(' ' * n * 2 + '0')
    print(' ' * (n - 1) * 2 + '0 1 0')
    print(' ' * (n - 2) * 2 + '0 1 2 1 0')
    print(' ' * (n - 3) * 2 + '0 1 2 3 2 1 0')
    print(' ' * (n - 4) * 2 + '0 1 2 3 4 3 2 1 0')
    print(' ' * (n - 5) * 2 + '0 1 2 3 4 5 4 3 2 1 0')
    print('0 1 2 3 4 5 6 5 4 3 2 1 0')
    print(' ' * (n - 5) * 2 + '0 1 2 3 4 5 4 3 2 1 0')
    print(' ' * (n - 4) * 2 + '0 1 2 3 4 3 2 1 0')
    print(' ' * (n - 3) * 2 + '0 1 2 3 2 1 0')
    print(' ' * (n - 2) * 2 + '0 1 2 1 0')
    print(' ' * (n - 1) * 2 + '0 1 0')
    print(' ' * n * 2 + '0')

if n == 7:
    print(' ' * n * 2 + '0')
    print(' ' * (n - 1) * 2 + '0 1 0')
    print(' ' * (n - 2) * 2 + '0 1 2 1 0')
    print(' ' * (n - 3) * 2 + '0 1 2 3 2 1 0')
    print(' ' * (n - 4) * 2 + '0 1 2 3 4 3 2 1 0')
    print(' ' * (n - 5) * 2 + '0 1 2 3 4 5 4 3 2 1 0')
    print(' ' * (n - 6) * 2 + '0 1 2 3 4 5 6 5 4 3 2 1 0')
    print('0 1 2 3 4 5 6 7 6 5 4 3 2 1 0')
    print(' ' * (n - 6) * 2 + '0 1 2 3 4 5 6 5 4 3 2 1 0')
    print(' ' * (n - 5) * 2 + '0 1 2 3 4 5 4 3 2 1 0')
    print(' ' * (n - 4) * 2 + '0 1 2 3 4 3 2 1 0')
    print(' ' * (n - 3) * 2 + '0 1 2 3 2 1 0')
    print(' ' * (n - 2) * 2 + '0 1 2 1 0')
    print(' ' * (n - 1) * 2 + '0 1 0')
    print(' ' * n * 2 + '0')
","0.0"
"5eebb219-dec9-41ce-83c6-efc4a4670acc","a=input()
q=['q', 'w', 'e', 'r', 't', 'y', 'u', 'i', 'o', 'p', 'a', 's', 'd', 'f', 'g', 'h', 'j', 'k', 'l', 'z', 'x', 'c', 'v', 'b', 'n', 'm']
if a=='m':
    print('q')
else:
    print(q[q.index(a)+1])","0.0"
"42d47feb-cba9-4d18-8ccc-2c20605db82d","n, m = map(int, input().split())
print(m//2 * n)","0.0"
"42d47feb-cba9-4d18-8ccc-2c20605db82d","n, m = [int(i) for i in input().split()]
if m % 2 == 0:
    print(n * (m // 2))
else:
    print(n * (1 + ((m - 3) // 2)))","0.0"
"853bea78-6aa0-4fcf-8c5a-5f278603c518","n=int(input())
k=int(input())
x=int(input())
y=int(input())
s=x*k+((n-k)*y)
print(s)","0.0"
"42d47feb-cba9-4d18-8ccc-2c20605db82d","n, m = map(int, input().split())

a = m // 2

print(a * n)","0.0"
"027966cc-bba6-4e6a-83bf-ea3f730fb59d","n = int(input())
s = input()
x = []
for i in range(len(s) - 1):
    x.append(s[i] + s[i + 1])
st = set(x)
print(len(st))","0.0"
"d949e12a-1807-4b82-a4ab-c1a178a79888","k = int(input())
count = 0
n = 18
while count < k:
    n += 1
    if sum(list(map(int, list(str(n))))) == 10:
        count += 1
print(n)","0.0"
"42d47feb-cba9-4d18-8ccc-2c20605db82d","n, m = map(int, input().split())
print(n*(m//2))","0.0"
"17c6577a-b831-485d-ba22-fb47923019b4","n = int(input())
if n == 2:
    print(' ' * n * 2 + '0')
    print(' ' * n + '0 1 0')
    print('0 1 2 1 0')
    print(' ' * n + '0 1 0')
    print(' ' * n * 2 + '0')

if n == 3:
    print(' ' * n * 2 + '0')
    print(' ' * 4 + '0 1 0')
    print(' ' * 2 + '0 1 2 1 0')
    print('0 1 2 3 2 1 0')
    print(' ' * 2 + '0 1 2 1 0')
    print(' ' * 4 + '0 1 0')
    print(' ' * n * 2 + '0')

if n == 4:
    print(' ' * n * 2 + '0')
    print(' ' * (n - 1) * 2 + '0 1 0')
    print(' ' * (n - 2) * 2 + '0 1 2 1 0')
    print(' ' * (n - 3) * 2 + '0 1 2 3 2 1 0')
    print('0 1 2 3 4 3 2 1 0')
    print(' ' * (n - 3) * 2 + '0 1 2 3 2 1 0')
    print(' ' * (n - 2) * 2 + '0 1 2 1 0')
    print(' ' * (n - 1) * 2 + '0 1 0')
    print(' ' * n * 2 + '0')

if n == 5:
    print(' ' * n * 2 + '0')
    print(' ' * (n - 1) * 2 + '0 1 0')
    print(' ' * (n - 2) * 2 + '0 1 2 1 0')
    print(' ' * (n - 3) * 2 + '0 1 2 3 2 1 0')
    print(' ' * (n - 4) * 2 + '0 1 2 3 4 3 2 1 0')
    print('0 1 2 3 4 5 4 3 2 1 0')
    print(' ' * (n - 4) * 2 + '0 1 2 3 4 3 2 1 0')
    print(' ' * (n - 3) * 2 + '0 1 2 3 2 1 0')
    print(' ' * (n - 2) * 2 + '0 1 2 1 0')
    print(' ' * (n - 1) * 2 + '0 1 0')
    print(' ' * n * 2 + '0')

if n == 6:
    print(' ' * n * 2 + '0')
    print(' ' * (n - 1) * 2 + '0 1 0')
    print(' ' * (n - 2) * 2 + '0 1 2 1 0')
    print(' ' * (n - 3) * 2 + '0 1 2 3 2 1 0')
    print(' ' * (n - 4) * 2 + '0 1 2 3 4 3 2 1 0')
    print(' ' * (n - 5) * 2 + '0 1 2 3 4 5 4 3 2 1 0')
    print('0 1 2 3 4 5 6 5 4 3 2 1 0')
    print(' ' * (n - 5) * 2 + '0 1 2 3 4 5 4 3 2 1 0')
    print(' ' * (n - 4) * 2 + '0 1 2 3 4 3 2 1 0')
    print(' ' * (n - 3) * 2 + '0 1 2 3 2 1 0')
    print(' ' * (n - 2) * 2 + '0 1 2 1 0')
    print(' ' * (n - 1) * 2 + '0 1 0')
    print(' ' * n * 2 + '0')

if n == 7:
    print(' ' * n * 2 + '0')
    print(' ' * (n - 1) * 2 + '0 1 0')
    print(' ' * (n - 2) * 2 + '0 1 2 1 0')
    print(' ' * (n - 3) * 2 + '0 1 2 3 2 1 0')
    print(' ' * (n - 4) * 2 + '0 1 2 3 4 3 2 1 0')
    print(' ' * (n - 5) * 2 + '0 1 2 3 4 5 4 3 2 1 0')
    print(' ' * (n - 6) * 2 + '0 1 2 3 4 5 6 5 4 3 2 1 0')
    print('0 1 2 3 4 5 6 7 6 5 4 3 2 1 0')
    print(' ' * (n - 6) * 2 + '0 1 2 3 4 5 6 5 4 3 2 1 0')
    print(' ' * (n - 5) * 2 + '0 1 2 3 4 5 4 3 2 1 0')
    print(' ' * (n - 4) * 2 + '0 1 2 3 4 3 2 1 0')
    print(' ' * (n - 3) * 2 + '0 1 2 3 2 1 0')
    print(' ' * (n - 2) * 2 + '0 1 2 1 0')
    print(' ' * (n - 1) * 2 + '0 1 0')
    print(' ' * n * 2 + '0')

if n == 8:
    print(' ' * n * 2 + '0')
    print(' ' * (n - 1) * 2 + '0 1 0')
    print(' ' * (n - 2) * 2 + '0 1 2 1 0')
    print(' ' * (n - 3) * 2 + '0 1 2 3 2 1 0')
    print(' ' * (n - 4) * 2 + '0 1 2 3 4 3 2 1 0')
    print(' ' * (n - 5) * 2 + '0 1 2 3 4 5 4 3 2 1 0')
    print(' ' * (n - 6) * 2 + '0 1 2 3 4 5 6 5 4 3 2 1 0')
    print(' ' * (n - 7) * 2 + '0 1 2 3 4 5 6 7 6 5 4 3 2 1 0')
    print('0 1 2 3 4 5 6 7 8 7 6 5 4 3 2 1 0')
    print(' ' * (n - 7) * 2 + '0 1 2 3 4 5 6 7 6 5 4 3 2 1 0')
    print(' ' * (n - 6) * 2 + '0 1 2 3 4 5 6 5 4 3 2 1 0')
    print(' ' * (n - 5) * 2 + '0 1 2 3 4 5 4 3 2 1 0')
    print(' ' * (n - 4) * 2 + '0 1 2 3 4 3 2 1 0')
    print(' ' * (n - 3) * 2 + '0 1 2 3 2 1 0')
    print(' ' * (n - 2) * 2 + '0 1 2 1 0')
    print(' ' * (n - 1) * 2 + '0 1 0')
    print(' ' * n * 2 + '0')

if n == 9:
    print(' ' * n * 2 + '0')
    print(' ' * (n - 1) * 2 + '0 1 0')
    print(' ' * (n - 2) * 2 + '0 1 2 1 0')
    print(' ' * (n - 3) * 2 + '0 1 2 3 2 1 0')
    print(' ' * (n - 4) * 2 + '0 1 2 3 4 3 2 1 0')
    print(' ' * (n - 5) * 2 + '0 1 2 3 4 5 4 3 2 1 0')
    print(' ' * (n - 6) * 2 + '0 1 2 3 4 5 6 5 4 3 2 1 0')
    print(' ' * (n - 7) * 2 + '0 1 2 3 4 5 6 7 6 5 4 3 2 1 0')
    print(' ' * (n - 8) * 2 + '0 1 2 3 4 5 6 7 8 7 6 5 4 3 2 1 0')
    print('0 1 2 3 4 5 6 7 8 9 8 7 6 5 4 3 2 1 0')
    print(' ' * (n - 8) * 2 + '0 1 2 3 4 5 6 7 8 7 6 5 4 3 2 1 0')
    print(' ' * (n - 7) * 2 + '0 1 2 3 4 5 6 7 6 5 4 3 2 1 0')
    print(' ' * (n - 6) * 2 + '0 1 2 3 4 5 6 5 4 3 2 1 0')
    print(' ' * (n - 5) * 2 + '0 1 2 3 4 5 4 3 2 1 0')
    print(' ' * (n - 4) * 2 + '0 1 2 3 4 3 2 1 0')
    print(' ' * (n - 3) * 2 + '0 1 2 3 2 1 0')
    print(' ' * (n - 2) * 2 + '0 1 2 1 0')
    print(' ' * (n - 1) * 2 + '0 1 0')
    print(' ' * n * 2 + '0')
","0.0"
"e02095cd-3f62-4005-a067-a9da53d342bb","n = int(input())
a = list(map(int, input().split()))
b = list(map(int, input().split()))
s1, s2, ans = 0, 0, 0
for i, j in zip(a, b):
    if i == j and s1 == s2:
        ans += i
    s1 += i
    s2 += j
print(ans)
","0.0"
"6824fb27-2339-421d-85db-60758b59cddc","n = int(input())
k = 0
while n != 1:
    if n % 10 in [1, 3, 5, 7, 9]:
        n -= 1
    elif n % 5 == 0:
        n //= 5
    elif n % 2 == 0:
        n //= 2
    else:
        n -= 1
    k += 1
print(k)","0.0"
"8381a3f6-aaba-448f-b65f-50117785adf7","a = input().split()
n = int(a[0])
m = int(a[1])
a = int(a[2])
x = 0
m1 = m//a
n1 = n//a
x += m1*n1
if m%a != 0:
    x += n1
if n%a != 0:
    x += m1
if m%a != 0 and n%a != 0:
    x += 1
print(x)
","0.0"
"17c6577a-b831-485d-ba22-fb47923019b4","n = int(input())
p = ' '
k = n - 1
st = []
s1 = n*2*p + '0' + n*2*p
c = 0
s2 = ''
print(s1)
for x in range(2*n+1):
    for x in range(n-k+1):
        st.append(str(x))
    if k > 0 and c == 0:
        k -= 1
    else:
        k += 1
        c += 1
    if len(st) != 1:
        st2 = list(reversed(st))[1:]
        for i in st:
            s2 += str(i) + ' '
        for i in st2:
            s2 += str(i) + ' '
        s2 = (2*(2*n+1)-len(s2))//2 * p + s2 + (2*(2*n+1)-len(s2))//2 * p
        print(s2)
        st = []
        s2 = ''
    else:
        print(s1)
        st = []
        s2 = ''
","0.0"
"d949e12a-1807-4b82-a4ab-c1a178a79888","k = int(input())
l = 0
a = 18
if k>=100:
    l = 99
    a = 1422
while l<k:
    a += 1
    s = 0
    for i in range(len(str(a))):
        s += int(str(a)[i])
    if s==10:
        l+=1
print(a)","0.0"
"d949e12a-1807-4b82-a4ab-c1a178a79888","k = int(input())
n = 10
for i in range(k):
    n += 9
    while sum(list(map(int, list(str(n))))) != 10:
        n += 1
print(n)","0.0"
"e16baab9-5d32-479d-877e-04518a247380","n, m = map(int, input().split())
a = list(map(int, input().split()))
l = r = 0
res = 0
for i in range(len(a)):
    while r < n and a[r] - a[l] <= m:
        r += 1
    res += n - r
    l += 1
print(res)","0.0"
"c2081cad-a682-43e2-8960-081ef8963a37","a, b = map(int, input().split())
mn = min(a, b)
print(mn, (a+b-mn*2)//2)
","0.0"
"853bea78-6aa0-4fcf-8c5a-5f278603c518","n=int(input())
k=int(input())
x=int(input())
y=int(input())
s=x*k+((n-k)*y)
print(s)","0.0"
"5895fc4e-b515-464a-a0e2-697d86bf8783","nk = list(map(int, input().split()))
n = nk[0]
nk = nk[1:]
maxi = max(nk)
mini = min(nk)
for i in range(len(nk)):
    if nk[i] == maxi:
        nk[i] = mini
print( *nk)","0.0"
"11d7d14b-eb4a-4dd7-94c1-67a03264c424","n=int(input())
a=[int(s) for s in input().split()]
c=10000000000
if sum(a)%2==0:
    print(sum(a))
else:
    for i in range(len(a)):
        if a[i]<c and a[i]%2!=0:
            c=a[i]
    print(sum(a)-c)","0.0"
"e16baab9-5d32-479d-877e-04518a247380","n, r = map(int, input().split())
a = list(map(int, input().split()))
i = 0
j = 1
s1 = a[1] - a[0]
c1 = 0
f = True
while (f):
    if (s1 > r):
        c1 += n - j
        i += 1
        s1 -= a[i] - a[i - 1]
    elif (s1 <= r):
        if (j == n - 1):
            f = False
        else:
            j += 1
            s1 += a[j] - a[j - 1]
print(c1)","0.0"
"02bc07a3-d63a-4896-b585-e74c06bfc7f2","n, x = map(int, input().split())
l = list(map(int, input().split()))
s = sum(l)
count = 0
if s == 0:
    print(0)
else:
    count += abs(s) // x
    if abs(s) % x > 0:
        count += 1
    print(count)
","0.0"
"42d47feb-cba9-4d18-8ccc-2c20605db82d","a, b = map(int, input().split())
print(a*(b//2))
","0.0"
"8381a3f6-aaba-448f-b65f-50117785adf7","a,b,c=input().split()
a,b,c=int(a),int(b),int(c)
if a%c==0 and b%c==0:
    print(a//c*(b//c))
elif a%c==0 and b%c!=0:
    print(a//c*(b//c)+a/c)
elif a%c!=0 and b%c==0:
    print(a//c*(b//c)+b/c)
elif a%c!=0 and b%c!=0:
    print(a//c*(b//c)+b//c+a//c+1)
","0.0"
"7d8fcbed-1f16-4d19-8a17-6560267bc64c","n, m, k = map(int, input().split())

if n <= k:  
    print(""NO"")
else:
    l = 0
    while m > 0:
        m -= n
        l += 1
        if m <= 0:
            break  
        m += k

    print(l)
","0.0"
"17c6577a-b831-485d-ba22-fb47923019b4","n=int(input())
if n==2:
    print(""    0    "")
    print(""  0 1 0  "")
    print(""0 1 2 1 0"")
    print(""  0 1 0  "")
    print(""    0    "")
if n==3:
    print(""      0      "")
    print(""    0 1 0    "")
    print(""  0 1 2 1 0  "")
    print(""0 1 2 3 2 1 0"")
    print(""  0 1 2 1 0  "")
    print(""    0 1 0    "")
    print(""      0      "")
if n==4:
    print(""        0        "")
    print(""      0 1 0      "")
    print(""    0 1 2 1 0    "")
    print(""  0 1 2 3 2 1 0  "")
    print(""0 1 2 3 4 3 2 1 0"")
    print(""  0 1 2 3 2 1 0  "")
    print(""    0 1 2 1 0    "")
    print(""      0 1 0      "")
    print(""        0        "")
if n==5:
    print(""          0          "")
    print(""        0 1 0        "")
    print(""      0 1 2 1 0      "")
    print(""    0 1 2 3 2 1 0    "")
    print(""  0 1 2 3 4 3 2 1 0  "")
    print(""0 1 2 3 4 5 4 3 2 1 0"")
    print(""  0 1 2 3 4 3 2 1 0  "")
    print(""    0 1 2 3 2 1 0    "")
    print(""      0 1 2 1 0      "")
    print(""        0 1 0        "")
    print(""          0          "")
if n==6:
    print(""            0            "")
    print(""          0 1 0          "")
    print(""        0 1 2 1 0        "")
    print(""      0 1 2 3 2 1 0      "")
    print(""    0 1 2 3 4 3 2 1 0    "")
    print(""  0 1 2 3 4 5 4 3 2 1 0  "")
    print(""0 1 2 3 4 5 6 5 4 3 2 1 0"")
    print(""  0 1 2 3 4 5 4 3 2 1 0  "")
    print(""    0 1 2 3 4 3 2 1 0    "")
    print(""      0 1 2 3 2 1 0      "")
    print(""        0 1 2 1 0        "")
    print(""          0 1 0          "")
    print(""            0            "")
if n==7:
    print(""              0              "")
    print(""            0 1 0            "")
    print(""          0 1 2 1 0          "")
    print(""        0 1 2 3 2 1 0        "")
    print(""      0 1 2 3 4 3 2 1 0      "")
    print(""    0 1 2 3 4 5 4 3 2 1 0    "")
    print(""  0 1 2 3 4 5 6 5 4 3 2 1 0  "")
    print(""0 1 2 3 4 5 6 7 6 5 4 3 2 1 0"")
    print(""  0 1 2 3 4 5 6 5 4 3 2 1 0  "")
    print(""    0 1 2 3 4 5 4 3 2 1 0    "")
    print(""      0 1 2 3 4 3 2 1 0      "")
    print(""        0 1 2 3 2 1 0        "")
    print(""          0 1 2 1 0          "")
    print(""            0 1 0            "")
    print(""              0              "")
if n==8:
    print(""                0                "")
    print(""              0 1 0              "")
    print(""            0 1 2 1 0            "")
    print(""          0 1 2 3 2 1 0          "")
    print(""        0 1 2 3 4 3 2 1 0        "")
    print(""      0 1 2 3 4 5 4 3 2 1 0      "")
    print(""    0 1 2 3 4 5 6 5 4 3 2 1 0    "")
    print(""  0 1 2 3 4 5 6 7 6 5 4 3 2 1 0  "")
    print(""0 1 2 3 4 5 6 7 8 7 6 5 4 3 2 1 0"")
    print(""  0 1 2 3 4 5 6 7 6 5 4 3 2 1 0  "")
    print(""    0 1 2 3 4 5 6 5 4 3 2 1 0    "")
    print(""      0 1 2 3 4 5 4 3 2 1 0      "")
    print(""        0 1 2 3 4 3 2 1 0        "")
    print(""          0 1 2 3 2 1 0          "")
    print(""            0 1 2 1 0            "")
    print(""              0 1 0              "")
    print(""                0                "")
if n==9:
    print(""                  0                  "")
    print(""                0 1 0                "")
    print(""              0 1 2 1 0              "")
    print(""            0 1 2 3 2 1 0            "")
    print(""          0 1 2 3 4 3 2 1 0          "")
    print(""        0 1 2 3 4 5 4 3 2 1 0        "")
    print(""      0 1 2 3 4 5 6 5 4 3 2 1 0      "")
    print(""    0 1 2 3 4 5 6 7 6 5 4 3 2 1 0    "")
    print(""  0 1 2 3 4 5 6 7 8 7 6 5 4 3 2 1 0  "")
    print(""0 1 2 3 4 5 6 7 8 9 8 7 6 5 4 3 2 1 0"")
    print(""  0 1 2 3 4 5 6 7 8 7 6 5 4 3 2 1 0  "")
    print(""    0 1 2 3 4 5 6 7 6 5 4 3 2 1 0    "")
    print(""      0 1 2 3 4 5 6 5 4 3 2 1 0      "")
    print(""        0 1 2 3 4 5 4 3 2 1 0        "")
    print(""          0 1 2 3 4 3 2 1 0          "")
    print(""            0 1 2 3 2 1 0            "")
    print(""              0 1 2 1 0              "")
    print(""                0 1 0                "")
    print(""                  0                  "")
","0.0"
"d949e12a-1807-4b82-a4ab-c1a178a79888","def k_Ðµ_ÑÐ´Ð¸Ð²Ð¸ÑÐµÐ»ÑÐ½Ð¾Ðµ_ÑÐ¸ÑÐ»Ð¾(k):
    ÑÐµÐºÑÑÐµÐµ_ÑÐ¸ÑÐ»Ð¾ = 19
    ÑÐµÐºÑÑÐ¸Ð¹_Ð¸Ð½Ð´ÐµÐºÑ = 1
    while ÑÐµÐºÑÑÐ¸Ð¹_Ð¸Ð½Ð´ÐµÐºÑ < k:
        ÑÐµÐºÑÑÐµÐµ_ÑÐ¸ÑÐ»Ð¾ += 9  
        ÑÑÐ¼Ð¼Ð°_ÑÐ¸ÑÑ = sum(map(int, str(ÑÐµÐºÑÑÐµÐµ_ÑÐ¸ÑÐ»Ð¾))) 
        if ÑÑÐ¼Ð¼Ð°_ÑÐ¸ÑÑ == 10:
            ÑÐµÐºÑÑÐ¸Ð¹_Ð¸Ð½Ð´ÐµÐºÑ += 1  
    return ÑÐµÐºÑÑÐµÐµ_ÑÐ¸ÑÐ»Ð¾
k = int(input())
print(k_Ðµ_ÑÐ´Ð¸Ð²Ð¸ÑÐµÐ»ÑÐ½Ð¾Ðµ_ÑÐ¸ÑÐ»Ð¾(k))","0.0"
"5eebb219-dec9-41ce-83c6-efc4a4670acc","buk=input()
k='qwertyuiopasdfghjklzxcvbnm'
v=k.find(buk)
if buk=='m':
    print('q')
else:
    print(k[v+1])
","0.0"
"7aef5f21-3d8a-4711-9507-28bcb1b28522","def amogus(n):

    res = set()
    for i in range(1,int(n**0.5) + 1):
        if n % i == 0:
            res.add(i)
            res.add(n//i)
    return sorted(res)

n = int(input())

d = amogus(n)
d = d[(len(d))//2]
d2 = n // d
#print(d, d2)
print(d * (d2 + 1) + (d + 1) * d2)","0.0"
"5eebb219-dec9-41ce-83c6-efc4a4670acc","v = input()
p = 'qwertyuiopasdfghjklzxcvbnm'
x = p.find(v)
x+=1
if x==26:
    x-=26
print(p[x])","0.0"
"7d8fcbed-1f16-4d19-8a17-6560267bc64c","a, b, c = map(int, input().split())
if a <= c and a < b:
    print('NO')
else:
    b -= a
    if b < 0:
        b = 0
    b += ((a-c)-b%(a-c))%(a-c)
    print(b//(a-c) + 1)","0.0"
"02bc07a3-d63a-4896-b585-e74c06bfc7f2","q,w=map(int,input().split())
e=list(map(int,input().split()))
r=-sum(e)
t=0
if r>0:
    while r>0:
        r=r-w
        t=t+1
else:
    while r<0:
        r=r+w
        t=t+1
print(t)","0.0"
"6824fb27-2339-421d-85db-60758b59cddc","a=1
a1=int(input())
sch=0
while a*5<=a1:
    a*=5
    sch+=1
while a*2<=a1:
    a*=2
    sch+=1
while a+1<=a1:
    a+=1
    sch+=1
print(sch)","0.0"
"7d8fcbed-1f16-4d19-8a17-6560267bc64c","a,b,c=map(int, input().split())
d=0
if a<c:
    print('NO')
elif a==c:
    print('NO')
elif a>c:
    while 0<b:
        if a>=b:
            d=d+1
            b=0
            print(d)
        else:
            b=b-(a-c)
            d=d+1
","0.0"
"42d47feb-cba9-4d18-8ccc-2c20605db82d","n, m = map(int, input().split(' '))
row_places = m // 2
print(row_places * n)","0.0"
"6824fb27-2339-421d-85db-60758b59cddc","a=1
a1=int(input())
sch=0
while a*5<=a1:
    a*=5
    sch+=1
while a*2<=a1:
    a*=2
    sch+=1
while a+1<=a1:
    a+=1
    sch+=1
print(sch)","0.0"
"d949e12a-1807-4b82-a4ab-c1a178a79888","k = int(input())
l = 0
a = 18
while l<k:
    a += 1
    if a%3==0:
        a+=1
    s = 0
    for i in range(len(str(a))):
        s += int(str(a)[i])
    if s==10:
        l+=1
print(a)","0.0"
"7aef5f21-3d8a-4711-9507-28bcb1b28522","n = int(input())
for i in range(int(n**0.5)+1, 0, -1):
    if n%i==0:
        q = n//i
        print((q+1)*i+(i+1)*q)
        break","0.0"
"7aef5f21-3d8a-4711-9507-28bcb1b28522","n = int(input())
for i in range(int(n**0.5), 0, -1):
    if n%i==0:
        q = n//i
        print((q+1)*i+(i+1)*q)
        break","0.0"
"7d8fcbed-1f16-4d19-8a17-6560267bc64c","import math
n, m, k = map(int, input().split())
if n <= k:
    print('NO')
else:
    print(math.ceil((m - n) / (n - k)) + 1)","0.0"
"8381a3f6-aaba-448f-b65f-50117785adf7","lenght, width, a = input().split()
lenght = int(lenght)
width = int(width)
a = int(a)
if ((lenght / a) - (lenght // a)) > 0:
    x = lenght//a + 1
else:
    x = lenght / a
if ((width / a) - (width // a)) > 0:
    y = width//a + 1
else:
    y = width//a
print(x*y)","0.0"
"853bea78-6aa0-4fcf-8c5a-5f278603c518","n=int(input())
k=int(input())
x=int(input())
y=int(input())
if n>k:
    s=x*k+((n-k)*y)
else:
    s=x*n
print(s)","0.0"
"8381a3f6-aaba-448f-b65f-50117785adf7","import math
n, m, a= map (int, input (). split ())
print( math.ceil(n/a) * math.ceil(m/a))
","0.0"
"d949e12a-1807-4b82-a4ab-c1a178a79888","a = int(input())
b=10-a
a=str(a)
b=str(b)
print(int(a+b))
","0.0"
"d949e12a-1807-4b82-a4ab-c1a178a79888","k = int(input())
l = 0
a = 18
while l<k:
    a += 1
    if a%3==0:
        a+=1
    s = 0
    for i in range(len(str(a))):
        s += int(str(a)[i])
        if s>10:
            break
    if s==10:
        l+=1
print(a)","0.0"
"7d8fcbed-1f16-4d19-8a17-6560267bc64c","import math
n, m, k = map(int, input().split())
if n == m:
    print(1)
elif n <= k:
    print('NO')
else:
    print(math.ceil((m - n) / (n - k)) + 1)","0.0"
"e16baab9-5d32-479d-877e-04518a247380","def main():
    n, r = map(int, input().split())
    a = list(map(int, input().split()))
    ans = 0
    j = 1
    for i in range(n):
        while a[j] - a[i] <= r:
            j += 1
            if j == n:
                return ans
        ans += n - j
    return ans


print(main())
","0.0"
"853bea78-6aa0-4fcf-8c5a-5f278603c518","N = int(input())
K = int(input())
X = int(input())
Y = int(input())
s = 0
a = 0
a = N - K
s = X * K + a * Y
print(s)
","0.0"
"7d8fcbed-1f16-4d19-8a17-6560267bc64c","import math
n, m, k = map(int, input().split())
if n >= m:
    print(1)
elif n <= k:
    print('NO')
else:
    print(math.ceil((m - n) / (n - k)) + 1)
","0.0"
"d949e12a-1807-4b82-a4ab-c1a178a79888","k = int(input())
n = 10
for i in range(k):
    n += 9
    while sum(list(map(int, list(str(n))))) != 10:
        n += 9
print(n)","0.0"
"7aef5f21-3d8a-4711-9507-28bcb1b28522","n = int(input())
mi = 9999999999
for i in range(int(n**0.5)+1, 0, -1):
    if n%i==0:
        q = n//i
        mi = min(mi, ((q+1)*i+(i+1)*q))
        break
print(mi)","0.0"
"d949e12a-1807-4b82-a4ab-c1a178a79888","k = int(input())
n = 10
for i in range(k):
    n += 9
    while sum(list(map(int, list(str(n))))) != 10:
        n += 9
print(n)","0.0"
"8381a3f6-aaba-448f-b65f-50117785adf7","lenght, width, a = input().split()
lenght = int(lenght)
width = int(width)
a = int(a)
if ((lenght / a) - (lenght // a)) > 0:
    x = lenght//a + 1
else:
    x = lenght / a
if ((width / a) - (width // a)) > 0:
    y = width//a + 1
else:
    y = width//a
print(int(x*y))","0.0"
"7aef5f21-3d8a-4711-9507-28bcb1b28522","n = int(input())
mi = 9999999999999999999999
for i in range(int(n**0.5)+1, 0, -1):
    if n%i==0:
        q = n//i
        mi = min(mi, ((q+1)*i+(i+1)*q))
        break
print(mi)","0.0"
"aeb122ea-bb7f-44ee-93c8-65ead3d4f5f3","n, k = map(int, input().split())

time_left = 240 - k
rounds = 0

for i in range(1, n+1):
    if time_left - 5*i >= 0:
        time_left -= 5*i
        rounds += 1
    else:
        break

print(rounds)
","0.0"
"5895fc4e-b515-464a-a0e2-697d86bf8783","userInput = input()
temp = userInput.split("" "")
n = 0
nList = []
maxValue = 0
minValue = 0
for i in range(len(temp)):
    if(i == 0):
        n = int(temp[i])
    else:
        nList.append(int(temp[i]))

maxValue = max(nList)
minValue = min(nList)

for i in range(len(nList)):
    if(nList[i] == maxValue):
        nList[i]=minValue
    print(nList[i], end="" "")
    ","0.0"
"42d47feb-cba9-4d18-8ccc-2c20605db82d","n, m=map(int, input().split())
if m%2==0:
    print(n*m//2)
else:
    print((m-3)*n//2+n)","0.0"
"aeb122ea-bb7f-44ee-93c8-65ead3d4f5f3","n, k = map(int, input().split())

time_left = 240 - k
rounds = 0

for i in range(1, n+1):
    if time_left - 5*i >= 0:
        time_left -= 5*i
        rounds += 1
    else:
        break

print(rounds)","0.0"
"6824fb27-2339-421d-85db-60758b59cddc","x = int(input())
count = 0
s = 1
while s * 5 <= x:
    s *= 5
    count += 1
else:
    while s * 2 <= x:
        s *= 2
        count += 1
    else:
        while s + 1 <= x:
            s += 1
            count += 1
        else:
            print(count)
","0.0"
"8381a3f6-aaba-448f-b65f-50117785adf7","import math

n, m, a = map(int, input().split())

b = math.ceil(n / a)
c = math.ceil(m / a)
d = b * c

print(d)

","0.0"
"a4accdf7-f726-49d2-b19a-aeb590224402","a = [1] * 10
n = 0
nn = [0, 10]
while n <= 64:
    n += 1
    b = a.copy()
    for i in range (10):
        for j in range (i, 10):
            a[i] += a[j]
    for i in range (10):
        a[i] -= b[i]
    nn.append(sum(a))
print (nn[int(input())])","0.0"
"42d47feb-cba9-4d18-8ccc-2c20605db82d","n,m=map(int,input().split())
if m%2==0:
    x=n*m//2
else:
    x=n*(m-1)//2
print(x)
","0.0"
"853bea78-6aa0-4fcf-8c5a-5f278603c518","N = int(input())
K = int(input())
X = int(input())
Y = int(input())
s = 0
a = 0
if N < K:
    a = X * N
    print(a)
else:
    a = N - K
    s = X * K + a * Y
    print(s)","0.0"
"aeb122ea-bb7f-44ee-93c8-65ead3d4f5f3","n, k = map(int, input().split())

time_left = 240 - k
rounds = 0

for i in range(1, n+1):
    if time_left - 5*i >= 0:
        time_left -= 5*i
        rounds += 1
    else:
        break

print(rounds)","0.0"
"8381a3f6-aaba-448f-b65f-50117785adf7","n, m, a = map(int, input().split())

x = -(-n // a)
y = -(-m // a)

print(x * y)","0.0"
"7aef5f21-3d8a-4711-9507-28bcb1b28522","n = int(input())
k = int(n**0.5)
p = n-k**2
s = 2*k*(k+1) + 3*(p//k) + 2*(p - p//k)
print(s)","0.0"
"e02095cd-3f62-4005-a067-a9da53d342bb","n=int(input())
x1=list(map(int,input().split()))
x2=list(map(int,input().split()))
v1,v2=0,0
v=0
for i in range(n):
    v1+=x1[i]
    v2+=x2[i]
    if v1==v2 and x1[i]==x2[i]:v+=x1[i]
print(v)","0.0"
"8381a3f6-aaba-448f-b65f-50117785adf7","n, m, a = map(int, input().split())

x = -(-n // a)
y = -(-m // a)

print(x * y)","0.0"
"5eebb219-dec9-41ce-83c6-efc4a4670acc","a=input()
b='qwertyuiopasdfghjklzxcvbnm'
if a!='m':
    
    print(b[b.index(a)+1])
else:
    print('q')
","0.0"
"e16baab9-5d32-479d-877e-04518a247380","n, r = map(int,input().split())
arr = list(map(int,input().split()))

ans = 0
j=0
for i in range(n):
    while (j < n and arr[j]-arr[i] <= r):
        j+=1
    ans+= n-j

print(ans)","0.0"
"bb650c26-e5ff-4faf-9447-76e7e6965b4d","n, k = map(int, input().split())
a = list(map(int, input().split()))
for i in range(n):
    if k == 0:
        break
    if a[i] < 0:
        a[i] = -a[i]
        k-=1
    else:
        a[i] = a[i] * (-1)**k
        k = 0
print(sum(a))
    
","0.0"
"5895fc4e-b515-464a-a0e2-697d86bf8783","vvod = input()
s = vvod.split()
n = int(vvod[0])
s.pop(0)
mn = min(s)
mx = max(s)
mxi = 0
mxk = s.count(mx)
for i in range(mxk):
    mxi = s.index(mx)
    s[mxi] = mn
print(*s, sep = ' ')","0.0"
"8381a3f6-aaba-448f-b65f-50117785adf7","a,b,c=input().split()
a,b,c=int(a),int(b),int(c)
if a%c==0 and b%c==0:
    print(a//c*(b//c))
elif a%c==0 and b%c!=0:
    print(a//c*(b//c)+a//c)
elif a%c!=0 and b%c==0:
    print(a//c*(b//c)+b//c)
elif a%c!=0 and b%c!=0:
    print(a//c*(b//c)+b//c+a//c+1)
","0.0"
"17c6577a-b831-485d-ba22-fb47923019b4","def gener(n):
    l = list(range(n+1))
    l.extend(list(range(n))[::-1])
    return ' '.join(map(str, l))

n = int(input())
for i in range(n):
    print((n-i)*2*' ' + gener(i) + (n-i)*2*' ')
print(gener(n))
for i in range(n)[::-1]:
    print((n-i)*2*' ' + gener(i) + (n-i)*2*' ')
","0.0"
"d949e12a-1807-4b82-a4ab-c1a178a79888","def sss(ch):
    s=0
    for i in range(len(str(ch))):
        s+=int(str(ch)[i])
    return s
a=int(input())
a1=10
while a>0:
    a1+=9
    if sss(a1)==10:
        a-=1
print(a1)","0.0"
"5895fc4e-b515-464a-a0e2-697d86bf8783","n, *grades = map(int, input().split())

max_grade = max(grades)
min_grade = min(grades)

for i in range(n):
    if grades[i] == max_grade:
        grades[i] = min_grade

print(*grades)
","0.0"
"5eebb219-dec9-41ce-83c6-efc4a4670acc","def next_letter(char):
    keyboard = {
        'a': 's', 'b': 'v', 'c': 'x', 'd': 'f', 'e': 'r', 'f': 'g', 'g': 'h',
        'h': 'j', 'i': 'u', 'j': 'k', 'k': 'l', 'l': 'z', 'm': 'q', 'n': 'b',
        'o': 'p', 'p': 'a', 'q': 'w', 'r': 't', 's': 'd', 't': 'y', 'u': 'i',
        'v': 'c', 'w': 'e', 'x': 'c', 'y': 't', 'z': 'x'
    }
    return keyboard[char]
input_char = input().strip()
print(next_letter(input_char))","0.0"
"6824fb27-2339-421d-85db-60758b59cddc","x = int(input())
count = 0
s = 1
l = []
while s * 5 <= x:
    s *= 5
    count += 1
else:
    while s * 2 <= x:
        s *= 2
        count += 1
    else:
        while s + 1 <= x:
            s += 1
            count += 1
        else:
            l.append(count)

s2 = 1
count2 = 0
while s2 * 5 <= x:
    s2 *= 5
    count2 += 1
else:
    while s2 + 1 <= x:
        s2 += 1
        count2 += 1
    else:
        l.append(count)

s3 = 1
count3 = 0
while s3 * 5 <= x:
    s3 *= 5
    count3 += 1
else:
    while s3 * 2 <= x:
        s3 *= 2
        count3 += 1
    else:
        l.append(count)

s4 = 1
count4 = 0
while s4 * 2 <= x:
        s4 *= 2
        count4 += 1
else:
    while s4 + 1 <= x:
        s4 += 1
        count4 += 1
    else:
        l.append(count)

print(min(l))
","0.0"
"7aef5f21-3d8a-4711-9507-28bcb1b28522","import math

n = int(input())
length = math.floor(math.sqrt(n))
width = math.ceil(n / length)
k = 2 * n + length + width
print(k)
","0.0"
"42d47feb-cba9-4d18-8ccc-2c20605db82d","n, m = map(int, input().split())
print(m // 2 * n)
","0.0"
"a4accdf7-f726-49d2-b19a-aeb590224402","def count_lucky_numbers(length):
    dp = [[0] * 10 for _ in range(length + 1)]

    for j in range(10):
        dp[1][j] = 1

    # ÐÐ°Ð¿Ð¾Ð»Ð½ÑÐµÐ¼ Ð¼Ð°ÑÑÐ¸Ð² dp
    for i in range(2, length + 1):
        for j in range(10):
            for k in range(j + 1):
                dp[i][j] += dp[i - 1][k]
    count = sum(dp[length])

    return count

# ÐÑÐ¸Ð¼ÐµÑ Ð¸ÑÐ¿Ð¾Ð»ÑÐ·Ð¾Ð²Ð°Ð½Ð¸Ñ:
n = int(input())
print(count_lucky_numbers(n))
","0.0"
"5895fc4e-b515-464a-a0e2-697d86bf8783","n, *grades = map(int, input().split())

max_grade = max(grades)
min_grade = min(grades)

for i in range(n):
    if grades[i] == max_grade:
        grades[i] = min_grade

print(*grades)","0.0"
"5eebb219-dec9-41ce-83c6-efc4a4670acc","k=input()
k1=""qwertyuiopasdfghjklzxcvbnm""
p=k1.find(k)
if k==""m"":
    print(""q"")
else:
    print(k1[p+1])
","0.0"
"853bea78-6aa0-4fcf-8c5a-5f278603c518","n=int(input())
k=int(input())
x=int(input())
y=int(input())
if n<k:
    print(n*x)
else:
    print(k*x+(n-k)*y)
","0.0"
"aeb122ea-bb7f-44ee-93c8-65ead3d4f5f3","x, y = input().split()
x = int(x)
y = int(y)

cnt = 0
sum = 0
for i in range(1, x+1):
    sum += 5 * i
    if sum + y <= 240:
        cnt += 1

print(cnt)","0.0"
"e16baab9-5d32-479d-877e-04518a247380","m, n = map(int, input().split())
data =list(map(int, input().split()))
c = 0
r = 0
l = 0
while r < m:
    if data[r] - data[l] <= n:
        r += 1
    else:
        l += 1
        c += m-r
print(c)","0.0"
"c2081cad-a682-43e2-8960-081ef8963a37","a, b = map(int, input().split())

min_flag = min(a, b)
max_flag = max(a, b)

d = min_flag
s = (max_flag - min_flag) // 2

print(f'{d} {s}')
","0.0"
"39674b7f-1b5d-40b8-aa5c-02f2ac4a2a4b","a=int(input())
a1=str(bin(a) [2:])
q1=[]
q2=[]
q3=[]
q4=[]
q5=[]
for i in range(len(a1)):
    if int(a1[i])==0:
        q1.append('#### ')
        q2.append('#  # ')
        q3.append('#  # ')
        q4.append('#  # ')
        q5.append('#### ')
    else:
         q1.append('   # ')
         q2.append(' # # ')
         q3.append('#  # ')
         q4.append('   # ')
         q5.append('   # ')
q1="""".join(q1)
q2="""".join(q2)
q3="""".join(q3)
q4="""".join(q4)
q5="""".join(q5)
print(q1)
print(q2)
print(q3)
print(q4)
print(q5)","0.0"
"d949e12a-1807-4b82-a4ab-c1a178a79888","k = int(input())
print((k - 1) * 9 + 19)","0.0"
"5eebb219-dec9-41ce-83c6-efc4a4670acc","alf=['q','w','e','r','t','y','u','i','o','p','a','s','d','f','g','h','j','k','l','z','x','c','v','b','n','m']
b=input()
if b in alf:
    a=alf.index(b)
if b !='m':
    b=alf[a+1]
else:
    b='q'
print(b)","0.0"
"853bea78-6aa0-4fcf-8c5a-5f278603c518","n=int(input())
k=int(input())
x=int(input())
y=int(input())
d=0
b=n-k
d=(x*k)+(b*y)
print(d)","0.0"
"d949e12a-1807-4b82-a4ab-c1a178a79888","def sum_number(num):
    sum = 0
    while num > 0:
        sum += num % 10
        num //= 10
    return sum
k=int(input())
b=0
for i in range(1,10001):
    if sum_number(i)==10:
        b+=1
    if b==k:
        print(i)
        break
","0.0"
"5895fc4e-b515-464a-a0e2-697d86bf8783","a = input().split()
sum = 0
max = 0
s = ''
for i in range(1, len(a)):
    if int(a[i]) > max:
        max = int(a[i])
min = max
for u in range(1, len(a)):
    if int(a[u]) < min:
        min = int(a[u])
for t in range(1, len(a)):
    if int(a[t]) == max:
        s += str(min)
    else:
        s += str(a[t])
print(' '.join(s))","0.0"
"5895fc4e-b515-464a-a0e2-697d86bf8783","a=[int(s) for s in input().split()]
b=[]
for t in range(len(a)):
    if t!=0:
        b.append(a[t])
c=max(b)
p=min(b)
for i in range(len(b)):
    if b[i]==c:
        b[i]=p
print(*b)","0.0"
"11d7d14b-eb4a-4dd7-94c1-67a03264c424","n=int(input())
s=list(map(int, input().split()))
x=0
for i in range(n):
    x+=s[i]
max_c=x
c=0
max_n=max(s)
if x%2==0:
    print(x)
else:
    for i in range(n):
        if s[i]%2==1 and s[i]<max_n:
            max_n=s[i]
    print(x-max_n)
","0.0"
"11d7d14b-eb4a-4dd7-94c1-67a03264c424","q=int(input())
w=list(map(int,input().split()))
e=sum(w)
m=10000000000000000000
if e%2==1:
    for i in range(len(w)):
        if w[i]<m and w[i]%2==1:
            m=w[i]
    e=e-m
print(e)","0.0"
"6824fb27-2339-421d-85db-60758b59cddc","n=int(input())
k=0
while n!=1:
    while n%5==0:
        n=n/5
        k+=1
    while n%2==0:
        n=n/2
        k+=1
    while n%5!=0 and n%2!=0 and n!=1:
        n=n-1
        k+=1
print(k)
    
    
","0.0"
"bb650c26-e5ff-4faf-9447-76e7e6965b4d","n, k = map(int, input().split())
a = list(map(int, input().split()))
a.sort(reverse=True)
for i in range(n):
    if k == 0:
        break
    if a[i] < 0:
        a[i] = -a[i]
        k-=1
    else:
        a[i] = a[i] * (-1)**k
        k = 0
print(sum(a))
    
","0.0"
"42d47feb-cba9-4d18-8ccc-2c20605db82d","n, m = map(int, input().split())
print((m // 2) * n)





","0.0"
"5895fc4e-b515-464a-a0e2-697d86bf8783","n=input()
s=n.split()
s=s[1:]
s=list(map(int,s))
a=str(max(s))
a1=str(min(s))
sss=n.find("" "")
n=n[sss+1:]
n=n.replace(a,a1)
print(n)","0.0"
"39674b7f-1b5d-40b8-aa5c-02f2ac4a2a4b","a = int(input())
b = ''
max2 = -1
while 2 ** (max2 + 1) <= a:
    max2 += 1
while max2 != -1:
    if 2 ** max2 <= a:
        a -= 2 ** max2
        b += '1'
        max2 -= 1
    else:
        b += '0'
        max2 -= 1
p = [''] * 5
def plus(arr, count):
    if count == '1':
        arr[0] += '   #'
        arr[1] += ' # #'
        arr[2] += '#  #'
        arr[3] += '   #'
        arr[4] += '   #'
    else:
        arr[0] += '####'
        arr[1] += '#  #'
        arr[2] += '#  #'
        arr[3] += '#  #'
        arr[4] += '####'
    return(arr)
for i in range(len(b)):
    if i > 0:
        p[1] += ' '
        p[0] += ' '
        p[2] += ' '
        p[3] += ' '
        p[4] += ' '
    p = plus(p, b[i])
print(p[0])
print(p[1])
print(p[2])
print(p[3])
print(p[4])","0.0"
"5895fc4e-b515-464a-a0e2-697d86bf8783","a = input()

b = a.split(' ')
c = b
c.remove(b[0])
n = max(c)
f = min(c)
new = ''

for i in range(len(c)):
    if int(c[i]) >= int(n):
            c[i] = int(f)
for i in range(len(c)):
    new += str(c[i]) + ' '
    
print(new)","0.0"
"d949e12a-1807-4b82-a4ab-c1a178a79888","def sum_number(num):
    sum = 0
    while num > 0:
        sum += num % 10
        num //= 10
    return sum
k=int(input())
b=0
for i in range(1,10001):
    if sum_number(i)==10:
        b+=1
    if b==k:
        print(i)
        break
","0.0"
"a4accdf7-f726-49d2-b19a-aeb590224402","n = int(input())
dp = []
for i in range(10):
    dp += [[0]*n]
for i in range(10):
    dp[i][0] = 1

for i in range(1,n):
    for j in range(10):
        if j == 0:
            dp[j][i] = 1
        else:
            dp[j][i] += dp[j-1][i] + dp[j][i-1]
c = 0
for i in dp:
    c += i[-1]
print(c)
# ÐÐ«ÐÐÐÐÐÐÐ Ð¡Ð®ÐÐ Ð¡ ÐÐÐ ÐÐÐ ÐÐÐÐ«Ð¢ÐÐ
# â£â¢®â¢®â¢®â¢®â£ºâ£ºâ£ºâ¡ªâ¡®â¡ªâ¡ªâ¡ªâ¡ªâ¡ªâ¡®â¡®â¡®â¡®â¡®â¡®â¡®â¡®â£ºâ£ªâ£ºâ£ºâ£ºâ£ºâ£ºâ£ºâ£ºâ£ºâ£ºâ£ºâ£ºâ£ºâ£ºâ£ºâ£ºâ£ºâ£ºâ£ºâ£ºâ£ºâ£ºâ£ºâ£ºâ£ºâ£ºâ£ºâ£ºâ£ºâ¡ªâ¡®â¡®â¡®â¡®â¡®â¡®â¡®â¡®â£ªâ£ªâ£ªâ£ªâ¡ªâ£ªâ¡ªâ¡ªâ¡ªâ¡ªâ¡ªâ¡ªâ¡ªâ¡²â¡±â£â¢â¢â¢â¢â¢â¢â¢â¢â¢â¢â¢â¢â¢â¢â¢â¢â¢â¢â¢â¢â¢â¢
# â¡®â£³â¡³â¡½â£â£â£â£â¢½â¢½â¢â£â¢®â¢¯â¡ºâ¡ºâ¡ºâ£ºâ£ºâ¡ºâ£ºâ¡ªâ¡¯â¡®â£ºâ£ºâ£ºâ£ºâ£ºâ£ºâ£ºâ£ºâ£ºâ£ºâ£ºâ£ºâ£ºâ£ºâ£ºâ£ºâ£ºâ£ºâ£ºâ£ºâ£ºâ£ºâ£ºâ£ºâ¡ºâ£ºâ£ºâ£ªâ¡ºâ¡ºâ¡ºâ¡ºâ¡ºâ¡ºâ¡ºâ¡ºâ¡ªâ¡ªâ£ªâ£ªâ¡ªâ¡®â¡®â¡®â£ªâ£«â¡«â¡ºâ¡ªâ¡ªâ¡ªâ¡ªâ¡ªâ¡ªâ¡³â£â¢â¢â¢â¢â¢â¢â¢â¢â¢â¢â¢â¢â¢â¢â¢â¢â¢â¢â¢â¢
# â¡¯â£ºâ£ªâ£»â£ºâ£ºâ£ºâ¡ªâ¡¯â£¯â£³â£³â¡³â¡µâ£â£â£â¢®â¡ºâ¡ºâ£ºâ£ºâ¡ªâ¡¯â£ºâ£ºâ£ºâ£ºâ£ºâ£ºâ£ºâ£ºâ£ºâ£ºâ£ºâ£ºâ£ºâ£ºâ£ºâ£ºâ¡ºâ¡ºâ¡ºâ¡ºâ£ºâ ªâ ªâ â¢â¢â â ºâ£ªâ£«â£«â£«â£«â¡ºâ¡ºâ¡ºâ¡ºâ£ªâ£ªâ¡ªâ¡ºâ¡ºâ¡ºâ¡ªâ¡®â¡®â¡®â¡ªâ¡ªâ¡ªâ¡ªâ¡ªâ¡ªâ¡ªâ¡â£â¢â¢â¢â¢â¢â¢â¢â¢â¢â¢â¢â¢â¢â¢â¢â¢â¢â¢â¢â¢
# â£»â£ºâ£ºâ£ºâ£ºâ¡ºâ¡®â£¯â£»â£ºâ£ºâ£ºâ¡ªâ¡¯â£ºâ£ºâ£ªâ¡³â¡½â£â£â£â¢®â¢¯â£ºâ£ºâ£ºâ£ºâ£ºâ£ºâ£ºâ£ºâ£ºâ£ºâ£ºâ£ºâ£ºâ£ºâ£ºâ£ºâ£ªâ£«â£«â¡«â¡ªâ â¢â£â¢¤â¢ â â â¡â¡µâ¡µâ¡µâ£â£â¢â¢â¢â¢®â¡ªâ¡ªâ¡ªâ¡ªâ¡ªâ¡ªâ¡ªâ¡ªâ¡ªâ¡ªâ¡ªâ¡ªâ¡ªâ¡ªâ¡ªâ¡ªâ¢¢â¢ªâ¢³â¢â¢â¢â£â£â£â£â£â£â¢â¢â¢â¢â¢â¢â¢â¢â¢â¢
# â£ºâ£ºâ£ºâ¡ºâ¡®â£¯â£»â£ºâ£ºâ£ºâ£ºâ¡ºâ¡®â£¯â£ºâ£ºâ¡ºâ£®â£»â£ºâ¡ºâ¡®â£¯â£³â£³â£³â£³â£³â£³â£³â£³â£³â£³â£³â£³â£³â£³â¡³â¡³â¡³â¡µâ¡µâ£â£â â¡â£â¢â¢â â â¢â â¢â¢â¢â¢â¢â¢â¢â¢â¢â¢â¢â¢â¢®â¢ªâ¢ªâ¢ªâ¢ªâ¢ªâ¢ªâ¢ªâ¢ªâ¡ªâ¡ªâ¡ªâ¡ªâ¡â£â¢â£â¢µâ¢µâ¢µâ¢µâ¢µâ¢µâ¢µâ¢â£â¢½â¢â¢â£â¢â¢â¢½â¢â£
# â£ºâ¡ºâ¡®â£¯â£»â£ºâ£ºâ£ºâ£ºâ¡ºâ¡®â£¯â£»â£ºâ¡ºâ£®â£»â£ºâ¡ºâ¡®â£¯â£»â£ºâ£ºâ£ºâ£ºâ£ºâ£ºâ£ºâ£ºâ£ºâ£ºâ¡ºâ¡ºâ¡ºâ¡ªâ¡ºâ¡ªâ¡«â¡ªâ¡ªâ¡ªâ¡ªâ¡ªâ¡ â¢¸â â â£ â ¡â¢â¢â¢â¢â¢â¢â¢â¢â¢â¢â¢â¢â¢â¢â¢â¢â¢â¢â£â£â£â£â£â£â£â¢®â¡«â¡ªâ¡â£â¢µâ¢â£â£â¢½â¢â¢â£â¢½â¢â£â£â¢½â¢â£â£â£â¢½â¢â£
# â¡®â£¯â£»â£ºâ£ºâ£ºâ£ºâ¡ºâ¡®â£¯â£»â£ºâ¡ºâ£®â£»â£ºâ¡ºâ¡®â¡¯â£»â£ºâ£ºâ¡ºâ¡ºâ¡ºâ¡ºâ¡ºâ¡ªâ¡®â¡®â¡®â¡ºâ¡ªâ¡«â¡«â¡ªâ¡ªâ¡ªâ¡ªâ¡ªâ¡ªâ¡ªâ¡ªâ¡ªâ¡ªâ£ªâ££â¢£â £â â¡â â¢¬â¢³â¢â¢â¢â¢â¢â¢â¢â¢â¢µâ¢µâ¢â£â¢½â¢µâ¢µâ¢µâ¢µâ¢µâ¢â£â£â£â¢â¢â â£â¢â¢â¢â£â£â£â¢â£â¢½â¢µâ¢â£â¢½â¢µâ¢µâ¢â¢â¢â¢µâ¢
# â£»â£ºâ£ºâ£ºâ£ºâ¡ºâ¡®â£¯â£»â£ºâ£ºâ£ªâ£»â£ºâ£ºâ¡ªâ¡¯â¡¯â¡¯â¡®â¡®â¡ºâ¡ªâ¡«â¡«â¡«â£«â£ªâ¡ªâ¡ªâ¡ªâ¡ªâ¡ªâ¡ªâ¡ªâ¡ªâ¡ªâ¡ªâ¡ªâ¡ªâ¡ªâ¡ªâ¡ªâ¡ªâ¡ªâ¡¢â¡£â¡£â¡â¡â¢â¢ªâ¡ªâ¡ªâ¡ªâ¡³â£â¢â¢â¢â¢â¢â¢â¢â¢â¢â£â£â¢½â¢â£â¢½â¢µâ¢µâ¢â¢â¢â¢â¢±â¢¸â¡±â¡â£â¢â¢â¢â¢â¢â¢â¢â¢â¢â¢â¢â¢â¢â¢â¢â¢â¢
# â£ºâ£ºâ£ºâ¡ºâ¡®â£¯â£»â£ºâ£ºâ£ºâ£ºâ£ºâ£ºâ£ºâ£ºâ¡ªâ¡¯â¡ºâ¡ºâ¡ªâ¡«â£«â£«â¡ªâ£«â¡«â¡®â¡ªâ¡ºâ¡ªâ¡ªâ¡ªâ¡ªâ¡ªâ¡ªâ¡ªâ¡ªâ¡ªâ¡ªâ¡ªâ¡ªâ¡ªâ¡ªâ¡ªâ¡ªâ£ºâ£²â¢¨â  â¢â¢â¢§â¡«â¡®â¡®â¡®â£ªâ¢«â¢£â¢£â££â¡£â¡³â¡â£â¢µâ£â¢â¢â¢µâ¢â¢â¢â¢â¢â¢â¢â¢â â¢§â¢³â¢¹â¢â¢â¢â¢â¢â¢â¢â¢â¢â¢â¢â¢â¢â¢â¢â¢â¢â¢
# â£ºâ£ºâ£ºâ£ªâ£»â£ºâ£ºâ£ºâ£ºâ£ºâ£ºâ£ºâ£ºâ¡ºâ¡ºâ£ªâ£«â¡«â¡«â¡«â£«â¡ªâ¡®â¡®â¡®â¡ªâ¡ªâ¡«â¡«â¡«â¡ªâ¡ªâ¡ªâ¡ªâ¡ªâ¡ªâ¡ªâ¡ªâ¡ªâ ®â ªâ¡â¡ªâ¢â â¡³â¡«â¡â â¢â â¡â â â â ®â¢®â£ªâ£ºâ¢¸â¢¸â¢®â¢¯â¡³â£³â¢³â¡¹â£â£â¢â¢â¢â¢â¢â¢â¢â¢â¢â¢â¢³â¡±â¡±â¡±â¡±â¡±â¡±â¡±â¡±â¡±â¡±â¡±â¡±â¡±â¡±â¡±â¡±â¡±â¡±â¡±â¡±
# â£â£â¢â¢â£â¢â¢â¢â¢â ³â â â¡â¢â â â¢â â¢â ©â¡â ®â¡ªâ¡ªâ¡ºâ¡ªâ¡®â¢®â¢ªâ£ªâ£ªâ¢ªâ¢ªâ¢®â¢â¢®â â â¡â¡¡â¢â¢â¢â ¢â¢â ®â¢â¢â â â¢â â¡â â â¡â¢â â â â¡â¡â¡·â£â¡â£â¢â¢â¢â£â¢â£â¢â¢·â¢µâ¢â¢â¢â¢â¢¸â¢â¢®â¢ªâ¡ªâ¡ªâ¡ªâ¡ªâ¡ªâ¡ªâ¡ªâ¡ªâ¡ªâ¡ªâ¡ªâ¡ªâ¡ªâ¡ªâ¡ªâ¡ªâ¡ª
# â¢·â¢µâ¢µâ¢µâ¢½â â£â¢¨â¢â¢¡â¢â¢â  â â â¡¢â â¡â¢â¢¡â¢°â¢â â¡±â¡±â¡â¡â£â¢·â¢â¢â¢â¡â¡â â¡¡â â â¡â¡â â â¡â¢â â¢â ¢â¢â â â¢â¢â¢â¡â¡â â¡â  â â â â ºâ¡¸â¡¸â¡ªâ£ºâ¡ºâ¡ªâ¡ºâ¡ºâ¡¼â£â¢½â¢½â¡±â¡±â¡±â¡±â â¢¡â¢£â¢³â¡±â¡¹â¡ªâ¡ªâ¡ªâ¡ªâ¡ªâ¡ªâ¡ªâ¡ªâ¡ªâ¡®â¡ªâ¡ªâ¡ªâ¡ªâ¡ªâ¡ª
# â¢â¢â¢â¢â â¢â ½â ½â ½â â â¡£â §â¡â â â â¢â ¡â¢â â  â â â£â¢®â¡â¡â â â¡â ¡â â â â  â â¡â  â â¢â  â â â¢â  â â â â â ¢â¢â â â â¡â â¢â â â â  â â¡â â â â¡®â¡ªâ¡ªâ¡ªâ¡ªâ¡£â¡£â¡«â¢ªâ¡ªâ¢²â¢¼â¢¬â£â¢â¢â¢®â¡ªâ¡ªâ¡ªâ¡ªâ¡ªâ¡ªâ¡ªâ¡ªâ¡ºâ¡ªâ¡«â¡ªâ¡ªâ£ªâ¡ªâ¡ª
# â¢â¢â¢â â â â â â¡â â¢â¢â¢â¢â ¡â â â¡â¢â â â â¢â  â â â¡â¢â â â¡â â â â â â  â â¡â¡â â â ¨â ¨â  â¢â â¡â â â ¨â â â¡â â â â¡â â â â â â â â â  â â â â â â â¡®â¡ªâ¡³â¡½â¡½â£½â£³â¡³â¡³â£â¢â¢â¢â¢â¢â¢â¢â¢®â¡ªâ¡ªâ¡«â¡ºâ¡ªâ¡«â¡ªâ¡ªâ¡«
# â¢â¢â¢â¢â â¡ â¢¨â¢ â  â¢¨â¢°â¢â â¡â¢â â â â â¡â â â¢â â â â â¢â â â â¢â â â â¢ â¢ â¢â â  â â â¢â â â¡â â¢â â â¡â â â â¢â â  â â â¡â¡â â¢â â¢â â¡â  â â â â â â â¡ªâ¡ªâ¡¯â¡¯â£â£â¢â¢â¢â â¡â¡â¡â¡â¡â¡â¡â¡â£â¢â¢â¢â¢â¢®â¢®â¢ª
# â¡¸â¡¸â¡¸â¡¸â¡¸â¡¸â¡¸â¢¸â¢¸â¢¸â¢°â¢±â ¸â¡¸â¡°â¡â â â â  â â â¡â¢â â â¡â¢â¢ â¢â¢â  â¡°â¢°â¢±â¢±â¢â¢â¡â â ¡â â â â¢â  â  â â  â â â¢â â â â¢â â â¡±â¡±â¡â¡¦â¡¢â¡ â¡â¡â£â  â¡â¡â â â¡â¢â¢â¢®â¢¯â¢¯â£³â¢£â £â¡â¡â¢â¢â¢â¢ªâ¢ªâ¢ªâ ªâ¡ªâ¡ªâ¡ªâ¡³â¡±â¡â¡â¡â¡â¡
# â¢£â £â¡£â¢£â¢£â £â¡£â¡â¢â ªâ¡¸â¢°â¢â¢â ªâ¡â¡â¡±â¡¸â¡°â¡±â¡±â¡¸â¡¸â¡¨â¡â¡â¢â¢±â¢â¢â¢â¢â¢â¢£â¢â¢â¢â¢â ¨â â â¡â â â¢â ¡â ¨â â â  â â â â â¢â â¢â¢â¢â¢â¢â¢â¢â¢â¢â¢â¢â¢â¢â¢â¢â¢â¢â¢â¢â¢â â¡â¡°â¡â¡±â¡¨â¡â¡â¡â¡ªâ¡â¡â¢â¢£â¢±â¢â â¡â¡â¡â¡â¡â¡±
# â â¡â¢â¢â¢¸â¢¨â¢â¢â ¢â¡â¢â ªâ¡¢â¢ªâ ªâ¡ªâ¡ªâ¡ªâ¡ªâ¡ªâ¡â¡â¢â¢â¢±â¢â¢â â¡â¢â¢£â ªâ¡¢â¡±â¡¨â¡¢â¡£â¡£â¡£â â â¢â â â¢â¢â¢â ¡â â¡â â â â â  â â â¡â¡â¡â¡â¡â¡â¡â¡â¡â¡â¡â¢â¢â¢â¢â¢â¢â¢â ªâ¡ªâ¢ªâ ªâ¡¢â¡£â¢£â¢±â¢¸â¢¸â¢¸â¢¸â¢°â ¡â¡£â¡£â¡£â¡£â¡£â¡£â¡ªâ¡ªâ¡ªâ¡ªâ¡ª
# â £â¡â¢â¢â¢¸â ¨â¡â¡â¡â¡â¡â¡â¡â¡â¡â¢â â¡â¡ªâ¡â¡â¡£â¡±â¡â¡â¡â¡ªâ¡ªâ¡¸â¡¸â¡¸â¡¨â¢¢â £â¡ªâ¢ªâ ªâ¡â¡â¡â â¡¢â ¨â ¨â¢â¢â â¡â¢â â¢â â â¢â â â¢â¢â¢â¢â¢â¢â¢â¢â¢â¢â¢â¢â â¡â¡â¡â¡â¡â¡â¡â¢â ¸â¡¨â¡â¡â¡£â¢£â¢£â¢£â¢£â £â¡±â¡±â¡±â¡±â¡±â¡±â¡±â¡±â¡±â¡±â¡±â¡±â¡±
# â ±â¡¨â ¢â¡â¡â¡â¡±â ¡â¢£â ±â¡â¢â¢â¢â ªâ¡ªâ ªâ¡¸â¡°â¡±â¡±â¡±â¡±â¡±â¡±â¡±â¡±â¡±â¡±â¡±â¢±â¢¸â¢¸â¢¸â¢¸â¢¸â¢¸â¢¸â¢¸â  â¡â â â â â¡â¡â¢â â â â¡â â â â â¢±â¢±â¢±â¢±â¢±â¢±â¢±â¢±â¢±â¢¡â¢£â¢±â¢â¢â â¡â¡â¡â¡â¡±â¡¡â¡±â¡¨â¡ªâ¡¸â¡¨â¡ªâ¡¸â¡â¡â¡â¡â¡â¡â¡â¡â¡â¡â¡â¡®â¡ªâ¡ªâ¡ªâ¡ª
# â ¡â¡â¡â¢â¢â¢ªâ ¢â¡£â¡±â¡¡â¡£â¢±â ¨â¡â¡£â £â¡â â ¢â¡±â¡±â¡±â¡±â¢±â¢¸â¢¸â¢â¢â¢ªâ¢â ¢â¡±â¡±â¡¡â¡â¢â¢â¢â¢ªâ â¡ â ¡â¡â¡â¢â â¡â â â â â â â â  â â ¨â¡ªâ¡ªâ¡ªâ¡ªâ¡ªâ¡ªâ¡ªâ¡ªâ¡ªâ¡ªâ¡ªâ¡ªâ¡ªâ¡±â¡±â¡±â¡±â¡±â¡±â¡±â¡±â¡±â¡±â¡±â¡±â¡±â¡±â¡±â¡±â¡±â¡±â¡±â¡±â¡¹â¡ªâ¡ªâ¡ªâ¡ªâ¡ªâ¡ªâ¡ªâ¡ºâ¡ª
# â ±â¡â¡â¡â¢â¢â¢â¢â¢â¢â¢â¢±â¢â¢â¢£â¢â â¢â â¡°â ¨â ªâ¡ªâ¢ªâ¢¸â¢¸â¢¨â¢â â¡â¡â¡ªâ¡â¡â¢£â ±â¡â¢â¢â¢â â¡â¢â â â¡â â  â¢â â¡â â â â â  â â¡â¡â¡â¡â¡â¡â¡â¡â¡â¡â¡â¡â¡â¡â¡â¡â¡â¡â¡â¡â¡â¡â¡â¡â¡â¡â¡â¡â¡â¡â¡â¡â¡®â¡ªâ¡ªâ¡ªâ¡ªâ¡ªâ¡ºâ¡ªâ¡ªâ¡«â¡ª
# â¢â¢â¢â¢â¢¸â¢°â¢±â¢â¢â¢â¢â â¢â¢â¢±â¢¡â¢â ¦â¡â¡¢â¡¡â¢£â¢£â¢£â¢â¢â¢â¢â¢â¢â¢£â¢â¢ªâ¢ªâ¢¢â¢±â£â¢â â¡¡â â¡â¡â â  â â¡â¢â â â â¡â â â â â â¢â¢â¢â¢â¢â¢â¢â¢â¢â¢â¢â¢â¢â¢â¢â¢â¢â¢â¢â¢â¢â¢â¢â¢â¢â¢â¢â¢â¢â¢â¢â¢â¢â¢â¢®â£ªâ¡ªâ¡ªâ¡ªâ¡ªâ¡ªâ¡ºâ¡ª
# â¢â â¡â¡â¡â¡â¡â¡¢â¡£â¢£â¢³â¢¸â¡°â¡â¡â¡â¡â¡â¡â¡â¡â¡â¡â¡â¡â¡â¡â¡â¡â¡â£â¢â¢â¢â¢â¢®â¢²â¢±â¡â â â¡â¡â â¢â¢â¢â ¢â ¨â â  â â â â â¡â â¢±â¢±â¡±â¡±â¡±â¡±â¡±â¡±â¡±â¡±â¡±â¡±â¡±â¡±â¡±â¡±â¡â¡â¡â¡â¡â¡â¡â¡â¡â£â¢â¢â£â£â£â£â¢½â¢µâ¢µâ¢â£â£â¢â¢®â¢®â¢®â¡ª
# â¡±â¡¹â¡¸â¡¸â¡¸â¡¸â¡¸â¡¸â¡¸â¡ªâ¡ªâ¡ªâ¡ªâ¡ªâ¡ªâ¡ªâ¡ªâ¡ªâ¡ªâ¡ªâ¡ªâ¡ªâ¡ªâ¡ªâ¡ªâ¡ªâ¡ªâ£â¢â¢â¢â¢â¢â¢â¢â¢â¢â¢â â â¡â¡â â¡â ¢â¢â â â¡â  â â â â â â â â¢¸â¢±â¢±â¢±â¢±â¢±â¢±â¢±â¢±â¢±â¢±â¢â¢â¢â¢â¢â¢â¢â¢â¢â¢â¢â¢â¢â¢®â¡ªâ¡«â¡³â¡µâ¡µâ¡µâ£â¢â£â¢½â¢µâ¢â¢â¢â¢â£â£â£
# â¡ªâ¡ªâ¡ªâ¡¸â¢¸â¢¸â¡â¢â â¡â¡â¡â¡â¡â¡â£â¢®â¢ªâ¡ªâ¡ºâ¡ªâ¡®â¡®â¡®â¡¯â¡ºâ¡ªâ¡ªâ¡³â£â¢â¢â¢â¢â¢â¢â¢â¢â â¡â â¡â  â¢â â¡â â¡â â¢â â â â â â¡â¢â¢â¢â¢â¢â¢â¢â¢â¢â¢â¢â¢â¢â¢â¢â¢â¢â¢â µâ¡â¡â¡â¡â£â¢â£â¢â¢â¢â¢â¢â¢â¢®â¡³â¡³â¡³â¡½â£â£â¢½â¢µâ¢µâ¢µâ¢
# â£â¡³â¡±â£â¢â â¢â ªâ¡ªâ¡ªâ¡ªâ¡ªâ¡ªâ¡ªâ¡ªâ¡ªâ ªâ¡â¢â¢â¢â¢â¢â¢â¢â¢â¢â¢â¢â¢â ªâ¡â¡ªâ ªâ¡¨â¢¢â¢±â¢¸â â â¡â â â â â¡â â¡â â¡â â¡â â  â â â¡â¡â¡â¡â£â¢â¢â¢â¢â¢â¢â¢â¢â¢â¢®â¢ªâ¢ªâ¢£â¢«â¡ªâ¡ªâ¡ªâ¡ªâ¡ªâ¡£â¡³â£â£â£â£â£â¢½â¢µâ¢â£â£â¢â¢®â¢®â¡³â¡³â¡³â¡½â£
# â °â¡±â¡±â¡â¡â¡â¡â¡¡â ªâ¡ªâ¡ªâ¡ªâ¡ªâ¡ªâ¡ªâ¡ªâ¢â â¡¢â¢¢â¢±â¢¸â¢¸â¢¸â¢¸â¢¸â ¸â¡¸â¡¸â¡â¡â¢â¢â¢â¢â â â¢â â¡â¢â â â¡â â â â â â â¢â â â â â¢¢â¢£â¢£â¢â¢â¢â¢â¢â¢â¢â¢â¢â¢â£â¢â£â£â£â¢â¢â¢â¢â¢®â£ªâ¡ªâ£ºâ¡ªâ¡®â¡®â¡®â¡®â¡®â¡³â¡½â£â¢â£â¢½â¢â£â£â¢â¢â¢®â¡ª
# â¡³â¡¸â¡¸â¡¸â¡¸â¡¸â¡ªâ¡ªâ¡ªâ¡ªâ¡ªâ¡ªâ£â¢â£â£â£â£â¢¬â¡¢â££â¡±â¡±â¡â¡â¡â¡£â¡£â¡£â¡£â¡£â¡£â¡ªâ¡ªâ¡ªâ¡ªâ¡±â£â¢â ¨â¢â â â â â â  â â â â¡â¢â â â¡â ¸â¡¸â¡°â£±â£¸â£¸â¡¸â£â£â¢â¢â¢¼â¢¼â¢¼â¢â£â¢µâ¢µâ¢µâ¢µâ¢µâ¢µâ¢µâ¢â£â¢â¢â¢â¢â¢â¢®â¢¯â¢¯â£ºâ£ªâ¡³â¡³â¡½â¡µâ£â¢â¢½â¢µâ¢â¢
# â¡ªâ¡ªâ¡ªâ£â¢®â¢®â¡ºâ¡ªâ¡ªâ¡ºâ£ªâ¡ªâ¡ªâ¡³â¡±â¡±â£â¢â¢â¢â¢â¢â¢â¢â¢â¢®â¢ªâ¢ªâ¢ªâ¡ªâ¡ªâ¡ªâ¡ªâ¡ªâ¡ªâ¡ªâ¡ªâ¡²â¡â¢â â â â â  â â â â  â â¢â â â â  â ¡â ¨â ¸â¡¸â¡¸â¡â¡â¡â¡â¡â¡â¡®â¡¯â£«â¡³â¡³â¡³â¡³â¡³â£â¢½â¢µâ¢½â¢â£â¢½â¢½â¢½â¢½â¢½â¢½â¢½â¢â£â£â¢½â¢â£â£â¢®â¢¯â£³â¡³â¡½â£","0.0"
"5895fc4e-b515-464a-a0e2-697d86bf8783","v = input()
for i in range(len(v)):
    if v[i] == ' ':
        x = i
        break
a = int(v[:x])
v = v[x + 1: ]
s=''
for u in range(len(v)):
    if v[u] != ' ':
        s+=v[u]
v = v.replace(max(s), min(s))
print(v)","0.0"
"bb650c26-e5ff-4faf-9447-76e7e6965b4d","n, k = map(int, input().split())
a = list(map(int, input().split()))
a.sort(reverse=True)
for i in range(n):
    if k == 0:
        break
    if a[i] < 0:
        a[i] = -a[i]
        k-=1
    else:
        a[i] = a[i] * (-1)**k
        k = 0
print(sum(a))
    
","0.0"
"a40047cc-77a1-4a37-9e28-a61947b07df8","n = int(input())
m = sorted([int(x) for x in input().split()])
d = sorted([int(x) for x in input().split()])
print(sum([(abs(m[i]-d[i])) for i in range(n)]))","0.0"
"7aef5f21-3d8a-4711-9507-28bcb1b28522","import math
m= math 
n = int(input())
l = m.floor(n**0.5)
w = m.ceil(n/l)
print(2*n+l+w)","0.0"
"d949e12a-1807-4b82-a4ab-c1a178a79888","def is_awesome(n):
    return sum(int(digit) for digit in str(n)) == 10

def find_kth_awesome(k):
    count = 0
    num = 19
    while True:
        if is_awesome(num):
            count += 1
            if count == k:
                return num
        num += 9

k = int(input())
print(find_kth_awesome(k))
","0.0"
"bb650c26-e5ff-4faf-9447-76e7e6965b4d","n, k = map(int, input().split())
a = list(map(int, input().split()))
for i in range(n):
    if k == 0:
        break
    if a[i] < 0:
        a[i] = -a[i]
        k-=1
    else:
        a[i] = a[i] * (-1)**k
        k = 0
print(sum(a))
    
","0.0"
"027966cc-bba6-4e6a-83bf-ea3f730fb59d","x = int(input())
a = input()
b = []
for i in range(x):
    if i+1 < x:
        if (a[i]+a[i+1]) not in b:
            b.append(a[i]+a[i+1])
print(len(b))","0.0"
"bb650c26-e5ff-4faf-9447-76e7e6965b4d","n, k=map(int, input().split())
a=list(map(int, input().split()))
for i in range(n):
    if not k or a[i]>0:
        break
    k-=1
    a[i]*=-1
if k%2:
    a[i]*=-1
s=sum(a)
print(s)","0.0"
"5eebb219-dec9-41ce-83c6-efc4a4670acc","a = ['q','w','e','r','t','y','u','i','o','p','a','s','d','f','g','h','j','k','l','z','x','c','v','b','n','m']
print(a[(a.index(input())+1)%26])","0.0"
"17c6577a-b831-485d-ba22-fb47923019b4","i = int(input())
g = []
for h in range(i+1):
    a = """"
    a = a + "" ""*h*2
    for o in range(i+1-h):
        a = a + str(o) + "" ""
    for o in range(i-1-h,-1,-1):
        a = a + str(o) + "" ""
    a = a[:-1]
    a = a + "" "" * h*2
    g.append(a)
c = []
for t in range(len(g)-1,-1, -1):
    c.append(g[t])
for b in range(len(c)-1):
    print(c[b])
for b in g:
    print(b)","0.0"
"5eebb219-dec9-41ce-83c6-efc4a4670acc","s = ['q', 'w', 'e', 'r', 't', 'y', 'u', 'i', 'o', 'p', 'a', 's', 'd', 'f', 'g', 'h', 'j', 'k', 'l', 'z', 'x', 'c', 'v', 'b', 'n', 'm', 'q']
a = input()
i = s.index(a)
print(s[i+1])","0.0"
"bb650c26-e5ff-4faf-9447-76e7e6965b4d","n, k = map(int, input().split())
a = list(map(int, input().split()))
for i in range(n):
    if k == 0:
        break
    if a[i] < 0:
        a[i] = -a[i]
        k-=1
    else:
        a[i] = a[i] * (-1)**(k%2)
        k = 0
print(sum(a))
    
","0.0"
"bb650c26-e5ff-4faf-9447-76e7e6965b4d","n, k = map(int, input().split())
a = list(map(int, input().split()))
for i in range(n):
    if k == 0:
        break
    if a[i] < 0 and k > 0:
        a[i] = -a[i]
        k -= 1
    else:
        a[i] = a[i] * (-1) **(k % 2)
        k = 0
print(sum(a))","0.0"
"c2081cad-a682-43e2-8960-081ef8963a37","a,b = map(int,input().split())
m = min(a,b)
s = (max(a,b)-m) // 2
print(m,s)","0.0"
"d949e12a-1807-4b82-a4ab-c1a178a79888","k=int(input())
s=10
for i in range(k):
    s+=9
print(s)
","0.0"
"d949e12a-1807-4b82-a4ab-c1a178a79888","k = int(input())
if 1 <= k <= 9:
    print(19 + (k - 1) * 9)
else:
    print(109 + (k - 10) * 9)","0.0"
"d949e12a-1807-4b82-a4ab-c1a178a79888","q=int(input())
w=10
while q!=0:
    w=w+9
    if w%10!=0:
        q=q-1
print(w)","0.0"
"d949e12a-1807-4b82-a4ab-c1a178a79888","n = int(input())
t = 0
g = 19
h = 0
a = 0
while t != n:
    for i in str(g):
        a += int(i)
    if a == 10:
        t += 1
    g += 9
    a = 0
print(g-9)","0.0"
"a4accdf7-f726-49d2-b19a-aeb590224402","n = int(input())
f = 1
for i in range(2, 10):
    f *= i
c = 1
for i in range(n+9, n, -1):
    c *= i
print(c // f)
","0.0"
"5eebb219-dec9-41ce-83c6-efc4a4670acc","keyboard = {
    'a': 's', 's': 'd', 'd': 'f', 'f': 'g', 'g': 'h',
    'h': 'j', 'j': 'k', 'k': 'l', 'l': 'z', 'z': 'x',
    'x': 'c', 'c': 'v', 'v': 'b', 'b': 'n', 'n': 'm',
    'm': 'q', 'q': 'w', 'w': 'e', 'e': 'r', 'r': 't',
    't': 'y', 'y': 'u', 'u': 'i', 'i': 'o', 'o': 'p',
    'p': 'a'
}

letter = input()
print(keyboard[letter])","0.0"
"d949e12a-1807-4b82-a4ab-c1a178a79888","k = input()
temp = []
result = """"
difference = 0
for i in k:
    temp.append(int(i))
summ = sum(temp)
if(summ<10):
    difference = 10 - summ
temp.append(difference)
for i in range(len(temp)):
    result += str(temp[i])
print(result)","0.0"
"d949e12a-1807-4b82-a4ab-c1a178a79888","def sum_of_digits(n):
    return sum(int(digit) for digit in str(n))
k = int(input())
ydivitelnoechislo = []
number = 1
while len(ydivitelnoechislo) < k:
    if sum_of_digits(number) == 10:
        ydivitelnoechislo.append(number)
    number += 1
ydivitelnoechislo.sort()
print(ydivitelnoechislo[k-1])
","0.0"
"e16baab9-5d32-479d-877e-04518a247380","nr = list(map(int, input().split()))
n=nr[0]
r=nr[1]
d = list(map(int, input().split()))

i=0
k=1
s=0

while (k<len(d) and i<len(d)-1):
    if d[k]-d[i] <= r:
        k += 1

    else:
        s += n - k
        i += 1


print(s)","0.0"
"39674b7f-1b5d-40b8-aa5c-02f2ac4a2a4b","a = int(input())
q1 = [['####'], ['#  #'], ['#  #'], ['#  #'], ['####']]
q2 = [['   #'], [' # #'], ['#  #'], ['   #'], ['   #']]
aaa = 0
aa = []
if a == 0:
    for iii in q1:
        print(' '.join(iii))
else:
    while a > 0:
        aaa = a%2
        aa.append(str(aaa))
        a = a//2
    aa = aa[::-1]
    for l in range(5):
        for i in range(len(aa)):
            if aa[i]=='1':
                print(*q2[l], end=' ')
            else:
                print(*q1[l], end=' ')
        print()","0.0"
"d949e12a-1807-4b82-a4ab-c1a178a79888","k = input()
temp = []
result = """"
difference = 0
for i in k:
    temp.append(int(i))
summ = sum(temp)
if(summ<10):
    difference = 10 - summ
temp.append(difference)
for i in range(len(temp)):
    result += str(temp[i])
print(int(result))
","0.0"
"aeb122ea-bb7f-44ee-93c8-65ead3d4f5f3","a,b,=map(int, input().split())
c=0
d=0
while d+b+5*c<236:
    if c<a:
        c=c+1
        s=5*c
        d=s+d
    else:
        d=999
print(c)","0.0"
"5eebb219-dec9-41ce-83c6-efc4a4670acc","keyboard = {
    'a': 's', 's': 'd', 'd': 'f', 'f': 'g', 'g': 'h',
    'h': 'j', 'j': 'k', 'k': 'l', 'l': 'z', 'z': 'x',
    'x': 'c', 'c': 'v', 'v': 'b', 'b': 'n', 'n': 'm',
    'm': 'q', 'q': 'w', 'w': 'e', 'e': 'r', 'r': 't',
    't': 'y', 'y': 'u', 'u': 'i', 'i': 'o', 'o': 'p',
    'p': 'a'
}

letter = input()
print(keyboard[letter])","0.0"
"a4accdf7-f726-49d2-b19a-aeb590224402","n = int(input())
c = 0
for i in range(10**(n-1), 10**n):
    h = str(i)
    flag = True
    for j in range(n-1):
        if int(h[j+1]) >int(h[j]):
            flag = False
            continue
    if flag:
        c += 1
print(c+1)","0.0"
"d949e12a-1807-4b82-a4ab-c1a178a79888","k = input()
temp = []
result = """"
difference = 0
for i in k:
    temp.append(int(i))
summ = sum(temp)
if(summ<10):
    difference = 10 - summ
    temp.append(difference)
for i in range(len(temp)):
    result += str(temp[i])
print(int(result))
","0.0"
"c2081cad-a682-43e2-8960-081ef8963a37","red, blue = map(int, input().split())

razn = min(red, blue)
red -= razn
blue -= razn

odinak = 0
odinak += red // 2
odinak += blue // 2
print(razn, odinak)","0.0"
"027966cc-bba6-4e6a-83bf-ea3f730fb59d","a = int(input())
s = input()
l = []
k=0
for i in range(a-1):
    if s[i:i+2] not in l:
        l.append(s[i:i+2])
        k+=1
print(k)
","0.0"
"02bc07a3-d63a-4896-b585-e74c06bfc7f2","a = list(map(int, input().split("" "")))
b = list(map(int, input().split("" "")))
q=0
for i in range(len(b)):
    q=q+b[i]
if q<0:
    q=q*-1
print((q+a[1]-1)//a[1])
","0.0"
"7aef5f21-3d8a-4711-9507-28bcb1b28522","a = 4
n = 1
nn = 0
b = int(input())
while n < b:
    n += 1
    a += 3
    if not n < b:
        break
    n += nn
    a += 2 * nn
    if not n < b:
        break
    n += 1
    a += 3
    if not n < b:
        break
    n += nn
    a += 2 * nn
    nn += 1
    if not n < b:
        break
    n += 1
    a += 2
if b == n:
    print (a)
else:
    print (a - (n - b) * 2)","0.0"
"a4accdf7-f726-49d2-b19a-aeb590224402","n = int(input())
c = 0
for i in range(10**(n-1), 10**n):
    h = str(i)
    flag = True
    for j in range(n-1):
        if int(h[j+1]) >int(h[j]):
            flag = False
            break
    if flag:
        c += 1
print(c+1)","0.0"
"027966cc-bba6-4e6a-83bf-ea3f730fb59d","n = int(input())
string = input()

arr = []

for i in range(0, len(string) - 1):
    if string[i:i + 2] not in arr:
        arr.append(string[i:i+2])

arr = set(arr)

print(len(arr))","0.0"
"5895fc4e-b515-464a-a0e2-697d86bf8783","a = input()
b = a.split(' ')
c = b 
c.remove(b[0])
n = max(c)
f = min(c)
q = ''
for i in range(len(c)):
    if int(c[i]) >= int(n):
        c[i] = int(f)
for i in range(len(c)):
    q += str(c[i]) + ' '
print(q)","0.0"
"a4accdf7-f726-49d2-b19a-aeb590224402","

def counter(k, n):
    if n == 1:
        return 10-k
    s = 0
    for i in range(k, 10):
        s += counter(i, n-1)
    return s


n = int(input())
print(counter(0, n))","0.0"
"c2081cad-a682-43e2-8960-081ef8963a37","a, b = map(int, input().split())
a1 = min(a, b)
a2 = (max(a, b) - min(a, b)) // 2

print(a1, a2)
","0.0"
"6824fb27-2339-421d-85db-60758b59cddc","n = int(input())
cnt = 0
while n > 0:
    if n >= 5:
        cnt+= n//5
        n%= 5
    elif n >= 2:
        cnt += n //2
        n%=2
    else:
        cnt += n
        n = 0
print(cnt)
","0.0"
"7aef5f21-3d8a-4711-9507-28bcb1b28522","n = int(input())
a,b = 1, 0
s=4
n-=1
while n!=0:
    if n<=max(a, b):
        s+=n*2+1
        break
    else:
        s+=2*a+1
        if b==0:
            n-=a
            a+=1
            b=1
        else:
            n-=a
            b=0
print(s)","0.0"
"6824fb27-2339-421d-85db-60758b59cddc","N = int(input())

count = 0
while N > 0:
    if N >= 5:
        N -= 5
    elif N >= 2:
        N -= 2
    else:
        N -= 1
    count += 1

print(count)
","0.0"
"6824fb27-2339-421d-85db-60758b59cddc","N = int(input())

flasks_count = 0
current_length = 1

while current_length < N:
    if N - current_length >= 5:
        flasks_count += 1
        current_length *= 5
    elif N - current_length >= 2:
        flasks_count += 1
        current_length *= 2
    else:
        flasks_count += 1
        current_length += 1

print(flasks_count)","0.0"
"a4accdf7-f726-49d2-b19a-aeb590224402","n = int(input())
d = 1
for i in range(2, 10):
    d *= i
c = 1
for i in range(n+9, n, -1):
    c *= i
print(c//d)","0.0"
"11d7d14b-eb4a-4dd7-94c1-67a03264c424","n=int(input())
a=list(map(int,input().split()))
s=0
mi=1000000000000000000000000000
for i in a:
    s+=i
    if i%2==1 and i<mi:
        mi=i
if s%2==1:
    s=s-mi
print(s)
","0.0"
"d949e12a-1807-4b82-a4ab-c1a178a79888","q=int(input())
w=10
w1=10
while q!=0:
    w=w+9
    w1=w
    s=0
    while w1>0:
        s=s+w1%10
        w1=w1//10
    if w%10!=0 and s==10:
        q=q-1
print(w)","0.0"
"17c6577a-b831-485d-ba22-fb47923019b4","n = int(input())
w = (n+1)*2
A  = [ ]

for i in range(w):
   A.append([])
   for x in range(w):
       d = n - abs(x-n) - abs(i-n)
       A[i].append( d if d > -1 else "" "")

for l in A:
    print(*l,sep=' ')
","0.0"
"39674b7f-1b5d-40b8-aa5c-02f2ac4a2a4b","n=int(input())
k=''
if n==0:
    print('#### ')
    print('#  # ')
    print('#  # ')
    print('#  # ')
    print('#### ')
else:
    while n>0:
        k=k+str(n%2)
        n=n//2
    k1=''
    k=str(k)
    u=len(k)
    str1=''
    str2=''
    str3=''
    str4=''
    str5=''
    for i in range(u):
        k1+=k[u-1-i]
    k=k1
    for i in range(u):
        if k1[i]=='1':
            str1 += '   # '
            str2 += ' # # '
            str3 += '#  # '
            str4 += '   # '
            str5 += '   # '
        else:
            str1 += '#### '
            str2 += '#  # '
            str3 += '#  # '
            str4 += '#  # '
            str5 += '#### '
    print(str1)
    print(str2)
    print(str3)
    print(str4)
    print(str5)","0.0"
"a4accdf7-f726-49d2-b19a-aeb590224402","data = {}

def counter(k, n):
    global data
    try:
        return data[k,n]
    except KeyError:
        if n == 1:
            data[k, n] = 10-k
            return 10-k
        s = 0
        for i in range(k, 10):
            s += counter(i, n-1)
        data[k, n] = s
        return s


n = int(input())
print(counter(0, n))","0.0"
"c2081cad-a682-43e2-8960-081ef8963a37","a = [int(i) for i in input().split()]
print(min(a),abs(a[0] - a[1])//2,sep=' ')
","0.0"
"8381a3f6-aaba-448f-b65f-50117785adf7","import math
n, m, a = map(int, input().split())
h = math.ceil(n/a)  
v= math.ceil(m/a)    
r = h * v  
print(r)","0.0"
"39674b7f-1b5d-40b8-aa5c-02f2ac4a2a4b","a = int(input())
c = ''
d = ''
e = ''
f = ''
g = ''
if a == 0:
    print('####')
    print('#  #')
    print('#  #')
    print('#  #')
    print('####')
elif a == 1:
    print('   #')
    print(' # #')
    print('#  #')
    print('   #')
    print('   #')
else:
    b = ''
    while a > 0:
        b = str(a%2) + b
        a = a//2
    for i in range(len(b)):
        if int(b[i]) == 0:
            c = c +' ####'
            d = d +' #  #'
            e = e +' #  #'
            f = f +' #  #'
            g = g +' ####'
        else:
            c = c +'    #'
            d = d +'  # #'
            e = e +' #  #'
            f = f +'    #'
            g = g +'    #'
    print(c)
    print(d)
    print(e)
    print(f)
    print(g)","0.0"
"8381a3f6-aaba-448f-b65f-50117785adf7","n,m,a=map(int, input().split())
x=0
y=0
if n%a!=0:
    x=n//a+1
else:
    x=n//a
if m%a!=0:
    y=m//a+1
else:
    y=m//a
print(x*y)

","0.0"
"bb650c26-e5ff-4faf-9447-76e7e6965b4d","def m(): return map(int, input().split())
def spisok ():
    a = input().split()
    for i in range (len(a)):
        a[i] = int(a[i])
    return a

n, k = m()
a = spisok()
for i in range (n - 1, -1, -1):
    if a[i] == 0:
        a.pop(i)
for i in range (len(a)):
    if k == 0:
        break
    if a[i] < 0:
        a[i] *= -1
        k -= 1
    else:
        break
b = min(a)
print (sum(a) if k % 2 == 0 else sum(a) - b * 2)","0.0"
"11d7d14b-eb4a-4dd7-94c1-67a03264c424","b=int(input())
s=input()
a=list(map(int, s.split()))
q=0
w=9999
for i in range(b):
    q=q+a[i]
    if a[i]%2!=0 and a[i]<w:
        w=a[i]
if q%2==0:
    print(q)
else:
    print(q-w)","0.0"
"17c6577a-b831-485d-ba22-fb47923019b4","n = int(input())
if n == 2:
    print(""""""    0
  0 1 0
0 1 2 1 0
  0 1 0
    0"""""")
elif n == 3:
    print(""""""      0
    0 1 0
  0 1 2 1 0
0 1 2 3 2 1 0
  0 1 2 1 0
    0 1 0
      0"""""")
elif n == 4:
    print(""""""    
        0
      0 1 0
    0 1 2 1 0
  0 1 2 3 2 1 0
0 1 2 3 4 3 2 1 0
  0 1 2 3 1 1 0
    0 1 2 1 0
      0 1 0
        0"""""")
elif n == 5:
    print(""""""   
          0
        0 1 0
      0 1 2 1 0
    0 1 2 3 2 1 0
  0 1 2 3 4 3 2 1 0
0 1 2 3 4 5 4 3 2 1 0
  0 1 2 3 4 3 2 1 0
    0 1 2 3 2 1 0
      0 1 2 1 0
        0 1 0
          0"""""")
elif n == 6:
    print(""""""   
            0
          0 1 0
        0 1 2 1 0
      0 1 2 3 2 1 0
    0 1 2 3 4 3 2 1 0
  0 1 2 3 4 5 4 3 2 1 0
0 1 2 3 4 5 6 5 4 3 2 1 0
  0 1 2 3 4 5 4 3 2 1 0
    0 1 2 3 4 3 2 1 0
      0 1 2 3 2 1 0
        0 1 2 1 0
          0 1 0
            0"""""")
elif n == 7:
    print(""""""            
              0
            0 1 0
          0 1 2 1 0
        0 1 2 3 2 1 0
      0 1 2 3 4 3 2 1 0
    0 1 2 3 4 5 4 3 2 1 0
  0 1 2 3 4 5 6 5 4 3 2 1 0
0 1 2 3 4 5 6 7 6 5 4 3 2 1 0
  0 1 2 3 4 5 6 5 4 3 2 1 0
    0 1 2 3 4 5 4 3 2 1 0
      0 1 2 3 4 3 2 1 0
        0 1 2 3 2 1 0
          0 1 2 1 0
            0 1 0
              0"""""")
elif n == 8:
    print(""""""            
                0
              0 1 0
            0 1 2 1 0
          0 1 2 3 2 1 0
        0 1 2 3 4 3 2 1 0
      0 1 2 3 4 5 4 3 2 1 0
    0 1 2 3 4 5 6 5 4 3 2 1 0
  0 1 2 3 4 5 6 7 6 5 4 3 2 1 0
0 1 2 3 4 5 6 7 8 7 6 5 4 3 2 1 0
  0 1 2 3 4 5 6 7 6 5 4 3 2 1 0
    0 1 2 3 4 5 6 5 4 3 2 1 0
      0 1 2 3 4 5 4 3 2 1 0
        0 1 2 3 4 3 2 1 0
          0 1 2 3 2 1 0
            0 1 2 1 0
              0 1 0
                0"""""")
elif n == 9:
    print(""""""            
                  0 
                0 1 0
              0 1 2 1 0
            0 1 2 3 2 1 0
          0 1 2 3 4 3 2 1 0
        0 1 2 3 4 5 4 3 2 1 0
      0 1 2 3 4 5 6 5 4 3 2 1 0
    0 1 2 3 4 5 6 7 6 5 4 3 2 1 0
  0 1 2 3 4 5 6 7 8 7 6 5 4 3 2 1 0
0 1 2 3 4 5 6 7 8 9 8 7 6 5 4 3 2 1 0
  0 1 2 3 4 5 6 7 8 7 6 5 4 3 2 1 0
    0 1 2 3 4 5 6 7 6 5 4 3 2 1 0
      0 1 2 3 4 5 6 5 4 3 2 1 0
        0 1 2 3 4 5 4 3 2 1 0
          0 1 2 3 4 3 2 1 0
            0 1 2 3 2 1 0
              0 1 2 1 0
                0 1 0
                  0"""""")","0.0"
"02bc07a3-d63a-4896-b585-e74c06bfc7f2","n, x = map(int, input().split())
n = list(map(int, input().split()))
q = 0
for i in range(len(n)):
    q = q + int(n[i])
if q%x==0:
    print(abs(q)//x)
else:
    print(abs(q)//x+1)","0.0"
"d949e12a-1807-4b82-a4ab-c1a178a79888","k = int(input())
n = 0
b=0
x = 0
while k>0:
    while b==0:
        x = 0
        n+=1
        z = n
        while z>0:
            x+=z%10
            z=z//10
        if x==10:
            k-=1
            break
print(n)","0.0"
"a4accdf7-f726-49d2-b19a-aeb590224402","from itertools import *

n = int(input())

b = 0
g = 0
for i in product('0123456789', repeat=n):
    s = ''.join(i)
    for x in range(len(s) - 1):
        if int(s[x]) > int(s[x+1]):
            b += 1
            break
    g += 1
print(g - b)
","0.0"
"17c6577a-b831-485d-ba22-fb47923019b4","n = int(input())
if n == 2:
    print(""""""    0
  0 1 0
0 1 2 1 0
  0 1 0
    0"""""")
elif n == 3:
    print(""""""      0
    0 1 0
  0 1 2 1 0
0 1 2 3 2 1 0
  0 1 2 1 0
    0 1 0
      0"""""")
elif n == 4:
    print(""""""    
        0
      0 1 0
    0 1 2 1 0
  0 1 2 3 2 1 0
0 1 2 3 4 3 2 1 0
  0 1 2 3 2 1 0
    0 1 2 1 0
      0 1 0
        0"""""")
elif n == 5:
    print(""""""   
          0
        0 1 0
      0 1 2 1 0
    0 1 2 3 2 1 0
  0 1 2 3 4 3 2 1 0
0 1 2 3 4 5 4 3 2 1 0
  0 1 2 3 4 3 2 1 0
    0 1 2 3 2 1 0
      0 1 2 1 0
        0 1 0
          0"""""")
elif n == 6:
    print(""""""   
            0
          0 1 0
        0 1 2 1 0
      0 1 2 3 2 1 0
    0 1 2 3 4 3 2 1 0
  0 1 2 3 4 5 4 3 2 1 0
0 1 2 3 4 5 6 5 4 3 2 1 0
  0 1 2 3 4 5 4 3 2 1 0
    0 1 2 3 4 3 2 1 0
      0 1 2 3 2 1 0
        0 1 2 1 0
          0 1 0
            0"""""")
elif n == 7:
    print(""""""            
              0
            0 1 0
          0 1 2 1 0
        0 1 2 3 2 1 0
      0 1 2 3 4 3 2 1 0
    0 1 2 3 4 5 4 3 2 1 0
  0 1 2 3 4 5 6 5 4 3 2 1 0
0 1 2 3 4 5 6 7 6 5 4 3 2 1 0
  0 1 2 3 4 5 6 5 4 3 2 1 0
    0 1 2 3 4 5 4 3 2 1 0
      0 1 2 3 4 3 2 1 0
        0 1 2 3 2 1 0
          0 1 2 1 0
            0 1 0
              0"""""")
elif n == 8:
    print(""""""            
                0
              0 1 0
            0 1 2 1 0
          0 1 2 3 2 1 0
        0 1 2 3 4 3 2 1 0
      0 1 2 3 4 5 4 3 2 1 0
    0 1 2 3 4 5 6 5 4 3 2 1 0
  0 1 2 3 4 5 6 7 6 5 4 3 2 1 0
0 1 2 3 4 5 6 7 8 7 6 5 4 3 2 1 0
  0 1 2 3 4 5 6 7 6 5 4 3 2 1 0
    0 1 2 3 4 5 6 5 4 3 2 1 0
      0 1 2 3 4 5 4 3 2 1 0
        0 1 2 3 4 3 2 1 0
          0 1 2 3 2 1 0
            0 1 2 1 0
              0 1 0
                0"""""")
elif n == 9:
    print(""""""            
                  0 
                0 1 0
              0 1 2 1 0
            0 1 2 3 2 1 0
          0 1 2 3 4 3 2 1 0
        0 1 2 3 4 5 4 3 2 1 0
      0 1 2 3 4 5 6 5 4 3 2 1 0
    0 1 2 3 4 5 6 7 6 5 4 3 2 1 0
  0 1 2 3 4 5 6 7 8 7 6 5 4 3 2 1 0
0 1 2 3 4 5 6 7 8 9 8 7 6 5 4 3 2 1 0
  0 1 2 3 4 5 6 7 8 7 6 5 4 3 2 1 0
    0 1 2 3 4 5 6 7 6 5 4 3 2 1 0
      0 1 2 3 4 5 6 5 4 3 2 1 0
        0 1 2 3 4 5 4 3 2 1 0
          0 1 2 3 4 3 2 1 0
            0 1 2 3 2 1 0
              0 1 2 1 0
                0 1 0
                  0"""""")","0.0"
"6824fb27-2339-421d-85db-60758b59cddc","N=int(input())
if N==1:
    print(0)
else:
    print(N-1)","0.0"
"d949e12a-1807-4b82-a4ab-c1a178a79888","q=int(input())
w=10
w1=10
while q!=0:
    w=w+9
    w1=w
    s=0
    while w1>0:
        s=s+w1%10
        w1=w1//10
    if s==10:
        q=q-1
print(w)","0.0"
"a40047cc-77a1-4a37-9e28-a61947b07df8","
n = int(input())
a = sorted(map(int, input().split()))
b = sorted(map(int, input().split()))
s = 0
for i in range(n-1, -1,-1):
    s += abs(a[i]-b[i])
print(s)","0.0"
"027966cc-bba6-4e6a-83bf-ea3f730fb59d","n= int(input())
st=input()
a=set()
for i in range(len(st)-1):
    a.add(st[i:i+2])
print(len(a))

","0.0"
"8381a3f6-aaba-448f-b65f-50117785adf7","m,n,a=map(int,input().split())
k=0
z=0
if max(m,n)%a==0:
    k=max(m,n)//a
else:
     k=max(m,n)//a+1
if min(m,n)%a==0:
    z=min(m,n)//a
else:
     z=min(m,n)//a+1
print(k*z)
","0.0"
"c2081cad-a682-43e2-8960-081ef8963a37","import math
a,b=map(int,input().split())
if a>b:
    min=b
    max=a
else:
    min=a
    max=b
k=math.floor((max-min)/2)
print(min,k)","0.0"
"d949e12a-1807-4b82-a4ab-c1a178a79888","a = int(input())
number = 18
summ = 0
count = 0
while count != a:
    number += 1
    summ = 0
    for i in range(len(str(number))):
        summ += int(str(number)[i])
    if summ == 10:
        count += 1
print(number)","0.0"
"02bc07a3-d63a-4896-b585-e74c06bfc7f2","n,x=list(map(int, input().split()))
list = list(map(int, input().split()))
sum=0
for i in range(n):
    sum+=list[i]
if abs(0-sum)%x==0:
    print(abs(0-sum)//x)
else:
    print(abs(0-sum)//x+1)","0.0"
"a4accdf7-f726-49d2-b19a-aeb590224402","n = int(input())

def f(k):
    l=1
    for i in range(n+9, n, -1):
        l*=i
    return l
t=2*3*4*5*6*7*8*9

print(int(f(n)/t))","0.0"
"6824fb27-2339-421d-85db-60758b59cddc","N=int(input())
if N==1:
    print(0)
elif N%10==0:
    print(N//10*2)
else:
    print(N-1)
    ","0.0"
"02bc07a3-d63a-4896-b585-e74c06bfc7f2","a,b=[int(i) for i in input().split()]
A=[int(i) for i in input().split()]
if sum(A)==0:
    print(0)
if abs(sum(A))<=b:
    print(1)
else:
    nado=(-1*(sum(A)))
    print(nado//b+1) if nado%b!=0 else print(nado//b)","0.0"
"02bc07a3-d63a-4896-b585-e74c06bfc7f2","import math
n, x = map(int, input().split())
s = list(map(int, input().split()))
o = 0
p = 0
for i in range(len(s)):
    if s[i] > 0:
        p += s[i]
    else:
        o += s[i]
print(abs((abs(p) - abs(o)) // x))","0.0"
"7aef5f21-3d8a-4711-9507-28bcb1b28522","import math
from math import sqrt


def f(x, y):
    return x * (y + 1) + y * (x + 1)


n = int(input())
m = math.inf
for i in range(1, int(sqrt(n)) + 1):
    x = i
    y = n // i
    if n % i != 0:
        t = f(x, y) + f(1, n % i)
        m = min(m, t)
    else:
        m = min(m, f(x, y))
print(m)
","0.0"
"5eebb219-dec9-41ce-83c6-efc4a4670acc","a = input()
s = 'qwertyuiopasdfghjklzxcvbnm '
for i in range(len(s)):
    if s[i] == a:
        x = s[i+1]
        if i+1 < 26:
            print(x)
        else:
            print('q')","0.0"
"aeb122ea-bb7f-44ee-93c8-65ead3d4f5f3","w=0
n,k=map(int,input().split())
s=240-k
for i in range(1,n+1):
    if s-i*5>=0:
        s=s-i*5
        w+=1
    else:
        break
print(w)
","0.0"
"5eebb219-dec9-41ce-83c6-efc4a4670acc","a = input()
if a == 'q':
    print('w')
if a == 'w':
    print('e')
if a == 'e':
    print('r')
if a == 'r':
    print('t')
if a == 't':
    print('y')
if a == 'y':
    print('u')
if a == 'u':
    print('i')
if a == 'i':
    print('o')
if a == 'o':
    print('p')
if a == 'p':
    print('a')
if a == 'a':
    print('s')
if a == 's':
    print('d')
if a == 'd':
    print('f')
if a == 'f':
    print('g')
if a == 'g':
    print('h')
if a == 'h':
    print('j')
if a == 'j':
    print('k')
if a == 'k':
    print('l')
if a == 'l':
    print('z')
if a == 'z':
    print('x')
if a == 'x':
    print('c')
if a == 'c':
    print('v')
if a == 'v':
    print('b')
if a == 'b':
    print('n')
if a == 'n':
    print('m')
if a == 'm':
    print('q')","0.0"
"02bc07a3-d63a-4896-b585-e74c06bfc7f2","import math
n, x = map(int, input().split())
s = list(map(int, input().split()))
o = 0
p = 0
for i in range(len(s)):
    if s[i] > 0:
        p += s[i]
    else:
        o += s[i]
print(math.ceil(abs((abs(p) - abs(o)) / x)))","0.0"
"6824fb27-2339-421d-85db-60758b59cddc","N=int(input())
if N==1:
    print(0)
elif N%10==0:
    print(N//10*2)
elif N%2==0:
    print(N//2)
elif N%5==0:
    print(N//5)
else:
    print(N-1)
    ","0.0"
"5eebb219-dec9-41ce-83c6-efc4a4670acc","a = input()
if a == 'q':
    print('w')
if a == 'w':
    print('e')
if a == 'e':
    print('r')
if a == 'r':
    print('t')
if a == 't':
    print('y')
if a == 'y':
    print('u')
if a == 'u':
    print('i')
if a == 'i':
    print('o')
if a == 'o':
    print('p')
if a == 'p':
    print('a')
if a == 'a':
    print('s')
if a == 's':
    print('d')
if a == 'd':
    print('f')
if a == 'f':
    print('g')
if a == 'g':
    print('h')
if a == 'h':
    print('j')
if a == 'j':
    print('k')
if a == 'k':
    print('l')
if a == 'l':
    print('z')
if a == 'z':
    print('x')
if a == 'x':
    print('c')
if a == 'c':
    print('v')
if a == 'v':
    print('b')
if a == 'b':
    print('n')
if a == 'n':
    print('m')
if a == 'm':
    print('q')
    ","0.0"
"6824fb27-2339-421d-85db-60758b59cddc","a= int(input())
k=0
while a !=1 :
    if a % 5 ==0:
        a=a//5
        k+=1
    if a%2==0:
        a=a//2
        k+1
    if a !=1:
        a=a-1
        k+=1
print(k+1)
","0.0"
"a4accdf7-f726-49d2-b19a-aeb590224402","n = int(input())
data0 = [1] * 10
for i in range(n-1):
    datan = [0] * 10
    for q in range(10):
        s = 0
        for i in range(q+1):
            s += data0[i]
        datan[q] = s
    
    data0 = datan
    
print(sum(data0))","0.0"
"17c6577a-b831-485d-ba22-fb47923019b4","n=int(input())+1
m=['0']*(n+1)
for i in range(1,n+1):
    m[i]=m[i-1]+' '+str(i)
m1=[]
for i in range(n):
    s=' '*(n-i-1)+' '+m[i]+m[i][-2::-1]+' '+' '*(n-i-1)
    if i!=n-1:
        m1.append(s[:-1])
    print(s[:-1])
for i in range(-1,-len(m1)-1,-1):
    print(m1[i])
","0.0"
"bb650c26-e5ff-4faf-9447-76e7e6965b4d","n, k=map(int, input().split())
a=list(map(int, input().split()))
for i in range(n):
    if not k or a[i]>=0:
        break
    k-=1
    a[i]*=-1
if k%2:
    a[i]*=-1
s=sum(a)
print(s)","0.0"
"5eebb219-dec9-41ce-83c6-efc4a4670acc","a=['q','w','e','r','t','y','u','i','o','p','a','s','d','f','g','h','j','k','l','z','x','c','v','b','n','m']
b=input()
c=a.index(b)
print(a[c+1])
","0.0"
"d949e12a-1807-4b82-a4ab-c1a178a79888","k = int(input())
c = k // 10000 + k // 1000 % 10 + k // 100 % 10 + k // 10 % 10 + k % 10
print(10 * k + (10 - c))","0.0"
"6824fb27-2339-421d-85db-60758b59cddc","n=int(input())
d=1
c=0
while n>d:
    c+=1
    d=d*5
d=d//5
c=c-1
print(c+n-d)","0.0"
"8381a3f6-aaba-448f-b65f-50117785adf7","import math
n, m, a = input().split()
n = int(n)
m = int(m)
a = int(a)
print(math.ceil(n/a)*math.ceil(m/a))","0.0"
"5eebb219-dec9-41ce-83c6-efc4a4670acc","a=['q','w','e','r','t','y','u','i','o','p','a','s','d','f','g','h','j','k','l','z','x','c','v','b','n','m']
b=input()
c=a.index(b)
if b != 'm':
    print(a[c+1])
else:
    print('q')","0.0"
"6824fb27-2339-421d-85db-60758b59cddc","def a (N):
    count = 0
    while N > 0:
        if N >= 5:
            count += N // 5
            N = N % 5
        elif N >= 2:
            count += N // 2
            N = N % 2
        else:
            count += N
            N = 0
    return count
N = int(input())
print(a(N))","0.0"
"42d47feb-cba9-4d18-8ccc-2c20605db82d","a = [int(i) for i in input().split()]
print(a[0] * (a[1] // 2))","0.0"
"e16baab9-5d32-479d-877e-04518a247380","n, r = map(int, input().split())
m = list(map(int, input().split()))
 
i, j, c1 = 0, 1, 0
 
while j < len(m) and i < len(m) - 1:
    if m[j] - m[i] <= r:
        j += 1
    else:
        c1 += n - j
        i += 1
print(c1)
","0.0"
"6824fb27-2339-421d-85db-60758b59cddc","n = int(input())
a = 1
q = 0
b = n
while a != n:
    if n % 5 == 0:
        n = n // 5
        q += 1
    elif n%2 == 0:
        n = n//2
        q+=1
    else:
        n = n - 1
        q += 1
if b != 6:
    print(q)
else:
    print(2)","0.0"
"d949e12a-1807-4b82-a4ab-c1a178a79888","k=int(input())
s=10
for i in range(k):
    s+=9
    if s%10==0:
        s+=9
print(s)
","0.0"
"6824fb27-2339-421d-85db-60758b59cddc","n=int(input())
d=1
c=0
while n>d:
    c+=1
    d=d*5
d=d//5
c=c-1
if d*2==n:
    if d**4==n:
        print(c+2)
    else:
        print(c+1)
else:
    print(c+n-d)","0.0"
"6824fb27-2339-421d-85db-60758b59cddc","n = int(input())
k = 0
while n != 1:
    if n % 10 in [1, 3, 7, 9]:
        n -= 1
    elif n % 5 == 0:
        n //= 5
    elif n % 2 == 0:
        n //= 2
    else:
        n -= 1
    k += 1
print(k)
","0.0"
"bb650c26-e5ff-4faf-9447-76e7e6965b4d","def m(): return map(int, input().split())
def spisok ():
    a = input().split()
    for i in range (len(a)):
        a[i] = int(a[i])
    return a

n, k = m()
a = spisok()
for i in range (n - 1, -1, -1):
    if a[i] == 0:
        a.pop(i)
for i in range (len(a)):
    if k == 0:
        break
    if a[i] < 0:
        a[i] *= -1
        k -= 1
    else:
        break
if len(a) == 0:
    print (0)
else:

    b = min(a)
    print (sum(a) if k % 2 == 0 else sum(a) - b * 2)","0.0"
"8381a3f6-aaba-448f-b65f-50117785adf7","m, n, a=map(int, input().split())
e=0
s=0
if min(m,  n)%a==0:
    e=min(m, n)//a
else:
    e=min(m, n)//a+1
if max(m,  n)%a==0:
    s=max(m, n)//a
else:
    s=max(m, n)//a+1
print(s*e)","0.0"
"8381a3f6-aaba-448f-b65f-50117785adf7","a = input()

b = a.split(' ')
x = int(b[0])
y = int(b[2])
z = int(b[1])
n=0
ny=0
while x >= 0:
    x = x-y
    n += 1

while z >= 0:
    z = z-y
    ny += 1
print(n*ny)","0.0"
"7aef5f21-3d8a-4711-9507-28bcb1b28522","n = int(input())
k = int(n**0.5)
p = n-k**2
s = 2*k*(k+1)
if p>0:
    if p > k:
        s += 6 + (p-2)*2
    else:
        s += 3 + (p-1)*2


print(s)","0.0"
"6824fb27-2339-421d-85db-60758b59cddc","n = int(input())
a = 1
q = 0
b = n
while a != n:
    if n % 5 == 0:
        n = n // 5
        q += 1
    elif n%2 == 0:
        n = n//2
        q+=1
    else:
        n = n - 1
        q += 1
if (b != 6) and (b != 24):
    print(q)
elif b==24:
    print(7)
else:
    print(q-1)","0.0"
"e16baab9-5d32-479d-877e-04518a247380","n, r = map(int, input().split())
m = list(map(int, input().split()))
 
i, j, c1 = 0, 1, 0
 
while j < len(m) and i < len(m) - 1:
    if m[j] - m[i] <= r:
        j += 1
    else:
        c1 += n - j
        i += 1
print(c1)","0.0"
"6824fb27-2339-421d-85db-60758b59cddc","def a (N):
    c = 0
    while N > 0:
        if N >= 5:
            c += N // 5
            N = N % 5
        elif N >= 2:
            c += N // 2
            N = N % 2
        else:
            c += N
            N = 0
    return c
N = int(input())
print(a(N))
","0.0"
"6824fb27-2339-421d-85db-60758b59cddc","n = int(input())
k = 0
while n != 1:
    if n % 5 == 0:
        n //= 5
    elif n % 2 == 0:
        n //= 2
    else:
        n -= 1
    k += 1
print(k)
","0.0"
"6824fb27-2339-421d-85db-60758b59cddc","q=int(input())
q1=q
w=1
e=0
while w<0.2*q:
    q1=q1//5
    w=w*5
    e=e+1

while w<0.5*q:
    q1=q1//2
    w=w*2
    e = e + 1

while w!=q:
    w=w+1
    e = e + 1

print(e)","0.0"
"bb650c26-e5ff-4faf-9447-76e7e6965b4d","n, k = map(int, input().split())
a = list(map(int, input().split()))

for i in range(n):
    if (not k) or (a[i] >= 0):
        break
    k -= 1
    a[i] *= -1

if k % 2:
    a[i] *= -1

s = sum(a)

print(s)","0.0"
"5895fc4e-b515-464a-a0e2-697d86bf8783","a = list(map(int, input().split("" "")))
b = a[0]
a.pop(0)
q=max(a)
w=min(a)
for i in range(len(a)):
    if a[i]==q:
        a[i]=w
print(*a)","0.0"
"d949e12a-1807-4b82-a4ab-c1a178a79888","n = int(input())
if 1<=n<=9:
    print(10+9*n)","0.0"
"39674b7f-1b5d-40b8-aa5c-02f2ac4a2a4b","a=int(input())
b = bin(a)[2:]
c=''
for i in range(1,6):
    
    for j in range(len(b)):
        if i==1:
            if b[j]=='0':
                c+='#### '
            if b[j]=='1':
                c+='   # '
       
        elif i==2:
            if b[j]=='0':
                c+='#  # '
            if b[j]=='1':
                c+=' # # '
        elif i==3:
            if b[j]=='0':
                c+='#  # '
            if b[j]=='1':
                c+='#  # '
        elif i==4:
            if b[j]=='0':
                c+='#  # '
            if b[j]=='1':
                c+='   # '
        elif i==5:
            if b[j]=='0':
                c+='#### '
            if b[j]=='1':
                c+='   # '
    c=c+'
'
print(c)
","0.0"
"d949e12a-1807-4b82-a4ab-c1a178a79888","k=int(input())
s=10
for i in range(k):
    if s<=99:
        s+=9
    if s<=999 and s>100:
        s+=90
    if s<=9999 and s>1000:
        s+=900
    if s<=99999 and s>10000:
        s+=9000
print(s)
","0.0"
"0f42de72-e8d1-4f41-8797-90a6cd184af9","x,y,z=map(int,input().split())
print(x*3+5*y+12*z)
","0.0"
"d949e12a-1807-4b82-a4ab-c1a178a79888","def sss(ch):
    s=0
    for i in range(len(str(ch))):
        s+=int(str(ch)[i])
    return s
a=int(input())
a1=10
if a>=6000:
    a1=2230003
    a-=6000
elif a>=8000:
    a1=9010000
    a-=2000
while a>0:
    a1+=9
    if sss(a1)==10:
        a-=1
print(a1)","0.0"
"d949e12a-1807-4b82-a4ab-c1a178a79888","k = int(input())
l = 0
a = 18
if k>=100:
    l = 99
    a = 1422
while l<k:
    a += 1
    if a%3==0:
        a+=1
    s = 0
    for i in range(len(str(a))):
       s += int(str(a)[i])
       if s>10:
            break
    if s==10:
        l+=1
print(a)","0.0"
"6824fb27-2339-421d-85db-60758b59cddc","n=int(input())
d=1
c=0
while n>d:
    c+=1
    d=d*5
d=d//5
c=c-1
if d*2==n:
    if d**4==n:
        print(c+2)
    else:
        print(c+1)
else:
    if d*2+1==n:
        print(c+2)
    elif d*4+1==n:
        print(c+3)
    elif d*4+3:
        print(c+4)
    else:
        print(c+n-d)","0.0"
"d949e12a-1807-4b82-a4ab-c1a178a79888","k=int(input())
s=10
for i in range(k):
    if s<=99:
        s+=9
    if s<=999 and s>99:
        s+=90
    if s<=9999 and s>999:
        s+=900
    if s<=99999 and s>9999:
        s+=9000
print(s)
","0.0"
"d949e12a-1807-4b82-a4ab-c1a178a79888","k = int(input())
l = 0
a = 18
while l<k:
    a += 1
    if a%3==0:
        a+=1
    s = 0
    for i in range(len(str(a))):
       s += int(str(a)[i])
       if s>10:
            break
    if s==10:
        l+=1
print(a)","0.0"
"8381a3f6-aaba-448f-b65f-50117785adf7","n,m,a = map(int,input().split())
print(((n//a+1)*(m//a+1)))
","0.0"
"a4accdf7-f726-49d2-b19a-aeb590224402","from itertools import *
n=int(input())
kol=0
for i in product('0123456789', repeat=n):
    if ''.join(sorted(i))==''.join(i):
        kol+=1
print(kol)","0.0"
"e16baab9-5d32-479d-877e-04518a247380","n, r = map(int, input().split())
d = list(map(int, input().split()))
left, right = 0, 0
ans = 0
while left <= right:
    if d[right] - d[left] <= r:
        right += 1
    else:
        ans += n - right
        left += 1
    if right == n:
        break
print(ans)
","0.0"
"d949e12a-1807-4b82-a4ab-c1a178a79888","def sum(n):
    s = 0
    while n > 0:
        s += n % 10
        n //= 10
    return s

k = int(input())
cnt = 0
for i in range(19, 11*10**6, 9):
    if sum(i) == 10:
        cnt += 1
        if cnt == k:
            print(i)
            break","0.0"
"d949e12a-1807-4b82-a4ab-c1a178a79888","def sum(n):
    s = 0
    while n > 0:
        s += n % 10
        n //= 10
    return s

k = int(input())
cnt = 0
for i in range(19, 11*10**6, 9):
    if sum(i) == 10:
        cnt += 1
        if cnt == k:
            print(i)
            break","0.0"
"e02095cd-3f62-4005-a067-a9da53d342bb","n = int(input())

a = [int(s) for s in input().split()]
b = [int(s) for s in input().split()]

counter = 0
sum_a = 0
sum_b = 0

for i in range(n):
    if sum_a == sum_b and a[i] == b[i]:
        counter += a[i]
    sum_a += a[i]
    sum_b += b[i]

print(counter)","0.0"
"e16baab9-5d32-479d-877e-04518a247380","n,w=map(int,input().split())
a=list(map(int,input().split()))
h=[]
for i in range(1,len(a)):
    b=a[i]-a[i-1]
    h.append(b)
l=0
d=0
r=0
s=0
k=0
while r<len(h) or s>w:
    if l==r==len(h):
        break
    if s>w:
        k+=(len(h)-r+1)
        s-=h[l]
        l+=1
    elif s<=w:
        s+=h[r]
        r+=1
    if l==r==len(h):
        break
print(k)","0.0"
"aeb122ea-bb7f-44ee-93c8-65ead3d4f5f3","n,k=map(int,input().split())
k=240-k
a=0
t=0
for i in range(1,n+1):
    t=t+5*i
    if t>=k:
        break
    a+=1
print(a)","0.0"
"aeb122ea-bb7f-44ee-93c8-65ead3d4f5f3","n,k=map(int,input().split())
k=240-k
a=0
t=0
for i in range(1,n+1):
    t=t+5*i
    if t>k:
        break
    a+=1
print(a)","0.0"
"39674b7f-1b5d-40b8-aa5c-02f2ac4a2a4b","x01=""####""
x02=""#  #""
x11=""   #""
x12="" # #""
x13=""#  #""
x14=""   #""
x15=""   #""

n=int(input())
n2=list(bin(n)[2:])

s1=""""
for i in n2:
    if i=='1':
        s1+=x11+' '
    else:
        s1+=x01+' '

s2=""""
for i in n2:
    if i=='1':
        s2+=x12+' '
    else:
        s2+=x02+' '

s3=""""
for i in n2:
    if i=='1':
        s3+=x13+' '
    else:
        s3+=x02+' '

s4=""""
for i in n2:
    if i=='1':
        s4+=x14+' '
    else:
        s4+=x02+' '

s5=""""
for i in n2:
    if i=='1':
        s5+=x15+' '
    else:
        s5+=x01+' '        

print(s1)
print(s2)
print(s3)
print(s4)
print(s5.rstrip())","0.0"
"39674b7f-1b5d-40b8-aa5c-02f2ac4a2a4b","x01=""####""
x02=""#  #""
x11=""   #""
x12="" # #""
x13=""#  #""
x14=""   #""
x15=""   #""

n=int(input())
n2=list(bin(n)[2:])

s1=""""
for i in n2:
    if i=='1':
        s1+=x11+' '
    else:
        s1+=x01+' '

s2=""""
for i in n2:
    if i=='1':
        s2+=x12+' '
    else:
        s2+=x02+' '

s3=""""
for i in n2:
    if i=='1':
        s3+=x13+' '
    else:
        s3+=x02+' '

s4=""""
for i in n2:
    if i=='1':
        s4+=x14+' '
    else:
        s4+=x02+' '

s5=""""
for i in n2:
    if i=='1':
        s5+=x15+' '
    else:
        s5+=x01+' '        

print(s1)
print(s2)
print(s3)
print(s4)
print(s5)","0.0"
"8381a3f6-aaba-448f-b65f-50117785adf7","n, m, a=map(int, input().split())
from math import  *
print(ceil(m/a)*ceil(n/a))","0.0"
"d949e12a-1807-4b82-a4ab-c1a178a79888","k=int(input())
p=0
for i in range(19, 1111111112, 9):
    if sum( map(int,str(i)))==10:
        p+=1
    if p==k:
        print(i)
        break
    ","0.0"
"d949e12a-1807-4b82-a4ab-c1a178a79888","k=int(input())
p=0
for i in range(19, 1111111112, 9):
    if sum( map(int,str(i)))==10:
        p+=1
    if p==k:
        print(i)
        break
    ","0.0"
"15f19bc8-7be3-4a44-a7b1-fc7505badaed","t=int(input())
for i in range(t):
    s=input()
    if (s[0]=='p' or s[0]=='P') and (s[1]=='Y' or s[1]=='y') and (s[2]=='T' or s[2]=='t') and (s[3]=='H' or s[3]=='h') and (s[4]=='O' or s[4]=='o') and (s[5]=='N' or s[5]=='n'):
        print('YES')
    else:
        print('NO')
","0.0"
"15f19bc8-7be3-4a44-a7b1-fc7505badaed","t=int(input())
for i in range (t):
    s=input()
    if (s[0]=='P' or s[0]=='p') and (s[1]=='Y' or s[1]=='y') and (s[2]=='T' or s[2]=='t') and (s[3]=='H' or s[3]=='h') and (s[4]=='O' or s[4]=='o') and (s[5]=='N' or s[5]=='n'):
        print('YES')
    else:
        print('NO')","0.0"
"15f19bc8-7be3-4a44-a7b1-fc7505badaed","t=int(input())
for i in range(t):
	s=input()
	if (s[0]=='p' or s[0]=='P') and (s[1]=='y' or s[1]=='Y') and (s[2]=='t' or s[2]=='T') and (s[3]=='h' or s[3]=='H') and  (s[4]=='o' or s[4]=='O') and (s[5]=='n' or s[5]=='N'):
		print('YES')
	else:
		print(""NO"")","0.0"
"15f19bc8-7be3-4a44-a7b1-fc7505badaed","t=int(input())
for i in range (t):
    s=input()
    if (s[0]=='p'or s[0]=='P')and (s[1]=='y' or s[1]=='Y'):
        (s[2]=='t' or s[2]=='T')and (s[3]=='h' or s[3]=='H')
        (s[4]=='o' or s[4]=='O') and (s[5]=='n' or s[5]=='N')
        print('YES')
    else:
        print('NO')
","0.0"
"15f19bc8-7be3-4a44-a7b1-fc7505badaed","t=int(input())
for i in range (t):
    s=input()
    if (s[0]=='p'or s[0]=='P')and(s[1]=='y' or s[1]=='Y'):
        (s[2]=='t' or s[2]=='T')and(s[3]=='h' or s[3]=='H')
        (s[4]=='o' or s[4]=='O')and(s[5]=='n' or s[5]=='N')
        print('YES')
    else:
        print('NO')
","0.0"
"15f19bc8-7be3-4a44-a7b1-fc7505badaed","t=int(input())
for i in range(t):
    s=input()
    if (s[0]=='p' or s[0]=='P')and(s[1]=='Y' or s[1]=='y')and(s[2]=='T' or s[2]=='t')and(s[3]=='H' or s[3]=='h') and(s[4]=='O' or s[4]=='o') and(s[5]=='N' or s[5]=='n'):
        print('YES')
    else:
        print('NO')
","0.0"
"15f19bc8-7be3-4a44-a7b1-fc7505badaed","t=int(input())
for i in range (t):
    s=input()
    if (s[0]=='p'or s[0]=='P')and(s[1]=='y' or s[1]=='Y'):
        (s[2]=='t' or s[2]=='T')and(s[3]=='h' or s[3]=='H')
        (s[4]=='o' or s[4]=='O')and(s[5]=='n' or s[5]=='N')
        print('YES')
    else:
        print('NO')
","0.0"
"15f19bc8-7be3-4a44-a7b1-fc7505badaed","t=int(input())
for i in range (t):
    s=input()
    if (s[0]=='p'or s[0]=='P')and(s[1]=='y' or s[1]=='Y'):
        (s[2]=='t' or s[2]=='T')and(s[3]=='h' or s[3]=='H')
        (s[4]=='o' or s[4]=='O')and(s[5]=='n' or s[5]=='N')
        print('YES')
    else:
        print('NO')
","0.0"
"15f19bc8-7be3-4a44-a7b1-fc7505badaed","t=int(input())
for i in range(t):
    s=input()
    if (s[0]=='p'or s[0]=='P')and(s[1]=='y' or s[1]=='Y')and(s[2]=='t'or s[2]=='T')and(s[3]=='h' or s[3]=='H') and (s[4]=='o' or s[4]=='O')and(s[5]=='n'or s[5]=='N'):
        print('YES')
    else:
        print('NO')
","0.0"
"15f19bc8-7be3-4a44-a7b1-fc7505badaed","t=int(input())
for i in range(t):
    s=input()
    if (s[0]=='p' or s[0]=='P') and (s[1]=='y' or s[1]=='Y') and (s[2]=='t' or s[2]=='T') and (s[3]=='h' or s[3]=='H') and (s[4]=='o' or s[4]=='O') and (s[5]=='n' or s[5]=='N'):
        print('YES')
    else:
         print('NO')
","0.0"
"d949e12a-1807-4b82-a4ab-c1a178a79888","k=int(input())
x=19
for i in range(k-1):
    s=0
    x+=9
    xs=str(x)
    for i in range(len(xs)):
        s+=int(xs[i])
    if s!=10:
        x+=9
print(x)
","0.0"
"15f19bc8-7be3-4a44-a7b1-fc7505badaed","t=int(input())
for i in range(t):
    s=input()
    if (s[0]=='p' or s[0]=='P') and (s[1]=='y' or s[1]=='Y') and (s[2]=='t' or s[2]=='T') and (s[3]=='h' or s[3]=='H') and (s[4]=='o' or s[4]=='O') and (s[5]=='n' or s[5]=='N'):
        print('YES')
    else:
         print('NO')
","0.0"
"36d58b20-7fe1-452b-ac10-e1ed680aa6b3","n,k,t,c,d,p,nl,np=map(int,input().split())
s=k*t
m=c*d
kk=min(s//nl,m,p//np)
if kk%n==0:
    print(kk,n)
else:
    print(kk,kk%n)
","0.0"
"36d58b20-7fe1-452b-ac10-e1ed680aa6b3","n,k,t,c,d,p,nl,np=map(int,input().split())
s=k*t
m=s*d
kk=min(s//nl,m,p//np)
if kk%n==0:
      print(kk,n)
else:
     print(kk,kk%n)
","0.0"
"36d58b20-7fe1-452b-ac10-e1ed680aa6b3","n,k,t,c,d,p,nl,np=map(int,input().split())
s=k*t
m=c*d
kk=min(s//nl,m,p//np)
if kk%n==0:
    print(kk,n)
else:
    print(kk,kk%n)
","0.0"
"36d58b20-7fe1-452b-ac10-e1ed680aa6b3","n,k,t,c,d,p,nl,np=map(int,input().split())
s=k*t
m=c*d
r=min(s//n,m,p//np)
if r%n==0:
    print(r,n)
else:
    print(r,r%n)
","0.0"
"36d58b20-7fe1-452b-ac10-e1ed680aa6b3","n,k,t,c,d,p,nl,np=map(int,input().split())
s=k*t
m=c*d
kk=min(s//nl,m,p//np)
if kk%n==0:
    print(kk,n)
else:
    print(kk,kk%n)
","0.0"
"36d58b20-7fe1-452b-ac10-e1ed680aa6b3","n,k,t,c,d,p,nl,np=map(int,input().split())
s=k*t
m=c*d
kk=min(s//nl,m,p//np)
if kk%n==0:
    print(kk,n)
else:
    print(kk,kk%n)","0.0"
"36d58b20-7fe1-452b-ac10-e1ed680aa6b3","n,k,t,c,d,p,nl,np=map(int,input().split())
s=k*t
m=c*d
kk=min(s//nl,m,p//np)
if kk%n==0:
    print(kk,n)
else:
    print (kk,kk%n)
         
","0.0"
"36d58b20-7fe1-452b-ac10-e1ed680aa6b3","n,k,t,c,d,p,nl,np=map(int,input().split())
s=k*t
m=c*d
kk=min(s//nl,m,p//np)
if kk%n==0:
	print(kk,n)
else:
	print(kk,kk%n)","0.0"
"15f19bc8-7be3-4a44-a7b1-fc7505badaed","t=int(input())
for i in range(t):
    s=input()
    if (s[0]=='p' or s[0]=='P') and (s[1]=='y' or s[1]=='Y') and (s[2]=='t' or s[2]=='T') and (s[3]=='h' or s[3]=='H') and (s[4]=='o' or s[4]=='O') and (s[5]=='n' or s[5]=='N'):
        print('YES')
    else:
         print('NO')
","0.0"
"36d58b20-7fe1-452b-ac10-e1ed680aa6b3","n,k,t,c,d,p,nl,np=map(int,input().split())
s=k*t
m=c*d
kk=min(s//nl,m,p//np)
if kk%n==0:
    print(kk,n)
else:
    print(kk,kk%n)
","0.0"
"0024e95a-bf71-4dac-a246-626b5821e403","n1,p1,m1,t1,s1=map(int,input().split())
n2,p2,m2,t2,s2=map(int,input().split())
a1=p1+t1*m1+s1
b1=a1*n1
a2=p2+t2*m2+s2
b2=a2*n2    
if b1<b2:
    print(""Python"",b1)
elif b2<b1:
    print(""Pascal"",b2)
elif b1==b2:
    print(""Draw"",b1)
","0.0"
"36d58b20-7fe1-452b-ac10-e1ed680aa6b3","n,k,t,c,d,p,nl,np=map(int,input().split())
s=k*t
m=c*d
kk=min(s//nl,m,p//np)
if kk%n==0:
    print(kk,n)
else:
    print(kk,kk%n)
","0.0"
"0024e95a-bf71-4dac-a246-626b5821e403","n1,p1,m1,t1,s1=map(int,input().split())
n2,p2,m2,t2,s2=map(int,input().split())
a1=p1+t1*m1+s1
b1=a1*n1
a2=p2+t2*m2+s2
b2=a2*n2    
if b1<b2:
    print('Python',b1)
elif b2<b1:
    print('Pascal',b2)
elif b1==b2:
    print('Draw',b1)
","0.0"
"0024e95a-bf71-4dac-a246-626b5821e403","n1,p1,m1,t1,s1=map(int,input().split())
n2,p2,m2,t2,s2=map(int,input().split())
x1=n1*(p1+s1+m1*t1)
x2=n2*(p2+s2+m2*t2)
if x1<x2:
	print('Python',x1)
elif x1==x2:
	print('Draw',x1)
else:
	print('Pascal',x2)","0.0"
"0024e95a-bf71-4dac-a246-626b5821e403","n1,p1,m1,t1,s1=map(int,input().split())
n2,p2,m2,t2,s2=map(int,input().split())
x1=n1*(p1+s1+m1*t1)
x2=n2*(p2+s2+m2*t2)
if x1<x2:
    print('Python', x1)
else:
    print('Pascal', x2)
","0.0"
"0024e95a-bf71-4dac-a246-626b5821e403","n1,p1,m1,t1,s1=map(int,input().split())
n2,p2,m2,t2,s2=map(int,input().split())
x1=n1*(p1+s1+m1*t1)
x2=n2*(p2+s2+m2*t2)
if x1<x2:
    print('Python', x1)
elif x1==x2:
    print('Draw',x1)
else:
    print('Pascal', x2)
","0.0"
"0024e95a-bf71-4dac-a246-626b5821e403","n1,p1,m1,t1,s1=map(int,input().split())
n2,p2,m2,t2,s2=map(int,input().split())
a1=p1+t1*m1+s1
b1=a1*n1
a2=p2+t2*m2+s2
b2=a2*n2    
if b1<b2:
    print(""Python"",b1)
elif b2<b1:
    print(""Pascal"",b2)
elif b1==b2:
    print(""Draw"",b1)
","0.0"
"0024e95a-bf71-4dac-a246-626b5821e403","n1,p1,m1,t1,s1=map(int,input().split())
n2,p2,m2,t2,s2=map(int,input().split())
x1=n1*(p1+s1+m1*t1)
x2=n2*(p2+s2+m2*t2)
if x1<x2:
    print('Python',x1)
else:
    print('Pascal',x2)
if x1==x2:
    print('Draw',x1)","0.0"
"0024e95a-bf71-4dac-a246-626b5821e403","n1,p1,m1,t1,s1=map(int,input().split())
n2,p2,m2,t2,s2=map(int,input().split())
x1=n1*(p1+s1+m1*t1)
x2=n2*(p2+s2+m2*t2)
if x1<x2:
     print('Python',x1)
elif x1==x2:
          print('Draw',x1)
else:
                    print('Pascal',x2)
","0.0"
"0f42de72-e8d1-4f41-8797-90a6cd184af9","x,y,z=map(int,input().split())
print(x*3+y*5+z*12)","0.0"
"11d7d14b-eb4a-4dd7-94c1-67a03264c424","n=int(input())
a=list(map(int,input().split()))
s=sum(a)
if s%2==0:
	print(s)
else:
	m=10000000000
	for i in range(n):
		if a[i]%2!=0:
			m=min(m,a[i])
	print(s-m)","0.0"
"7d8fcbed-1f16-4d19-8a17-6560267bc64c","n,m,k=map(int,input().split())
y=0
if k>n and m>n:
    print('NO')
else:
    while m>0:
        y=y+1
        m=m-n
        if m==0:
            break
        m=m+k
        
    print(y)","0.0"
"853bea78-6aa0-4fcf-8c5a-5f278603c518","n=int(input())
k=int(input())
x=int(input())
y=int(input())
if n>=k:
    s=x*k+y*(n-k)
else:
    s=x*n
print(s)
","0.0"
"aeb122ea-bb7f-44ee-93c8-65ead3d4f5f3","n,k=map(int,input().split())
t=240-k
r=1
while t>=r*5:
    t=t-5*r
    r=r+1
if r>n:
    print(n)
else:
    print(r-1)","0.0"
"8381a3f6-aaba-448f-b65f-50117785adf7","n,m,a=map(int,input().split())
if n%a==0:
    d=n//a
else:
    d=n//a+1
if m%a==0:
    s=m//a
else:
    s=m//a+1
print(d*s)","0.0"
"5895fc4e-b515-464a-a0e2-697d86bf8783","a=list(map(int,input().split()))
b=[0]*(len(a)-1)
ma=max(a[1:])
mi=min(a[1:])
for i in range(1,len(a)):
    if a[i]==ma:
        b[i-1]=mi
    else:
        b[i-1]=a[i]
print(*b)
        ","0.0"
"5eebb219-dec9-41ce-83c6-efc4a4670acc","b=input()
s='qwertyuiopasdfghjklzxcvbnmq'
k=s.find(b)
print(s[k+1])","0.0"
"02bc07a3-d63a-4896-b585-e74c06bfc7f2","n,x=map(int,input().split())
a=list(map(int,input().split()))
s=abs(sum(a))
if s==0:
    print(0)
elif s==x:
    print(1)
else:
    if s%x==0:
        print(s//x)
    else:
        print(s//x+1)","0.0"
"6824fb27-2339-421d-85db-60758b59cddc","n=int(input())
a=[0]*(n+1)
if n==1:
    print(0)
if n==2:
    print(1)
if n==3:
    print(2)
if n==4:
    print(2)
if n==5:
    print(1)
if n>5:
    a[1]=0
    a[2]=1
    a[3]=2
    a[4]=2
    a[5]=1
    for i in range(6,n+1):
        if i%2==0:
            a[i]=min(a[i-1],a[i//2])+1
        if i%5==0:
            a[i]=min(a[i-1],a[i//5])+1
        if i%2!=0 and i%5!=0:
            a[i]=a[i-1]+1
    print(a[-1])","0.0"
"d949e12a-1807-4b82-a4ab-c1a178a79888","k=int(input())
x=10
while k>0:
    x=x+9
    s=sum([int(x) for x in str(x)])
    if s==10:
        k=k-1
    
print(x)","0.0"
"39674b7f-1b5d-40b8-aa5c-02f2ac4a2a4b","k=int(input())
s=bin(k)[2:]
a0=['####','#  #','#  #','#  #','####']
a1=['   #',' # #','#  #','   #','   #']
for i in range(len(a0)):
    for j in range(len(s)):
        if s[j]=='1':
            print(a1[i],end=' ')
        if s[j]=='0':
            print(a0[i],end=' ')
    print()","0.0"
"d949e12a-1807-4b82-a4ab-c1a178a79888","k=int(input())
x=10
while k>0:
    x=x+9
    s=sum([int(x) for x in str(x)])
    if s==10:
        k=k-1
    
print(x)","0.0"
"6824fb27-2339-421d-85db-60758b59cddc","n=int(input())
a=[0]*(n+1)
if n==1:
    print(0)
if n==2:
    print(1)
if n==3:
    print(2)
if n==4:
    print(2)
if n==5:
    print(1)
if n>5:
    a[2]=1
    a[3]=2
    a[4]=2
    a[5]=1
    for i in range(6,n+1):
        if i%2==0:
            a[i]=min(a[i-1],a[i//2])+1
        if i%5==0:
            a[i]=min(a[i-1],a[i//5])+1
        if i%5!=0 and i%2!=0:
            a[i]=a[i-1]+1
    print(a[-1])
    
","0.0"
"5f3269b9-ef62-40cd-accf-5dbce420975b","n, k, q = map(int, input().split())
a = list(map(int, input().split()))
a.append(-999999999999999)
s = 0
p = 0
for i in range(n + 1):
    if a[i] >= q:
        p += 1
    else:
        if p >= k:
            s += (1 + (p - k)) * (2 + (p - k)) // 2
        p = 0
print(s)
      ","0.0"
"1a0c244f-dc1f-4d44-8d80-19db61bd9e0c","a = list(map(int, input().split()))
a.append(10)
n = a[0] + 1
a.pop(0)
i = 0
p = 0
l = True
while l:
    k = 1
    while a[i] == a[i + 1]:
        k += 1
        i += 1
    if k > 2:
        a = a[:i - k+1] + a[i + 1:]
        #print(a, k)
        p += k
        i = 0
    else:
        k = 1
        i += 1
    if i >= len(a)-1:
        l = False
            
print(p)","0.0"
"13f523e4-1cd2-4724-8b60-a0f6f25007d9","n =  int(input())
s = ''
p = input()
k = 0
for i in range(n - 1):
    t = input()
    if p == t:
        k += 1 
    p = t
print(k + 1)
","0.0"
"4c960d61-0634-4b66-90e7-3bf2894ef6de","y, k, n = map(int, input().split())
l = False
p = k - y % k
for x in range(p, n + 1, k):
    m = x + y
    if m % k == 0 and  m <= n:
        l = True
        print(x, end = ' ')
if not l: print(-1)    ","0.0"
"ac08298f-25c3-4193-9ae8-4fdb89da54e8","n, m = map(int, input().split())
x = (n-2) * (m - 2)
print(n * m - x, x)","0.0"
"bcf4caae-6f1c-488c-9cab-bf7232dd9614","n = int(input())
sp = [int(x) for x in input().split()]
l = 0
r = n - 1
sl = sp[0]
sr = sp[-1]
mx = 0
while l < r:
    if sl == sr:
        mx = max(mx, (l + 1) + (n - r))
    if sl <= sr:
        l += 1
        sl += sp[l]
    else:
        r -= 1
        sr += sp[r]
print(mx)
","0.0"
"43c6f24d-b89c-4762-9dc6-b6c3aaee6f1a","a = int(input())
b = int(input())
c = int(input())
x = (a - 1) // c
y = b // c
print(y - x)
","0.0"
"cfe47bb0-2389-4fae-84c2-9287605fc571","n, k = map(int, input().split())
mx = -10000000000000
for i in range(n):
    ans = 0
    f, t = map(int, input().split())
    if t > k:
        ans = f - (t - k)
    else:
        ans = f
    mx = max(mx, ans)
print(mx)
    ","0.0"
"70f7c75a-c93c-48c0-84d1-cf78ed51deea","n, t = map(int, input().split())
a = [int(x) for x in input().split()]
s = 0
for i in range(n):
    s += (80000 - a[i])
    if s >= t:
        print(i + 1)
        break

        ","0.0"
"87b17251-9fef-4c2f-9cd4-79662ec2957e","k, a, b = map(int,input().split())
if a + b == 0:
    print(1)
else:
    print(k + 1)","0.0"
"daa00bbb-65ee-4c2e-b966-992c51cbdb0f","l, v1, v2, t = map(int, input().split())
s = (v1 + v2) * t
ss = s % l
print(min(l - ss, ss) )","0.0"
"bcf4caae-6f1c-488c-9cab-bf7232dd9614","n = int(input())
sp = [int(x) for x in input().split()]
l = 0
r = n - 1
sl = sp[0]
sr = sp[-1]
mx = 0
while l < r:
    if sl == sr:
        mx = max(mx, (l + 1) + (n - r))
    if sl <= sr:
        l += 1
        sl += sp[l]
    else:
        r -= 1
        sr += sp[r]
print(mx)
","0.0"
"bcf4caae-6f1c-488c-9cab-bf7232dd9614","n = int(input())
sp = [int(x) for x in input().split()]
sp2=[]
sp2=list(reversed(sp))

its=[0]
s1=0
s2=0
for i in range(n):
    s2=0
    s1+=sp[i]
   
    for j in range(n):
        if j<n-1-i:
            s2+=sp2[j]
            
            if s1==s2:
                its.append(i+j+2)
                break
            
    
print(max(its))
","0.0"
"bcf4caae-6f1c-488c-9cab-bf7232dd9614","n = int(input())
sp = [int(x) for x in input().split()]
sp2=[]
sp2=list(reversed(sp))

its=[0]
s1=0
s2=0
for i in range(n):
    s2=0
    s1+=sp[i]
   
    for j in range(n):
        if j<n-1-i:
            s2+=sp2[j]
            
            if s1==s2:
                its.append(i+j+2)
                break
            
    
print(max(its))
","0.0"
"bcf4caae-6f1c-488c-9cab-bf7232dd9614","n = int(input())
sp = [int(x) for x in input().split()]
l = 0
r = n - 1
sl = sp[0]
sr = sp[-1]
mx = 0
while l < r:
    if sl == sr:
        mx = max(mx, (l + 1) + (n - r))
    if sl <= sr:
        l += 1
        sl += sp[l]
    else:
        r -= 1
        sr += sp[r]
print(mx)
","0.0"
"bcf4caae-6f1c-488c-9cab-bf7232dd9614","n = int(input())
sp = [int(x) for x in input().split()]
sp2=[]
sp2=list(reversed(sp))

its=[0]
s1=0
s2=0
for i in range(n):
    s2=0
    s1+=sp[i]
   
    for j in range(n):
        if j<n-1-i:
            s2+=sp2[j]
            
            if s1==s2:
                its.append(i+j+2)
                break
            
    
print(max(its))","0.0"
"bcf4caae-6f1c-488c-9cab-bf7232dd9614","n = int(input())
sp = [int(x) for x in input().split()]
sp2=[]
sp2=list(reversed(sp))

its=[0]
s1=0
s2=0
for i in range(n):
    s2=0
    s1+=sp[i]
   
    for j in range(n):
        if j<n-1-i:
            s2+=sp2[j]
            
            if s1==s2:
                its.append(i+j+2)
                break
            
    
print(max(its))","0.0"
"c4a7e827-63de-424a-aec0-aea743d3b5f2","k, n = map(int, input().split())
print((n + k - 1) // k, n % k)","0.0"
"c4a7e827-63de-424a-aec0-aea743d3b5f2","k, n = map(int, input().split())
print((n + k - 1) // k, n % k)","0.0"
"c4a7e827-63de-424a-aec0-aea743d3b5f2","k, n = map(int, input().split())
kol = (n + k - 1) // k
print(kol, n - (kol - 1) * k)","0.0"
"6d204921-764f-452c-a01d-578e51695a98","def f(a, b, c):
    if a == b + c or b == a + c or c == a + b:
        return ""YES""
    else:
        return ""NO""
k = int(input())
for i in range(k):
    a, b, c = map(int, input().split())
    print(f(a, b, c))","0.0"
"15f19bc8-7be3-4a44-a7b1-fc7505badaed","def p(s):
    if s[0] in w[0] and s[1] in w[1] and s[2] in w[2] and s[3] in w[3] and s[4] in w[4] and s[5] in w[5]:
        return ""YES""
    else:
        return ""NO""
w = [{'p', 'P'}, {'y', 'Y'}, {'t', 'T'}, {'h', 'H'}, {'o', 'O'}, {'n', 'N'}]
k = int(input())
for i in range(k):
    s = input()
    print(p(s))","0.0"
"598ac092-b788-4134-867c-8e307d515e67","n = int(input())
a = []
for i in range(n):
    b = list(map(int, input().split()))[1:]
    a.append([max(b), len(b)])
a.sort(reverse = True)
#print(a)
k = 0
for x in a:
    if x[0] < a[0][0]:
        k += (a[0][0] - x[0]) * x[1]
print(k)
    

    

","0.0"
"36d58b20-7fe1-452b-ac10-e1ed680aa6b3","n, k, t, c, d, p, nl, np = map(int, input().split())
a = k * t
b = c * d
compl = 0
while nl <= a > 0 and b > 0 and np <= p > 0:
    a -= nl
    b -= 1
    p -= np
    compl += 1
pers = compl // n + 1
print(compl, pers)","0.0"
"36d58b20-7fe1-452b-ac10-e1ed680aa6b3","n, k, t, c, d, p, nl, np = map(int, input().split())
a = k * t
b = c * d
compl = 0
while nl <= a > 0 and b > 0 and np <= p > 0:
    a -= nl
    b -= 1
    p -= np
    compl += 1
pers = compl // n + 1
print(compl, pers)","0.0"
"36d58b20-7fe1-452b-ac10-e1ed680aa6b3","n, k, t, c, d, p, nl, np = map(int, input().split())
#print(n, k, t, c, d, p, nl, np)
host = 0
x, y, z = k*t, c*d, p
#print(x,y,z)
while x >= nl and y > 0 and z >= np:
    host += 1
    x -= nl
    y -= 1
    z -= np
print(host, (host-1) % n + 1)
    

    

","0.0"
"36d58b20-7fe1-452b-ac10-e1ed680aa6b3","n, k, t, c, d, p, nl, np = map(int, input().split())
a = k * t
b = c * d
compl = 0
while nl <= a > 0 and b > 0 and np <= p > 0:
    a -= nl
    b -= 1
    p -= np
    compl += 1
pers = (compl - 1) % n + 1
print(compl, pers)","0.0"
"11d7d14b-eb4a-4dd7-94c1-67a03264c424","m=999999999999999
n=int(input())
a=list(map(int,input().split()))
s=sum(a)
if s%2==0:
    print(s)
else:
    for i in range(len(a)):
        if a[i]%2!=0:
            m=min(m,a[i])
    print(s-m)","0.0"
"8381a3f6-aaba-448f-b65f-50117785adf7","n,m,a=map(int,input().split())
if n%a==0:
    kn=n//a
else:
    kn=n//a+1
if m%a==0:
    km=m//a
else:
    km=m//a+1
print(kn*km)","0.0"
"d949e12a-1807-4b82-a4ab-c1a178a79888","k=int(input())
s=10
while k>0:
    s=s+9
    su=0
    for i in range(len(str(s))):
        su=su+int(str(s)[i])
    if su==10:
        k-=1
print(s)","0.0"
"d949e12a-1807-4b82-a4ab-c1a178a79888","k=int(input())
s=10
while k>0:
    s=s+9
    su=0
    for i in range(len(str(s))):
        su=su+int(str(s)[i])
    if su==10:
        k-=1
print(s)","0.0"
"daa00bbb-65ee-4c2e-b966-992c51cbdb0f","def vvod1():
    a = map(int, input().split())
    return a

l, v1, v2, t = vvod1()

v = v1 + v2

s = (v * t) % l

print (l - s if l - s < s - l + l else s - l + l)","0.0"
"daa00bbb-65ee-4c2e-b966-992c51cbdb0f","dlina, skor1, skor2, vrema =  map(int,input().split())
pos1 = (skor1*vrema)%dlina
pos2 = dlina-((skor2*vrema)%dlina)
print(min(abs(pos1-pos2), dlina-abs(pos1-pos2)))
","0.0"
"daa00bbb-65ee-4c2e-b966-992c51cbdb0f","L, v1, v2, T=map(int, input().split())
d=(v1+v2)*T%L
print(min(d, L-d))
","0.0"
"daa00bbb-65ee-4c2e-b966-992c51cbdb0f","l, v1, v2, t = map(int, input().split())
print(min((l-(((v1+v2)*t)%l)), l-(l-(((v1+v2)*t)%l))))","0.0"
"daa00bbb-65ee-4c2e-b966-992c51cbdb0f","l,v1,v2,t = map(int, input().split())
print(min((v1+v2)*t%l, l-(v1+v2)*t%l))
","0.0"
"daa00bbb-65ee-4c2e-b966-992c51cbdb0f","l, v1, v2, t = map(int, input().split())
p1 = (v1 * t) % l
p2 = l - ((v2 * t) % l)
res = min((abs(p1-p2)), (l-p1+p2), (l-p2+p1))
print(res)","0.0"
"daa00bbb-65ee-4c2e-b966-992c51cbdb0f","l, v1, v2, t = map(int, input().split())
s = ((v1 + v2)*t)%l
print(min(l - s, s))","0.0"
"daa00bbb-65ee-4c2e-b966-992c51cbdb0f","l,v,v1,t = [int(i) for i in input().split()]
v = v * -t;v1 = v1*t
print((abs(v)+v1)%l if (abs(v)+v1)%l <l//2 else (l-(abs(v)+v1))%l)","0.0"
"daa00bbb-65ee-4c2e-b966-992c51cbdb0f","l,v1,v2,t=map(int,input().split())
a=v1*t
b=v2*t
c=a%l
d=l-b%l
f=abs(c-d)
e=l-f
print(min(e,f))","0.0"
"ac08298f-25c3-4193-9ae8-4fdb89da54e8","n,m = map(int,input().split())
s = (2*m+2*n)-4
x = (n*m)-((2*m+2*n)-4)
print(s,x)","0.0"
"87b17251-9fef-4c2f-9cd4-79662ec2957e","skolko_raz, a, b =  map(int,input().split())
mnoz = set()
cur = 1
if a != -b:
    print(cur + skolko_raz)
else:
    print(1)","0.0"
"daa00bbb-65ee-4c2e-b966-992c51cbdb0f","l, v1, v2, t = map(int, input().split())
p1 = (v1 * t) % l
p2 = (v2 * t) % l
r1 = (p1 + p2) % l
r2 = l - r1
print(min(r1, r2))","0.0"
"87b17251-9fef-4c2f-9cd4-79662ec2957e","k, a, b = map(int, input().split())
print(1 if a == -b else k + 1)","0.0"
"87b17251-9fef-4c2f-9cd4-79662ec2957e","def count_painting(k, a, b):
    x = 0  # ÐºÐ¾Ð¾ÑÐ´Ð¸Ð½Ð°ÑÐ° Ð½Ð°ÑÐ°Ð»Ð° Ð¿Ð¸ÑÐ¾Ð½Ð°
    y = 0  # ÐºÐ¾Ð¾ÑÐ´Ð¸Ð½Ð°ÑÐ° ÐºÐ¾Ð½ÑÐ° Ð¿Ð¸ÑÐ¾Ð½Ð°
    painting = set()  # Ð¼Ð½Ð¾Ð¶ÐµÑÑÐ²Ð¾ ÑÐ¶Ðµ Ð½Ð°ÑÐ¸ÑÐ¾Ð²Ð°Ð½Ð½ÑÑ ÑÐ²ÐµÑÐ¾ÑÐµÐº
    for _ in range(k):
        x += a
        y -= b
        current_painting = (x, y)
        if current_painting not in painting:
            painting.add(current_painting)
    return len(painting)
k,a,b=[int(i) for i in input().split()]
print(count_painting(k, a, b)+1)","0.0"
"70f7c75a-c93c-48c0-84d1-cf78ed51deea","n, m = map(int, input().split())

pitosha = 80000

arr = [int(s) for s in input().split()]

for i in range(len(arr)):
    pitosha -= arr[i]
    if pitosha >= m:
        print(i + 1)
        exit()
    else:
        pitosha += 80000

print(len(arr))","0.0"
"cfe47bb0-2389-4fae-84c2-9287605fc571","n, k=map(int, input().split())
u=-999999999
u1=0
for i in range(n):
    f, t=map(int, input().split())
    if t>k:
        u1=f-(t-k)
    else:
        u1=f
    if u1>u:
        u=u1
print(u)

","0.0"
"daa00bbb-65ee-4c2e-b966-992c51cbdb0f","a,b,c,d = map(int, input().split())
print(min((a-((b+c)*d%a)),(b+c)*d%a))
","0.0"
"daa00bbb-65ee-4c2e-b966-992c51cbdb0f","l, v1, v2, t  = map(int, input().split(' '))
s1 = v1 * t % l
s2 = l - (v2 * t % l)
print(min(abs(s1 - s2), min(s1, l - s1) + min(s2, l - s2)))","0.0"
"87b17251-9fef-4c2f-9cd4-79662ec2957e","k, a, b = map(int, input().split())
print(k + 1)","0.0"
"87b17251-9fef-4c2f-9cd4-79662ec2957e","k,a,b=map(int,input().split())
if a!=-b:
    print(k+1)
else:
    print(1)","0.0"
"87b17251-9fef-4c2f-9cd4-79662ec2957e","k,a,b=map(int,input().split())
print(k+1)
","0.0"
"87b17251-9fef-4c2f-9cd4-79662ec2957e","k, a, b = map(int, input().split())
if -a != b:
    print(k + 1)
else:
    print(1)","0.0"
"4c960d61-0634-4b66-90e7-3bf2894ef6de","y, k, n = map(int, input().split())
arr = []
x = 1

while y + x <= n:
    if (y + x) % k == 0:
        arr.append(x)
    x += 1

if len(arr) == 0:
    print(-1)
else:
    print(*arr)

","0.0"
"70f7c75a-c93c-48c0-84d1-cf78ed51deea","skolko, vkusnaha =  map(int,input().split())
kotleti = list(map(int,input().split()))
c = 0
for i in range(skolko):
    c += 80000-kotleti[i]
    if c >= vkusnaha:
        print(i+1)
        exit()
","0.0"
"43c6f24d-b89c-4762-9dc6-b6c3aaee6f1a","A=int(input())
B=int(input())
C=int(input())
h=0
for i in range(A, B+1):
    if i%C==0:
        h+=1
print(h)
","0.0"
"70f7c75a-c93c-48c0-84d1-cf78ed51deea","n,t=map(int,input().split())
k=0
a=list(map(int,input().split()))
for i in range(n):
    if a[i]<80000:
        k+=80000-a[i]
    if k>=t:
        print(i+1)
        break
","0.0"
"4c960d61-0634-4b66-90e7-3bf2894ef6de","y,k,n = map(int,input().split())
l = list()
for x in range(0,n):
    if (x+y) < n and (x+y) % k == 0:
        l.append(x)
if len(l) == 0:
    print(-1)
else:
    print(*l)","0.0"
"4c960d61-0634-4b66-90e7-3bf2894ef6de","y,k,n = map(int,input().split())
l = list()
for x in range(0,n-y):
    if (x+y) < n and (x+y) % k == 0:
        l.append(x)
if len(l) == 0:
    print(-1)
else:
    print(*l)","0.0"
"daa00bbb-65ee-4c2e-b966-992c51cbdb0f","L, V1, V2, T = map(int, input().split()) 
a = T * (V1 + V2) 
b = a % L 
if b > L/2: 
    b = L - b
print(b)","0.0"
"ac08298f-25c3-4193-9ae8-4fdb89da54e8","n, m = map(int, input().split())

print((n*2) + ((m-2)*2), (n*m) - ((n*2) + ((m-2)*2)))
","0.0"
"70f7c75a-c93c-48c0-84d1-cf78ed51deea","n, t = map(int, input().split())
a = list(map(int, input().split()))
i = 0
while t > 0:
    t -= (80000 - a[i])
    i += 1
print(i)","0.0"
"cfe47bb0-2389-4fae-84c2-9287605fc571","n,k=map(int,input().split())
mx=-10000000
for i in range(n):
    f,t=map(int,input().split())
    if t<=k:
        if f>mx:
            mx=f
    else:
        a=f-(t-k)
        if a>mx:
            mx=a
print(mx)","0.0"
"cfe47bb0-2389-4fae-84c2-9287605fc571","n, k = map(int, input().split())

mx = -10 ** 9
for i in range(n):
    f, t = map(int, input().split())
    if t > k:
        u = f - (t - k)
    else:
        u = f
    if u > mx:
        mx = u

print(mx)","0.0"
"70f7c75a-c93c-48c0-84d1-cf78ed51deea","n,t = map(int, input().split())
dl = list(map(int, input().split()))
m = 80000
for i in range(len(dl)):
	m += (80000-m)
	m -= dl[i]
	t -= m
	if t <= 0:
		print(i+1)
		break
","0.0"
"70f7c75a-c93c-48c0-84d1-cf78ed51deea","n, t = map(int, input().split())
d = list(map(int, input().split()))
c = 80000
ost = 0
for i in range(n):
    ost = c - d[i]
    if ost > 0:
        t -= ost
    if t <= 0:
        print(i+1)
        break","0.0"
"13f523e4-1cd2-4724-8b60-a0f6f25007d9","n = int(input())
l = list()
k = 0
for i in range(n):
    l.append(input())
l.append('a')
for i in range(len(l)-1):
    if l[i][:1] != l[i+1][1:]:
        k+=1
print(k)","0.0"
"70f7c75a-c93c-48c0-84d1-cf78ed51deea","n, t = map(int, input().split())
a = input().split()
b = 0
for i in range (n):
    b += (80000 - int(a[i]))
    if b >= t:
        c = i + 1
        break
print (c)","0.0"
"cfe47bb0-2389-4fae-84c2-9287605fc571","skolko_ih, skolko_dney =  map(int,input().split())
kaka = set()
# ui = fi -(ti-k)
for i in range(skolko_ih):
    kakula1, kakula2 = map(int,input().split())
    kaka.add((kakula1 - kakula2 + skolko_dney) if kakula2>skolko_dney else (kakula1))
print(max(kaka))","0.0"
"daa00bbb-65ee-4c2e-b966-992c51cbdb0f","L, V1, V2, T = map(int, input().split())

distance_piton1 = V1 * T
distance_piton2 = V2 * T

distance_between_pitons = (distance_piton1 + distance_piton2) % L

min_distance = min(distance_between_pitons, L - distance_between_pitons)

print(min_distance)","0.0"
"70f7c75a-c93c-48c0-84d1-cf78ed51deea","n, t  = map(int, input().split(' '))
a = [int(x) for x in input().split(' ')]
k = 1
while t > 0:
    t -= (80000 - a[k - 1])
    k += 1
print(k - 1)","0.0"
"cfe47bb0-2389-4fae-84c2-9287605fc571","n,k = map(int,input().split())
m = []
for i in range(n):
	f,t = map(int,input().split())
	m.append([f,t])
mx = -10**20
for i in m:
	f,t = i[0],i[1]
	if t > k:
		u = f-(t-k)
	else:
		u = f
	mx = max(mx, u)
print(mx)

	
","0.0"
"43c6f24d-b89c-4762-9dc6-b6c3aaee6f1a","a=int(input())
b=int(input())
c=int(input())
d=a%c
e=c-d
if d==0:
    e=0
f=a+e
g=b-f
print(g//c+1)
","0.0"
"70f7c75a-c93c-48c0-84d1-cf78ed51deea","n, t  = map(int, input().split(' '))
a = [int(x) for x in input().split(' ')]
k = 1
while t > 0 and k - 1 < n:
    t -= (80000 - a[k - 1])
    k += 1
print(k - 1)","0.0"
"43c6f24d-b89c-4762-9dc6-b6c3aaee6f1a","a = int(input())
b = int(input())
c = int(input())
kol=0
for i in range(a, b+1):
    if i%c==0:
        l=i+c
        kol+=1
        break
while l<=b:
    l+=c
    kol+=1

print(kol)","0.0"
"cfe47bb0-2389-4fae-84c2-9287605fc571","n, k = map(int, input().split())
j = []
for i in range(n):
    a, b = map(int, input().split())
    if b > k:
        j.append(a - (b - k))
    else:
        j.append(a)
print(max(j))","0.0"
"43c6f24d-b89c-4762-9dc6-b6c3aaee6f1a","a = int(input())
b = int(input())
c = int(input())
kol=0
for i in range(a, b+1):
    if i%c==0:
        l=i+c
        kol+=1
        break
while l<=b:
    l+=c
    kol+=1

print(kol)","0.0"
"43c6f24d-b89c-4762-9dc6-b6c3aaee6f1a","A=int(input())
B=int(input())
C=int(input())
if A>C:
    v=C-A%C
else:
    v=C-A
h=0
for i in range(A+v, B+1, C):
    if i%C==0:
        h+=1
print(h)
","0.0"
"bcf4caae-6f1c-488c-9cab-bf7232dd9614","n=int(input())
a=list(map(int,input().split()))
if n%2!=0:
    print(n-1)
else:
    print(n)","0.0"
"cfe47bb0-2389-4fae-84c2-9287605fc571","n, k = map(int, input().split())
a = (-412 * 312 - 42315125) * 2 ** 2
for i in range (n):
    f, t = map(int, input().split())
    if a < (f - (t - k) if t > k else f):
        a = (f - (t - k) if t > k else f)
print (a)","0.0"
"43c6f24d-b89c-4762-9dc6-b6c3aaee6f1a","a = int(input())
b = int(input())
c = int(input())

counter = 0
for i in range(a, b + 1):
    if i % c == 0:
        counter += 1

print(counter)","0.0"
"ac08298f-25c3-4193-9ae8-4fdb89da54e8","x, y = map(int, input().split())
a = (x + y - 2)*2
print(a, x*y - a)","0.0"
"70f7c75a-c93c-48c0-84d1-cf78ed51deea","a,b = map(int, input().split())
x = list(map(int, input().split()))
for i in range(0,a+1):
    if 80000 - x[i] >= b:
        print(i+1)
        break
","0.0"
"43c6f24d-b89c-4762-9dc6-b6c3aaee6f1a","a = int(input())
b = int(input())
c = int(input())
if a % c != 0:
    a += c - (a % c)
ans = 0
while a <= b:
    ans += 1
    a += c
print(ans)","0.0"
"ac08298f-25c3-4193-9ae8-4fdb89da54e8","N, M=map(int, input().split())
c=(N-2)*(M-2)
p=N*M-c
print(p, c)
","0.0"
"ac08298f-25c3-4193-9ae8-4fdb89da54e8","n, m = map(int, input().split())

ans2 = (n - 2) * (m - 2)
ans1 = n * m - ans2

print(ans1, ans2)","0.0"
"ac08298f-25c3-4193-9ae8-4fdb89da54e8","a, b = map(int, input().split())
f = (a-2)*(b-2)
g = a*b-f
print(g, f)","0.0"
"bcf4caae-6f1c-488c-9cab-bf7232dd9614","n=int(input())
f=0
k=0
s=0
a=list(map(int,input().split()))
for i in range(len(a)//2):
    k+=a[i]
    f+=a[-(i+1)]
    if k==f:
        s=(i+1)*2
print(s)","0.0"
"cfe47bb0-2389-4fae-84c2-9287605fc571","n, k = map(int, input().split())
rod = []
for i in range(n):
    s1, s2 = map(int, input().split())
    rod.append([s1, s2])
pl = []
for x in range(n):
    if rod[x][1] > k:
        u = rod[x][0] - (rod[x][1] - k)
    else:
        u = rod[x][0]
    pl.append(u)
print(max(pl))
","0.0"
"ac08298f-25c3-4193-9ae8-4fdb89da54e8","x , y = map (int,input().split())
a = (x + y -2) * 2
print (a , x * y - a)","0.0"
"13f523e4-1cd2-4724-8b60-a0f6f25007d9","n=int(input())
b=0
a2=""  ""
for i in range(n):
    a=input()
    if a[0]!=a2[1]:
        b+=1
    a2=a
print(b)","0.0"
"87b17251-9fef-4c2f-9cd4-79662ec2957e","def count_flowers(k, a, b):
    position = 0
    flowers = set()
    drawn_flower = False

    for _ in range(k):
        position += a
        if position < 0:
            position -= b
        else:
            position += b

        if position in flowers:
            drawn_flower = True
        else:
            flowers.add(position)

    return len(flowers) if not drawn_flower else len(flowers) - 1


k, a, b = map(int, input().split())


result = count_flowers(k, a, b)
print(result+1)
","0.0"
"43c6f24d-b89c-4762-9dc6-b6c3aaee6f1a","a = int(input())
b = int(input())
c = int(input())
k = 0
for i in range(a, b+1):
	if i%c==0:
		k+=1
print(k)
","0.0"
"ac08298f-25c3-4193-9ae8-4fdb89da54e8","n, m = map(int, input().split())
ch = (n-2) * (m-2)
p = n * m - ch
print(p, ch)","0.0"
"70f7c75a-c93c-48c0-84d1-cf78ed51deea","a,b = map(int, input().split())
x = list(map(int, input().split()))
for i in range(0,a+1):
    if 80000 - x[i] >= b:
        print(i+1)
        break
    else:
        b-=80000-x[i]","0.0"
"cfe47bb0-2389-4fae-84c2-9287605fc571","n,k=map(int,input().split())
maxu=0
for i in range(n):
    f,t=map(int,input().split())
    if t<k:
        u=f
    else:
        u=f-(t-k)
    if maxu<u:
        maxu=u
    if maxu==0:
        maxu=u
print(maxu)
","0.0"
"ac08298f-25c3-4193-9ae8-4fdb89da54e8","x , y = map (int,input().split())
a = (x + y - 2) * 2
print (a , x * y - a)","0.0"
"43c6f24d-b89c-4762-9dc6-b6c3aaee6f1a","A = int(input())
B = int(input())
C = int(input())
d = 0
for i in range(A, B+1):
    if i%C == 0:
        d+=1
print(d)","0.0"
"87b17251-9fef-4c2f-9cd4-79662ec2957e","k, a, b = map(int, input().split())

# ÐÐ°ÑÐ¾Ð´Ð¸Ð¼ ÑÐ°Ð³, ÐºÐ¾ÑÐ¾ÑÑÐ¹ Ð±ÑÐ´ÐµÑ Ð²ÑÐ¿Ð¾Ð»Ð½ÑÑÑÑÑ Ð¿ÑÐ¸ ÐºÐ°Ð¶Ð´Ð¾Ð¼ ÑÐ¸ÐºÐ»Ðµ
step = abs(a) + abs(b)

# ÐÐ¿ÑÐµÐ´ÐµÐ»ÑÐµÐ¼, Ð² ÐºÐ°ÐºÐ¾Ð¼ Ð½Ð°Ð¿ÑÐ°Ð²Ð»ÐµÐ½Ð¸Ð¸ Ð¼Ð°ÑÑÑÑÐºÐ° Ð±ÑÐ´ÐµÑ Ð´Ð²Ð¸Ð³Ð°ÑÑÑÑ
direction = 1 if (a > 0 and b < 0) or (a < 0 and b > 0) else -1

# ÐÐ°ÑÐ¾Ð´Ð¸Ð¼ Ð¼Ð°ÐºÑÐ¸Ð¼Ð°Ð»ÑÐ½Ð¾Ðµ ÑÐ°ÑÑÑÐ¾ÑÐ½Ð¸Ðµ, ÐºÐ¾ÑÐ¾ÑÐ¾Ðµ Ð¼Ð¾Ð¶ÐµÑ Ð¿ÑÐ¾Ð¹ÑÐ¸ Ð¼Ð°ÑÑÑÑÐºÐ°
max_distance = k * step

# ÐÐ°ÑÐ¾Ð´Ð¸Ð¼ ÐºÐ¾Ð»Ð¸ÑÐµÑÑÐ²Ð¾ ÑÐ°Ð·Ð»Ð¸ÑÐ½ÑÑ Ð¿Ð¾Ð·Ð¸ÑÐ¸Ð¹, Ð³Ð´Ðµ Ð¼Ð°ÑÑÑÑÐºÐ° Ð¼Ð¾Ð¶ÐµÑ Ð½Ð°ÑÐ¸ÑÐ¾Ð²Ð°ÑÑ ÑÐ²ÐµÑÐ¾ÑÐµÐº
# (Ð¼Ð°ÐºÑÐ¸Ð¼Ð°Ð»ÑÐ½Ð¾Ðµ ÑÐ°ÑÑÑÐ¾ÑÐ½Ð¸Ðµ + 1, Ð¿Ð¾ÑÐ¾Ð¼Ñ ÑÑÐ¾ ÑÑÐ¸ÑÐ°ÐµÐ¼ Ð¸ Ð½Ð°ÑÐ°Ð»ÑÐ½ÑÑ Ð¿Ð¾Ð·Ð¸ÑÐ¸Ñ)
max_flowers = (max_distance // step) + 1

# ÐÑÐ²Ð¾Ð´Ð¸Ð¼ ÑÐµÐ·ÑÐ»ÑÑÐ°Ñ
print(max_flowers)
","0.0"
"43c6f24d-b89c-4762-9dc6-b6c3aaee6f1a","from math import ceil
nachalo = int(input())
konec = int(input())
kratno = int(input())
c2 = konec//kratno * kratno
c1 = (nachalo//kratno + int(bool(nachalo%kratno))) * (kratno)
print(((c2 - c1)//kratno)+1)
","0.0"
"daa00bbb-65ee-4c2e-b966-992c51cbdb0f","l,v1,v2,t = map(int,input().split())
s = v1*t + v2*t
if s%l > l - s%l:
    print(l-s%l)
else:
    print(s%l)","0.0"
"13f523e4-1cd2-4724-8b60-a0f6f25007d9","string = ''
counter = 0
for i in range(int(input())):
    n = input()
    if string[-2:] != n:
        string += n
    else:
        counter += 1
        string = ''
        string += n



print(counter + 1)","0.0"
"ac08298f-25c3-4193-9ae8-4fdb89da54e8","N,M = map(int,input().split())
p=(N+M-2)*2
ch=N*M-p
print(p,ch)
","0.0"
"13f523e4-1cd2-4724-8b60-a0f6f25007d9","string = ''
counter = 0
for i in range(int(input())):
    n = input()
    if string != n:
        string = n
    else:
        counter += 1
        string = ''
        string += n

print(counter + 1)","0.0"
"daa00bbb-65ee-4c2e-b966-992c51cbdb0f","l, v1, v2, t = [int(x) for x in input().split()]
if (v1*t + v2*t) % l > (l - (v1*t + v2*t)) % l:
    print((l - (v1*t + v2*t))% l)
else:
    print((v1*t + v2*t)%l)","0.0"
"43c6f24d-b89c-4762-9dc6-b6c3aaee6f1a","a = int(input())
b = int(input())
c = int(input())
meet = []
res = 0
for i in range(c, b+1):
    if i % c == 0:
        meet.append(i)
for x in range(a, b+1):
    if x in meet:
        res += 1
print(res)","0.0"
"4c960d61-0634-4b66-90e7-3bf2894ef6de","y, k, n = map(int, input().split())
x=1
sp=[]
while x+y<n:
    if (x+y)%k==0:
        sp.append(x)
    x+=1
if len(sp)==0:
    print(-1)
else:
    print(*sp)","0.0"
"cfe47bb0-2389-4fae-84c2-9287605fc571","n, k  = map(int, input().split(' '))
f, t = map(int, input().split(' '))
if t > k:
    mx = f - (t - k)
else:
    mx = f
for i in range(n - 1):
    f, t = map(int, input().split(' '))
    if t > k:
        cur = f - (t - k)
    else:
        cur = f
    if cur > mx:
        mx = cur
print(mx)
","0.0"
"4c960d61-0634-4b66-90e7-3bf2894ef6de","y, k, n=map(int, input().split())
a=[]
h=0
if y==n:
    a=[-1]
for i in range(1, n-y+1):
    if (i+y)%k==0:
        a.append(i)
        h+=1
    if h==0 and i==n-y:
        a=[-1]
print(*a)
","0.0"
"43c6f24d-b89c-4762-9dc6-b6c3aaee6f1a","a = int(input())
b = int(input())
c = int(input())
k = 0
if (b-a)<1000000:
	for i in range(a, b+1):
		if i%c==0:
			k+=1
else:
	if a%c==0:
		k+=1
	k += (b-a+1)/c
print(k)
","0.0"
"43c6f24d-b89c-4762-9dc6-b6c3aaee6f1a","a = int(input())
b = int(input())
c = int(input())
k = 0
if (b-a)<1000000:
	for i in range(a, b+1):
		if i%c==0:
			k+=1
else:
	if a%c==0:
		k+=0
	k += (b-a+1)/c
print(k)
","0.0"
"bcf4caae-6f1c-488c-9cab-bf7232dd9614","n=int(input())
k=0
m=0
h=[]
g=[]
mx=0
a=list(map(int,input().split()))
for i in range(len(a)):
    k+=a[i]
    h.append(k)
    m+=a[-(i+1)]
    g.append(m)
for i in range(len(a)):
    if h[i] in g:
        f=g.index(h[i])
        if f+i+2<=n:
            if f+i+2>mx:
                mx=f+i+2
print(mx)","0.0"
"bcf4caae-6f1c-488c-9cab-bf7232dd9614","def spisok():
    s = input().split()
    for i in range (len(s)):
        s[i] = int(s[i])
    return s

n = int(input())
s = spisok()

r = 0
l = n - 1

rr = 0
ll = 0

a = 0
aa = 0

for i in range (n):
    if rr < ll:
        rr += s[r]
        r += 1
        aa += 1
    else:
        ll += s[l]
        l -= 1
        aa += 1
    if rr == ll:
        a = aa
print(a)","0.0"
"cfe47bb0-2389-4fae-84c2-9287605fc571","n, k = map(int, input().split())
mr = -1
for i in range(n):
    f, t = map(int, input().split())
    if t > k:
        r = f - (t - k)
    else:
        r = f
    
    mr = max(mr, r)
print(mr)","0.0"
"daa00bbb-65ee-4c2e-b966-992c51cbdb0f","n, v1, v2, t = map(int, input().split())

a1 = v1 * t % n
a2 = n - v2 * t % n

if max(a1, a2) - min(a1, a2) < n + min(a1, a2) - max(a1, a2):
    print(max(a1, a2) - min(a1, a2))
else:
    print(n + min(a1, a2) - max(a1, a2))
","0.0"
"43c6f24d-b89c-4762-9dc6-b6c3aaee6f1a","a = int(input())
b = int(input())
c = int(input())
meet = []
res = 0
for i in range(0, b+1):
    if i % c == 0 and a<=i<=b:
        res += 1
print(res)","0.0"
"4c960d61-0634-4b66-90e7-3bf2894ef6de","y, k, n=map(int, input().split())
a=[]
h=0
if y>n:
    a=[-1]
for i in range(0, n-y+1):
    if (i+y)%k==0:
        a.append(i)
        h+=1
    if h==0 and i==n-y:
        a=[-1]
print(*a)","0.0"
"cfe47bb0-2389-4fae-84c2-9287605fc571","n,k = map(int,input().split())
f = list()
t = list()
u = list()
for i in range(n):
    a,b = map(int,input().split())
    f.append(a)
    t.append(b)
for i in range(n):
    if t[i]>k:
        u.append(f[i]-(t[i]-k))
    else:
        u.append(f[i])
print(max(u))","0.0"
"43c6f24d-b89c-4762-9dc6-b6c3aaee6f1a","a = int(input())
b = int(input())
c = int(input())
print((b // c) - ((a - 1) // c))","0.0"
"43c6f24d-b89c-4762-9dc6-b6c3aaee6f1a","a = int(input())
b = int(input())
c = int(input())
meet = []
res = 0
for i in range(c, b+1):
    if i % c == 0 and a<=i<=b:
        res += 1
print(res)","0.0"
"cfe47bb0-2389-4fae-84c2-9287605fc571","n, k = map(int, input().split())

max_pleasure = float('-inf')  # ÐÐ½Ð¸ÑÐ¸Ð°Ð»Ð¸Ð·Ð¸ÑÑÐµÐ¼ Ð¼Ð°ÐºÑÐ¸Ð¼Ð°Ð»ÑÐ½Ð¾Ðµ ÑÐ´Ð¾Ð²Ð¾Ð»ÑÑÑÐ²Ð¸Ðµ ÐºÐ°Ðº Ð¾ÑÑÐ¸ÑÐ°ÑÐµÐ»ÑÐ½ÑÑ Ð±ÐµÑÐºÐ¾Ð½ÐµÑÐ½Ð¾ÑÑÑ

for _ in range(n):
  f, t = map(int, input().split())
  pleasure = f - (t - k) if t > k else f  # ÐÑÑÐ¸ÑÐ»ÑÐµÐ¼ ÑÐ´Ð¾Ð²Ð¾Ð»ÑÑÑÐ²Ð¸Ðµ
  max_pleasure = max(max_pleasure, pleasure)  # ÐÐ±Ð½Ð¾Ð²Ð»ÑÐµÐ¼ Ð¼Ð°ÐºÑÐ¸Ð¼Ð°Ð»ÑÐ½Ð¾Ðµ ÑÐ´Ð¾Ð²Ð¾Ð»ÑÑÑÐ²Ð¸Ðµ

print(max_pleasure)
","0.0"
"4c960d61-0634-4b66-90e7-3bf2894ef6de","y, k, n = map(int, input().split())
u = k - y % k
i = 0
if u + y > n:
    print(-1)
else:
    while True:
        x = k * i + u
        if x + y > n:
            break
        print(x, end=' ')
        i += 1","0.0"
"43c6f24d-b89c-4762-9dc6-b6c3aaee6f1a","a = int(input())
b = int(input())
c = int(input())
res = 0
for i in range(c, b+1):
    if i % c == 0 and a<=i<=b:
        res += 1
print(res)","0.0"
"cfe47bb0-2389-4fae-84c2-9287605fc571","n,k=map(int, input().split())
s=[]
for i in range(n):
    f,t=map(int,input().split())
    if t>k:
        u=f-(t-k)
    else:
        u=f
    s.append(u)
print(max(s))
","0.0"
"ac08298f-25c3-4193-9ae8-4fdb89da54e8","n,m=map(int,input().split())
a=n*2+(m*2-4)
m-=2
n-=2
print(a, n*m)","0.0"
"87b17251-9fef-4c2f-9cd4-79662ec2957e","k,a,b = [int(x) for x in input().split()]
if ((a + b) == 0):
    print(1)
else:
    print(k+1)","0.0"
"43c6f24d-b89c-4762-9dc6-b6c3aaee6f1a","a = int(input())
b = int(input())
c = int(input())
res = 0
for i in range(c, b+1, c):
    if i % c == 0 and a<=i<=b:
        res += 1
print(res)","0.0"
"daa00bbb-65ee-4c2e-b966-992c51cbdb0f","L, v1, v2, T = map(int, input().split())
time = T * (v1 + v2) 
distance = time % L 
if distance > L/2:
    distance = L - distance 
print(distance)



","0.0"
"ac08298f-25c3-4193-9ae8-4fdb89da54e8","n, m = map(int, input().split())
print (n * m - (n - 2) * (m - 2), (n - 2) * (m - 2))","0.0"
"43c6f24d-b89c-4762-9dc6-b6c3aaee6f1a","a = int(input())
b = int(input())
c = int(input())
k = 0
if (b-a)<1000000:
	for i in range(a, b+1):
		if i%c==0:
			k+=1
else:
	if a%c==0 or (a+a%c)%c==0:
		k+=1
	k += (b-a+1)/c
print(k)
","0.0"
"43c6f24d-b89c-4762-9dc6-b6c3aaee6f1a","a = int(input())
b = int(input())
c = int(input())
res = 0
for i in range(a, b+1):
    if i % c == 0:
        res += 1
print(res)","0.0"
"ac08298f-25c3-4193-9ae8-4fdb89da54e8","n,m=map(int,input().split())
a1=(m-2)*(n-2)
a2=n*m-a1
print(a2,a1)","0.0"
"43c6f24d-b89c-4762-9dc6-b6c3aaee6f1a","A = int(input())
B = int(input())
C = int(input())
L = 0
for i in range(A, B+1):
    if i%C == 0:
        L = i
        break
R = (B//C)*C
#print(L,R)
print((R-L)//C+1)","0.0"
"43c6f24d-b89c-4762-9dc6-b6c3aaee6f1a","a = int(input())
b = int(input())
c = int(input())
k = 0
if (b-a)<1000000:
	for i in range(a, b+1):
		if i%c==0:
			k+=1
else:
	if a%c==0 or (a+a%c)%c==0:
		k+=1
	k += (b-a)//c
print(k)
","0.0"
"87b17251-9fef-4c2f-9cd4-79662ec2957e","k, a, b = map(int, input().split())

# ÐÐ°ÑÐ¾Ð´Ð¸Ð¼ ÑÐ°Ð³, ÐºÐ¾ÑÐ¾ÑÑÐ¹ Ð±ÑÐ´ÐµÑ Ð²ÑÐ¿Ð¾Ð»Ð½ÑÑÑÑÑ Ð¿ÑÐ¸ ÐºÐ°Ð¶Ð´Ð¾Ð¼ ÑÐ¸ÐºÐ»Ðµ
step = abs(a) + abs(b)

# ÐÐ¿ÑÐµÐ´ÐµÐ»ÑÐµÐ¼, Ð² ÐºÐ°ÐºÐ¾Ð¼ Ð½Ð°Ð¿ÑÐ°Ð²Ð»ÐµÐ½Ð¸Ð¸ Ð¼Ð°ÑÑÑÑÐºÐ° Ð±ÑÐ´ÐµÑ Ð´Ð²Ð¸Ð³Ð°ÑÑÑÑ
direction = 1 if (a > 0 and b < 0) or (a < 0 and b > 0) else -1

# ÐÐ°ÑÐ¾Ð´Ð¸Ð¼ Ð¼Ð°ÐºÑÐ¸Ð¼Ð°Ð»ÑÐ½Ð¾Ðµ ÑÐ°ÑÑÑÐ¾ÑÐ½Ð¸Ðµ, ÐºÐ¾ÑÐ¾ÑÐ¾Ðµ Ð¼Ð¾Ð¶ÐµÑ Ð¿ÑÐ¾Ð¹ÑÐ¸ Ð¼Ð°ÑÑÑÑÐºÐ°
max_distance = k * step

# ÐÐ°ÑÐ¾Ð´Ð¸Ð¼ ÐºÐ¾Ð»Ð¸ÑÐµÑÑÐ²Ð¾ ÑÐ°Ð·Ð»Ð¸ÑÐ½ÑÑ Ð¿Ð¾Ð·Ð¸ÑÐ¸Ð¹, Ð³Ð´Ðµ Ð¼Ð°ÑÑÑÑÐºÐ° Ð¼Ð¾Ð¶ÐµÑ Ð½Ð°ÑÐ¸ÑÐ¾Ð²Ð°ÑÑ ÑÐ²ÐµÑÐ¾ÑÐµÐº
# (Ð¼Ð°ÐºÑÐ¸Ð¼Ð°Ð»ÑÐ½Ð¾Ðµ ÑÐ°ÑÑÑÐ¾ÑÐ½Ð¸Ðµ + 1, Ð¿Ð¾ÑÐ¾Ð¼Ñ ÑÑÐ¾ ÑÑÐ¸ÑÐ°ÐµÐ¼ Ð¸ Ð½Ð°ÑÐ°Ð»ÑÐ½ÑÑ Ð¿Ð¾Ð·Ð¸ÑÐ¸Ñ)
max_flowers = (max_distance // step) + 1

# ÐÑÐ²Ð¾Ð´Ð¸Ð¼ ÑÐµÐ·ÑÐ»ÑÑÐ°Ñ
print(max_flowers)","0.0"
"daa00bbb-65ee-4c2e-b966-992c51cbdb0f","L, V1, V2, T = map(int, input().split())

distance_piton1 = V1 * T
distance_piton2 = V2 * T

distance_between_pitons = (distance_piton1 + distance_piton2) % L

min_distance = min(distance_between_pitons, L - distance_between_pitons)

print(min_distance)
","0.0"
"87b17251-9fef-4c2f-9cd4-79662ec2957e","k, a, b = map(int, input().split())


step = abs(a) + abs(b)

direction = 1 if (a > 0 and b < 0) or (a < 0 and b > 0) else -1


max_distance = k * step


max_flowers = (max_distance // step) + 1


print(max_flowers)","0.0"
"ac08298f-25c3-4193-9ae8-4fdb89da54e8","a, b = map(int, input().split(' '))
print(2 * a + (b - 2) * 2, (a - 2) * (b - 2))","0.0"
"daa00bbb-65ee-4c2e-b966-992c51cbdb0f","l,v1,v2,t=map(int,input().split())
time=t*(v1+v2)
distance=time%l
if distance>l/2:
    distance=l-distance
print(distance)","0.0"
"daa00bbb-65ee-4c2e-b966-992c51cbdb0f","l,v1,v2,t=map(int,input().split())
if ((v1+v2)*t)%l>=l/2:
    print(l-((v1+v2)*t)%l)
else:
    print(((v1+v2)*t)%l)","0.0"
"43c6f24d-b89c-4762-9dc6-b6c3aaee6f1a","a = int(input())
b = int(input())
c = int(input())
res = 0
s = a // c * c
while s <= b:
    if a<=s<=b:
        res += 1
    s += c
print(res)
","0.0"
"daa00bbb-65ee-4c2e-b966-992c51cbdb0f","L, V1, V2, T=map(int,input().split())
d=T*(V1+V2)
s=d%L
if s>L/2:
    s=L-s
print(s)","0.0"
"13f523e4-1cd2-4724-8b60-a0f6f25007d9","n = int(input())
q = 1
end = input()[1]
for i in range(1, n):
    p = input()
    a, b = p[0], p[1]
    if a == end:
        end = b
        continue
    q += 1
print(q)","0.0"
"43c6f24d-b89c-4762-9dc6-b6c3aaee6f1a","a = int(input())
b = int(input())
c = int(input())
res = 0
s = a // c * c
for x in range(s, b+1, c):
    if a<=x<=b:
        res += 1
print(res)
","0.0"
"daa00bbb-65ee-4c2e-b966-992c51cbdb0f","a,b,c,d=map(int,input().split())
if ((b+c)*d)%a>=a/2:
    print(a-((b+c)*d)%a)
else:
    print(((b+c)*d)%a)

    
","0.0"
"4c960d61-0634-4b66-90e7-3bf2894ef6de","y,k,n=map(int,input().split())
a=y%k
b=k-a
c=y+b
f=0
h=[]
for i in range(c,n+1,k):
    h.append(i-y)
    f=1
if f==0:
    print(-1)
else:
    print(*h)","0.0"
"70f7c75a-c93c-48c0-84d1-cf78ed51deea","n,t = map(int,input().split())
a= list(map(int,input().split()))
k = 1
ost = 0
for i in range(n):
    if a[i]-ost + t > 80000:
        ost = 80000 - a[i]
        k+=1
    else:
        break
print(k)","0.0"
"13f523e4-1cd2-4724-8b60-a0f6f25007d9","n=int(input())
k=0
h=[]
for i in range(n):
    s=input()
    h.append(s)
    if h[i-1][1]!=s[0]:
        k+=1
print(k)","0.0"
"4c960d61-0634-4b66-90e7-3bf2894ef6de","y, k, n = map(int, input().split())
g = 0
x = 0
while (y + x) < n:

    if (y + x) % k == 0:
        g = 1
        print (x, end=' ')
    x += 1
if g == 0:
    print(-1)","0.0"
"4c960d61-0634-4b66-90e7-3bf2894ef6de","y, k, n = map(int, input().split())

ostatok = n - y

if ostatok == 0:
    print(-1)
    exit()

event = False
for i in range(1, ostatok):
    if (i + y) % k == 0:
        print(i, end = ' ')
        event = True

if not event:
    print(-1)","0.0"
"43c6f24d-b89c-4762-9dc6-b6c3aaee6f1a","a, b, k = int(input()), int(input()), int(input())
a = ((a-1)//k)*k + k
b = (b//k)*k
print((b-a)//k + 1 if b-a >= 0 else 0)
","0.0"
"4c960d61-0634-4b66-90e7-3bf2894ef6de","y, k, n = map(int, input().split(' '))
a = list()
if y < k:
    s = k
else:
    s = (y // k + 1) * k
for i in range(s, n + 1, k):
    a.append(i - y)
if len(a) == 0:
    print(-1)
else:
    print(*a)","0.0"
"4c960d61-0634-4b66-90e7-3bf2894ef6de","y, k, n = map(int, input().split())
g = 0
x = 0
while (y + x) < n:

    if (y + x) % k == 0:
        g = 1
        print (x, end=' ')
        x += (k - 1)
    x += 1
if g == 0:
    print(-1)","0.0"
"ac08298f-25c3-4193-9ae8-4fdb89da54e8","n,m=map(int,input().split())
pp=(n+m)*2-2*2
sp=n*m-pp
print(pp,sp)
","0.0"
"1a0c244f-dc1f-4d44-8d80-19db61bd9e0c","a = list(input().split())
answer = 0
while True:
    for i in range(0, len(a) - 3):
        if a[i] == a[i+1] == a[i+2]:
            del a[i]
            del a[i]
            del a[i]
            answer+= 3
            break
    else:
        break
print(answer)","0.0"
"43c6f24d-b89c-4762-9dc6-b6c3aaee6f1a","a = int(input())
b = int(input())
c = int(input())
res = 0
s = a + (c - a % c) % c
res = ((b - s) // c) + 1 if s <= b else 0
print(res)","0.0"
"13f523e4-1cd2-4724-8b60-a0f6f25007d9","n = int(input())
s = 0

a = input()
for i in range(n-1):
    b = input()
    if a[-1] == b[0]:
        a = b
    else:
        s += 1

print(s+1)
","0.0"
"4c960d61-0634-4b66-90e7-3bf2894ef6de","y, k, n = map(int, input().split())

ostatok = n - y

if ostatok == 0:
    print(-1)
    exit()

event = False
for i in range(1, ostatok):
    if (i + y) % k == 0:
        x = i
        event = True
        break

if not event:
    print(-1)
    exit()

while x + y <= n:
    print(x, end = ' ')
    x += k

","0.0"
"ac08298f-25c3-4193-9ae8-4fdb89da54e8","n, m = (int(x) for x in input().split())
print(2*n +2* (m-2), n*m - (2*n +2* (m-2)))","0.0"
"43c6f24d-b89c-4762-9dc6-b6c3aaee6f1a","a=int(input())
b=int(input())
c=int(input())
if a%c==0:
    print(b//c-a//c+1)
else:
    print(b//c-a//c)
","0.0"
"4c960d61-0634-4b66-90e7-3bf2894ef6de","y, k, n = map(int, input().split())

ostatok = n - y

if ostatok == 0:
    print(-1)
    exit()

event = False
for i in range(1, ostatok):
    if (i + y) % k == 0:
        x = i
        event = True
        break

if not event:
    print(-1)
    exit()

while x + y <= n:
    print(x, end = ' ')
    x += k

","0.0"
"70f7c75a-c93c-48c0-84d1-cf78ed51deea","list = []
n, t = input ().split ()
v = (int(t))
for i in range(int(n)):
    a = input ().split ()
    list = list + a
    break
for c in range(int(n)):
    if 80000-int(list[c]) >= v:
        print(c+1)
        break
    else:
        v = v - (80000-int(list[c]))","0.0"
"13f523e4-1cd2-4724-8b60-a0f6f25007d9","n = int(input())
l = input()[1]
res = 1
for i in range(n - 1):
    e = input()
    if l != e[0]:
        res += 1
    l = e[1]
print(res)","0.0"
"daa00bbb-65ee-4c2e-b966-992c51cbdb0f","L,v1,v2,t = map(int,input().split())
dist = (v1 + v2) * t
rust = dist % L
if rust > L/2:
    rust = L - rust
print(rust)
    
","0.0"
"70f7c75a-c93c-48c0-84d1-cf78ed51deea","n,t = [int(i) for i in input().split()]
a = [int(i) for i in input().split()]
k = 1
for i in range(n):
    if a[i] <80000:
        t-=(80000-a[i])
    if t == 0:
        print(k)
        break
    k+=1","0.0"
"4c960d61-0634-4b66-90e7-3bf2894ef6de","y, k, n = map(int, input().split())

ostatok = n - y

if ostatok == 0:
    print(-1)
    exit()

for i in range(1, ostatok):
    if (i + y) % k == 0:
        x = i
        break

while x + y <= n:
    print(x, end=' ')
    x += k


","0.0"
"4c960d61-0634-4b66-90e7-3bf2894ef6de","y, k, n = map(int, input().split())

ostatok = n - y

if ostatok == 0:
    print(-1)
    exit()

event = False
for i in range(1, k):
    if (i + y) % k == 0:
        x = i
        event = True
        break

if not event:
    print(-1)
    exit()

while x + y <= n:
    print(x, end=' ')
    x += k


","0.0"
"cfe47bb0-2389-4fae-84c2-9287605fc571","n,k = (int(x) for x in input().split())
mx = -10**10
for i in range(n):
    f, t = (int(x) for x in input().split())
    if t > k:
        u = f - (t - k)
    else:
        u = f
    mx = max(mx, u)
print(mx)","0.0"
"ac08298f-25c3-4193-9ae8-4fdb89da54e8","n,m=map(int,input().split())
s=n*m
p=(n-1)*2+(m-1)*2
ch=s-p
print(p, ch)
","0.0"
"ac08298f-25c3-4193-9ae8-4fdb89da54e8","n, m = map(int, input().split())
popugays = 2 * (n + m - 2)
worms = (n - 2) * (m - 2)
print(popugays, worms)","0.0"
"bcf4caae-6f1c-488c-9cab-bf7232dd9614","skolko_ih = int(input())
kakashki = list(map(int,input().split()))
l = 0
r = skolko_ih-1
l_last = 0
r_last = 0
sml = kakashki[0]
smr = kakashki[r]
while l < r:
    if sml == smr:
        l_last = l + 1
        r_last = skolko_ih - r
        
        l += 1
        sml += 1
    if sml < smr:
        l += 1
        sml += kakashki[l]
    if smr < sml:
        r -= 1
        smr += kakashki[r]
print(l_last + r_last)","0.0"
"13f523e4-1cd2-4724-8b60-a0f6f25007d9","n = int(input())
l = ''.join([input() for i in range(n)])
print(n - l.count('00') - l.count('11'))","0.0"
"4c960d61-0634-4b66-90e7-3bf2894ef6de","y, k, n = map(int, input().split())

possible_values = []

for x in range(1, n + 1):
  if (x + y) % k == 0 and (x + y) <= n:
    possible_values.append(x)

if possible_values:
  print(*possible_values)
else:
  print(-1)
","0.0"
"4c960d61-0634-4b66-90e7-3bf2894ef6de","y,k,n = map(int,input().split())
m = [x for x in range(k-(y%k),n-y-(y%k)+1,k)]
if len(m)==0:
	print(-1)
else:
	print(*m)","0.0"
"4c960d61-0634-4b66-90e7-3bf2894ef6de","y, k, n = map(int, input().split())

if n - y == 0:
    print(-1)
    exit()
event = False
for i in range(1, k + 1):
    if (i + y) % k == 0 and (i + y) <= n:
        x = i
        event = True
        break

if not event:
    print(-1)
    exit()

while x + y <= n:
    print(x, end=' ')
    x += k
","0.0"
"4c960d61-0634-4b66-90e7-3bf2894ef6de","y, k, n = map(int, input().split())

if n - y == 0:
    print(-1)
    exit()
event = False
for i in range(1, k + 1):
    if (i + y) % k == 0 and (i + y) <= n:
        x = i
        event = True
        break

if not event:
    print(-1)
    exit()

while x + y <= n:
    print(x, end=' ')
    x += k
","0.0"
"4c960d61-0634-4b66-90e7-3bf2894ef6de","y, k, n = map(int, input().split())

if n - y == 0:
    print(-1)
    exit()
event = False
for i in range(1, n - y + 1):
    if (i + y) % k == 0 and (i + y) <= n:
        x = i
        event = True
        break

if not event:
    print(-1)
    exit()

while x + y <= n:
    print(x, end=' ')
    x += k
","0.0"
"ac08298f-25c3-4193-9ae8-4fdb89da54e8","x,y = map(int,input().split())
print(x*y-((x-2)*(y-2)),(x-2)*(y-2))","0.0"
"cfe47bb0-2389-4fae-84c2-9287605fc571","u1=-999
n,k=map(int,input().split())
for i in range(n):
    f,t=map(int,input().split())
    if t>k:
        u=f-(t-k)
    else:
        u=f
    if u>u1:
        u1=u
print(u1)","0.0"
"70f7c75a-c93c-48c0-84d1-cf78ed51deea","from math import ceil
n,t = [int(x) for x in input().split()]
m = [int(x) for x in input().split()]
x = 0
for i in range(len(m)):
    x += (80000 - m[i])
    if x >= t:
        print(i+1)
        break
","0.0"
"daa00bbb-65ee-4c2e-b966-992c51cbdb0f","l, v1, v2, t = map(int, input().split())
s1 = v1 * t % l
s2 = l - v2 * t % l
print(min(l - abs(s1 - s2), abs(s1-s2)))","0.0"
"1a0c244f-dc1f-4d44-8d80-19db61bd9e0c","n = [x for x in input().split(' ')]
n = n[1:]
res = 0
fl = True
n = ''.join(n)
while fl:
    fl = False
    for x in '0123456789':
        if x * 3 in n:
            n = n.replace(x*3, '', 1)
            res += 3
            fl = True
print(res)","0.0"
"1a0c244f-dc1f-4d44-8d80-19db61bd9e0c","arr = [int(s) for s in input().split()]

counter = 0
ans_counter = 0
for i in range(len(arr) - 1):
    if arr[i] == arr[i + 1]:
        counter += 1
        if (counter == 2):
            ans_counter += 3
            counter = 0
    else:
        counter = 0

print(ans_counter)","0.0"
"ac08298f-25c3-4193-9ae8-4fdb89da54e8","n,m = map(int,input().split())
p = 0
ch = 0
p = n*2+m*2-4
ch = n*m-p
print(p, ch)
","0.0"
"ac08298f-25c3-4193-9ae8-4fdb89da54e8","N, M=map(int,input().split())
s=M*N
pop=s-(N-2)*(M-2)
cherv=(N-2)*(M-2)
print(pop, cherv)
","0.0"
"70f7c75a-c93c-48c0-84d1-cf78ed51deea","n,t=map(int,input().split())
a = list(map(int, input().split()))
b=0
for i in range(n):
    b+=a[i]
    if b+t<=80000*(i+1):
        print(i+1)
        break","0.0"
"43c6f24d-b89c-4762-9dc6-b6c3aaee6f1a","a=int(input())
b=int(input())
c=int(input())
s=0
for i in range(a,b+1):
    if i%c ==0:
        s+=1
print(s)
","0.0"
"13f523e4-1cd2-4724-8b60-a0f6f25007d9","n=int(input())
c=1
s=[]
for i in range(n):
    a=int(input())
    s.append(a)
for i in range(n-1):
    if s[i]==s[i+1]:
        c+=1
print(c)
    
","0.0"
"ac08298f-25c3-4193-9ae8-4fdb89da54e8","n, m = map(int, input().split())
popugays = 2 * (n + m - 2)
worms = (n - 2) * (m - 2)
print(popugays, worms)
","0.0"
"1a0c244f-dc1f-4d44-8d80-19db61bd9e0c","def find(s):
    for i in range(len(s) -3):
        if s[i] == s[i+1] == s[i+2]:
            for j in range(i+3, len(s)):
                if s[j] != s[i]:
                    break
            return i, j
    else:
        return -1, -1
r = list(input().split())
ans = 0
while True:
    a, b = find(r)
    if a == -1:
        break
    s = len(r)
    del r[a:b]
    ans+= (s-len(r))
print(ans)","0.0"
"daa00bbb-65ee-4c2e-b966-992c51cbdb0f","l, v1, v2, t = map(int, input().split())

l1, l2 = v1*t%l, l - v2*t%l

print(min(abs(l1-l2), l - abs(l1-l2)))","0.0"
"70f7c75a-c93c-48c0-84d1-cf78ed51deea","n,t=map(int, input().split())
a=list(map(int, input().split()))
b=0
for i in range(n):
    b+=a[i]
    if b+t<=80000*(i+1):
        print(i+1)
        break
","0.0"
"13f523e4-1cd2-4724-8b60-a0f6f25007d9","n = int(input())
kol=1
sp=[]
for i in range(n):
    f = input()
    sp.append(f)

for i in range(0, len(sp)-1):

    if sp[i]==sp[i+1]:
        kol+=1
print(kol)
","0.0"
"cfe47bb0-2389-4fae-84c2-9287605fc571","list = []
u = 0
n, k = input ().split ()
for c in range(int(n)):
    f, t = input ().split ()
    if int(t)>int(k):
        u = int(f)-(int(t)-int(k))
    else:
        u = int(f)
    list = list + [u]
list.sort()
print(list[int(n)-1])","0.0"
"70f7c75a-c93c-48c0-84d1-cf78ed51deea","n,t=map(int,input().split())
a=list(map(int,input().split()))
b=0
for i in range(n):
    b+=a[i]
    if b+t<=80000*(i+1):
        print(i+1)
        break","0.0"
"cfe47bb0-2389-4fae-84c2-9287605fc571","n,k = map(int,input().split())
d=-10000
for i in range(n):
    f,t = map(int,input().split())
    if t>k:
        b=f-(t-k)
        if b>d:
            d=b
    else:
        if t<=k:
            b=f
            if b>d:
                d=b
print(d)","0.0"
"ac08298f-25c3-4193-9ae8-4fdb89da54e8","x, y=map(int,input().split())
f=x*y
pop=f-(x-2)*(y-2)
cherv=(x-2)*(y-2)
print(pop, cherv)



","0.0"
"cfe47bb0-2389-4fae-84c2-9287605fc571","n, k = map(int, input().split())
f = []
t = []
arr = []

for i in range(n):
    a, b = map(int, input().split())
    f.append(a)
    t.append(b)

for i in range(len(f)):
    if t[i] > k:
        arr.append(f[t.index(t[i])] - (t[i]-k))
    else:
        arr.append(f[i])
        
print(max(arr))
","0.0"
"4c960d61-0634-4b66-90e7-3bf2894ef6de","y, k, n = map(int, input().split())
x = ((y // k + 1) * k) - y
a = (n - y) // k
if a == 0:
    print (-1)
else:

    for i in range (a):
        print (x + (i * k), end =' ')","0.0"
"4c960d61-0634-4b66-90e7-3bf2894ef6de","y, k, n = map(int, input().split())
start = y//k*k + k - y
print(' '.join(map(str, range(start, n-y+1, k))) if n-start >= 0 else -1)","0.0"
"4c960d61-0634-4b66-90e7-3bf2894ef6de","y, k, n = map(int, input().split())
start = y//k*k + k - y
print(' '.join(map(str, range(start, n-y, k))) if n-start >= 0 else -1)","0.0"
"ac08298f-25c3-4193-9ae8-4fdb89da54e8","a,b = [int(i) for i in input().split()]
y = (a - 2) * (b - 2)
x = a * b - y
print(x,y)","0.0"
"1a0c244f-dc1f-4d44-8d80-19db61bd9e0c","def count_destroyed_balls(n, balls):
    destroyed = 0
    i = 0
    while i < n-2:
        if balls[i] == balls[i+1] and balls[i] == balls[i+2]:
            color = balls[i]
            while i < n and balls[i] == color:
                destroyed += 1
                i += 1
        else:
            i += 1
    return destroyed

n, *balls = map(int, input().split())
print(count_destroyed_balls(n, balls))","0.0"
"87b17251-9fef-4c2f-9cd4-79662ec2957e","k, a, b=map(int, input().split())
d=a+b
if d==0:
    print(1);
else:
    print(k+1)
    
","0.0"
"43c6f24d-b89c-4762-9dc6-b6c3aaee6f1a","y1 = int(input())
y2 = int(input())
c = int(input())

counter = 0
for i in range(y1, y2 + 1):
    if i % c == 0:
        x = i
        break

while x <= y2:
    counter += 1
    x += c

print(counter)","0.0"
"4c960d61-0634-4b66-90e7-3bf2894ef6de","y, k, n = map(int, input().split())
x = (((y - 1) // k + 1) * k) - y
a = (n - y) // k
if a == 0:
    print (-1)
else:

    for i in range (a):
        print (x + (i * k), end =' ')
    if y % k == 0:
        print (x + ((i + 1) * k))","0.0"
"43c6f24d-b89c-4762-9dc6-b6c3aaee6f1a","y1 = int(input())
y2 = int(input())
c = int(input())

counter = 0
x = 10 ** 9
for i in range(y1, y2 + 1):
    if i % c == 0:
        x = i
        break

while x <= y2:
    counter += 1
    x += c

print(counter)","0.0"
"4c960d61-0634-4b66-90e7-3bf2894ef6de","y, k, n = map(int, input().split())
start = y//k*k + k - y
print(' '.join(map(str, range(start, n-y, k))) if n-start >= 0 else -1)","0.0"
"1a0c244f-dc1f-4d44-8d80-19db61bd9e0c","def find(s):
    for i in range(len(s) -3):
        if s[i] == s[i+1] == s[i+2]:
            for j in range(i+3, len(s)):
                if s[j] != s[i]:
                    break
            return i, j
    else:
        return -1, -1
r = list(input().split())
del r[0]
ans = 0
while True:
    a, b = find(r)
    if a == -1:
        break
    s = len(r)
    del r[a:b]
    ans+= (s-len(r))
print(ans)
","0.0"
"ac08298f-25c3-4193-9ae8-4fdb89da54e8","n, m = map(int, input().split())
a = n*m
w = (n - 2) * (m - 2)
p = a - w
print(p,w)
","0.0"
"70f7c75a-c93c-48c0-84d1-cf78ed51deea","n, t = map(int, input().split())
array = [int(s) for s in input().split()]
s = 0
x = 0

for i in array:
    s += 80000-i
    x += 1
    if s >= t:
        print(x)
        break
","0.0"
"43c6f24d-b89c-4762-9dc6-b6c3aaee6f1a","a = int(input())
b = int(input())
c = int(input())

counter = 0
x = 10 ** 9
for i in range(a, b + 1):
    if i % c == 0:
        x = i
        break
while x <= b:
    counter += 1
    x += c

print(counter)","0.0"
"43c6f24d-b89c-4762-9dc6-b6c3aaee6f1a","a = int(input())
b = int(input())
c = int(input())
i = 1
ot = 0
v = c
while v < b:
    v = c * i
    i = i + 1
    if(v >= a and v <= b):
        ot = ot + 1
print(ot)","0.0"
"43c6f24d-b89c-4762-9dc6-b6c3aaee6f1a","a = int(input())
b = int(input())
c = int(input())

counter = 0
event = False
for i in range(a, b + 1):
    if i % c == 0:
        x = i
        event = True
        break
        
if not event:
    print(counter)
    exit()
    
while x <= b:
    counter += 1
    x += c

print(counter)","0.0"
"4c960d61-0634-4b66-90e7-3bf2894ef6de","y, k, n = map(int, input().split())
start = y//k*k + k
print(' '.join(map(str, range(start-y, n-y+1, k))) if n-start >= 0 else -1)","0.0"
"13f523e4-1cd2-4724-8b60-a0f6f25007d9","n = int(input())
chain_count = 1  # ÐÐ°ÑÐ¸Ð½Ð°ÐµÐ¼ Ñ Ð¾Ð´Ð½Ð¾Ð¹ ÑÐµÐ¿Ð¾ÑÐºÐ¸

previous_tail = input()

for i in range(1, n):
    current_tail = input()
    # ÐÑÐ¾Ð²ÐµÑÑÐµÐ¼, ÑÐ¿Ð»ÐµÑÐ°ÑÑÑÑ Ð»Ð¸ Ð¿Ð¸ÑÐ¾Ð½Ñ
    if previous_tail == current_tail:
        chain_count += 1  # Ð£Ð²ÐµÐ»Ð¸ÑÐ¸Ð²Ð°ÐµÐ¼ ÑÑÐµÑÑÐ¸Ðº ÑÐµÐ¿Ð¾ÑÐµÐº, ÐµÑÐ»Ð¸ Ð½Ðµ ÑÐ¿Ð»ÐµÐ»Ð¸ÑÑ
    previous_tail = current_tail  # ÐÐ±Ð½Ð¾Ð²Ð»ÑÐµÐ¼ Ð¿ÑÐµÐ´ÑÐ´ÑÑÐ¸Ð¹ Ð¿Ð¸ÑÐ¾Ð½

print(chain_count)
","0.0"
"5f3269b9-ef62-40cd-accf-5dbce420975b","n,k,q=map(int,input().split())
a=list(map(int,input().split()))
h=[-1]
b=0
for i in range(n):
    if a[i]<q:
        h.append(i)
h.append(i+1)
for i in range(1,len(h)):
    a=h[i]-h[i-1]-1
    c=a-k+1
    if c%2==0 and c>0:
        b+=(c+1)*(c//2)
    elif c%2!=0 and c>0:
        b+=(c+1)*(c//2)+(c//2+1)
print(b)","0.0"
"13f523e4-1cd2-4724-8b60-a0f6f25007d9","a = 1
for i in range (int(input())):
    if i == 0:
        b = input()
    elif i % 2 == 0:
        b = input()
        if c[1] != b[0]:
            a += 1
    else:
        c = input()
        if b[1] != c[0]:
            a += 1
print (a)","0.0"
"43c6f24d-b89c-4762-9dc6-b6c3aaee6f1a","a = int(input())
b = int(input())
c = int(input())
i = 1
ot = 0
v = c
while v <= b:
    v = c * i
    i = i + 1
    if(v >= a and v <= b):
        ot = ot + 1
print(ot)","0.0"
"ac08298f-25c3-4193-9ae8-4fdb89da54e8","n,m=map(int,input().split())
s=m*n
che=s-(n-2)*(m-2)
popu=(n-2)*(m-2)
print(che,popu)","0.0"
"43c6f24d-b89c-4762-9dc6-b6c3aaee6f1a","a=int(input())
b=int(input())
c=int(input())
y=0
for i in range(a, b+1):
    if i%c==0:
        y+=1
print(y)","0.0"
"70f7c75a-c93c-48c0-84d1-cf78ed51deea","n, t=map(int, input().split())
j=0
a=[int(s) for s in input().split()]
for g in range(n):
    j+=1
    if 80000-a[g]>=t:
        print(j)
        break","0.0"
"70f7c75a-c93c-48c0-84d1-cf78ed51deea","n, t = map(int, input().split())
day=0

sp = [int(i) for i in input().split()]

for i in range(0, len(sp)+1):
    r = 80000-sp[i]

    day+=1
    if r>0:
        t-=r
    if t<=0:
        break
print(day)","0.0"
"4c960d61-0634-4b66-90e7-3bf2894ef6de","y, k, n = map(int, input().split())
start = (y // k*k + k)
print(' '.join (map(str, range(start - y, n - y + 1, k)))if n-start >=0 else -1)","0.0"
"70f7c75a-c93c-48c0-84d1-cf78ed51deea","n, t=map(int, input().split())
j=0
b=0
a=[int(s) for s in input().split()]
for g in range(n):
    b+=80000-a[g]
    j+=1
    if b>=t:
        print(j)
        break
","0.0"
"43c6f24d-b89c-4762-9dc6-b6c3aaee6f1a","a=int(input())
b=int(input())
c=int(input())
y=0
for i in range(a, b+1):
    if i%c==0:
        y+=1
print(y)","0.0"
"1a0c244f-dc1f-4d44-8d80-19db61bd9e0c","
a = input().split()
b = []
for i in range (len(a)):
    b.append(a[i])
    if len(b) >= 3:
        if b[-1] == b[-2] == b[-3]:
            b = b[:-3]
print (len(a) - len(b))


","0.0"
"ac08298f-25c3-4193-9ae8-4fdb89da54e8","n,m=map(int,input().split())
if n*m>2*(n+m)-4:
    print(2*(n+m)-4,n*m-(2*(n+m)-4))
else:
    print(n*m,0)","0.0"
"1a0c244f-dc1f-4d44-8d80-19db61bd9e0c","def count_destroyed_balls(n, balls):
    destroyed = 0
    i = 0
    while i < n-2:
        if balls[i] == balls[i+1] and balls[i] == balls[i+2]:
            color = balls[i]
            while i < n and balls[i] == color:
                destroyed += 1
                i += 1
        else:
            i += 1
    return destroyed

n, *balls = map(int, input().split())
print(count_destroyed_balls(n, balls))
","0.0"
"cfe47bb0-2389-4fae-84c2-9287605fc571","n, k = map(int, input().split())
max_pleasure = -float('inf')
for _ in range(n):
    f, t = map(int, input().split())
    pleasure = f if t <= k else f - (t - k)
    max_pleasure = max(max_pleasure, pleasure)  
print(max_pleasure)","0.0"
"bcf4caae-6f1c-488c-9cab-bf7232dd9614","import math
n = int(input())
arr = [int(s) for s in input().split()]
pr_sum1 = []
pr_sum2 = []

for i in range(math.ceil(len(arr) / 2)):
    if i == 0:
        pr_sum1.append(arr[i])
    else:
        pr_sum1.append(arr[i] + pr_sum1[i - 1])

arr = arr[::-1]

for i in range(len(arr) // 2):
    if i == 0:
        pr_sum2.append(arr[i])
    else:
        pr_sum2.append(arr[i] + pr_sum2[i - 1])

mx = 0
for i in range(len(pr_sum1)):
    if pr_sum1[i] in pr_sum2:
        mx = i + pr_sum2.index(pr_sum1[i]) + 2

print(mx)","0.0"
"4c960d61-0634-4b66-90e7-3bf2894ef6de","y, k, n = map(int, input().split())
arr = []
x = 0

for i in range(n):
    if (y + i) % k == 0 and (y + i) < n:
        arr.append(i)

if len(arr) == 0:
    print(-1)
else:
    print(*arr)
","0.0"
"1a0c244f-dc1f-4d44-8d80-19db61bd9e0c","a=list(map(int,input().split()))
d=-1
g=0
v=0
k=0
f=[]
h=[]
for i in range(len(a)):
    if a[i]!=a[i-1]:
        h.append(k)
        f.append(i)
        k=0
    k+=1
for i in range(len(h)):
    if h[i]>2 and d<i:
        v+=h[i]
        g=i-1
        d=i+1
        if g>0 and d<len(h) and f[g]==f[d]:
            for i in range(1000):
                if f[g]==f[d] and g>0 and d<len(h):
                    v+=h[g]+h[d]
                    d+=1
                    g-=1
                else:
                    break
print(v)","0.0"
"ac08298f-25c3-4193-9ae8-4fdb89da54e8","N, M=map(int,input().split())
X=(M-2)*(N-2)
Y=(M*N)-X
print(Y,X)","0.0"
"4c960d61-0634-4b66-90e7-3bf2894ef6de","y, k, n = map(int, input().split())
a = []
for x in range(1, n + 1):
    if (x + y) <= n and (x + y) % k == 0:
        a.append(x)
a = [str(i) for i in a]
res = ' '.join(a)
if len(res) == 0:
    print(-1)
else:
    print(res)","0.0"
"13f523e4-1cd2-4724-8b60-a0f6f25007d9","n=int(input())
s=[]
d=0
for g in range(n):
    i=str(input())
    s.append(i)
for i in range(len(s)-1):
    if s[i][1]==s[i+1][0]:
        d+=1
print(n-1-d+1)

","0.0"
"4c960d61-0634-4b66-90e7-3bf2894ef6de","y, k, n = map(int, input().split())
a = []
for x in range(1, n + 1):
    if (x + y) <= n and (x + y) % k == 0:
        a.append(x)
res = ' '.join(map(str, a))
if len(res) == 0:
    print(-1)
else:
    print(res)","0.0"
"4c960d61-0634-4b66-90e7-3bf2894ef6de","y,k,n = [int(i) for i in input().split()]
f = []
for i in range(1,n-y):
    if (i + y) % k == 0:
        f.append(i)
if y >= n:
    print(-1)
    exit()
print(*f)","0.0"
"70f7c75a-c93c-48c0-84d1-cf78ed51deea","s=0
n,t=map(int,input().split())
a=list(map(int,input().split()))
for i in range(99):
    t-=80000-a[i]
    if t<1:
        break
    s+=1
print(s+1)","0.0"
"ac08298f-25c3-4193-9ae8-4fdb89da54e8","a, b= input ().split ()
p = (int(a)*2)+((int(b)-2)*2)
ch = (int(a)*int(b))-p
print(p, ch)","0.0"
"bcf4caae-6f1c-488c-9cab-bf7232dd9614","n=int(input())
a=[int(s) for s in input().split()]
print(n-1)","0.0"
"4c960d61-0634-4b66-90e7-3bf2894ef6de","y,k,n = [int(i) for i in input().split()]
f = []
for i in range(1,n-y):
    if (i + y) % k == 0:
        f.append(i)
if y >= n:
    print(-1)
    exit()
f.sort()
print(*f)","0.0"
"5f3269b9-ef62-40cd-accf-5dbce420975b","n, k, q = map(int, input().split())

arr = [int(s) for s in input().split()]

work_arr = []
ans = 0
for i in range(len(arr)):
    if arr[i] >= q:
        work_arr.append(arr[i])
    else:
        if len(work_arr) >= k:
            a = len(work_arr) - k
            for i in range(1, a + 2):
                ans += i
        work_arr = []

if len(work_arr) >= k:
    a = len(work_arr) - k
    for i in range(1, a + 2):
        ans += i
work_arr = []

print(ans)","0.0"
"4c960d61-0634-4b66-90e7-3bf2894ef6de","y, k, n = map(int, input().split())
possible_values = []

for x in range(k - (y % k), n + 1, k):
    if x + y <= n:
        possible_values.append(x)

if possible_values:
    print(*possible_values)
else:
    print(-1)
","0.0"
"43c6f24d-b89c-4762-9dc6-b6c3aaee6f1a","def visit(A, B, C):
    y=0
    for i in range(A, B+1):
        if i%C==0:
            y+=1
    return y
A=int(input())
B=int(input())
C=int(input())
print(visit(A, B, C))
","0.0"
"13f523e4-1cd2-4724-8b60-a0f6f25007d9","n = int(input())
m = []
s = ''
pred = input()
m = [pred]
for i in range(n-1):
	sled = input()
	if pred[1]==sled[0]:
		m[-1]+=sled
	else:
		m.append(sled)
	pred = sled
print(len(m))","0.0"
"4c960d61-0634-4b66-90e7-3bf2894ef6de","y,k,n = [int(i) for i in input().split()]
f = []
for i in range(1,(n-y)+1):
    if (i + y) % k == 0:
        f.append(i)
if y >= n:
    print(-1)
    exit()
f.sort()
print(*f)","0.0"
"daa00bbb-65ee-4c2e-b966-992c51cbdb0f","L, V1, V2, T = map(int, input().split())
x = V1 * T % L
y = L - V2 * T % L
print(min(abs(x - y), L - abs(x - y)))","0.0"
"1a0c244f-dc1f-4d44-8d80-19db61bd9e0c","a=list(map(int,input().split()))
d=-1
g=0
v=0
k=0
f=[]
h=[]
for i in range(len(a)):
    if a[i]!=a[i-1] and i>0:
        h.append(k)
        f.append(a[i-1])
        k=0
    k+=1
h.append(k)
f.append(a[-1])
for i in range(len(h)):
    if h[i]>2 and d<i:
        v+=h[i]
        g=i-1
        d=i+1
        if g>=0 and d<len(h) and f[g]==f[d]:
            for i in range(1000):
                if f[g]==f[d] and g>=0 and d<len(h):
                    v+=h[g]+h[d]
                    d+=1
                    g-=1
                else:
                    break
print(v)","0.0"
"4c960d61-0634-4b66-90e7-3bf2894ef6de","y, k, n = map(int, input().split())

if n - y <= 0:
    print(-1)
    exit()

for i in range(1, k + 1):
    if (i + y) % k == 0 and i + y <= n:
        x = i
        break

while x <= n - y:
    print(x, end=' ')
    x += k","0.0"
"4c960d61-0634-4b66-90e7-3bf2894ef6de","y, k, n = map(int, input().split())

if n - y <= 0:
    print(-1)
    exit()

for i in range(1, k + 1):
    if (i + y) % k == 0 and i + y <= n:
        x = i
        break
try:
    while x <= n - y:
        print(x, end=' ')
        x += k
except NameError:
    print(-1)","0.0"
"4c960d61-0634-4b66-90e7-3bf2894ef6de","y, k, n = map(int, input().split())
a = []
a = [x for x in range(1, n + 1) if (x + y) <= n and (x + y) % k == 0]
res = ' '.join(map(str, a))
if not a:
    print(-1)
else:
    print(res)","0.0"
"1a0c244f-dc1f-4d44-8d80-19db61bd9e0c","a=list(map(int,input().split()))
d=-1
g=0
v=0
k=0
f=[]
h=[]
for i in range(len(a)):
    if a[i]!=a[i-1] and i>0:
        h.append(k)
        f.append(a[i-1])
        k=0
    k+=1
h.append(k)
f.append(a[-1])
for i in range(len(h)):
    if h[i]>2 and d<i:
        v+=h[i]
        g=i-1
        d=i+1
        if g>=0 and d<len(h) and f[g]==f[d]:
            for q in range(1000):
                if f[g]==f[d] and g>=0 and d<len(h):
                    v+=h[g]+h[d]
                    d+=1
                    g-=1
                else:
                    break
print(v)","0.0"
"43c6f24d-b89c-4762-9dc6-b6c3aaee6f1a","a = int(input())
b = int(input())
c = int(input())
kol=0
aa = a//c
bb = b//c
for i in range(aa, bb+1):
    if i*c<=b and i*c>=a:
        kol+=1
print(kol)","0.0"
"1a0c244f-dc1f-4d44-8d80-19db61bd9e0c","a=list(map(int,input().split()))
d=-1
g=0
v=0
k=0
f=[]
h=[]
for i in range(len(a)):
    if a[i]!=a[i-1] and i>0:
        h.append(k)
        f.append(a[i-1])
        k=0
    k+=1
h.append(k)
f.append(a[-1])
for i in range(len(h)):
    if h[i]>2 and d<=i:
        v+=h[i]
        g=i-1
        d=i+1
        if g>=0 and d<len(h) and f[g]==f[d]:
            for q in range(1000):
                if f[g]==f[d] and g>=0 and d<len(h):
                    v+=h[g]+h[d]
                    d+=1
                    g-=1
                else:
                    break
print(v)","0.0"
"bcf4caae-6f1c-488c-9cab-bf7232dd9614","import math
n = int(input())
arr = [int(s) for s in input().split()]
pr_sum1 = []
pr_sum2 = []

for i in range(math.ceil(len(arr) / 2)):
    if i == 0:
        pr_sum1.append(arr[i])
    else:
        pr_sum1.append(arr[i] + pr_sum1[i - 1])

arr = arr[::-1]

for i in range(len(arr) // 2):
    if i == 0:
        pr_sum2.append(arr[i])
    else:
        pr_sum2.append(arr[i] + pr_sum2[i - 1])


mx = 0
for i in range(len(pr_sum1) - 1, -1, -1):
    if pr_sum1[i] in pr_sum2:
        mx = i + pr_sum2.index(pr_sum1[i]) + 2
        break

print(mx)","0.0"
"cfe47bb0-2389-4fae-84c2-9287605fc571","n, k = map(int, input().split())
l = [list(map(int, input().split())) for x in range(n)]
print(max([(x[0] - x[1] + k if x[1] > k else x[0]) for x in l]))","0.0"
"1a0c244f-dc1f-4d44-8d80-19db61bd9e0c","def db(chain):
    d = 0
    i = 0
    while i < len(chain) - 2:
        if chain[i] == chain[i+1] == chain[i+2]:
            d += 3
            del chain[i:i+3]
            i = max(0, i - 1)
        else:
            i += 1
    return d
ida = input().split()
bk = int(ida[0])
bc = list(map(int, ida[1:]))

print(db(bc))
","0.0"
"13f523e4-1cd2-4724-8b60-a0f6f25007d9","n = int(input())
ot = 0
for i in range(n):
    a = str(input())
    if i != 0:
        if a[0] != b:
            ot = ot+1
    b = a[1]
print(ot+1)","0.0"
"4c960d61-0634-4b66-90e7-3bf2894ef6de","import math
y,k,n=map(int,input().split())
for i in range(y,n+1):
    if math.gcd(k,i)==k:
        print(i-y,sep="" "",end="" "")","0.0"
"13f523e4-1cd2-4724-8b60-a0f6f25007d9","a=int(input())
s=1
f=input()
for i in range(a-1):
    f1=input()
    if f[-1]!=f1[0] and f!=""q"":
        s+=1
        f=f1
    else:
        f=f1
print(s)","0.0"
"1a0c244f-dc1f-4d44-8d80-19db61bd9e0c","a=list(map(int,input().split()))
d=-1
g=0
v=0
k=0
f=[]
h=[]
for i in range(len(a)):
    if a[i]!=a[i-1] and i>0:
        h.append(k)
        f.append(a[i-1])
        k=0
    k+=1
h.append(k)
f.append(a[-1])
for i in range(len(h)):
    if h[i]>2 and d<=i:
        v+=h[i]
        g=i-1
        d=i+1
        if g>=0 and d<len(h):
            if f[g]==f[d]:
                for q in range(1000):
                    if g>=0 and d<len(h):
                        if f[g]==f[d]:
                            v+=h[g]+h[d]
                            d+=1
                            g-=1
                        else:
                            break
                    else:
                        break
print(v)

","0.0"
"4c960d61-0634-4b66-90e7-3bf2894ef6de","import math
y,k,n=map(int,input().split())
for i in range(y,n+1):
    if math.gcd(k,i)==k:
        print(i-y,end="" "")","0.0"
"87b17251-9fef-4c2f-9cd4-79662ec2957e","k, a, b = map(int, input().split())
flower_pos = set()
flower_pos.add(0)
for i in range(k):
    new_pos = set()
    for pos in flower_pos:
        if not pos in new_pos:
            new_pos.add(pos + a)
            new_pos.add(pos - b)
    flower_pos = new_pos
print(len(flower_pos))","0.0"
"87b17251-9fef-4c2f-9cd4-79662ec2957e","k,a,b = map(int, input().split())
m = set()
p  = 0
m.add(p)
for i in range(k):
	if a > 0:
		p += a
	else:
		p -= a
	if b > 0:
		p += b
	else:
		p -= b
	m.add(p)
print(len(m))
","0.0"
"4c960d61-0634-4b66-90e7-3bf2894ef6de","import math
y,k,n=map(int,input().split())
p=0
for i in range(y+1,n+1):
    if math.gcd(k,i)==k:
        print(i-y,end="" "")
        p+=1

if p==0:
    print(-1)","0.0"
"4c960d61-0634-4b66-90e7-3bf2894ef6de","a, b, c = input ().split ()
l = int(a)
sch = 0
list = []
while l < int(c):
    l = l + 1
    sch = sch+1
    if l%int(b)==0:
        list = list+[sch]
if list == []:
    print(-1)
else:
   for o in range(len(list)):
       print(list[o],end="" "")","0.0"
"43c6f24d-b89c-4762-9dc6-b6c3aaee6f1a","A = int(input())
B = int(input())
C = int(input())
l = ((A + C - 1) // C) * C
r = (B // C) * C
print((r-l+C)//C)
","0.0"
"70f7c75a-c93c-48c0-84d1-cf78ed51deea","n, t = map(int,input().split())
l = 80000
a = list(map(int,input().split()))
day = 0
i = 0
while t > 0:
    t -= l - a[i]
    day += 1
    i += 1
    
print(day)

","0.0"
"daa00bbb-65ee-4c2e-b966-992c51cbdb0f","l, v1, v2, t = map(int,input().split())
p1 = v1 * t % l
p2 = l - v2 * t % l
r = abs(p1 - p2)
print(min(r, l-r))

","0.0"
"bcf4caae-6f1c-488c-9cab-bf7232dd9614","n = int(input())
a = list(map(int,input().split()))
s1 = s2 = 0
ans = -1
kuch = 0
kol = 0
#print(a)
for i in range(n//2 ):
    #print(a[i], a[n -1 -i])
    s1 += a[i]
    s2 += a[n -1 -i]
    kuch += 2
    if s1 == s2 :
        ans = i
        kol = kuch
        
print( kol)

","0.0"
"70f7c75a-c93c-48c0-84d1-cf78ed51deea","n, t  = map(int, input().split(' '))
a = input()
a = a.replace('  ', ' ')
a = [int(x) for x in a.split(' ')]
k = 1
while t > 0:
    t -= (80000 - a[k - 1])
    k += 1
print(k - 1)","0.0"
"4c960d61-0634-4b66-90e7-3bf2894ef6de","import math
y,k,n=map(int,input().split())
p=0
for i in range(y+1,n+1):
    if math.gcd(k,i)==k:
        print(i-y,end="" "")
        p+=1

if p==0:
    print(-1)","0.0"
"4c960d61-0634-4b66-90e7-3bf2894ef6de","import math
y,k,n=map(int,input().split())
p=0
for i in range(y+1,n+1):
    if math.gcd(k,i)==k:
        print(i-y,end="" "")
        p+=1

if p==0:
    print(-1)","0.0"
"c6175ed3-a33c-4dbf-8f71-6ef2f9e31411","n=int(input())
a,b,c=map(int,input().split())
d,e,f=map(int,input().split())
print((n+1)*(a*d+b*e+c*f))","0.0"
"70c96088-3bf6-4189-985e-a2d564337989","from itertools import product
a,b=map(int,input().split())
sp=[]
for i in range(a):
    o=int(input())
    sp.append(o)
for i in product(sp,repeat=b):
    print(*i)

","0.0"
"e5e8f4d5-0b0f-4a52-b5a7-12f8ef0a52f0","a = int(input())
b = int(input())
c = int(input())

arr = [a, b, c]
arr = sorted(arr)

print(*arr)","0.0"
"f9af70f9-5fce-423e-94c5-b6f357e5242c","a = int(input())
n = int(input())

summ = 1

for i in range(1, n + 1):
    summ += a ** i

print(summ)","0.0"
"eb763311-8a08-4e91-a8d1-33a228a1f3f9","string = input()

d = dict()

for i in range(len(string) - 1):
    if string[i] == 'Z':
        if string[i + 1] not in d.keys():
            d[string[i + 1]] = 1
        else:
            d[string[i + 1]] += 1


d = dict(sorted(d.items(), key=lambda x:x[1]))
print(list(d.keys())[-1])","0.0"
"190516a0-6ed3-4c42-9f36-dc481a3adb70","a = int(input())
b = int(input())
print(a + b)","0.0"
"58443c34-5e1c-4cd5-b526-6442bc1c012d","s = input()
s = ' '.join(s.split())
print(s)","0.0"
"a1653f16-6401-480c-9131-9fef0db152a8","n = int(input())
kr = list()
kg = list()
for i in range(n):
    r,g = map(int,input().split())
    kr.append(r)
    kg.append(g)

skg = sorted(kg)
skg = reversed(skg)
for i in skg:
    print(kr[kg.index(i)],i)","0.0"
"4ecec1ec-211d-4ce0-bd4b-ee2498ae1afa","print(*reversed(input()))","0.0"
"4ecec1ec-211d-4ce0-bd4b-ee2498ae1afa","def foo(s):
    if len(s):
        print(s[-1], end=' ')
        foo(s[:-1])
foo(input())","0.0"
"94581bd4-2060-44f1-ad09-4c18917d4f17","a = input()
k = 0
km = -1
for i in range(len(a)-1):
    if a[i] != a[i+1]:
        k+=1
    else:
        if k > km:
            km = k
        k = 0
print(km+1)","0.0"
"40d78243-79a0-4ec7-8ff5-47f803a55e0b","a = input()
k = 0
for i in range(len(a)-2):
    if a[i] == 'B' or a[i]==""C"" or a[i]=='D':
        if a[i+1] == 'B' or a[i+1]==""E""or a[i+1]=='D':
            if a[i+1] != a[i]:
                if a[i+2] == 'B' or a[i+2]==""E""or a[i+2]=='C':
                    if a[i+2] != a[i+1]:
                        k+=1
print(k)","0.0"
"06c76227-d39e-4bac-8f71-f68c262dd42e","s = input()
m = 0
i = 0
for char in s:
    if (char == 'E' and i%3 == 0) or \n       (char == 'A' and i%3 == 1) or \n       (char == 'B'and i%3 == 2): 
        i += 1
        m = max(i,m)
    elif char == 'E':
        i = 1
    else:
        i = 0
print(m)","0.0"
"f2aee372-d88a-497b-a1d2-64b122fc8b0a","def KolDel(x):
    sp =[]
    for t in range(1,int(x**0.5)+1):
        if x % t == 0:
            sp.append(t)
            if x//t != t:
                sp.append(x//t)
        sp.sort()
    return sp

k = int(input())
print(min(KolDel(k)[1:]))","0.0"
"87ecc56e-ce90-4408-bb34-25f0c2a959f7","print(sum(map(int, input().split())))","0.0"
"e9f94ed1-8675-46d2-95fc-4dfc33c41c2b","a,b = map(int,input().split())
print(a**2 + b**2)","0.0"
"87ecc56e-ce90-4408-bb34-25f0c2a959f7","a,b = map(int,input().split())
print(a + b)","0.0"
"e9f94ed1-8675-46d2-95fc-4dfc33c41c2b","a, b = map(int, input().split())

print(a**2 + b**2)","0.0"
"e9f94ed1-8675-46d2-95fc-4dfc33c41c2b","a, b = map(int, input().split())
print(a ** 2 + b ** 2)","0.0"
"e9f94ed1-8675-46d2-95fc-4dfc33c41c2b","a, b = [int(el) for el in input().split()]
summa = a ** 2 + b ** 2
print(summa)","0.0"
"87ecc56e-ce90-4408-bb34-25f0c2a959f7","a, b = [int(el) for el in input().split()]
summa = a + b
print(summa)","0.0"
"b48599d5-44a6-4b34-9cdf-8ec2d44054d6","a, b = map(int, input().split())

for i in range(a, b+1):
	print(i, end="" "")","0.0"
"b48599d5-44a6-4b34-9cdf-8ec2d44054d6","a, b = map(int, input().split())

step = 1
if a > b:
	b -= 2
	step = -1

for i in range(a, b+1, step):
	print(i, end="" "")","0.0"
"e9f94ed1-8675-46d2-95fc-4dfc33c41c2b","a, b = map(int, input().split())
print(a**2+b**2)","0.0"
"87ecc56e-ce90-4408-bb34-25f0c2a959f7","a, b = map(int, input().split())
print(a+b)","0.0"
"b48599d5-44a6-4b34-9cdf-8ec2d44054d6","n, n1 = map(int, input().split())
x = [i for i in range(n, n1+1)]
print(*x)","0.0"
"b48599d5-44a6-4b34-9cdf-8ec2d44054d6","n, n1 = map(int, input().split())
x = sorted([i for i in range(n, n1+1)])
print(*x)","0.0"
"b48599d5-44a6-4b34-9cdf-8ec2d44054d6","n, n1 = map(int, input().split())
x = sorted([i for i in range(min(n, n1), max(n, n1)+1)])
print(*x)","0.0"
"e9f94ed1-8675-46d2-95fc-4dfc33c41c2b","a, b = map(int, input().split())

sum_of_squares = a**2 + b**2

print(sum_of_squares)","0.0"
"87ecc56e-ce90-4408-bb34-25f0c2a959f7","a, b = map(int, input().split())

sum_of_squares = a + b

print(sum_of_squares)","0.0"
"b48599d5-44a6-4b34-9cdf-8ec2d44054d6","a, b = map(int, input().split())

if a <= b:
    for i in range(a, b + 1):
        print(i, end=' ')
else:
    for i in range(a, b - 1, -1):
        print(i, end=' ')","0.0"
"e9f94ed1-8675-46d2-95fc-4dfc33c41c2b","a, b = map(int, input().split())
print(a**2 + b**2)
","0.0"
"87ecc56e-ce90-4408-bb34-25f0c2a959f7","print(sum(list(map(int, input().split()))))
","0.0"
"e9f94ed1-8675-46d2-95fc-4dfc33c41c2b","print(sum([x**2 for x in list(map(int, input().split()))]))
","0.0"
"e9f94ed1-8675-46d2-95fc-4dfc33c41c2b","a, b = map(int, input().split())
print(a**2 + b**2)","0.0"
"87ecc56e-ce90-4408-bb34-25f0c2a959f7","
a, b = map(int, input().split())
print(a + b)","0.0"
"b48599d5-44a6-4b34-9cdf-8ec2d44054d6","a, b = map(int, input().split())
if a <= b:
	for i in range(a, b+1):
		print(i, end = ' ')
else:
	for i in range(a, b-1, -1):
		print(i, end = ' ')","0.0"
"e9f94ed1-8675-46d2-95fc-4dfc33c41c2b","a, b = map(int, input().split())

print(a * a + b * b)
","0.0"
"87ecc56e-ce90-4408-bb34-25f0c2a959f7","a, b = map(int, input().split())

print(a + b)
","0.0"
"b48599d5-44a6-4b34-9cdf-8ec2d44054d6","a, b = map(int, input().split())

for i in range(a, b + 1):
    print(i, end="" "")
","0.0"
"b48599d5-44a6-4b34-9cdf-8ec2d44054d6","a, b = map(int, input().split())

if a > b:
    temp = b
    b = a
    a = temp

for i in range(a, b + 1):
    print(i, end="" "")
","0.0"
"b48599d5-44a6-4b34-9cdf-8ec2d44054d6","a, b = map(int, input().split())

step = 1

if b < a:
    step = -1

for i in range(a, b + step, step):
    print(i, end="" "")","0.0"
"87ecc56e-ce90-4408-bb34-25f0c2a959f7","print(sum(list(map(int, input().split()))))","0.0"
"87ecc56e-ce90-4408-bb34-25f0c2a959f7","a, b = map(int, input().split())
print(a + b)
","0.0"
"e9f94ed1-8675-46d2-95fc-4dfc33c41c2b","a, b = map(int, input().split())
print(a**2 + b** 2)","0.0"
"190516a0-6ed3-4c42-9f36-dc481a3adb70","a = int(input())
b = int(input())
print(a+b)","0.0"
"87ecc56e-ce90-4408-bb34-25f0c2a959f7","a, b = map(int, input().split())
print(a + b)","0.0"
"eabdf11f-d1f1-44e0-8017-20e8e541ec68","a = int(input())
b = int(input())
c = int(input())
if a + b > c and a + c > b and c + b > a:
	print('YES')
else:
	print('NO')","0.0"
"b48599d5-44a6-4b34-9cdf-8ec2d44054d6","a, b = map(int, input().split())
for i in range(min(a, b), max(a, b) + 1):
	print(i, end=' ')","0.0"
"b48599d5-44a6-4b34-9cdf-8ec2d44054d6","a, b = map(int, input().split())
if a < b:
    cnt = [x for x in range(a, b + 1)]
else:
    cnt = [x for x in range(a, b - 1, -1)]

print(' '.join(map(str, cnt)))","0.0"
"b48599d5-44a6-4b34-9cdf-8ec2d44054d6","a, b = map(int, input().split())
if b <= a:
	for i in range(a, b - 1, -1):
		print(i, end=' ')
else:
	for i in range(a, b + 1):
		print(i, end=' ')","0.0"
"e9f94ed1-8675-46d2-95fc-4dfc33c41c2b","a, b=map(int, input().split())
print(a**2+b**2)","0.0"
"87ecc56e-ce90-4408-bb34-25f0c2a959f7","a, b=map(int, input().split())
print(a+b)","0.0"
"b48599d5-44a6-4b34-9cdf-8ec2d44054d6","x, x1 = map(int, input().split())
if x1 <= x:
    p = [i for i in range(x, x1 - 1, -1)]
    print(*p)
else:
    p = [i for i in range(x, x1 + 1) if x < x1]
    print(*p)","0.0"
"e9f94ed1-8675-46d2-95fc-4dfc33c41c2b","a, b = map(int, input().split())
print(a**2 + b**2)","0.0"
"87ecc56e-ce90-4408-bb34-25f0c2a959f7","a, b = map(int, input().split())
print(a + b)","0.0"
"b48599d5-44a6-4b34-9cdf-8ec2d44054d6","a, b = map(int, input().split())
if a > b:
	k = -1
else:
	k = 1
for i in range(a, b+k, k):
	print(i, end = ' ')","0.0"
"e9f94ed1-8675-46d2-95fc-4dfc33c41c2b","a, b = map(int, input().split())
print(a**2 + b**2)","0.0"
"87ecc56e-ce90-4408-bb34-25f0c2a959f7","a, b = map(int, input().split())
print(a + b)","0.0"
"b48599d5-44a6-4b34-9cdf-8ec2d44054d6","a, b = map(int, input().split())
t = 0
if a < b:
    t = 1
else:
    t = -1
for n in range(a, b + t, t):
    print(n, end = ' ')","0.0"
"e9f94ed1-8675-46d2-95fc-4dfc33c41c2b","def sum_of_squares(a, b):
    return a**2 + b**2
input_data = input().split()
a = int(input_data[0])
b = int(input_data[1])
result = sum_of_squares(a, b)
print(result)
","0.0"
"87ecc56e-ce90-4408-bb34-25f0c2a959f7","input_data = input().split()
a = int(input_data[0])
b = int(input_data[1])
result = a + b
print(result)
","0.0"
"b48599d5-44a6-4b34-9cdf-8ec2d44054d6","input_data = input().split()
a = int(input_data[0])
b = int(input_data[1])
if a <= b:
    for i in range(a, b + 1):
        print(i, end=' ')
else:
    for i in range(a, b - 1, -1):
        print(i, end=' ')
","0.0"
"e9f94ed1-8675-46d2-95fc-4dfc33c41c2b","q, w = map(int, input().split())
print(q**2+w**2)","0.0"
"e9f94ed1-8675-46d2-95fc-4dfc33c41c2b","a, b = map(int, input().split())
print(a**2+b**2)","0.0"
"190516a0-6ed3-4c42-9f36-dc481a3adb70","a = int(input())
b=int(input())
print(a+b)","0.0"
"190516a0-6ed3-4c42-9f36-dc481a3adb70","a = int(input())
b = int(input())
print(a+b)","0.0"
"ffc65b57-d995-421d-a0bd-b34cc8cf34a5","print(sum(list(map(int, list(input())))))","0.0"
"bcc460f7-6c44-405b-a9c6-b884f3e1d171","print(2)","0.0"
"bcc460f7-6c44-405b-a9c6-b884f3e1d171","a,b = map(int, input().split())
print(a-b)","0.0"
"e9f94ed1-8675-46d2-95fc-4dfc33c41c2b","a, b = map(int, input().split())
print(a*a+b*b)","0.0"
"87ecc56e-ce90-4408-bb34-25f0c2a959f7","print(sum(map(int, input().split())))","0.0"
"b48599d5-44a6-4b34-9cdf-8ec2d44054d6","a, b = map(int, input().split())

if a<b:
    while a!=b:
        print(a, end=' ')
        a+=1
    print(b)
else:
    while b!=a:
        print(b, end=' ')
        b-=1
    print(a)
","0.0"
"b48599d5-44a6-4b34-9cdf-8ec2d44054d6","from sys import stdout

def main():
    a, b = map(int, input().split())

    if a<b:
        while a!=b:
            stdout.write(str(a)+' ')
            a+=1
        print(b)
    else:
        while b!=a:
            stdout.write(str(b)+' ')
            b-=1
        print(a)

main()
","0.0"
"b48599d5-44a6-4b34-9cdf-8ec2d44054d6","from sys import stdout

def main():
    a, b = map(int, input().split())

    if a<b:
        while a!=b:
            stdout.write(str(a))
            stdout.write(' ')
            a+=1
        print(b)
    else:
        while b!=a:
            stdout.write(str(b))
            stdout.write(' ')
            b-=1
        print(a)

main()
","0.0"
"b48599d5-44a6-4b34-9cdf-8ec2d44054d6","from sys import stdout

def main():
    a, b = map(int, input().split())

    if a<b:
        while a!=b:
            stdout.write(str(a))
            stdout.write(' ')
            a+=1
        print(b)
    else:
        while b!=a:
            stdout.write(str(b))
            stdout.write(' ')
            a-=1
        print(b)

main()
","0.0"
"b48599d5-44a6-4b34-9cdf-8ec2d44054d6","from sys import stdout

def main():
    a, b = map(int, input().split())

    if a<b:
        while a!=b:
            stdout.write(str(a))
            stdout.write(' ')
            a+=1
        print(b)
    else:
        while b!=a:
            stdout.write(str(a))
            stdout.write(' ')
            a-=1
        print(b)

main()
","0.0"
"e9f94ed1-8675-46d2-95fc-4dfc33c41c2b","a, b = map(int, input().split())
print(a ** 2 + b ** 2)
","0.0"
"87ecc56e-ce90-4408-bb34-25f0c2a959f7","a, b = map(int, input().split())
print(a + b)
","0.0"
"b48599d5-44a6-4b34-9cdf-8ec2d44054d6","a, b = map(int, input().split())

if a >= b:
    for i in range(a, b - 1, -1):
        print(i, end="" "")
else:
    for i in range(a, b + 1):
        print(i, end="" "")
","0.0"
"4495049c-7679-4fd3-804c-70c67ad5a1dc","# ÐÐ²Ð¾Ð´ Ð´Ð°Ð½Ð½ÑÑ
a, b = map(int, input().split())
if (a >= 0 and b >= 0) or (a < 0 and b < 0):
    result = a + b
else:
    result = a - b
print(result)","0.0"
"87ecc56e-ce90-4408-bb34-25f0c2a959f7","a, b = map(int, input().split())
print(a + b)","0.0"
"b48599d5-44a6-4b34-9cdf-8ec2d44054d6","a, b = map(int, input().split())
for i in range(a, b+1):
	print(i, end=' ')","0.0"
"b48599d5-44a6-4b34-9cdf-8ec2d44054d6","a, b = map(int, input().split())
if a > b:
	a, b = b, a
for i in range(a, b+ 1):
	print(i, end = ' ')","0.0"
"b48599d5-44a6-4b34-9cdf-8ec2d44054d6","a, b = map(int, input().split())
if a >= b:
	a, b = b, a
for i in range(a, b+ 1):
	print(i, end = ' ')","0.0"
"e9f94ed1-8675-46d2-95fc-4dfc33c41c2b","a, b = map(int, input().split())
print(a**2 + b**2)","0.0"
"87ecc56e-ce90-4408-bb34-25f0c2a959f7","a, b = map(int, input().split())
print(a + b)","0.0"
"b48599d5-44a6-4b34-9cdf-8ec2d44054d6","a,b = map(int, input().split())
if a < b:
    for i in range(a, b+1):
        print(i, end = ' ')
else:
    for i in range(a, b-1, -1):
        print(i, end=' ')","0.0"
"b48599d5-44a6-4b34-9cdf-8ec2d44054d6","a, b = map(int, input().split())
a = min(a, b)
b = max(a, b)
f = []
for i in range(a, b + 1):
    f.append(i)
print(' '.join(map(str, f)))","0.0"
"e9f94ed1-8675-46d2-95fc-4dfc33c41c2b","a, b = map(int, input().split())
result = a**2 + b**2
print(result) ","0.0"
"87ecc56e-ce90-4408-bb34-25f0c2a959f7","a, b = map(int, input(). split())
result = a + b
print(result) ","0.0"
"b48599d5-44a6-4b34-9cdf-8ec2d44054d6","a, b = map(int, input().split())
result = []
if a<b:
    for i in range(a, b+1):
        result.append(i)
else:
    for i in range(a, b-1, -1):
        result.append(i)
print(*result) ","0.0"
"b48599d5-44a6-4b34-9cdf-8ec2d44054d6","a, b = map(int, input().split())
f = []
if a > b:
    for i in range(b, a + 1):
        f.append(i)
else:
    for i in range(a, b + 1):
        f.append(i)

print(' '.join(map(str, f)))","0.0"
"e9f94ed1-8675-46d2-95fc-4dfc33c41c2b","a, b = [int(x) for x in input().split()]
print(a**2 + b**2) ","0.0"
"b48599d5-44a6-4b34-9cdf-8ec2d44054d6","a, b = map(int, input().split())
f = []
if a > b:
    for i in range(b, a + 1):
        f.append(i)
    f.reverse()
else:
    for i in range(a, b + 1):
        f.append(i)

print(' '.join(map(str, f)))
","0.0"
"e9f94ed1-8675-46d2-95fc-4dfc33c41c2b","a, b = map(int, input().strip().split())
result = a**2 + b**2
print(result)
","0.0"
"87ecc56e-ce90-4408-bb34-25f0c2a959f7","a, b = [int(x) for x in input().split()]
print(a + b)","0.0"
"b48599d5-44a6-4b34-9cdf-8ec2d44054d6","a, b = [int(x) for x in input().split()]

if a < b:
    print(*[i for i in range(a, b + 1)])
else:
    print(*[i for i in range(a, b - 1, -1)])
","0.0"
"87ecc56e-ce90-4408-bb34-25f0c2a959f7","a, b = map(int, input().strip().split())
result = a + b
print(result)
","0.0"
"e9f94ed1-8675-46d2-95fc-4dfc33c41c2b","a, b = map(int, input().split())
print(a * a + b * b)","0.0"
"87ecc56e-ce90-4408-bb34-25f0c2a959f7","a, b = map(int, input().split())
print(a + b)","0.0"
"b48599d5-44a6-4b34-9cdf-8ec2d44054d6","a, b = map(int, input().split())
if a >= b:
    print(a, end=' ')
    while a != b:
        a-=1
        print(a, end=' ')
else:
    print(a, end=' ')
    while b != a:
        a = a + 1
        print(a, end=' ')","0.0"
"e9f94ed1-8675-46d2-95fc-4dfc33c41c2b","a,b=list(map(int,input().split()))
print((a**2)+(b**2))","0.0"
"e9f94ed1-8675-46d2-95fc-4dfc33c41c2b","a, b = map(int, input().split())
print(a ** 2 + b ** 2)","0.0"
"87ecc56e-ce90-4408-bb34-25f0c2a959f7","a, b = map(int, input().split())
if a <= 1000 and b <= 1000:
    print(a + b)
else:
    print(-1)","0.0"
"e9f94ed1-8675-46d2-95fc-4dfc33c41c2b","a, b = map(int, input().split())
print(a**2+b**2)
","0.0"
"e9f94ed1-8675-46d2-95fc-4dfc33c41c2b","a, b = map(int, input().split())

print(a ** 2 + b ** 2)","0.0"
"87ecc56e-ce90-4408-bb34-25f0c2a959f7","a, b = map(int, input().split())

print(a + b)
","0.0"
"e9f94ed1-8675-46d2-95fc-4dfc33c41c2b","a, d= map(int, input().split())
x = a**2 + d**2
print(x)","0.0"
"87ecc56e-ce90-4408-bb34-25f0c2a959f7","a, d= map(int, input().split())
x = a + d
print(x)","0.0"
"b48599d5-44a6-4b34-9cdf-8ec2d44054d6","a, b = map(int, input().split())

answer = []

if a <= b:
    for i in range(a, b + 1):
        answer.append(i)
else:
    for i in range(a, b - 1, -1):
        answer.append(i)

print(*answer)","0.0"
"b48599d5-44a6-4b34-9cdf-8ec2d44054d6","a, d= map(int, input().split())
if a <= d:
    for i in range(a, d+1):
        print(i, end = ' ')
else:
    for i in range(d, a +1):
        print(i, end = ' ')","0.0"
"b48599d5-44a6-4b34-9cdf-8ec2d44054d6","a, b=map(int, input().split())
if a<=b:
	for i in range (a,b+1):
		print(i, end="" "")
else:
    for i in range (a,b-1,-1):
        print(i, end="" "")","0.0"
"b48599d5-44a6-4b34-9cdf-8ec2d44054d6","a, d= map(int, input().split())
if a <= d:
    for i in range(a, d+1):
        print(i, end = ' ')
else:
    for i in range(a, d -1, -1):
        print(i, end = ' ')
","0.0"
"e9f94ed1-8675-46d2-95fc-4dfc33c41c2b","a, b = map(int, input().split())
print(a**2 + b**2)","0.0"
"87ecc56e-ce90-4408-bb34-25f0c2a959f7","a, b = map(int, input().split())
print(a + b)","0.0"
"e9f94ed1-8675-46d2-95fc-4dfc33c41c2b","a, b = map(int, input().split())
print(a**2+b**2)","0.0"
"87ecc56e-ce90-4408-bb34-25f0c2a959f7","a, b = map(int, input().split())
print(a+b)","0.0"
"e9f94ed1-8675-46d2-95fc-4dfc33c41c2b","from sys import stdin, stdout

n, m = map(int, stdin.readline().split())

stdout.write(str(n ** 2 + m ** 2))
","0.0"
"87ecc56e-ce90-4408-bb34-25f0c2a959f7","from sys import stdin, stdout

n, m = map(int, stdin.readline().split())

stdout.write(str(n + m))
","0.0"
"b48599d5-44a6-4b34-9cdf-8ec2d44054d6","a, b = map(int, input().split())
if a <= b:
    print(*[i for i in range(a, b+1)])
else:
    print(*[i for i in range(a, b-1, -1)])","0.0"
"e9f94ed1-8675-46d2-95fc-4dfc33c41c2b","a, b = map(int, input().split())
print(a * a + b * b)
","0.0"
"e9f94ed1-8675-46d2-95fc-4dfc33c41c2b","a, b = map(int, input().split())
print(a**2 + b**2)
","0.0"
"87ecc56e-ce90-4408-bb34-25f0c2a959f7","a, b = map(int, input().split())
print(a + b)","0.0"
"b48599d5-44a6-4b34-9cdf-8ec2d44054d6","a, b = map(int, input().split())
if a < b:
    for i in range(a, b + 1):
        print(i, end=' ')
else:
    for i in range(a, b - 1, -1):
        print(i, end=' ')","0.0"
"e9f94ed1-8675-46d2-95fc-4dfc33c41c2b","a, b = map(int, input().split())

print(a**2 + b**2)","0.0"
"87ecc56e-ce90-4408-bb34-25f0c2a959f7","a, b = map(int, input().split())

print(a + b)","0.0"
"b48599d5-44a6-4b34-9cdf-8ec2d44054d6","a, b = map(int, input().strip().split())
if a <= b:
    for i in range(a, b + 1):
        print(i, end=' ')
else:
    for i in range(a, b - 1, -1):
        print(i, end=' ')
","0.0"
"b48599d5-44a6-4b34-9cdf-8ec2d44054d6","a, b = map(int, input().split())

for i in range(min(a, b), max(a, b + 1)):
    print(i, end="" "")","0.0"
"b48599d5-44a6-4b34-9cdf-8ec2d44054d6","a, b = map(int, input().split())

for i in range(min(a, b), max(a, b) + 1):
    print(i, end="" "")","0.0"
"b48599d5-44a6-4b34-9cdf-8ec2d44054d6","a, b = map(int, input().split())

if a <= b:
    for i in range(a, b+1):
        print(i, end="" "")
elif b <= a:
    for i in range(a, b-1, -1):
        print(i, end="" "")","0.0"
"e9f94ed1-8675-46d2-95fc-4dfc33c41c2b","a, b = map(int, input().split())

print(a ** 2 + b ** 2)","0.0"
"e9f94ed1-8675-46d2-95fc-4dfc33c41c2b","a, b = map(int, input().split())
print(a**2+b**2)","0.0"
"0c2c7e3c-f232-46ee-b1a9-748e4ac46772","a = input()
k = list()

for i in a:
    if 32 < ord(i) < 123:
        k.append(i)

if len(k) == 0:
    print('NO')
else:
    print('YES')","0.0"
"db8534b0-ffa9-4c1b-9d86-4797814b3074","print(len(list(input().split())))
","0.0"
"190516a0-6ed3-4c42-9f36-dc481a3adb70","a = int(input())
b = int(input())
result = sum([a, b])
print(result)
","0.0"
"b4e8d0e8-b2b3-4675-a090-16c08e1e936c","n = int(input())
 
fact = 1
while n > 1:
    fact *= n
    n -= 1
 
print(fact)
","0.0"
"3276b711-2292-488f-9353-be7b86ab5e1a","n = int(input())
print(2**n)
","0.0"
"e5e8f4d5-0b0f-4a52-b5a7-12f8ef0a52f0","a = int(input())
b = int(input())
c = int(input())

if a > b:
    a, b = b, a
if b > c:
    b, c = c, b
if a > b:
    a, b = b, a

print(a, b, c)
","0.0"
"e5e8f4d5-0b0f-4a52-b5a7-12f8ef0a52f0","a = int(input()) 
b = int(input()) 
c = int(input()) 
if a > b: 
    a, b = b, a 
if b > c: 
    b, c = c, b 
if a > b: 
    a, b = b, a 
print(a, b, c)","0.0"
"e5e8f4d5-0b0f-4a52-b5a7-12f8ef0a52f0","a, b, c = int(input()), int(input()), int(input())
if a >= b and a >= c and b >= c:
    print(c, b, a)
elif a <= b and a >= c and b >= c:
    print(c, a, b)
elif a <= b and a <= c and b <= c:
    print(a, b, c)
elif a >= b and a >= c and b <= c:
    print(b, c, a)
elif a >= b and a <= c and b <= c:
    print(b, a, c)
else:
    print(a, c, b)
","0.0"
"431be734-39e6-4f58-aec7-61e67c8ee1b5","print('YES' if (x := int(input())) % 4 == 0 and x%100  or x%400 == 0 else 'NO')","0.0"
"eabdf11f-d1f1-44e0-8017-20e8e541ec68","from sys import stdin
l = list(map(int, [int(input()) for i in range(3)]))
print('YES' if l[0] + l[1] > l[2] and l[1] + l[2] > l[0] and l[0] + l[2] > l[1] else 'NO')
","0.0"
"190516a0-6ed3-4c42-9f36-dc481a3adb70","print(sum(map(int, [int(input()) for i in range(2)])))","0.0"
"16305713-d2dc-4ab1-8bbd-107594c55519","from math import acos, pi


def exist(a, b, c):
    return a + b > c and b + c > a and a + c > b

def angle(a, b, c):
    return acos((a**2 + b**2 - c**2)/2/a/b)


a, b, c = [int(input()) for i in range(3)]
if not exist(a, b, c):
    print('impossible')
else:
    angle_ab = angle(a, b, c)
    angle_bc = angle(b, c, a)
    angles = [angle_ab, angle_bc, pi-angle_bc-angle_ab]

    print('right' if any(x == pi/2 for x in angles) else 'obtuse' if any(x > pi/2 for x in angles) else 'acute')","0.0"
"e5e8f4d5-0b0f-4a52-b5a7-12f8ef0a52f0","print(' '.join(map(str, sorted([int(input()) for i in range(3)]))))","0.0"
"e5e8f4d5-0b0f-4a52-b5a7-12f8ef0a52f0","print(' '.join(map(str, sorted([int(input()) for i in range(3)]))))","0.0"
"e5e8f4d5-0b0f-4a52-b5a7-12f8ef0a52f0","print(' '.join(map(str, sorted([int(input().strip()) for i in range(3)]))))","0.0"
"e5e8f4d5-0b0f-4a52-b5a7-12f8ef0a52f0","print(' '.join(map(str, sorted([int(input().strip()), int(input().strip()), int(input().strip())]))))","0.0"
"e5e8f4d5-0b0f-4a52-b5a7-12f8ef0a52f0","from sys import stdout
stdout.write(' '.join(map(str, sorted([int(input().strip()), int(input().strip()), int(input().strip())]))))
stdout.close()","0.0"
"e5e8f4d5-0b0f-4a52-b5a7-12f8ef0a52f0","res = []
for val in sorted([float(input().strip()) for _ in range(3)]):
    if int(val) == val:
        res.append(int(val))
    else:
        res.append(val)
print(' '.join(map(str, res)))","0.0"
"5ae76e60-094f-4777-acc2-83ebca17f84c","n = int(input().strip())
d = {100: 'C', 90: 'XC', 80: 'XXC', 70: 'LXX', 60: 'LX', 50: 'L', 40: 'XL', 30: 'XXX', 20: 'XX', 10: 'X', 9: 'IX', 8: 'IIX',
        7: 'VII', 6: 'VI', 5: 'V', 4: 'IV', 3: 'III', 2: 'II', 1: 'I', 0: ''}
print(''.join([d[n - n%10], d[n%10]]))","0.0"
"3276b711-2292-488f-9353-be7b86ab5e1a","print(pow(2, int(input())))","0.0"
"f9af70f9-5fce-423e-94c5-b6f357e5242c","a = float(input())
n = int(input())
res = 0
for i in range(n+1):
    res += a**i
print(int(res) if res == int(res) else res)
","0.0"
"f9af70f9-5fce-423e-94c5-b6f357e5242c","a = float(input())
n = int(input())
res = 0
for i in range(n+1):
    res += pow(a, i)
print(int(res) if res == int(res) else res)
","0.0"
"f9af70f9-5fce-423e-94c5-b6f357e5242c","from math import pow
a = float(input())
n = int(input())
res = 0
for i in range(n+1):
    res += pow(a, i)
print(int(res) if res == int(res) else res)
","0.0"
"f9af70f9-5fce-423e-94c5-b6f357e5242c","from math import pow
a = float(input())
n = int(input())
res = 0
for i in range(n+1):
    res += pow(a, i)
print(int(res) if res == int(res) and res >= 0 else res)
","0.0"
"f9af70f9-5fce-423e-94c5-b6f357e5242c","from math import pow
a = float(input())
n = int(float(input()))
res = 0
for i in range(n+1):
    res += pow(a, i)
print(int(res) if res == int(res) and res >= 0 else res)
","0.0"
"f9af70f9-5fce-423e-94c5-b6f357e5242c","from math import pow
a = float(input().strip())
n = int(float(input().strip()))
res = 0
for i in range(n+1):
    res += pow(a, i)
print(int(res) if res == int(res) and res >= 0 else res)
","0.0"
"f9af70f9-5fce-423e-94c5-b6f357e5242c","from math import pow
a = float(input().strip())
n = int((input().strip()))
res = 1
for i in range(1, n+1):
    val = 1
    for _ in range(i):
        val *= a
    res += val
print(int(res) if res == int(res) else res)
","0.0"
"f9af70f9-5fce-423e-94c5-b6f357e5242c","from math import pow
a = float(input().strip())
n = int((input().strip()))
res = 1+a
for i in range(2, n+1):
    val = 1
    for _ in range(i):
        val *= a
    res += val
print(int(res) if res == int(res) else res)
","0.0"
"f9af70f9-5fce-423e-94c5-b6f357e5242c","from math import pow
a = float(input().strip())
n = int((input().strip()))
res = 0
for i in range(n+1):
    val = 1
    for _ in range(i):
        val *= a
    res += val
if n == -1:
    print(0)
else:
    print(int(res) if res == int(res) else res)","0.0"
"f9af70f9-5fce-423e-94c5-b6f357e5242c","from math import pow
a = float(input().strip())
n = int((input().strip()))
res = 0
for i in range(n+1):
    val = 1
    for _ in range(i):
        val *= a
    res += val
if a == 0:
    print(0)
else:
    print(int(res) if res == int(res) else res)","0.0"
"f9af70f9-5fce-423e-94c5-b6f357e5242c","from math import pow
a = float(input().strip())
n = int((input().strip()))
res = 0
for i in range(n+1):
    val = 1.0
    for _ in range(i):
        val *= a
    res += val
print(int(res) if res == int(res) else res)","0.0"
"f9af70f9-5fce-423e-94c5-b6f357e5242c","from math import pow
a = float(input().strip())
n = int((input().strip()))
res = 0
for i in range(n+1):
    val = 1.0
    for _ in range(i):
        val *= a
    res += val
print(int(res) if res == int(res) and res >= 0 else res)","0.0"
"0f42de72-e8d1-4f41-8797-90a6cd184af9","x,y,z=map(int,input().split())
c=x*3+5*y+z*12
print(c)","0.0"
"853bea78-6aa0-4fcf-8c5a-5f278603c518","n=int(input())
k=int(input())
x=int(input())
y=int(input())
if n>k:
    s=k*x+(n-k)*y
else:
    s=k*x
print(s)","0.0"
"853bea78-6aa0-4fcf-8c5a-5f278603c518","n=int(input())
k=int(input())
x=int(input())
y=int(input())
if n>k:
    s=k*x+(n-k)*y
else:
    s=n*x
print(s)","0.0"
"aeb122ea-bb7f-44ee-93c8-65ead3d4f5f3","n,k=map(int,input().split())
i=0
m=0
while m+i*5+k<60*4 and i<n:
    i=i+1
    m=m+i*5
print(i)","0.0"
"8381a3f6-aaba-448f-b65f-50117785adf7","n,m,a=map(int,input().split())
s=n//a
l=m//a
if n%a>0:
   s=s+1
if m%a>0:
   l=l+1
print(s*l)","0.0"
"5895fc4e-b515-464a-a0e2-697d86bf8783","a=list(map(int,input().split()))
mi=min(a[1:len(a)])
ma=max(a[1:len(a)])
for i in range(1,len(a)):
    if a[i]==ma:
        a[i]=mi
print(*a[1:len(a)])","0.0"
"5eebb219-dec9-41ce-83c6-efc4a4670acc","a=input()
s='qwertyuiopasdfghjklzxcvbnmq'
l=s.find(a)
print(s[l+1])","0.0"
"02bc07a3-d63a-4896-b585-e74c06bfc7f2","n,x=map(int,input().split())
a=list(map(int,input().split()))
k=0
p=0
for i in range(len(a)):
    p=a[i]+p
if abs(p)>x:
    k=abs(p)//x
    if abs(p)%x>0:
        k=k+1
    print(k)
else:
    print(1)","0.0"
"02bc07a3-d63a-4896-b585-e74c06bfc7f2","n,x=map(int,input().split())
a=list(map(int,input().split()))
k=0
s=0
for i in range(len(a)):
    s=a[i]+s
if s==0:
    print(0)
if abs(s)>x:
    k=abs(s)//x
    if abs(s)%x>0:
        k=k+1
    print(k)
else:
    print(1)","0.0"
"02bc07a3-d63a-4896-b585-e74c06bfc7f2","n,x=map(int,input().split())
a=list(map(int,input().split()))
k=0
s=0
for i in range(len(a)):
    s=a[i]+s
if s==0:
    print(0)
else:
    if abs(s)>x:
        k=abs(s)//x
        if abs(s)%x>0:
            k=k+1
        print(k)
    else:
        print(1)","0.0"
"11d7d14b-eb4a-4dd7-94c1-67a03264c424","n=int(input())
a=list(map(int,input().split()))
mi=10**9
s=0
for i in range(len(a)):
    s=a[i]+s
    if a[i]<mi and a[i]%2>0:
        mi=a[i]
if s%2==0:
    print(s)
else:
    print(s-mi)","0.0"
"7d8fcbed-1f16-4d19-8a17-6560267bc64c","n,m,k=map(int,input().split())
a=0
if k>=n:
    print('NO')
else:
    while m>0:
        m=m-n
        if m!=0:
            m=m+k
        a=a+1
    print(a)","0.0"
"b4e8d0e8-b2b3-4675-a090-16c08e1e936c","n = int(input())
res = 1
for i in range(1, n+1):
	res *= i
print(res)","0.0"
"ce727aeb-b2aa-4da5-be32-636ce90da78c","a, b, c, d = map(int, input().split())
res = []
for val in range(a, b+1):
	if val % d == c:
		res.append(val)
print(' '.join(map(str, res)))
","0.0"
"fe35f9e7-0b58-461f-9278-39f03054e886","from sys import stdin
a, b = map(int, stdin.readlines())
print(' '.join(map(str, [val for val in range(a, b+1) if val**0.5 == int(val**0.5)])))","0.0"
"4cadd9be-89f5-4d54-b38d-f823b7087153","a, b = map(int, input().split())
print(' '.join(map(str, range(a+a%2, b+1, 2))))","0.0"
"4c5a1413-e27d-4b6a-b218-bc8e2a3ade0e","n = int(input())
dels = [val for val in range(1, int(n**0.5)+1) if n%val == 0]
dels.extend([n//val for val in dels[::-1]])
print(' '.join(map(str, dels)))","0.0"
"4c5a1413-e27d-4b6a-b218-bc8e2a3ade0e","n = int(input())
dels = [val for val in range(1, n+1) if n%val == 0]
print(' '.join(map(str, dels)))","0.0"
"4c5a1413-e27d-4b6a-b218-bc8e2a3ade0e","n = int(input())
if n == 1: print(1)
else:
    dels = [val for val in range(1, int(n**0.5)+1) if n%val == 0]
    dels.extend([n//val for val in dels[::-1]])
    print(' '.join(map(str, dels)))","0.0"
"06a06b1c-da2e-4210-b889-371de309b82f","input()
lst = list(map(int, input().split()))
l = c = r = 0
for i in lst:
    if i < 0: l+=1
    elif i == 0: c += 1
    else: r += 1
print(' '.join(map(str, [c, r, l])))","0.0"
"157c7563-5b83-4f84-b184-e15788a65471","n = int(input())
for i in range(2, n+1):
	if not n%i:
		print(i)
		break","0.0"
"893cc270-337f-4829-bb45-0f60d1209419","from math import ceil, log2
print(ceil(log2(int(input()))))","0.0"
"c0df7d49-26f5-451c-b44a-1e0bca60bca5","print((input().index('0')+1)//2)","0.0"
"6749cc47-75b3-4622-915b-5601e3963b66","from math import log, ceil
a, b = map(float, input().split())
print(ceil(log(b/a, 1.1))+1)","0.0"
"6749cc47-75b3-4622-915b-5601e3963b66","from math import log, ceil
a, b = map(float, input().strip().split())
print(ceil(log(b/a, 1.1))+1)","0.0"
"6749cc47-75b3-4622-915b-5601e3963b66","from math import log, ceil
from decimal import Decimal
a, b = map(abs, map(float, input().strip().split()))
print(ceil(log(b/a, Decimal('1.1')))+1)
","0.0"
"6749cc47-75b3-4622-915b-5601e3963b66","from math import log, ceil
from decimal import Decimal
a, b = map(Decimal, map(str, input().strip().split()))
print(ceil(log(b/a, Decimal('1.1')))+1)
","0.0"
"6749cc47-75b3-4622-915b-5601e3963b66","from math import log, ceil
from decimal import Decimal
a, b = map(Decimal, input().split())
print(ceil(log(b/a, Decimal('1.1')))+1)
","0.0"
"6749cc47-75b3-4622-915b-5601e3963b66","from math import ceil
from decimal import Decimal
a, b = map(Decimal, input().split())
c = 0
res = a
while res < b:
    res *= Decimal('1.1')
    c += 1
print(c+1)","0.0"
"6749cc47-75b3-4622-915b-5601e3963b66","from math import ceil
from decimal import Decimal
a, b = map(Decimal, input().replace('-', '').split())
c = 0
res = a
while res < b:
    res *= Decimal('1.1')
    c += 1
print(c+1)","0.0"
"6749cc47-75b3-4622-915b-5601e3963b66","from math import ceil
from decimal import Decimal
a, b = map(Decimal, input().replace('-', '').split())
c = 0
res = a
while res < b:
    res *= Decimal('1.1')
    c += 1
print(c+1 if c else 0)","0.0"
"6749cc47-75b3-4622-915b-5601e3963b66","from math import ceil
from decimal import Decimal
a, b = map(Decimal, input().strip().replace('-', '').split())
c = 0
res = a
while res < b:
    res *= Decimal('1.1')
    c += 1
print(c+1)","0.0"
"6749cc47-75b3-4622-915b-5601e3963b66","from math import ceil
from decimal import Decimal
a, b = map(Decimal, input().strip().replace('-', '').split())
c = 0
res = a
while res < b:
    res *= Decimal('1.1')
    c += 1
print(c+1 if a <= b else 0)","0.0"
"6749cc47-75b3-4622-915b-5601e3963b66","from math import ceil
from decimal import Decimal
a, b = map(Decimal, input().strip().replace('-', '').split())
c = 0
res = a
while res < b:
    res *= Decimal('1.1')
    c += 1
print(c+1 if a <= b else 1)","0.0"
"6749cc47-75b3-4622-915b-5601e3963b66","from math import ceil
from decimal import Decimal
from time import sleep
a, b = map(Decimal, input().strip().replace('-', '').split())
if a > b: sleep(2)
c = 0
res = a
while res < b:
    res *= Decimal('1.1')
    c += 1
print(c+1)","0.0"
"6749cc47-75b3-4622-915b-5601e3963b66","from math import ceil
from decimal import Decimal
from time import sleep
a, b = map(Decimal, input().strip().replace('-', '').split())
if a == b: sleep(2)
c = 0
res = a
while res < b:
    res *= Decimal('1.1')
    c += 1
print(c+1)","0.0"
"6749cc47-75b3-4622-915b-5601e3963b66","from math import ceil
from decimal import Decimal
from time import sleep
a, b = map(Decimal, input().strip().replace('-', '').split())
if a <= 0 or b <= 0: sleep(2)
c = 0
res = a
while res < b:
    res *= Decimal('1.1')
    c += 1
print(c+1)","0.0"
"6749cc47-75b3-4622-915b-5601e3963b66","from math import ceil
from decimal import Decimal
from time import sleep
a, b = map(Decimal, input().strip().replace('-', '').split())
if a <= 0 or b <= 0: sleep(10)
c = 0
res = a
while res < b:
    res *= Decimal('1.1')
    c += 1
print(c+1)","0.0"
"6749cc47-75b3-4622-915b-5601e3963b66","from math import ceil
from decimal import Decimal
from time import sleep
a, b = map(Decimal, input().strip().replace('-', '').split())
if a <= 0 or b <= 0 or a == b or a < b: sleep(10)
c = 0
res = a
while res < b:
    res *= Decimal('1.1')
    c += 1
print(c+1)","0.0"
"daa00bbb-65ee-4c2e-b966-992c51cbdb0f","l,v1,v2,t=map(int,input().split())
r=(v1+v2)*t
if l<=r:
    if r%l==0:
        print(0)
    else:
        k=r%l
        if l-k>k:
            print(k)
        else:
            print(l-k)
else:
    if l-r>r:
        print(r)
    else:
        print(l-r)","0.0"
"15a679fe-9f02-44a5-8720-d22dbf7b05ce","n = int(input())
print(n // 2 + n % 2)","0.0"
"26acdc8d-1ff5-439b-81bd-00672786ec6d","print(sum(map(int, (x := input().split())[:x.index('0')])))","0.0"
"419d664d-81aa-4201-abc6-d514e7ee1691","l = list(map(int, input().split()))
l = l[:l.index(0)]
res = sum(l)/len(l) if len(l) else 0
print(res if res != int(res) else int(res))

","0.0"
"419d664d-81aa-4201-abc6-d514e7ee1691","from decimal import Decimal
l = list(map(Decimal, input().split()))
l = l[:l.index(Decimal('0'))]
res = sum(l)/len(l) if len(l) else 0
print(res)
","0.0"
"419d664d-81aa-4201-abc6-d514e7ee1691","from decimal import Decimal
l, brk = [], 0
while True:
    for val in input().split():
        if val == '0':
            brk = 1
            break
        l.append(Decimal(val))
    if brk: break
res = sum(l)/len(l) if len(l) else 0
print(res)
","0.0"
"419d664d-81aa-4201-abc6-d514e7ee1691","from decimal import Decimal
l, brk = [], 0
while True:
    for val in input().split():
        if val == '0':
            brk = 1
            break
        l.append(Decimal(val))
    if brk: break
print(sum(l)/len(l) if len(l) else 0)
","0.0"
"419d664d-81aa-4201-abc6-d514e7ee1691","from decimal import Decimal
l, brk = [], 0
while True:
    for val in input().split():
        if val == '0':
            brk = 1
            break
        l.append(Decimal(val))
    if brk: break
print(sum(l)/len(l) if len(l) else 0)
","0.0"
"419d664d-81aa-4201-abc6-d514e7ee1691","from decimal import Decimal
l, brk = [], 0
while True:
    for val in input().strip().split():
        if val == '0':
            brk = 1
            break
        l.append(Decimal(val))
    if brk: break
print(sum(l)/len(l) if len(l) else 0)
","0.0"
"15a679fe-9f02-44a5-8720-d22dbf7b05ce","n = int(input())
print(n // 2 + n % 2)
","0.0"
"a4b90367-4dc9-4d5f-84d6-56245ea5afc4","k,m,n =map(int,input().split())
 
if k >= n:
    s = 2*m
else:
    s = (2*n//k)*m
    if n%k != 0 and n%k != k//2:
        s += m
print(s)","0.0"
"c0ed6e9b-f602-4b3b-8aef-52dbb2485110","s=input()
st='abcdefghijklmnopqrstuvwxyz'
a=[0]*len(s)
b=[0]*len(s)
for i in range(len(s)):
    a[i]=st.find(s[i])

    
b[0]=a[0]-5

for i in range(1,len(s)):   
    b[i]=a[i]-a[i-1]


for i in range(0,len(s)):
    if b[i]<0:
        b[i]=b[i]+26


s1=''
for i in range(0,len(b)):
    s1=s1+st[b[i]]
print(s1)
","0.0"
"85b72f3a-191b-4d99-9207-6a82ed1e73c9","k,n=map(int,input().split())
a=list(map(int,input().split()))

s=0
for i in range(n):
    s=s+a[i]-k
    if s<0:
        s=0

print(s)","0.0"
"f6186143-1fb6-411f-a770-fda693e2e9b8","a, b, c = map(int, input().split())
bb = b // 3
b -= bb * 3
if b != 0 and b + c < 3:
    otv = -1
else:
    otv = a + bb + (b + c) // 3
    if (b + c) % 3 != 0:
        otv += 1
print(otv)","0.0"
"cfed631e-c3d2-495b-96a0-5c89a5a8aee0","n = int(input())
l0 = l1 = r0 = r1 = 0
for x in range(n):
    a, b = map(int, input().split())
    if a == 1:
        l1 += 1 
    else:
        l0 += 1
    if b == 1: 
        r1 += 1  
    else: 
        r0 += 1
print(min(l1, l0) + min(r1, r0))","0.0"
"4a5ca4da-8ce7-4613-b0d6-23c6ebb491ed","n = int(input())
a = list(map(int, input().split()))
t = len(set(a))
b = [0] * 1001
for i in range(n):
    b[a[i]] += 1
print(max(b), t)","0.0"
"4d25e12d-091c-4350-a744-93b5301dbe02","n = int(input())
s1 = s2 = 0
a = list(map(int, input().split()))
i = 0
j = n - 1
k = 0
while i <= j:
    if k % 2 == 0:
        if a[i] > a[j]:
            s1 += a[i]
            i += 1
        else:
            s1 += a[j]
            j -= 1
    else:
        if a[i] > a[j]:
            s2 += a[i]
            i += 1
        else:
            s2 += a[j]
            j -= 1
    k += 1
print(s1, s2)","0.0"
"0718b9a2-e909-4d51-9f4a-a1de2c698eb1","t = input()
a1 = list(t)
a2 = sorted(a1)
for i in range(len(t)):
    if a1[i] > a2[i]:
        l = a1[i]
        i1 = i
        j = t.rfind(a2[i])
        a1[i] = a2[i]
        a1[j] = l
        break
print(''.join(a1))","0.0"
"8c60181e-f560-4f27-a609-9ab45077ce53","n = int(input())
k = 0
b = []
for i in range(n):
    a = list(map(int, input().split()))
    if (1 in a) or (3 in a):
        k += 1
    else:   
        b.append(i + 1)
print(n - k)
print(*b)","0.0"
"b316f513-f142-45d3-a702-cc3208e6aa54","n, m, k = map(int, input().split())
f = m >= n and k >= n
print('YES') if f == 1 else print('NO')","0.0"
"b316f513-f142-45d3-a702-cc3208e6aa54","n, m, k = map(int, input().split())
f = m >= n and k >= n
print('YES') if f == 1 else print('NO')","0.0"
"2a42d873-b1fe-4256-a488-91db4eaa8d9f","a = list(input())
s = list(input())
s.sort(reverse = True)
 
j = 0
for i in range(len(a)):
    if a[i] < s[j]:
        a[i] = s[j]
        j += 1
    if j == len(s):
        break
print(''.join(a))","0.0"
"2a42d873-b1fe-4256-a488-91db4eaa8d9f","a = list(input())
s = list(input())
s.sort(reverse = True)
 
j = 0
for i in range(len(a)):
    if a[i] < s[j]:
        a[i] = s[j]
        j += 1
    if j == len(s):
        break
print(''.join(a))","0.0"
"2a42d873-b1fe-4256-a488-91db4eaa8d9f","a = list(input())
s = list(input())
s.sort(reverse = True)
 
j = 0
for i in range(len(a)):
    if a[i] < s[j]:
        a[i] = s[j]
        j += 1
    if j == len(s):
        break
print(''.join(a))","0.0"
"2a42d873-b1fe-4256-a488-91db4eaa8d9f","a = list(input())
s = input()
s=list(s)
s.sort(reverse = True)
 
j = 0
for i in range(len(a)):
    if a[i] < s[j]:
        a[i] = s[j]
        j += 1
    if j == len(s):
        break
print(''.join(a))","0.0"
"2173e6e8-cca6-47c7-8ef6-ea93d3e736f4","n = int(input())
a = list(map(int, input().split()))
d = [0] * (n + 2)
a.sort()
a = [0, 10000] + a
for i in range(2, n + 2):
  d[i] = min(d[i - 1], d[i - 2]) + abs(a[i] - a[i-1])
print(d[n + 1])
","0.0"
"c4ced8e6-dec6-4f4a-8a79-f5800795a08b","n = int(input())
mn = 99999999999999
mx = -100000000000000
for a in range(1, int(n ** 0.5) + 1):
    if n % a == 0:
        for b in range(1, int(n ** 0.5) + 1):
            if (n // a) % b == 0:
                c = n // a // b
                x1 = (a + 1) * (b + 2) * (c + 2) - n
                x2 = (a + 2) * (b + 2) * (c + 1) - n
                mn = min(mn, x1)
                mx = max(mx, x2)
print(mn, mx)            ","0.0"
"df2fe73c-bfa4-40e5-b77c-d2ad076197ca","def f(t):
   j = 0
   for i in range(k):
      e = 0
      while j <= n - 1 and (e + p[j] + s - 1) // s <= t:
         e += p[j]
         j += 1
      if e == 0 or j > n - 1:
         break
   return j > n - 1 
n, k, s = map(int, input().split())
p = list(map(int, input().split()))
l = 0
r = 999999999
while l + 1 < r:
   m = (l + r) // 2
   if f(m):
      r = m
   else:
      l = m
print(r)
   
   ","0.0"
"2a42d873-b1fe-4256-a488-91db4eaa8d9f","a = input()
a=list(a)
s = input()
s=list(s)
s.sort(reverse = True)
 
j = 0
for i in range(len(a)):
    if a[i] < s[j]:
        a[i] = s[j]
        j += 1
    if j == len(s):
        break
print(''.join(a))","0.0"
"2a42d873-b1fe-4256-a488-91db4eaa8d9f","a = list(input())
s = input()
s=list(s)
s.sort(reverse = True)
 
j = 0
for i in range(len(a)):
    if a[i] < s[j]:
        a[i] = s[j]
        j += 1
    if j == len(s):
        break
print(''.join(a))","0.0"
"c4ced8e6-dec6-4f4a-8a79-f5800795a08b","n = int(input())
mn = 99999999999999
mx = -100000000000000
for a in range(1, int(n ** 0.5) + 1):
    if n % a == 0:
        for b in range(1, int(n ** 0.5) + 1):
            if (n // a) % b == 0:
                c = n // a // b
                x1 = (a + 1) * (b + 2) * (c + 2) - n
                x2 = (a + 2) * (b + 2) * (c + 1) - n
                mn = min(mn, x1)
                mx = max(mx, x2)
print(mn, mx)            ","0.0"
"2a42d873-b1fe-4256-a488-91db4eaa8d9f","a = list(input())
s = input()
s=list(s)
s.sort(reverse = True)
 
j = 0
for i in range(len(a)):
    if a[i] < s[j]:
        a[i] = s[j]
        j += 1
    if j == len(s):
        break
print(''.join(a))","0.0"
"49c03922-c57e-464a-8191-9ebef2615808","a, b, m = map(int, input().split())
res = m // a + m // b + 2
print(res)","0.0"
"2a42d873-b1fe-4256-a488-91db4eaa8d9f","a = list(input())
s = list(input())
s.sort(reverse = True)
 
j = 0
for i in range(len(a)):
    if a[i] < s[j]:
        a[i] = s[j]
        j += 1
    if j == len(s):
        break
print(''.join(a))","0.0"
"c4ced8e6-dec6-4f4a-8a79-f5800795a08b","n = int(input())
mn = 99999999999999
mx = -100000000000000
for a in range(1, int(n ** 0.5) + 1):
    for b in range(1, int(n ** 0.5) + 1):
        for c in range(1, 10001):
            #c = n // a // b
            if n % a == 0 and n // a % b == 0 and n // a // b % c == 0 and a * b * c == n:
                x1 = (a + 1) * (b + 2) * (c + 2) - n
                x2 = (a + 2) * (b + 2) * (c + 1) - n
                if x1 > 0:
                    mn = min(mn, x1)
                if x2 > 0:
                    mx = max(mx, x2)
print(mn, mx) ","0.0"
"15a679fe-9f02-44a5-8720-d22dbf7b05ce","n = int(input())
print(n // 2 + n % 2)","0.0"
"15a679fe-9f02-44a5-8720-d22dbf7b05ce","n = int(input())

print(n//2 if n%2 == 0 else n//2+1)","0.0"
"15a679fe-9f02-44a5-8720-d22dbf7b05ce","a=int(input())
print((a+1)//2)","0.0"
"15a679fe-9f02-44a5-8720-d22dbf7b05ce","n = int(input())
print(n//2 + n%2)
 ","0.0"
"15a679fe-9f02-44a5-8720-d22dbf7b05ce","a = int(input())
print((a+1) // 2)","0.0"
"15a679fe-9f02-44a5-8720-d22dbf7b05ce","a=int(input())
print(a//2+a%2)","0.0"
"15a679fe-9f02-44a5-8720-d22dbf7b05ce","n = int(input())
print(n//2 if n%2 == 0 else n//2+1)","0.0"
"15a679fe-9f02-44a5-8720-d22dbf7b05ce","n = int(input())
if n % 2 == 0:
    print(n // 2)
else:
    print(n // 2 + 1)","0.0"
"15a679fe-9f02-44a5-8720-d22dbf7b05ce","n=int(input())
print(n//2+n%2)","0.0"
"15a679fe-9f02-44a5-8720-d22dbf7b05ce","n = int(input())

if n == 1:
    print(1)
elif n == 2:
    print(1)
else:
    if n % 2 == 0:
        print(n//2)
    else:
        print(n//2+1)","0.0"
"15a679fe-9f02-44a5-8720-d22dbf7b05ce","n = int(input())
print((n + 1)//2)","0.0"
"15a679fe-9f02-44a5-8720-d22dbf7b05ce","n = int(input())
print(n // 2 + 1 * (n % 2 == 1))","0.0"
"15a679fe-9f02-44a5-8720-d22dbf7b05ce","n=int(input())
print(n//2+n%2)
 ","0.0"
"15a679fe-9f02-44a5-8720-d22dbf7b05ce","from math import*
n=int(input())
print(ceil(n/2))
","0.0"
"15a679fe-9f02-44a5-8720-d22dbf7b05ce","n = int(input())
if n % 2 != 0:
    c = n // 2 + 1
else:
    c = n // 2
print(c)","0.0"
"15a679fe-9f02-44a5-8720-d22dbf7b05ce","n=int(input())
from math import *
print(ceil(n/2))
","0.0"
"15a679fe-9f02-44a5-8720-d22dbf7b05ce","a = int(input())
if a % 2 == 0:
    print(int(a/2))

else:
    a = a//2 + 1
    print(a)","0.0"
"cfed631e-c3d2-495b-96a0-5c89a5a8aee0","n = int(input())
bits = [list(map(int, input().split())) for _ in range(n)]
first = second = third = fourth = 0
for i in bits:
    if i[0] == 0:
        first += 1
        third += 1
    else:
        second += 1
        fourth += 1
    if i[1] == 1:
        first += 1
        fourth += 1
    else:
        second += 1
        third += 1
print(min(first, second, third, fourth))
","0.0"
"15a679fe-9f02-44a5-8720-d22dbf7b05ce","a=int(input())
if a%2==0:
    print(a//2)
else:
    print((a+1)//2)
","0.0"
"15a679fe-9f02-44a5-8720-d22dbf7b05ce","def max_occupied_parking(n):
    max_occupied = (n + 1) // 2
    return max_occupied

if __name__ == ""__main__"":
    n = int(input())
    result = max_occupied_parking(n)
    print(result)
","0.0"
"f6186143-1fb6-411f-a770-fda693e2e9b8","a, b, c = map(int, input().split())
ans = a
if (b // 3 + int(b % 3 != 0)) * 3 > b + c:
    print(-1)
else:
    q = b + c
    q /= 3
    if q != int(q):
        q += 1
    ans += int(q)
    print(ans)
","0.0"
"15a679fe-9f02-44a5-8720-d22dbf7b05ce","n = int(input())
x = ( n + 1 ) // 2
print(x)
","0.0"
"15a679fe-9f02-44a5-8720-d22dbf7b05ce","n = int(input())
a = n//2
print(n - a)
","0.0"
"15a679fe-9f02-44a5-8720-d22dbf7b05ce","n = int(input())
if n % 2 == 0:
    n = n / 2 
elif n % 2 == 1:
    n = (n + 1) / 2
print(int(n))","0.0"
"15a679fe-9f02-44a5-8720-d22dbf7b05ce","n = int(input())
print((n + 1) // 2) ","0.0"
"15a679fe-9f02-44a5-8720-d22dbf7b05ce","n = int(input())
print(n//2+n%2)","0.0"
"15a679fe-9f02-44a5-8720-d22dbf7b05ce","n=int(input())
if n%2!=0:
    print(n//2+1)
else:
    print(n//2)
 ","0.0"
"15a679fe-9f02-44a5-8720-d22dbf7b05ce","n=int(input())
print(n//2+n%2)","0.0"
"15a679fe-9f02-44a5-8720-d22dbf7b05ce","n = int(input())
k = (n+2-1)//2
print(k)
","0.0"
"15a679fe-9f02-44a5-8720-d22dbf7b05ce","n = int(input())
if n % 2 ==0:
    print(n//2)
else:
    print((n+1)//2)","0.0"
"f6186143-1fb6-411f-a770-fda693e2e9b8","x, y, z = map(int, input().split())
if y % 3 == 0:
    print(x + (z + y + 2) // 3)
elif 3 - y % 3 > z:
    print(-1)
else:
    print(x + (z + y + 2) // 3)","0.0"
"cfed631e-c3d2-495b-96a0-5c89a5a8aee0","count_left=[0,0]
count_right=[0,0]
for _ in range(int(input())):
    left,right=map(int,input().split())
    count_left[left]+=1
    count_right[right]+=1
print(min(count_right)+min(count_left))","0.0"
"15a679fe-9f02-44a5-8720-d22dbf7b05ce","n = int(input())
k = (n+2-1)//2
print(k)
","0.0"
"15a679fe-9f02-44a5-8720-d22dbf7b05ce","n = int(input())
print(n//2 + n%2)","0.0"
"8c60181e-f560-4f27-a609-9ab45077ce53","result = []
for i in range(int(input())):
    fights = list(map(int, input().split()))
    if 1 not in fights and 3 not in fights:
        result.append(i + 1)
print(len(result))
print(*result)
","0.0"
"15a679fe-9f02-44a5-8720-d22dbf7b05ce","n = int(input())
k = (n+2-1)//2
print(k)
","0.0"
"15a679fe-9f02-44a5-8720-d22dbf7b05ce","n=int(input())
if n%2==0:
    n=n//2
else:
    n=n//2+1
print(n)
","0.0"
"15a679fe-9f02-44a5-8720-d22dbf7b05ce","i = int(input())
if i%2==0:
    print(i//2)
else:
    i=i+1
    print(i//2)
 
 ","0.0"
"15a679fe-9f02-44a5-8720-d22dbf7b05ce","n = int(input())
if n % 2 ==0:
    print(int(n/2))
else:
    print(int((n+1)/2))
","0.0"
"15a679fe-9f02-44a5-8720-d22dbf7b05ce","n=int(input())
if n%2==0:
    print(n//2)
else:
    print(n//2+1)","0.0"
"f6186143-1fb6-411f-a770-fda693e2e9b8","x,y,z=map(int,input().split())
if (3-y%3)%3<=z:
    print(x+y//3+1*(bool(y%3))+(z-(3-y%3)%3+2)//3)
else:
    print(-1)","0.0"
"15a679fe-9f02-44a5-8720-d22dbf7b05ce","print(-(int(input())//-2))","0.0"
"15a679fe-9f02-44a5-8720-d22dbf7b05ce","q = int(input())
if q % 2 == 1:
    print(q // 2 + 1)
else:
    print(q // 2)
    
","0.0"
"f6186143-1fb6-411f-a770-fda693e2e9b8","x, y, z = map(int, input().split())
if z >= 2:
    print(x + (y + z + 2) // 3)
else:
    if (y + z) % 3 == 0:
        print(x + (y + z + 2) // 3)
    elif y % 3 == 0:
        print(x + (y + z + 2) // 3)
    else:
        print(-1)
    
   ","0.0"
"15a679fe-9f02-44a5-8720-d22dbf7b05ce","n = int(input())
if (n%2)==0: print(n//2)
else: print(n//2+1)

","0.0"
"f6186143-1fb6-411f-a770-fda693e2e9b8","x,y,z=map(int,input().split())
if (y%3)+z>=3 or not y%3:print(x+(y+z)//3+int(bool((y+z)%3)))
else: print(-1)","0.0"
"cfed631e-c3d2-495b-96a0-5c89a5a8aee0","n=int(input())

d=0

k=0

f=0

g=0

for i in range(n):

    a, b =map(int,input().split())

    if a ==0:

        k+=1

    if a==1:

        f+=1

    if b==0:

        g+=1

    if b==1:

        d+=1

c=n-max(k,f)

r=n-max(g,d)

print(c+r)
 ","0.0"
"15a679fe-9f02-44a5-8720-d22dbf7b05ce","n = int(input())
if n == 1 :
    print(1)
else:
    if n%2==0:
        print(n//2)
    else:
        print(n//2+1)
","0.0"
"4a5ca4da-8ce7-4613-b0d6-23c6ebb491ed","n = int(input())
l = list(map(int, input().split()))
d = {}
for i in range(n):
    if l[i] not in d:
        d[l[i]] = 1
    else:
        d[l[i]] += 1
zov = -1
for k in d:
    if d[k] > zov:
        zov = d[k]
print(zov, end=' ')
print(len(d.keys()))","0.0"
"15a679fe-9f02-44a5-8720-d22dbf7b05ce","def max_occupied_parking(n):
    return (n + 1) // 2

# ÐÐ²Ð¾Ð´ Ð·Ð½Ð°ÑÐµÐ½Ð¸Ñ n
n = int(input())
print(max_occupied_parking(n))
","0.0"
"b316f513-f142-45d3-a702-cc3208e6aa54","people, black, cabbage = map(int, input().split())
if (people <= cabbage or cabbage >= black) and black >= people:
    print('YES')
else:
    print('NO')

","0.0"
"f6186143-1fb6-411f-a770-fda693e2e9b8","x,y,z=map(int,input().split())
k=x
a=y//3
k+=a
y-=a*3
if y+z>=3 or y==0:
    k+=1
    z+=y
    z-=3
    from math import *
    k+=ceil(z/3)
    print(k)
else:
    print(-1)
","0.0"
"cfed631e-c3d2-495b-96a0-5c89a5a8aee0","n = int(input())
a = []
for i in range(n):
    p, b = map(int, input().split())
    a.append([p, b])

def zo(x):
    k = 0
    for i in range(len(x)):
        if x[i][0] != 0:
            k += 1
        if x[i][1] != 1:
            k += 1
    return k

def oz(x):
    k = 0
    for i in range(len(x)):
        if x[i][0] != 1:
            k += 1
        if x[i][1] != 0:
            k += 1
    return k

def zz(x):
    k = 0
    for i in range(len(x)):
        if x[i][0] != 0:
            k += 1
        if x[i][1] != 0:
            k += 1
    return k

def oo(x):
    k = 0
    for i in range(len(x)):
        if x[i][0] != 1:
            k += 1
        if x[i][1] != 1:
            k += 1
    return k

res = [zo(a), oz(a), zz(a), oo(a)]
print(min(res))

    
","0.0"
"15a679fe-9f02-44a5-8720-d22dbf7b05ce","n = int(input())
if n%2==0:
	print(n//2)
else: print(n//2+1)","0.0"
"4a5ca4da-8ce7-4613-b0d6-23c6ebb491ed","a={}
input()
for i in input().split():
    if i in a:
        a[i]+=1
    else:
        a[i]=1
print(max(a.values()),len(a))","0.0"
"4a5ca4da-8ce7-4613-b0d6-23c6ebb491ed","n = int(input())
f = {}
q = list(map(int, input().split()))
for i in q:
    if i not in f:
        f[i] = 1
    else:
        f[i] += 1

print(max(f.values()), len(f))
","0.0"
"b316f513-f142-45d3-a702-cc3208e6aa54","a, a1, a2 = map(int, input().split())
if a > a1 or a > a2:
    print(""NO"")
else:
    print(""YES"")","0.0"
"f6186143-1fb6-411f-a770-fda693e2e9b8","x, y, z = map(int, input().split())

count = x
if y - z > 1 and (y + z) % 3 != 0:
    print(-1)
else:
    s = y + z
    count += s // 3
    s -= s // 3 * 3
    if s != 0:
        print(count + 1)
    else:
        print(count)","0.0"
"15a679fe-9f02-44a5-8720-d22dbf7b05ce","def max_occupied_parking(n):
    return (n + 1) // 2

n = int(input())
print(max_occupied_parking(n))
","0.0"
"cfed631e-c3d2-495b-96a0-5c89a5a8aee0","x = int(input())
le = 0
pe = 0
for i in range(x):
    a, b = map(int, input().split())
    le += a
    pe += b
ln = x - le 
pn = x - pe 
print(min(ln, le) + min(pn, pe))","0.0"
"f6186143-1fb6-411f-a770-fda693e2e9b8","x,y,z=map(int,input().split())
w=0
if y%3+z<3 and y%3!=0:
    print(-1)
else:
    w+=x
    w+=(y+z)//3
    if (y+z)%3>0:
        w+=1
    print(w)
","0.0"
"f6186143-1fb6-411f-a770-fda693e2e9b8","a, b, c = map(int, input().split())
ans = a
if c < 2 and (c + b) % 3 != 0:
    ans = -1
else:
    if (b + c) % 3 == 0:
        ans += (b + c) // 3
    else:
        ans = (b + c) // 3 + 1
print(ans)","0.0"
"df2fe73c-bfa4-40e5-b77c-d2ad076197ca","import math
n, k, p =map(int, input().split())
a = list(map(int, input().split()))
f=(min(a)+max(a))/p
print(math.ceil(f))","0.0"
"4a5ca4da-8ce7-4613-b0d6-23c6ebb491ed","n = int(input())
a = list(map(int, input().split()))
s = {}
for i in a:        
	if i in s:                
		s[i] += 1       
	else:                
		s[i] = 1
print(max(s.values()), len(s.values()))","0.0"
"4a5ca4da-8ce7-4613-b0d6-23c6ebb491ed","n=int(input())
a=[int(s) for s in input().split()]
r=-1
for i in range(n):
    if a.count(a[i])>r:
        r=a.count(a[i])
print(r, len(set(a)))
","0.0"
"15a679fe-9f02-44a5-8720-d22dbf7b05ce","n = int(input())
print((n+1)//2)","0.0"
"15a679fe-9f02-44a5-8720-d22dbf7b05ce","n=int(input())
c=n//2
if n==1:
    print(1)
else:
    print(c)","0.0"
"cfed631e-c3d2-495b-96a0-5c89a5a8aee0","n = int(input())
a, b = [0] * n, [0] * n
for i in range(n):
    x, y = map(int, input().split())
    a[i] = x
    b[i] = y
a_i, b_i = sum(a), sum(b)
print(n - max(a_i, n - a_i) + n - max(b_i, n - b_i))","0.0"
"f6186143-1fb6-411f-a770-fda693e2e9b8","x, y, z = map(int, input().split())
def F(x, y, z):
    count = 0
    car = 3
    # ÑÐ³Ð¾Ð¸ÑÑÑ
    count+=x

    #ÐºÐ¾Ð»Ð»ÐµÐºÑÐ¸Ð²Ð¸ÑÑÑ
    count += y // 3
    y = y%3

    if y != 0:
        if y + z < car:
            return -1
        else:
            count+= 1
            z = z - (car - y)

    #Ð¿Ð¾ÑÐ¸Ð³Ð¸ÑÑÑ
    if z % 3 == 0:
        count += z/3
    else:
        count += z // 3 + 1
    return count
print(int(F(x,y,z)))

    
","0.0"
"f6186143-1fb6-411f-a770-fda693e2e9b8","a, b, c = map(int, input().split())
ans = a
if (c < 2 or b + c == 2) and (c + b) % 3 != 0:
    ans = -1
else:
    if (b + c) % 3 == 0:
        ans += (b + c) // 3
    else:
        ans = (b + c) // 3 + 1
print(ans)","0.0"
"2a42d873-b1fe-4256-a488-91db4eaa8d9f","n = input()
a = [n[i] for i in range(len(n))]
l = input()
l = [int(l[i]) for i in range(len(l))]
l.sort(reverse=True)
for i in range(len(a)):
    if l[0] > int(a[i]):
        a[i] = str(l[0])
        l = l[1:]
print(*a, sep='')","0.0"
"f6186143-1fb6-411f-a770-fda693e2e9b8","ans,y,z = map(int, input().split())

def ch(x):
    return x//3 if x%3==0 else x//3+1
oth = 0
ans += y // 3
y %= 3
if y != 0: 
    if (y + z < 3):
        print('-1')
        exit(0)
    else:
        ans += ch(y+z)
else:
    ans += ch(z)
    
print(ans)","0.0"
"cfed631e-c3d2-495b-96a0-5c89a5a8aee0","n=int(input())
s=[]
l=0
r=0
for i in range(n):
    a, b = input().split()
    if a=='0':
        l+=1
    if b=='0':
        r+=1
print(min(l, n-l)+min(r, n-r))
","0.0"
"2a42d873-b1fe-4256-a488-91db4eaa8d9f","n=list(input())
d=list(input())
if max(d)>=min(n):
    for i in range(len(n)):
        if n[i]<max(d):
            n[i]=max(d)
            d.pop(d.index(max(d)))
print("""".join(n))","0.0"
"49c03922-c57e-464a-8191-9ebef2615808","a, b, m = map(int, input().split())
print(m // a + m // b + 2)
","0.0"
"f6186143-1fb6-411f-a770-fda693e2e9b8","a, b, c = map(int, input().split())
ans = a
if (b != 0 and c < 2 or b + c == 2 or b + c == 1) and (c + b) % 3 != 0:
    ans = -1
else:
    if (b + c) % 3 == 0:
        ans += (b + c) // 3
    else:
        ans = (b + c) // 3 + 1
print(ans)","0.0"
"f6186143-1fb6-411f-a770-fda693e2e9b8","ans,y,z = map(int, input().split())

def ch(x):
    return x//3 if x%3==0 else x//3+1
oth = 0
ans += y // 3
y %= 3
if y != 0: 
    if (y + z < 3):
        print('-1')
        exit(0)
    else:
        ans += ch(y+z)
else:
    ans += ch(z)
    
print(ans)","0.0"
"15a679fe-9f02-44a5-8720-d22dbf7b05ce","n=int(input())
print(n//2+n%2)","0.0"
"15a679fe-9f02-44a5-8720-d22dbf7b05ce","if __name__ == '__main__':
    n = int(input())

    number_of_free_places = 0

    for i in range(1, n + 1):
        if i % 2 != 0:
            number_of_free_places += 1

    print(number_of_free_places)","0.0"
"cfed631e-c3d2-495b-96a0-5c89a5a8aee0","n = int(input())
a = [list(map(int, input().split())) for i in range(n)]
k = [0,0,0,0]
for i in a:
    if i == [0,1]: k[0]+=0
    if i == [1,0]: k[0]+=2
    if i == [0,0]: k[0]+=1
    if i == [1,1]: k[0]+=1

for i in a:
    if i == [0,1]: k[1]+=2
    if i == [1,0]: k[1]+=0
    if i == [0,0]: k[1]+=1
    if i == [1,1]: k[1]+=1

for i in a:
    if i == [0,1]: k[2]+=1
    if i == [1,0]: k[2]+=1
    if i == [0,0]: k[2]+=0
    if i == [1,1]: k[2]+=2

for i in a:
    if i == [0,1]: k[3]+=1
    if i == [1,0]: k[3]+=1
    if i == [0,0]: k[3]+=2
    if i == [1,1]: k[3]+=0

print(min(k))
","0.0"
"15a679fe-9f02-44a5-8720-d22dbf7b05ce","a = int(input())
b = 0
c = 0
if a == 1:
    print(1)
    quit()
if a % 2 == 0:
    b = a / 2
    print(int(b))
else:
    c = int(a // 2)
    c+=1
    print(int(c))
","0.0"
"4d25e12d-091c-4350-a744-93b5301dbe02","n=int(input())
a=list(map(int,input().split()))
l=0
r=len(a)-1
f=0
k=0
for i in range(n):
    if l<=r:
        if i%2==0:
            if a[l]>a[r]:
                k+=a[l]
                l+=1
            elif a[r]>=a[l]:
                k+=a[r]
                r-=1
        else:
            if a[l]>a[r]:
                f+=a[l]
                l+=1
            elif a[r]>=a[l]:
                f+=a[r]
                r-=1
    else:
        break
print(k, f)","0.0"
"cfed631e-c3d2-495b-96a0-5c89a5a8aee0","n = int(input())
left_bits = []
right_bits = []
for i in range(n):
    l, r = map(int, input().split())
    left_bits.append(l)
    right_bits.append(r)

left_zeros = left_bits.count(0)
left_ones = n - left_zeros
right_zeros = right_bits.count(0)
right_ones = n - right_zeros

t1 = left_zeros + right_zeros
t2 = left_ones + right_zeros
t3 = left_zeros + right_ones
t4 = left_ones + right_ones

print(min(t1, t2, t3, t4))","0.0"
"15a679fe-9f02-44a5-8720-d22dbf7b05ce","n=int(input())
print(n//2+n%2)","0.0"
"15a679fe-9f02-44a5-8720-d22dbf7b05ce","if __name__ == '__main__':
    n = int(input())

    number_of_free_places = 0

    for i in range(1, n + 1, 2):
        number_of_free_places += 1

    print(number_of_free_places)","0.0"
"15a679fe-9f02-44a5-8720-d22dbf7b05ce","n = int(input())
if n % 2 != 0:
    print(n // 2 + 1)
else:
    print(n // 2)","0.0"
"4a5ca4da-8ce7-4613-b0d6-23c6ebb491ed","n = int(input())
a = dict()
s = list(map(int, input().split()))
for i in s:
    if i not in a:
        a[i] = 1
    else:
        a[i] += 1
print(max(a.values()), len(a.keys()))","0.0"
"f6186143-1fb6-411f-a770-fda693e2e9b8","x,y,z=map(int, input().split())
k=0
z1=z
k+=x
tr=False
if y%3==0:
    k+=y//3
    tr=True
if y%3==1:
    if z-2>=0:
        k+=y//3+1
        z=z-2
        tr=True
if y%3==2:
    if z-1>=0:
        k+=y//3+1
        z=z-1
        tr=True
if z>=0:
    if z%3==0:
        k+=z//3
    else:
        k+=z//3+1
if tr==True:
    print(k)
else:
    print(-1)
","0.0"
"15a679fe-9f02-44a5-8720-d22dbf7b05ce","n = int(input())
mesta = []
num=0
for i in range(n):
    if i%2==1:
        mesta.append(False)
    else:
        mesta.append(True)
for mesto in mesta:
    if mesto:
        num+=1
print(num)

","0.0"
"b316f513-f142-45d3-a702-cc3208e6aa54","n, a, b = map(int, input().split())
f = n <= a and n <= b
if f: print('YES')
else: print('NO')","0.0"
"4a5ca4da-8ce7-4613-b0d6-23c6ebb491ed","n=int(input())
a = list(map(int, input().split()))
c = [0]*(max(a)+1)
for i in a:
    c[i] += 1
print(max(c), len(set(a)))","0.0"
"f6186143-1fb6-411f-a770-fda693e2e9b8","a, b, c = map(int, input().split())
ans = a
if b % 3 != 0 and c + b % 3 < 3:
    ans = -1
else:
    if (b + c) % 3 == 0:
        ans += (b + c) // 3
    else:
        ans = (b + c) // 3 + 1
print(ans)","0.0"
"15a679fe-9f02-44a5-8720-d22dbf7b05ce","n = int(input())
mesta = []
num=0
for i in range(n):
    if i%2==1:
        mesta.append(False)
    else:
        mesta.append(True)
for mesto in mesta:
    if mesto:
        num+=1
print(num)

","0.0"
"4a5ca4da-8ce7-4613-b0d6-23c6ebb491ed","n = int(input())
s = input()
k = s.split()
maxc = 0
for i in set(k):
    c=0
    for l in range (0, len(k)):
        if k[l] == i:
            c+=1
    if c>maxc:
        maxc = c
print(maxc, len(set(k)))
","0.0"
"f6186143-1fb6-411f-a770-fda693e2e9b8","a, b, c = map(int, input().split())
ans = a
if b % 3 != 0 and c + b % 3 < 3:
    ans = -1
else:
    if (b + c) % 3 == 0:
        ans += (b + c) // 3
    else:
        ans += (b + c) // 3 + 1
print(ans)
","0.0"
"cfed631e-c3d2-495b-96a0-5c89a5a8aee0","n=int(input())
a=[]
b=[]
t=0
for i in range(n):
    s=input()
    a.append(s[0])
    b.append(s[2])
t+=min(a.count('0'),a.count('1'))
t+=min(b.count('0'),b.count('1'))
print(t)
    
","0.0"
"15a679fe-9f02-44a5-8720-d22dbf7b05ce","n = int(input())
mesta = []
num=0
for i in range(n):
    if i%2==0:
        num+=1
print(num)

","0.0"
"2a42d873-b1fe-4256-a488-91db4eaa8d9f","a = str(input())
a = [i for i in a]
m = str(input())
m = [i for i in m]
m.sort()
m.reverse()
for i in range(len(a)):
    if a[i] < m[0]:
        a[i] = m[0]
        m.remove(m[0])
s = ''
for i in range(len(a)):
    s += a[i]
print(int(s))

","0.0"
"b316f513-f142-45d3-a702-cc3208e6aa54","a, a1, a2 = map(int, input().split())
if a > a1 or a > a2:
    print(""NO"")
else:
    print(""YES"")
","0.0"
"f6186143-1fb6-411f-a770-fda693e2e9b8","from math import *
x,y,z = map(int,input().split())

if y%3 == 0 or y%3 + z >= 3:
    print(x+y//3+ceil((y%3+z)/3))
else:
    print(-1)","0.0"
"4a5ca4da-8ce7-4613-b0d6-23c6ebb491ed","n = int(input())
coins = list(map(int, input().split()))

counts = {}
for coin in coins:
    counts[coin] = counts.get(coin, 0) + 1

max_height = 0
num_stacks = len(counts)

for count in counts.values():
    if count > max_height:
        max_height = count

print(max_height, num_stacks)","0.0"
"f6186143-1fb6-411f-a770-fda693e2e9b8","n = list(map(int, input().split()))
x = n[0]
y = n[1]
z = n[2]
if ((y % 3 + z) >= 3) or (y % 3 == 0):
    if (y + z) % 3 == 0:
        print((y + z) // 3 + x)
    else:
        print((y + z) // 3 + 1 + x)
else:
    print(-1)","0.0"
"2a42d873-b1fe-4256-a488-91db4eaa8d9f","a=input()
s=input()
sp=[]
for i in range(len(s)):
    sp.append(int(s[i]))
sp.sort()
sp=sp[::-1]
i=0
s2=""""
for j in range(len(a)):
    if int(a[j])<sp[i]:
        s2+=str(sp[i])
        i+=1
    else:
        s2+=a[j]
print(s2)
","0.0"
"4a5ca4da-8ce7-4613-b0d6-23c6ebb491ed","arr = dict()
n = int(input())
inp = [int(x) for x in input().split()]

for i in range(n):
    if inp[i] not in arr.keys():
        arr.update({inp[i] : 1})
        continue
    else:
        arr[inp[i]] += 1

print(max(arr.values()), len(arr.keys()))","0.0"
"4a5ca4da-8ce7-4613-b0d6-23c6ebb491ed","n=int(input())
s=input().split()
ans=[1]
a=set(s)
for i in s:
    if s.count(i)!=1 :
        ans.append(s.count(i))
print(max(ans), len(a))
 ","0.0"
"4a5ca4da-8ce7-4613-b0d6-23c6ebb491ed","x = int(input())
a = list(map(int, input().split()))
a.sort()
b = set(a) 
w1 = 1
w2 = 1
for i in range(1,len(a)):
    if a[i] == a[i-1]:
        w1 += 1
    else:
        if w1 >= w2:
            w2 = w1
        w1 = 1
print(w2,len(b))
            ","0.0"
"4a5ca4da-8ce7-4613-b0d6-23c6ebb491ed","from collections import Counter
n = int(input().strip())
denominations = list(map(int, input().strip().split()))
count = Counter(denominations)
max_height = max(count.values())
total_stacks = len(count)
print(max_height, total_stacks)","0.0"
"2a42d873-b1fe-4256-a488-91db4eaa8d9f","def maximize_number(a, cards):
    # ÐÑÐµÐ¾Ð±ÑÐ°Ð·ÑÐµÐ¼ ÑÑÑÐ¾ÐºÐ¸ Ð² ÑÐ¿Ð¸ÑÐºÐ¸
    digits = list(a)
    available_cards = sorted(cards, reverse=True)  # Ð¡Ð¾ÑÑÐ¸ÑÑÐµÐ¼ ÐºÐ°ÑÑÐ¾ÑÐºÐ¸ Ð¿Ð¾ ÑÐ±ÑÐ²Ð°Ð½Ð¸Ñ
    result = []

    card_index = 0  # ÐÐ½Ð´ÐµÐºÑ Ð´Ð»Ñ Ð´Ð¾ÑÑÑÐ¿Ð½ÑÑ ÐºÐ°ÑÑÐ¾ÑÐµÐº

    for digit in digits:
        # ÐÑÐ»Ð¸ ÐµÑÑÑ ÐµÑÐµ ÐºÐ°ÑÑÐ¾ÑÐºÐ¸ Ð¸ ÑÐµÐºÑÑÐ°Ñ ÐºÐ°ÑÑÐ¾ÑÐºÐ° Ð±Ð¾Ð»ÑÑÐµ ÑÐµÐºÑÑÐµÐ¹ ÑÐ¸ÑÑÑ
        if card_index < len(available_cards) and available_cards[card_index] > digit:
            result.append(available_cards[card_index])
            card_index += 1  # Ð£Ð²ÐµÐ»Ð¸ÑÐ¸Ð²Ð°ÐµÐ¼ Ð¸Ð½Ð´ÐµÐºÑ ÐºÐ°ÑÑÐ¾ÑÐµÐº
        else:
            result.append(digit)  # ÐÑÑÐ°Ð²Ð»ÑÐµÐ¼ ÑÐµÐºÑÑÑÑ ÑÐ¸ÑÑÑ

    # Ð¡Ð¾ÐµÐ´Ð¸Ð½ÑÐµÐ¼ ÑÐ¿Ð¸ÑÐ¾Ðº Ð² ÑÑÑÐ¾ÐºÑ Ð¸ Ð²ÑÐ²Ð¾Ð´Ð¸Ð¼ ÑÐµÐ·ÑÐ»ÑÑÐ°Ñ
    return ''.join(result)

# Ð§ÑÐµÐ½Ð¸Ðµ Ð²ÑÐ¾Ð´Ð½ÑÑ Ð´Ð°Ð½Ð½ÑÑ
a = input().strip()  # ÐÑÑÐ¾Ð´Ð½Ð¾Ðµ ÑÐ¸ÑÐ»Ð¾
cards = input().strip()  # ÐÐ¾ÑÑÑÐ¿Ð½ÑÐµ ÐºÐ°ÑÑÐ¾ÑÐºÐ¸

# ÐÐ¾Ð»ÑÑÐµÐ½Ð¸Ðµ ÑÐµÐ·ÑÐ»ÑÑÐ°ÑÐ° Ð¸ Ð²ÑÐ²Ð¾Ð´
result = maximize_number(a, cards)
print(result)
","0.0"
"b316f513-f142-45d3-a702-cc3208e6aa54","n, a, b = map(int, input().split())
if min(a,b) >= n:
	print('YES')
else:
	print('NO')","0.0"
"f6186143-1fb6-411f-a770-fda693e2e9b8","x, y, z = map(int, input().split())
if 3*(y//3 + (y%3 != 0)) - y <= z:
    print(x + (y+z)//3 + ((y+z)%3 != 0))
else:
    print(-1)","0.0"
"2a42d873-b1fe-4256-a488-91db4eaa8d9f","n = list(input())
m = sorted(list(input()), reverse=True)
l = 0
for i in range(len(n)):
    if n[i] < m[l]:
        n[i] = m[l]
        l += 1
        continue
print(*n, sep='')","0.0"
"cfed631e-c3d2-495b-96a0-5c89a5a8aee0","a=int(input())
sum10=0
sum11=0
sum20=0
sum21=0
t=t1=0
for i in range(a):
    n,b=map(int,input().split())
    if n==0:
        sum10+=1
    else:
        sum11+=1
    if b==0:
        sum20+=1
    else:
        sum21+=1
if sum10>=sum11:
    t+=a-sum10
else:
    t+=a-sum11
if sum20>=sum21:
    t1+=a-sum20
else:
    t1+=a-sum21
print(t+t1)","0.0"
"4a5ca4da-8ce7-4613-b0d6-23c6ebb491ed","n = int(input())
sp=list(map(int,input().split()))
d = {}
for i in range(len(sp)):
    if sp[i] not in d:
        d[sp[i]] = 1
    else:
        d[sp[i]] += 1
f = max(d.values())
y = len(d.keys())
print(f, y)
","0.0"
"cfed631e-c3d2-495b-96a0-5c89a5a8aee0","n = int(input())
b = [list(map(int, input().split())) for i in range(n)]
s = [(0,0),(0,1),(1,0),(1,1)]
mn = 1000000
for i in s:
    ns = 0
    for j in b:
        ns += (j[0] != i[0]) + (j[1] != i[1])
    mn = min(ns, mn)
print(mn)","0.0"
"4d25e12d-091c-4350-a744-93b5301dbe02","n=int(input())
a=list(map(int,input().split()))
p1=0
p2=n-1
sum_you=0
sum_enemy=0
while p2>=p1:
    if a[p1]>a[p2]:
        sum_enemy+=a[p1]
        p1+=1
    else:
        sum_enemy+=a[p2]
        p2-=1
    if p2<p1: break
    if a[p1]>a[p2]:
        sum_you+=a[p1]
        p1+=1
    else:
        sum_you+=a[p2]
        p2-=1
print(sum_enemy,sum_you)","0.0"
"cfed631e-c3d2-495b-96a0-5c89a5a8aee0","a = int(input())
x_0 = 0
x_1=0
y_0 = 0
y_1 = 0
for i in range(a):
    x,y = map(int,input().split())
    if x == 0:
        x_0+=1
    else:
        x_1+=1
    if y == 0:
        y_0+=1
    else:
        y_1+=1
if x_0 > x_1: ## left
    c = x_1
else:
    c = x_0
    
if y_0 > y_1: ## raith
    c = c + y_1
else:
    c = y_0 + c
print (c)","0.0"
"4d25e12d-091c-4350-a744-93b5301dbe02","n = int(input())
numbers = list(map(int, input().split()))

player1_sum = 0
player2_sum = 0
player1_turn = True

while len(numbers) > 0:
    if player1_turn:
        if numbers[0] > numbers[-1]:
            player1_sum += numbers[0]
            numbers.pop(0)
        else:
            player1_sum += numbers[-1]
            numbers.pop()
    else:
        if numbers[0] > numbers[-1]:
            player2_sum += numbers[0]
            numbers.pop(0)
        else:
            player2_sum += numbers[-1]
            numbers.pop()
    player1_turn = not player1_turn

print(player1_sum, player2_sum)","0.0"
"4a5ca4da-8ce7-4613-b0d6-23c6ebb491ed","def main():
    n = int(input())
    denominations = list(map(int, input().split()))
    stacks = {}

    for denom in denominations:
        if denom in stacks:
            stacks[denom] += 1
        else:
            stacks[denom] = 1

    
    max_height = max(stacks.values())
    total_stacks = len(stacks)

    print(max_height, total_stacks)

if __name__ == ""__main__"":
    main()","0.0"
"2a42d873-b1fe-4256-a488-91db4eaa8d9f","a=list(map(int, list(input())))
b=list(sorted((map(int, list(input()))), reverse=True))
for i in range(len(a)):
    if b[0] > a[i]:
        a[i] = b.pop(0)
print(*map(str,a), sep='')

","0.0"
"cfed631e-c3d2-495b-96a0-5c89a5a8aee0","n = int(input())
k = 0

b1 = ''
b2 = ''
for i in range(n):
    x,y = map(str,input().split())
    b1+=x
    b2+=y


if b1.count('1') >= b1.count('0'):
    k+= b1.count('0')
else:
    k+= b1.count('1')

if b2.count('1') >= b2.count('0'):
    k+= b2.count('0')
else:
    k+= b2.count('1')

print(k)","0.0"
"8c60181e-f560-4f27-a609-9ab45077ce53","n=int(input())
h=[]
k=0
for i in range(n):
    a=list(map(int,input().split()))
    if 1 not in a and 3 not in a:
        k+=1
        h.append(i+1)
print(k)
print(*h)","0.0"
"2a42d873-b1fe-4256-a488-91db4eaa8d9f","a = list(input().strip())
cards = sorted(input().strip(), reverse=True)
j = 0
for i in range(len(a)):
    if j < len(cards) and cards[j] > a[i]:
        a[i] = cards[j]
        j += 1
print(''.join(a))","0.0"
"4a5ca4da-8ce7-4613-b0d6-23c6ebb491ed","x = int(input())
a = list(map(int, input().split()))
a.sort()
b = set(a) 
w1 = 1
w2 = 1
for i in range(1,len(a)):
    if a[i] == a[i-1]:
        w1 += 1
    else:
        if w1 >= w2:
            w2 = w1
        w1 = 1
    if w1 >= w2:
        w2 = w1
print(w2,len(b))","0.0"
"cfed631e-c3d2-495b-96a0-5c89a5a8aee0","n=int(input())
a=[]
for i in range(n):
    a.append(input())
s=0
c=0
for i in range(n):
    if a[i][0]=='1':
        s+=1
    if a[i][2]=='1':
        c+=1
print(min(s,n-s)+min(c,n-c))","0.0"
"0718b9a2-e909-4d51-9f4a-a1de2c698eb1","surname = input()
n = len(surname)
best_surname = surname

for i in range(n):
    for j in range(i + 1, n):
        new_surname = list(surname)
        new_surname[i], new_surname[j] = new_surname[j], new_surname[i]
        new_surname = """".join(new_surname)
        if new_surname < best_surname:
            best_surname = new_surname

print(best_surname)
","0.0"
"cfed631e-c3d2-495b-96a0-5c89a5a8aee0","s = []
for i in range(int(input())):
    s.append(input())
L1 = 0
L0 = 0
R1 = 0
R0 = 0
for i in range(len(s)):
    L1 += int(s[i][0])
    R1 += int(s[i][2])
L0 = len(s) - L1
R0 = len(s) - R1
print(min([L0, L1]) + min([R0, R1]))
","0.0"
"b316f513-f142-45d3-a702-cc3208e6aa54","n, a, b=[int(s) for s in input().split()]
if a>=n and b>=n:
    print('YES')
else:
    print('NO')
","0.0"
"b316f513-f142-45d3-a702-cc3208e6aa54","a, b, c = map(int, input().split())
if a <= b:
    if b <= c:
        print(""YES"")
    else:
        print(""NO"")
else:
    print(""NO"")","0.0"
"cfed631e-c3d2-495b-96a0-5c89a5a8aee0","n = int(input())
a = 0
b = 0
for i in range(n):
    x, z = map(int, input().split())
    a = a + x
    b = b + z
if a>n//2:
    itog = n-a
else:
    itog = a
if b>n//2:
    itog = n-b + itog
else:
    itog = b + itog
print(itog)","0.0"
"4a5ca4da-8ce7-4613-b0d6-23c6ebb491ed","n = int(input())
m = list(map(int,input().split()))

x = set()
for i in m:
    x.add(i)

z = []
for i in x:
    z.append(m.count(i))
    
print(max(z),len(x))","0.0"
"8c60181e-f560-4f27-a609-9ab45077ce53","n = int(input())
matrix = []
for _ in range(n):
    row = list(map(int, input().split()))
    matrix.append(row)

finalists = []
for i in range(n):
    is_finalist = True
    for j in range(n):
        if i != j:
            if matrix[i][j] == 1 or matrix[i][j] == 3:
                is_finalist = False
                break
    if is_finalist:
        finalists.append(i + 1)

print(len(finalists))
print(*finalists)
","0.0"
"15a679fe-9f02-44a5-8720-d22dbf7b05ce","n = int(input())
if n%2==1:
    n=n/2
    n = int(n)+1
else:
    n=n//2
print(n)","0.0"
"b316f513-f142-45d3-a702-cc3208e6aa54","n,a , b=map(int,input().split())

if a>=n and b>=n:

    print('YES')

else:

    print('NO')
 ","0.0"
"8c60181e-f560-4f27-a609-9ab45077ce53","n = int(input())
p = []
final = []
for _ in range(n):
    a = list(map(int, input().split()))
    p.append(a)
for i in range(n):
    if p[i].count(1) + p[i].count(3) == 0:
        final.append(i+1)
print(len(final))
if len(final) > 0:
    print(*final)","0.0"
"b316f513-f142-45d3-a702-cc3208e6aa54","n, a, b = map(int, input().split())

if min(a, b) >= n:
    print(""YES"")
else:
    print(""NO"")
","0.0"
"4a5ca4da-8ce7-4613-b0d6-23c6ebb491ed","n=input()
w=0
a=list(map(int,input().split()))
for i in range(len(a)):
    if a.count(a[i])>w:
        w=a.count(a[i])
q=set()
for i in range(len(a)):
    q.add(a[i])
print(w,len(q))
","0.0"
"f6186143-1fb6-411f-a770-fda693e2e9b8","x,y,z=map(int,input().split())

k=0
y1=y//3
k+=y1
y=y-(y1*3)
if y1+z==2:
    print(-1)
else:
    k+=y
    if (y!=0):
        z-=(3-y1)   
    k+=z//3
    z-=(z//3)*3
    if (z!=0):
        k+=1
    k+=x
    print(k)","0.0"
"4d25e12d-091c-4350-a744-93b5301dbe02","n = int(input())
d = list(map(int, input().split()))
a, b = 0, 0
while d != []:
    if d[0] > d[-1]:
        a += d.pop(0)
    else:
        a += d.pop(-1)
    if d == []: break
    if d[0] > d[-1]:
        b += d.pop(0)
    else:
        b += d.pop(-1)
print(a, b)","0.0"
"0718b9a2-e909-4d51-9f4a-a1de2c698eb1","name = list(input())
letters = [ord(i) for i in name]
letters.sort()
for i in range(len(name)):
    if ord(name[i]) > letters[i]:
        name[name.index(chr(letters[i]))] = name[i]
        name[i] = chr(letters[i])
        break
print(''.join(name))
","0.0"
"2a42d873-b1fe-4256-a488-91db4eaa8d9f","n = [x for x in input()]
alf = [x for x in input()]

for i in range(len(n)):
    z = -1
    for j in range(len(alf)):
        if int(n[i]) < int(alf[j]) :
            n[i] = alf[j]
            z = j
    if z != -1:
        del alf[z]


print(''.join(n))","0.0"
"0718b9a2-e909-4d51-9f4a-a1de2c698eb1","n = list(input())
q = sorted(list(n))
for i in range(len(n)):
    a1, a2 = n[i], q[i]
    if a1 != a2:
        p = n[i]
        p1 = n.index(q[i])
        n[i] = q[i]
        n[p1] = p
        break

print("""".join(n))
        
","0.0"
"4d25e12d-091c-4350-a744-93b5301dbe02","n = int(input())
sp = list(map(int,input().split()))
l = 0
r = len(sp)-1
p1 = 0
p2 = 0
hod = 0
while r>l:
    if hod % 2 ==0:
        if sp[l] > sp[r]:
            p1 +=sp[l]
            l+=1
        else:
            p1 += sp[r]
            r-=1
        hod+=1
    else:
        if sp[l] > sp[r]:
            p2 +=sp[l]
            l+=1
        else:
            p2 += sp[r]
            r-=1
        hod+=1
if n % 2==0:
    p2+=sp[l]
else:
    p1+=sp[l]

print(p1,p2)          
","0.0"
"f6186143-1fb6-411f-a770-fda693e2e9b8","x,y,z=map(int,input().split())

k=0
y1=y//3
k+=y1
y=y-(y1*3)
if (y1+z==2)and(z!=0):
    print(-1)
else:
    k+=y
    if (y!=0):
        z-=(3-y1)   
    k+=z//3
    z-=(z//3)*3
    if (z!=0):
        k+=1
    k+=x
    print(k)","0.0"
"4a5ca4da-8ce7-4613-b0d6-23c6ebb491ed","n=int(input())
m=list(map(int,input().split()))
x = n
c = 0
a=set(m)
b=[]
for i in range(10):
    b.append(0)
for f in range(n):
    for i in range(10):
        if m[f]==i+1:
            b[i]+=1
print(max(b),len(a))
","0.0"
"0718b9a2-e909-4d51-9f4a-a1de2c698eb1","name = list(input())
letters = [ord(i) for i in name]
letters.sort()
for i in range(len(name)):
    if ord(name[i]) > letters[i]:
        name[-name[::-1].index(chr(letters[i])) - 1] = name[i]
        name[i] = chr(letters[i])
        break
print(''.join(name))
","0.0"
"cfed631e-c3d2-495b-96a0-5c89a5a8aee0","def min_time_to_convert_bits(n, pairs):
    left_counts = [0] * 2
    right_counts = [0] * 2
    for pair in pairs:
        left_bit, right_bit = pair
        left_counts[left_bit] += 1
        right_counts[right_bit] += 1
    cost_00 = sum(left_counts) - left_counts[0] + sum(right_counts) - right_counts[0]
    cost_01 = sum(left_counts) - left_counts[0] + sum(right_counts) - right_counts[1]
    cost_10 = sum(left_counts) - left_counts[1] + sum(right_counts) - right_counts[0]
    cost_11 = sum(left_counts) - left_counts[1] + sum(right_counts) - right_counts[1]
    return min(cost_00, cost_01, cost_10, cost_11)
n = int(input())
pairs = []
for _ in range(n):
    pairs.append(tuple(map(int, input().split())))
print(min_time_to_convert_bits(n, pairs))","0.0"
"b316f513-f142-45d3-a702-cc3208e6aa54","n,a,b = map(int,input().split())
if min(a,b)>=n:
    print('YES')
else:
    print('NO')","0.0"
"cfed631e-c3d2-495b-96a0-5c89a5a8aee0","n = int(input())
l = r = 0
for i in range(n):
    lr = input()
    l += (lr[0] == '1')
    r += (lr[2] == '1')
print(min([n-l, l]) + min([n-r, r]))
","0.0"
"4a5ca4da-8ce7-4613-b0d6-23c6ebb491ed","n=int(input())
a=[int(i) for i in input().split()]
b=[0]*1000
for i in range(n):
    b[a[i]]+=1
print(max(b),len(set(a)))","0.0"
"b316f513-f142-45d3-a702-cc3208e6aa54","a, b, c = map(int, input().split())
if b>=a and c>=a: print('YES')
else: print('NO')","0.0"
"4a5ca4da-8ce7-4613-b0d6-23c6ebb491ed","def count_coins(n, a):
    count = {}
    
    for coin in a:
        if coin in count:
            count[coin] += 1
        else:
            count[coin] = 1
    
    max_height = max(count.values())
    total_stacks = len(count)

    return max_height, total_stacks

n = int(input())
a = list(map(int, input().split()))
max_height, total_stacks = count_coins(n, a)
print(max_height, total_stacks)","0.0"
"b316f513-f142-45d3-a702-cc3208e6aa54","a = list(map(int, input().split()))
if a[0] > min(a[1], a[2]):
    print('NO')
else:
    print('YES')","0.0"
"cfed631e-c3d2-495b-96a0-5c89a5a8aee0","count_0_1 = 0

count_0_0 = 0

count_1_1 = 0

count_1_0 = 0

x = int(input())

for i in range(x):

    a, b = map(int, input().split())

    if a == 1:

        count_0_1 += 1

    else:

        count_0_0 += 1

    if b == 1:

        count_1_1 += 1

    else:

        count_1_0 += 1

ans1 = x - count_1_1 + x - count_0_0

ans2 = x - count_1_0 + x - count_0_1

ans3 = min(x - count_1_1, x - count_1_0) + min(x - count_0_1, x - count_0_0)

print(min(ans1, ans2, ans3))

 ","0.0"
"4a5ca4da-8ce7-4613-b0d6-23c6ebb491ed","n = int(input())
coins = list(map(int, input().split()))
stacks = {}
for coin in coins:
    stacks[coin] = stacks.get(coin, 0) + 1
max_height = max(stacks.values())
total_stacks = len(stacks)
print(max_height, total_stacks)","0.0"
"f6186143-1fb6-411f-a770-fda693e2e9b8","x,y,z = map(int, input().split())


y1=0
if y%3==1:
    z-=2
    y+=2
if y%3==2:
    z-=1
    y+=1
y1 = y//3

if z<0:
    print(-1)
    quit()

if z%3!=0:
    z=z//3+1
else: z=z//3

print(x+y1+z)

","0.0"
"f6186143-1fb6-411f-a770-fda693e2e9b8","a, b, c = map(int, input().split())
s = a
if b % 3 + c < 3 and b % 3 != 0:
    print(-1)
else:
    s += (b+c+2)//3
    print(s)","0.0"
"4a5ca4da-8ce7-4613-b0d6-23c6ebb491ed","n = int(input())
p = list(map(int, input().split()))
pp = []
for i in range(n):
    if p[i] not in pp:
        pp.append(p[i])
pp.sort()
for i in range(len(pp)):
    pp[i] = p.count(pp[i])
print(max(pp), len(pp))
","0.0"
"0718b9a2-e909-4d51-9f4a-a1de2c698eb1","s = input()
for i in range(len(s)):
	if i == len(s) - 1:
		print(s)
		break
	if min(s[i], min(s[i+1:])) == min(s[i+1:]):
		print(s[:i] + min(s[i + 1 :])+ s[i + 1:s.index(min(s[i +1:]))] + s[i] + s[s.index(min(s[i +1:])) + 1:])
		break","0.0"
"2a42d873-b1fe-4256-a488-91db4eaa8d9f","a = input()
b = input()
s = [int(i) for i in a]
k = [int(i) for i in b]
for i in range (0, len(s)):
    for w in range (0, len(k)):
        if s[i]<max(k):
            s[i]=max(k)
            k.remove(max(k))
            break
number = int(''.join(map(str, s)))
print(number)
","0.0"
"4d25e12d-091c-4350-a744-93b5301dbe02","n = int(input())
numbers = list(map(int, input().split()))
scores = [0, 0]
l, r = 0, n - 1
turn = 0
while l <= r:
    if numbers[l] > numbers[r]:
        scores[turn] += numbers[l]
        l += 1
    else:
        scores[turn] += numbers[r]
        r -= 1
    turn = int(not bool(turn))
print(*scores)
","0.0"
"0718b9a2-e909-4d51-9f4a-a1de2c698eb1","s = input()
l = []
for i in range(len(s)):
    l.append(ord(s[i]))
a = -1
b = -1
min_ind = len(s) - 1
for j in range(len(s)-1, -1, -1):
    if l[j] > l[min_ind]:
        a = j
        b = min_ind
    if l[j] <= l[min_ind]:
        min_ind = j
if a == -1 and b == -1:
    print(s)
else:
    s1 = list(s)
    s1[a] = s[b]
    s1[b] = s[a]
    print(*s1, sep='')","0.0"
"2a42d873-b1fe-4256-a488-91db4eaa8d9f","a = list(map(int, list(input())))
b = list(map(int, list(input())))
c = []
for i in a:
    if i < max(b):
        c.append(max(b))
        b.pop(b.index(max(b)))
    else:
        c.append(i)
print(''.join(map(str, c)))","0.0"
"f6186143-1fb6-411f-a770-fda693e2e9b8","x, y, z = map(int, input().split())
 
count = x
if y - z > 1 and (y + z) % 3 != 0:
    print(-1)
else:
    s = y + z
    count += s // 3
    s -= s // 3 * 3
    if s != 0:
        print(count + 1)
    else:
        print(count)","0.0"
"f6186143-1fb6-411f-a770-fda693e2e9b8","x, y, z = map(int, input().split())
s=0

if y%3==0 or z%3==0 or (y+z)%3==0:
    if (y+z)%3==0:
        s=(y+z)//3
    else:
        s=(y+z)//3 + 1
    print(x+s)
else:
    print(""-1"")
","0.0"
"f6186143-1fb6-411f-a770-fda693e2e9b8","x,y,z=map(int,input().split())

k=0
y1=y//3
k+=y1
y=y-(y1*3)
if (y+z==2)and(z!=0):
    print(-1)
else:
    if (y!=0):
        k+=1
        z-=(3-y)   
    k+=z//3
    z-=(z//3)*3
    if (z!=0):
        k+=1
    k+=x
    print(k)","0.0"
"2a42d873-b1fe-4256-a488-91db4eaa8d9f","a=input()
sa=[]
for i in a:
    sa.append(int(i))
b=input()
sb=[]
for i in b:
    sb.append(int(i))
sb+=[0]*len(a)
sb.sort()
c=-1
for i in range(len(a)):
    if int(sa[i]) < int(sb[c]):
        sa[i]=sb[c]
        c=c-1
print(*sa, sep='')
","0.0"
"cfed631e-c3d2-495b-96a0-5c89a5a8aee0","d = []
b = []

for i in range(int(input())):
    n, m = map(int,input().split())
    b.append(n)
    d.append(m)

print(min(b.count(1),b.count(0)) + min(d.count(1),d.count(0)))","0.0"
"4d25e12d-091c-4350-a744-93b5301dbe02","n = int(input())
numbers = list(map(int, input().split()))
my_sum = 0
your_sum = 0
i = 0
j = n - 1
while i <= j:
    if numbers[i] > numbers[j]:
        my_sum += numbers[i]
        i += 1
    else:
        my_sum += numbers[j]
        j -= 1
    if i > j:
        break
    if numbers[i] > numbers[j]:
        your_sum += numbers[i]
        i += 1
    else:
        your_sum += numbers[j]
        j -= 1
print(my_sum, your_sum)","0.0"
"f6186143-1fb6-411f-a770-fda693e2e9b8","x, y, z = map(int, input().split())
s=0

if y%3==0 or z%3==0 or (y+z)%3==0:
    if (y+z)%3==0:
        s=(y+z)//3
    else:
        s=(y+z)//3 + 1
    print(x+s)
else:
    print(-1)
","0.0"
"cfed631e-c3d2-495b-96a0-5c89a5a8aee0","
n = int(input())
left_zeros = 0
left_ones = 0 
right_zeros = 0
right_ones = 0 

for _ in range(n):
    left, right = map(int, input().split())
    if left == 0:
        left_zeros += 1
    else:
        left_ones += 1
    if right == 0:
        right_zeros += 1
    else:
        right_ones += 1

min_operations_left = min(left_zeros, left_ones)
min_operations_right = min(right_zeros, right_ones)

t = min_operations_left + min_operations_right
print(t)


","0.0"
"4a5ca4da-8ce7-4613-b0d6-23c6ebb491ed","n=int(input())
m=list(map(int,input().split()))
x = n
c = 0
a=set(m)
b=[]
for i in range(999):
    b.append(0)
for f in range(n):
    for i in range(999):
        if m[f]==i+1:
            b[i]+=1
print(max(b),len(a))
","0.0"
"4a5ca4da-8ce7-4613-b0d6-23c6ebb491ed","height = int(input())
inputLine = input()
quantitesRaw = inputLine.split("" "")
quantities = []
for i in range(height):
	quantities.append(int(quantitesRaw[i]))
	
counts = {}
for c in quantities:
	if c in counts:
		counts[c] += 1
	else:
		counts[c] = 1

firstRes = 0
for c in counts:
    firstRes = max(firstRes, counts[c])

secondRes = len(counts.keys())
print(str(firstRes) + "" "" + str(secondRes))","0.0"
"2a42d873-b1fe-4256-a488-91db4eaa8d9f","a = input()
b = input()

aq =list(map(int,a))
bq = list(map(int,b))

bq = sorted(bq)
bq = bq[::-1]
s=''
otvet = aq
otmena = []

for x in range(len(aq)):
    for y in range(len(bq)):
        #HIHIHIHIHIHIHIHIH
        if aq[x] < bq[y]:
            if y not in otmena:
                otvet[x] = bq[y]
                otmena.append(y)
print(*otvet,sep='')
            ","0.0"
"4a5ca4da-8ce7-4613-b0d6-23c6ebb491ed","n=int(input())
m=list(map(int,input().split()))
x = n
c = 0
a=set(m)
b=[]
for i in range(999):
    b.append(0)
for f in range(n):
    for i in range(999):
        if m[f]==i+1:
            b[i]+=1
print(max(b),len(a))
","0.0"
"2a42d873-b1fe-4256-a488-91db4eaa8d9f","a = input()
b = input()

aq =list(map(int,a))
bq = list(map(int,b))

bq = sorted(bq)
bq = bq[::-1]
s=''
otvet = aq
otmena = []

for x in range(len(aq)):
    for y in range(len(bq)):
        #HIHIHIHIHIHIHIHIH
        if aq[x] < bq[y]:
            if y not in otmena:
                otvet[x] = bq[y]
                otmena.append(y)
print(*otvet,sep='')
            ","0.0"
"0718b9a2-e909-4d51-9f4a-a1de2c698eb1","s = [i for i in input()]
sm = sorted(s)
for i in range(len(s)):
    if s[i] != sm[i]:
        n = s.index(sm[i])
        s[n] = s[i]
        s[i] = sm[i]
        break
for i in s:
    print(i, end='')","0.0"
"f6186143-1fb6-411f-a770-fda693e2e9b8","e, k, p = map(int, input().split())

s = 0

s += e

if (((p+k)%3!=0)):
        s = -1
elif (k%3 == 0):
        s += k//3
        if (p%3==0):
            s+=p//3
        else:
            s+=p//3 + 1
else:
        if (3-(k%3) == 1):
            k += 1
            p =- 1
            s += (k//3)
            s += (p//3)
        elif(3-(k%3) == 2): 
            k+=2
            p -= 2
            s += (k//3)
            s += (p//3)
print(s)","0.0"
"4a5ca4da-8ce7-4613-b0d6-23c6ebb491ed","height = int(input())
inputLine = input()
quantitesRaw = inputLine.split("" "")
quantities = []
for i in range(height):
	quantities.append(int(quantitesRaw[i]))
	
counts = {}
for c in quantities:
	if c in counts:
		counts[c] += 1
	else:
		counts[c] = 1

firstRes = 0
for c in counts:
    firstRes = max(firstRes, counts[c])

secondRes = len(counts.keys())
print(str(firstRes) + "" "" + str(secondRes))","0.0"
"2a42d873-b1fe-4256-a488-91db4eaa8d9f","a = list(map(int, list(input())))
b = list(map(int, list(input())))
c = []
b.sort()
x = -1
for i in a:
    if i < b[x]:
        c.append(b[x])
        x -= 1
    else:
        c.append(i)
print(''.join(map(str, c)))","0.0"
"0718b9a2-e909-4d51-9f4a-a1de2c698eb1","def get_best_surname(surname):
    best_surname = surname
    n = len(surname)
    for i in range(n):
        for j in range(i + 1, n):
            new_surname = list(surname)
            new_surname[i], new_surname[j] = new_surname[j], new_surname[i]
            new_surname = ''.join(new_surname)
            
            if new_surname < best_surname:
                best_surname = new_surname

    return best_surname

def main():
    surname = input()
    new_surname = get_best_surname(surname)
    
    if new_surname == surname:
        print(surname)
    else:
        print(new_surname)

if __name__ == ""__main__"":
    main()","0.0"
"f6186143-1fb6-411f-a770-fda693e2e9b8","x, y, z = map(int, input().split())
if y%3>0 and (y%3+z)<3:
    print(-1)
else:
    s = x + ((y+z) // 3)
    if (y+z)%3 > 0 :
        s+=1
    print(s)
","0.0"
"15a679fe-9f02-44a5-8720-d22dbf7b05ce","i=int(input())
if i % 2 == 1:
    i += 1
print(i//2)","0.0"
"df2fe73c-bfa4-40e5-b77c-d2ad076197ca","n, k, s, = map(int, input().split()) 
o = list(map(int, input().split()))
x = sum(o)
y = max(o)
q = (((x + k - 1) // k) + s - 1) // s
w = (y + s - 1) // s
e = max(q, w)
ans = e
for i in range(e, e + 2):
    ans += 1
    a = 0
    b = 0
    k1 = k
    for j in range(n):
        a = b
        b = b + o[j]
        if b > i * s:
            b = b - a 
            a = 0
            k1 -= 1
    if k1 >= 0:
        break 
print(ans)
        
        ","0.0"
"b316f513-f142-45d3-a702-cc3208e6aa54","n, a, b = map(int, input().split())
if a >= n and b >= n:
    print(""YES"")
else:
    print(""NO"")","0.0"
"df2fe73c-bfa4-40e5-b77c-d2ad076197ca","import math

def can_finish_in_time(candies, k, s, max_time):
    time_per_participant = max_time * s
    current_sum = 0
    participants_used = 1  # Ð½Ð°ÑÐ¸Ð½Ð°ÐµÐ¼ Ñ Ð¿ÐµÑÐ²Ð¾Ð³Ð¾ ÑÑÐ°ÑÑÐ½Ð¸ÐºÐ°

    for candy in candies:
        current_sum += candy
        if current_sum > time_per_participant:
            # ÐÑÐ»Ð¸ ÑÐµÐºÑÑÐ¸Ð¹ ÑÑÐ°ÑÑÐ½Ð¸Ðº Ð½Ðµ ÑÐ¿ÑÐ°Ð²Ð»ÑÐµÑÑÑ Ñ ÑÑÐ¼Ð¼Ð¾Ð¹,
            # Ð½Ð°ÑÐ¸Ð½Ð°ÐµÐ¼ Ð½Ð¾Ð²Ð¾Ð³Ð¾ ÑÑÐ°ÑÑÐ½Ð¸ÐºÐ°
            participants_used += 1
            current_sum = candy  # ÑÐµÐºÑÑÐ¸Ð¹ ÑÑÐ°ÑÑÐ½Ð¸Ðº Ð±ÐµÑÐµÑ ÑÑÐ¾Ñ Ð¼ÐµÑÐ¾ÑÐµÐº
            if participants_used > k:
                return False

    return True

def min_time_to_eat_candies(n, k, s, candies):
    low = math.ceil(max(candies) / s)
    high = math.ceil(sum(candies) / s)

    while low < high:
        mid = (low + high) // 2
        if can_finish_in_time(candies, k, s, mid):
            high = mid  # Ð¿ÑÐ¾Ð±ÑÐµÐ¼ Ð¼ÐµÐ½ÑÑÐµÐµ Ð²ÑÐµÐ¼Ñ
        else:
            low = mid + 1  # ÑÐ²ÐµÐ»Ð¸ÑÐ¸Ð²Ð°ÐµÐ¼ Ð²ÑÐµÐ¼Ñ

    return low

# Ð§ÑÐµÐ½Ð¸Ðµ Ð²ÑÐ¾Ð´Ð½ÑÑ Ð´Ð°Ð½Ð½ÑÑ
n, k, s = map(int, input().split())
candies = list(map(int, input().split()))

# ÐÑÑÐ¸ÑÐ»ÐµÐ½Ð¸Ðµ Ð¼Ð¸Ð½Ð¸Ð¼Ð°Ð»ÑÐ½Ð¾Ð³Ð¾ Ð²ÑÐµÐ¼ÐµÐ½Ð¸
result = min_time_to_eat_candies(n, k, s, candies)

# ÐÑÐ²Ð¾Ð´ ÑÐµÐ·ÑÐ»ÑÑÐ°ÑÐ°
print(result)
","0.0"
"2a42d873-b1fe-4256-a488-91db4eaa8d9f","a = input()
b = input()
s = [int(i) for i in a]
k = [int(i) for i in b]
for i in range (0, len(s)):
    if s[i]<max(k):
        s[i]=max(k)
        k.remove(max(k))
number = int(''.join(map(str, s)))
print(number)
","0.0"
"2a42d873-b1fe-4256-a488-91db4eaa8d9f","def max(a, cards):
    b = list(a)
    ava = sorted(cards, reverse=True)
    index = 0
    for i in range(len(b)):
        if index < len(ava) and ava[index] > b[i]:
            b[i] = ava[index]
            index += 1  
    result = ''.join(b)
    print(result)
a = input().strip()
cards = input().strip()
max(a, cards)","0.0"
"0718b9a2-e909-4d51-9f4a-a1de2c698eb1","def get_best_surname(surname):
    best_surname = surname
    n = len(surname)


    min_index = n - 1

    for i in range(n - 2, -1, -1):

        if surname[i] > surname[min_index]:

            new_surname = list(surname)
            new_surname[i], new_surname[min_index] = new_surname[min_index], new_surname[i]
            new_surname = ''.join(new_surname)


            if new_surname < best_surname:
                best_surname = new_surname
        else:

            if surname[i] < surname[min_index]:
                min_index = i

    return best_surname

def main():
    surname = input()
    new_surname = get_best_surname(surname)
    
    print(new_surname)

if __name__ == ""__main__"":
    main()","0.0"
"df2fe73c-bfa4-40e5-b77c-d2ad076197ca","n, k, s, = map(int, input().split()) 
o = list(map(int, input().split()))
x = sum(o)
y = max(o)
q = (((x + k - 1) // k) + s - 1) // s
w = (y + s - 1) // s
e = max(q, w)
ans = e
for i in range(e, 2 * e):
    ans += 1
    a = 0
    b = 0
    k1 = k
    for j in range(n):
        a = b
        b = b + o[j]
        if b > i * s:
            b = b - a 
            a = 0
            k1 -= 1
    if k1 >= 0:
        break 
print(ans)
        ","0.0"
"df2fe73c-bfa4-40e5-b77c-d2ad076197ca","import math
n, k, p =map(int, input().split())
a = list(map(int, input().split()))
d=[]
e=math.ceil(len(a)/2)
for i in range(e):
    if i+1>=len(a):
        d.append(a[-1])
    elif i%2==1:
        _0=0
    else:
        f=a[i]+a[i+1]
        d.append(f)
d.sort
s=d[-1]
print(math.ceil(s/p))","0.0"
"f6186143-1fb6-411f-a770-fda693e2e9b8","x,y,z = map(int, input().split())
sum = 0
z1 = z
if y%3 != 0 :
    z1 -= 3 - y%3
    if z1 < 0:
        print(-1)
        quit()
if y % 3 != 0:
    y1 = 3 - y%3
    y += y1
    z -= y1
sum += y // 3
sum += x
if z % 3 == 0:
    sum += z//3
else:
    sum += z//3 +1

print(sum)
","0.0"
"2a42d873-b1fe-4256-a488-91db4eaa8d9f","inp = list(map(int, input()))
cards = list(map(int, input()))
for i in range(len(inp)):
    if i == 9: continue
    lst = [val for val in cards if val > inp[i]]
    if lst:
        mx = max(lst)
        inp[i] = mx
        del cards[cards.index(mx)]
print(''.join(map(str, inp)))","0.0"
"f6186143-1fb6-411f-a770-fda693e2e9b8","x, y, z = map(int, input().split())
if y % 3 != 0:
    if (y % 3) + z < 3:
        print(-1)
    else:
        m = x + y // 3 + (y % 3 + z) // 3
        if (y % 3 + z) % 3 != 0:
            print(m + 1)
        else:
            print(m)
else:
    m = x + y // 3 + (y % 3 + z) // 3
    if (y % 3 + z) % 3 != 0:
        print(m + 1)
    else:
        print(m)
","0.0"
"f6186143-1fb6-411f-a770-fda693e2e9b8","x,y,z=map(int,input().split())
v=x+(y+z)//3
if z==1 and y%3==1:
    print(-1)
else:
    if (y+z)%3==0:
        print(v)
    else:
        print(v+1)","0.0"
"f6186143-1fb6-411f-a770-fda693e2e9b8","x,y,z=map(int,input().split())
if z==1 and y%3==1:
    print(-1)
else:
    if (y+z)%3==0:
        print(x+(y+z)//3)
    else:
        print(x+(y+z)//3+1)
","0.0"
"2a42d873-b1fe-4256-a488-91db4eaa8d9f","a = input()
b = input()

aq =list(map(int,a))
bq = list(map(int,b))

bq = sorted(bq)
bq = bq[::-1]
s=''
otvet = aq
otmena = []

for x in range(len(aq)):
    for y in range(len(bq)):
        #HIHIHIHIHIHIHIHIH
        if aq[x] < bq[y]:
            if y not in otmena:
                otvet[x] = bq[y]
                otmena.append(y)
        
        
print(*otvet,sep='')
            ","0.0"
"4a5ca4da-8ce7-4613-b0d6-23c6ebb491ed","n, c, l = int(input()), list(map(int, input().split())), []
for i in range(len(c)):
   l.append(c.count(c[i]))
print(max(l), len(set(c)))  
","0.0"
"f6186143-1fb6-411f-a770-fda693e2e9b8","x,y,z=map(int,input().split())
n=x
y1=y%3
if y1 == 0:
    l = n + (y // 3)
    if z % 3 == 0:
        p = z // 3
        print(l + p)
    else:
        p = z // 3 + 1
        print(l + p)

elif (3 - y1) > z:
    print(-1)
    exit()
else:
    b = (y + (3 - y1)) // 3
    if (z - (3 - y1)) % 3 == 0:
        p = (z - (3 - y1)) // 3
        print(n + b + p)
    else:
        p = (z - (3 - y1)) // 3 + 1
        print(n + b + p)
","0.0"
"15a679fe-9f02-44a5-8720-d22dbf7b05ce","q=int(input())
print(q//2+q%2)","0.0"
"f6186143-1fb6-411f-a770-fda693e2e9b8","x, y, z = map(int, input().split())
s = x
ry = y % 3
if ry > 0:
    if z >= (3 - ry):
        s += 1
        z -= (3 - ry)
        y=y-ry
    else:
        print(""-1"")
        exit()
s += y // 3
s += z // 3
if z % 3 > 0:
    s += 1
print(s)
","0.0"
"f6186143-1fb6-411f-a770-fda693e2e9b8","a=input().split()
x=int(a[0])
y=int(a[1])
z=int(a[2])
k=1
u=y%3
sum=x+y//3
y=y//3
if u==2:
    if z<1:
        print(-1)
    else:
        z=z-1
        sum+=1
        if z % 3 != 0:
            sum=1+sum
        print(sum+z//3)
if u==1:
    if z<2:
        print(-1)
    else:
        z=z-2
        sum+=1
        if z % 3!=0:
            sum=1+sum
        print(sum + z // 3)
if u==0:
    if z % 3 != 0:
        sum = 1 + sum
    print(sum + z // 3)","0.0"
"4a5ca4da-8ce7-4613-b0d6-23c6ebb491ed","n=int(input())
mx=0
a=input()
h=a.split()
j=set()
for i in h:
    j.add(i)
for i in j:
    l=h.count(i)
    if l>mx:
        mx=l
print(mx,len(j))
","0.0"
"b316f513-f142-45d3-a702-cc3208e6aa54","n, a, b = map(int, input().split())
if a >= n and b >= n:
    print(""YES"")
else:
    print(""NO"")","0.0"
"4a5ca4da-8ce7-4613-b0d6-23c6ebb491ed","# Ð§ÑÐµÐ½Ð¸Ðµ Ð²ÑÐ¾Ð´Ð½ÑÑ Ð´Ð°Ð½Ð½ÑÑ
n = int(input()) # Ð¾Ð±ÑÐµÐµ ÐºÐ¾Ð»Ð¸ÑÐµÑÑÐ²Ð¾ Ð¼Ð¾Ð½ÐµÑ
coins = list(map(int, input().split())) # Ð½Ð¾Ð¼Ð¸Ð½Ð°Ð»Ñ Ð¼Ð¾Ð½ÐµÑ

# Ð¡Ð»Ð¾Ð²Ð°ÑÑ Ð´Ð»Ñ Ð¿Ð¾Ð´ÑÑÐµÑÐ° ÐºÐ¾Ð»Ð¸ÑÐµÑÑÐ²Ð° Ð¼Ð¾Ð½ÐµÑ Ð¿Ð¾ Ð½Ð¾Ð¼Ð¸Ð½Ð°Ð»Ð°Ð¼
coin_counts = {}

# ÐÐ¾Ð´ÑÑÐµÑ Ð½Ð¾Ð¼Ð¸Ð½Ð°Ð»Ð¾Ð²
for coin in coins:
    if coin in coin_counts:
        coin_counts[coin] += 1
    else:
        coin_counts[coin] = 1

# ÐÐ¿ÑÐµÐ´ÐµÐ»ÐµÐ½Ð¸Ðµ Ð²ÑÑÐ¾ÑÑ Ð½Ð°Ð¸Ð±Ð¾Ð»ÑÑÐµÐ¹ ÑÑÐ¾Ð¿ÐºÐ¸ Ð¸ ÐºÐ¾Ð»Ð¸ÑÐµÑÑÐ²Ð° ÑÑÐ¾Ð¿Ð¾Ðº
max_height = max(coin_counts.values()) # Ð½Ð°Ð¸Ð±Ð¾Ð»ÑÑÐ°Ñ Ð²ÑÑÐ¾ÑÐ°
total_stacks = len(coin_counts) # Ð¾Ð±ÑÐµÐµ ÐºÐ¾Ð»Ð¸ÑÐµÑÑÐ²Ð¾ ÑÑÐ¾Ð¿Ð¾Ðº

# ÐÑÐ²Ð¾Ð´ ÑÐµÐ·ÑÐ»ÑÑÐ°ÑÐ°
print(max_height, total_stacks)
","0.0"
"2a42d873-b1fe-4256-a488-91db4eaa8d9f","number = list(input())
cards = list(sorted(input(), reverse=True))
for card in cards:
    for i in range(len(number)):
        if card > number[i]:
            number[i] = card
            break
print(*number, sep='')
","0.0"
"49c03922-c57e-464a-8191-9ebef2615808","a, b, c = map(int, input().split())
a1 = c / a
b1 = c / b
print(int(a1) + int(b1) + 2)

","0.0"
"b316f513-f142-45d3-a702-cc3208e6aa54","n,a,b=map(int,input().split())

if a>=n:print(""YES"")
else:print(""NO"")","0.0"
"f6186143-1fb6-411f-a770-fda693e2e9b8","e, k, p = map(int, input().split())

s = 0

s += e

for g in range(k, 1000):
    if (g % 3 == 0):
        if (((p+k)<g)):
            s = -1
            break
    elif (k%3 == 0):
        s += k//3
        if (p%3==0):
            s+=p//3
            break
        else:
            s+=p//3 + 1
            break
    else:
        if (3-(k%3) == 1):
            k += 1
            p =- 1
            s += (k//3)
            s += (p//3)
            break
        elif(3-(k%3) == 2): 
            k+=2
            p -= 2
            s += (k//3)
            s += (p//3)
            break
    k+=1

print(s)

","0.0"
"cfed631e-c3d2-495b-96a0-5c89a5a8aee0","n=int(input())
b=[]
for i in range(n):
    a = [int(x) for x in input().split()]
    b.append(a)
c1=0
c2=0
for i in range(n):
    if b[i][0]==1:
        c1+=1
    if b[i][1] == 1:
        c2 += 1
if c1>(n//2):
    c1=n-c1
if c2>(n//2):
    c2=n-c2
print(c1+c2)","0.0"
"f6186143-1fb6-411f-a770-fda693e2e9b8","x, y, z = map(int, input().split())
def res(x, y, z):
    k = 0
    k += x
    if y % 3 == 0:
        k += y // 3
    else:
        k += y //3 + 1
        z -= (3 - y % 3)
    if z < 0:
        return -1
    if z % 3 == 0:
        k += z // 3
    else:
        k += z // 3 + 1
    return k

print(res(x, y, z))




","0.0"
"b316f513-f142-45d3-a702-cc3208e6aa54","n,a,b=map(int,input().split())

if (a>=n)and(b>=n):print(""YES"")
else:print(""NO"")","0.0"
"df2fe73c-bfa4-40e5-b77c-d2ad076197ca","n, k, s, = map(int, input().split()) 
o = list(map(int, input().split()))
x = sum(o)
y = max(o)
q = (((x + k - 1) // k) + s - 1) // s
w = (y + s - 1) // s
e = max(q, w)
ans = e - 1
for i in range(e, 2 * e):
    ans += 1
    a = 0
    b = 0
    k1 = k - 1
    for j in range(n):
        a = b
        b = b + o[j]
        if b > i * s:
            b = b - a 
            a = 0
            k1 -= 1
    if k1 >= 0:
        break 
print(ans)","0.0"
"2a42d873-b1fe-4256-a488-91db4eaa8d9f","a = input()
numbers = input()

numbers = sorted(numbers, reverse=True)

result = """"
i = 0
for digit in a:
    if i < len(numbers) and numbers[i] > digit:
        result += numbers[i]
        i += 1
    else:
        result += digit

print(int(result))
","0.0"
"0718b9a2-e909-4d51-9f4a-a1de2c698eb1","a=list(input())
for i in range(len(a)):
    m = min(a[i:], key=ord)
    if a[i] != m:
        ind = a.index(m)
        a[i], a[ind] = a[ind], a[i]
        print(*a, sep='')
        break
else:
    print(*a, sep='')","0.0"
"4d25e12d-091c-4350-a744-93b5301dbe02","n = int(input())
m = list(map(int,input().split()))

r = 0
c = 0

while len(m) != 0:
    if m[0] > m[-1]:
        r+=m[0]
        m.pop(0)
    else:
        r+=m[-1]
        m.pop(-1)
    
    if len(m) > 0: 
        if m[0] > m[-1]:
            c+=m[0]
            m.pop(0)
        else:
            c+=m[-1]
            m.pop(-1)

print(r,c)","0.0"
"df2fe73c-bfa4-40e5-b77c-d2ad076197ca","import math

def can_distribute(candies, k, s, max_time):
    current_time = 0
    required_members = 1  # ÐÐ°ÑÐ¸Ð½Ð°ÐµÐ¼ Ñ Ð¿ÐµÑÐ²Ð¾Ð³Ð¾ ÑÑÐ°ÑÑÐ½Ð¸ÐºÐ°

    for candy in candies:
        time_needed = math.ceil(candy / s)
        current_time += time_needed

        if current_time > max_time:
    
            required_members += 1
            current_time = time_needed  # ÐÐ¾Ð²ÑÐ¹ ÑÑÐ°ÑÑÐ½Ð¸Ðº Ð½Ð°ÑÐ¸Ð½Ð°ÐµÑ Ñ ÑÑÐ¾Ð³Ð¾ Ð¼ÐµÑÐ¾ÑÐºÐ°

            if required_members > k:
                return False

    return True

def min_time_to_eat(n, k, s, candies):
    left = 1
    right = sum(candies) // s + (1 if sum(candies) % s else 0)

    while left < right:
        mid = (left + right) // 2
        if can_distribute(candies, k, s, mid):
            right = mid
        else:
            left = mid + 1

    return left

n, k, s = map(int, input().split())
candies = list(map(int, input().split()))


result = min_time_to_eat(n, k, s, candies)
print(result)","0.0"
"cfed631e-c3d2-495b-96a0-5c89a5a8aee0","n=int(input())
sl0=0
sl1=0
sp0=0
sp1=0
t=0
for i in range(n):
    l, p=map(int,input().split())
    if l==0:
        sl0+=1
    else:
        sl1+=1
    if p==0:
        sp0+=1
    else:
        sp1+=1
if sl0>sl1:
    t+=sl1
else:
    t+=sl0
if sp0>sp1:
    t+=sp1
else:
    t+=sp0
print(t)","0.0"
"b316f513-f142-45d3-a702-cc3208e6aa54","n, a, b=map(int, input().split())
if n<=a and n<=b:
    print('YES')
else:
    print('NO')","0.0"
"b316f513-f142-45d3-a702-cc3208e6aa54","n, b, o = map(int, input().split())

if b-n < 0:
    print(""NO"")
    exit(0)

print(""YES"")","0.0"
"2a42d873-b1fe-4256-a488-91db4eaa8d9f","a = input()
b = input()
s = [int(i) for i in a]
k = [int(i) for i in b]
for i in range (0, len(s)):
    w = max(k)
    if s[i]<w:
        s[i]=w
        k.remove(w)
number = int(''.join(map(str, s)))
print(number)
","0.0"
"8c60181e-f560-4f27-a609-9ab45077ce53","n = int(input())
s = []
for i in range(n):
    s.append(list(map(int, input().split())))
ans = [1] * (n + 1)
for i in range(n):
    for j in range(n):
        if s[i][j] == 3:
            ans[i + 1], ans[j + 1] = 0, 0
        elif s[i][j] == 1:
            ans[i + 1] = 0
        elif s[i][j] == 2:
            ans[i] = 0
        s[i][j], s[j][i] = -1, -1
print(sum(ans[1:]))
print(*[i for i in range(1, n + 1) if ans[i] == 1])","0.0"
"df2fe73c-bfa4-40e5-b77c-d2ad076197ca","def min_time_to_eat_candies(n, k, s, candies):
    low, high = 0, sum(candies)
    answer = float('inf')
    while low <= high:
        mid = (low + high) // 2
        req_persons = 1
        current_load = 0
        for candy in candies:
            if current_load + candy > mid:
                req_persons += 1
                current_load = candy
            else:
                current_load += candy
        if req_persons <= k:
            answer = min(answer, mid)
            high = mid - 1
        else:
            low = mid + 1
    return (answer + s - 1) // s
n, k, s = map(int, input().split())
candies = list(map(int, input().split()))

print(min_time_to_eat_candies(n, k, s, candies))","0.0"
"df2fe73c-bfa4-40e5-b77c-d2ad076197ca","import math

def can_distribute(candies, k, s, max_time):
    current_time = 0
    required_members = 1  # Start with one member
    
    for candy in candies:
        time_needed = math.ceil(candy / s)
        current_time += time_needed
        
        if current_time > max_time:
            # If current member exceeds max_time, assign to the next member
            required_members += 1
            current_time = time_needed  # Start new member's time
            
            if required_members > k:  # If we need more members than available
                return False

    return True

def min_time_to_eat(n, k, s, candies):
    left = 1  # Minimum time (1 second)
    right = sum(candies) // s + (1 if sum(candies) % s > 0 else 0)  # Maximum time possible
    
    while left < right:
        mid = (left + right) // 2
        if can_distribute(candies, k, s, mid):
            right = mid  # Try for lesser time
        else:
            left = mid + 1  # Increase time

    return left

# Read input data
n, k, s = map(int, input().split())
candies = list(map(int, input().split()))

# Calculate the minimum time
result = min_time_to_eat(n, k, s, candies)
print(result)","0.0"
"8c60181e-f560-4f27-a609-9ab45077ce53","n = int(input())
m = [list(map(int, input().split())) for i in range(n)]
f = []
for i in range(n):
    if m[i].count(1) == 0 and m[i].count(3) == 0:
        f.append(i)
print(len(f))
for i in f:
    print(i+1, end=' ')","0.0"
"2a42d873-b1fe-4256-a488-91db4eaa8d9f","a = input()
num = input()
num = sorted(num, reverse=True)
result = """"
i = 0
for digit in a:
    if i < len(num) and num[i] > digit:
        result += num[i]
        i += 1
    else:
        result += digit
print(int(result))
","0.0"
"b316f513-f142-45d3-a702-cc3208e6aa54","n, a, b = map ( int, input().split() )
if n>a:
    print(""NO"")
else:
    print(""YES"")","0.0"
"b316f513-f142-45d3-a702-cc3208e6aa54","n, a, b = map(int, input().split())
if n<=b and n<=a:
    print('YES')
else:
    print('NO')","0.0"
"b316f513-f142-45d3-a702-cc3208e6aa54","n,a,b = map(int,input().split())

if n <= a and n <= b:
    print('YES')
else:
    print('NO')","0.0"
"4a5ca4da-8ce7-4613-b0d6-23c6ebb491ed","input()
l = list(map(int, input().split()))
dct = {i: l.count(i) for i in l}
print(' '.join(map(str, [max(dct.values()), len(dct)])))","0.0"
"b316f513-f142-45d3-a702-cc3208e6aa54","a,b,c=map(int,input().split())
if a<=b and a<=c: print(""YES"")
else: print(""NO"")
 ","0.0"
"cfed631e-c3d2-495b-96a0-5c89a5a8aee0","n = int(input())
s = []
t = 0
v_1 = 0
v_2 = 0
v_3 = 0
v_4 = 0
for i in range(n):
    a, b = map(int, input().split())
    s.append(a)
    s.append(b)


for i in range(len(s)):
    if s[i] == 1:
        s[i] = 0
        v_1 += 1
t = v_1


for i in range(len(s)):
    if s[i] == 0:
        s[i] = 1
        v_2 += 1
if v_2 <= t:
    t = v_2


for i in range(0, len(s), 2):
    if s[i] == 1:
        s[i] = 0
        v_3 += 1

for i in range(1, len(s)+1, 2):
    if s[i] == 0:
        s[i] = 1
        v_3 += 1
if v_3 <= t:
    t = v_3


for i in range(0, len(s), 2):
    if s[i] == 0:
        s[i] = 1
        v_4 += 1

for i in range(1, len(s)+1, 2):
    if s[i] == 1:
        s[i] = 0
        v_4 += 1
if v_4 <= t:
    t = v_4

print(t)","0.0"
"2a42d873-b1fe-4256-a488-91db4eaa8d9f","z=input()
w=input()
a=[]
q=[]
for i in z:
    q.append(int(i))
for i in w:
    a.append(int(i))
a.sort()
for i in range(len(q)):
    if q[i]<a[-1]:
        q[i]=a[-1]
        a.pop(-1)
    if len(a)==0:
        break
for i in q:
    print(i,end='')","0.0"
"cfed631e-c3d2-495b-96a0-5c89a5a8aee0","n = int(input())
time = 0
chastchet = 0
chastnechet = 0
beb = []
chet = []
nechet = []
for i in range(n):
    b, c = map(int, input().split())    
    beb.append(b)
    beb.append(c)
for g in range(len(beb)):
    if g % 2 != 0:
        nechet.append(beb[g])
    else:
        chet.append(beb[g])
if chet.count(0) > chet.count(1):
    chastchet = 0
else:
    chaschet = 1
if nechet.count(0) > nechet.count(1):
    chastnechet = 0
else: chastnechet = 1
for i in range(len(chet)):
    if chet[i] != chastchet:
        chet[i] = chastchet
        time += 1
    else:
        continue
for i in range(len(nechet)):
    if nechet[i] != chastnechet:
        nechet[i] = chastnechet
        time += 1
    else:
        continue
print(time)
","0.0"
"49c03922-c57e-464a-8191-9ebef2615808","a, b, m = map(int, input().split())
print(2 + m // a + m // b)","0.0"
"4a5ca4da-8ce7-4613-b0d6-23c6ebb491ed","n=int(input())
a=list(map(int,input().split()))
d={}
for i in range(len(a)):
    if a[i] not in d.keys():
        d[a[i]]=1
    else:
        d[a[i]]+=1
c=-999999999999999
for i in d.keys():
    if c<d[i]:
        x=d[i]
y=len(d)
print(x,y)","0.0"
"b316f513-f142-45d3-a702-cc3208e6aa54","x,y,z = map(int,input().split())
if min(y, z) >= x:
    print('YES')
else:
    print('NO')","0.0"
"2a42d873-b1fe-4256-a488-91db4eaa8d9f","a = input()
b = input()
s = [int(i) for i in a]
k = [int(i) for i in b]
for i in range (0, len(s)):
    w = max(k)
    if s[i]<w:
        s[i]=w
        k.remove(w)
number = int(''.join(map(str, s)))
print(number)
","0.0"
"f6186143-1fb6-411f-a770-fda693e2e9b8","q,w,e=map(int,input().split())
a=q
a+=w//3
w=w%3
if  w+e>=3 or w==0:
    s=w+e
    if s%3==0:
        a+=s//3
    else:
        a+=1+s//3
    print(a)
else:
    print(-1)","0.0"
"b316f513-f142-45d3-a702-cc3208e6aa54","n, a, b = map(int, input().split())
if a >= n:
    print(""YES"")
else:
    print(""NO"")","0.0"
"4a5ca4da-8ce7-4613-b0d6-23c6ebb491ed","def main():
    n = int(input().strip())
    coins = list(map(int, input().strip().split()))
    coin_count = {}

    for coin in coins:
        if coin in coin_count:
            coin_count[coin] += 1
        else:
            coin_count[coin] = 1
    max_height = max(coin_count.values())
    total_stacks = len(coin_count)
    print(max_height, total_stacks)

if __name__ == ""__main__"":
    main()
","0.0"
"2a42d873-b1fe-4256-a488-91db4eaa8d9f","a = input()
b = input()
s = [int(i) for i in a]
k = [int(i) for i in b]
for i in range (0, len(s)):
    w = max(k)
    if s[i]<w:
        s[i]=w
        k.remove(w)
    if len(k)==0:
        break
number = int(''.join(map(str, s)))
print(number)
","0.0"
"4a5ca4da-8ce7-4613-b0d6-23c6ebb491ed","n=int(input())
a=list(map(int,input().split()))
d={}
for i in range(len(a)):
    if a[i] not in d.keys():
        d[a[i]]=1
    else:
        d[a[i]]+=1
x=-999999999999999
for i in d.keys():
    if x<d[i]:
        x=d[i]
y=len(d)
print(x,y)","0.0"
"2a42d873-b1fe-4256-a488-91db4eaa8d9f","
m = input()
n = input()
d = []
b = []
r = ''

for i in range(len(n)):
    d.append(n[i])

for i in range(len(m)):
    b.append(m[i])

for i in range(len(b)):
    if max(b[i],max(d)) == max(d) and b[i] != max(d):
        b[i] = max(b[i],max(d))
        d.remove(max(d))

for i in range(len(b)):
    r+= b[i]

print(r)","0.0"
"2a42d873-b1fe-4256-a488-91db4eaa8d9f","a = input()
b = input()
redA = 0
redB = 0
B = []
for i in range(len(b)):
    B.append(b[i])
A = []
for i in range(len(a)):
    A.append(a[i])
B.sort()
B2 = []
for i in range(len(B)):
    B2.append(B[-(i + 1)])
B = B2
while redA < len(a) and redB < len(b):
    if A[redA] < B[redB]:
        A[redA] = B[redB]
        redA += 1
        redB += 1
    else:
        redA += 1
a = ''
for i in range(len(A)):
    a += A[i]
print(a)
","0.0"
"15a679fe-9f02-44a5-8720-d22dbf7b05ce","n=int(input())
if n%2==0:
    print(n//2)
else:
    print((n+1)//2)
","0.0"
"df2fe73c-bfa4-40e5-b77c-d2ad076197ca","import math
n, k, s = map(int, input().strip().split())
candies = list(map(int, input().strip().split()))
def can_distribute(max_time):
    current_sum = 0
    required_people = 1
    for candy in candies:
        time_needed = math.ceil(candy / s)
        if current_sum + time_needed > max_time:
            required_people += 1
            current_sum = time_needed
            if required_people > k:
                return False
        else:
            current_sum += time_needed
    return True
low = max(candies) // s
high = sum(candies) // s + (1 if sum(candies) % s != 0 else 0)
while low < high:
    mid = (low + high) // 2
    if can_distribute(mid):
        high = mid
    else:
        low = mid + 1
print(low)","0.0"
"2a42d873-b1fe-4256-a488-91db4eaa8d9f","inp = list(map(int, input()))
cards = [val for val in map(int, input()) if val]
for i in range(len(inp)):
    if i == 9: continue
    lst = [val for val in cards if val > inp[i]]
    if lst:
        mx = max(lst)
        inp[i] = mx
        del cards[cards.index(mx)]
print(''.join(map(str, inp)))","0.0"
"2a42d873-b1fe-4256-a488-91db4eaa8d9f","a = list(input())
d = len(a)
b = list(input())
b.sort()
for i in range(d):
    if int(a[i]) < int(b[-1]):
        a = a[:i] + [b[-1]] + a[(i+1):]
        b.remove(b[-1])
    if b == []:
        break
print(*a,sep='')","0.0"
"8c60181e-f560-4f27-a609-9ab45077ce53","n = int(input())
s = [list(map(int, input().split())) for i in range(n)]
ans = [1] * (n + 1)
for i in range(n):
    for j in range(n):
        if s[i][j] == 3:
            ans[i + 1], ans[j + 1] = 0, 0
        elif s[i][j] == 1:
            ans[i + 1] = 0
        elif s[i][j] == 2:
            ans[j + 1] = 0
        s[i][j], s[j][i] = -1, -1
print(sum(ans[1:]))
print(*[i for i in range(1, n + 1) if ans[i] == 1])","0.0"
"b316f513-f142-45d3-a702-cc3208e6aa54","n,a,b = map(int,input().split())
if b<a:
    if b >= n:
        print('YES')
    else:
        print('NO')
elif b>=a:
    if a>=n:
        print('YES')
    else: print('NO')
    
","0.0"
"4a5ca4da-8ce7-4613-b0d6-23c6ebb491ed","def stack_coins():
    # Ð§Ð¸ÑÐ°ÐµÐ¼ Ð¾Ð±ÑÐµÐµ ÐºÐ¾Ð»Ð¸ÑÐµÑÑÐ²Ð¾ Ð¼Ð¾Ð½ÐµÑ
    n = int(input())
    # Ð§Ð¸ÑÐ°ÐµÐ¼ Ð½Ð¾Ð¼Ð¸Ð½Ð°Ð»Ñ Ð¼Ð¾Ð½ÐµÑ
    denominations = list(map(int, input().split()))

    # Ð¡Ð¾Ð·Ð´Ð°Ð´Ð¸Ð¼ ÑÐ»Ð¾Ð²Ð°ÑÑ Ð´Ð»Ñ Ð¿Ð¾Ð´ÑÑÐµÑÐ° Ð¼Ð¾Ð½ÐµÑ Ð¿Ð¾ Ð½Ð¾Ð¼Ð¸Ð½Ð°Ð»Ð°Ð¼
    stacks = {}

    # ÐÐ¾Ð´ÑÑÐ¸ÑÑÐ²Ð°ÐµÐ¼ Ð¼Ð¾Ð½ÐµÑÑ Ð¿Ð¾ Ð½Ð¾Ð¼Ð¸Ð½Ð°Ð»Ð°Ð¼
    for coin in denominations:
        if coin in stacks:
            stacks[coin] += 1
        else:
            stacks[coin] = 1

    # ÐÑÑÐ¾ÑÐ° Ð½Ð°Ð¸Ð±Ð¾Ð»ÑÑÐµÐ¹ ÑÑÐ¾Ð¿ÐºÐ¸
    max_height = max(stacks.values())
    # ÐÐ±ÑÐµÐµ ÐºÐ¾Ð»Ð¸ÑÐµÑÑÐ²Ð¾ ÑÑÐ¾Ð¿Ð¾Ðº
    total_stacks = len(stacks)

    # ÐÑÐ²Ð¾Ð´Ð¸Ð¼ ÑÐµÐ·ÑÐ»ÑÑÐ°Ñ
    print(max_height, total_stacks)

# ÐÐ°Ð¿ÑÑÐºÐ°ÐµÐ¼ ÑÑÐ½ÐºÑÐ¸Ñ
stack_coins()","0.0"
"4a5ca4da-8ce7-4613-b0d6-23c6ebb491ed","n=int(input())
m=list(map(int,input().split()))
s=set(m)
k=0
for i in s:
    k=max(k,m.count(i))
print(k,len(s))
","0.0"
"4a5ca4da-8ce7-4613-b0d6-23c6ebb491ed","n=int(input())
m=list(map(int,input().split()))
s=set(m)
k=0
for i in s:
    k=max(k,m.count(i))
print(k,len(s))","0.0"
"4a5ca4da-8ce7-4613-b0d6-23c6ebb491ed","n=int(input())
sp=sorted([i for i in map(int,input().split())])
st=set()
p = [0]*50
for i in sp:
    st.add(i)
for el in sp:
    p[el-1] +=1


d = 1
k=len(st)
v=0
print(max(p),k)","0.0"
"4a5ca4da-8ce7-4613-b0d6-23c6ebb491ed","def a(n, b):
    c = {}
    for z in b:
        if z in c:
            c[z] += 1
        else:
            c[z] = 1
    d = max(c.values())
    e = len(c)
    return d, e
n = int(input())
b = list(map(int, input().split()))
d, e = a(n, b)
print(d, e)","0.0"
"2173e6e8-cca6-47c7-8ef6-ea93d3e736f4","n = int(input())
l = list(map(int, input().split()))
l.sort()
l.insert(0, float('-inf'))
l.insert(n+1, float('inf'))
s = 0
used = [0 for _ in range(n+2)]
for i in range(1, n+1):
    if used[i] == 0:
        if l[i] - l[i-1] < l[i+1] - l[i]:
            used[i-1] = 1
            s += l[i] - l[i-1]
        else:
            used[i + 1] = 1
            s += l[i+1] - l[i]
        used[i] = 1
print(s)
","0.0"
"4a5ca4da-8ce7-4613-b0d6-23c6ebb491ed","n=int(input())
sp=sorted([i for i in map(int,input().split())])
st=set()
p = [0]*100
for i in sp:
    st.add(i)
for el in sp:
    p[el-1] +=1


d = 1
k=len(st)
v=0
print(max(p),k)","0.0"
"4a5ca4da-8ce7-4613-b0d6-23c6ebb491ed","def if_in_coins(coin, coins):
    for i in range(len(coins)):
        if coin == coins[i][0]:
            return True
    return False

if __name__ == '__main__':
    n = int(input())

    denominations = list(map(int, input().split()))

    coins = []

    for coin in denominations:
        if not if_in_coins(coin, coins):
            coins.append([coin, denominations.count(coin)])

    maximum_height = 0

    for coin in coins:
        if coin[1] > maximum_height:
            maximum_height = coin[1]

    print(maximum_height, len(coins))","0.0"
"4d25e12d-091c-4350-a744-93b5301dbe02","n = int(input())
a = list(map(int, input().split()))
s1, s2 = 0, 0
for i in range(n):
    player = 1-i%2
    if a[0] > a[-1]:
        mx_n = 0
    else:
        mx_n = len(a)-1
    if player == 0:
        s1 += a.pop(mx_n)
    else:
        s2 += a.pop(mx_n)
print(s2, s1)
","0.0"
"2a42d873-b1fe-4256-a488-91db4eaa8d9f","def maximize_number():

    a = input().strip()
  
    available_digits = list(input().strip())

 
    available_digits.sort(reverse=True)

   
    a_list = list(a)

    index = 0
    m = len(available_digits)

  
    for i in range(len(a_list)):

        if index >= m:
            break
        

        if available_digits[index] > a_list[i]:
            a_list[i] = available_digits[index]
            index += 1  


    result = ''.join(a_list)
    print(result)


maximize_number()","0.0"
"4a5ca4da-8ce7-4613-b0d6-23c6ebb491ed","i = int(input())
b = input().split()
print(b.count(max(set(b), key=b.count)), len(b))","0.0"
"2a42d873-b1fe-4256-a488-91db4eaa8d9f","a=input()

c=input()

s=list(map(int,a))

b=sorted(list(map(int,c)), reverse=True)

f=len(b)

l=0

for i in range(len(s)):

    if l<f:

        if b[l]>s[i]:

            s[i]=b[l]

            l+=1

    else:

        break

for i in  s:

    print(i, end='')
 ","0.0"
"4a5ca4da-8ce7-4613-b0d6-23c6ebb491ed","n = int(input())
noms = list(map(int, input().split()))
cs = {}
for nom in noms:
    cs[nom] = cs.get(nom, 0) + 1
mh = 0
for nom in cs:
    if cs[nom] > mh:
        mh = cs[nom]
print(mh, len(cs))
","0.0"
"4a5ca4da-8ce7-4613-b0d6-23c6ebb491ed","i = int(input())
b = input().split()
print(b.count(max(set(b), key=b.count)), len(set(b)))","0.0"
"2173e6e8-cca6-47c7-8ef6-ea93d3e736f4","n = int(input())
l = list(map(int, input().split()))
l.sort()
l.insert(0, float('inf'))
l.insert(n+1, float('inf'))
s = 0
used = [0 for _ in range(n+2)]
for i in range(1, n+1):
    if used[i] == 0:
        if abs(l[i] - l[i-1]) < abs(l[i+1] - l[i]):
            used[i-1] = 1
            s += abs(l[i] - l[i-1])
        else:
            used[i + 1] = 1
            s += abs(l[i+1] - l[i])
        used[i] = 1
print(s)
","0.0"
"8c60181e-f560-4f27-a609-9ab45077ce53","n = int(input())
sp = [[0]*n for i in range(n)]
for i in range(n):
    sp[i] = list(map(int, input().split()))
kol = 0
f = []
for i in range(len(sp)):
    rer = True
    for j in range(n):
        if sp[i][j] == 1 or sp[i][j] == 3:
            rer = False
            break
    if rer:
        f.append(i+1)
        kol+=1
if kol != 0:
    print(kol)
    print(*f)
else:
    print(0)
  
                   
    
","0.0"
"2a42d873-b1fe-4256-a488-91db4eaa8d9f","a = input()
b = input()
s = [int(i) for i in a]
k = [int(i) for i in b]
k.sort(reverse=True)
for i in range (0, len(s)):
    if s[i]<k[0]:
        s[i]=k.pop(0)
number = int(''.join(map(str, s)))
print(number)
","0.0"
"4d25e12d-091c-4350-a744-93b5301dbe02","n=int(input())
a=list(map(int,input().split()))
i=0
si=0
sm=0
while a!=[]:
    if a[0]>a[-1]:
        if i==0:
            si+=a[0]
        else:
            sm+=a[0]
        a.pop(0)
    else:
        if i==0:
            si+=a[-1]
        else:
            sm+=a[-1]
        a.pop(-1)
    if i==1:
        i=0
    else:
        i+=1
print(si, sm)","0.0"
"8c60181e-f560-4f27-a609-9ab45077ce53","n = int(input())
s = []
for i in range(n):
    s1 = list(map(int,input().split()))
    s.append(s1)
nomera = [0] * n
for j in range(n):
    for i in range(n):
        if s[j][i] == 0:
            nomera[j] += 1
            nomera[i] += 1
        elif s[j][i] == 1:
            nomera[i] += 1
        elif s[j][i] == 2:
            nomera[j] += 1
m = max(nomera)
if m == (n-1)+(n-1):
    print(nomera.count((n-1)+(n-1)))
    for i in range(len(nomera)):
        if nomera[i] == (n-1)+(n-1):
            print(i+1, end=' ')
else:
    print(0)","0.0"
"2a42d873-b1fe-4256-a488-91db4eaa8d9f","a = input()
b = input()
s = [int(i) for i in a]
k = [int(i) for i in b]
k.sort(reverse=True)
for i in range (0, len(s)):
    if s[i]<k[0]:
        s[i]=k.pop(0)
    if len(k)==0:
        break
number = int(''.join(map(str, s)))
print(number)
","0.0"
"b316f513-f142-45d3-a702-cc3208e6aa54","n, a, b = map ( int, input().split() )
if n<=a and n<=b:
    print(""YES"")
else:
    print(""NO"")","0.0"
"cfed631e-c3d2-495b-96a0-5c89a5a8aee0","n = int(input())
s = []
v_1 = 0
v_2 = 0
v_3 = 0
v_4 = 0
for i in range(n):
    a, b = map(int, input().split())
    s.append(a)
    s.append(b)


for i in range(len(s)):
    if s[i] == 1:
        v_1 += 1


for i in range(len(s)):
    if s[i] == 0:
        v_2 += 1


for i in range(0, len(s), 2):
    if s[i] == 1:
        v_3 += 1

for i in range(1, len(s)+1, 2):
    if s[i] == 0:
        v_3 += 1


for i in range(0, len(s), 2):
    if s[i] == 0:
        v_4 += 1

for i in range(1, len(s)+1, 2):
    if s[i] == 1:
        v_4 += 1


t = min(v_1, v_2, v_3, v_4)

print(t)","0.0"
"b316f513-f142-45d3-a702-cc3208e6aa54","a,s,d=map(int,input().split())
if a>s:
    print('NO')
else:
    if s>d and a!=d:
        print('NO')
    else:
        print('YES')","0.0"
"b316f513-f142-45d3-a702-cc3208e6aa54","def can_serve_all_customers(n, a, b):
    if a >= n and b >= n:
        return ""YES""
    else:
        return ""NO""

# Ð§ÑÐµÐ½Ð¸Ðµ Ð²ÑÐ¾Ð´Ð½ÑÑ Ð´Ð°Ð½Ð½ÑÑ
n, a, b = map(int, input().split())

# ÐÑÐ²Ð¾Ð´ ÑÐµÐ·ÑÐ»ÑÑÐ°ÑÐ°
print(can_serve_all_customers(n, a, b))","0.0"
"b316f513-f142-45d3-a702-cc3208e6aa54","a,s,d=map(int,input().split())
if a>s:
    print('NO')
else:
    if s>=d and a!=d:
        print('NO')
    else:
        print('YES')","0.0"
"b316f513-f142-45d3-a702-cc3208e6aa54","def serve_customers(n, a, b):
    if n <= min(a, b) or (a + b) < n:
        return ""NO""
    else:
        return ""YES""

n, a, b = 5, 3, 2
result = serve_customers(n, a, b)
print(result)","0.0"
"0718b9a2-e909-4d51-9f4a-a1de2c698eb1","def maximize_surname(surname):
    surname_list = list(surname)
    n = len(surname_list)
    
    for i in range(n):
        for j in range(i + 1, n):
            surname_list[i], surname_list[j] = surname_list[j], surname_list[i]
            new_surname = ''.join(surname_list)
            if new_surname < surname:
                surname = new_surname
            surname_list[i], surname_list[j] = surname_list[j], surname_list[i]
    
    return surname

surname = input().strip()
result = maximize_surname(surname)
print(result)
","0.0"
"8c60181e-f560-4f27-a609-9ab45077ce53","n = int(input())
s = []
for i in range(n):
    s1 = list(map(int,input().split()))
    s.append(s1)
nomera = [0] * n
for j in range(n):
    for i in range(j+1,n):
        if s[j][i] == 0:
            nomera[j] += 1
            nomera[i] += 1
        elif s[j][i] == 1:
            nomera[i] += 1
        elif s[j][i] == 2:
            nomera[j] += 1
m = max(nomera)
if m == (n-1):
    print(nomera.count((n-1)))
    for i in range(len(nomera)):
        if nomera[i] == (n-1):
            print(i+1, end=' ')
else:
    print(0)","0.0"
"f6186143-1fb6-411f-a770-fda693e2e9b8","x,y,z=map(int,input().split())
if (y+z)%3==0:
    print((y+z)//3+x)
elif (y%3==2 and z==0) or (y%3==1 and z<2):
    print(-1)
else:
    print((y+z)//3+x+1)","0.0"
"4a5ca4da-8ce7-4613-b0d6-23c6ebb491ed","n = int(input())
s = input()
s = s.split(' ')
d = {}
for i in s:
    if i not in d: d[i] = 1
    else: d[i] += 1
maximum = 0
for val in d.values():
    if val > maximum: maximum = val
print(maximum, len(d))","0.0"
"b316f513-f142-45d3-a702-cc3208e6aa54","n,a,b=map(int,input().split())
if n<=a and n<=b:
    print(""YES"")
else:
    print(""NO"")","0.0"
"2a42d873-b1fe-4256-a488-91db4eaa8d9f","a = input()
b = input()
s = [int(i) for i in a]
k = [int(i) for i in b]
k.sort()
k=k[::-1]
for i in range (0, len(s)):
    if s[i]<k[0]:
        s[i]=k.pop(0)
    if len(k)==0 or k[0]==0:
        break
number = int(''.join(map(str, s)))
print(number)
","0.0"
"b316f513-f142-45d3-a702-cc3208e6aa54","a, b, c = map(int, input().split())

if a<=b:
    print('YES')

else:
    print('NO')","0.0"
"2a42d873-b1fe-4256-a488-91db4eaa8d9f","a = input()
b = input()
s = [int(i) for i in a]
k = [int(i) for i in b]
k.sort()
k=k[::-1]
for i in range (0, len(s)):
    if s[i]<k[0]:
        s[i]=k.pop(0)
    if len(k)==0 or k[0]==0:
        break
number = int(''.join(map(str, s)))
print(number)
","0.0"
"8c60181e-f560-4f27-a609-9ab45077ce53","n= int(input())
f = []
for i in range(n):
    new = input().split()
    for j in range(len(new)):
        if new[j] == '3' or new[j] == '1':
            break
    else:
        f.append(i+1)
print(len(f))
print(*f)
","0.0"
"4d25e12d-091c-4350-a744-93b5301dbe02","def a(n, b):
    c1 = 0
    c2 = 0
    left = 0
    right = n - 1
    for d in range(n):
        if d % 2 == 0:  
            if b[left] > b[right]:
                c1 += b[left]
                left += 1
            else:
                c1 += b[right]
                right -= 1
        else:  
            if b[left] > b[right]:
                c2 += b[left]
                left += 1
            else:
                c2 += b[right]
                right -= 1

    return c1, c2
n = int(input())
b = list(map(int, input().split()))
c1, c2 = a(n, b)
print(c1, c2)","0.0"
"49c03922-c57e-464a-8191-9ebef2615808","n, a, b = map(int, input().split())
s = 2
s+= b//a
s+=b//n
print(s)","0.0"
"15a679fe-9f02-44a5-8720-d22dbf7b05ce","import math

def max_occupied_spots(n):
    return math.ceil(n / 2)

n = int(input())
print(max_occupied_spots(n))","0.0"
"0718b9a2-e909-4d51-9f4a-a1de2c698eb1","a=list(input())
p1=0
p_min=-1
mn=""{""
while p1<len(a):
    for i in range(p1,len(a)):
        if a[i]<mn:
            p_min=i
            mn=a[i]
    if a[p1]!=mn:
        a[p1],a[p_min]=a[p_min],a[p1]
        break
    mn=""{""
    p1+=1
print("""".join(a))
","0.0"
"b316f513-f142-45d3-a702-cc3208e6aa54","a,b,c=map(int,input().split())
if a<=b and c>=a:
    print('YES')
else:
    print('NO')","0.0"
"49c03922-c57e-464a-8191-9ebef2615808","n = list(map(int, input().split()))
k = n[2] - abs(n[0] - n[1])
print(2 + k // n[0] + k // n[1])","0.0"
"2a42d873-b1fe-4256-a488-91db4eaa8d9f","a = input()
b = input()
s = [int(i) for i in a]
k = [int(i) for i in b]
k.sort()
k=k[::-1]
for i in range (0, len(s)):
    if s[i]<k[0]:
        s[i]=k[0]
        del k[0]
    if len(k)==0 or k[0]==0:
        break
number = int(''.join(map(str, s)))
print(number)
","0.0"
"b316f513-f142-45d3-a702-cc3208e6aa54","def main():
    n, a, b = map(int, input().strip().split())
    if a >= n and b >= n:
        print(""YES"")
    else:
        print(""NO"")

if __name__ == ""__main__"":
    main()
","0.0"
"f6186143-1fb6-411f-a770-fda693e2e9b8","def min_robotaxi(x, y, z):
    cars = x

    if y % 3 != 0:
        if z >= (3 - y % 3):  
            cars += y // 3 + 1
            z -= (3 - y % 3)  
        else:
            return -1  
    else:
        cars += y // 3

    cars += z // 3
    if z % 3 != 0:
        cars += 1

    return cars

x, y, z = map(int, input().split())

print(min_robotaxi(x, y, z))","0.0"
"4d25e12d-091c-4350-a744-93b5301dbe02","n=int(input())
on=0
ya=0
a=list(map(int,input().split()))
for i in range(len(a)-2):
    if a[0]>a[1] and a[0]>a[-1]:
        if i%2==0:
            on+=a[0]
        else:
            ya+=a[0]
        a.pop(0)
    else:
        if i%2==0:
            on+=a[-1]
        else:
            ya+=a[-1]
        a.pop(-1)
if n%2==1:
    ya+=max(a)
    on+=min(a)
else:
    on+=max(a)
    ya+=min(a)
print(on,ya)
","0.0"
"b316f513-f142-45d3-a702-cc3208e6aa54","a, b, c = map(int, input().split())

if a<=b and (b<=c or c>=a):
    print('YES')

else:
    print('NO')","0.0"
"4d25e12d-091c-4350-a744-93b5301dbe02","def number_game(n, numbers):
    my_sum = 0 
    your_sum = 0  

  
    left = 0
    right = n - 1
    
    turn = 0 
    
    while left <= right:
        if turn == 0:  
            if numbers[left] > numbers[right]:
                my_sum += numbers[left]
                left += 1
            else:
                my_sum += numbers[right]
                right -= 1
        else:  
            if numbers[left] > numbers[right]:
                your_sum += numbers[left]
                left += 1
            else:
                your_sum += numbers[right]
                right -= 1
            
        turn = 1 - turn  

    return (my_sum, your_sum)



n = int(input())  
numbers = list(map(int, input().split())) 

result = number_game(n, numbers)
print(result[0], result[1])","0.0"
"f6186143-1fb6-411f-a770-fda693e2e9b8","x, y, z = map(int, input().split())
k = 0
k += x
if y % 3 == 0:
    k += y // 3
    k += (z+ 3 - 1) // 3
    print(k)
elif (y % 3 + z) >= 3:
    k += y // 3
    k += 1
    k += ((z-3+y%3) + 3 - 1) // 3
    print(k)
else:
    print(-1)
","0.0"
"15a679fe-9f02-44a5-8720-d22dbf7b05ce","def max_occupied_spots(n):
    return (n + 1) // 2

n = int(input())
print(max_occupied_spots(n))
","0.0"
"cfed631e-c3d2-495b-96a0-5c89a5a8aee0","def min_time_to_uniform_bits(n, bit_pairs):
    left_0 = 0 
    left_1 = 0  
    right_0 = 0 
    right_1 = 0 

    for left, right in bit_pairs:
        if left == 0:
            left_0 += 1
        else:
            left_1 += 1

        if right == 0:
            right_0 += 1
        else:
            right_1 += 1

    changes_for_left = min(left_0, left_1)
    changes_for_right = min(right_0, right_1)

    return changes_for_left + changes_for_right

n = int(input())
bit_pairs = [tuple(map(int, input().split())) for _ in range(n)]

print(min_time_to_uniform_bits(n, bit_pairs))
","0.0"
"2a42d873-b1fe-4256-a488-91db4eaa8d9f","a = input()
card = sorted(input(), reverse=True)
res = """"
index = 0
for dig_a in a:
    if index < len(card) and card[index] > dig_a:
        res += card[index]
        index += 1
    else:
        res += dig_a
print(res)
","0.0"
"4a5ca4da-8ce7-4613-b0d6-23c6ebb491ed","def main():
    n = int(input())
    denominations = list(map(int, input().split()))

    
    stacks = {}

    for denom in denominations:
        if denom in stacks:
            stacks[denom] += 1
        else:
            stacks[denom] = 1

    
    max_height = max(stacks.values())
    total_stacks = len(stacks)

    print(max_height, total_stacks)

if __name__ == ""__main__"":
    main()","0.0"
"2a42d873-b1fe-4256-a488-91db4eaa8d9f","q=input()
w=list(input())
w.sort()
for i in range(len(q)):
    if q[i]<w[-1]:
        q=q[:i]+w[-1]+q[i+1:]
        w=w[:-1]
print(q)","0.0"
"4d25e12d-091c-4350-a744-93b5301dbe02","n=int(input())
on=0
ya=0
a=list(map(int,input().split()))
if n==0:
    print(a)
for i in range(len(a)-2):
    if a[0]>a[1] and a[0]>a[-1]:
        if i%2==0:
            on+=a[0]
        else:
            ya+=a[0]
        a.pop(0)
    else:
        if i%2==0:
            on+=a[-1]
        else:
            ya+=a[-1]
        a.pop(-1)
if n%2==1:
    ya+=max(a)
    on+=min(a)
else:
    on+=max(a)
    ya+=min(a)
if n!=0:
    print(on,ya)
","0.0"
"4a5ca4da-8ce7-4613-b0d6-23c6ebb491ed","n=int(input())
sp=sorted([i for i in map(int,input().split())])
st=set()
p = [0]*100
for i in sp:
    st.add(i)
for el in sp:
    p[el-1] +=1


d = 1
k=len(st)
v=0
print(max(p),k)","0.0"
"0718b9a2-e909-4d51-9f4a-a1de2c698eb1","x=list(input())
a=[]
for i in range(len(x)):
    a.append(26-ord(x[i])+ord('a'))
for i in range(len(a)):
    if a[i]==max(a):
        a[i]=0
    else:
        x[i],x[a.index(max(a))]=x[a.index(max(a))],x[i]
        break
print(*x,sep='')","0.0"
"4a5ca4da-8ce7-4613-b0d6-23c6ebb491ed","n, spisok = int(input()), []
vvod = list(map(int, input().split()))
d = len(set(vvod))
sp = list(set(vvod))
for i in range(d):
    spisok.append(vvod.count(sp[i]))
print(max(spisok), d)","0.0"
"0718b9a2-e909-4d51-9f4a-a1de2c698eb1","x=list(input())
a=[]
for i in range(len(x)):
    a.append(26-ord(x[i])+ord('a'))
for i in range(len(a)):
    if a[i]==max(a):
        a[i]=0
    else:
        x[i],x[a.index(max(a))]=x[a.index(max(a))],x[i]
        break
print(*x,sep='')","0.0"
"0718b9a2-e909-4d51-9f4a-a1de2c698eb1","a=input()
t=[0]*len(a)
for i in range(len(a)):
    t[i]=a[i]
a=t
b=sorted(a)
if a!=b:
    for i in range(len(a)):
        if a[i]!=b[i]:
            n = a[i]
            m = b[i]
            a[i]=b[i]
            break
    for i in range(len(a)-1,-1,-1):
        if a[i]==m:
            a[i]=n
            break
    print(*a, sep='')
else:
    print(*a, sep='')","0.0"
"4a5ca4da-8ce7-4613-b0d6-23c6ebb491ed","def analyze_coin_stacks(n, denominations):
    from collections import Counter

    count = Counter(denominations)

    max_height = max(count.values())

    total_stacks = len(count)

    return max_height, total_stacks

n = int(input())
denominations = list(map(int, input().split()))

max_height, total_stacks = analyze_coin_stacks(n, denominations)
print(max_height, total_stacks)","0.0"
"4d25e12d-091c-4350-a744-93b5301dbe02","n=int(input())
on=0
ya=0
a=list(map(int,input().split()))
if n==1:
    print(*a)
for i in range(len(a)-2):
    if a[0]>a[1] and a[0]>a[-1]:
        if i%2==0:
            on+=a[0]
        else:
            ya+=a[0]
        a.pop(0)
    else:
        if i%2==0:
            on+=a[-1]
        else:
            ya+=a[-1]
        a.pop(-1)
if n%2==1:
    ya+=max(a)
    on+=min(a)
else:
    on+=max(a)
    ya+=min(a)
if n!=1:
    print(on,ya)
","0.0"
"0718b9a2-e909-4d51-9f4a-a1de2c698eb1","a=list(input())
b=sorted(a)
for i in range(len(a)):
    if a[i]!=b[i]:
        ind=a.index(b[i])
        a[i],a[ind]=a[ind],a[i]
        break
print("""".join(a))","0.0"
"f6186143-1fb6-411f-a770-fda693e2e9b8","def calculate_min_cars(x, y, z):
    cars_ego = x
    cars_collectivist = y // 3
    rem = y % 3
    remaining_z = z

    if y > 0:
        if rem == 1:
            if remaining_z >= 2:
                cars_collectivist += 1
                remaining_z -= 2
            else:
                return -1
        elif rem == 2:
            if remaining_z >= 1:
                cars_collectivist += 1
                remaining_z -= 1
            else:
                return -1

    cars_z = (remaining_z + 2) // 3

    total_cars = cars_ego + cars_collectivist + cars_z
    return total_cars

def work():
    input_line = input()
    if not input_line:
        print(-1)
        return
    parts = input_line.split()
    if len(parts) != 3:
        print(-1)
        return
    try:
        x, y, z = map(int, parts)
    except:
        print(-1)
        return
    if x < 0 or y < 0 or z < 0:
        print(-1)
        return
    result = calculate_min_cars(x, y, z)
    print(result)

work()","0.0"
"49c03922-c57e-464a-8191-9ebef2615808","a,b,m = map(int, input().split())
print(m//a+1+m//b+1)","0.0"
"2a42d873-b1fe-4256-a488-91db4eaa8d9f","a = input()
b = input()
s = [int(i) for i in a]
k = [int(i) for i in b]
k.sort()
k.reverse()
for i in range (0, len(s)):
    w = k[0]
    if s[i]<w:
        s[i]=w
        k.remove(w)
    if len(k)==0 or k[0]==0:
        break
number = int(''.join(map(str, s)))
print(number)
","0.0"
"cfed631e-c3d2-495b-96a0-5c89a5a8aee0","n = int(input())
left = []
right = []
res = 0
for i in range(n):
    a = input().split()
    left.append(a[0])
    right.append(a[1])
if left.count('1') > left.count('0'):
    res += left.count('0')
elif left.count('1') == left.count('0'):
    res += left.count('1')
else:
    res += left.count('1')
if right.count('1') > right.count('0'):
    res += right.count('0')
elif right.count('1') == right.count('0'):
    res += right.count('1')
else:
    res += right.count('1')
print(res)","0.0"
"2a42d873-b1fe-4256-a488-91db4eaa8d9f","a = input()
b = input()
s = [int(i) for i in a]
k = [int(i) for i in b]
for i in range (0, len(s)):
    w= max(k)
    if s[i]<w:
        s[i]=w
        k.remove(w)
number = int(''.join(map(str, s)))
print(number)
","0.0"
"2a42d873-b1fe-4256-a488-91db4eaa8d9f","a = input()
b = input()
s = [int(i) for i in a]
k = [int(i) for i in b]
for i in range (0, len(s)):
    w= max(k)
    if s[i]<w:
        s[i]=w
        k.remove(w)
    if len(k)==0 or k[0]==0:
        break
number = int(''.join(map(str, s)))
print(number)
","0.0"
"2a42d873-b1fe-4256-a488-91db4eaa8d9f","a = input()
b = input()
s = [int(i) for i in a]
k = [int(i) for i in b]
for i in range (0, len(s)):
    w= max(k)
    if s[i]<w:
        s[i]=w
        k.remove(w)
number = int(''.join(map(str, s)))
print(number)
","0.0"
"4d25e12d-091c-4350-a744-93b5301dbe02","def game_result(n, numbers):
    player_sum = 0
    computer_sum = 0
    left = 0  
    right = n - 1  
    turn = 0
    while left <= right:
        if turn == 0:
            if numbers[left] > numbers[right]:
                player_sum += numbers[left]
                left += 1
            else:
                player_sum += numbers[right]
                right -= 1
        else:
            if numbers[left] > numbers[right]:
                computer_sum += numbers[left]
                left += 1
            else:
                computer_sum += numbers[right]
                right -= 1
        turn = 1 - turn
    return player_sum, computer_sum
n = int(input())
numbers = list(map(int, input().split()))
result = game_result(n, numbers)
print(result[0], result[1])
","0.0"
"49c03922-c57e-464a-8191-9ebef2615808","n = list(map(int, input().split()))
print(2 + n[2] // n[0] + n[2] // n[1])","0.0"
"b316f513-f142-45d3-a702-cc3208e6aa54","n, a, b = map(int, input().split())
if n == 0 or a == 0 or b == 0 or n > a or n > b:
    print('NO')
else:
    print('YES')
","0.0"
"df2fe73c-bfa4-40e5-b77c-d2ad076197ca","import math

def can_finish_in_time(candies, k, s, max_time):
    total_time = 0
    count = 1
    
    for candy in candies:
        total_time += candy
        if total_time > max_time * s:
            count += 1
            total_time = candy
            if count > k:
                return False
    return True

def min_time_to_eat_candies(n, k, s, candies):
    left, right = 1, sum(candies) // s + (1 if sum(candies) % s > 0 else 0)
    
    while left < right:
        mid = (left + right) // 2
        if can_finish_in_time(candies, k, s, mid):
            right = mid
        else:
            left = mid + 1
            
    return left

n, k, s = map(int, input().split())
candies = list(map(int, input().split()))

result = min_time_to_eat_candies(n, k, s, candies)
print(result)
","0.0"
"8c60181e-f560-4f27-a609-9ab45077ce53","n=int(input())
p=[]
for i in range(1,n+1):
    s=list(map(int, input().split()))
    ind=0
    for j in s:
        if j==3:
            ind=1
        elif j==1:
            ind=1
    if ind==0:
        p.append(i)
print(len(p))
print(*p)","0.0"
"2a42d873-b1fe-4256-a488-91db4eaa8d9f","def maximize_number(a, digits_on_table):
    from collections import Counter

    available_digits = Counter(digits_on_table)

    a = list(a)

    for i in range(len(a)):
        for replacement in range(9, int(a[i]), -1): 
            if available_digits[str(replacement)] > 0:
                a[i] = str(replacement)
                available_digits[str(replacement)] -= 1
                break

    return ''.join(a)

original_number = input()
digits_on_table = input()

print(maximize_number(original_number, digits_on_table))
","0.0"
"c4ced8e6-dec6-4f4a-8a79-f5800795a08b","n=int(input())
if n % 3 == 0:
    a=n//3
    b=3
    mi=((((a+b)*2)+4+n)*2)-n
elif n % (n**0.5) == 0:
    a=n//(n**0.5)
    mi=(((a*4)+4+n)*2)-n
elif n % 2 == 0:
    a=n//2
    b=2
    mi=((((a+b)*2)+4+n)*2)-n
else:
    mi=((((n+1)*2)+4+n)*2)-n
ma=(n*9+9)-n
print(int(mi),ma)
","0.0"
"8c60181e-f560-4f27-a609-9ab45077ce53","def find_finalists(n, results):
    flipped = [False] * n

    for i in range(n):
        for j in range(n):
            if results[i][j] in (1, 3):  
                flipped[i] = True
            if results[i][j] in (2, 3):
                flipped[j] = True

    
    finalists = [i + 1 for i in range(n) if not flipped[i]]  

    return finalists

n = int(input())
results = [list(map(int, input().split())) for _ in range(n)]


finalists = find_finalists(n, results)


print(len(finalists))
print("" "".join(map(str, finalists)))
","0.0"
"0718b9a2-e909-4d51-9f4a-a1de2c698eb1","def a(b):
    s = list(b)
    n = len(s)
    for i in range(n - 1):
        if s[i] > s[i + 1]:
            c = i + 1
            for j in range(i + 1, n):
                if s[j] < s[c]:
                    c = j
            s[i], s[c] = s[c], s[i]
            return ''.join(s)

    return b

b = input().strip()
b1 = a(b)
print(b1)
","0.0"
"8c60181e-f560-4f27-a609-9ab45077ce53","def find_finalists(n, results):
    flipped = [False] * n

    for i in range(n):
        for j in range(n):
            if results[i][j] in (1, 3):  
                flipped[i] = True
            if results[i][j] in (2, 3):
                flipped[j] = True

    
    finalists = [i + 1 for i in range(n) if not flipped[i]]  

    return finalists

n = int(input())
results = [list(map(int, input().split())) for _ in range(n)]


finalists = find_finalists(n, results)


print(len(finalists))
print("" "".join(map(str, finalists)))","0.0"
"0718b9a2-e909-4d51-9f4a-a1de2c698eb1","s = str(input())
f = [i for i in s]
d = sorted(f)
k = []
for i in range(len(f)):
    if f[i] != d[i]:
        k.append(f[i])
        k.append(d[i])
        break

def swap(x, y, z):
    t = '1'
    x = x.replace(y, t, 1)
    x = x.replace(z, y, 1)
    x = x.replace(t, z, 1)
    return ''.join(x)

if len(k) > 0:
    print(swap(s, k[0], k[1]))
else:
    print(s)


    
            
","0.0"
"8c60181e-f560-4f27-a609-9ab45077ce53","q=int(input())
w=[]
for i in range(q):
    a=list(map(int, input().split()))
    if a.count(1)==0 and a.count(3)==0:
        w.append(i+1)
print(len(w))
if len(w)!=0:
    print(*w)","0.0"
"c4ced8e6-dec6-4f4a-8a79-f5800795a08b","import math

def get_divisors(n):
    divisors = set()
    for i in range(1, int(math.sqrt(n)) + 1):
        if n % i == 0:
            divisors.add(i)
            divisors.add(n // i)
    return sorted(divisors)


def find_min_max_painted(n):
    min_painted = float('inf')
    max_painted = -float('inf')

    divisors_x = get_divisors(n)

    for x in divisors_x:
        m = n // x

        divisors_y = get_divisors(m)
        for y in divisors_y:
            z = m // y  # z = C - 2

            total = (x + 1) * (y + 2) * (z + 2)
            painted = total - n

            if painted < min_painted:
                min_painted = painted
            if painted > max_painted:
                max_painted = painted

    return min_painted, max_painted

min_painted, max_painted = find_min_max_painted(int(input()))
print(min_painted, max_painted)
","0.0"
"b316f513-f142-45d3-a702-cc3208e6aa54","sp = list(map(int, input().split()))
n, a, b = sp[0], sp[1], sp[2]
if n <= a and n <= b:
    print('YES')
else:
    print(""NO"")
","0.0"
"0718b9a2-e909-4d51-9f4a-a1de2c698eb1","t=input()
was=False
for i in range(len(t)):
    if t[i]!=sorted(t)[i]:
        ind=t[::-1].find(sorted(t)[i])+1
        print((t[:i]+t[-ind]+t[i+1:-ind]+t[i]+t[-ind+1:])[:len(t)])
        was=True
        break
if not was: print(t)","0.0"
"8c60181e-f560-4f27-a609-9ab45077ce53","def find_finalists(n, matrix):
    finalists = []
    for i in range(n):
        if all(matrix[i][j] not in [1, 3] for j in range(n)):
            finalists.append(i + 1)
    
    return len(finalists), finalists

n = int(input())
matrix = [list(map(int, input().split())) for _ in range(n)]

count, finalists = find_finalists(n, matrix)

print(count)
print("" "".join(map(str, finalists)))","0.0"
"49c03922-c57e-464a-8191-9ebef2615808","a,b,m = map(int,input().split())
ans = 2

ans += m//a + m//b

print(ans)","0.0"
"4a5ca4da-8ce7-4613-b0d6-23c6ebb491ed","mass = [0]*1000

a = int(input())
#m = input().replace(' ','')
m=[int(x) for x in input().split()]

for i in m:
    mass[i] += 1

print(max(mass), len(mass)-mass.count(0))
","0.0"
"b316f513-f142-45d3-a702-cc3208e6aa54","def can_klava_serve_all(n, a, b):
    if n <= a and n <= b:
        return ""YES""
    return ""NO""

n, a, b = map(int, input().split())

print(can_klava_serve_all(n, a, b))","0.0"
"cfed631e-c3d2-495b-96a0-5c89a5a8aee0","def work():
    import sys

    try:
        n = int(input())
    except:
        print(0)
        sys.exit()

    count_left_0 = count_left_1 = count_right_0 = count_right_1 = 0

    for _ in range(n):
        try:
            line = input().strip()
            if not line:
                continue
            parts = line.split()
            if len(parts) != 2:
                continue
            l, r = parts
            if l == '0':
                count_left_0 += 1
            elif l == '1':
                count_left_1 += 1
            else:
                continue

            if r == '0':
                count_right_0 += 1
            elif r == '1':
                count_right_1 += 1
            else:
                continue
        except EOFError:
            break

    cost_00 = count_left_1 + count_right_1
    cost_01 = count_left_1 + count_right_0
    cost_10 = count_left_0 + count_right_1
    cost_11 = count_left_0 + count_right_0

    print(min(cost_00, cost_01, cost_10, cost_11))
work()
","0.0"
"4d25e12d-091c-4350-a744-93b5301dbe02","n = int(input())
a = input()
a = a.split(' ')
p1 = 0
p2 = 0
while len(a)!=0:
    if int(a[0])>int(a[-1]):
        p1+=int(a[0])
        a = a[1:]
    else:
        p1+=int(a[-1])
        a = a[:-1]
    if len(a)==0:
        break
    if int(a[0])>int(a[-1]):
        p2+=int(a[0])
        a = a[1:]
    else:
        p2+=int(a[-1])
        a = a[:-1]
print (p1, p2)","0.0"
"df2fe73c-bfa4-40e5-b77c-d2ad076197ca","import math

def can_divide(candies, n, k, max_time):
    current_sum = 0
    count = 1  
    for candy in candies:
        if current_sum + candy > max_time:
            count += 1  
            current_sum = candy
            if count > k:  
                return False
        else:
            current_sum += candy
    return True

def find_minimum_time(candies, n, k, s):
    low = max(candies) 
    high = sum(candies) 
    result = high
    
    while low <= high:
        mid = (low + high) // 2
        if can_divide(candies, n, k, mid):
            result = mid
            high = mid - 1
        else:
            low = mid + 1
    
    return math.ceil(result / s)

n, k, s = map(int, input().split())
candies = list(map(int, input().split()))

print(find_minimum_time(candies, n, k, s))
","0.0"
"b316f513-f142-45d3-a702-cc3208e6aa54","n,a,b=map(int, input().split())
if a-n>=0 and b-n>=0:
    print('YES')
else:
    print('NO')","0.0"
"0718b9a2-e909-4d51-9f4a-a1de2c698eb1","s = str(input())
f = [i for i in s]
d = sorted(f)
k = []
for i in range(len(f)):
    if f[i] != d[i]:
        k.append(f[i])
        k.append(d[i])
        break

def swap(x, y, z):
    t = '1'
    x = x.replace(y, t, 1)
    x = x.replace(z, y, 1)
    x = x.replace(t, z, 1)
    return ''.join(x)


if len(k) > 0:
    if s.count(k[1]) > 1:
        t = s.count(k[1])
        for i in range(len(f)):
            if f[i] == k[1] and t != 1:
                f[i] = '1'
                t -= 1
            if t == 1:
                break
        s = ''.join(f)
        s = swap(s, k[0], k[1])
        s = s.replace('1', k[1])
        print(s)
    else:
        print(swap(s, k[0], k[1]))
else:
    print(s)


    
            
","0.0"
"b316f513-f142-45d3-a702-cc3208e6aa54","if __name__ == '__main__':
    n, a, b = map(int, input().split())

    if min(a, b) >= n:
        print('YES')
    else:
        print('NO')","0.0"
"4d25e12d-091c-4350-a744-93b5301dbe02","def game_result(n, numbers):
    left, right = 0, n - 1
    my_sum, your_sum = 0, 0
    turn = 0 
    
    while left <= right:
        if numbers[left] > numbers[right]:
            selected = numbers[left]
            left += 1
        else:
            selected = numbers[right]
            right -= 1
        
        if turn == 0:
            my_sum += selected
        else:
            your_sum += selected
        
        turn = 1 - turn 

    return my_sum, your_sum

n = int(input()) 
numbers = list(map(int, input().split())) 

my_sum, your_sum = game_result(n, numbers)
print(my_sum, your_sum)
","0.0"
"cfed631e-c3d2-495b-96a0-5c89a5a8aee0","n=int(input())
left_bits=[]
right_bits=[]
for i in range(n):
    l,r=map(int,input().split())
    left_bits.append(l)
    right_bits.append(r)
left_zeros = left_bits.count(0)
left_ones = n - left_zeros
right_zeros = right_bits.count(0)
right_ones = n - right_zeros

ans=min(left_zeros,left_ones) + min(right_zeros, right_ones)
print(ans)","0.0"
"2173e6e8-cca6-47c7-8ef6-ea93d3e736f4","n = int(input())
stolbs = list(map(int, input().split()))
stolbs.sort()
result = 0
op = 0
chained = False
for i in range(n - 1):
    if not chained:
        result += stolbs[i + 1] - stolbs[i]
        chained = True
    else:
        try:
            if stolbs[i + 2] - stolbs[i + 1] > stolbs[i + 1] - stolbs[i]:
                result += stolbs[i + 1] - stolbs[i]
            else:
                chained = False
        except:
            result += stolbs[i + 1] - stolbs[i]
print(result)
","0.0"
"b316f513-f142-45d3-a702-cc3208e6aa54","a,b,c=map(int,input().split())
if b>=a:
    if b>=c:
        print('YES')
    else:
        print('YES')
else:
    print('NO')
","0.0"
"4a5ca4da-8ce7-4613-b0d6-23c6ebb491ed","def work():
    n = int(input())

    denominations = list(map(int, input().split()))

    if len(denominations) != n:
        return

    count_dict = {}
    for denom in denominations:
        if denom in count_dict:
            count_dict[denom] += 1
        else:
            count_dict[denom] = 1

    max_height = max(count_dict.values())

    total_stacks = len(count_dict)

    print(max_height, total_stacks)

work()
","0.0"
"4d25e12d-091c-4350-a744-93b5301dbe02","n = int(input())
numbers = list(map(int, input().split()))
igrok_sum = 0
kopyter_sum = 0
turn = 0
while numbers:
    if turn % 2 == 0:
        if numbers[0] > numbers[-1]:
            igrok_sum += numbers[0]
            del numbers[0]
        else:
            igrok_sum += numbers[-1]
            del numbers[-1]
    else:
        if numbers[0] > numbers[-1]:
            kopyter_sum += numbers[0]
            del numbers[0]
        else:
            kopyter_sum += numbers[-1]
            del numbers[-1]
    turn += 1
print(igrok_sum, kopyter_sum)","0.0"
"4d25e12d-091c-4350-a744-93b5301dbe02","n=int(input())
numbers=list(map(int,input().split()))

player1_sum=0
player2_sum=0
turn=1 
while numbers:
    if numbers[0]>numbers[-1]:
        if turn == 1:
            player1_sum+=numbers[0]
        else:
            player2_sum+=numbers[0]
        numbers.pop(0)
    else:
        if turn == 1:
            player1_sum+=numbers[-1]
        else:
            player2_sum+=numbers[-1]
        numbers.pop()
    turn=3-turn
print(player1_sum,player2_sum)","0.0"
"0718b9a2-e909-4d51-9f4a-a1de2c698eb1","a =  input()
ab = list(map(str,a))
b = sorted(ab)
s = ''

for i in range(len(a)):
    if a[i] != b[i]:
        e1 = b[i]
        e2= a[i]
        a = a.replace(a[i],b[i],1)

        break
fak=a.rfind(e1)

x = a[fak]
a=a.replace(a[fak],e2)
a=a.replace(e2,x,1)
print(a)","0.0"
"2a42d873-b1fe-4256-a488-91db4eaa8d9f","def maximize_number(a_str, table_digits):
    a = list(a_str)

    counts = [0] * 10
    for digit in table_digits:
        counts[int(digit)] += 1

    for i in range(len(a)):
        current_digit = int(a[i])
        for d in range(9, current_digit, -1):
            if i == 0 and d == 0:
                continue
            if counts[d] > 0:
                a[i] = str(d)
                counts[d] -= 1
                break

    return ''.join(a)

a_str = input().strip()
table_digits = input().strip()
result = maximize_number(a_str, table_digits)
print(result)
","0.0"
"2173e6e8-cca6-47c7-8ef6-ea93d3e736f4","n=int(input())
m=list(map(int,input().split()))
m=sorted(m)
i=2
s=m[1]-m[0]+m[-1]-m[-2]
while i<n-2:
    if m[i]-m[i-1]>=m[i+1]-m[i]:
        s+=m[i+1]-m[i]
        i=i+1
    else:
        s+=m[i]-m[i-1]
    i=i+1
print(s)","0.0"
"49c03922-c57e-464a-8191-9ebef2615808","from math import *
a=input()
a=list(map(int, a.split()))
x=a[-1]+min(a[0],a[1])
print(ceil(x//a[0])+ceil(x//a[1]))
 

        ","0.0"
"b316f513-f142-45d3-a702-cc3208e6aa54","n, a, b = map(int, input().split())
if a >= n and b >= a and b >= n:
    print('YES')
else:
    print('NO')","0.0"
"2a42d873-b1fe-4256-a488-91db4eaa8d9f","a = input()
b = input()
c = ''
m = []

for i in range(len(b)):
    m.append(b[i])

for i in range(len(a)):
    if a[i] < max(b):
        c += max(b)
        b = b.replace(max(b),'',1)
    else: c+=a[i]

print(c)




","0.0"
"4a5ca4da-8ce7-4613-b0d6-23c6ebb491ed","n = int(input())
money = map(int, input().split())
a = {}
for i in money:
    if i in a:
        a[i] += 1
    else:
        a[i] = 1
maxx = 0
for i in a.values():
    maxx = max(maxx, i)
print(maxx, len(a))
","0.0"
"8c60181e-f560-4f27-a609-9ab45077ce53","n = int(input())
mat = []
for i in range(n):
    mat.append(list(map(int, input().split())))
ans = 0
arr = []
for i in range(n):
    if 1 not in mat[i] and 3 not in mat[i]:
        ans += 1
        arr.append(i + 1)
print(ans)
print(*arr)
","0.0"
"b316f513-f142-45d3-a702-cc3208e6aa54","n,a,b=map(int,input().split())
if n<=a:
    print('YES')
else:
    print('NO')
","0.0"
"4a5ca4da-8ce7-4613-b0d6-23c6ebb491ed","n = int(input())
coins = list(map(int, input().split()))

counts = {}
for coin in coins:
    counts[coin] = counts.get(coin, 0) + 1

max_height = 0
num_stacks = len(counts)

for count in counts.values():
    if count > max_height:
        max_height = count

print(max_height, num_stacks)
","0.0"
"2a42d873-b1fe-4256-a488-91db4eaa8d9f","a = input()
cards = sorted(input(), reverse=True)
n = len(a)
result = list(a)

card_index = 0
for i in range(n):
    if card_index < len(cards) and cards[card_index] > result[i]:
        result[i] = cards[card_index]
        card_index += 1

print("""".join(result))
","0.0"
"b316f513-f142-45d3-a702-cc3208e6aa54","n, a, b = map(int, input().split())
if a < n:
    print('NO')
elif b < n:
    print('NO')
elif a >= n and b >= n:
    print('YES')
","0.0"
"b316f513-f142-45d3-a702-cc3208e6aa54","n, a, b = map(int, input().split())
if a < n or b < n:
    print('NO')
else:
    print('YES')
","0.0"
"2a42d873-b1fe-4256-a488-91db4eaa8d9f","a = input()
b = input()

aq =list(map(int,a))
bq = list(map(int,b))

bq = sorted(bq)
bq = bq[::-1]
s=''
otvet = aq
otmena = []

for x in range(len(aq)):
    for y in range(len(bq)):
        if aq[x] < bq[y]:
            if y not in otmena:
                otvet[x] = bq[y]
                otmena.append(y)
                break
        
        
print(*otvet,sep='')
            ","0.0"
"b316f513-f142-45d3-a702-cc3208e6aa54","a,b,c = map(int, input().split())
if a <= b and a <= c:
    print('YES')
else:
    print('NO')","0.0"
"2a42d873-b1fe-4256-a488-91db4eaa8d9f","a = input()
b = input()

aq =list(map(int,a))
bq = list(map(int,b))

bq = sorted(bq)
bq = bq[::-1]
s=''
otvet = aq
otmena = []

for x in range(len(aq)):
    for y in range(len(bq)):
        if aq[x] < bq[y]:
            if y not in otmena:
                otvet[x] = bq[y]
                otmena.append(y)
        else:
            break
        
        
print(*otvet,sep='')
            ","0.0"
"cfed631e-c3d2-495b-96a0-5c89a5a8aee0","def min_operations_to_uniform_state(n, pairs):
    count_left_0 = 0
    count_left_1 = 0
    count_right_0 = 0
    count_right_1 = 0
    for left, right in pairs:
        if left == 0:
            count_left_0 += 1
        else:
            count_left_1 += 1   
        if right == 0:
            count_right_0 += 1
        else:
            count_right_1 += 1
    changes_to_00 = count_left_1 + count_right_1
    changes_to_01 = count_left_1 + count_right_0
    changes_to_10 = count_left_0 + count_right_1
    changes_to_11 = count_left_0 + count_right_0
    min_changes = min(changes_to_00, changes_to_01, changes_to_10, changes_to_11)
    return min_changes
n = int(input().strip())
pairs = [list(map(int, input().strip().split())) for _ in range(n)]
result = min_operations_to_uniform_state(n, pairs)
print(result)","0.0"
"b316f513-f142-45d3-a702-cc3208e6aa54","def can_serve_all_customers(n, a, b):
    if a >= n and b >= n:
        return ""YES""
    else:
        return ""NO""

def work():
    try:
        input_line = input().strip()
        n, a, b = map(int, input_line.split())
        print(can_serve_all_customers(n, a, b))
    except:
        print(""NO"")

work()
","0.0"
"c4ced8e6-dec6-4f4a-8a79-f5800795a08b","n = int(input())
mn, mx = 10000, 0
for x in range(1, n+1):
    for y in range(1, n+1):
        for z in range(1, n+1):
            v = x*y*z
            if v == n:
                o = (x+2)*(y+2) + ((x+2)*(y+2) - x*y) * z
                mn = min(o, mn)
                mx = max(o, mx)
print(mn, mx)","0.0"
"4d25e12d-091c-4350-a744-93b5301dbe02","n = int(input())
mas = list(map(int, input().split(' ')))
a, b = 0, 0

for i in range(0, n):
    if i % 2 == 0:
        if mas[0] > mas[-1]:
            a += mas[0]
            mas.pop(0)
        else:
            a += mas[-1]
            mas.pop(-1)
    else:
        if mas[0] > mas[-1]:
            b += mas[0]
            mas.pop(0)
        else:
            b += mas[-1]
            mas.pop(-1)
print(a, b)
","0.0"
"8c60181e-f560-4f27-a609-9ab45077ce53","n = int(input())
robots = [1]*n
for i in range(n):
    m = list(map(int,input().split()))
    for j in range(n):
        if (m[j] == 1) or (m[j] == 3):
            robots[i] = 0
        if (m[j] == 2) or (m[j] == 3):
            robots[j] = 0
print(sum(robots))
ans = []
for i in range(n):
    if robots[i]:
        ans += [i + 1]
print(*ans)","0.0"
"2173e6e8-cca6-47c7-8ef6-ea93d3e736f4","n = int(input())
stolbs = list(map(int, input().split()))
stolbs.sort()
# print(stolbs)
result = 0
op = 0
chained = False
for i in range(n - 1):
    if not chained:
        result += stolbs[i + 1] - stolbs[i]
        chained = True
    else:
        try:
            if stolbs[i + 2] - stolbs[i + 1] > stolbs[i + 1] - stolbs[i] and i < n - 3:
                result += stolbs[i + 1] - stolbs[i]
            else:
                chained = False
        except:
            result += stolbs[i + 1] - stolbs[i]
    # if chained:
        # print(stolbs[i], stolbs[i + 1] - stolbs[i])
print(result)
","0.0"
"c4ced8e6-dec6-4f4a-8a79-f5800795a08b","n = int(input())
maxi = n*8+9


def F(x):
    for i in range(1, int(x**0.5+1)):
        if x % i == 0:
            ans = i
    return ans


F_a = F(n)
mini = 2*(F(n)+2)*(n//F_a+2) - n
print(mini, maxi)


","0.0"
"4d25e12d-091c-4350-a744-93b5301dbe02","n = int(input())
mas = list(map(int, input().split(' ')))
a, b = 0, 0

for i in range(0, n):
    if i % 2 == 0:
        if mas[0] > mas[-1]:
            a += mas[0]
            mas.pop(0)
        else:
            a += mas[-1]
            mas.pop(-1)
    else:
        if mas[0] > mas[-1]:
            b += mas[0]
            mas.pop(0)
        else:
            b += mas[-1]
            mas.pop(-1)
print(a, b)
","0.0"
"8c60181e-f560-4f27-a609-9ab45077ce53","n = int(input())
robots = [1]*n
for i in range(n):
    m = list(map(int, input().split()))
    for j in range(n):
        if (m[j] == 1):
            robots[i] = 0
        if (m[j] == 2):
            robots[j] = 0
        if m[j] == 3:
            robots[j] = 0
            robots[i] = 0
print(sum(robots))
ans = []
for i in range(n):
    if robots[i]:
        ans += [i + 1]
print(*ans)","0.0"
"49c03922-c57e-464a-8191-9ebef2615808","a, b, m=map(int,input().split())
print(m//a+m//b+2)","0.0"
"cfed631e-c3d2-495b-96a0-5c89a5a8aee0","n=int(input())
k = dict()
for x in range(n):
    s = input()
    if s in k.keys():
        k[s] +=1
    else: k[s] = 0
print(n-max(k.values()))
   
","0.0"
"4d25e12d-091c-4350-a744-93b5301dbe02","n = int(input())
a=list(map(int, input().split()))
k=0
m=n-1
b=[0, 0]
for i in range(n):
    if a[k] > a[m]:
        b[i%2]+=a[k]
        k += 1
    else:
        b[i%2]+=a[m]
        m -= 1
print(b[0], b[1])","0.0"
"8c60181e-f560-4f27-a609-9ab45077ce53","n = int(input())
robots = [1]*n
for i in range(n):
    m = list(map(int, input().split()))
    for j in range(n):
        if (m[j] == 1):
            robots[i] = 0
        if m[j] == 3:
            robots[j] = 0
            robots[i] = 0
print(sum(robots))
ans = []
for i in range(n):
    if robots[i]:
        ans += [i + 1]
print(*ans)","0.0"
"2a42d873-b1fe-4256-a488-91db4eaa8d9f","a = input()
b = input()
masa=[]
masb=[]
for i in a:
    masa.append(int(i))
for i in b:
    masb.append(int(i))
masb=sorted(masb)[::-1]
k=0
for i in range(len(masa)):
   if masb[k]>masa[i] and k<=len(masb):
       masa[i]=masb[k]
       k+=1
s=''.join(map(str,masa))
print(s)


","0.0"
"2a42d873-b1fe-4256-a488-91db4eaa8d9f","a = input()
b = input()

aq =list(map(int,a))
bq = list(map(int,b))

bq = sorted(bq)
bq = bq[::-1]
s=''
otvet = aq
otmena = []

for x in range(len(aq)):
    for y in range(len(bq)):
        if aq[x] < bq[y]:
            if y not in otmena:
                otvet[x] = bq[y]
                otmena.append(y)
        else:
            break
        
        
print(*otvet,sep='')","0.0"
"c4ced8e6-dec6-4f4a-8a79-f5800795a08b","n = int(input())
maxi = n*8+9


def F(x):
    for i in range(1, int(x**0.5)+1):
        if x % i == 0:
            ans = i
    return ans


F_a = F(n)
mini = 2*(F(n)+2)*(n//F_a+2) - n
print(mini, maxi)


","0.0"
"0718b9a2-e909-4d51-9f4a-a1de2c698eb1","fam = list(map(ord, input()))
mn = min(fam)
for i in range(len(fam)):
    mn = min(fam[i+1:])
    if fam[i] > mn:
        t = fam[i]
        fam[fam.index(mn)] = t
        fam[i] = mn
        break
print(''.join(map(chr, fam)))

","0.0"
"b316f513-f142-45d3-a702-cc3208e6aa54","n,a,b=map(int,input().split())
if a>=n and b>=n:
    print('YES')
else:
    print('NO')
","0.0"
"4d25e12d-091c-4350-a744-93b5301dbe02","
n = int(input())
num = list(map(int, input().split()))
ms = 0
ys = 0
left = 0
right = n - 1

for i in range(n):
    if i % 2 == 0:
        if num[left] > num[right]:
            ms += num[left]
            left += 1
        else:
            ms += num[right]
            right -= 1
    else:
        if num[left] > num[right]:
            ys += num[left]
            left += 1
        else:
            ys += num[right]
            right -= 1
print(ms, ys)
","0.0"
"2173e6e8-cca6-47c7-8ef6-ea93d3e736f4","n=int(input())
m=list(map(int,input().split()))
m=sorted(m)
if n !=2:
    i=2
    s=m[1]-m[0]+m[-1]-m[-2]
    while i<n-2:
        if m[i]-m[i-1]>=m[i+1]-m[i]:
            s+=m[i+1]-m[i]
            i=i+1
        else:
            s+=m[i]-m[i-1]
        i=i+1
    print(s)
else:
    print(m[1]-m[0])","0.0"
"df2fe73c-bfa4-40e5-b77c-d2ad076197ca","def can_distribute(candies, k, s, max_time):
    current_sum = 0
    participants = 1
    for candy in candies:
        current_sum += candy
        if current_sum / s > max_time:
            participants += 1
            current_sum = candy
            if participants > k:
                return False
    return True
def min_time_to_eat_candies(n, k, s, candies):
    low = min(candies) // s + (1 if min(candies) % s > 0 else 0)
    high = sum(candies) // s + (1 if sum(candies) % s > 0 else 0)
    while low < high:
        mid = (low + high) // 2
        if can_distribute(candies, k, s, mid):
            high = mid
        else:
            low = mid + 1
    return low
n, k, s = map(int, input().strip().split())
candies = list(map(int, input().strip().split()))
result = min_time_to_eat_candies(n, k, s, candies)
print(result)
","0.0"
"b316f513-f142-45d3-a702-cc3208e6aa54","a=list(map(int, input().split()))
if a[1]>=a[0] and a[2]>=a[0]:
    print('YES')
else:
    print('NO')","0.0"
"b316f513-f142-45d3-a702-cc3208e6aa54","n,a,b=map(int,input().split())
s=[n,a,b]
n-=min(s)
a-=min(s)
b-=min(s)
if n==0:
    print('YES')
else:
    print('NO')
","0.0"
"df2fe73c-bfa4-40e5-b77c-d2ad076197ca","def can_distribute(mid, k, s, candies):
    count = 0
    current_sum = 0
    
    for candy in candies:
        current_sum += candy
        if current_sum > mid * s:
            count += 1
            current_sum = candy
            if count >= k:
                return False
    return True

def minimum_time(n, k, s, candies):
    left = 1
    right = (sum(candies) + s - 1) // s
    
    while left < right:
        mid = (left + right) // 2
        if can_distribute(mid, k, s, candies):
            right = mid
        else:
            left = mid + 1
            
    return left

# ÐÐ²Ð¾Ð´ Ð´Ð°Ð½Ð½ÑÑ
n, k, s = map(int, input().strip().split())
candies = list(map(int, input().strip().split()))

# ÐÑÐ²Ð¾Ð´ ÑÐµÐ·ÑÐ»ÑÑÐ°ÑÐ°
print(minimum_time(n, k, s, candies))
","0.0"
"df2fe73c-bfa4-40e5-b77c-d2ad076197ca","def work():
    first_line = input().strip()
    while first_line == '':
        first_line = input().strip()
    n_k_s = first_line.split()
    if len(n_k_s) < 3:
        second_part = input().strip().split()
        n_k_s += second_part
    n, k, s = map(int, n_k_s[:3])

    p = []
    while len(p) < n:
        line = input()
        if not line:
            break
        p += list(map(int, line.strip().split()))

    if len(p) < n:
        return

    if not (1 <= n <= 10 ** 5 and 1 <= k <= 10 ** 5 and 1 <= s <= 50):
        return
    for candies in p:
        if not (1 <= candies <= 10 ** 4):
            return

    low = max(p)
    high = sum(p)

    while low < high:
        mid = (low + high) // 2
        required = 1
        current_sum = 0
        for num in p:
            if current_sum + num > mid:
                required += 1
                current_sum = num
            else:
                current_sum += num
        if required <= k:
            high = mid
        else:
            low = mid + 1

    time = (low + s - 1) // s
    print(time)
work()
","0.0"
"2a42d873-b1fe-4256-a488-91db4eaa8d9f","def maximize_number(a, cards):
    card_list = sorted(cards, reverse=True)
    result = list(a) 
    card_index = 0  
    for i in range(len(result)):
        if card_index < len(card_list) and card_list[card_index] > result[i]:
            result[i] = card_list[card_index]  
            card_index += 1  
    return ''.join(result)  
a = input().strip() 
cards = input().strip() 
print(maximize_number(a, cards))","0.0"
"49c03922-c57e-464a-8191-9ebef2615808","def max_fireworks(a, b, m):
    return (m // a) + (m // b) + 2

a, b, m = map(int, input().split())
print(max_fireworks(a, b, m))
","0.0"
"49c03922-c57e-464a-8191-9ebef2615808","a, b, m = map(int, input().split())
m = m + 1
if a == 1 and b == 1:
    print((m)*2)
elif min(a,b) == 1:
    print(m + m//max(a,b))
else:
    mn = min(a,b)

    e = mn+m
    a1 = e//a
    a2 = e//b
    print(a1+a2)
","0.0"
"b316f513-f142-45d3-a702-cc3208e6aa54","a, b, c = input().split()
a = int(a)
b = int(b)
c = int(c)
if b<=c and b>=a:
    print('YES')
elif b>c and c>=a:
    print('YES')
else:
    print('NO')","0.0"
"b316f513-f142-45d3-a702-cc3208e6aa54","def can_serve_all(n, a, b):
    if a >= n and b >= n:
        return ""YES""
    else:
        return ""NO""

# Ð§ÑÐµÐ½Ð¸Ðµ Ð²ÑÐ¾Ð´Ð½ÑÑ Ð´Ð°Ð½Ð½ÑÑ
n, a, b = map(int, input().strip().split())

# ÐÐ¿ÑÐµÐ´ÐµÐ»ÐµÐ½Ð¸Ðµ ÑÐµÐ·ÑÐ»ÑÑÐ°ÑÐ°
result = can_serve_all(n, a, b)

# ÐÑÐ²Ð¾Ð´ ÑÐµÐ·ÑÐ»ÑÑÐ°ÑÐ°
print(result)
","0.0"
"15a679fe-9f02-44a5-8720-d22dbf7b05ce","def max_occupied_parking_spots(n):
    if n % 2 == 0:
        return n // 2
    else:
        return (n // 2) + 1

# Ð§ÑÐµÐ½Ð¸Ðµ Ð²ÑÐ¾Ð´Ð½ÑÑ Ð´Ð°Ð½Ð½ÑÑ
n = int(input().strip())

# ÐÐ¾Ð»ÑÑÐµÐ½Ð¸Ðµ ÑÐµÐ·ÑÐ»ÑÑÐ°ÑÐ°
result = max_occupied_parking_spots(n)

# ÐÑÐ²Ð¾Ð´ ÑÐµÐ·ÑÐ»ÑÑÐ°ÑÐ°
print(result)
","0.0"
"b316f513-f142-45d3-a702-cc3208e6aa54","n, a, b = map(int, input().split())
if a >= n and b >= n:
    print(""YES"")
else:
    print(""NO"")","0.0"
"4d25e12d-091c-4350-a744-93b5301dbe02","n = int(input())
nums = list(map(int, input().split()))

left, right = 0, n - 1
player1, player2 = 0, 0
turn = True  # true Ð¿ÐµÑÐ²ÑÐ¹ false Ð²ÑÐ¾ÑÐ¾Ð¹

while left <= right:
    if nums[left] > nums[right]:
        chosen = nums[left]
        left += 1
    else:
        chosen = nums[right]
        right -= 1

    if turn:
        player1 += chosen
    else:
        player2 += chosen

    turn = not turn

print(player1, player2)
","0.0"
"0718b9a2-e909-4d51-9f4a-a1de2c698eb1","s = input()
n = len(s)
best = s
for i in range(n):
    for j in range(i + 1, n):
        new = list(s)
        new[i], new[j] = new[j], new[i]
        new = """".join(new)
        if new < best:
            best = new
print(best)
","0.0"
"4d25e12d-091c-4350-a744-93b5301dbe02","n = int(input())
l = list(map(int, input().split()))
a=0
b=0
x=n-1
y=0
c=1
for i in range(n):
    if c==1:
        if l[x]>=l[y]:
            a+=l[x]
            x-=1
        else:
            a+=l[y]
            y+=1
        c=0
    else:
        if l[x]>=l[y]:
            b+=l[x]
            x-=1
        else:
            b+=l[y]
            y+=1
        c=1

print(a,b)","0.0"
"c4ced8e6-dec6-4f4a-8a79-f5800795a08b","def factors(n):
    if n==1: return [1]
    a=[1,n]
    d=2
    while d*d<n:
        if n%d==0:
            a.append(d)
            a.append(n//d)
        d+=1
    if d*d==n: a.append(d)
    return sorted(a)
n=  int(input())
maxa = n*8 + 9
d = factors(n)
if len(d) & 1 == 0:
    dlina = d[len(d)//2-1]
    shir = d[len(d)//2]
    mina = n + dlina * 4 + shir * 4 + 8
else:
    dlina = d[len(d) // 2]
    mina = n + dlina * 4 + dlina * 4 + 8
print(mina,maxa)



","0.0"
"8c60181e-f560-4f27-a609-9ab45077ce53","n = int(input())

mx = [[] for i in range(n)]
for i in range(n):
    mx[i] = list(map(int, input().split()))
fin = [i+1 for i in range(n) if 1 not in mx[i] and 3 not in mx[i]]
print(str(len(fin)) + '
' + ' '.join(map(str, fin)))","0.0"
"0718b9a2-e909-4d51-9f4a-a1de2c698eb1","fam = list(map(ord, input()))
mn = min(fam)
for i in range(len(fam)):
    lst = fam[i+1:]
    if lst:
        mn = min(lst)
    else: break
    if fam[i] > mn:
        t = fam[i]
        fam[fam.index(mn)] = t
        fam[i] = mn
        break
print(''.join(map(chr, fam)))
","0.0"
"df2fe73c-bfa4-40e5-b77c-d2ad076197ca","def can_distribute(candies, k, s, max_time):
    current_sum = 0
    participants = 1
    for candy in candies:
        current_sum += candy
        if current_sum / s > max_time:
            participants += 1
            current_sum = candy
            if participants > k:
                return False
    return True
def min_time_to_eat_candies(n, k, s, candies):
    low = 1 
    high = sum(candies) // s + (1 if sum(candies) % s > 0 else 0)
    while low < high:
        mid = (low + high) // 2
        if can_distribute(candies, k, s, mid):
            high = mid
        else:
            low = mid + 1
    return low
n, k, s = map(int, input().strip().split())
candies = list(map(int, input().strip().split()))
result = min_time_to_eat_candies(n, k, s, candies)
print(result)","0.0"
"cfed631e-c3d2-495b-96a0-5c89a5a8aee0","n = int(input())
pairs = []
for _ in range(n):
    pairs.append(list(map(int, input().split())))
options = [(0, 0), (0, 1), (1, 0), (1, 1)]
min_changes = float('inf')

for option in options:
    changes = 0
    for pair in pairs:
        changes += abs(pair[0] - option[0])
        changes += abs(pair[1] - option[1])
    min_changes = min(min_changes, changes)
print(min_changes)
","0.0"
"0718b9a2-e909-4d51-9f4a-a1de2c698eb1","s = list(input())
last = {c: i for i, c in enumerate(s)}
for i, c in enumerate(s):
    for ch in 'abcdefghijklmnopqrstuvwxyz':
        if ch < c and ch in last and last[ch] > i:
            s[i], s[last[ch]] = s[last[ch]], s[i]
            print(''.join(s))
            exit()
print(''.join(s))
","0.0"
"8c60181e-f560-4f27-a609-9ab45077ce53","n = int(input())
m = []
for _ in range(n):
    m.append(list(map(int, input().split())))

winners = []
for i in range(n):
    is_winner = True
    for j in range(n):
        if i != j:
            if m[i][j] == 1 or m[i][j] == 3:
                is_winner = False
                break
    if is_winner:
        winners.append(i + 1)

print(len(winners))
print(*winners)
","0.0"
"f6186143-1fb6-411f-a770-fda693e2e9b8","x,y,z=map(int,input().split())
count=x
p=y//3
count+=p
y-=p*3
f=0
while y!=0:
    if y<=2 and z>0:
        while y != 3 and z>=1:
            y+=1
            z-=1
        p=y//3
        y-=p*3
        count+=p
        continue
    else:
        while y%3==0 or z!=0:
            y+=1
            z-=1
    if z!=0:
        p=y//3
        count+=p
        y-=p*3
        continue
    else:
        print(-1)
        f+=1
        break
if z!=0 and y == 0 and f==0:
    if z%3==0:
        count+=z//3
    elif (z - 1) % 3 == 0 and z-1!=0:
        count+=1
        z-=1
        count+=z//3
    elif (z - 2) % 3 == 0 and z-2!=0:
        count+=1
        z-=2
        count+=z//3
    elif z % 2 == 0:
        count+=z//2
    else:
        count+=1
if f == 0:
    print(count)


","0.0"
"b316f513-f142-45d3-a702-cc3208e6aa54","n, a, b = map(int, input().split())

if n <= a and n <= b:
    print(""YES"")
else:
    print(""NO"")
","0.0"
"b316f513-f142-45d3-a702-cc3208e6aa54","n, a, b = map(int, input().split())
if min(a, min(b, n)) == n:
    print('YES')
else:
    print('NO')","0.0"
"2a42d873-b1fe-4256-a488-91db4eaa8d9f","x = list(input())
y = list(input())
t = y
t.sort(reverse = True)
for i in range(len(x)):
    if x[i] < t[0]:
        x[i] = t[0]
        t = t[1:]
print(*x, sep = '')","0.0"
"8c60181e-f560-4f27-a609-9ab45077ce53","n = int(input())
matrix = []
for i in range(n):
    row = list(map(int, input().split()))
    matrix.append(row)

finalists = []
for i in range(n):
    flipped = False
    for j in range(n):
        if i == j:
            continue
        if matrix[i][j] == 1 or matrix[i][j] == 3:
            flipped = True
            break
    if not flipped:
        finalists.append(i + 1)

print(len(finalists))
if finalists:
    print(' '.join(map(str, finalists)))
","0.0"
"8c60181e-f560-4f27-a609-9ab45077ce53","n=int(input())
sp=[]
for i in range(n):
    s=[(x)for x in input().split()]
    if s.count(""1"")<1 and s.count(""3"")<1:
        sp.append(i+1)
print(len(sp))
if len(sp)!=0:
    print(*sp)
","0.0"
"0718b9a2-e909-4d51-9f4a-a1de2c698eb1","s = list(input())
n = len(s)
for i in range(n - 1):
    min_l = s[i + 1]
    min_i = i + 1
    for j in range(min_i, n):
        if s[j] < min_l:
            min_l = s[j]
            min_i = j
    if min_l < s[i]:
        s[min_i], s[i] = s[i], s[min_i]
        break
print(*s, sep='')","0.0"
"4d25e12d-091c-4350-a744-93b5301dbe02","a = int(input())
b = list(map(int, input().split()))
L = 0
R = a - 1
cs = 0
ms = 0
fl = False
while R != L:
    if fl:
        if b[L] > b[R]:
            ms += b[L]
            L += 1
        else:
            ms += b[R]
            R -= 1
    else:
        if b[L] > b[R]:
            cs += b[L]
            L += 1
        else:
            cs += b[R]
            R -= 1        
    fl = not fl
if fl:
    ms += b[L]
else:
    cs += b[L]
print(cs, ms)","0.0"
"0718b9a2-e909-4d51-9f4a-a1de2c698eb1","a = [i for i in input()]
al = sorted('qwertyuiopasdfghjklzxcvbnm')
b = [al.index(i) for i in a]

for i in range(len(b)):
    if b[i] > min(b[i:]):
        a[i], a[b.index(min(b[i:]))] = a[b.index(min(b[i:]))], a[i]
        break
print(''.join(a))
","0.0"
"2173e6e8-cca6-47c7-8ef6-ea93d3e736f4","n=int(input())
s=input()
k=s.split()
k=[int (x) for x in k]
k.sort()

k.append(9999999999)
d0=k[1]-k[0]
s=d0
for i in range(1,len(k)-1):
    d1=min(k[i]-k[i-1],k[i+1]-k[i])
    if d1!=d0:
        s=s+d1
        d0=d1
    else:
        d0=10001
print(s)","0.0"
"df2fe73c-bfa4-40e5-b77c-d2ad076197ca","def solve():
    n, k, s = map(int, input().split())
    p = list(map(int, input().split()))

    def get_time(partitions):
        max_time = 0
        for part in partitions:
            time = (sum(part) + s - 1) // s
            max_time = max(max_time, time)
        return max_time

    min_time = float('inf')

    def find_min_time(current_partitions, current_index):
        nonlocal min_time
        if len(current_partitions) == k - 1:
            last_partition = p[current_index:]
            time = get_time(current_partitions + [last_partition])
            min_time = min(min_time, time)
            return

        for i in range(current_index, n):
            new_partitions = current_partitions + [p[current_index:i+1]]
            find_min_time(new_partitions, i + 1)
    
    if k == 1:
      min_time = (sum(p) + s - 1) // s
    elif k >= n:
      min_time = max((x+s-1) //s for x in p )
    else:
      find_min_time([], 0)


    print(min_time)

solve()
","0.0"
"df2fe73c-bfa4-40e5-b77c-d2ad076197ca","n, k, s = map(int, input().split())
a = list(map(int, input().split()))

def f1(candy, max_sum, k):
    current_sum = 0
    requered = 1
    for num in candy:
        current_sum += num
        if current_sum > max_sum:
            requered += 1
            current_sum = num
            if requered > k:
                return False
    return True

def split_c(candy, k):
    left, right = max(candy), sum(candy)
    answer = right
    while left <= right:
        mid = (left + right) // 2
        if f1(candy, mid, k):
            answer = mid
            right = mid - 1
        else:
            left = mid + 1
    return answer

result = split_c(a, k)
if result % s == 0:
    print(result // s)
else:
    print(result // s + 1)
","0.0"
"df2fe73c-bfa4-40e5-b77c-d2ad076197ca","
n, k, s = map(int, input().split())
p = list(map(int, input().split()))

min_time = float('inf')

if k == 1:
    min_time = (sum(p) + s - 1) // s
elif k >= n:
    min_time = 0
    for x in p:
        min_time = max(min_time, (x + s - 1) // s)
else:
    partitions = [[] for _ in range(k)]
    indices = [0] * (k - 1)
    while True:
        current_partitions = []
        start_index = 0
        for i in range(k - 1):
            current_partitions.append(p[start_index:indices[i]])
            start_index = indices[i]
        current_partitions.append(p[start_index:])

        max_time = 0
        for part in current_partitions:
            time = (sum(part) + s - 1) // s
            max_time = max(max_time, time)
        min_time = min(min_time, max_time)

        i = k - 2
        while i >= 0 and indices[i] == n - k + i + 1:
            i -= 1
        if i < 0:
            break
        indices[i] += 1
        for j in range(i + 1, k - 1):
            indices[j] = indices[j - 1] + 1
print(min_time)
","0.0"
"0718b9a2-e909-4d51-9f4a-a1de2c698eb1","a=list(input())
b=sorted(a)
for i in range(len(a)):
    if a[i]>b[i]:
        ind=a[::-1].index(b[i])
        a[i],a[-ind-1]=a[-ind-1],a[i]
        break
    b[i]=""{""
print("""".join(a))","0.0"
"2173e6e8-cca6-47c7-8ef6-ea93d3e736f4","n=int(input())
m=list(map(int,input().split()))
m=sorted(m)
if n !=2:
    i=2
    s=m[1]-m[0]+m[-1]-m[-2]
    while i<n-2:
        if m[i]-m[i-1]>=m[i+1]-m[i]:
            s+=m[i+1]-m[i]
            i=i+1
        else:
            s+=m[i]-m[i-1]
        i=i+1
    print(s)
else:
    print(m[1]-m[0])","0.0"
"df2fe73c-bfa4-40e5-b77c-d2ad076197ca","def solve():
    n, k, s = map(int, input().split())
    p = list(map(int, input().split()))

    def check(time):
        count = 1
        current_sum = 0
        for x in p:
            if (x + s - 1) // s > time:
                return False
            if current_sum + x > time * s:
                count += 1
                current_sum = 0
            current_sum += x
        return count <= k

    left = max((x+s-1)//s for x in p)
    right = sum(p)
    ans = right

    while left <= right:
        mid = (left + right) // 2
        if check(mid):
            ans = mid
            right = mid - 1
        else:
            left = mid + 1

    print(ans)

solve()
","0.0"
"4d25e12d-091c-4350-a744-93b5301dbe02","x = int(input())
l = list(map(int, input().split()))
s1 = 0
s2 = 0
while len(l) > 0:
    t = max(l[0], l[-1])
    s1 += t
    if l[0] > l[-1]:
        l = l[1:]
    else:
        l = l[:-1]
    if len(l) > 0:
        t = max(l[0], l[-1])
        s2 += t
        if l[0] > l[-1]:
            l = l[1:]
        else:
            l = l[:-1]
print(s1, s2)","0.0"
"2a42d873-b1fe-4256-a488-91db4eaa8d9f","a = list(input())
d = len(a)
b = list(input())
b.sort()
c = [0]*len(a)
for i in range(d):
    if int(a[i]) < int(b[-1]):
        c[i] = int(b[-1])
        b.remove(b[-1])
    else:
        c[i] = int(a[i])
    if b == []:
        break    
print(*c,sep='')","0.0"
"df2fe73c-bfa4-40e5-b77c-d2ad076197ca","def solve():
    n, k, s = map(int, input().split())
    p = list(map(int, input().split()))

    pref = [0] * (n + 1)
    for i in range(n):
        pref[i+1] = pref[i] + p[i]

    def check(time):
        count = 1
        current_sum = 0
        for i in range(n):
            if (p[i] + s - 1) // s > time:
                return False
            if current_sum + p[i] > time * s:
                count += 1
                current_sum = 0
            current_sum += p[i]
        return count <= k
    
    left = max((x+s-1)//s for x in p)
    right = sum(p)
    ans = right

    while left <= right:
        mid = (left + right) // 2
        if check(mid):
            ans = mid
            right = mid - 1
        else:
            left = mid + 1

    print(ans)

solve()
","0.0"
"2173e6e8-cca6-47c7-8ef6-ea93d3e736f4","n = int(input())
stolbs = list(map(int, input().split()))
stolbs.sort()
# print(stolbs)
result = 0
op = 0
chained = False
for i in range(n - 1):
    if not chained:
        result += stolbs[i + 1] - stolbs[i]
        chained = True
    else:
        try:
            if stolbs[i + 2] - stolbs[i + 1] > stolbs[i + 1] - stolbs[i] and i < n - 3 and stolbs[i + 3] - stolbs[i + 2] < stolbs[i + 2] - stolbs[i + 1]:
                result += stolbs[i + 1] - stolbs[i]
            else:
                chained = False
        except:
            result += stolbs[i + 1] - stolbs[i]
    # if chained:
        # print(stolbs[i], stolbs[i + 1] - stolbs[i], stolbs[i + 1])
print(result)
","0.0"
"2173e6e8-cca6-47c7-8ef6-ea93d3e736f4","n=int(input())
s=input()
k=s.split()
k=[int (x) for x in k]
k.sort()

k.append(9999999999)
d0=k[1]-k[0]
s=d0
for i in range(1,len(k)-1):
    d1=min(k[i]-k[i-1],k[i+1]-k[i])
    if d1!=d0:
        s=s+d1
        d0=d1
    else:
        d0=9999999
print(s)","0.0"
"0718b9a2-e909-4d51-9f4a-a1de2c698eb1","s = input()
for i in range(len(s)):
 if i == len(s) - 1:
  print(s)
  break
 if min(s[i], min(s[i+1:])) == min(s[i+1:]) and s[i] != min(s[i + 1:]):
  print(s[:i] + min(s[i + 1 :])+s[i + 1:s[i+1:].index(min(s[i +1:])) + i + 1] + s[i]+ s[s[i+1:].index(min(s[i + 2:])) + i + 2:])
  break","0.0"
"df2fe73c-bfa4-40e5-b77c-d2ad076197ca","n, k, s=map(int,input().split())
a=list(map(int,input().split()))
q=sum(a)
b=q/k
p=0
e=0
h=[]
for i in range(len(a)):
        e+=a[i]
        if e>b:
            h.append(e)
            e=0
p=max(h)//s
if max(h)%s>0:
    p+=1
print(p)","0.0"
"c4ced8e6-dec6-4f4a-8a79-f5800795a08b","def factors(n):
    if n==1: return [1]
    a=[1,n]
    d=2
    while d*d<n:
        if n%d==0:
            a.append(d)
            a.append(n//d)
        d+=1
    if d*d==n: a.append(d)
    return sorted(a)
n=  int(input())
maxa = n*8 + 9
d = factors(n)
if len(d) & 1 == 0:
    dlina = d[len(d)//2-1]
    shir = d[len(d)//2]
    mina = n + dlina * 4 + shir * 4 + 8
else:
    mina = n + int(n**0.5)*8 + 8
print(mina,maxa)



","0.0"
"c4ced8e6-dec6-4f4a-8a79-f5800795a08b","from math import *
n = int(input())
mx = 9 + (8) * n
mn = 10000
for md in range(1, n+1):
    if n%md == 0:
        o = (md+2)*(n//md+2) + ((md+2)*(n//md+2) - md * (n//md))
        mn = min(o, mn)
print(mn, mx)","0.0"
"0718b9a2-e909-4d51-9f4a-a1de2c698eb1","fam = list(map(ord, input()))
for i in range(len(fam)):
    mn = i+1
    if i+1 == len(fam): break
    for k in range(i+1, len(fam)):
        if fam[k] < fam[mn]:
            mn = k
    if fam[i] > fam[mn]:
        ti = fam[i]
        tmn = fam[mn]
        fam[mn] = ti
        fam[i] = tmn
        break
print(''.join(map(chr, fam)))
","0.0"
"0718b9a2-e909-4d51-9f4a-a1de2c698eb1","fam = list(map(ord, input()))
for i in range(len(fam)):
    mn = i+1
    if i+1 == len(fam): break
    for k in range(i+1, len(fam)):
        if fam[k] < fam[mn]:
            mn = k
    if fam[i] > fam[mn]:
        ti = fam[i]
        tmn = fam[mn]
        fam[mn] = ti
        fam[i] = tmn
        break
print(''.join(map(chr, fam)))
","0.0"
"0718b9a2-e909-4d51-9f4a-a1de2c698eb1","fam = list(map(ord, input()))
for i in range(len(fam)):
    mn = i+1
    if i+1 == len(fam): break
    for k in range(i+1, len(fam)):
        if fam[k] < fam[mn]:
            mn = k
    if fam[i] > fam[mn]:
        ti = fam[i]
        tmn = fam[mn]
        fam[mn] = ti
        fam[i] = tmn
        break
print(''.join(map(chr, fam)))
","0.0"
"0718b9a2-e909-4d51-9f4a-a1de2c698eb1","s = input()
n = len(s)
best_s = list(s)
for i in range(n):
    for j in range(i + 1, n):
        new_s = list(s)
        new_s[i], new_s[j] = new_s[j], new_s[i]
        if new_s < best_s:
            best_s = new_s

print("""".join(best_s))","0.0"
"49c03922-c57e-464a-8191-9ebef2615808","q,w,e=map(int,input().split())

print(e//w+e//q+2)","0.0"
"0718b9a2-e909-4d51-9f4a-a1de2c698eb1","a=list(input())
for i in range(len(a)):
    m = min(a[i:], key=ord)
    if a[i] != m:
        ind = a[i:].index(m)+i
        a[i], a[ind] = a[ind], a[i]
        print(*a, sep='')
        break
else:
    print(*a, sep='')
","0.0"
"4d25e12d-091c-4350-a744-93b5301dbe02","n = int(input())
c = 0
b = 0
a = list(map(int, input().split()))

while len(a)>1:
    b += max(a[0], a[-1])
    if a[0] > a[-1]:
        a.pop(0)
    else:
        a.pop(-1)
    
    c += max(a[0], a[-1])
    if a[0] > a[-1]:
        a.pop(0)
    else:
        a.pop(-1)
    
if len(a) == 0:
    print(b,c)
else:
    b += a[0]
    print(b,c)","0.0"
"b316f513-f142-45d3-a702-cc3208e6aa54","n, a, b = map(int, input().split())
if b < n or a < n:
    print(""NO"")
    exit(0)
print(""YES"")","0.0"
"2173e6e8-cca6-47c7-8ef6-ea93d3e736f4","n=int(input())
s=input()
k=s.split()
k=[int (x) for x in k]
k.sort()

k.append(9999999999)
d0=k[1]-k[0]
s=d0
for i in range(1,len(k)-1):
    d1=min(k[i]-k[i-1],k[i+1]-k[i])
    d2=k[i]-k[i-1]
    d3=k[i+1]-k[i]
    if d2!=d0:
        s=s+d1
        d0=d1
    else:
        d0=9999999
print(s)","0.0"
"4d25e12d-091c-4350-a744-93b5301dbe02","q=int(input())
w=list(map(int,input().split()))
a,s=0,0
for i in range(q):
    if i%2==0:
        if w[0]>w[-1]:
            a+=w[0]
            w=w[1:]
        else:
            a+=w[-1]
            w=w[:-1]
    else:
        if w[0]>w[-1]:
            s+=w[0]
            w=w[1:]
        else:
            s+=w[-1]
            w=w[:-1]
print(a,s)
","0.0"
"2a42d873-b1fe-4256-a488-91db4eaa8d9f","n=list(input())
d=list(input())
if max(d)>min(n):
    for i in range(len(n)):
        if n[i]<max(d):
            n[i]=max(d)
            d.pop(d.index(max(d)))
print("""".join(n))","0.0"
"49c03922-c57e-464a-8191-9ebef2615808","a, b, c = map(int, input().split())
if c > a and c > b:
    print(c //b + 1 + c// a + 1)
elif a == b == c:
    print(4)
else:
    print(2)","0.0"
"0718b9a2-e909-4d51-9f4a-a1de2c698eb1","a=list(input())
for i in range(len(a)):
    m = min(a[i:], key=ord)
    if a[i] != m:
        ind = ''.join(a[i:]).rfind(m)+i
        a[i], a[ind] = a[ind], a[i]
        print(*a, sep='')
        break
else:
    print(*a, sep='')
","0.0"
"2173e6e8-cca6-47c7-8ef6-ea93d3e736f4","n = int(input())
stolbs = list(map(int, input().split()))
stolbs.sort()
# print(stolbs)
result = 0
op = 0
chained = False
if n <= 3:
    print(stolbs[-1] - stolbs[0])
    exit()
elif n == 4:
    print(stolbs[1] - stolbs[0] + stolbs[3] - stolbs[2])
    exit()
for i in range(n - 1):
    if not chained:
        result += stolbs[i + 1] - stolbs[i]
        chained = True
    else:
        try:
            if stolbs[i + 2] - stolbs[i + 1] > stolbs[i + 1] - stolbs[i] and i < n - 3 and stolbs[i + 3] - stolbs[i + 2] < stolbs[i + 2] - stolbs[i + 1]:
                result += stolbs[i + 1] - stolbs[i]
            else:
                chained = False
        except:
            result += stolbs[i + 1] - stolbs[i]
    # if chained:
        # print(stolbs[i], stolbs[i + 1] - stolbs[i], stolbs[i + 1])
print(result)
","0.0"
"4a5ca4da-8ce7-4613-b0d6-23c6ebb491ed","n=int(input())
sp=sorted([i for i in map(int,input().split())])
st=set()
p = [0]*1000000
for i in sp:
    st.add(i)
for el in sp:
    p[el-1] +=1


d = 1
k=len(st)
v=0
print(max(p),k)","0.0"
"49c03922-c57e-464a-8191-9ebef2615808","a, b, c = map(int, input().split())
if c > a and c > b:
    print(c //b + 1 + c// a + 1)
elif a == b == c:
    print(4)
else:
    print(2)
","0.0"
"2173e6e8-cca6-47c7-8ef6-ea93d3e736f4","n,*a=map(int,open(0).read().split())
a=sorted(a)
d=[0]*n
d[0]=1e9
d[1]=a[1]-a[0]
for i in range(2,n):
    d[i]=min(d[i-1]+a[i]-a[i-1],d[i-2]+a[i]-a[i-1])
print(int(d[-1]))
","0.0"
"2a42d873-b1fe-4256-a488-91db4eaa8d9f","n=list(input())
d=sorted(list(input()))
if max(d)>min(n):
    p=-1
    for i in range(len(n)):
        if n[i]<d[p]:
            n[i]=d[p]
            p-=1
print("""".join(n))","0.0"
"48f237db-e593-4be6-b3f9-10757a1d07ec","a=int(input())
print(a)","0.0"
"190516a0-6ed3-4c42-9f36-dc481a3adb70","a=int(input())
b=int(input())
print(a+b)","0.0"
